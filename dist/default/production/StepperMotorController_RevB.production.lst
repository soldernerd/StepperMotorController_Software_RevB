

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 05 16:20:44 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=2
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=2
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=2
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	text241,global,reloc=2,class=CODE,delta=1
   262                           	psect	text242,global,reloc=2,class=CODE,delta=1
   263                           	psect	text243,global,reloc=2,class=CODE,delta=1
   264                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   265                           	psect	text244,global,reloc=2,class=CODE,delta=1
   266                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   267                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   268                           	dabs	1,0x600,512,_msd_buffer
   269                           	dabs	1,0xD00,48,_BDT
   270                           	dabs	1,0xD40,31,_msd_cbw
   271                           	dabs	1,0xD80,13,_msd_csw
   272                           	dabs	1,0xD38,8,_CtrlTrfData
   273                           	dabs	1,0xD30,8,_SetupPkt
   274  0000                     
   275                           ; Version 2.00
   276                           ; Generated 27/05/2018 GMT
   277                           ; 
   278                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   279                           ; All rights reserved.
   280                           ; 
   281                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   282                           ; 
   283                           ; Redistribution and use in source and binary forms, with or without modification, are
   284                           ; permitted provided that the following conditions are met:
   285                           ; 
   286                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   287                           ;        conditions and the following disclaimer.
   288                           ; 
   289                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   290                           ;        of conditions and the following disclaimer in the documentation and/or other
   291                           ;        materials provided with the distribution.
   292                           ; 
   293                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   294                           ;        software without specific prior written permission.
   295                           ; 
   296                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   297                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   298                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   299                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   300                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   301                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   302                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   303                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   304                           ; 
   305                           ; 
   306                           ; Code-generator required, PIC18F47J53 Definitions
   307                           ; 
   308                           ; SFR Addresses
   309  0000                     
   310                           	psect	idataBANK2
   311  015456                     __pidataBANK2:
   312                           	opt stack 0
   313                           
   314                           ;initializer for _LUN
   315  015456  24                 	db	low _ExternalFlash_MediaInitialize
   316  015457  5F                 	db	high _ExternalFlash_MediaInitialize
   317  015458  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   318  015459  1C                 	db	low _ExternalFlash_CapacityRead
   319  01545A  60                 	db	high _ExternalFlash_CapacityRead
   320  01545B  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   321  01545C  98                 	db	low _ExternalFlash_SectorSizeRead
   322  01545D  60                 	db	high _ExternalFlash_SectorSizeRead
   323  01545E  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   324  01545F  DA                 	db	low _ExternalFlash_MediaDetect
   325  015460  60                 	db	high _ExternalFlash_MediaDetect
   326  015461  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   327  015462  26                 	db	low _ExternalFlash_SectorRead
   328  015463  5A                 	db	high _ExternalFlash_SectorRead
   329  015464  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   330  015465  24                 	db	low _ExternalFlash_WriteProtectStateGet
   331  015466  61                 	db	high _ExternalFlash_WriteProtectStateGet
   332  015467  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   333  015468  F2                 	db	low _ExternalFlash_SectorWrite
   334  015469  59                 	db	high _ExternalFlash_SectorWrite
   335  01546A  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   336  01546B  00                 	db	0
   337  01546C  00                 	db	0
   338  01546D  00                 	db	0
   339  01546E  00                 	db	0
   340  01546F  00                 	db	0
   341  015470  00                 	db	0
   342  015471  00                 	db	0
   343  015472  00                 	db	0
   344                           
   345                           ;initializer for i2c_display_init@F7093
   346  015473  3A                 	db	58
   347  015474  1E                 	db	30
   348  015475  39                 	db	57
   349  015476  0C                 	db	12
   350  015477  74                 	db	116
   351  015478  5C                 	db	92
   352  015479  6D                 	db	109
   353  01547A  0C                 	db	12
   354  01547B  01                 	db	1
   355                           
   356                           ;initializer for __i2c_display_send_init_sequence@F7090
   357  01547C  3A                 	db	58
   358  01547D  1E                 	db	30
   359  01547E  39                 	db	57
   360  01547F  0C                 	db	12
   361  015480  74                 	db	116
   362  015481  5C                 	db	92
   363  015482  6D                 	db	109
   364  015483  0C                 	db	12
   365  015484  01                 	db	1
   366                           
   367                           ;initializer for _tx_buf
   368  015485  01                 	db	1
   369  015486  02                 	db	2
   370  015487  03                 	db	3
   371  015488  04                 	db	4
   372  015489  05                 	db	5
   373  01548A  06                 	db	6
   374  01548B  07                 	db	7
   375  01548C  08                 	db	8
   376                           
   377                           ;initializer for _configFile_used_name
   378  01548D  55                 	db	85
   379  01548E  53                 	db	83
   380  01548F  45                 	db	69
   381  015490  44                 	db	68
   382  015491  43                 	db	67
   383  015492  4F                 	db	79
   384  015493  4E                 	db	78
   385  015494  46                 	db	70
   386                           
   387                           ;initializer for _configFile_name
   388  015495  43                 	db	67
   389  015496  4F                 	db	79
   390  015497  4E                 	db	78
   391  015498  46                 	db	70
   392  015499  49                 	db	73
   393  01549A  47                 	db	71
   394  01549B  20                 	db	32
   395  01549C  20                 	db	32
   396                           
   397                           ;initializer for _configFile_used_extention
   398  01549D  54                 	db	84
   399  01549E  58                 	db	88
   400  01549F  54                 	db	84
   401                           
   402                           ;initializer for _configFile_extention
   403  0154A0  54                 	db	84
   404  0154A1  58                 	db	88
   405  0154A2  54                 	db	84
   406                           
   407                           	psect	idataBANK4
   408  015276                     __pidataBANK4:
   409                           	opt stack 0
   410                           
   411                           ;initializer for _dc_startup
   412  015276  2A                 	db	42
   413  015277  20                 	db	32
   414  015278  20                 	db	32
   415  015279  53                 	db	83
   416  01527A  74                 	db	116
   417  01527B  65                 	db	101
   418  01527C  70                 	db	112
   419  01527D  70                 	db	112
   420  01527E  65                 	db	101
   421  01527F  72                 	db	114
   422  015280  20                 	db	32
   423  015281  4D                 	db	77
   424  015282  6F                 	db	111
   425  015283  74                 	db	116
   426  015284  6F                 	db	111
   427  015285  72                 	db	114
   428  015286  20                 	db	32
   429  015287  20                 	db	32
   430  015288  20                 	db	32
   431  015289  2A                 	db	42
   432  01528A  2A                 	db	42
   433  01528B  20                 	db	32
   434  01528C  20                 	db	32
   435  01528D  20                 	db	32
   436  01528E  20                 	db	32
   437  01528F  43                 	db	67
   438  015290  6F                 	db	111
   439  015291  6E                 	db	110
   440  015292  74                 	db	116
   441  015293  72                 	db	114
   442  015294  6F                 	db	111
   443  015295  6C                 	db	108
   444  015296  6C                 	db	108
   445  015297  65                 	db	101
   446  015298  72                 	db	114
   447  015299  20                 	db	32
   448  01529A  20                 	db	32
   449  01529B  20                 	db	32
   450  01529C  20                 	db	32
   451  01529D  2A                 	db	42
   452  01529E  2A                 	db	42
   453  01529F  20                 	db	32
   454  0152A0  20                 	db	32
   455  0152A1  20                 	db	32
   456  0152A2  20                 	db	32
   457  0152A3  76                 	db	118
   458  0152A4  20                 	db	32
   459  0152A5  20                 	db	32
   460  0152A6  20                 	db	32
   461  0152A7  20                 	db	32
   462  0152A8  20                 	db	32
   463  0152A9  20                 	db	32
   464  0152AA  20                 	db	32
   465  0152AB  20                 	db	32
   466  0152AC  20                 	db	32
   467  0152AD  20                 	db	32
   468  0152AE  20                 	db	32
   469  0152AF  20                 	db	32
   470  0152B0  20                 	db	32
   471  0152B1  2A                 	db	42
   472  0152B2  2A                 	db	42
   473  0152B3  20                 	db	32
   474  0152B4  20                 	db	32
   475  0152B5  73                 	db	115
   476  0152B6  6F                 	db	111
   477  0152B7  6C                 	db	108
   478  0152B8  64                 	db	100
   479  0152B9  65                 	db	101
   480  0152BA  72                 	db	114
   481  0152BB  6E                 	db	110
   482  0152BC  65                 	db	101
   483  0152BD  72                 	db	114
   484  0152BE  64                 	db	100
   485  0152BF  2E                 	db	46
   486  0152C0  63                 	db	99
   487  0152C1  6F                 	db	111
   488  0152C2  6D                 	db	109
   489  0152C3  20                 	db	32
   490  0152C4  20                 	db	32
   491  0152C5  2A                 	db	42
   492                           
   493                           	psect	mediumconst
   494  009092                     __pmediumconst:
   495                           	opt stack 0
   496  009092  00                 	db	0
   497  009093                     _motor_speed_lookup:
   498                           	opt stack 0
   499  009093  0008               	dw	8
   500  009095  000C               	dw	12
   501  009097  0010               	dw	16
   502  009099  0013               	dw	19
   503  00909B  0016               	dw	22
   504  00909D  0019               	dw	25
   505  00909F  001C               	dw	28
   506  0090A1  001E               	dw	30
   507  0090A3  0021               	dw	33
   508  0090A5  0023               	dw	35
   509  0090A7  0026               	dw	38
   510  0090A9  0028               	dw	40
   511  0090AB  002A               	dw	42
   512  0090AD  002C               	dw	44
   513  0090AF  002E               	dw	46
   514  0090B1  0030               	dw	48
   515  0090B3  0032               	dw	50
   516  0090B5  0034               	dw	52
   517  0090B7  0036               	dw	54
   518  0090B9  0038               	dw	56
   519  0090BB  003A               	dw	58
   520  0090BD  003C               	dw	60
   521  0090BF  003D               	dw	61
   522  0090C1  003F               	dw	63
   523  0090C3  0041               	dw	65
   524  0090C5  0043               	dw	67
   525  0090C7  0045               	dw	69
   526  0090C9  0046               	dw	70
   527  0090CB  0048               	dw	72
   528  0090CD  0049               	dw	73
   529  0090CF  004B               	dw	75
   530  0090D1  004D               	dw	77
   531  0090D3  004E               	dw	78
   532  0090D5  0050               	dw	80
   533  0090D7  0051               	dw	81
   534  0090D9  0053               	dw	83
   535  0090DB  0054               	dw	84
   536  0090DD  0056               	dw	86
   537  0090DF  0057               	dw	87
   538  0090E1  0059               	dw	89
   539  0090E3  005A               	dw	90
   540  0090E5  005C               	dw	92
   541  0090E7  005D               	dw	93
   542  0090E9  005F               	dw	95
   543  0090EB  0060               	dw	96
   544  0090ED  0062               	dw	98
   545  0090EF  0063               	dw	99
   546  0090F1  0064               	dw	100
   547  0090F3  0066               	dw	102
   548  0090F5  0067               	dw	103
   549  0090F7  0069               	dw	105
   550  0090F9  006A               	dw	106
   551  0090FB  006C               	dw	108
   552  0090FD  006D               	dw	109
   553  0090FF  006E               	dw	110
   554  009101  0070               	dw	112
   555  009103  0071               	dw	113
   556  009105  0072               	dw	114
   557  009107  0073               	dw	115
   558  009109  0074               	dw	116
   559  00910B  0076               	dw	118
   560  00910D  0078               	dw	120
   561  00910F  0079               	dw	121
   562  009111  007A               	dw	122
   563  009113  007B               	dw	123
   564  009115  007D               	dw	125
   565  009117  007E               	dw	126
   566  009119  007F               	dw	127
   567  00911B  0082               	dw	130
   568  00911D  0085               	dw	133
   569  00911F  0087               	dw	135
   570  009121  008A               	dw	138
   571  009123  008C               	dw	140
   572  009125  008F               	dw	143
   573  009127  0091               	dw	145
   574  009129  0092               	dw	146
   575  00912B  0094               	dw	148
   576  00912D  0098               	dw	152
   577  00912F  009A               	dw	154
   578  009131  009C               	dw	156
   579  009133  009E               	dw	158
   580  009135  00A1               	dw	161
   581  009137  00A3               	dw	163
   582  009139  00A5               	dw	165
   583  00913B  00A7               	dw	167
   584  00913D  00AA               	dw	170
   585  00913F  00AC               	dw	172
   586  009141  00AF               	dw	175
   587  009143  00B2               	dw	178
   588  009145  00B4               	dw	180
   589  009147  00B7               	dw	183
   590  009149  00B8               	dw	184
   591  00914B  00BA               	dw	186
   592  00914D  00BC               	dw	188
   593  00914F  00BE               	dw	190
   594  009151  00C0               	dw	192
   595  009153  00C3               	dw	195
   596  009155  00C4               	dw	196
   597  009157  00C6               	dw	198
   598  009159  00C8               	dw	200
   599  00915B  00CA               	dw	202
   600  00915D  00CC               	dw	204
   601  00915F  00CE               	dw	206
   602  009161  00D0               	dw	208
   603  009163  00D2               	dw	210
   604  009165  00D4               	dw	212
   605  009167  00D6               	dw	214
   606  009169  00D8               	dw	216
   607  00916B  00D9               	dw	217
   608  00916D  00DB               	dw	219
   609  00916F  00DD               	dw	221
   610  009171  00DF               	dw	223
   611  009173  00E1               	dw	225
   612  009175  00E2               	dw	226
   613  009177  00E5               	dw	229
   614  009179  00E7               	dw	231
   615  00917B  00E8               	dw	232
   616  00917D  00EA               	dw	234
   617  00917F  00EC               	dw	236
   618  009181  00EE               	dw	238
   619  009183  00EF               	dw	239
   620  009185  00F2               	dw	242
   621  009187  00F3               	dw	243
   622  009189  00F5               	dw	245
   623  00918B  00F7               	dw	247
   624  00918D  00F8               	dw	248
   625  00918F  00FB               	dw	251
   626  009191  00FD               	dw	253
   627  009193  0100               	dw	256
   628  009195  0103               	dw	259
   629  009197  0104               	dw	260
   630  009199  0107               	dw	263
   631  00919B  010A               	dw	266
   632  00919D  010C               	dw	268
   633  00919F  010F               	dw	271
   634  0091A1  0112               	dw	274
   635  0091A3  0114               	dw	276
   636  0091A5  0117               	dw	279
   637  0091A7  0119               	dw	281
   638  0091A9  011C               	dw	284
   639  0091AB  011E               	dw	286
   640  0091AD  0121               	dw	289
   641  0091AF  0123               	dw	291
   642  0091B1  0125               	dw	293
   643  0091B3  0129               	dw	297
   644  0091B5  012B               	dw	299
   645  0091B7  012C               	dw	300
   646  0091B9  012E               	dw	302
   647  0091BB  0132               	dw	306
   648  0091BD  0134               	dw	308
   649  0091BF  0136               	dw	310
   650  0091C1  0138               	dw	312
   651  0091C3  013B               	dw	315
   652  0091C5  013D               	dw	317
   653  0091C7  013F               	dw	319
   654  0091C9  0143               	dw	323
   655  0091CB  0146               	dw	326
   656  0091CD  0148               	dw	328
   657  0091CF  014A               	dw	330
   658  0091D1  014C               	dw	332
   659  0091D3  014F               	dw	335
   660  0091D5  0151               	dw	337
   661  0091D7  0154               	dw	340
   662  0091D9  0156               	dw	342
   663  0091DB  0159               	dw	345
   664  0091DD  015B               	dw	347
   665  0091DF  015E               	dw	350
   666  0091E1  0160               	dw	352
   667  0091E3  0163               	dw	355
   668  0091E5  0166               	dw	358
   669  0091E7  0169               	dw	361
   670  0091E9  016B               	dw	363
   671  0091EB  016E               	dw	366
   672  0091ED  0171               	dw	369
   673  0091EF  0174               	dw	372
   674  0091F1  0177               	dw	375
   675  0091F3  017A               	dw	378
   676  0091F5  017D               	dw	381
   677  0091F7  0180               	dw	384
   678  0091F9  0183               	dw	387
   679  0091FB  0187               	dw	391
   680  0091FD  018A               	dw	394
   681  0091FF  018D               	dw	397
   682  009201  0191               	dw	401
   683  009203  0194               	dw	404
   684  009205  0198               	dw	408
   685  009207  019B               	dw	411
   686  009209  019F               	dw	415
   687  00920B  01A3               	dw	419
   688  00920D  01A6               	dw	422
   689  00920F  01AA               	dw	426
   690  009211  01AE               	dw	430
   691  009213  01B2               	dw	434
   692  009215  01B6               	dw	438
   693  009217  01BA               	dw	442
   694  009219  01BE               	dw	446
   695  00921B  01C3               	dw	451
   696  00921D  01C7               	dw	455
   697  00921F  01CC               	dw	460
   698  009221  01D0               	dw	464
   699  009223  01D5               	dw	469
   700  009225  01D9               	dw	473
   701  009227  01DE               	dw	478
   702  009229  01E3               	dw	483
   703  00922B  01E8               	dw	488
   704  00922D  01ED               	dw	493
   705  00922F  01F3               	dw	499
   706  009231  01F8               	dw	504
   707  009233  01FE               	dw	510
   708  009235  0203               	dw	515
   709  009237  0209               	dw	521
   710  009239  020F               	dw	527
   711  00923B  0215               	dw	533
   712  00923D  021B               	dw	539
   713  00923F  0221               	dw	545
   714  009241  0227               	dw	551
   715  009243  022E               	dw	558
   716  009245  0235               	dw	565
   717  009247  023C               	dw	572
   718  009249  0243               	dw	579
   719  00924B  024A               	dw	586
   720  00924D  0251               	dw	593
   721  00924F  0259               	dw	601
   722  009251  0261               	dw	609
   723  009253  0269               	dw	617
   724  009255  0271               	dw	625
   725  009257  0279               	dw	633
   726  009259  0282               	dw	642
   727  00925B  028B               	dw	651
   728  00925D  0294               	dw	660
   729  00925F  029E               	dw	670
   730  009261  02A7               	dw	679
   731  009263  02B1               	dw	689
   732  009265  02BC               	dw	700
   733  009267  02C6               	dw	710
   734  009269  02D1               	dw	721
   735  00926B  02DC               	dw	732
   736  00926D  02DC               	dw	732
   737  00926F  02DF               	dw	735
   738  009271  02E2               	dw	738
   739  009273  02E5               	dw	741
   740  009275  02E8               	dw	744
   741  009277  02EB               	dw	747
   742  009279  02EE               	dw	750
   743  00927B  02F1               	dw	753
   744  00927D  02F4               	dw	756
   745  00927F  02F7               	dw	759
   746  009281  02FA               	dw	762
   747  009283  02FD               	dw	765
   748  009285  0300               	dw	768
   749  009287  0304               	dw	772
   750  009289  0307               	dw	775
   751  00928B  030A               	dw	778
   752  00928D  030D               	dw	781
   753  00928F  0311               	dw	785
   754  009291  0314               	dw	788
   755  009293  0317               	dw	791
   756  009295  031A               	dw	794
   757  009297  031E               	dw	798
   758  009299  0321               	dw	801
   759  00929B  0325               	dw	805
   760  00929D  0328               	dw	808
   761  00929F  032C               	dw	812
   762  0092A1  032F               	dw	815
   763  0092A3  0333               	dw	819
   764  0092A5  0336               	dw	822
   765  0092A7  033A               	dw	826
   766  0092A9  033E               	dw	830
   767  0092AB  0341               	dw	833
   768  0092AD  0345               	dw	837
   769  0092AF  0349               	dw	841
   770  0092B1  034D               	dw	845
   771  0092B3  0350               	dw	848
   772  0092B5  0354               	dw	852
   773  0092B7  0358               	dw	856
   774  0092B9  035C               	dw	860
   775  0092BB  0360               	dw	864
   776  0092BD  0364               	dw	868
   777  0092BF  0368               	dw	872
   778  0092C1  036C               	dw	876
   779  0092C3  0370               	dw	880
   780  0092C5  0374               	dw	884
   781  0092C7  0379               	dw	889
   782  0092C9  037D               	dw	893
   783  0092CB  0381               	dw	897
   784  0092CD  0385               	dw	901
   785  0092CF  038A               	dw	906
   786  0092D1  038E               	dw	910
   787  0092D3  0393               	dw	915
   788  0092D5  0397               	dw	919
   789  0092D7  039C               	dw	924
   790  0092D9  03A0               	dw	928
   791  0092DB  03A5               	dw	933
   792  0092DD  03AA               	dw	938
   793  0092DF  03AE               	dw	942
   794  0092E1  03B3               	dw	947
   795  0092E3  03B8               	dw	952
   796  0092E5  03BD               	dw	957
   797  0092E7  03C2               	dw	962
   798  0092E9  03C6               	dw	966
   799  0092EB  03CC               	dw	972
   800  0092ED  03D1               	dw	977
   801  0092EF  03D6               	dw	982
   802  0092F1  03DB               	dw	987
   803  0092F3  03E0               	dw	992
   804  0092F5  03E5               	dw	997
   805  0092F7  03EB               	dw	1003
   806  0092F9  03F0               	dw	1008
   807  0092FB  03F6               	dw	1014
   808  0092FD  03FB               	dw	1019
   809  0092FF  0401               	dw	1025
   810  009301  0406               	dw	1030
   811  009303  040C               	dw	1036
   812  009305  0412               	dw	1042
   813  009307  0417               	dw	1047
   814  009309  041D               	dw	1053
   815  00930B  0423               	dw	1059
   816  00930D  0429               	dw	1065
   817  00930F  042F               	dw	1071
   818  009311  0436               	dw	1078
   819  009313  043C               	dw	1084
   820  009315  0442               	dw	1090
   821  009317  0448               	dw	1096
   822  009319  044F               	dw	1103
   823  00931B  0455               	dw	1109
   824  00931D  045C               	dw	1116
   825  00931F  0463               	dw	1123
   826  009321  046A               	dw	1130
   827  009323  0470               	dw	1136
   828  009325  0477               	dw	1143
   829  009327  047E               	dw	1150
   830  009329  0485               	dw	1157
   831  00932B  048D               	dw	1165
   832  00932D  0494               	dw	1172
   833  00932F  049B               	dw	1179
   834  009331  04A3               	dw	1187
   835  009333  04AA               	dw	1194
   836  009335  04B2               	dw	1202
   837  009337  04BA               	dw	1210
   838  009339  04C2               	dw	1218
   839  00933B  04C9               	dw	1225
   840  00933D  04D2               	dw	1234
   841  00933F  04DA               	dw	1242
   842  009341  04E2               	dw	1250
   843  009343  04EA               	dw	1258
   844  009345  04F3               	dw	1267
   845  009347  04FC               	dw	1276
   846  009349  0504               	dw	1284
   847  00934B  050D               	dw	1293
   848  00934D  0516               	dw	1302
   849  00934F  051F               	dw	1311
   850  009351  0528               	dw	1320
   851  009353  0532               	dw	1330
   852  009355  053B               	dw	1339
   853  009357  0545               	dw	1349
   854  009359  054F               	dw	1359
   855  00935B  0559               	dw	1369
   856  00935D  0563               	dw	1379
   857  00935F  056D               	dw	1389
   858  009361  0577               	dw	1399
   859  009363  0582               	dw	1410
   860  009365  058C               	dw	1420
   861  009367  0597               	dw	1431
   862  009369  05A2               	dw	1442
   863  00936B  05AD               	dw	1453
   864  00936D  05B9               	dw	1465
   865  00936F  05C4               	dw	1476
   866  009371  05D0               	dw	1488
   867  009373  05DC               	dw	1500
   868  009375  05E8               	dw	1512
   869  009377  05F4               	dw	1524
   870  009379  0601               	dw	1537
   871  00937B  060E               	dw	1550
   872  00937D  061A               	dw	1562
   873  00937F  0628               	dw	1576
   874  009381  0635               	dw	1589
   875  009383  0643               	dw	1603
   876  009385  0650               	dw	1616
   877  009387  065E               	dw	1630
   878  009389  066D               	dw	1645
   879  00938B  067B               	dw	1659
   880  00938D  068A               	dw	1674
   881  00938F  0699               	dw	1689
   882  009391  06A9               	dw	1705
   883  009393  06B8               	dw	1720
   884  009395  06C8               	dw	1736
   885  009397  06D8               	dw	1752
   886  009399  06E9               	dw	1769
   887  00939B  06FA               	dw	1786
   888  00939D  070B               	dw	1803
   889  00939F  071C               	dw	1820
   890  0093A1  072E               	dw	1838
   891  0093A3  0740               	dw	1856
   892  0093A5  0753               	dw	1875
   893  0093A7  0766               	dw	1894
   894  0093A9  0779               	dw	1913
   895  0093AB  078D               	dw	1933
   896  0093AD  07A1               	dw	1953
   897  0093AF  07B6               	dw	1974
   898  0093B1  07CB               	dw	1995
   899  0093B3  07E0               	dw	2016
   900  0093B5  07F6               	dw	2038
   901  0093B7  080C               	dw	2060
   902  0093B9  0823               	dw	2083
   903  0093BB  083B               	dw	2107
   904  0093BD  0853               	dw	2131
   905  0093BF  086B               	dw	2155
   906  0093C1  0884               	dw	2180
   907  0093C3  089E               	dw	2206
   908  0093C5  08B8               	dw	2232
   909  0093C7  08D3               	dw	2259
   910  0093C9  08EF               	dw	2287
   911  0093CB  090B               	dw	2315
   912  0093CD  0928               	dw	2344
   913  0093CF  0945               	dw	2373
   914  0093D1  0964               	dw	2404
   915  0093D3  0983               	dw	2435
   916  0093D5  09A3               	dw	2467
   917  0093D7  09C4               	dw	2500
   918  0093D9  09E6               	dw	2534
   919  0093DB  0A08               	dw	2568
   920  0093DD  0A2C               	dw	2604
   921  0093DF  0A51               	dw	2641
   922  0093E1  0A77               	dw	2679
   923  0093E3  0A9D               	dw	2717
   924  0093E5  0AC5               	dw	2757
   925  0093E7  0AEF               	dw	2799
   926  0093E9  0B19               	dw	2841
   927  0093EB  0B45               	dw	2885
   928  0093ED  0B72               	dw	2930
   929  0093EF  0B72               	dw	2930
   930  0093F1  0B7D               	dw	2941
   931  0093F3  0B89               	dw	2953
   932  0093F5  0B94               	dw	2964
   933  0093F7  0BA0               	dw	2976
   934  0093F9  0BAC               	dw	2988
   935  0093FB  0BB8               	dw	3000
   936  0093FD  0BC4               	dw	3012
   937  0093FF  0BD0               	dw	3024
   938  009401  0BDC               	dw	3036
   939  009403  0BE9               	dw	3049
   940  009405  0BF5               	dw	3061
   941  009407  0C02               	dw	3074
   942  009409  0C0E               	dw	3086
   943  00940B  0C1B               	dw	3099
   944  00940D  0C28               	dw	3112
   945  00940F  0C35               	dw	3125
   946  009411  0C42               	dw	3138
   947  009413  0C4F               	dw	3151
   948  009415  0C5D               	dw	3165
   949  009417  0C6A               	dw	3178
   950  009419  0C77               	dw	3191
   951  00941B  0C85               	dw	3205
   952  00941D  0C93               	dw	3219
   953  00941F  0CA1               	dw	3233
   954  009421  0CAF               	dw	3247
   955  009423  0CBD               	dw	3261
   956  009425  0CCB               	dw	3275
   957  009427  0CD9               	dw	3289
   958  009429  0CE8               	dw	3304
   959  00942B  0CF7               	dw	3319
   960  00942D  0D05               	dw	3333
   961  00942F  0D14               	dw	3348
   962  009431  0D23               	dw	3363
   963  009433  0D32               	dw	3378
   964  009435  0D42               	dw	3394
   965  009437  0D51               	dw	3409
   966  009439  0D61               	dw	3425
   967  00943B  0D70               	dw	3440
   968  00943D  0D80               	dw	3456
   969  00943F  0D90               	dw	3472
   970  009441  0DA0               	dw	3488
   971  009443  0DB1               	dw	3505
   972  009445  0DC1               	dw	3521
   973  009447  0DD2               	dw	3538
   974  009449  0DE3               	dw	3555
   975  00944B  0DF3               	dw	3571
   976  00944D  0E05               	dw	3589
   977  00944F  0E16               	dw	3606
   978  009451  0E27               	dw	3623
   979  009453  0E39               	dw	3641
   980  009455  0E4B               	dw	3659
   981  009457  0E5C               	dw	3676
   982  009459  0E6F               	dw	3695
   983  00945B  0E81               	dw	3713
   984  00945D  0E93               	dw	3731
   985  00945F  0EA6               	dw	3750
   986  009461                     __end_of_motor_speed_lookup:
   987                           	opt stack 0
   988  009461                     _motor_steps_lookup:
   989                           	opt stack 0
   990  009461  0001               	dw	1
   991  009463  0002               	dw	2
   992  009465  0003               	dw	3
   993  009467  0004               	dw	4
   994  009469  0005               	dw	5
   995  00946B  0006               	dw	6
   996  00946D  0007               	dw	7
   997  00946F  0008               	dw	8
   998  009471  0009               	dw	9
   999  009473  000A               	dw	10
  1000  009475  000B               	dw	11
  1001  009477  000C               	dw	12
  1002  009479  000D               	dw	13
  1003  00947B  000E               	dw	14
  1004  00947D  000F               	dw	15
  1005  00947F  0010               	dw	16
  1006  009481  0011               	dw	17
  1007  009483  0012               	dw	18
  1008  009485  0013               	dw	19
  1009  009487  0014               	dw	20
  1010  009489  0015               	dw	21
  1011  00948B  0016               	dw	22
  1012  00948D  0017               	dw	23
  1013  00948F  0018               	dw	24
  1014  009491  0019               	dw	25
  1015  009493  001A               	dw	26
  1016  009495  001B               	dw	27
  1017  009497  001C               	dw	28
  1018  009499  001D               	dw	29
  1019  00949B  001E               	dw	30
  1020  00949D  001F               	dw	31
  1021  00949F  0020               	dw	32
  1022  0094A1  0021               	dw	33
  1023  0094A3  0022               	dw	34
  1024  0094A5  0023               	dw	35
  1025  0094A7  0024               	dw	36
  1026  0094A9  0025               	dw	37
  1027  0094AB  0026               	dw	38
  1028  0094AD  0027               	dw	39
  1029  0094AF  0028               	dw	40
  1030  0094B1  0029               	dw	41
  1031  0094B3  002A               	dw	42
  1032  0094B5  002B               	dw	43
  1033  0094B7  002C               	dw	44
  1034  0094B9  002D               	dw	45
  1035  0094BB  002E               	dw	46
  1036  0094BD  002F               	dw	47
  1037  0094BF  0030               	dw	48
  1038  0094C1  0031               	dw	49
  1039  0094C3  0032               	dw	50
  1040  0094C5  0033               	dw	51
  1041  0094C7  0034               	dw	52
  1042  0094C9  0035               	dw	53
  1043  0094CB  0036               	dw	54
  1044  0094CD  0037               	dw	55
  1045  0094CF  0038               	dw	56
  1046  0094D1  0039               	dw	57
  1047  0094D3  003A               	dw	58
  1048  0094D5  003B               	dw	59
  1049  0094D7  003C               	dw	60
  1050  0094D9  003D               	dw	61
  1051  0094DB  003E               	dw	62
  1052  0094DD  003F               	dw	63
  1053  0094DF  0040               	dw	64
  1054  0094E1  0041               	dw	65
  1055  0094E3  0042               	dw	66
  1056  0094E5  0043               	dw	67
  1057  0094E7  0045               	dw	69
  1058  0094E9  0047               	dw	71
  1059  0094EB  0049               	dw	73
  1060  0094ED  004B               	dw	75
  1061  0094EF  004D               	dw	77
  1062  0094F1  004F               	dw	79
  1063  0094F3  0051               	dw	81
  1064  0094F5  0053               	dw	83
  1065  0094F7  0055               	dw	85
  1066  0094F9  0057               	dw	87
  1067  0094FB  0059               	dw	89
  1068  0094FD  005B               	dw	91
  1069  0094FF  005D               	dw	93
  1070  009501  005F               	dw	95
  1071  009503  0061               	dw	97
  1072  009505  0063               	dw	99
  1073  009507  0065               	dw	101
  1074  009509  0067               	dw	103
  1075  00950B  0069               	dw	105
  1076  00950D  006B               	dw	107
  1077  00950F  006E               	dw	110
  1078  009511  0070               	dw	112
  1079  009513  0073               	dw	115
  1080  009515  0075               	dw	117
  1081  009517  0077               	dw	119
  1082  009519  0079               	dw	121
  1083  00951B  007B               	dw	123
  1084  00951D  007D               	dw	125
  1085  00951F  007F               	dw	127
  1086  009521  0081               	dw	129
  1087  009523  0083               	dw	131
  1088  009525  0085               	dw	133
  1089  009527  0087               	dw	135
  1090  009529  0089               	dw	137
  1091  00952B  008B               	dw	139
  1092  00952D  008D               	dw	141
  1093  00952F  008F               	dw	143
  1094  009531  0091               	dw	145
  1095  009533  0093               	dw	147
  1096  009535  0095               	dw	149
  1097  009537  0097               	dw	151
  1098  009539  0099               	dw	153
  1099  00953B  009B               	dw	155
  1100  00953D  009D               	dw	157
  1101  00953F  009F               	dw	159
  1102  009541  00A1               	dw	161
  1103  009543  00A3               	dw	163
  1104  009545  00A5               	dw	165
  1105  009547  00A7               	dw	167
  1106  009549  00A9               	dw	169
  1107  00954B  00AB               	dw	171
  1108  00954D  00AD               	dw	173
  1109  00954F  00AF               	dw	175
  1110  009551  00B1               	dw	177
  1111  009553  00B3               	dw	179
  1112  009555  00B5               	dw	181
  1113  009557  00B7               	dw	183
  1114  009559  00B9               	dw	185
  1115  00955B  00BB               	dw	187
  1116  00955D  00BD               	dw	189
  1117  00955F  00C0               	dw	192
  1118  009561  00C3               	dw	195
  1119  009563  00C6               	dw	198
  1120  009565  00C9               	dw	201
  1121  009567  00CC               	dw	204
  1122  009569  00CF               	dw	207
  1123  00956B  00D2               	dw	210
  1124  00956D  00D5               	dw	213
  1125  00956F  00D8               	dw	216
  1126  009571  00DB               	dw	219
  1127  009573  00DE               	dw	222
  1128  009575  00E1               	dw	225
  1129  009577  00E4               	dw	228
  1130  009579  00E7               	dw	231
  1131  00957B  00EA               	dw	234
  1132  00957D  00ED               	dw	237
  1133  00957F  00F0               	dw	240
  1134  009581  00F3               	dw	243
  1135  009583  00F6               	dw	246
  1136  009585  00F9               	dw	249
  1137  009587  00FC               	dw	252
  1138  009589  00FF               	dw	255
  1139  00958B  0102               	dw	258
  1140  00958D  0105               	dw	261
  1141  00958F  0108               	dw	264
  1142  009591  010B               	dw	267
  1143  009593  010E               	dw	270
  1144  009595  0111               	dw	273
  1145  009597  0114               	dw	276
  1146  009599  0117               	dw	279
  1147  00959B  011A               	dw	282
  1148  00959D  011D               	dw	285
  1149  00959F  0120               	dw	288
  1150  0095A1  0123               	dw	291
  1151  0095A3  0126               	dw	294
  1152  0095A5  012A               	dw	298
  1153  0095A7  012D               	dw	301
  1154  0095A9  0130               	dw	304
  1155  0095AB  0133               	dw	307
  1156  0095AD  0137               	dw	311
  1157  0095AF  013A               	dw	314
  1158  0095B1  013E               	dw	318
  1159  0095B3  0142               	dw	322
  1160  0095B5  0145               	dw	325
  1161  0095B7  0149               	dw	329
  1162  0095B9  014D               	dw	333
  1163  0095BB  0151               	dw	337
  1164  0095BD  0155               	dw	341
  1165  0095BF  0159               	dw	345
  1166  0095C1  015D               	dw	349
  1167  0095C3  0161               	dw	353
  1168  0095C5  0166               	dw	358
  1169  0095C7  016A               	dw	362
  1170  0095C9  016E               	dw	366
  1171  0095CB  0173               	dw	371
  1172  0095CD  0178               	dw	376
  1173  0095CF  017D               	dw	381
  1174  0095D1  0182               	dw	386
  1175  0095D3  0187               	dw	391
  1176  0095D5  018C               	dw	396
  1177  0095D7  0191               	dw	401
  1178  0095D9  0196               	dw	406
  1179  0095DB  019C               	dw	412
  1180  0095DD  01A1               	dw	417
  1181  0095DF  01A7               	dw	423
  1182  0095E1  01AD               	dw	429
  1183  0095E3  01B3               	dw	435
  1184  0095E5  01B9               	dw	441
  1185  0095E7  01BF               	dw	447
  1186  0095E9  01C6               	dw	454
  1187  0095EB  01CC               	dw	460
  1188  0095ED  01D3               	dw	467
  1189  0095EF  01DA               	dw	474
  1190  0095F1  01E1               	dw	481
  1191  0095F3  01E8               	dw	488
  1192  0095F5  01F0               	dw	496
  1193  0095F7  01F7               	dw	503
  1194  0095F9  01FF               	dw	511
  1195  0095FB  0207               	dw	519
  1196  0095FD  020F               	dw	527
  1197  0095FF  0218               	dw	536
  1198  009601  0221               	dw	545
  1199  009603  022A               	dw	554
  1200  009605  0233               	dw	563
  1201  009607  023D               	dw	573
  1202  009609  0247               	dw	583
  1203  00960B  0251               	dw	593
  1204  00960D  025C               	dw	604
  1205  00960F  0267               	dw	615
  1206  009611  0272               	dw	626
  1207  009613  027E               	dw	638
  1208  009615  028A               	dw	650
  1209  009617  0297               	dw	663
  1210  009619  02A4               	dw	676
  1211  00961B  02B2               	dw	690
  1212  00961D  02C0               	dw	704
  1213  00961F  02CF               	dw	719
  1214  009621  02DF               	dw	735
  1215  009623  02EF               	dw	751
  1216  009625  02FF               	dw	767
  1217  009627  0311               	dw	785
  1218  009629  0323               	dw	803
  1219  00962B  0336               	dw	822
  1220  00962D  0349               	dw	841
  1221  00962F  035E               	dw	862
  1222  009631  0373               	dw	883
  1223  009633  0389               	dw	905
  1224  009635  03A1               	dw	929
  1225  009637  03B9               	dw	953
  1226  009639  03D3               	dw	979
  1227  00963B  03DD               	dw	989
  1228  00963D  03E4               	dw	996
  1229  00963F  03EA               	dw	1002
  1230  009641  03F1               	dw	1009
  1231  009643  03F8               	dw	1016
  1232  009645  03FF               	dw	1023
  1233  009647  0406               	dw	1030
  1234  009649  040D               	dw	1037
  1235  00964B  0415               	dw	1045
  1236  00964D  041C               	dw	1052
  1237  00964F  0424               	dw	1060
  1238  009651  042B               	dw	1067
  1239  009653  0433               	dw	1075
  1240  009655  043B               	dw	1083
  1241  009657  0442               	dw	1090
  1242  009659  044A               	dw	1098
  1243  00965B  0452               	dw	1106
  1244  00965D  045A               	dw	1114
  1245  00965F  0463               	dw	1123
  1246  009661  046B               	dw	1131
  1247  009663  0474               	dw	1140
  1248  009665  047C               	dw	1148
  1249  009667  0485               	dw	1157
  1250  009669  048E               	dw	1166
  1251  00966B  0496               	dw	1174
  1252  00966D  049F               	dw	1183
  1253  00966F  04A9               	dw	1193
  1254  009671  04B2               	dw	1202
  1255  009673  04BB               	dw	1211
  1256  009675  04C5               	dw	1221
  1257  009677  04CE               	dw	1230
  1258  009679  04D8               	dw	1240
  1259  00967B  04E2               	dw	1250
  1260  00967D  04EC               	dw	1260
  1261  00967F  04F6               	dw	1270
  1262  009681  0500               	dw	1280
  1263  009683  050B               	dw	1291
  1264  009685  0515               	dw	1301
  1265  009687  0520               	dw	1312
  1266  009689  052B               	dw	1323
  1267  00968B  0536               	dw	1334
  1268  00968D  0541               	dw	1345
  1269  00968F  054C               	dw	1356
  1270  009691  0558               	dw	1368
  1271  009693  0564               	dw	1380
  1272  009695  056F               	dw	1391
  1273  009697  057B               	dw	1403
  1274  009699  0587               	dw	1415
  1275  00969B  0594               	dw	1428
  1276  00969D  05A0               	dw	1440
  1277  00969F  05AD               	dw	1453
  1278  0096A1  05BA               	dw	1466
  1279  0096A3  05C7               	dw	1479
  1280  0096A5  05D4               	dw	1492
  1281  0096A7  05E2               	dw	1506
  1282  0096A9  05EF               	dw	1519
  1283  0096AB  05FD               	dw	1533
  1284  0096AD  060B               	dw	1547
  1285  0096AF  0619               	dw	1561
  1286  0096B1  0628               	dw	1576
  1287  0096B3  0637               	dw	1591
  1288  0096B5  0646               	dw	1606
  1289  0096B7  0655               	dw	1621
  1290  0096B9  0664               	dw	1636
  1291  0096BB  0674               	dw	1652
  1292  0096BD  0684               	dw	1668
  1293  0096BF  0694               	dw	1684
  1294  0096C1  06A4               	dw	1700
  1295  0096C3  06B5               	dw	1717
  1296  0096C5  06C6               	dw	1734
  1297  0096C7  06D7               	dw	1751
  1298  0096C9  06E9               	dw	1769
  1299  0096CB  06FA               	dw	1786
  1300  0096CD  070C               	dw	1804
  1301  0096CF  071F               	dw	1823
  1302  0096D1  0731               	dw	1841
  1303  0096D3  0744               	dw	1860
  1304  0096D5  0758               	dw	1880
  1305  0096D7  076B               	dw	1899
  1306  0096D9  077F               	dw	1919
  1307  0096DB  0793               	dw	1939
  1308  0096DD  07A8               	dw	1960
  1309  0096DF  07BD               	dw	1981
  1310  0096E1  07D2               	dw	2002
  1311  0096E3  07E8               	dw	2024
  1312  0096E5  07FE               	dw	2046
  1313  0096E7  0815               	dw	2069
  1314  0096E9  082C               	dw	2092
  1315  0096EB  0843               	dw	2115
  1316  0096ED  085B               	dw	2139
  1317  0096EF  0873               	dw	2163
  1318  0096F1  088B               	dw	2187
  1319  0096F3  08A5               	dw	2213
  1320  0096F5  08BE               	dw	2238
  1321  0096F7  08D8               	dw	2264
  1322  0096F9  08F2               	dw	2290
  1323  0096FB  090D               	dw	2317
  1324  0096FD  0929               	dw	2345
  1325  0096FF  0945               	dw	2373
  1326  009701  0961               	dw	2401
  1327  009703  097E               	dw	2430
  1328  009705  099C               	dw	2460
  1329  009707  09BA               	dw	2490
  1330  009709  09D9               	dw	2521
  1331  00970B  09F9               	dw	2553
  1332  00970D  0A19               	dw	2585
  1333  00970F  0A39               	dw	2617
  1334  009711  0A5B               	dw	2651
  1335  009713  0A7D               	dw	2685
  1336  009715  0A9F               	dw	2719
  1337  009717  0AC3               	dw	2755
  1338  009719  0AE7               	dw	2791
  1339  00971B  0B0C               	dw	2828
  1340  00971D  0B31               	dw	2865
  1341  00971F  0B58               	dw	2904
  1342  009721  0B7F               	dw	2943
  1343  009723  0BA7               	dw	2983
  1344  009725  0BD0               	dw	3024
  1345  009727  0BFA               	dw	3066
  1346  009729  0C25               	dw	3109
  1347  00972B  0C51               	dw	3153
  1348  00972D  0C7E               	dw	3198
  1349  00972F  0CAB               	dw	3243
  1350  009731  0CDA               	dw	3290
  1351  009733  0D0A               	dw	3338
  1352  009735  0D3B               	dw	3387
  1353  009737  0D6D               	dw	3437
  1354  009739  0DA0               	dw	3488
  1355  00973B  0DD4               	dw	3540
  1356  00973D  0E0A               	dw	3594
  1357  00973F  0E41               	dw	3649
  1358  009741  0E79               	dw	3705
  1359  009743  0EB3               	dw	3763
  1360  009745  0EEE               	dw	3822
  1361  009747  0F2A               	dw	3882
  1362  009749  0F68               	dw	3944
  1363  00974B  0FA8               	dw	4008
  1364  00974D  0FE9               	dw	4073
  1365  00974F  102C               	dw	4140
  1366  009751  1070               	dw	4208
  1367  009753  10B6               	dw	4278
  1368  009755  10FE               	dw	4350
  1369  009757  1148               	dw	4424
  1370  009759  1194               	dw	4500
  1371  00975B  11E2               	dw	4578
  1372  00975D  1232               	dw	4658
  1373  00975F  1285               	dw	4741
  1374  009761  12D9               	dw	4825
  1375  009763  1330               	dw	4912
  1376  009765  1389               	dw	5001
  1377  009767  13E5               	dw	5093
  1378  009769  1444               	dw	5188
  1379  00976B  14A5               	dw	5285
  1380  00976D  1509               	dw	5385
  1381  00976F  1570               	dw	5488
  1382  009771  15DA               	dw	5594
  1383  009773  1647               	dw	5703
  1384  009775  16B8               	dw	5816
  1385  009777  172B               	dw	5931
  1386  009779  17A3               	dw	6051
  1387  00977B  181E               	dw	6174
  1388  00977D  189D               	dw	6301
  1389  00977F  1921               	dw	6433
  1390  009781  19A8               	dw	6568
  1391  009783  1A34               	dw	6708
  1392  009785  1AC4               	dw	6852
  1393  009787  1B5A               	dw	7002
  1394  009789  1BF4               	dw	7156
  1395  00978B  1C94               	dw	7316
  1396  00978D  1D39               	dw	7481
  1397  00978F  1DE4               	dw	7652
  1398  009791  1E95               	dw	7829
  1399  009793  1F4C               	dw	8012
  1400  009795  200A               	dw	8202
  1401  009797  20CE               	dw	8398
  1402  009799  219A               	dw	8602
  1403  00979B  226E               	dw	8814
  1404  00979D  234A               	dw	9034
  1405  00979F  242E               	dw	9262
  1406  0097A1  251B               	dw	9499
  1407  0097A3  2612               	dw	9746
  1408  0097A5  2712               	dw	10002
  1409  0097A7  281D               	dw	10269
  1410  0097A9  2932               	dw	10546
  1411  0097AB  2A53               	dw	10835
  1412  0097AD  2B81               	dw	11137
  1413  0097AF  2CBB               	dw	11451
  1414  0097B1  2E03               	dw	11779
  1415  0097B3  2F5A               	dw	12122
  1416  0097B5  30C0               	dw	12480
  1417  0097B7  3236               	dw	12854
  1418  0097B9  33BD               	dw	13245
  1419  0097BB  3557               	dw	13655
  1420  0097BD  35F5               	dw	13813
  1421  0097BF  3661               	dw	13921
  1422  0097C1  36CD               	dw	14029
  1423  0097C3  373B               	dw	14139
  1424  0097C5  37AA               	dw	14250
  1425  0097C7  381B               	dw	14363
  1426  0097C9  388C               	dw	14476
  1427  0097CB  3900               	dw	14592
  1428  0097CD  3974               	dw	14708
  1429  0097CF  39EA               	dw	14826
  1430  0097D1  3A62               	dw	14946
  1431  0097D3  3ADB               	dw	15067
  1432  0097D5  3B55               	dw	15189
  1433  0097D7  3BD1               	dw	15313
  1434  0097D9  3C4E               	dw	15438
  1435  0097DB  3CCD               	dw	15565
  1436  0097DD  3D4E               	dw	15694
  1437  0097DF  3DD0               	dw	15824
  1438  0097E1  3E54               	dw	15956
  1439  0097E3  3EDA               	dw	16090
  1440  0097E5  3F61               	dw	16225
  1441  0097E7  3FEA               	dw	16362
  1442  0097E9  4074               	dw	16500
  1443  0097EB  4101               	dw	16641
  1444  0097ED  418F               	dw	16783
  1445  0097EF  421F               	dw	16927
  1446  0097F1  42B1               	dw	17073
  1447  0097F3  4345               	dw	17221
  1448  0097F5  43DB               	dw	17371
  1449  0097F7  4473               	dw	17523
  1450  0097F9  450D               	dw	17677
  1451  0097FB  45A9               	dw	17833
  1452  0097FD  4647               	dw	17991
  1453  0097FF  46E7               	dw	18151
  1454  009801  4789               	dw	18313
  1455  009803  482E               	dw	18478
  1456  009805  48D5               	dw	18645
  1457  009807  497E               	dw	18814
  1458  009809  4A29               	dw	18985
  1459  00980B  4AD7               	dw	19159
  1460  00980D  4B87               	dw	19335
  1461  00980F  4C3A               	dw	19514
  1462  009811  4CEF               	dw	19695
  1463  009813  4DA6               	dw	19878
  1464  009815  4E61               	dw	20065
  1465  009817  4F1E               	dw	20254
  1466  009819  4FDD               	dw	20445
  1467  00981B  50A0               	dw	20640
  1468  00981D  5165               	dw	20837
  1469  00981F  522D               	dw	21037
  1470  009821  52F8               	dw	21240
  1471  009823  53C6               	dw	21446
  1472  009825  5497               	dw	21655
  1473  009827  556B               	dw	21867
  1474  009829  5642               	dw	22082
  1475  00982B  571C               	dw	22300
  1476  00982D  57FA               	dw	22522
  1477  00982F                     __end_of_motor_steps_lookup:
  1478                           	opt stack 0
  1479  00982F                     _motor_postscaler_lookup:
  1480                           	opt stack 0
  1481  00982F  0C                 	db	12
  1482  009830  07                 	db	7
  1483  009831  05                 	db	5
  1484  009832  04                 	db	4
  1485  009833  04                 	db	4
  1486  009834  03                 	db	3
  1487  009835  03                 	db	3
  1488  009836  03                 	db	3
  1489  009837  02                 	db	2
  1490  009838  02                 	db	2
  1491  009839  02                 	db	2
  1492  00983A  02                 	db	2
  1493  00983B  02                 	db	2
  1494  00983C  02                 	db	2
  1495  00983D  01                 	db	1
  1496  00983E  01                 	db	1
  1497  00983F  01                 	db	1
  1498  009840  01                 	db	1
  1499  009841  01                 	db	1
  1500  009842  01                 	db	1
  1501  009843  01                 	db	1
  1502  009844  01                 	db	1
  1503  009845  01                 	db	1
  1504  009846  01                 	db	1
  1505  009847  01                 	db	1
  1506  009848  01                 	db	1
  1507  009849  01                 	db	1
  1508  00984A  01                 	db	1
  1509  00984B  01                 	db	1
  1510  00984C  01                 	db	1
  1511  00984D  01                 	db	1
  1512  00984E  01                 	db	1
  1513  00984F  01                 	db	1
  1514  009850  01                 	db	1
  1515  009851  01                 	db	1
  1516  009852  01                 	db	1
  1517  009853  01                 	db	1
  1518  009854  01                 	db	1
  1519  009855  01                 	db	1
  1520  009856  01                 	db	1
  1521  009857  01                 	db	1
  1522  009858  01                 	db	1
  1523  009859  01                 	db	1
  1524  00985A  01                 	db	1
  1525  00985B  01                 	db	1
  1526  00985C  01                 	db	1
  1527  00985D  01                 	db	1
  1528  00985E  01                 	db	1
  1529  00985F  01                 	db	1
  1530  009860  01                 	db	1
  1531  009861  01                 	db	1
  1532  009862  01                 	db	1
  1533  009863  01                 	db	1
  1534  009864  01                 	db	1
  1535  009865  01                 	db	1
  1536  009866  01                 	db	1
  1537  009867  01                 	db	1
  1538  009868  01                 	db	1
  1539  009869  01                 	db	1
  1540  00986A  01                 	db	1
  1541  00986B  01                 	db	1
  1542  00986C  01                 	db	1
  1543  00986D  01                 	db	1
  1544  00986E  01                 	db	1
  1545  00986F  01                 	db	1
  1546  009870  01                 	db	1
  1547  009871  01                 	db	1
  1548  009872  01                 	db	1
  1549  009873  01                 	db	1
  1550  009874  01                 	db	1
  1551  009875  01                 	db	1
  1552  009876  01                 	db	1
  1553  009877  01                 	db	1
  1554  009878  01                 	db	1
  1555  009879  01                 	db	1
  1556  00987A  01                 	db	1
  1557  00987B  01                 	db	1
  1558  00987C  01                 	db	1
  1559  00987D  01                 	db	1
  1560  00987E  01                 	db	1
  1561  00987F  01                 	db	1
  1562  009880  01                 	db	1
  1563  009881  01                 	db	1
  1564  009882  01                 	db	1
  1565  009883  01                 	db	1
  1566  009884  01                 	db	1
  1567  009885  01                 	db	1
  1568  009886  01                 	db	1
  1569  009887  01                 	db	1
  1570  009888  01                 	db	1
  1571  009889  01                 	db	1
  1572  00988A  00                 	db	0
  1573  00988B  00                 	db	0
  1574  00988C  00                 	db	0
  1575  00988D  00                 	db	0
  1576  00988E  00                 	db	0
  1577  00988F  00                 	db	0
  1578  009890  00                 	db	0
  1579  009891  00                 	db	0
  1580  009892  00                 	db	0
  1581  009893  00                 	db	0
  1582  009894  00                 	db	0
  1583  009895  00                 	db	0
  1584  009896  00                 	db	0
  1585  009897  00                 	db	0
  1586  009898  00                 	db	0
  1587  009899  00                 	db	0
  1588  00989A  00                 	db	0
  1589  00989B  00                 	db	0
  1590  00989C  00                 	db	0
  1591  00989D  00                 	db	0
  1592  00989E  00                 	db	0
  1593  00989F  00                 	db	0
  1594  0098A0  00                 	db	0
  1595  0098A1  00                 	db	0
  1596  0098A2  00                 	db	0
  1597  0098A3  00                 	db	0
  1598  0098A4  00                 	db	0
  1599  0098A5  00                 	db	0
  1600  0098A6  00                 	db	0
  1601  0098A7  00                 	db	0
  1602  0098A8  00                 	db	0
  1603  0098A9  00                 	db	0
  1604  0098AA  00                 	db	0
  1605  0098AB  00                 	db	0
  1606  0098AC  00                 	db	0
  1607  0098AD  00                 	db	0
  1608  0098AE  00                 	db	0
  1609  0098AF  00                 	db	0
  1610  0098B0  00                 	db	0
  1611  0098B1  00                 	db	0
  1612  0098B2  00                 	db	0
  1613  0098B3  00                 	db	0
  1614  0098B4  00                 	db	0
  1615  0098B5  00                 	db	0
  1616  0098B6  00                 	db	0
  1617  0098B7  00                 	db	0
  1618  0098B8  00                 	db	0
  1619  0098B9  00                 	db	0
  1620  0098BA  00                 	db	0
  1621  0098BB  00                 	db	0
  1622  0098BC  00                 	db	0
  1623  0098BD  00                 	db	0
  1624  0098BE  00                 	db	0
  1625  0098BF  00                 	db	0
  1626  0098C0  00                 	db	0
  1627  0098C1  00                 	db	0
  1628  0098C2  00                 	db	0
  1629  0098C3  00                 	db	0
  1630  0098C4  00                 	db	0
  1631  0098C5  00                 	db	0
  1632  0098C6  00                 	db	0
  1633  0098C7  00                 	db	0
  1634  0098C8  00                 	db	0
  1635  0098C9  00                 	db	0
  1636  0098CA  00                 	db	0
  1637  0098CB  00                 	db	0
  1638  0098CC  00                 	db	0
  1639  0098CD  00                 	db	0
  1640  0098CE  00                 	db	0
  1641  0098CF  00                 	db	0
  1642  0098D0  00                 	db	0
  1643  0098D1  00                 	db	0
  1644  0098D2  00                 	db	0
  1645  0098D3  00                 	db	0
  1646  0098D4  00                 	db	0
  1647  0098D5  00                 	db	0
  1648  0098D6  00                 	db	0
  1649  0098D7  00                 	db	0
  1650  0098D8  00                 	db	0
  1651  0098D9  00                 	db	0
  1652  0098DA  00                 	db	0
  1653  0098DB  00                 	db	0
  1654  0098DC  00                 	db	0
  1655  0098DD  00                 	db	0
  1656  0098DE  00                 	db	0
  1657  0098DF  00                 	db	0
  1658  0098E0  00                 	db	0
  1659  0098E1  00                 	db	0
  1660  0098E2  00                 	db	0
  1661  0098E3  00                 	db	0
  1662  0098E4  00                 	db	0
  1663  0098E5  00                 	db	0
  1664  0098E6  00                 	db	0
  1665  0098E7  00                 	db	0
  1666  0098E8  00                 	db	0
  1667  0098E9  00                 	db	0
  1668  0098EA  00                 	db	0
  1669  0098EB  00                 	db	0
  1670  0098EC  00                 	db	0
  1671  0098ED  00                 	db	0
  1672  0098EE  00                 	db	0
  1673  0098EF  00                 	db	0
  1674  0098F0  00                 	db	0
  1675  0098F1  00                 	db	0
  1676  0098F2  00                 	db	0
  1677  0098F3  00                 	db	0
  1678  0098F4  00                 	db	0
  1679  0098F5  00                 	db	0
  1680  0098F6  00                 	db	0
  1681  0098F7  00                 	db	0
  1682  0098F8  00                 	db	0
  1683  0098F9  00                 	db	0
  1684  0098FA  00                 	db	0
  1685  0098FB  00                 	db	0
  1686  0098FC  00                 	db	0
  1687  0098FD  00                 	db	0
  1688  0098FE  00                 	db	0
  1689  0098FF  00                 	db	0
  1690  009900  00                 	db	0
  1691  009901  00                 	db	0
  1692  009902  00                 	db	0
  1693  009903  00                 	db	0
  1694  009904  00                 	db	0
  1695  009905  00                 	db	0
  1696  009906  00                 	db	0
  1697  009907  00                 	db	0
  1698  009908  00                 	db	0
  1699  009909  00                 	db	0
  1700  00990A  00                 	db	0
  1701  00990B  00                 	db	0
  1702  00990C  00                 	db	0
  1703  00990D  00                 	db	0
  1704  00990E  00                 	db	0
  1705  00990F  00                 	db	0
  1706  009910  00                 	db	0
  1707  009911  00                 	db	0
  1708  009912  00                 	db	0
  1709  009913  00                 	db	0
  1710  009914  00                 	db	0
  1711  009915  00                 	db	0
  1712  009916  00                 	db	0
  1713  009917  00                 	db	0
  1714  009918  00                 	db	0
  1715  009919  00                 	db	0
  1716  00991A  00                 	db	0
  1717  00991B  00                 	db	0
  1718  00991C  00                 	db	0
  1719  00991D  00                 	db	0
  1720  00991E  00                 	db	0
  1721  00991F  00                 	db	0
  1722  009920  00                 	db	0
  1723  009921  00                 	db	0
  1724  009922  00                 	db	0
  1725  009923  00                 	db	0
  1726  009924  00                 	db	0
  1727  009925  00                 	db	0
  1728  009926  00                 	db	0
  1729  009927  00                 	db	0
  1730  009928  00                 	db	0
  1731  009929  00                 	db	0
  1732  00992A  00                 	db	0
  1733  00992B  00                 	db	0
  1734  00992C  00                 	db	0
  1735  00992D  00                 	db	0
  1736  00992E  00                 	db	0
  1737  00992F  00                 	db	0
  1738  009930  00                 	db	0
  1739  009931  00                 	db	0
  1740  009932  00                 	db	0
  1741  009933  00                 	db	0
  1742  009934  00                 	db	0
  1743  009935  00                 	db	0
  1744  009936  00                 	db	0
  1745  009937  00                 	db	0
  1746  009938  00                 	db	0
  1747  009939  00                 	db	0
  1748  00993A  00                 	db	0
  1749  00993B  00                 	db	0
  1750  00993C  00                 	db	0
  1751  00993D  00                 	db	0
  1752  00993E  00                 	db	0
  1753  00993F  00                 	db	0
  1754  009940  00                 	db	0
  1755  009941  00                 	db	0
  1756  009942  00                 	db	0
  1757  009943  00                 	db	0
  1758  009944  00                 	db	0
  1759  009945  00                 	db	0
  1760  009946  00                 	db	0
  1761  009947  00                 	db	0
  1762  009948  00                 	db	0
  1763  009949  00                 	db	0
  1764  00994A  00                 	db	0
  1765  00994B  00                 	db	0
  1766  00994C  00                 	db	0
  1767  00994D  00                 	db	0
  1768  00994E  00                 	db	0
  1769  00994F  00                 	db	0
  1770  009950  00                 	db	0
  1771  009951  00                 	db	0
  1772  009952  00                 	db	0
  1773  009953  00                 	db	0
  1774  009954  00                 	db	0
  1775  009955  00                 	db	0
  1776  009956  00                 	db	0
  1777  009957  00                 	db	0
  1778  009958  00                 	db	0
  1779  009959  00                 	db	0
  1780  00995A  00                 	db	0
  1781  00995B  00                 	db	0
  1782  00995C  00                 	db	0
  1783  00995D  00                 	db	0
  1784  00995E  00                 	db	0
  1785  00995F  00                 	db	0
  1786  009960  00                 	db	0
  1787  009961  00                 	db	0
  1788  009962  00                 	db	0
  1789  009963  00                 	db	0
  1790  009964  00                 	db	0
  1791  009965  00                 	db	0
  1792  009966  00                 	db	0
  1793  009967  00                 	db	0
  1794  009968  00                 	db	0
  1795  009969  00                 	db	0
  1796  00996A  00                 	db	0
  1797  00996B  00                 	db	0
  1798  00996C  00                 	db	0
  1799  00996D  00                 	db	0
  1800  00996E  00                 	db	0
  1801  00996F  00                 	db	0
  1802  009970  00                 	db	0
  1803  009971  00                 	db	0
  1804  009972  00                 	db	0
  1805  009973  00                 	db	0
  1806  009974  00                 	db	0
  1807  009975  00                 	db	0
  1808  009976  00                 	db	0
  1809  009977  00                 	db	0
  1810  009978  00                 	db	0
  1811  009979  00                 	db	0
  1812  00997A  00                 	db	0
  1813  00997B  00                 	db	0
  1814  00997C  00                 	db	0
  1815  00997D  00                 	db	0
  1816  00997E  00                 	db	0
  1817  00997F  00                 	db	0
  1818  009980  00                 	db	0
  1819  009981  00                 	db	0
  1820  009982  00                 	db	0
  1821  009983  00                 	db	0
  1822  009984  00                 	db	0
  1823  009985  00                 	db	0
  1824  009986  00                 	db	0
  1825  009987  00                 	db	0
  1826  009988  00                 	db	0
  1827  009989  00                 	db	0
  1828  00998A  00                 	db	0
  1829  00998B  00                 	db	0
  1830  00998C  00                 	db	0
  1831  00998D  00                 	db	0
  1832  00998E  00                 	db	0
  1833  00998F  00                 	db	0
  1834  009990  00                 	db	0
  1835  009991  00                 	db	0
  1836  009992  00                 	db	0
  1837  009993  00                 	db	0
  1838  009994  00                 	db	0
  1839  009995  00                 	db	0
  1840  009996  00                 	db	0
  1841  009997  00                 	db	0
  1842  009998  00                 	db	0
  1843  009999  00                 	db	0
  1844  00999A  00                 	db	0
  1845  00999B  00                 	db	0
  1846  00999C  00                 	db	0
  1847  00999D  00                 	db	0
  1848  00999E  00                 	db	0
  1849  00999F  00                 	db	0
  1850  0099A0  00                 	db	0
  1851  0099A1  00                 	db	0
  1852  0099A2  00                 	db	0
  1853  0099A3  00                 	db	0
  1854  0099A4  00                 	db	0
  1855  0099A5  00                 	db	0
  1856  0099A6  00                 	db	0
  1857  0099A7  00                 	db	0
  1858  0099A8  00                 	db	0
  1859  0099A9  00                 	db	0
  1860  0099AA  00                 	db	0
  1861  0099AB  00                 	db	0
  1862  0099AC  00                 	db	0
  1863  0099AD  00                 	db	0
  1864  0099AE  00                 	db	0
  1865  0099AF  00                 	db	0
  1866  0099B0  00                 	db	0
  1867  0099B1  00                 	db	0
  1868  0099B2  00                 	db	0
  1869  0099B3  00                 	db	0
  1870  0099B4  00                 	db	0
  1871  0099B5  00                 	db	0
  1872  0099B6  00                 	db	0
  1873  0099B7  00                 	db	0
  1874  0099B8  00                 	db	0
  1875  0099B9  00                 	db	0
  1876  0099BA  00                 	db	0
  1877  0099BB  00                 	db	0
  1878  0099BC  00                 	db	0
  1879  0099BD  00                 	db	0
  1880  0099BE  00                 	db	0
  1881  0099BF  00                 	db	0
  1882  0099C0  00                 	db	0
  1883  0099C1  00                 	db	0
  1884  0099C2  00                 	db	0
  1885  0099C3  00                 	db	0
  1886  0099C4  00                 	db	0
  1887  0099C5  00                 	db	0
  1888  0099C6  00                 	db	0
  1889  0099C7  00                 	db	0
  1890  0099C8  00                 	db	0
  1891  0099C9  00                 	db	0
  1892  0099CA  00                 	db	0
  1893  0099CB  00                 	db	0
  1894  0099CC  00                 	db	0
  1895  0099CD  00                 	db	0
  1896  0099CE  00                 	db	0
  1897  0099CF  00                 	db	0
  1898  0099D0  00                 	db	0
  1899  0099D1  00                 	db	0
  1900  0099D2  00                 	db	0
  1901  0099D3  00                 	db	0
  1902  0099D4  00                 	db	0
  1903  0099D5  00                 	db	0
  1904  0099D6  00                 	db	0
  1905  0099D7  00                 	db	0
  1906  0099D8  00                 	db	0
  1907  0099D9  00                 	db	0
  1908  0099DA  00                 	db	0
  1909  0099DB  00                 	db	0
  1910  0099DC  00                 	db	0
  1911  0099DD  00                 	db	0
  1912  0099DE  00                 	db	0
  1913  0099DF  00                 	db	0
  1914  0099E0  00                 	db	0
  1915  0099E1  00                 	db	0
  1916  0099E2  00                 	db	0
  1917  0099E3  00                 	db	0
  1918  0099E4  00                 	db	0
  1919  0099E5  00                 	db	0
  1920  0099E6  00                 	db	0
  1921  0099E7  00                 	db	0
  1922  0099E8  00                 	db	0
  1923  0099E9  00                 	db	0
  1924  0099EA  00                 	db	0
  1925  0099EB  00                 	db	0
  1926  0099EC  00                 	db	0
  1927  0099ED  00                 	db	0
  1928  0099EE  00                 	db	0
  1929  0099EF  00                 	db	0
  1930  0099F0  00                 	db	0
  1931  0099F1  00                 	db	0
  1932  0099F2  00                 	db	0
  1933  0099F3  00                 	db	0
  1934  0099F4  00                 	db	0
  1935  0099F5  00                 	db	0
  1936  0099F6  00                 	db	0
  1937  0099F7  00                 	db	0
  1938  0099F8  00                 	db	0
  1939  0099F9  00                 	db	0
  1940  0099FA  00                 	db	0
  1941  0099FB  00                 	db	0
  1942  0099FC  00                 	db	0
  1943  0099FD  00                 	db	0
  1944  0099FE  00                 	db	0
  1945  0099FF  00                 	db	0
  1946  009A00  00                 	db	0
  1947  009A01  00                 	db	0
  1948  009A02  00                 	db	0
  1949  009A03  00                 	db	0
  1950  009A04  00                 	db	0
  1951  009A05  00                 	db	0
  1952  009A06  00                 	db	0
  1953  009A07  00                 	db	0
  1954  009A08  00                 	db	0
  1955  009A09  00                 	db	0
  1956  009A0A  00                 	db	0
  1957  009A0B  00                 	db	0
  1958  009A0C  00                 	db	0
  1959  009A0D  00                 	db	0
  1960  009A0E  00                 	db	0
  1961  009A0F  00                 	db	0
  1962  009A10  00                 	db	0
  1963  009A11  00                 	db	0
  1964  009A12  00                 	db	0
  1965  009A13  00                 	db	0
  1966  009A14  00                 	db	0
  1967  009A15  00                 	db	0
  1968  009A16                     __end_of_motor_postscaler_lookup:
  1969                           	opt stack 0
  1970  009A16                     _motor_period_lookup:
  1971                           	opt stack 0
  1972  009A16  EC                 	db	236
  1973  009A17  F2                 	db	242
  1974  009A18  F6                 	db	246
  1975  009A19  F4                 	db	244
  1976  009A1A  D2                 	db	210
  1977  009A1B  E8                 	db	232
  1978  009A1C  D2                 	db	210
  1979  009A1D  C0                 	db	192
  1980  009A1E  EC                 	db	236
  1981  009A1F  DC                 	db	220
  1982  009A20  CF                 	db	207
  1983  009A21  C3                 	db	195
  1984  009A22  B9                 	db	185
  1985  009A23  B0                 	db	176
  1986  009A24  FC                 	db	252
  1987  009A25  F2                 	db	242
  1988  009A26  E8                 	db	232
  1989  009A27  DF                 	db	223
  1990  009A28  D7                 	db	215
  1991  009A29  D0                 	db	208
  1992  009A2A  CA                 	db	202
  1993  009A2B  C3                 	db	195
  1994  009A2C  BE                 	db	190
  1995  009A2D  B8                 	db	184
  1996  009A2E  B3                 	db	179
  1997  009A2F  AF                 	db	175
  1998  009A30  AA                 	db	170
  1999  009A31  A6                 	db	166
  2000  009A32  A2                 	db	162
  2001  009A33  9F                 	db	159
  2002  009A34  9B                 	db	155
  2003  009A35  98                 	db	152
  2004  009A36  95                 	db	149
  2005  009A37  92                 	db	146
  2006  009A38  8F                 	db	143
  2007  009A39  8C                 	db	140
  2008  009A3A  8A                 	db	138
  2009  009A3B  87                 	db	135
  2010  009A3C  85                 	db	133
  2011  009A3D  83                 	db	131
  2012  009A3E  81                 	db	129
  2013  009A3F  7F                 	db	127
  2014  009A40  7D                 	db	125
  2015  009A41  7B                 	db	123
  2016  009A42  79                 	db	121
  2017  009A43  77                 	db	119
  2018  009A44  75                 	db	117
  2019  009A45  74                 	db	116
  2020  009A46  72                 	db	114
  2021  009A47  71                 	db	113
  2022  009A48  6F                 	db	111
  2023  009A49  6E                 	db	110
  2024  009A4A  6C                 	db	108
  2025  009A4B  6B                 	db	107
  2026  009A4C  6A                 	db	106
  2027  009A4D  68                 	db	104
  2028  009A4E  67                 	db	103
  2029  009A4F  66                 	db	102
  2030  009A50  65                 	db	101
  2031  009A51  64                 	db	100
  2032  009A52  62                 	db	98
  2033  009A53  61                 	db	97
  2034  009A54  60                 	db	96
  2035  009A55  5F                 	db	95
  2036  009A56  5E                 	db	94
  2037  009A57  5D                 	db	93
  2038  009A58  5C                 	db	92
  2039  009A59  5B                 	db	91
  2040  009A5A  59                 	db	89
  2041  009A5B  57                 	db	87
  2042  009A5C  56                 	db	86
  2043  009A5D  54                 	db	84
  2044  009A5E  53                 	db	83
  2045  009A5F  51                 	db	81
  2046  009A60  50                 	db	80
  2047  009A61  4F                 	db	79
  2048  009A62  4E                 	db	78
  2049  009A63  4C                 	db	76
  2050  009A64  4B                 	db	75
  2051  009A65  4A                 	db	74
  2052  009A66  49                 	db	73
  2053  009A67  48                 	db	72
  2054  009A68  47                 	db	71
  2055  009A69  46                 	db	70
  2056  009A6A  45                 	db	69
  2057  009A6B  44                 	db	68
  2058  009A6C  43                 	db	67
  2059  009A6D  42                 	db	66
  2060  009A6E  41                 	db	65
  2061  009A6F  40                 	db	64
  2062  009A70  3F                 	db	63
  2063  009A71  FE                 	db	254
  2064  009A72  FB                 	db	251
  2065  009A73  F8                 	db	248
  2066  009A74  F6                 	db	246
  2067  009A75  F3                 	db	243
  2068  009A76  F0                 	db	240
  2069  009A77  EE                 	db	238
  2070  009A78  EC                 	db	236
  2071  009A79  E9                 	db	233
  2072  009A7A  E7                 	db	231
  2073  009A7B  E5                 	db	229
  2074  009A7C  E3                 	db	227
  2075  009A7D  E0                 	db	224
  2076  009A7E  DE                 	db	222
  2077  009A7F  DC                 	db	220
  2078  009A80  DA                 	db	218
  2079  009A81  D8                 	db	216
  2080  009A82  D7                 	db	215
  2081  009A83  D5                 	db	213
  2082  009A84  D3                 	db	211
  2083  009A85  D1                 	db	209
  2084  009A86  CF                 	db	207
  2085  009A87  CE                 	db	206
  2086  009A88  CC                 	db	204
  2087  009A89  CA                 	db	202
  2088  009A8A  C9                 	db	201
  2089  009A8B  C7                 	db	199
  2090  009A8C  C6                 	db	198
  2091  009A8D  C4                 	db	196
  2092  009A8E  C3                 	db	195
  2093  009A8F  C1                 	db	193
  2094  009A90  C0                 	db	192
  2095  009A91  BE                 	db	190
  2096  009A92  BD                 	db	189
  2097  009A93  BC                 	db	188
  2098  009A94  BA                 	db	186
  2099  009A95  B8                 	db	184
  2100  009A96  B6                 	db	182
  2101  009A97  B4                 	db	180
  2102  009A98  B3                 	db	179
  2103  009A99  B1                 	db	177
  2104  009A9A  AF                 	db	175
  2105  009A9B  AE                 	db	174
  2106  009A9C  AC                 	db	172
  2107  009A9D  AA                 	db	170
  2108  009A9E  A9                 	db	169
  2109  009A9F  A7                 	db	167
  2110  009AA0  A6                 	db	166
  2111  009AA1  A4                 	db	164
  2112  009AA2  A3                 	db	163
  2113  009AA3  A1                 	db	161
  2114  009AA4  A0                 	db	160
  2115  009AA5  9F                 	db	159
  2116  009AA6  9D                 	db	157
  2117  009AA7  9C                 	db	156
  2118  009AA8  9B                 	db	155
  2119  009AA9  9A                 	db	154
  2120  009AAA  98                 	db	152
  2121  009AAB  97                 	db	151
  2122  009AAC  96                 	db	150
  2123  009AAD  95                 	db	149
  2124  009AAE  94                 	db	148
  2125  009AAF  93                 	db	147
  2126  009AB0  92                 	db	146
  2127  009AB1  90                 	db	144
  2128  009AB2  8F                 	db	143
  2129  009AB3  8E                 	db	142
  2130  009AB4  8D                 	db	141
  2131  009AB5  8C                 	db	140
  2132  009AB6  8B                 	db	139
  2133  009AB7  8A                 	db	138
  2134  009AB8  89                 	db	137
  2135  009AB9  88                 	db	136
  2136  009ABA  87                 	db	135
  2137  009ABB  86                 	db	134
  2138  009ABC  85                 	db	133
  2139  009ABD  84                 	db	132
  2140  009ABE  83                 	db	131
  2141  009ABF  82                 	db	130
  2142  009AC0  81                 	db	129
  2143  009AC1  80                 	db	128
  2144  009AC2  7F                 	db	127
  2145  009AC3  7E                 	db	126
  2146  009AC4  7D                 	db	125
  2147  009AC5  7C                 	db	124
  2148  009AC6  7B                 	db	123
  2149  009AC7  7A                 	db	122
  2150  009AC8  79                 	db	121
  2151  009AC9  78                 	db	120
  2152  009ACA  77                 	db	119
  2153  009ACB  76                 	db	118
  2154  009ACC  75                 	db	117
  2155  009ACD  74                 	db	116
  2156  009ACE  73                 	db	115
  2157  009ACF  72                 	db	114
  2158  009AD0  71                 	db	113
  2159  009AD1  70                 	db	112
  2160  009AD2  6F                 	db	111
  2161  009AD3  6E                 	db	110
  2162  009AD4  6D                 	db	109
  2163  009AD5  6C                 	db	108
  2164  009AD6  6B                 	db	107
  2165  009AD7  6A                 	db	106
  2166  009AD8  69                 	db	105
  2167  009AD9  68                 	db	104
  2168  009ADA  67                 	db	103
  2169  009ADB  66                 	db	102
  2170  009ADC  65                 	db	101
  2171  009ADD  64                 	db	100
  2172  009ADE  63                 	db	99
  2173  009ADF  62                 	db	98
  2174  009AE0  61                 	db	97
  2175  009AE1  60                 	db	96
  2176  009AE2  5F                 	db	95
  2177  009AE3  5E                 	db	94
  2178  009AE4  5D                 	db	93
  2179  009AE5  5C                 	db	92
  2180  009AE6  5B                 	db	91
  2181  009AE7  5A                 	db	90
  2182  009AE8  59                 	db	89
  2183  009AE9  58                 	db	88
  2184  009AEA  57                 	db	87
  2185  009AEB  56                 	db	86
  2186  009AEC  55                 	db	85
  2187  009AED  54                 	db	84
  2188  009AEE  53                 	db	83
  2189  009AEF  52                 	db	82
  2190  009AF0  51                 	db	81
  2191  009AF1  50                 	db	80
  2192  009AF2  4F                 	db	79
  2193  009AF3  4E                 	db	78
  2194  009AF4  4D                 	db	77
  2195  009AF5  4C                 	db	76
  2196  009AF6  4B                 	db	75
  2197  009AF7  4A                 	db	74
  2198  009AF8  49                 	db	73
  2199  009AF9  48                 	db	72
  2200  009AFA  47                 	db	71
  2201  009AFB  46                 	db	70
  2202  009AFC  45                 	db	69
  2203  009AFD  44                 	db	68
  2204  009AFE  43                 	db	67
  2205  009AFF  42                 	db	66
  2206  009B00  41                 	db	65
  2207  009B01  40                 	db	64
  2208  009B02  3F                 	db	63
  2209  009B03  FF                 	db	255
  2210  009B04  FE                 	db	254
  2211  009B05  FD                 	db	253
  2212  009B06  FC                 	db	252
  2213  009B07  FB                 	db	251
  2214  009B08  FA                 	db	250
  2215  009B09  F9                 	db	249
  2216  009B0A  F8                 	db	248
  2217  009B0B  F7                 	db	247
  2218  009B0C  F6                 	db	246
  2219  009B0D  F5                 	db	245
  2220  009B0E  F4                 	db	244
  2221  009B0F  F3                 	db	243
  2222  009B10  F2                 	db	242
  2223  009B11  F1                 	db	241
  2224  009B12  F0                 	db	240
  2225  009B13  EF                 	db	239
  2226  009B14  EE                 	db	238
  2227  009B15  ED                 	db	237
  2228  009B16  EC                 	db	236
  2229  009B17  EB                 	db	235
  2230  009B18  EA                 	db	234
  2231  009B19  E9                 	db	233
  2232  009B1A  E8                 	db	232
  2233  009B1B  E7                 	db	231
  2234  009B1C  E6                 	db	230
  2235  009B1D  E5                 	db	229
  2236  009B1E  E4                 	db	228
  2237  009B1F  E3                 	db	227
  2238  009B20  E2                 	db	226
  2239  009B21  E1                 	db	225
  2240  009B22  E0                 	db	224
  2241  009B23  DF                 	db	223
  2242  009B24  DE                 	db	222
  2243  009B25  DD                 	db	221
  2244  009B26  DC                 	db	220
  2245  009B27  DB                 	db	219
  2246  009B28  DA                 	db	218
  2247  009B29  D9                 	db	217
  2248  009B2A  D8                 	db	216
  2249  009B2B  D7                 	db	215
  2250  009B2C  D6                 	db	214
  2251  009B2D  D5                 	db	213
  2252  009B2E  D4                 	db	212
  2253  009B2F  D3                 	db	211
  2254  009B30  D2                 	db	210
  2255  009B31  D1                 	db	209
  2256  009B32  D0                 	db	208
  2257  009B33  CF                 	db	207
  2258  009B34  CE                 	db	206
  2259  009B35  CD                 	db	205
  2260  009B36  CC                 	db	204
  2261  009B37  CB                 	db	203
  2262  009B38  CA                 	db	202
  2263  009B39  C9                 	db	201
  2264  009B3A  C8                 	db	200
  2265  009B3B  C7                 	db	199
  2266  009B3C  C6                 	db	198
  2267  009B3D  C5                 	db	197
  2268  009B3E  C4                 	db	196
  2269  009B3F  C3                 	db	195
  2270  009B40  C2                 	db	194
  2271  009B41  C1                 	db	193
  2272  009B42  C0                 	db	192
  2273  009B43  BF                 	db	191
  2274  009B44  BE                 	db	190
  2275  009B45  BD                 	db	189
  2276  009B46  BC                 	db	188
  2277  009B47  BB                 	db	187
  2278  009B48  BA                 	db	186
  2279  009B49  B9                 	db	185
  2280  009B4A  B8                 	db	184
  2281  009B4B  B7                 	db	183
  2282  009B4C  B6                 	db	182
  2283  009B4D  B5                 	db	181
  2284  009B4E  B4                 	db	180
  2285  009B4F  B3                 	db	179
  2286  009B50  B2                 	db	178
  2287  009B51  B1                 	db	177
  2288  009B52  B0                 	db	176
  2289  009B53  AF                 	db	175
  2290  009B54  AE                 	db	174
  2291  009B55  AD                 	db	173
  2292  009B56  AC                 	db	172
  2293  009B57  AB                 	db	171
  2294  009B58  AA                 	db	170
  2295  009B59  A9                 	db	169
  2296  009B5A  A8                 	db	168
  2297  009B5B  A7                 	db	167
  2298  009B5C  A6                 	db	166
  2299  009B5D  A5                 	db	165
  2300  009B5E  A4                 	db	164
  2301  009B5F  A3                 	db	163
  2302  009B60  A2                 	db	162
  2303  009B61  A1                 	db	161
  2304  009B62  A0                 	db	160
  2305  009B63  9F                 	db	159
  2306  009B64  9E                 	db	158
  2307  009B65  9D                 	db	157
  2308  009B66  9C                 	db	156
  2309  009B67  9B                 	db	155
  2310  009B68  9A                 	db	154
  2311  009B69  99                 	db	153
  2312  009B6A  98                 	db	152
  2313  009B6B  97                 	db	151
  2314  009B6C  96                 	db	150
  2315  009B6D  95                 	db	149
  2316  009B6E  94                 	db	148
  2317  009B6F  93                 	db	147
  2318  009B70  92                 	db	146
  2319  009B71  91                 	db	145
  2320  009B72  90                 	db	144
  2321  009B73  8F                 	db	143
  2322  009B74  8E                 	db	142
  2323  009B75  8D                 	db	141
  2324  009B76  8C                 	db	140
  2325  009B77  8B                 	db	139
  2326  009B78  8A                 	db	138
  2327  009B79  89                 	db	137
  2328  009B7A  88                 	db	136
  2329  009B7B  87                 	db	135
  2330  009B7C  86                 	db	134
  2331  009B7D  85                 	db	133
  2332  009B7E  84                 	db	132
  2333  009B7F  83                 	db	131
  2334  009B80  82                 	db	130
  2335  009B81  81                 	db	129
  2336  009B82  80                 	db	128
  2337  009B83  7F                 	db	127
  2338  009B84  7E                 	db	126
  2339  009B85  7D                 	db	125
  2340  009B86  7C                 	db	124
  2341  009B87  7B                 	db	123
  2342  009B88  7A                 	db	122
  2343  009B89  79                 	db	121
  2344  009B8A  78                 	db	120
  2345  009B8B  77                 	db	119
  2346  009B8C  76                 	db	118
  2347  009B8D  75                 	db	117
  2348  009B8E  74                 	db	116
  2349  009B8F  73                 	db	115
  2350  009B90  72                 	db	114
  2351  009B91  71                 	db	113
  2352  009B92  70                 	db	112
  2353  009B93  6F                 	db	111
  2354  009B94  6E                 	db	110
  2355  009B95  6D                 	db	109
  2356  009B96  6C                 	db	108
  2357  009B97  6B                 	db	107
  2358  009B98  6A                 	db	106
  2359  009B99  69                 	db	105
  2360  009B9A  68                 	db	104
  2361  009B9B  67                 	db	103
  2362  009B9C  66                 	db	102
  2363  009B9D  65                 	db	101
  2364  009B9E  64                 	db	100
  2365  009B9F  63                 	db	99
  2366  009BA0  62                 	db	98
  2367  009BA1  61                 	db	97
  2368  009BA2  60                 	db	96
  2369  009BA3  5F                 	db	95
  2370  009BA4  5E                 	db	94
  2371  009BA5  5D                 	db	93
  2372  009BA6  5C                 	db	92
  2373  009BA7  5B                 	db	91
  2374  009BA8  5A                 	db	90
  2375  009BA9  59                 	db	89
  2376  009BAA  58                 	db	88
  2377  009BAB  57                 	db	87
  2378  009BAC  56                 	db	86
  2379  009BAD  55                 	db	85
  2380  009BAE  54                 	db	84
  2381  009BAF  53                 	db	83
  2382  009BB0  52                 	db	82
  2383  009BB1  51                 	db	81
  2384  009BB2  50                 	db	80
  2385  009BB3  4F                 	db	79
  2386  009BB4  4E                 	db	78
  2387  009BB5  4D                 	db	77
  2388  009BB6  4C                 	db	76
  2389  009BB7  4B                 	db	75
  2390  009BB8  4A                 	db	74
  2391  009BB9  49                 	db	73
  2392  009BBA  48                 	db	72
  2393  009BBB  47                 	db	71
  2394  009BBC  46                 	db	70
  2395  009BBD  45                 	db	69
  2396  009BBE  44                 	db	68
  2397  009BBF  43                 	db	67
  2398  009BC0  42                 	db	66
  2399  009BC1  41                 	db	65
  2400  009BC2  40                 	db	64
  2401  009BC3  3F                 	db	63
  2402  009BC4  FF                 	db	255
  2403  009BC5  FE                 	db	254
  2404  009BC6  FD                 	db	253
  2405  009BC7  FC                 	db	252
  2406  009BC8  FB                 	db	251
  2407  009BC9  FA                 	db	250
  2408  009BCA  F9                 	db	249
  2409  009BCB  F8                 	db	248
  2410  009BCC  F7                 	db	247
  2411  009BCD  F6                 	db	246
  2412  009BCE  F5                 	db	245
  2413  009BCF  F4                 	db	244
  2414  009BD0  F3                 	db	243
  2415  009BD1  F2                 	db	242
  2416  009BD2  F1                 	db	241
  2417  009BD3  F0                 	db	240
  2418  009BD4  EF                 	db	239
  2419  009BD5  EE                 	db	238
  2420  009BD6  ED                 	db	237
  2421  009BD7  EC                 	db	236
  2422  009BD8  EB                 	db	235
  2423  009BD9  EA                 	db	234
  2424  009BDA  E9                 	db	233
  2425  009BDB  E8                 	db	232
  2426  009BDC  E7                 	db	231
  2427  009BDD  E6                 	db	230
  2428  009BDE  E5                 	db	229
  2429  009BDF  E4                 	db	228
  2430  009BE0  E3                 	db	227
  2431  009BE1  E2                 	db	226
  2432  009BE2  E1                 	db	225
  2433  009BE3  E0                 	db	224
  2434  009BE4  DF                 	db	223
  2435  009BE5  DE                 	db	222
  2436  009BE6  DD                 	db	221
  2437  009BE7  DC                 	db	220
  2438  009BE8  DB                 	db	219
  2439  009BE9  DA                 	db	218
  2440  009BEA  D9                 	db	217
  2441  009BEB  D8                 	db	216
  2442  009BEC  D7                 	db	215
  2443  009BED  D6                 	db	214
  2444  009BEE  D5                 	db	213
  2445  009BEF  D4                 	db	212
  2446  009BF0  D3                 	db	211
  2447  009BF1  D2                 	db	210
  2448  009BF2  D1                 	db	209
  2449  009BF3  D0                 	db	208
  2450  009BF4  CF                 	db	207
  2451  009BF5  CE                 	db	206
  2452  009BF6  CD                 	db	205
  2453  009BF7  CC                 	db	204
  2454  009BF8  CB                 	db	203
  2455  009BF9  CA                 	db	202
  2456  009BFA  C9                 	db	201
  2457  009BFB  C8                 	db	200
  2458  009BFC  C7                 	db	199
  2459  009BFD                     __end_of_motor_period_lookup:
  2460                           	opt stack 0
  2461  009BFD                     _motor_prescaler_lookup:
  2462                           	opt stack 0
  2463  009BFD  02                 	db	2
  2464  009BFE  02                 	db	2
  2465  009BFF  02                 	db	2
  2466  009C00  02                 	db	2
  2467  009C01  02                 	db	2
  2468  009C02  02                 	db	2
  2469  009C03  02                 	db	2
  2470  009C04  02                 	db	2
  2471  009C05  02                 	db	2
  2472  009C06  02                 	db	2
  2473  009C07  02                 	db	2
  2474  009C08  02                 	db	2
  2475  009C09  02                 	db	2
  2476  009C0A  02                 	db	2
  2477  009C0B  02                 	db	2
  2478  009C0C  02                 	db	2
  2479  009C0D  02                 	db	2
  2480  009C0E  02                 	db	2
  2481  009C0F  02                 	db	2
  2482  009C10  02                 	db	2
  2483  009C11  02                 	db	2
  2484  009C12  02                 	db	2
  2485  009C13  02                 	db	2
  2486  009C14  02                 	db	2
  2487  009C15  02                 	db	2
  2488  009C16  02                 	db	2
  2489  009C17  02                 	db	2
  2490  009C18  02                 	db	2
  2491  009C19  02                 	db	2
  2492  009C1A  02                 	db	2
  2493  009C1B  02                 	db	2
  2494  009C1C  02                 	db	2
  2495  009C1D  02                 	db	2
  2496  009C1E  02                 	db	2
  2497  009C1F  02                 	db	2
  2498  009C20  02                 	db	2
  2499  009C21  02                 	db	2
  2500  009C22  02                 	db	2
  2501  009C23  02                 	db	2
  2502  009C24  02                 	db	2
  2503  009C25  02                 	db	2
  2504  009C26  02                 	db	2
  2505  009C27  02                 	db	2
  2506  009C28  02                 	db	2
  2507  009C29  02                 	db	2
  2508  009C2A  02                 	db	2
  2509  009C2B  02                 	db	2
  2510  009C2C  02                 	db	2
  2511  009C2D  02                 	db	2
  2512  009C2E  02                 	db	2
  2513  009C2F  02                 	db	2
  2514  009C30  02                 	db	2
  2515  009C31  02                 	db	2
  2516  009C32  02                 	db	2
  2517  009C33  02                 	db	2
  2518  009C34  02                 	db	2
  2519  009C35  02                 	db	2
  2520  009C36  02                 	db	2
  2521  009C37  02                 	db	2
  2522  009C38  02                 	db	2
  2523  009C39  02                 	db	2
  2524  009C3A  02                 	db	2
  2525  009C3B  02                 	db	2
  2526  009C3C  02                 	db	2
  2527  009C3D  02                 	db	2
  2528  009C3E  02                 	db	2
  2529  009C3F  02                 	db	2
  2530  009C40  02                 	db	2
  2531  009C41  02                 	db	2
  2532  009C42  02                 	db	2
  2533  009C43  02                 	db	2
  2534  009C44  02                 	db	2
  2535  009C45  02                 	db	2
  2536  009C46  02                 	db	2
  2537  009C47  02                 	db	2
  2538  009C48  02                 	db	2
  2539  009C49  02                 	db	2
  2540  009C4A  02                 	db	2
  2541  009C4B  02                 	db	2
  2542  009C4C  02                 	db	2
  2543  009C4D  02                 	db	2
  2544  009C4E  02                 	db	2
  2545  009C4F  02                 	db	2
  2546  009C50  02                 	db	2
  2547  009C51  02                 	db	2
  2548  009C52  02                 	db	2
  2549  009C53  02                 	db	2
  2550  009C54  02                 	db	2
  2551  009C55  02                 	db	2
  2552  009C56  02                 	db	2
  2553  009C57  02                 	db	2
  2554  009C58  02                 	db	2
  2555  009C59  02                 	db	2
  2556  009C5A  02                 	db	2
  2557  009C5B  02                 	db	2
  2558  009C5C  02                 	db	2
  2559  009C5D  02                 	db	2
  2560  009C5E  02                 	db	2
  2561  009C5F  02                 	db	2
  2562  009C60  02                 	db	2
  2563  009C61  02                 	db	2
  2564  009C62  02                 	db	2
  2565  009C63  02                 	db	2
  2566  009C64  02                 	db	2
  2567  009C65  02                 	db	2
  2568  009C66  02                 	db	2
  2569  009C67  02                 	db	2
  2570  009C68  02                 	db	2
  2571  009C69  02                 	db	2
  2572  009C6A  02                 	db	2
  2573  009C6B  02                 	db	2
  2574  009C6C  02                 	db	2
  2575  009C6D  02                 	db	2
  2576  009C6E  02                 	db	2
  2577  009C6F  02                 	db	2
  2578  009C70  02                 	db	2
  2579  009C71  02                 	db	2
  2580  009C72  02                 	db	2
  2581  009C73  02                 	db	2
  2582  009C74  02                 	db	2
  2583  009C75  02                 	db	2
  2584  009C76  02                 	db	2
  2585  009C77  02                 	db	2
  2586  009C78  02                 	db	2
  2587  009C79  02                 	db	2
  2588  009C7A  02                 	db	2
  2589  009C7B  02                 	db	2
  2590  009C7C  02                 	db	2
  2591  009C7D  02                 	db	2
  2592  009C7E  02                 	db	2
  2593  009C7F  02                 	db	2
  2594  009C80  02                 	db	2
  2595  009C81  02                 	db	2
  2596  009C82  02                 	db	2
  2597  009C83  02                 	db	2
  2598  009C84  02                 	db	2
  2599  009C85  02                 	db	2
  2600  009C86  02                 	db	2
  2601  009C87  02                 	db	2
  2602  009C88  02                 	db	2
  2603  009C89  02                 	db	2
  2604  009C8A  02                 	db	2
  2605  009C8B  02                 	db	2
  2606  009C8C  02                 	db	2
  2607  009C8D  02                 	db	2
  2608  009C8E  02                 	db	2
  2609  009C8F  02                 	db	2
  2610  009C90  02                 	db	2
  2611  009C91  02                 	db	2
  2612  009C92  02                 	db	2
  2613  009C93  02                 	db	2
  2614  009C94  02                 	db	2
  2615  009C95  02                 	db	2
  2616  009C96  02                 	db	2
  2617  009C97  02                 	db	2
  2618  009C98  02                 	db	2
  2619  009C99  02                 	db	2
  2620  009C9A  02                 	db	2
  2621  009C9B  02                 	db	2
  2622  009C9C  02                 	db	2
  2623  009C9D  02                 	db	2
  2624  009C9E  02                 	db	2
  2625  009C9F  02                 	db	2
  2626  009CA0  02                 	db	2
  2627  009CA1  02                 	db	2
  2628  009CA2  02                 	db	2
  2629  009CA3  02                 	db	2
  2630  009CA4  02                 	db	2
  2631  009CA5  02                 	db	2
  2632  009CA6  02                 	db	2
  2633  009CA7  02                 	db	2
  2634  009CA8  02                 	db	2
  2635  009CA9  02                 	db	2
  2636  009CAA  02                 	db	2
  2637  009CAB  02                 	db	2
  2638  009CAC  02                 	db	2
  2639  009CAD  02                 	db	2
  2640  009CAE  02                 	db	2
  2641  009CAF  02                 	db	2
  2642  009CB0  02                 	db	2
  2643  009CB1  02                 	db	2
  2644  009CB2  02                 	db	2
  2645  009CB3  02                 	db	2
  2646  009CB4  02                 	db	2
  2647  009CB5  02                 	db	2
  2648  009CB6  02                 	db	2
  2649  009CB7  02                 	db	2
  2650  009CB8  02                 	db	2
  2651  009CB9  02                 	db	2
  2652  009CBA  02                 	db	2
  2653  009CBB  02                 	db	2
  2654  009CBC  02                 	db	2
  2655  009CBD  02                 	db	2
  2656  009CBE  02                 	db	2
  2657  009CBF  02                 	db	2
  2658  009CC0  02                 	db	2
  2659  009CC1  02                 	db	2
  2660  009CC2  02                 	db	2
  2661  009CC3  02                 	db	2
  2662  009CC4  02                 	db	2
  2663  009CC5  02                 	db	2
  2664  009CC6  02                 	db	2
  2665  009CC7  02                 	db	2
  2666  009CC8  02                 	db	2
  2667  009CC9  02                 	db	2
  2668  009CCA  02                 	db	2
  2669  009CCB  02                 	db	2
  2670  009CCC  02                 	db	2
  2671  009CCD  02                 	db	2
  2672  009CCE  02                 	db	2
  2673  009CCF  02                 	db	2
  2674  009CD0  02                 	db	2
  2675  009CD1  02                 	db	2
  2676  009CD2  02                 	db	2
  2677  009CD3  02                 	db	2
  2678  009CD4  02                 	db	2
  2679  009CD5  02                 	db	2
  2680  009CD6  02                 	db	2
  2681  009CD7  02                 	db	2
  2682  009CD8  02                 	db	2
  2683  009CD9  02                 	db	2
  2684  009CDA  02                 	db	2
  2685  009CDB  02                 	db	2
  2686  009CDC  02                 	db	2
  2687  009CDD  02                 	db	2
  2688  009CDE  02                 	db	2
  2689  009CDF  02                 	db	2
  2690  009CE0  02                 	db	2
  2691  009CE1  02                 	db	2
  2692  009CE2  02                 	db	2
  2693  009CE3  02                 	db	2
  2694  009CE4  02                 	db	2
  2695  009CE5  02                 	db	2
  2696  009CE6  02                 	db	2
  2697  009CE7  02                 	db	2
  2698  009CE8  02                 	db	2
  2699  009CE9  02                 	db	2
  2700  009CEA  01                 	db	1
  2701  009CEB  01                 	db	1
  2702  009CEC  01                 	db	1
  2703  009CED  01                 	db	1
  2704  009CEE  01                 	db	1
  2705  009CEF  01                 	db	1
  2706  009CF0  01                 	db	1
  2707  009CF1  01                 	db	1
  2708  009CF2  01                 	db	1
  2709  009CF3  01                 	db	1
  2710  009CF4  01                 	db	1
  2711  009CF5  01                 	db	1
  2712  009CF6  01                 	db	1
  2713  009CF7  01                 	db	1
  2714  009CF8  01                 	db	1
  2715  009CF9  01                 	db	1
  2716  009CFA  01                 	db	1
  2717  009CFB  01                 	db	1
  2718  009CFC  01                 	db	1
  2719  009CFD  01                 	db	1
  2720  009CFE  01                 	db	1
  2721  009CFF  01                 	db	1
  2722  009D00  01                 	db	1
  2723  009D01  01                 	db	1
  2724  009D02  01                 	db	1
  2725  009D03  01                 	db	1
  2726  009D04  01                 	db	1
  2727  009D05  01                 	db	1
  2728  009D06  01                 	db	1
  2729  009D07  01                 	db	1
  2730  009D08  01                 	db	1
  2731  009D09  01                 	db	1
  2732  009D0A  01                 	db	1
  2733  009D0B  01                 	db	1
  2734  009D0C  01                 	db	1
  2735  009D0D  01                 	db	1
  2736  009D0E  01                 	db	1
  2737  009D0F  01                 	db	1
  2738  009D10  01                 	db	1
  2739  009D11  01                 	db	1
  2740  009D12  01                 	db	1
  2741  009D13  01                 	db	1
  2742  009D14  01                 	db	1
  2743  009D15  01                 	db	1
  2744  009D16  01                 	db	1
  2745  009D17  01                 	db	1
  2746  009D18  01                 	db	1
  2747  009D19  01                 	db	1
  2748  009D1A  01                 	db	1
  2749  009D1B  01                 	db	1
  2750  009D1C  01                 	db	1
  2751  009D1D  01                 	db	1
  2752  009D1E  01                 	db	1
  2753  009D1F  01                 	db	1
  2754  009D20  01                 	db	1
  2755  009D21  01                 	db	1
  2756  009D22  01                 	db	1
  2757  009D23  01                 	db	1
  2758  009D24  01                 	db	1
  2759  009D25  01                 	db	1
  2760  009D26  01                 	db	1
  2761  009D27  01                 	db	1
  2762  009D28  01                 	db	1
  2763  009D29  01                 	db	1
  2764  009D2A  01                 	db	1
  2765  009D2B  01                 	db	1
  2766  009D2C  01                 	db	1
  2767  009D2D  01                 	db	1
  2768  009D2E  01                 	db	1
  2769  009D2F  01                 	db	1
  2770  009D30  01                 	db	1
  2771  009D31  01                 	db	1
  2772  009D32  01                 	db	1
  2773  009D33  01                 	db	1
  2774  009D34  01                 	db	1
  2775  009D35  01                 	db	1
  2776  009D36  01                 	db	1
  2777  009D37  01                 	db	1
  2778  009D38  01                 	db	1
  2779  009D39  01                 	db	1
  2780  009D3A  01                 	db	1
  2781  009D3B  01                 	db	1
  2782  009D3C  01                 	db	1
  2783  009D3D  01                 	db	1
  2784  009D3E  01                 	db	1
  2785  009D3F  01                 	db	1
  2786  009D40  01                 	db	1
  2787  009D41  01                 	db	1
  2788  009D42  01                 	db	1
  2789  009D43  01                 	db	1
  2790  009D44  01                 	db	1
  2791  009D45  01                 	db	1
  2792  009D46  01                 	db	1
  2793  009D47  01                 	db	1
  2794  009D48  01                 	db	1
  2795  009D49  01                 	db	1
  2796  009D4A  01                 	db	1
  2797  009D4B  01                 	db	1
  2798  009D4C  01                 	db	1
  2799  009D4D  01                 	db	1
  2800  009D4E  01                 	db	1
  2801  009D4F  01                 	db	1
  2802  009D50  01                 	db	1
  2803  009D51  01                 	db	1
  2804  009D52  01                 	db	1
  2805  009D53  01                 	db	1
  2806  009D54  01                 	db	1
  2807  009D55  01                 	db	1
  2808  009D56  01                 	db	1
  2809  009D57  01                 	db	1
  2810  009D58  01                 	db	1
  2811  009D59  01                 	db	1
  2812  009D5A  01                 	db	1
  2813  009D5B  01                 	db	1
  2814  009D5C  01                 	db	1
  2815  009D5D  01                 	db	1
  2816  009D5E  01                 	db	1
  2817  009D5F  01                 	db	1
  2818  009D60  01                 	db	1
  2819  009D61  01                 	db	1
  2820  009D62  01                 	db	1
  2821  009D63  01                 	db	1
  2822  009D64  01                 	db	1
  2823  009D65  01                 	db	1
  2824  009D66  01                 	db	1
  2825  009D67  01                 	db	1
  2826  009D68  01                 	db	1
  2827  009D69  01                 	db	1
  2828  009D6A  01                 	db	1
  2829  009D6B  01                 	db	1
  2830  009D6C  01                 	db	1
  2831  009D6D  01                 	db	1
  2832  009D6E  01                 	db	1
  2833  009D6F  01                 	db	1
  2834  009D70  01                 	db	1
  2835  009D71  01                 	db	1
  2836  009D72  01                 	db	1
  2837  009D73  01                 	db	1
  2838  009D74  01                 	db	1
  2839  009D75  01                 	db	1
  2840  009D76  01                 	db	1
  2841  009D77  01                 	db	1
  2842  009D78  01                 	db	1
  2843  009D79  01                 	db	1
  2844  009D7A  01                 	db	1
  2845  009D7B  01                 	db	1
  2846  009D7C  01                 	db	1
  2847  009D7D  01                 	db	1
  2848  009D7E  01                 	db	1
  2849  009D7F  01                 	db	1
  2850  009D80  01                 	db	1
  2851  009D81  01                 	db	1
  2852  009D82  01                 	db	1
  2853  009D83  01                 	db	1
  2854  009D84  01                 	db	1
  2855  009D85  01                 	db	1
  2856  009D86  01                 	db	1
  2857  009D87  01                 	db	1
  2858  009D88  01                 	db	1
  2859  009D89  01                 	db	1
  2860  009D8A  01                 	db	1
  2861  009D8B  01                 	db	1
  2862  009D8C  01                 	db	1
  2863  009D8D  01                 	db	1
  2864  009D8E  01                 	db	1
  2865  009D8F  01                 	db	1
  2866  009D90  01                 	db	1
  2867  009D91  01                 	db	1
  2868  009D92  01                 	db	1
  2869  009D93  01                 	db	1
  2870  009D94  01                 	db	1
  2871  009D95  01                 	db	1
  2872  009D96  01                 	db	1
  2873  009D97  01                 	db	1
  2874  009D98  01                 	db	1
  2875  009D99  01                 	db	1
  2876  009D9A  01                 	db	1
  2877  009D9B  01                 	db	1
  2878  009D9C  01                 	db	1
  2879  009D9D  01                 	db	1
  2880  009D9E  01                 	db	1
  2881  009D9F  01                 	db	1
  2882  009DA0  01                 	db	1
  2883  009DA1  01                 	db	1
  2884  009DA2  01                 	db	1
  2885  009DA3  01                 	db	1
  2886  009DA4  01                 	db	1
  2887  009DA5  01                 	db	1
  2888  009DA6  01                 	db	1
  2889  009DA7  01                 	db	1
  2890  009DA8  01                 	db	1
  2891  009DA9  01                 	db	1
  2892  009DAA  01                 	db	1
  2893  009DAB  00                 	db	0
  2894  009DAC  00                 	db	0
  2895  009DAD  00                 	db	0
  2896  009DAE  00                 	db	0
  2897  009DAF  00                 	db	0
  2898  009DB0  00                 	db	0
  2899  009DB1  00                 	db	0
  2900  009DB2  00                 	db	0
  2901  009DB3  00                 	db	0
  2902  009DB4  00                 	db	0
  2903  009DB5  00                 	db	0
  2904  009DB6  00                 	db	0
  2905  009DB7  00                 	db	0
  2906  009DB8  00                 	db	0
  2907  009DB9  00                 	db	0
  2908  009DBA  00                 	db	0
  2909  009DBB  00                 	db	0
  2910  009DBC  00                 	db	0
  2911  009DBD  00                 	db	0
  2912  009DBE  00                 	db	0
  2913  009DBF  00                 	db	0
  2914  009DC0  00                 	db	0
  2915  009DC1  00                 	db	0
  2916  009DC2  00                 	db	0
  2917  009DC3  00                 	db	0
  2918  009DC4  00                 	db	0
  2919  009DC5  00                 	db	0
  2920  009DC6  00                 	db	0
  2921  009DC7  00                 	db	0
  2922  009DC8  00                 	db	0
  2923  009DC9  00                 	db	0
  2924  009DCA  00                 	db	0
  2925  009DCB  00                 	db	0
  2926  009DCC  00                 	db	0
  2927  009DCD  00                 	db	0
  2928  009DCE  00                 	db	0
  2929  009DCF  00                 	db	0
  2930  009DD0  00                 	db	0
  2931  009DD1  00                 	db	0
  2932  009DD2  00                 	db	0
  2933  009DD3  00                 	db	0
  2934  009DD4  00                 	db	0
  2935  009DD5  00                 	db	0
  2936  009DD6  00                 	db	0
  2937  009DD7  00                 	db	0
  2938  009DD8  00                 	db	0
  2939  009DD9  00                 	db	0
  2940  009DDA  00                 	db	0
  2941  009DDB  00                 	db	0
  2942  009DDC  00                 	db	0
  2943  009DDD  00                 	db	0
  2944  009DDE  00                 	db	0
  2945  009DDF  00                 	db	0
  2946  009DE0  00                 	db	0
  2947  009DE1  00                 	db	0
  2948  009DE2  00                 	db	0
  2949  009DE3  00                 	db	0
  2950  009DE4                     __end_of_motor_prescaler_lookup:
  2951                           	opt stack 0
  2952  009DE4                     _USB_SD_Ptr:
  2953                           	opt stack 0
  2954  009DE4  FA                 	db	low _sd000
  2955  009DE5  A2                 	db	high _sd000
  2956  009DE6  FE                 	db	low _sd001
  2957  009DE7  A0                 	db	high _sd001
  2958  009DE8  32                 	db	low _sd002
  2959  009DE9  A1                 	db	high _sd002
  2960  009DEA  A1                 	db	low _sd003
  2961  009DEB  A1                 	db	high _sd003
  2962  009DEC                     __end_of_USB_SD_Ptr:
  2963                           	opt stack 0
  2964  009DEC                     _USB_CD_Ptr:
  2965                           	opt stack 0
  2966  009DEC  BE                 	db	low _configDescriptor1
  2967  009DED  A0                 	db	high _configDescriptor1
  2968  009DEE                     __end_of_USB_CD_Ptr:
  2969                           	opt stack 0
  2970  009DEE                     _dc_manual:
  2971                           	opt stack 0
  2972  009DEE  4D                 	db	77
  2973  009DEF  61                 	db	97
  2974  009DF0  6E                 	db	110
  2975  009DF1  75                 	db	117
  2976  009DF2  61                 	db	97
  2977  009DF3  6C                 	db	108
  2978  009DF4  20                 	db	32
  2979  009DF5  4D                 	db	77
  2980  009DF6  6F                 	db	111
  2981  009DF7  64                 	db	100
  2982  009DF8  65                 	db	101
  2983  009DF9  20                 	db	32
  2984  009DFA  20                 	db	32
  2985  009DFB  20                 	db	32
  2986  009DFC  20                 	db	32
  2987  009DFD  20                 	db	32
  2988  009DFE  20                 	db	32
  2989  009DFF  20                 	db	32
  2990  009E00  20                 	db	32
  2991  009E01  20                 	db	32
  2992  009E02  43                 	db	67
  2993  009E03  75                 	db	117
  2994  009E04  72                 	db	114
  2995  009E05  72                 	db	114
  2996  009E06  65                 	db	101
  2997  009E07  6E                 	db	110
  2998  009E08  74                 	db	116
  2999  009E09  20                 	db	32
  3000  009E0A  70                 	db	112
  3001  009E0B  6F                 	db	111
  3002  009E0C  73                 	db	115
  3003  009E0D  3A                 	db	58
  3004  009E0E  20                 	db	32
  3005  009E0F  20                 	db	32
  3006  009E10  20                 	db	32
  3007  009E11  20                 	db	32
  3008  009E12  20                 	db	32
  3009  009E13  20                 	db	32
  3010  009E14  20                 	db	32
  3011  009E15  01                 	db	1
  3012  009E16  54                 	db	84
  3013  009E17  75                 	db	117
  3014  009E18  72                 	db	114
  3015  009E19  6E                 	db	110
  3016  009E1A  20                 	db	32
  3017  009E1B  43                 	db	67
  3018  009E1C  43                 	db	67
  3019  009E1D  57                 	db	87
  3020  009E1E  20                 	db	32
  3021  009E1F  00                 	db	0
  3022  009E20  20                 	db	32
  3023  009E21  53                 	db	83
  3024  009E22  70                 	db	112
  3025  009E23  65                 	db	101
  3026  009E24  65                 	db	101
  3027  009E25  64                 	db	100
  3028  009E26  20                 	db	32
  3029  009E27  20                 	db	32
  3030  009E28  20                 	db	32
  3031  009E29  20                 	db	32
  3032  009E2A  53                 	db	83
  3033  009E2B  74                 	db	116
  3034  009E2C  61                 	db	97
  3035  009E2D  72                 	db	114
  3036  009E2E  74                 	db	116
  3037  009E2F  20                 	db	32
  3038  009E30  20                 	db	32
  3039  009E31  20                 	db	32
  3040  009E32  20                 	db	32
  3041  009E33  00                 	db	0
  3042  009E34  20                 	db	32
  3043  009E35  20                 	db	32
  3044  009E36  20                 	db	32
  3045  009E37  20                 	db	32
  3046  009E38  20                 	db	32
  3047  009E39  20                 	db	32
  3048  009E3A  20                 	db	32
  3049  009E3B  20                 	db	32
  3050  009E3C  20                 	db	32
  3051  009E3D  20                 	db	32
  3052  009E3E                     __end_of_dc_manual:
  3053                           	opt stack 0
  3054  009E3E                     _dc_zero:
  3055                           	opt stack 0
  3056  009E3E  52                 	db	82
  3057  009E3F  65                 	db	101
  3058  009E40  74                 	db	116
  3059  009E41  75                 	db	117
  3060  009E42  72                 	db	114
  3061  009E43  6E                 	db	110
  3062  009E44  20                 	db	32
  3063  009E45  74                 	db	116
  3064  009E46  6F                 	db	111
  3065  009E47  20                 	db	32
  3066  009E48  5A                 	db	90
  3067  009E49  65                 	db	101
  3068  009E4A  72                 	db	114
  3069  009E4B  6F                 	db	111
  3070  009E4C  3F                 	db	63
  3071  009E4D  20                 	db	32
  3072  009E4E  20                 	db	32
  3073  009E4F  20                 	db	32
  3074  009E50  20                 	db	32
  3075  009E51  20                 	db	32
  3076  009E52  43                 	db	67
  3077  009E53  75                 	db	117
  3078  009E54  72                 	db	114
  3079  009E55  72                 	db	114
  3080  009E56  65                 	db	101
  3081  009E57  6E                 	db	110
  3082  009E58  74                 	db	116
  3083  009E59  20                 	db	32
  3084  009E5A  70                 	db	112
  3085  009E5B  6F                 	db	111
  3086  009E5C  73                 	db	115
  3087  009E5D  3A                 	db	58
  3088  009E5E  20                 	db	32
  3089  009E5F  20                 	db	32
  3090  009E60  20                 	db	32
  3091  009E61  20                 	db	32
  3092  009E62  20                 	db	32
  3093  009E63  20                 	db	32
  3094  009E64  20                 	db	32
  3095  009E65  20                 	db	32
  3096  009E66  20                 	db	32
  3097  009E67  20                 	db	32
  3098  009E68  20                 	db	32
  3099  009E69  20                 	db	32
  3100  009E6A  20                 	db	32
  3101  009E6B  20                 	db	32
  3102  009E6C  20                 	db	32
  3103  009E6D  20                 	db	32
  3104  009E6E  20                 	db	32
  3105  009E6F  20                 	db	32
  3106  009E70  20                 	db	32
  3107  009E71  20                 	db	32
  3108  009E72  20                 	db	32
  3109  009E73  20                 	db	32
  3110  009E74  20                 	db	32
  3111  009E75  20                 	db	32
  3112  009E76  20                 	db	32
  3113  009E77  20                 	db	32
  3114  009E78  20                 	db	32
  3115  009E79  20                 	db	32
  3116  009E7A  20                 	db	32
  3117  009E7B  59                 	db	89
  3118  009E7C  65                 	db	101
  3119  009E7D  73                 	db	115
  3120  009E7E  20                 	db	32
  3121  009E7F  20                 	db	32
  3122  009E80  20                 	db	32
  3123  009E81  20                 	db	32
  3124  009E82  20                 	db	32
  3125  009E83  20                 	db	32
  3126  009E84  20                 	db	32
  3127  009E85  20                 	db	32
  3128  009E86  20                 	db	32
  3129  009E87  20                 	db	32
  3130  009E88  20                 	db	32
  3131  009E89  20                 	db	32
  3132  009E8A  4E                 	db	78
  3133  009E8B  6F                 	db	111
  3134  009E8C  20                 	db	32
  3135  009E8D  20                 	db	32
  3136  009E8E                     __end_of_dc_zero:
  3137                           	opt stack 0
  3138  009E8E                     _dc_arc2:
  3139                           	opt stack 0
  3140  009E8E  41                 	db	65
  3141  009E8F  72                 	db	114
  3142  009E90  63                 	db	99
  3143  009E91  3A                 	db	58
  3144  009E92  20                 	db	32
  3145  009E93  53                 	db	83
  3146  009E94  69                 	db	105
  3147  009E95  7A                 	db	122
  3148  009E96  65                 	db	101
  3149  009E97  3D                 	db	61
  3150  009E98  20                 	db	32
  3151  009E99  20                 	db	32
  3152  009E9A  20                 	db	32
  3153  009E9B  20                 	db	32
  3154  009E9C  20                 	db	32
  3155  009E9D  20                 	db	32
  3156  009E9E  20                 	db	32
  3157  009E9F  20                 	db	32
  3158  009EA0  20                 	db	32
  3159  009EA1  20                 	db	32
  3160  009EA2  43                 	db	67
  3161  009EA3  75                 	db	117
  3162  009EA4  72                 	db	114
  3163  009EA5  72                 	db	114
  3164  009EA6  65                 	db	101
  3165  009EA7  6E                 	db	110
  3166  009EA8  74                 	db	116
  3167  009EA9  20                 	db	32
  3168  009EAA  70                 	db	112
  3169  009EAB  6F                 	db	111
  3170  009EAC  73                 	db	115
  3171  009EAD  3A                 	db	58
  3172  009EAE  20                 	db	32
  3173  009EAF  20                 	db	32
  3174  009EB0  20                 	db	32
  3175  009EB1  20                 	db	32
  3176  009EB2  20                 	db	32
  3177  009EB3  20                 	db	32
  3178  009EB4  20                 	db	32
  3179  009EB5  01                 	db	1
  3180  009EB6  54                 	db	84
  3181  009EB7  75                 	db	117
  3182  009EB8  72                 	db	114
  3183  009EB9  6E                 	db	110
  3184  009EBA  20                 	db	32
  3185  009EBB  43                 	db	67
  3186  009EBC  43                 	db	67
  3187  009EBD  57                 	db	87
  3188  009EBE  20                 	db	32
  3189  009EBF  00                 	db	0
  3190  009EC0  20                 	db	32
  3191  009EC1  53                 	db	83
  3192  009EC2  70                 	db	112
  3193  009EC3  65                 	db	101
  3194  009EC4  65                 	db	101
  3195  009EC5  64                 	db	100
  3196  009EC6  20                 	db	32
  3197  009EC7  20                 	db	32
  3198  009EC8  20                 	db	32
  3199  009EC9  20                 	db	32
  3200  009ECA  53                 	db	83
  3201  009ECB  74                 	db	116
  3202  009ECC  61                 	db	97
  3203  009ECD  72                 	db	114
  3204  009ECE  74                 	db	116
  3205  009ECF  20                 	db	32
  3206  009ED0  20                 	db	32
  3207  009ED1  20                 	db	32
  3208  009ED2  20                 	db	32
  3209  009ED3  00                 	db	0
  3210  009ED4  20                 	db	32
  3211  009ED5  20                 	db	32
  3212  009ED6  20                 	db	32
  3213  009ED7  20                 	db	32
  3214  009ED8  20                 	db	32
  3215  009ED9  20                 	db	32
  3216  009EDA  20                 	db	32
  3217  009EDB  20                 	db	32
  3218  009EDC  20                 	db	32
  3219  009EDD  20                 	db	32
  3220  009EDE                     __end_of_dc_arc2:
  3221                           	opt stack 0
  3222  009EDE                     _dc_arc1:
  3223                           	opt stack 0
  3224  009EDE  41                 	db	65
  3225  009EDF  72                 	db	114
  3226  009EE0  63                 	db	99
  3227  009EE1  3A                 	db	58
  3228  009EE2  20                 	db	32
  3229  009EE3  53                 	db	83
  3230  009EE4  65                 	db	101
  3231  009EE5  74                 	db	116
  3232  009EE6  20                 	db	32
  3233  009EE7  61                 	db	97
  3234  009EE8  72                 	db	114
  3235  009EE9  63                 	db	99
  3236  009EEA  20                 	db	32
  3237  009EEB  73                 	db	115
  3238  009EEC  69                 	db	105
  3239  009EED  7A                 	db	122
  3240  009EEE  65                 	db	101
  3241  009EEF  20                 	db	32
  3242  009EF0  20                 	db	32
  3243  009EF1  20                 	db	32
  3244  009EF2  41                 	db	65
  3245  009EF3  72                 	db	114
  3246  009EF4  63                 	db	99
  3247  009EF5  20                 	db	32
  3248  009EF6  73                 	db	115
  3249  009EF7  69                 	db	105
  3250  009EF8  7A                 	db	122
  3251  009EF9  65                 	db	101
  3252  009EFA  3A                 	db	58
  3253  009EFB  20                 	db	32
  3254  009EFC  20                 	db	32
  3255  009EFD  20                 	db	32
  3256  009EFE  20                 	db	32
  3257  009EFF  20                 	db	32
  3258  009F00  20                 	db	32
  3259  009F01  20                 	db	32
  3260  009F02  20                 	db	32
  3261  009F03  20                 	db	32
  3262  009F04  20                 	db	32
  3263  009F05  20                 	db	32
  3264  009F06  53                 	db	83
  3265  009F07  74                 	db	116
  3266  009F08  65                 	db	101
  3267  009F09  70                 	db	112
  3268  009F0A  20                 	db	32
  3269  009F0B  73                 	db	115
  3270  009F0C  69                 	db	105
  3271  009F0D  7A                 	db	122
  3272  009F0E  65                 	db	101
  3273  009F0F  20                 	db	32
  3274  009F10  00                 	db	0
  3275  009F11  20                 	db	32
  3276  009F12  20                 	db	32
  3277  009F13  43                 	db	67
  3278  009F14  6F                 	db	111
  3279  009F15  6E                 	db	110
  3280  009F16  66                 	db	102
  3281  009F17  69                 	db	105
  3282  009F18  72                 	db	114
  3283  009F19  6D                 	db	109
  3284  009F1A  20                 	db	32
  3285  009F1B  20                 	db	32
  3286  009F1C  20                 	db	32
  3287  009F1D  20                 	db	32
  3288  009F1E  20                 	db	32
  3289  009F1F  20                 	db	32
  3290  009F20  20                 	db	32
  3291  009F21  20                 	db	32
  3292  009F22  20                 	db	32
  3293  009F23  20                 	db	32
  3294  009F24  00                 	db	0
  3295  009F25  20                 	db	32
  3296  009F26  20                 	db	32
  3297  009F27  43                 	db	67
  3298  009F28  61                 	db	97
  3299  009F29  6E                 	db	110
  3300  009F2A  63                 	db	99
  3301  009F2B  65                 	db	101
  3302  009F2C  6C                 	db	108
  3303  009F2D  20                 	db	32
  3304  009F2E                     __end_of_dc_arc1:
  3305                           	opt stack 0
  3306  009F2E                     _dc_divide2:
  3307                           	opt stack 0
  3308  009F2E  44                 	db	68
  3309  009F2F  69                 	db	105
  3310  009F30  76                 	db	118
  3311  009F31  69                 	db	105
  3312  009F32  64                 	db	100
  3313  009F33  65                 	db	101
  3314  009F34  3A                 	db	58
  3315  009F35  20                 	db	32
  3316  009F36  20                 	db	32
  3317  009F37  20                 	db	32
  3318  009F38  20                 	db	32
  3319  009F39  20                 	db	32
  3320  009F3A  20                 	db	32
  3321  009F3B  20                 	db	32
  3322  009F3C  20                 	db	32
  3323  009F3D  20                 	db	32
  3324  009F3E  20                 	db	32
  3325  009F3F  20                 	db	32
  3326  009F40  20                 	db	32
  3327  009F41  20                 	db	32
  3328  009F42  50                 	db	80
  3329  009F43  6F                 	db	111
  3330  009F44  73                 	db	115
  3331  009F45  3A                 	db	58
  3332  009F46  20                 	db	32
  3333  009F47  20                 	db	32
  3334  009F48  20                 	db	32
  3335  009F49  20                 	db	32
  3336  009F4A  20                 	db	32
  3337  009F4B  20                 	db	32
  3338  009F4C  20                 	db	32
  3339  009F4D  20                 	db	32
  3340  009F4E  20                 	db	32
  3341  009F4F  20                 	db	32
  3342  009F50  20                 	db	32
  3343  009F51  20                 	db	32
  3344  009F52  20                 	db	32
  3345  009F53  20                 	db	32
  3346  009F54  20                 	db	32
  3347  009F55  20                 	db	32
  3348  009F56  4A                 	db	74
  3349  009F57  75                 	db	117
  3350  009F58  6D                 	db	109
  3351  009F59  70                 	db	112
  3352  009F5A  20                 	db	32
  3353  009F5B  73                 	db	115
  3354  009F5C  69                 	db	105
  3355  009F5D  7A                 	db	122
  3356  009F5E  65                 	db	101
  3357  009F5F  3A                 	db	58
  3358  009F60  20                 	db	32
  3359  009F61  20                 	db	32
  3360  009F62  20                 	db	32
  3361  009F63  20                 	db	32
  3362  009F64  20                 	db	32
  3363  009F65  20                 	db	32
  3364  009F66  20                 	db	32
  3365  009F67  20                 	db	32
  3366  009F68  20                 	db	32
  3367  009F69  20                 	db	32
  3368  009F6A  50                 	db	80
  3369  009F6B  72                 	db	114
  3370  009F6C  65                 	db	101
  3371  009F6D  73                 	db	115
  3372  009F6E  73                 	db	115
  3373  009F6F  54                 	db	84
  3374  009F70  6F                 	db	111
  3375  009F71  4A                 	db	74
  3376  009F72  75                 	db	117
  3377  009F73  6D                 	db	109
  3378  009F74  70                 	db	112
  3379  009F75  20                 	db	32
  3380  009F76  00                 	db	0
  3381  009F77  20                 	db	32
  3382  009F78  43                 	db	67
  3383  009F79  61                 	db	97
  3384  009F7A  6E                 	db	110
  3385  009F7B  63                 	db	99
  3386  009F7C  65                 	db	101
  3387  009F7D  6C                 	db	108
  3388  009F7E                     __end_of_dc_divide2:
  3389                           	opt stack 0
  3390  009F7E                     _dc_divide1:
  3391                           	opt stack 0
  3392  009F7E  44                 	db	68
  3393  009F7F  69                 	db	105
  3394  009F80  76                 	db	118
  3395  009F81  69                 	db	105
  3396  009F82  64                 	db	100
  3397  009F83  65                 	db	101
  3398  009F84  3A                 	db	58
  3399  009F85  20                 	db	32
  3400  009F86  53                 	db	83
  3401  009F87  65                 	db	101
  3402  009F88  74                 	db	116
  3403  009F89  20                 	db	32
  3404  009F8A  64                 	db	100
  3405  009F8B  69                 	db	105
  3406  009F8C  76                 	db	118
  3407  009F8D  69                 	db	105
  3408  009F8E  73                 	db	115
  3409  009F8F  69                 	db	105
  3410  009F90  6F                 	db	111
  3411  009F91  6E                 	db	110
  3412  009F92  20                 	db	32
  3413  009F93  20                 	db	32
  3414  009F94  20                 	db	32
  3415  009F95  20                 	db	32
  3416  009F96  20                 	db	32
  3417  009F97  20                 	db	32
  3418  009F98  20                 	db	32
  3419  009F99  20                 	db	32
  3420  009F9A  20                 	db	32
  3421  009F9B  20                 	db	32
  3422  009F9C  20                 	db	32
  3423  009F9D  20                 	db	32
  3424  009F9E  20                 	db	32
  3425  009F9F  20                 	db	32
  3426  009FA0  20                 	db	32
  3427  009FA1  20                 	db	32
  3428  009FA2  20                 	db	32
  3429  009FA3  20                 	db	32
  3430  009FA4  20                 	db	32
  3431  009FA5  20                 	db	32
  3432  009FA6  20                 	db	32
  3433  009FA7  20                 	db	32
  3434  009FA8  20                 	db	32
  3435  009FA9  2F                 	db	47
  3436  009FAA  73                 	db	115
  3437  009FAB  74                 	db	116
  3438  009FAC  65                 	db	101
  3439  009FAD  70                 	db	112
  3440  009FAE  20                 	db	32
  3441  009FAF  20                 	db	32
  3442  009FB0  00                 	db	0
  3443  009FB1  20                 	db	32
  3444  009FB2  20                 	db	32
  3445  009FB3  43                 	db	67
  3446  009FB4  6F                 	db	111
  3447  009FB5  6E                 	db	110
  3448  009FB6  66                 	db	102
  3449  009FB7  69                 	db	105
  3450  009FB8  72                 	db	114
  3451  009FB9  6D                 	db	109
  3452  009FBA  31                 	db	49
  3453  009FBB  32                 	db	50
  3454  009FBC  33                 	db	51
  3455  009FBD  34                 	db	52
  3456  009FBE  20                 	db	32
  3457  009FBF  20                 	db	32
  3458  009FC0  20                 	db	32
  3459  009FC1  20                 	db	32
  3460  009FC2  20                 	db	32
  3461  009FC3  20                 	db	32
  3462  009FC4  00                 	db	0
  3463  009FC5  20                 	db	32
  3464  009FC6  20                 	db	32
  3465  009FC7  43                 	db	67
  3466  009FC8  61                 	db	97
  3467  009FC9  6E                 	db	110
  3468  009FCA  63                 	db	99
  3469  009FCB  65                 	db	101
  3470  009FCC  6C                 	db	108
  3471  009FCD  20                 	db	32
  3472  009FCE                     __end_of_dc_divide1:
  3473                           	opt stack 0
  3474  009FCE                     _dc_setup2:
  3475                           	opt stack 0
  3476  009FCE  53                 	db	83
  3477  009FCF  65                 	db	101
  3478  009FD0  74                 	db	116
  3479  009FD1  75                 	db	117
  3480  009FD2  70                 	db	112
  3481  009FD3  3A                 	db	58
  3482  009FD4  20                 	db	32
  3483  009FD5  53                 	db	83
  3484  009FD6  65                 	db	101
  3485  009FD7  74                 	db	116
  3486  009FD8  20                 	db	32
  3487  009FD9  64                 	db	100
  3488  009FDA  69                 	db	105
  3489  009FDB  72                 	db	114
  3490  009FDC  65                 	db	101
  3491  009FDD  63                 	db	99
  3492  009FDE  74                 	db	116
  3493  009FDF  69                 	db	105
  3494  009FE0  6F                 	db	111
  3495  009FE1  6E                 	db	110
  3496  009FE2  20                 	db	32
  3497  009FE3  20                 	db	32
  3498  009FE4  20                 	db	32
  3499  009FE5  20                 	db	32
  3500  009FE6  20                 	db	32
  3501  009FE7  20                 	db	32
  3502  009FE8  20                 	db	32
  3503  009FE9  20                 	db	32
  3504  009FEA  20                 	db	32
  3505  009FEB  20                 	db	32
  3506  009FEC  20                 	db	32
  3507  009FED  20                 	db	32
  3508  009FEE  20                 	db	32
  3509  009FEF  20                 	db	32
  3510  009FF0  20                 	db	32
  3511  009FF1  20                 	db	32
  3512  009FF2  20                 	db	32
  3513  009FF3  20                 	db	32
  3514  009FF4  20                 	db	32
  3515  009FF5  20                 	db	32
  3516  009FF6  20                 	db	32
  3517  009FF7  43                 	db	67
  3518  009FF8  6F                 	db	111
  3519  009FF9  75                 	db	117
  3520  009FFA  6E                 	db	110
  3521  009FFB  74                 	db	116
  3522  009FFC  65                 	db	101
  3523  009FFD  72                 	db	114
  3524  009FFE  43                 	db	67
  3525  009FFF  6C                 	db	108
  3526  00A000  6F                 	db	111
  3527  00A001  63                 	db	99
  3528  00A002  6B                 	db	107
  3529  00A003  77                 	db	119
  3530  00A004  69                 	db	105
  3531  00A005  73                 	db	115
  3532  00A006  65                 	db	101
  3533  00A007  20                 	db	32
  3534  00A008  20                 	db	32
  3535  00A009  20                 	db	32
  3536  00A00A  20                 	db	32
  3537  00A00B  43                 	db	67
  3538  00A00C  6C                 	db	108
  3539  00A00D  6F                 	db	111
  3540  00A00E  63                 	db	99
  3541  00A00F  6B                 	db	107
  3542  00A010  77                 	db	119
  3543  00A011  69                 	db	105
  3544  00A012  73                 	db	115
  3545  00A013  65                 	db	101
  3546  00A014  20                 	db	32
  3547  00A015  20                 	db	32
  3548  00A016  20                 	db	32
  3549  00A017  20                 	db	32
  3550  00A018  20                 	db	32
  3551  00A019  20                 	db	32
  3552  00A01A  20                 	db	32
  3553  00A01B  20                 	db	32
  3554  00A01C  20                 	db	32
  3555  00A01D  20                 	db	32
  3556  00A01E                     __end_of_dc_setup2:
  3557                           	opt stack 0
  3558  00A01E                     _dc_setup1:
  3559                           	opt stack 0
  3560  00A01E  53                 	db	83
  3561  00A01F  65                 	db	101
  3562  00A020  74                 	db	116
  3563  00A021  75                 	db	117
  3564  00A022  70                 	db	112
  3565  00A023  3A                 	db	58
  3566  00A024  20                 	db	32
  3567  00A025  53                 	db	83
  3568  00A026  65                 	db	101
  3569  00A027  74                 	db	116
  3570  00A028  20                 	db	32
  3571  00A029  7A                 	db	122
  3572  00A02A  65                 	db	101
  3573  00A02B  72                 	db	114
  3574  00A02C  6F                 	db	111
  3575  00A02D  20                 	db	32
  3576  00A02E  70                 	db	112
  3577  00A02F  6F                 	db	111
  3578  00A030  73                 	db	115
  3579  00A031  2E                 	db	46
  3580  00A032  20                 	db	32
  3581  00A033  20                 	db	32
  3582  00A034  20                 	db	32
  3583  00A035  20                 	db	32
  3584  00A036  20                 	db	32
  3585  00A037  20                 	db	32
  3586  00A038  20                 	db	32
  3587  00A039  20                 	db	32
  3588  00A03A  20                 	db	32
  3589  00A03B  20                 	db	32
  3590  00A03C  20                 	db	32
  3591  00A03D  20                 	db	32
  3592  00A03E  20                 	db	32
  3593  00A03F  20                 	db	32
  3594  00A040  20                 	db	32
  3595  00A041  20                 	db	32
  3596  00A042  20                 	db	32
  3597  00A043  20                 	db	32
  3598  00A044  20                 	db	32
  3599  00A045  20                 	db	32
  3600  00A046  53                 	db	83
  3601  00A047  74                 	db	116
  3602  00A048  65                 	db	101
  3603  00A049  70                 	db	112
  3604  00A04A  20                 	db	32
  3605  00A04B  73                 	db	115
  3606  00A04C  69                 	db	105
  3607  00A04D  7A                 	db	122
  3608  00A04E  65                 	db	101
  3609  00A04F  20                 	db	32
  3610  00A050  00                 	db	0
  3611  00A051  20                 	db	32
  3612  00A052  20                 	db	32
  3613  00A053  43                 	db	67
  3614  00A054  6F                 	db	111
  3615  00A055  6E                 	db	110
  3616  00A056  66                 	db	102
  3617  00A057  69                 	db	105
  3618  00A058  72                 	db	114
  3619  00A059  6D                 	db	109
  3620  00A05A  20                 	db	32
  3621  00A05B  78                 	db	120
  3622  00A05C  2E                 	db	46
  3623  00A05D  78                 	db	120
  3624  00A05E  78                 	db	120
  3625  00A05F  01                 	db	1
  3626  00A060  20                 	db	32
  3627  00A061  20                 	db	32
  3628  00A062  20                 	db	32
  3629  00A063  20                 	db	32
  3630  00A064  00                 	db	0
  3631  00A065  20                 	db	32
  3632  00A066  20                 	db	32
  3633  00A067  43                 	db	67
  3634  00A068  61                 	db	97
  3635  00A069  6E                 	db	110
  3636  00A06A  63                 	db	99
  3637  00A06B  65                 	db	101
  3638  00A06C  6C                 	db	108
  3639  00A06D  20                 	db	32
  3640  00A06E                     __end_of_dc_setup1:
  3641                           	opt stack 0
  3642  00A06E                     _dc_main:
  3643                           	opt stack 0
  3644  00A06E  4D                 	db	77
  3645  00A06F  61                 	db	97
  3646  00A070  69                 	db	105
  3647  00A071  6E                 	db	110
  3648  00A072  20                 	db	32
  3649  00A073  4D                 	db	77
  3650  00A074  65                 	db	101
  3651  00A075  6E                 	db	110
  3652  00A076  75                 	db	117
  3653  00A077  3A                 	db	58
  3654  00A078  20                 	db	32
  3655  00A079  20                 	db	32
  3656  00A07A  20                 	db	32
  3657  00A07B  20                 	db	32
  3658  00A07C  20                 	db	32
  3659  00A07D  20                 	db	32
  3660  00A07E  20                 	db	32
  3661  00A07F  20                 	db	32
  3662  00A080  20                 	db	32
  3663  00A081  20                 	db	32
  3664  00A082  20                 	db	32
  3665  00A083  53                 	db	83
  3666  00A084  65                 	db	101
  3667  00A085  74                 	db	116
  3668  00A086  75                 	db	117
  3669  00A087  70                 	db	112
  3670  00A088  20                 	db	32
  3671  00A089  20                 	db	32
  3672  00A08A  20                 	db	32
  3673  00A08B  20                 	db	32
  3674  00A08C  44                 	db	68
  3675  00A08D  69                 	db	105
  3676  00A08E  76                 	db	118
  3677  00A08F  69                 	db	105
  3678  00A090  64                 	db	100
  3679  00A091  65                 	db	101
  3680  00A092  20                 	db	32
  3681  00A093  20                 	db	32
  3682  00A094  20                 	db	32
  3683  00A095  20                 	db	32
  3684  00A096  20                 	db	32
  3685  00A097  41                 	db	65
  3686  00A098  72                 	db	114
  3687  00A099  63                 	db	99
  3688  00A09A  20                 	db	32
  3689  00A09B  20                 	db	32
  3690  00A09C  20                 	db	32
  3691  00A09D  20                 	db	32
  3692  00A09E  20                 	db	32
  3693  00A09F  20                 	db	32
  3694  00A0A0  4D                 	db	77
  3695  00A0A1  61                 	db	97
  3696  00A0A2  6E                 	db	110
  3697  00A0A3  75                 	db	117
  3698  00A0A4  61                 	db	97
  3699  00A0A5  6C                 	db	108
  3700  00A0A6  20                 	db	32
  3701  00A0A7  20                 	db	32
  3702  00A0A8  20                 	db	32
  3703  00A0A9  20                 	db	32
  3704  00A0AA  20                 	db	32
  3705  00A0AB  47                 	db	71
  3706  00A0AC  6F                 	db	111
  3707  00A0AD  32                 	db	50
  3708  00A0AE  5A                 	db	90
  3709  00A0AF  65                 	db	101
  3710  00A0B0  72                 	db	114
  3711  00A0B1  6F                 	db	111
  3712  00A0B2  20                 	db	32
  3713  00A0B3  20                 	db	32
  3714  00A0B4  20                 	db	32
  3715  00A0B5  20                 	db	32
  3716  00A0B6  20                 	db	32
  3717  00A0B7  20                 	db	32
  3718  00A0B8  20                 	db	32
  3719  00A0B9  20                 	db	32
  3720  00A0BA  20                 	db	32
  3721  00A0BB  20                 	db	32
  3722  00A0BC  20                 	db	32
  3723  00A0BD  20                 	db	32
  3724  00A0BE                     __end_of_dc_main:
  3725                           	opt stack 0
  3726  00A0BE                     _configDescriptor1:
  3727                           	opt stack 0
  3728  00A0BE  09                 	db	9
  3729  00A0BF  02                 	db	2
  3730  00A0C0  40                 	db	64
  3731  00A0C1  00                 	db	0
  3732  00A0C2  02                 	db	2
  3733  00A0C3  01                 	db	1
  3734  00A0C4  00                 	db	0
  3735  00A0C5  C0                 	db	192
  3736  00A0C6  32                 	db	50
  3737  00A0C7  09                 	db	9
  3738  00A0C8  04                 	db	4
  3739  00A0C9  00                 	db	0
  3740  00A0CA  00                 	db	0
  3741  00A0CB  02                 	db	2
  3742  00A0CC  03                 	db	3
  3743  00A0CD  00                 	db	0
  3744  00A0CE  00                 	db	0
  3745  00A0CF  00                 	db	0
  3746  00A0D0  09                 	db	9
  3747  00A0D1  21                 	db	33
  3748  00A0D2  11                 	db	17
  3749  00A0D3  01                 	db	1
  3750  00A0D4  00                 	db	0
  3751  00A0D5  01                 	db	1
  3752  00A0D6  22                 	db	34
  3753  00A0D7  1D                 	db	29
  3754  00A0D8  00                 	db	0
  3755  00A0D9  07                 	db	7
  3756  00A0DA  05                 	db	5
  3757  00A0DB  81                 	db	129
  3758  00A0DC  03                 	db	3
  3759  00A0DD  40                 	db	64
  3760  00A0DE  00                 	db	0
  3761  00A0DF  01                 	db	1
  3762  00A0E0  07                 	db	7
  3763  00A0E1  05                 	db	5
  3764  00A0E2  01                 	db	1
  3765  00A0E3  03                 	db	3
  3766  00A0E4  40                 	db	64
  3767  00A0E5  00                 	db	0
  3768  00A0E6  01                 	db	1
  3769  00A0E7  09                 	db	9
  3770  00A0E8  04                 	db	4
  3771  00A0E9  01                 	db	1
  3772  00A0EA  00                 	db	0
  3773  00A0EB  02                 	db	2
  3774  00A0EC  08                 	db	8
  3775  00A0ED  06                 	db	6
  3776  00A0EE  50                 	db	80
  3777  00A0EF  00                 	db	0
  3778  00A0F0  07                 	db	7
  3779  00A0F1  05                 	db	5
  3780  00A0F2  82                 	db	130
  3781  00A0F3  02                 	db	2
  3782  00A0F4  40                 	db	64
  3783  00A0F5  00                 	db	0
  3784  00A0F6  01                 	db	1
  3785  00A0F7  07                 	db	7
  3786  00A0F8  05                 	db	5
  3787  00A0F9  02                 	db	2
  3788  00A0FA  02                 	db	2
  3789  00A0FB  40                 	db	64
  3790  00A0FC  00                 	db	0
  3791  00A0FD  01                 	db	1
  3792  00A0FE                     __end_of_configDescriptor1:
  3793                           	opt stack 0
  3794  00A0FE                     _sd001:
  3795                           	opt stack 0
  3796  00A0FE  34                 	db	52
  3797  00A0FF  03                 	db	3
  3798  00A100  0053               	dw	83
  3799  00A102  006F               	dw	111
  3800  00A104  006C               	dw	108
  3801  00A106  0064               	dw	100
  3802  00A108  0065               	dw	101
  3803  00A10A  0072               	dw	114
  3804  00A10C  006E               	dw	110
  3805  00A10E  0065               	dw	101
  3806  00A110  0072               	dw	114
  3807  00A112  0064               	dw	100
  3808  00A114  002E               	dw	46
  3809  00A116  0063               	dw	99
  3810  00A118  006F               	dw	111
  3811  00A11A  006D               	dw	109
  3812  00A11C  0020               	dw	32
  3813  00A11E  0020               	dw	32
  3814  00A120  0020               	dw	32
  3815  00A122  0020               	dw	32
  3816  00A124  0020               	dw	32
  3817  00A126  0020               	dw	32
  3818  00A128  0020               	dw	32
  3819  00A12A  0020               	dw	32
  3820  00A12C  0020               	dw	32
  3821  00A12E  0020               	dw	32
  3822  00A130  0020               	dw	32
  3823  00A132                     __end_of_sd001:
  3824                           	opt stack 0
  3825  00A132                     _sd002:
  3826                           	opt stack 0
  3827  00A132  2E                 	db	46
  3828  00A133  03                 	db	3
  3829  00A134  0053               	dw	83
  3830  00A136  0074               	dw	116
  3831  00A138  0065               	dw	101
  3832  00A13A  0070               	dw	112
  3833  00A13C  0070               	dw	112
  3834  00A13E  0065               	dw	101
  3835  00A140  0072               	dw	114
  3836  00A142  004D               	dw	77
  3837  00A144  006F               	dw	111
  3838  00A146  0074               	dw	116
  3839  00A148  006F               	dw	111
  3840  00A14A  0072               	dw	114
  3841  00A14C  0043               	dw	67
  3842  00A14E  006F               	dw	111
  3843  00A150  006E               	dw	110
  3844  00A152  0074               	dw	116
  3845  00A154  0072               	dw	114
  3846  00A156  006F               	dw	111
  3847  00A158  006C               	dw	108
  3848  00A15A  006C               	dw	108
  3849  00A15C  0065               	dw	101
  3850  00A15E  0072               	dw	114
  3851  00A160                     __end_of_sd002:
  3852                           	opt stack 0
  3853  00A160                     _inq_resp:
  3854                           	opt stack 0
  3855  00A160  00                 	db	0
  3856  00A161  80                 	db	128
  3857  00A162  04                 	db	4
  3858  00A163  02                 	db	2
  3859  00A164  20                 	db	32
  3860  00A165  00                 	db	0
  3861  00A166  00                 	db	0
  3862  00A167  00                 	db	0
  3863  00A168  4D                 	db	77
  3864  00A169  69                 	db	105
  3865  00A16A  63                 	db	99
  3866  00A16B  72                 	db	114
  3867  00A16C  6F                 	db	111
  3868  00A16D  63                 	db	99
  3869  00A16E  68                 	db	104
  3870  00A16F  70                 	db	112
  3871  00A170  4D                 	db	77
  3872  00A171  61                 	db	97
  3873  00A172  73                 	db	115
  3874  00A173  73                 	db	115
  3875  00A174  20                 	db	32
  3876  00A175  53                 	db	83
  3877  00A176  74                 	db	116
  3878  00A177  6F                 	db	111
  3879  00A178  72                 	db	114
  3880  00A179  61                 	db	97
  3881  00A17A  67                 	db	103
  3882  00A17B  65                 	db	101
  3883  00A17C  20                 	db	32
  3884  00A17D  20                 	db	32
  3885  00A17E  20                 	db	32
  3886  00A17F  20                 	db	32
  3887  00A180  30                 	db	48
  3888  00A181  30                 	db	48
  3889  00A182  30                 	db	48
  3890  00A183  31                 	db	49
  3891  00A184                     __end_of_inq_resp:
  3892                           	opt stack 0
  3893  00A184                     _hid_rpt01:
  3894                           	opt stack 0
  3895  00A184  06                 	db	6
  3896  00A185  00                 	db	0
  3897  00A186  FF                 	db	255
  3898  00A187  09                 	db	9
  3899  00A188  01                 	db	1
  3900  00A189  A1                 	db	161
  3901  00A18A  01                 	db	1
  3902  00A18B  19                 	db	25
  3903  00A18C  01                 	db	1
  3904  00A18D  29                 	db	41
  3905  00A18E  40                 	db	64
  3906  00A18F  15                 	db	21
  3907  00A190  00                 	db	0
  3908  00A191  26                 	db	38
  3909  00A192  FF                 	db	255
  3910  00A193  00                 	db	0
  3911  00A194  75                 	db	117
  3912  00A195  08                 	db	8
  3913  00A196  95                 	db	149
  3914  00A197  40                 	db	64
  3915  00A198  81                 	db	129
  3916  00A199  00                 	db	0
  3917  00A19A  19                 	db	25
  3918  00A19B  01                 	db	1
  3919  00A19C  29                 	db	41
  3920  00A19D  40                 	db	64
  3921  00A19E  91                 	db	145
  3922  00A19F  00                 	db	0
  3923  00A1A0  C0                 	db	192
  3924  00A1A1                     __end_of_hid_rpt01:
  3925                           	opt stack 0
  3926  00A1A1                     _sd003:
  3927                           	opt stack 0
  3928  00A1A1  1A                 	db	26
  3929  00A1A2  03                 	db	3
  3930  00A1A3  0031               	dw	49
  3931  00A1A5  0032               	dw	50
  3932  00A1A7  0033               	dw	51
  3933  00A1A9  0034               	dw	52
  3934  00A1AB  0035               	dw	53
  3935  00A1AD  0036               	dw	54
  3936  00A1AF  0037               	dw	55
  3937  00A1B1  0038               	dw	56
  3938  00A1B3  0039               	dw	57
  3939  00A1B5  0030               	dw	48
  3940  00A1B7  0039               	dw	57
  3941  00A1B9  0039               	dw	57
  3942  00A1BB                     __end_of_sd003:
  3943                           	opt stack 0
  3944  00A1BB                     _overshoot_cost_in_steps_string:
  3945                           	opt stack 0
  3946  00A1BB  4F                 	db	79
  3947  00A1BC  56                 	db	86
  3948  00A1BD  45                 	db	69
  3949  00A1BE  52                 	db	82
  3950  00A1BF  53                 	db	83
  3951  00A1C0  48                 	db	72
  3952  00A1C1  4F                 	db	79
  3953  00A1C2  4F                 	db	79
  3954  00A1C3  54                 	db	84
  3955  00A1C4  5F                 	db	95
  3956  00A1C5  43                 	db	67
  3957  00A1C6  4F                 	db	79
  3958  00A1C7  53                 	db	83
  3959  00A1C8  54                 	db	84
  3960  00A1C9  5F                 	db	95
  3961  00A1CA  49                 	db	73
  3962  00A1CB  4E                 	db	78
  3963  00A1CC  5F                 	db	95
  3964  00A1CD  53                 	db	83
  3965  00A1CE  54                 	db	84
  3966  00A1CF  45                 	db	69
  3967  00A1D0  50                 	db	80
  3968  00A1D1  53                 	db	83
  3969  00A1D2  00                 	db	0
  3970  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3971                           	opt stack 0
  3972  00A1D3                     _position_display_180_string:
  3973                           	opt stack 0
  3974  00A1D3  50                 	db	80
  3975  00A1D4  4F                 	db	79
  3976  00A1D5  53                 	db	83
  3977  00A1D6  49                 	db	73
  3978  00A1D7  54                 	db	84
  3979  00A1D8  49                 	db	73
  3980  00A1D9  4F                 	db	79
  3981  00A1DA  4E                 	db	78
  3982  00A1DB  5F                 	db	95
  3983  00A1DC  44                 	db	68
  3984  00A1DD  49                 	db	73
  3985  00A1DE  53                 	db	83
  3986  00A1DF  50                 	db	80
  3987  00A1E0  4C                 	db	76
  3988  00A1E1  41                 	db	65
  3989  00A1E2  59                 	db	89
  3990  00A1E3  5F                 	db	95
  3991  00A1E4  31                 	db	49
  3992  00A1E5  38                 	db	56
  3993  00A1E6  30                 	db	48
  3994  00A1E7  00                 	db	0
  3995  00A1E8                     __end_of_position_display_180_string:
  3996                           	opt stack 0
  3997  00A1E8                     _maximum_speed_manual_string:
  3998                           	opt stack 0
  3999  00A1E8  4D                 	db	77
  4000  00A1E9  41                 	db	65
  4001  00A1EA  58                 	db	88
  4002  00A1EB  49                 	db	73
  4003  00A1EC  4D                 	db	77
  4004  00A1ED  55                 	db	85
  4005  00A1EE  4D                 	db	77
  4006  00A1EF  5F                 	db	95
  4007  00A1F0  53                 	db	83
  4008  00A1F1  50                 	db	80
  4009  00A1F2  45                 	db	69
  4010  00A1F3  45                 	db	69
  4011  00A1F4  44                 	db	68
  4012  00A1F5  5F                 	db	95
  4013  00A1F6  4D                 	db	77
  4014  00A1F7  41                 	db	65
  4015  00A1F8  4E                 	db	78
  4016  00A1F9  55                 	db	85
  4017  00A1FA  41                 	db	65
  4018  00A1FB  4C                 	db	76
  4019  00A1FC  00                 	db	0
  4020  00A1FD                     __end_of_maximum_speed_manual_string:
  4021                           	opt stack 0
  4022  00A1FD                     _initial_speed_manual_string:
  4023                           	opt stack 0
  4024  00A1FD  49                 	db	73
  4025  00A1FE  4E                 	db	78
  4026  00A1FF  49                 	db	73
  4027  00A200  54                 	db	84
  4028  00A201  49                 	db	73
  4029  00A202  41                 	db	65
  4030  00A203  4C                 	db	76
  4031  00A204  5F                 	db	95
  4032  00A205  53                 	db	83
  4033  00A206  50                 	db	80
  4034  00A207  45                 	db	69
  4035  00A208  45                 	db	69
  4036  00A209  44                 	db	68
  4037  00A20A  5F                 	db	95
  4038  00A20B  4D                 	db	77
  4039  00A20C  41                 	db	65
  4040  00A20D  4E                 	db	78
  4041  00A20E  55                 	db	85
  4042  00A20F  41                 	db	65
  4043  00A210  4C                 	db	76
  4044  00A211  00                 	db	0
  4045  00A212                     __end_of_initial_speed_manual_string:
  4046                           	opt stack 0
  4047  00A212                     _full_circle_in_steps_string:
  4048                           	opt stack 0
  4049  00A212  46                 	db	70
  4050  00A213  55                 	db	85
  4051  00A214  4C                 	db	76
  4052  00A215  4C                 	db	76
  4053  00A216  5F                 	db	95
  4054  00A217  43                 	db	67
  4055  00A218  49                 	db	73
  4056  00A219  52                 	db	82
  4057  00A21A  43                 	db	67
  4058  00A21B  4C                 	db	76
  4059  00A21C  45                 	db	69
  4060  00A21D  5F                 	db	95
  4061  00A21E  49                 	db	73
  4062  00A21F  4E                 	db	78
  4063  00A220  5F                 	db	95
  4064  00A221  53                 	db	83
  4065  00A222  54                 	db	84
  4066  00A223  45                 	db	69
  4067  00A224  50                 	db	80
  4068  00A225  53                 	db	83
  4069  00A226  00                 	db	0
  4070  00A227                     __end_of_full_circle_in_steps_string:
  4071                           	opt stack 0
  4072  00A227                     _overshoot_in_steps_string:
  4073                           	opt stack 0
  4074  00A227  4F                 	db	79
  4075  00A228  56                 	db	86
  4076  00A229  45                 	db	69
  4077  00A22A  52                 	db	82
  4078  00A22B  53                 	db	83
  4079  00A22C  48                 	db	72
  4080  00A22D  4F                 	db	79
  4081  00A22E  4F                 	db	79
  4082  00A22F  54                 	db	84
  4083  00A230  5F                 	db	95
  4084  00A231  49                 	db	73
  4085  00A232  4E                 	db	78
  4086  00A233  5F                 	db	95
  4087  00A234  53                 	db	83
  4088  00A235  54                 	db	84
  4089  00A236  45                 	db	69
  4090  00A237  50                 	db	80
  4091  00A238  53                 	db	83
  4092  00A239  00                 	db	0
  4093  00A23A                     __end_of_overshoot_in_steps_string:
  4094                           	opt stack 0
  4095  00A23A                     _maximum_speed_arc_string:
  4096                           	opt stack 0
  4097  00A23A  4D                 	db	77
  4098  00A23B  41                 	db	65
  4099  00A23C  58                 	db	88
  4100  00A23D  49                 	db	73
  4101  00A23E  4D                 	db	77
  4102  00A23F  55                 	db	85
  4103  00A240  4D                 	db	77
  4104  00A241  5F                 	db	95
  4105  00A242  53                 	db	83
  4106  00A243  50                 	db	80
  4107  00A244  45                 	db	69
  4108  00A245  45                 	db	69
  4109  00A246  44                 	db	68
  4110  00A247  5F                 	db	95
  4111  00A248  41                 	db	65
  4112  00A249  52                 	db	82
  4113  00A24A  43                 	db	67
  4114  00A24B  00                 	db	0
  4115  00A24C                     __end_of_maximum_speed_arc_string:
  4116                           	opt stack 0
  4117  00A24C                     _initial_speed_arc_string:
  4118                           	opt stack 0
  4119  00A24C  49                 	db	73
  4120  00A24D  4E                 	db	78
  4121  00A24E  49                 	db	73
  4122  00A24F  54                 	db	84
  4123  00A250  49                 	db	73
  4124  00A251  41                 	db	65
  4125  00A252  4C                 	db	76
  4126  00A253  5F                 	db	95
  4127  00A254  53                 	db	83
  4128  00A255  50                 	db	80
  4129  00A256  45                 	db	69
  4130  00A257  45                 	db	69
  4131  00A258  44                 	db	68
  4132  00A259  5F                 	db	95
  4133  00A25A  41                 	db	65
  4134  00A25B  52                 	db	82
  4135  00A25C  43                 	db	67
  4136  00A25D  00                 	db	0
  4137  00A25E                     __end_of_initial_speed_arc_string:
  4138                           	opt stack 0
  4139  00A25E                     _inverse_direction_string:
  4140                           	opt stack 0
  4141  00A25E  49                 	db	73
  4142  00A25F  4E                 	db	78
  4143  00A260  56                 	db	86
  4144  00A261  45                 	db	69
  4145  00A262  52                 	db	82
  4146  00A263  53                 	db	83
  4147  00A264  45                 	db	69
  4148  00A265  5F                 	db	95
  4149  00A266  44                 	db	68
  4150  00A267  49                 	db	73
  4151  00A268  52                 	db	82
  4152  00A269  45                 	db	69
  4153  00A26A  43                 	db	67
  4154  00A26B  54                 	db	84
  4155  00A26C  49                 	db	73
  4156  00A26D  4F                 	db	79
  4157  00A26E  4E                 	db	78
  4158  00A26F  00                 	db	0
  4159  00A270                     __end_of_inverse_direction_string:
  4160                           	opt stack 0
  4161  00A270                     _device_dsc:
  4162                           	opt stack 0
  4163  00A270  12                 	db	18
  4164  00A271  01                 	db	1
  4165  00A272  0200               	dw	512
  4166  00A274  00                 	db	0
  4167  00A275  00                 	db	0
  4168  00A276  00                 	db	0
  4169  00A277  08                 	db	8
  4170  00A278  04D8               	dw	1240
  4171  00A27A  EDCF               	dw	60879
  4172  00A27C  0100               	dw	256
  4173  00A27E  01                 	db	1
  4174  00A27F  02                 	db	2
  4175  00A280  00                 	db	0
  4176  00A281  01                 	db	1
  4177  00A282                     __end_of_device_dsc:
  4178                           	opt stack 0
  4179  00A282                     _use_ccw_limit_string:
  4180                           	opt stack 0
  4181  00A282  55                 	db	85
  4182  00A283  53                 	db	83
  4183  00A284  45                 	db	69
  4184  00A285  5F                 	db	95
  4185  00A286  43                 	db	67
  4186  00A287  43                 	db	67
  4187  00A288  57                 	db	87
  4188  00A289  5F                 	db	95
  4189  00A28A  4C                 	db	76
  4190  00A28B  49                 	db	73
  4191  00A28C  4D                 	db	77
  4192  00A28D  49                 	db	73
  4193  00A28E  54                 	db	84
  4194  00A28F  00                 	db	0
  4195  00A290                     __end_of_use_ccw_limit_string:
  4196                           	opt stack 0
  4197  00A290                     _beep_duration_string:
  4198                           	opt stack 0
  4199  00A290  42                 	db	66
  4200  00A291  45                 	db	69
  4201  00A292  45                 	db	69
  4202  00A293  50                 	db	80
  4203  00A294  5F                 	db	95
  4204  00A295  44                 	db	68
  4205  00A296  55                 	db	85
  4206  00A297  52                 	db	82
  4207  00A298  41                 	db	65
  4208  00A299  54                 	db	84
  4209  00A29A  49                 	db	73
  4210  00A29B  4F                 	db	79
  4211  00A29C  4E                 	db	78
  4212  00A29D  00                 	db	0
  4213  00A29E                     __end_of_beep_duration_string:
  4214                           	opt stack 0
  4215  00A29E                     _maximum_speed_string:
  4216                           	opt stack 0
  4217  00A29E  4D                 	db	77
  4218  00A29F  41                 	db	65
  4219  00A2A0  58                 	db	88
  4220  00A2A1  49                 	db	73
  4221  00A2A2  4D                 	db	77
  4222  00A2A3  55                 	db	85
  4223  00A2A4  4D                 	db	77
  4224  00A2A5  5F                 	db	95
  4225  00A2A6  53                 	db	83
  4226  00A2A7  50                 	db	80
  4227  00A2A8  45                 	db	69
  4228  00A2A9  45                 	db	69
  4229  00A2AA  44                 	db	68
  4230  00A2AB  00                 	db	0
  4231  00A2AC                     __end_of_maximum_speed_string:
  4232                           	opt stack 0
  4233  00A2AC                     _minimum_speed_string:
  4234                           	opt stack 0
  4235  00A2AC  4D                 	db	77
  4236  00A2AD  49                 	db	73
  4237  00A2AE  4E                 	db	78
  4238  00A2AF  49                 	db	73
  4239  00A2B0  4D                 	db	77
  4240  00A2B1  55                 	db	85
  4241  00A2B2  4D                 	db	77
  4242  00A2B3  5F                 	db	95
  4243  00A2B4  53                 	db	83
  4244  00A2B5  50                 	db	80
  4245  00A2B6  45                 	db	69
  4246  00A2B7  45                 	db	69
  4247  00A2B8  44                 	db	68
  4248  00A2B9  00                 	db	0
  4249  00A2BA                     __end_of_minimum_speed_string:
  4250                           	opt stack 0
  4251  00A2BA                     _use_cw_limit_string:
  4252                           	opt stack 0
  4253  00A2BA  55                 	db	85
  4254  00A2BB  53                 	db	83
  4255  00A2BC  45                 	db	69
  4256  00A2BD  5F                 	db	95
  4257  00A2BE  43                 	db	67
  4258  00A2BF  57                 	db	87
  4259  00A2C0  5F                 	db	95
  4260  00A2C1  4C                 	db	76
  4261  00A2C2  49                 	db	73
  4262  00A2C3  4D                 	db	77
  4263  00A2C4  49                 	db	73
  4264  00A2C5  54                 	db	84
  4265  00A2C6  00                 	db	0
  4266  00A2C7                     __end_of_use_cw_limit_string:
  4267                           	opt stack 0
  4268  00A2C7                     _ccw_limit_string:
  4269                           	opt stack 0
  4270  00A2C7  43                 	db	67
  4271  00A2C8  43                 	db	67
  4272  00A2C9  57                 	db	87
  4273  00A2CA  5F                 	db	95
  4274  00A2CB  4C                 	db	76
  4275  00A2CC  49                 	db	73
  4276  00A2CD  4D                 	db	77
  4277  00A2CE  49                 	db	73
  4278  00A2CF  54                 	db	84
  4279  00A2D0  00                 	db	0
  4280  00A2D1                     __end_of_ccw_limit_string:
  4281                           	opt stack 0
  4282  00A2D1                     _cw_limit_string:
  4283                           	opt stack 0
  4284  00A2D1  43                 	db	67
  4285  00A2D2  57                 	db	87
  4286  00A2D3  5F                 	db	95
  4287  00A2D4  4C                 	db	76
  4288  00A2D5  49                 	db	73
  4289  00A2D6  4D                 	db	77
  4290  00A2D7  49                 	db	73
  4291  00A2D8  54                 	db	84
  4292  00A2D9  00                 	db	0
  4293  00A2DA                     __end_of_cw_limit_string:
  4294                           	opt stack 0
  4295  00A2DA                     _bit_pattern_ae:
  4296                           	opt stack 0
  4297  00A2DA  0A                 	db	10
  4298  00A2DB  00                 	db	0
  4299  00A2DC  0E                 	db	14
  4300  00A2DD  01                 	db	1
  4301  00A2DE  0F                 	db	15
  4302  00A2DF  11                 	db	17
  4303  00A2E0  0F                 	db	15
  4304  00A2E1  00                 	db	0
  4305  00A2E2                     __end_of_bit_pattern_ae:
  4306                           	opt stack 0
  4307  00A2E2                     _bit_pattern_degree:
  4308                           	opt stack 0
  4309  00A2E2  18                 	db	24
  4310  00A2E3  18                 	db	24
  4311  00A2E4  00                 	db	0
  4312  00A2E5  00                 	db	0
  4313  00A2E6  00                 	db	0
  4314  00A2E7  00                 	db	0
  4315  00A2E8  00                 	db	0
  4316  00A2E9  00                 	db	0
  4317  00A2EA                     __end_of_bit_pattern_degree:
  4318                           	opt stack 0
  4319  00A2EA                     _bit_pattern_verticalbar:
  4320                           	opt stack 0
  4321  00A2EA  04                 	db	4
  4322  00A2EB  04                 	db	4
  4323  00A2EC  04                 	db	4
  4324  00A2ED  04                 	db	4
  4325  00A2EE  04                 	db	4
  4326  00A2EF  04                 	db	4
  4327  00A2F0  04                 	db	4
  4328  00A2F1  04                 	db	4
  4329  00A2F2                     __end_of_bit_pattern_verticalbar:
  4330                           	opt stack 0
  4331  00A2F2                     _flash_command_pagesize_528:
  4332                           	opt stack 0
  4333  00A2F2  3D                 	db	61
  4334  00A2F3  2A                 	db	42
  4335  00A2F4  80                 	db	128
  4336  00A2F5  A7                 	db	167
  4337  00A2F6                     __end_of_flash_command_pagesize_528:
  4338                           	opt stack 0
  4339  00A2F6                     _flash_command_pagesize_512:
  4340                           	opt stack 0
  4341  00A2F6  3D                 	db	61
  4342  00A2F7  2A                 	db	42
  4343  00A2F8  80                 	db	128
  4344  00A2F9  A6                 	db	166
  4345  00A2FA                     __end_of_flash_command_pagesize_512:
  4346                           	opt stack 0
  4347  00A2FA                     _sd000:
  4348                           	opt stack 0
  4349  00A2FA  04                 	db	4
  4350  00A2FB  03                 	db	3
  4351  00A2FC  0409               	dw	1033
  4352  00A2FE                     __end_of_sd000:
  4353                           	opt stack 0
  4354  0000                     _RPINR22	set	3837
  4355  0000                     _RPOR23	set	3799
  4356  0000                     _RPOR21	set	3797
  4357  0000                     _RPINR21	set	3836
  4358  0000                     _RPOR4	set	3780
  4359  0000                     _PPSCONbits	set	3775
  4360  0000                     _CCPTMRS0bits	set	3922
  4361  0000                     _ANCON0bits	set	3912
  4362  0000                     _ANCON1bits	set	3913
  4363  0000                     _UEP0bits	set	3878
  4364  0000                     _UIEbits	set	3894
  4365  0000                     _UADDR	set	3896
  4366  0000                     _UIE	set	3894
  4367  0000                     _UEIE	set	3895
  4368  0000                     _UCFG	set	3897
  4369  0000                     _UEP1	set	3879
  4370  0000                     _UEP0	set	3878
  4371  0000                     _ADRESL	set	4035
  4372  0000                     _ADRESH	set	4036
  4373  0000                     _ADCON1bits	set	4033
  4374  0000                     _ADCON0bits	set	4034
  4375  0000                     _PORTA	set	3968
  4376  0000                     _PORTE	set	3972
  4377  0000                     _TMR2	set	4044
  4378  0000                     _PIE1bits	set	3997
  4379  0000                     _CCPR1L	set	4027
  4380  0000                     _PR2	set	4043
  4381  0000                     _T2CONbits	set	4042
  4382  0000                     _CCP1CONbits	set	4026
  4383  0000                     _RXADDRL	set	3945
  4384  0000                     _RXADDRH	set	3944
  4385  0000                     _DMABCL	set	3943
  4386  0000                     _DMABCH	set	3942
  4387  0000                     _TXADDRL	set	3947
  4388  0000                     _TXADDRH	set	3946
  4389  0000                     _DMACON2bits	set	3974
  4390  0000                     _DMACON1bits	set	3976
  4391  0000                     _SSP2CON1bits	set	3954
  4392  0000                     _SSP2STATbits	set	3955
  4393  0000                     _PORTDbits	set	3971
  4394  0000                     _PORTEbits	set	3972
  4395  0000                     _SSP1BUF	set	4041
  4396  0000                     _SSP1CON2bits	set	4037
  4397  0000                     _SSP1CON1bits	set	4038
  4398  0000                     _SSP1ADD	set	4040
  4399  0000                     _SSP1STATbits	set	4039
  4400  0000                     _PORTAbits	set	3968
  4401  0000                     _T0CONbits	set	4053
  4402  0000                     _TRISEbits	set	3990
  4403  0000                     _EECON2	set	4007
  4404  0000                     _LATBbits	set	3978
  4405  0000                     _LATAbits	set	3977
  4406  0000                     _TRISAbits	set	3986
  4407  0000                     _LATCbits	set	3979
  4408  0000                     _TRISCbits	set	3988
  4409  0000                     _TRISBbits	set	3987
  4410  0000                     _LATDbits	set	3980
  4411  0000                     _TRISDbits	set	3989
  4412  0000                     _TMR0L	set	4054
  4413  0000                     _TMR0H	set	4055
  4414  0000                     _PIR1bits	set	3998
  4415  0000                     _OSCCON	set	4051
  4416  0000                     _OSCTUNEbits	set	3995
  4417  0000                     _INTCONbits	set	4082
  4418  0000                     _IPR2bits	set	4002
  4419  0000                     _RCONbits	set	4048
  4420  0000                     _UCON	set	3941
  4421  0000                     _USTAT	set	3940
  4422  0000                     _PIR2bits	set	4001
  4423  0000                     _UIRbits	set	3938
  4424  0000                     _UCONbits	set	3941
  4425  0000                     _UIR	set	3938
  4426  0000                     _UEIR	set	3939
  4427  0000                     _PIE2bits	set	4000
  4428  00A2FE                     
  4429                           ; BSR set to: 1
  4430  00A2FE  68                 	db	104	;'h'
  4431  00A2FF  65                 	db	101	;'e'
  4432  00A300  6C                 	db	108	;'l'
  4433  00A301  6C                 	db	108	;'l'
  4434  00A302  6F                 	db	111	;'o'
  4435  00A303  20                 	db	32
  4436  00A304  77                 	db	119	;'w'
  4437  00A305  6F                 	db	111	;'o'
  4438  00A306  72                 	db	114	;'r'
  4439  00A307  6C                 	db	108	;'l'
  4440  00A308  64                 	db	100	;'d'
  4441  00A309  21                 	db	33
  4442  00A30A  00                 	db	0
  4443  00A30B                     
  4444                           ; BSR set to: 1
  4445  00A30B  53                 	db	83	;'S'
  4446  00A30C  74                 	db	116	;'t'
  4447  00A30D  65                 	db	101	;'e'
  4448  00A30E  70                 	db	112	;'p'
  4449  00A30F  70                 	db	112	;'p'
  4450  00A310  65                 	db	101	;'e'
  4451  00A311  72                 	db	114	;'r'
  4452  00A312  43                 	db	67	;'C'
  4453  00A313  74                 	db	116	;'t'
  4454  00A314  72                 	db	114	;'r'
  4455  00A315  6C                 	db	108	;'l'
  4456  00A316  00                 	db	0
  4457  00A317                     
  4458                           ; BSR set to: 1
  4459  00A317  46                 	db	70	;'F'
  4460  00A318  49                 	db	73	;'I'
  4461  00A319  4C                 	db	76	;'L'
  4462  00A31A  45                 	db	69	;'E'
  4463  00A31B  20                 	db	32
  4464  00A31C  20                 	db	32
  4465  00A31D  20                 	db	32
  4466  00A31E  20                 	db	32
  4467  00A31F  00                 	db	0
  4468  00A320                     STR_7:
  4469                           
  4470                           ; BSR set to: 1
  4471  00A320  4D                 	db	77	;'M'
  4472  00A321  53                 	db	83	;'S'
  4473  00A322  44                 	db	68	;'D'
  4474  00A323  4F                 	db	79	;'O'
  4475  00A324  53                 	db	83	;'S'
  4476  00A325  35                 	db	53	;'5'
  4477  00A326  2E                 	db	46
  4478  00A327  30                 	db	48	;'0'
  4479  00A328  00                 	db	0
  4480  00A329                     STR_1:
  4481                           
  4482                           ; BSR set to: 1
  4483  00A329  20                 	db	32
  4484  00A32A  20                 	db	32
  4485  00A32B  20                 	db	32
  4486  00A32C  20                 	db	32
  4487  00A32D  20                 	db	32
  4488  00A32E  20                 	db	32
  4489  00A32F  20                 	db	32
  4490  00A330  20                 	db	32
  4491  00A331  00                 	db	0
  4492  00A332                     STR_2:
  4493                           
  4494                           ; BSR set to: 1
  4495  00A332  43                 	db	67	;'C'
  4496  00A333  61                 	db	97	;'a'
  4497  00A334  6E                 	db	110	;'n'
  4498  00A335  63                 	db	99	;'c'
  4499  00A336  65                 	db	101	;'e'
  4500  00A337  6C                 	db	108	;'l'
  4501  00A338  00                 	db	0
  4502  00A339                     STR_6:
  4503                           
  4504                           ; BSR set to: 1
  4505  00A339  53                 	db	83	;'S'
  4506  00A33A  74                 	db	116	;'t'
  4507  00A33B  6F                 	db	111	;'o'
  4508  00A33C  70                 	db	112	;'p'
  4509  00A33D  20                 	db	32
  4510  00A33E  00                 	db	0
  4511  00A33F                     
  4512                           ; BSR set to: 1
  4513  00A33F  54                 	db	84	;'T'
  4514  00A340  58                 	db	88	;'X'
  4515  00A341  54                 	db	84	;'T'
  4516  00A342  00                 	db	0
  4517  0000                     
  4518                           ; #config settings
  4519  00A343  00                 	db	0	; dummy byte at the end
  4520  0000                     
  4521                           	psect	cinit
  4522  013D94                     __pcinit:
  4523                           	opt stack 0
  4524  013D94                     start_initialization:
  4525                           	opt stack 0
  4526  013D94                     __initialization:
  4527                           	opt stack 0
  4528                           
  4529                           ; Initialize objects allocated to BANK4 (80 bytes)
  4530                           ; load TBLPTR registers with __pidataBANK4
  4531  013D94  0E76               	movlw	low __pidataBANK4
  4532  013D96  6EF6               	movwf	tblptrl,c
  4533  013D98  0E52               	movlw	high __pidataBANK4
  4534  013D9A  6EF7               	movwf	tblptrh,c
  4535  013D9C  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4536  013D9E  6EF8               	movwf	tblptru,c
  4537  013DA0  EE04  F000         	lfsr	0,__pdataBANK4
  4538  013DA4  EE10 F050          	lfsr	1,80
  4539  013DA8                     copy_data0:
  4540  013DA8  0009               	tblrd		*+
  4541  013DAA  CFF5 FFEE          	movff	tablat,postinc0
  4542  013DAE  50E5               	movf	postdec1,w,c
  4543  013DB0  50E1               	movf	fsr1l,w,c
  4544  013DB2  E1FA               	bnz	copy_data0
  4545                           
  4546                           ; Initialize objects allocated to BANK2 (77 bytes)
  4547                           ; load TBLPTR registers with __pidataBANK2
  4548  013DB4  0E56               	movlw	low __pidataBANK2
  4549  013DB6  6EF6               	movwf	tblptrl,c
  4550  013DB8  0E54               	movlw	high __pidataBANK2
  4551  013DBA  6EF7               	movwf	tblptrh,c
  4552  013DBC  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4553  013DBE  6EF8               	movwf	tblptru,c
  4554  013DC0  EE02  F09D         	lfsr	0,__pdataBANK2
  4555  013DC4  EE10 F04D          	lfsr	1,77
  4556  013DC8                     copy_data1:
  4557  013DC8  0009               	tblrd		*+
  4558  013DCA  CFF5 FFEE          	movff	tablat,postinc0
  4559  013DCE  50E5               	movf	postdec1,w,c
  4560  013DD0  50E1               	movf	fsr1l,w,c
  4561  013DD2  E1FA               	bnz	copy_data1
  4562                           
  4563                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4564  013DD4  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4565  013DD8  EE14 F000          	lfsr	1,1024
  4566  013DDC                     clear_0:
  4567  013DDC  6AEE               	clrf	postinc0,c
  4568  013DDE  50E5               	movf	postdec1,w,c
  4569  013DE0  50E1               	movf	fsr1l,w,c
  4570  013DE2  E1FC               	bnz	clear_0
  4571  013DE4  50E2               	movf	fsr1h,w,c
  4572  013DE6  E1FA               	bnz	clear_0
  4573                           
  4574                           ; Clear objects allocated to BANK3 (192 bytes)
  4575  013DE8  EE03  F000         	lfsr	0,__pbssBANK3
  4576  013DEC  0EC0               	movlw	192
  4577  013DEE                     clear_1:
  4578  013DEE  6AEE               	clrf	postinc0,c
  4579  013DF0  06E8               	decf	wreg,f,c
  4580  013DF2  E1FD               	bnz	clear_1
  4581                           
  4582                           ; Clear objects allocated to BANK2 (157 bytes)
  4583  013DF4  EE02  F000         	lfsr	0,__pbssBANK2
  4584  013DF8  0E9D               	movlw	157
  4585  013DFA                     clear_2:
  4586  013DFA  6AEE               	clrf	postinc0,c
  4587  013DFC  06E8               	decf	wreg,f,c
  4588  013DFE  E1FD               	bnz	clear_2
  4589                           
  4590                           ; Clear objects allocated to BANK1 (196 bytes)
  4591  013E00  EE01  F000         	lfsr	0,__pbssBANK1
  4592  013E04  0EC4               	movlw	196
  4593  013E06                     clear_3:
  4594  013E06  6AEE               	clrf	postinc0,c
  4595  013E08  06E8               	decf	wreg,f,c
  4596  013E0A  E1FD               	bnz	clear_3
  4597                           
  4598                           ; Clear objects allocated to BANK0 (1 bytes)
  4599  013E0C  0100               	movlb	0
  4600  013E0E  6BFF               	clrf	__pbssBANK0& (0+255),b
  4601                           
  4602                           ; Clear objects allocated to COMRAM (8 bytes)
  4603  013E10  EE00  F057         	lfsr	0,__pbssCOMRAM
  4604  013E14  0E08               	movlw	8
  4605  013E16                     clear_4:
  4606  013E16  6AEE               	clrf	postinc0,c
  4607  013E18  06E8               	decf	wreg,f,c
  4608  013E1A  E1FD               	bnz	clear_4
  4609  013E1C                     end_of_initialization:
  4610                           	opt stack 0
  4611  013E1C                     __end_of__initialization:
  4612                           	opt stack 0
  4613  013E1C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4614  013E1E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4615  013E20  0100               	movlb	0
  4616  013E22  EFA1  F09D         	goto	_main	;jump to C main() function
  4617                           tblptru	equ	0xFF8
  4618                           tblptrh	equ	0xFF7
  4619                           tblptrl	equ	0xFF6
  4620                           tablat	equ	0xFF5
  4621                           postinc0	equ	0xFEE
  4622                           wreg	equ	0xFE8
  4623                           postdec1	equ	0xFE5
  4624                           fsr1h	equ	0xFE2
  4625                           fsr1l	equ	0xFE1
  4626                           
  4627                           	psect	bssCOMRAM
  4628  000057                     __pbssCOMRAM:
  4629                           	opt stack 0
  4630  000057                     _motor_current_speed:
  4631                           	opt stack 0
  4632  000057                     	ds	2
  4633  000059                     _pBDTEntryEP0OutNext:
  4634                           	opt stack 0
  4635  000059                     	ds	2
  4636  00005B                     _pBDTEntryEP0OutCurrent:
  4637                           	opt stack 0
  4638  00005B                     	ds	2
  4639  00005D                     _USBDeviceState:
  4640                           	opt stack 0
  4641  00005D                     	ds	1
  4642  00005E                     _USTATcopy:
  4643                           	opt stack 0
  4644  00005E                     	ds	1
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postdec1	equ	0xFE5
  4652                           fsr1h	equ	0xFE2
  4653                           fsr1l	equ	0xFE1
  4654                           
  4655                           	psect	bssBANK0
  4656  0000FF                     __pbssBANK0:
  4657                           	opt stack 0
  4658  0000FF                     _controlTransferState:
  4659                           	opt stack 0
  4660  0000FF                     	ds	1
  4661                           tblptru	equ	0xFF8
  4662                           tblptrh	equ	0xFF7
  4663                           tblptrl	equ	0xFF6
  4664                           tablat	equ	0xFF5
  4665                           postinc0	equ	0xFEE
  4666                           wreg	equ	0xFE8
  4667                           postdec1	equ	0xFE5
  4668                           fsr1h	equ	0xFE2
  4669                           fsr1l	equ	0xFE1
  4670                           
  4671                           	psect	bssBANK1
  4672  000100                     __pbssBANK1:
  4673                           	opt stack 0
  4674  000100                     _outPipes:
  4675                           	opt stack 0
  4676  000100                     	ds	9
  4677  000109                     _inPipes:
  4678                           	opt stack 0
  4679  000109                     	ds	6
  4680  00010F                     _pBDTEntryIn:
  4681                           	opt stack 0
  4682  00010F                     	ds	6
  4683  000115                     _pBDTEntryOut:
  4684                           	opt stack 0
  4685  000115                     	ds	6
  4686  00011B                     _motor_final_stepcount:
  4687                           	opt stack 0
  4688  00011B                     	ds	4
  4689  00011F                     _motor_current_stepcount:
  4690                           	opt stack 0
  4691  00011F                     	ds	4
  4692  000123                     _LBA:
  4693                           	opt stack 0
  4694  000123                     	ds	4
  4695  000127                     _USB1msTickCount:
  4696                           	opt stack 0
  4697  000127                     	ds	4
  4698  00012B                     _config_external:
  4699                           	opt stack 0
  4700  00012B                     	ds	3
  4701  00012E                     _config_internal:
  4702                           	opt stack 0
  4703  00012E                     	ds	3
  4704  000131                     _ep_data_out:
  4705                           	opt stack 0
  4706  000131                     	ds	3
  4707  000134                     _ep_data_in:
  4708                           	opt stack 0
  4709  000134                     	ds	3
  4710  000137                     _motor_maximum_speed:
  4711                           	opt stack 0
  4712  000137                     	ds	2
  4713  000139                     _USBInHandle:
  4714                           	opt stack 0
  4715  000139                     	ds	2
  4716  00013B                     _USBOutHandle:
  4717                           	opt stack 0
  4718  00013B                     	ds	2
  4719  00013D                     _TransferLength:
  4720                           	opt stack 0
  4721  00013D                     	ds	2
  4722  00013F                     _USBMSDInHandle:
  4723                           	opt stack 0
  4724  00013F                     	ds	2
  4725  000141                     _USBMSDOutHandle:
  4726                           	opt stack 0
  4727  000141                     	ds	2
  4728  000143                     _ptrNextData:
  4729                           	opt stack 0
  4730  000143                     	ds	2
  4731  000145                     _pDst:
  4732                           	opt stack 0
  4733  000145                     	ds	2
  4734  000147                     _enc2:
  4735                           	opt stack 0
  4736  000147                     	ds	1
  4737  000148                     _enc1:
  4738                           	opt stack 0
  4739  000148                     	ds	1
  4740  000149                     _motor_mode:
  4741                           	opt stack 0
  4742  000149                     	ds	1
  4743  00014A                     _motor_direction:
  4744                           	opt stack 0
  4745  00014A                     	ds	1
  4746  00014B                     _motor_move_type:
  4747                           	opt stack 0
  4748  00014B                     	ds	1
  4749  00014C                     _motor_cue_write_index:
  4750                           	opt stack 0
  4751  00014C                     	ds	1
  4752  00014D                     _motor_cue_read_index:
  4753                           	opt stack 0
  4754  00014D                     	ds	1
  4755  00014E                     _active_configuration:
  4756                           	opt stack 0
  4757  00014E                     	ds	1
  4758  00014F                     _power_state:
  4759                           	opt stack 0
  4760  00014F                     	ds	1
  4761  000150                     _MSDCBWValid:
  4762                           	opt stack 0
  4763  000150                     	ds	1
  4764  000151                     _MSDHostNoData:
  4765                           	opt stack 0
  4766  000151                     	ds	1
  4767  000152                     _SoftDetach:
  4768                           	opt stack 0
  4769  000152                     	ds	1
  4770  000153                     _gblCBWLength:
  4771                           	opt stack 0
  4772  000153                     	ds	1
  4773  000154                     _MSDRetryAttempt:
  4774                           	opt stack 0
  4775  000154                     	ds	1
  4776  000155                     _MSDWriteState:
  4777                           	opt stack 0
  4778  000155                     	ds	1
  4779  000156                     _MSDReadState:
  4780                           	opt stack 0
  4781  000156                     	ds	1
  4782  000157                     _MSDCommandState:
  4783                           	opt stack 0
  4784  000157                     	ds	1
  4785  000158                     _MSD_State:
  4786                           	opt stack 0
  4787  000158                     	ds	1
  4788  000159                     _USBTicksSinceSuspendEnd:
  4789                           	opt stack 0
  4790  000159                     	ds	1
  4791  00015A                     _USBDeferOUTDataStagePackets:
  4792                           	opt stack 0
  4793  00015A                     	ds	1
  4794  00015B                     _USBDeferINDataStagePackets:
  4795                           	opt stack 0
  4796  00015B                     	ds	1
  4797  00015C                     _USBStatusStageEnabledFlag2:
  4798                           	opt stack 0
  4799  00015C                     	ds	1
  4800  00015D                     _USBStatusStageEnabledFlag1:
  4801                           	opt stack 0
  4802  00015D                     	ds	1
  4803  00015E                     _USBDeferStatusStagePacket:
  4804                           	opt stack 0
  4805  00015E                     	ds	1
  4806  00015F                     _USBStatusStageTimeoutCounter:
  4807                           	opt stack 0
  4808  00015F                     	ds	1
  4809  000160                     _BothEP0OutUOWNsSet:
  4810                           	opt stack 0
  4811  000160                     	ds	1
  4812  000161                     _endpoint_number:
  4813                           	opt stack 0
  4814  000161                     	ds	1
  4815  000162                     _USBBusIsSuspended:
  4816                           	opt stack 0
  4817  000162                     	ds	1
  4818  000163                     _RemoteWakeup:
  4819                           	opt stack 0
  4820  000163                     	ds	1
  4821  000164                     _shortPacketStatus:
  4822                           	opt stack 0
  4823  000164                     	ds	1
  4824  000165                     _os:
  4825                           	opt stack 0
  4826  000165                     	ds	49
  4827  000196                     _config:
  4828                           	opt stack 0
  4829  000196                     	ds	41
  4830  0001BF                     _USBAlternateInterface:
  4831                           	opt stack 0
  4832  0001BF                     	ds	2
  4833  0001C1                     _active_protocol:
  4834                           	opt stack 0
  4835  0001C1                     	ds	1
  4836  0001C2                     _idle_rate:
  4837                           	opt stack 0
  4838  0001C2                     	ds	1
  4839  0001C3                     _USBActiveConfiguration:
  4840                           	opt stack 0
  4841  0001C3                     	ds	1
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           postinc0	equ	0xFEE
  4847                           wreg	equ	0xFE8
  4848                           postdec1	equ	0xFE5
  4849                           fsr1h	equ	0xFE2
  4850                           fsr1l	equ	0xFE1
  4851                           
  4852                           	psect	bssBANK2
  4853  000200                     __pbssBANK2:
  4854                           	opt stack 0
  4855  000200                     _gblCBW:
  4856                           	opt stack 0
  4857  000200                     	ds	31
  4858  00021F                     _gblSenseData:
  4859                           	opt stack 0
  4860  00021F                     	ds	18
  4861  000231                     _params:
  4862                           	opt stack 0
  4863  000231                     	ds	7
  4864  000238                     _motor_next_speed_check:
  4865                           	opt stack 0
  4866  000238                     	ds	4
  4867  00023C                     _gblBLKLen:
  4868                           	opt stack 0
  4869  00023C                     	ds	4
  4870  000240                     _gblNumBLKS:
  4871                           	opt stack 0
  4872  000240                     	ds	4
  4873  000244                     _gblMediaPresent:
  4874                           	opt stack 0
  4875  000244                     	ds	2
  4876  000246                     _MSBBufferIndex:
  4877                           	opt stack 0
  4878  000246                     	ds	2
  4879  000248                     _display_content:
  4880                           	opt stack 0
  4881  000248                     	ds	80
  4882  000298                     _mediaInformation:
  4883                           	opt stack 0
  4884  000298                     	ds	5
  4885                           tblptru	equ	0xFF8
  4886                           tblptrh	equ	0xFF7
  4887                           tblptrl	equ	0xFF6
  4888                           tablat	equ	0xFF5
  4889                           postinc0	equ	0xFEE
  4890                           wreg	equ	0xFE8
  4891                           postdec1	equ	0xFE5
  4892                           fsr1h	equ	0xFE2
  4893                           fsr1l	equ	0xFE1
  4894                           
  4895                           	psect	dataBANK2
  4896  00029D                     __pdataBANK2:
  4897                           	opt stack 0
  4898  00029D                     _LUN:
  4899                           	opt stack 0
  4900  00029D                     	ds	29
  4901  0002BA                     i2c_display_init@F7093:
  4902                           	opt stack 0
  4903  0002BA                     	ds	9
  4904  0002C3                     __i2c_display_send_init_sequence@F7090:
  4905                           	opt stack 0
  4906  0002C3                     	ds	9
  4907  0002CC                     	ds	8
  4908  0002D4                     _configFile_used_name:
  4909                           	opt stack 0
  4910  0002D4                     	ds	8
  4911  0002DC                     _configFile_name:
  4912                           	opt stack 0
  4913  0002DC                     	ds	8
  4914  0002E4                     _configFile_used_extention:
  4915                           	opt stack 0
  4916  0002E4                     	ds	3
  4917  0002E7                     _configFile_extention:
  4918                           	opt stack 0
  4919  0002E7                     	ds	3
  4920                           tblptru	equ	0xFF8
  4921                           tblptrh	equ	0xFF7
  4922                           tblptrl	equ	0xFF6
  4923                           tablat	equ	0xFF5
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           postdec1	equ	0xFE5
  4927                           fsr1h	equ	0xFE2
  4928                           fsr1l	equ	0xFE1
  4929                           
  4930                           	psect	bssBANK3
  4931  000300                     __pbssBANK3:
  4932                           	opt stack 0
  4933  000300                     _motor_command_cue:
  4934                           	opt stack 0
  4935  000300                     	ds	64
  4936  000340                     _ToSendDataBuffer:
  4937                           	opt stack 0
  4938  000340                     	ds	64
  4939  000380                     _ReceivedDataBuffer:
  4940                           	opt stack 0
  4941  000380                     	ds	64
  4942                           tblptru	equ	0xFF8
  4943                           tblptrh	equ	0xFF7
  4944                           tblptrl	equ	0xFF6
  4945                           tablat	equ	0xFF5
  4946                           postinc0	equ	0xFEE
  4947                           wreg	equ	0xFE8
  4948                           postdec1	equ	0xFE5
  4949                           fsr1h	equ	0xFE2
  4950                           fsr1l	equ	0xFE1
  4951                           
  4952                           	psect	dataBANK4
  4953  000400                     __pdataBANK4:
  4954                           	opt stack 0
  4955  000400                     _dc_startup:
  4956                           	opt stack 0
  4957  000400                     	ds	80
  4958                           tblptru	equ	0xFF8
  4959                           tblptrh	equ	0xFF7
  4960                           tblptrl	equ	0xFF6
  4961                           tablat	equ	0xFF5
  4962                           postinc0	equ	0xFEE
  4963                           wreg	equ	0xFE8
  4964                           postdec1	equ	0xFE5
  4965                           fsr1h	equ	0xFE2
  4966                           fsr1l	equ	0xFE1
  4967                           
  4968                           	psect	bssBIGRAMll
  4969  000800                     __pbssBIGRAMll:
  4970                           	opt stack 0
  4971  000800                     _ConfigFile_buffer:
  4972                           	opt stack 0
  4973  000800                     	ds	512
  4974  000A00                     _buffer:
  4975                           	opt stack 0
  4976  000A00                     	ds	512
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           postinc0	equ	0xFEE
  4982                           wreg	equ	0xFE8
  4983                           postdec1	equ	0xFE5
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           
  4987                           	psect	cstackBANK1
  4988  0001C4                     __pcstackBANK1:
  4989                           	opt stack 0
  4990  0001C4                     ??_configFile_read:
  4991                           
  4992                           ; 1 bytes @ 0x0
  4993  0001C4                     	ds	8
  4994  0001CC                     configFile_read@item_string:
  4995                           	opt stack 0
  4996                           
  4997                           ; 31 bytes @ 0x8
  4998  0001CC                     	ds	31
  4999  0001EB                     configFile_read@value_string:
  5000                           	opt stack 0
  5001                           
  5002                           ; 12 bytes @ 0x27
  5003  0001EB                     	ds	12
  5004  0001F7                     configFile_read@file_size:
  5005                           	opt stack 0
  5006                           
  5007                           ; 4 bytes @ 0x33
  5008  0001F7                     	ds	4
  5009  0001FB                     configFile_read@file_number:
  5010                           	opt stack 0
  5011                           
  5012                           ; 1 bytes @ 0x37
  5013  0001FB                     	ds	1
  5014  0001FC                     configFile_read@position:
  5015                           	opt stack 0
  5016                           
  5017                           ; 4 bytes @ 0x38
  5018  0001FC                     	ds	4
  5019                           tblptru	equ	0xFF8
  5020                           tblptrh	equ	0xFF7
  5021                           tblptrl	equ	0xFF6
  5022                           tablat	equ	0xFF5
  5023                           postinc0	equ	0xFEE
  5024                           wreg	equ	0xFE8
  5025                           postdec1	equ	0xFE5
  5026                           fsr1h	equ	0xFE2
  5027                           fsr1l	equ	0xFE1
  5028                           
  5029                           	psect	cstackBANK0
  5030  000060                     __pcstackBANK0:
  5031                           	opt stack 0
  5032  000060                     ??_motor_stop:
  5033  000060                     ??_isdigit:
  5034  000060                     ??__i2c_wait_idle:
  5035  000060                     ??__display_clear:
  5036  000060                     ??__divide_jump_size_increment:
  5037  000060                     ??__divide_jump_size_decrement:
  5038  000060                     ?_USBTransferOnePacket:
  5039                           	opt stack 0
  5040  000060                     ?_ExternalFlash_MediaInitialize:
  5041                           	opt stack 0
  5042  000060                     ?_ExternalFlash_SectorSizeRead:
  5043                           	opt stack 0
  5044  000060                     ?_strlen:
  5045                           	opt stack 0
  5046  000060                     ?_strncmp:
  5047                           	opt stack 0
  5048  000060                     ?__sector_from_file_number:
  5049                           	opt stack 0
  5050  000060                     ?__offset_from_file_number:
  5051                           	opt stack 0
  5052  000060                     ?__data_sector_from_cluster:
  5053                           	opt stack 0
  5054  000060                     ?__fat_sector_from_cluster:
  5055                           	opt stack 0
  5056  000060                     ?__fat_offset_from_cluster:
  5057                           	opt stack 0
  5058  000060                     ?__cluster_from_sector_and_offset:
  5059                           	opt stack 0
  5060  000060                     ?__get_available_offset_from_buffer:
  5061                           	opt stack 0
  5062  000060                     ?__read_value_from_offset:
  5063                           	opt stack 0
  5064  000060                     ?__get_time:
  5065                           	opt stack 0
  5066  000060                     ?__get_date:
  5067                           	opt stack 0
  5068  000060                     ?__encoder_next_setup_stepsize:
  5069                           	opt stack 0
  5070  000060                     ?__encoder_next_arc_step_size:
  5071                           	opt stack 0
  5072  000060                     ?___wmul:
  5073                           	opt stack 0
  5074  000060                     ?___lwdiv:
  5075                           	opt stack 0
  5076  000060                     ?___lwmod:
  5077                           	opt stack 0
  5078  000060                     ?_ExternalFlash_CapacityRead:
  5079                           	opt stack 0
  5080  000060                     ?__motor_calculate_distance:
  5081                           	opt stack 0
  5082  000060                     ?__display_position_in_degrees:
  5083                           	opt stack 0
  5084  000060                     ?___lmul:
  5085                           	opt stack 0
  5086  000060                     ?___lldiv:
  5087                           	opt stack 0
  5088  000060                     ?___aldiv:
  5089                           	opt stack 0
  5090  000060                     ?___almod:
  5091                           	opt stack 0
  5092  000060                     ?___fltol:
  5093                           	opt stack 0
  5094  000060                     ?___llmod:
  5095                           	opt stack 0
  5096  000060                     USBTransferOnePacket@dir:
  5097                           	opt stack 0
  5098  000060                     USBStallEndpoint@dir:
  5099                           	opt stack 0
  5100  000060                     __i2c_send@dat:
  5101                           	opt stack 0
  5102  000060                     display_get_character@position:
  5103                           	opt stack 0
  5104  000060                     __encoder_next_divide_step_size@old_stepsize:
  5105                           	opt stack 0
  5106  000060                     toupper@c:
  5107                           	opt stack 0
  5108  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5109                           	opt stack 0
  5110  000060                     SYSTEM_Initialize@pll_startup_counter:
  5111                           	opt stack 0
  5112  000060                     ExternalFlash_MediaInitialize@config:
  5113                           	opt stack 0
  5114  000060                     ExternalFlash_SectorSizeRead@config:
  5115                           	opt stack 0
  5116  000060                     ExternalFlash_CapacityRead@config:
  5117                           	opt stack 0
  5118  000060                     ExternalFlash_MediaDetect@config:
  5119                           	opt stack 0
  5120  000060                     ExternalFlash_WriteProtectStateGet@config:
  5121                           	opt stack 0
  5122  000060                     __data_sector_from_cluster@fat_cluster:
  5123                           	opt stack 0
  5124  000060                     __fat_sector_from_cluster@cluster:
  5125                           	opt stack 0
  5126  000060                     __fat_offset_from_cluster@cluster:
  5127                           	opt stack 0
  5128  000060                     __cluster_from_sector_and_offset@sector:
  5129                           	opt stack 0
  5130  000060                     __get_available_offset_from_buffer@minimum_offset:
  5131                           	opt stack 0
  5132  000060                     __read_value_from_offset@offset:
  5133                           	opt stack 0
  5134  000060                     __write_value_to_offset@offset:
  5135                           	opt stack 0
  5136  000060                     __get_mbr@idx:
  5137                           	opt stack 0
  5138  000060                     __get_fbr@idx:
  5139                           	opt stack 0
  5140  000060                     spi_tx@data:
  5141                           	opt stack 0
  5142  000060                     spi_tx_tx@command:
  5143                           	opt stack 0
  5144  000060                     spi_tx_rx@command:
  5145                           	opt stack 0
  5146  000060                     __fill_buffer_get_mode_details@outBuffer:
  5147                           	opt stack 0
  5148  000060                     motor_change_speed@new_speed:
  5149                           	opt stack 0
  5150  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5151                           	opt stack 0
  5152  000060                     __encoder_next_arc_step_size@old_stepsize:
  5153                           	opt stack 0
  5154  000060                     __get_item@item_string:
  5155                           	opt stack 0
  5156  000060                     ___wmul@multiplier:
  5157                           	opt stack 0
  5158  000060                     ___lwdiv@dividend:
  5159                           	opt stack 0
  5160  000060                     ___lwmod@dividend:
  5161                           	opt stack 0
  5162  000060                     memcpy@d1:
  5163                           	opt stack 0
  5164  000060                     memset@p1:
  5165                           	opt stack 0
  5166  000060                     strlen@s:
  5167                           	opt stack 0
  5168  000060                     strncmp@s1:
  5169                           	opt stack 0
  5170  000060                     __spi_init@details:
  5171                           	opt stack 0
  5172  000060                     __motor_run@distance_in_steps:
  5173                           	opt stack 0
  5174  000060                     __motor_schedule_command@distance_in_steps:
  5175                           	opt stack 0
  5176  000060                     __motor_calculate_distance@target_position:
  5177                           	opt stack 0
  5178  000060                     ___lmul@multiplier:
  5179                           	opt stack 0
  5180  000060                     ___lldiv@dividend:
  5181                           	opt stack 0
  5182  000060                     ___aldiv@dividend:
  5183                           	opt stack 0
  5184  000060                     ___almod@dividend:
  5185                           	opt stack 0
  5186  000060                     ___fltol@f1:
  5187                           	opt stack 0
  5188  000060                     ___llmod@dividend:
  5189                           	opt stack 0
  5190                           
  5191                           ; 4 bytes @ 0x0
  5192  000060                     	ds	1
  5193  000061                     ??_USBStallEndpoint:
  5194  000061                     ??_display_get_character:
  5195  000061                     ?_stricmp:
  5196                           	opt stack 0
  5197  000061                     _isdigit$8446:
  5198                           	opt stack 0
  5199  000061                     USBTransferOnePacket@data:
  5200                           	opt stack 0
  5201  000061                     stricmp@s1:
  5202                           	opt stack 0
  5203                           
  5204                           ; 2 bytes @ 0x1
  5205  000061                     	ds	1
  5206  000062                     ??_MSDComputeDeviceInAndResidue:
  5207  000062                     ??_strlen:
  5208  000062                     ??__fill_buffer_get_mode_details:
  5209  000062                     ??__get_mbr:
  5210  000062                     ??__get_fbr:
  5211  000062                     ??__encoder_next_setup_stepsize:
  5212  000062                     ??__encoder_next_arc_step_size:
  5213  000062                     __display_clear@row:
  5214                           	opt stack 0
  5215  000062                     __sector_from_file_number@file_number:
  5216                           	opt stack 0
  5217  000062                     __offset_from_file_number@file_number:
  5218                           	opt stack 0
  5219  000062                     isdigit@c:
  5220                           	opt stack 0
  5221  000062                     SYSTEM_Initialize@pll_startup_counter_3143:
  5222                           	opt stack 0
  5223  000062                     __cluster_from_sector_and_offset@offset:
  5224                           	opt stack 0
  5225  000062                     __get_available_offset_from_buffer@buffer:
  5226                           	opt stack 0
  5227  000062                     __read_value_from_offset@buffer:
  5228                           	opt stack 0
  5229  000062                     __write_value_to_offset@buffer:
  5230                           	opt stack 0
  5231  000062                     spi_tx@length:
  5232                           	opt stack 0
  5233  000062                     spi_tx_tx@command_length:
  5234                           	opt stack 0
  5235  000062                     spi_tx_rx@command_length:
  5236                           	opt stack 0
  5237  000062                     motor_set_manual_speed@new_speed:
  5238                           	opt stack 0
  5239  000062                     __get_item@value_string:
  5240                           	opt stack 0
  5241  000062                     ___wmul@multiplicand:
  5242                           	opt stack 0
  5243  000062                     ___lwdiv@divisor:
  5244                           	opt stack 0
  5245  000062                     ___lwmod@divisor:
  5246                           	opt stack 0
  5247  000062                     memcpy@s1:
  5248                           	opt stack 0
  5249  000062                     memset@c:
  5250                           	opt stack 0
  5251  000062                     strncmp@s2:
  5252                           	opt stack 0
  5253                           
  5254                           ; 2 bytes @ 0x2
  5255  000062                     	ds	1
  5256  000063                     USBTransferOnePacket@len:
  5257                           	opt stack 0
  5258  000063                     __display_clear@col:
  5259                           	opt stack 0
  5260  000063                     display_get_character@line:
  5261                           	opt stack 0
  5262  000063                     spi_init@configuration:
  5263                           	opt stack 0
  5264  000063                     __sector_from_file_number@sector:
  5265                           	opt stack 0
  5266  000063                     __offset_from_file_number@offset:
  5267                           	opt stack 0
  5268  000063                     stricmp@s2:
  5269                           	opt stack 0
  5270                           
  5271                           ; 2 bytes @ 0x3
  5272  000063                     	ds	1
  5273  000064                     ??_USBTransferOnePacket:
  5274  000064                     ??_spi_tx:
  5275  000064                     ??__motor_calculate_distance:
  5276  000064                     ??__get_available_offset_from_buffer:
  5277  000064                     ??__read_value_from_offset:
  5278  000064                     ??___fltol:
  5279  000064                     SYSTEM_Initialize@state:
  5280                           	opt stack 0
  5281  000064                     ___lwmod@counter:
  5282                           	opt stack 0
  5283  000064                     __write_value_to_offset@value:
  5284                           	opt stack 0
  5285  000064                     spi_tx_tx@data:
  5286                           	opt stack 0
  5287  000064                     spi_tx_rx@data:
  5288                           	opt stack 0
  5289  000064                     __fill_buffer_get_display@outBuffer:
  5290                           	opt stack 0
  5291  000064                     __motor_run@speed:
  5292                           	opt stack 0
  5293  000064                     __motor_schedule_command@speed:
  5294                           	opt stack 0
  5295  000064                     motor_set_manual_speed@old_speed:
  5296                           	opt stack 0
  5297  000064                     __get_item@buffer:
  5298                           	opt stack 0
  5299  000064                     ___wmul@product:
  5300                           	opt stack 0
  5301  000064                     ___lwdiv@quotient:
  5302                           	opt stack 0
  5303  000064                     memcpy@n:
  5304                           	opt stack 0
  5305  000064                     memset@n:
  5306                           	opt stack 0
  5307  000064                     strlen@cp:
  5308                           	opt stack 0
  5309  000064                     strncmp@len:
  5310                           	opt stack 0
  5311  000064                     __display_position_in_degrees@position:
  5312                           	opt stack 0
  5313  000064                     ___lmul@multiplicand:
  5314                           	opt stack 0
  5315  000064                     ___lldiv@divisor:
  5316                           	opt stack 0
  5317  000064                     ___aldiv@divisor:
  5318                           	opt stack 0
  5319  000064                     ___almod@divisor:
  5320                           	opt stack 0
  5321  000064                     ___llmod@divisor:
  5322                           	opt stack 0
  5323                           
  5324                           ; 4 bytes @ 0x4
  5325  000064                     	ds	1
  5326  000065                     ??_stricmp:
  5327  000065                     USBStallEndpoint@ep:
  5328                           	opt stack 0
  5329  000065                     __i2c_eeprom_busy@busy:
  5330                           	opt stack 0
  5331  000065                     __i2c_write@data:
  5332                           	opt stack 0
  5333  000065                     __i2c_read@data:
  5334                           	opt stack 0
  5335  000065                     i2c_display_write_fixed@data:
  5336                           	opt stack 0
  5337                           
  5338                           ; 2 bytes @ 0x5
  5339  000065                     	ds	1
  5340  000066                     ??_strncmp:
  5341  000066                     ??__write_value_to_offset:
  5342  000066                     ??__get_item:
  5343  000066                     ?_atoi:
  5344                           	opt stack 0
  5345  000066                     __fill_buffer_get_display@secondHalf:
  5346                           	opt stack 0
  5347  000066                     __motor_run@type:
  5348                           	opt stack 0
  5349  000066                     __motor_schedule_command@type:
  5350                           	opt stack 0
  5351  000066                     ___lwdiv@counter:
  5352                           	opt stack 0
  5353  000066                     stricmp@r:
  5354                           	opt stack 0
  5355  000066                     USBStallEndpoint@p:
  5356                           	opt stack 0
  5357  000066                     __get_available_offset_from_buffer@offset:
  5358                           	opt stack 0
  5359  000066                     spi_tx_tx@data_length:
  5360                           	opt stack 0
  5361  000066                     spi_tx_rx@data_length:
  5362                           	opt stack 0
  5363  000066                     __parse_set_manual_speed@data:
  5364                           	opt stack 0
  5365  000066                     atoi@s:
  5366                           	opt stack 0
  5367  000066                     memcpy@d:
  5368                           	opt stack 0
  5369  000066                     memset@p:
  5370                           	opt stack 0
  5371                           
  5372                           ; 2 bytes @ 0x6
  5373  000066                     	ds	1
  5374  000067                     ??__fill_buffer_get_display:
  5375  000067                     ??__motor_run:
  5376  000067                     __i2c_write@length:
  5377                           	opt stack 0
  5378  000067                     __i2c_read@length:
  5379                           	opt stack 0
  5380  000067                     i2c_display_write_fixed@length:
  5381                           	opt stack 0
  5382  000067                     __motor_schedule_command@direction:
  5383                           	opt stack 0
  5384  000067                     __read_value_from_offset@value:
  5385                           	opt stack 0
  5386  000067                     utoa@buf:
  5387                           	opt stack 0
  5388                           
  5389                           ; 2 bytes @ 0x7
  5390  000067                     	ds	1
  5391  000068                     ??_spi_tx_rx:
  5392  000068                     ??_spi_tx_tx:
  5393  000068                     ??_atoi:
  5394  000068                     ??__i2c_read:
  5395  000068                     USBDeviceInit@i:
  5396                           	opt stack 0
  5397  000068                     USBTransferOnePacket@ep:
  5398                           	opt stack 0
  5399  000068                     MSDErrorHandler@ErrorCase:
  5400                           	opt stack 0
  5401  000068                     __i2c_write@slave_address:
  5402                           	opt stack 0
  5403  000068                     i2c_display_write_fixed@pos:
  5404                           	opt stack 0
  5405  000068                     __flash_wakeup@command:
  5406                           	opt stack 0
  5407  000068                     __motor_move_back_forth@return_value_1:
  5408                           	opt stack 0
  5409  000068                     __motor_calculate_distance@direction:
  5410                           	opt stack 0
  5411  000068                     ___aldiv@counter:
  5412                           	opt stack 0
  5413  000068                     ___almod@counter:
  5414                           	opt stack 0
  5415  000068                     ___fltol@sign1:
  5416                           	opt stack 0
  5417  000068                     ___llmod@counter:
  5418                           	opt stack 0
  5419  000068                     __parse_set_manual_speed@out_buffer:
  5420                           	opt stack 0
  5421  000068                     memcpy@s:
  5422                           	opt stack 0
  5423  000068                     ___lmul@product:
  5424                           	opt stack 0
  5425  000068                     ___lldiv@quotient:
  5426                           	opt stack 0
  5427                           
  5428                           ; 4 bytes @ 0x8
  5429  000068                     	ds	1
  5430  000069                     MSDErrorHandler@OldMSD_State:
  5431                           	opt stack 0
  5432  000069                     __i2c_write@cntr:
  5433                           	opt stack 0
  5434  000069                     __motor_move_back_forth@return_value_2:
  5435                           	opt stack 0
  5436  000069                     __get_item@value_ctr:
  5437                           	opt stack 0
  5438  000069                     ___aldiv@sign:
  5439                           	opt stack 0
  5440  000069                     ___almod@sign:
  5441                           	opt stack 0
  5442  000069                     ___fltol@exp1:
  5443                           	opt stack 0
  5444  000069                     USBTransferOnePacket@handle:
  5445                           	opt stack 0
  5446  000069                     utoa@val:
  5447                           	opt stack 0
  5448  000069                     __motor_calculate_distance@distance:
  5449                           	opt stack 0
  5450                           
  5451                           ; 4 bytes @ 0x9
  5452  000069                     	ds	1
  5453  00006A                     ??_i2c_display_init:
  5454  00006A                     ?___xxtofl:
  5455                           	opt stack 0
  5456  00006A                     __ic2_display_set_ddram_address@address:
  5457                           	opt stack 0
  5458  00006A                     motor_set_zero@direction:
  5459                           	opt stack 0
  5460  00006A                     __get_item@item_ctr:
  5461                           	opt stack 0
  5462  00006A                     atoi@sign:
  5463                           	opt stack 0
  5464  00006A                     memcpy@tmp:
  5465                           	opt stack 0
  5466  00006A                     i2c_eeprom_writeByte@address:
  5467                           	opt stack 0
  5468  00006A                     __parse_set_manual_speed@out_idx_ptr:
  5469                           	opt stack 0
  5470  00006A                     __ic2_display_set_cgram_address@data_array:
  5471                           	opt stack 0
  5472  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5473                           	opt stack 0
  5474  00006A                     ___aldiv@quotient:
  5475                           	opt stack 0
  5476  00006A                     ___xxtofl@val:
  5477                           	opt stack 0
  5478                           
  5479                           ; 4 bytes @ 0xA
  5480  00006A                     	ds	1
  5481  00006B                     __motor_run@direction:
  5482                           	opt stack 0
  5483  00006B                     __ic2_display_set_ddram_address@data_array:
  5484                           	opt stack 0
  5485  00006B                     __fill_buffer_get_status@outBuffer:
  5486                           	opt stack 0
  5487  00006B                     atoi@a:
  5488                           	opt stack 0
  5489  00006B                     utoa@base:
  5490                           	opt stack 0
  5491  00006B                     i2c_display_init@init_sequence:
  5492                           	opt stack 0
  5493                           
  5494                           ; 9 bytes @ 0xB
  5495  00006B                     	ds	1
  5496  00006C                     ??__parse_set_manual_speed:
  5497  00006C                     ?__flash_get_status:
  5498                           	opt stack 0
  5499  00006C                     ?__motor_distance_to_limit:
  5500                           	opt stack 0
  5501  00006C                     ?_atol:
  5502                           	opt stack 0
  5503  00006C                     i2c_eeprom_writeByte@data:
  5504                           	opt stack 0
  5505  00006C                     __fill_buffer_get_display@cntr:
  5506                           	opt stack 0
  5507  00006C                     ___lldiv@counter:
  5508                           	opt stack 0
  5509  00006C                     atol@s:
  5510                           	opt stack 0
  5511                           
  5512                           ; 2 bytes @ 0xC
  5513  00006C                     	ds	1
  5514  00006D                     ??_i2c_eeprom_writeByte:
  5515  00006D                     __ic2_display_set_cgram_address@address:
  5516                           	opt stack 0
  5517  00006D                     i2c_display_cursor@position:
  5518                           	opt stack 0
  5519  00006D                     __fill_buffer_get_display@line:
  5520                           	opt stack 0
  5521  00006D                     __parse_set_manual_speed@new_speed:
  5522                           	opt stack 0
  5523  00006D                     utoa@v:
  5524                           	opt stack 0
  5525  00006D                     ultoa@buf:
  5526                           	opt stack 0
  5527                           
  5528                           ; 2 bytes @ 0xD
  5529  00006D                     	ds	1
  5530  00006E                     ??___xxtofl:
  5531  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5532                           	opt stack 0
  5533  00006E                     i2c_display_cursor@line:
  5534                           	opt stack 0
  5535  00006E                     __flash_get_status@command:
  5536                           	opt stack 0
  5537  00006E                     __fill_buffer_get_display@start_line:
  5538                           	opt stack 0
  5539  00006E                     i2c_display_program_custom_character@bit_pattern:
  5540                           	opt stack 0
  5541                           
  5542                           ; 2 bytes @ 0xE
  5543  00006E                     	ds	1
  5544  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5545                           	opt stack 0
  5546  00006F                     __i2c_read@slave_address:
  5547                           	opt stack 0
  5548  00006F                     i2c_display_cursor@address:
  5549                           	opt stack 0
  5550  00006F                     __fill_buffer_get_display@position:
  5551                           	opt stack 0
  5552  00006F                     utoa@c:
  5553                           	opt stack 0
  5554  00006F                     __flash_get_status@status:
  5555                           	opt stack 0
  5556  00006F                     ultoa@val:
  5557                           	opt stack 0
  5558                           
  5559                           ; 4 bytes @ 0xF
  5560  00006F                     	ds	1
  5561  000070                     ??__motor_distance_to_limit:
  5562  000070                     ??_atol:
  5563  000070                     ??_i2c_display_program_custom_character:
  5564  000070                     MSDCheckForErrorCases@DeviceNoData:
  5565                           	opt stack 0
  5566  000070                     __i2c_read@cntr:
  5567                           	opt stack 0
  5568  000070                     i2c_eeprom_writeByte@slave_address:
  5569                           	opt stack 0
  5570  000070                     display_update@line:
  5571                           	opt stack 0
  5572  000070                     api_prepare@inBuffer:
  5573                           	opt stack 0
  5574  000070                     itoa@buf:
  5575                           	opt stack 0
  5576                           
  5577                           ; 2 bytes @ 0x10
  5578  000070                     	ds	1
  5579  000071                     i2c_eeprom_writeByte@dat:
  5580                           	opt stack 0
  5581  000071                     i2c_eeprom_read@address:
  5582                           	opt stack 0
  5583  000071                     __flash_is_busy@status:
  5584                           	opt stack 0
  5585                           
  5586                           ; 2 bytes @ 0x11
  5587  000071                     	ds	1
  5588  000072                     ___xxtofl@sign:
  5589                           	opt stack 0
  5590  000072                     api_prepare@outBuffer:
  5591                           	opt stack 0
  5592  000072                     itoa@val:
  5593                           	opt stack 0
  5594                           
  5595                           ; 2 bytes @ 0x12
  5596  000072                     	ds	1
  5597  000073                     ___xxtofl@exp:
  5598                           	opt stack 0
  5599  000073                     i2c_eeprom_read@data:
  5600                           	opt stack 0
  5601  000073                     __flash_copy_page_to_buffer@page:
  5602                           	opt stack 0
  5603  000073                     __flash_compare_page_to_buffer@page:
  5604                           	opt stack 0
  5605  000073                     __flash_write_to_buffer@start:
  5606                           	opt stack 0
  5607  000073                     __flash_write_page_from_buffer@page:
  5608                           	opt stack 0
  5609  000073                     __flash_partial_read@page:
  5610                           	opt stack 0
  5611  000073                     ultoa@base:
  5612                           	opt stack 0
  5613  000073                     __flash_set_page_size@command:
  5614                           	opt stack 0
  5615                           
  5616                           ; 4 bytes @ 0x13
  5617  000073                     	ds	1
  5618  000074                     api_prepare@command:
  5619                           	opt stack 0
  5620  000074                     atol@sign:
  5621                           	opt stack 0
  5622  000074                     itoa@base:
  5623                           	opt stack 0
  5624  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5625                           	opt stack 0
  5626  000074                     ___xxtofl@arg:
  5627                           	opt stack 0
  5628  000074                     i2c_display_program_custom_character@data_array:
  5629                           	opt stack 0
  5630                           
  5631                           ; 11 bytes @ 0x14
  5632  000074                     	ds	1
  5633  000075                     i2c_eeprom_read@length:
  5634                           	opt stack 0
  5635  000075                     __flash_copy_page_to_buffer@buffer:
  5636                           	opt stack 0
  5637  000075                     __flash_compare_page_to_buffer@buffer:
  5638                           	opt stack 0
  5639  000075                     __flash_write_page_from_buffer@buffer:
  5640                           	opt stack 0
  5641  000075                     __flash_write_to_buffer@data:
  5642                           	opt stack 0
  5643  000075                     __flash_partial_read@start:
  5644                           	opt stack 0
  5645  000075                     atol@a:
  5646                           	opt stack 0
  5647  000075                     ultoa@v:
  5648                           	opt stack 0
  5649                           
  5650                           ; 4 bytes @ 0x15
  5651  000075                     	ds	1
  5652  000076                     ??_i2c_eeprom_read:
  5653  000076                     ??__flash_copy_page_to_buffer:
  5654  000076                     ??__flash_compare_page_to_buffer:
  5655  000076                     ??__flash_write_page_from_buffer:
  5656  000076                     itoa@cp:
  5657                           	opt stack 0
  5658                           
  5659                           ; 2 bytes @ 0x16
  5660  000076                     	ds	1
  5661  000077                     i2c_eeprom_read@addr:
  5662                           	opt stack 0
  5663  000077                     __flash_set_page_size@size:
  5664                           	opt stack 0
  5665  000077                     __flash_write_to_buffer@data_length:
  5666                           	opt stack 0
  5667  000077                     __flash_partial_read@length:
  5668                           	opt stack 0
  5669                           
  5670                           ; 2 bytes @ 0x17
  5671  000077                     	ds	1
  5672  000078                     ?___fldiv:
  5673                           	opt stack 0
  5674  000078                     ?___flmul:
  5675                           	opt stack 0
  5676  000078                     ?___flneg:
  5677                           	opt stack 0
  5678  000078                     i2c_eeprom_read@slave_address:
  5679                           	opt stack 0
  5680  000078                     __motor_distance_to_limit@direction:
  5681                           	opt stack 0
  5682  000078                     __display_padded_itoa@value:
  5683                           	opt stack 0
  5684  000078                     __display_itoa_u16@value:
  5685                           	opt stack 0
  5686  000078                     ___flge@ff1:
  5687                           	opt stack 0
  5688  000078                     ___flneg@f1:
  5689                           	opt stack 0
  5690  000078                     ___fldiv@b:
  5691                           	opt stack 0
  5692  000078                     ___flmul@b:
  5693                           	opt stack 0
  5694                           
  5695                           ; 4 bytes @ 0x18
  5696  000078                     	ds	1
  5697  000079                     __flash_write_to_buffer@buffer:
  5698                           	opt stack 0
  5699  000079                     atol@c:
  5700                           	opt stack 0
  5701  000079                     ultoa@c:
  5702                           	opt stack 0
  5703  000079                     __flash_compare_page_to_buffer@status:
  5704                           	opt stack 0
  5705  000079                     __flash_partial_read@data:
  5706                           	opt stack 0
  5707  000079                     __flash_copy_page_to_buffer@command:
  5708                           	opt stack 0
  5709  000079                     __flash_write_page_from_buffer@command:
  5710                           	opt stack 0
  5711  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5712                           	opt stack 0
  5713  000079                     i2c_eeprom_recover_position@buffer:
  5714                           	opt stack 0
  5715                           
  5716                           ; 11 bytes @ 0x19
  5717  000079                     	ds	1
  5718  00007A                     __display_padded_itoa@length:
  5719                           	opt stack 0
  5720  00007A                     __display_itoa_u16@text:
  5721                           	opt stack 0
  5722  00007A                     ltoa@buf:
  5723                           	opt stack 0
  5724  00007A                     __flash_write_to_buffer@command:
  5725                           	opt stack 0
  5726                           
  5727                           ; 4 bytes @ 0x1A
  5728  00007A                     	ds	1
  5729  00007B                     ??__flash_partial_read:
  5730  00007B                     __display_padded_itoa@text:
  5731                           	opt stack 0
  5732  00007B                     __flash_compare_page_to_buffer@command:
  5733                           	opt stack 0
  5734                           
  5735                           ; 4 bytes @ 0x1B
  5736  00007B                     	ds	1
  5737  00007C                     ?___fladd:
  5738                           	opt stack 0
  5739  00007C                     __display_start@cntr:
  5740                           	opt stack 0
  5741  00007C                     ___flge@ff2:
  5742                           	opt stack 0
  5743  00007C                     ___fladd@b:
  5744                           	opt stack 0
  5745  00007C                     ___fldiv@a:
  5746                           	opt stack 0
  5747  00007C                     ___flmul@a:
  5748                           	opt stack 0
  5749  00007C                     ltoa@val:
  5750                           	opt stack 0
  5751                           
  5752                           ; 4 bytes @ 0x1C
  5753  00007C                     	ds	1
  5754  00007D                     ??__display_padded_itoa:
  5755  00007D                     __motor_move_steps@distance_in_steps:
  5756                           	opt stack 0
  5757  00007D                     __motor_decide_direction@target_position_in_steps:
  5758                           	opt stack 0
  5759                           
  5760                           ; 4 bytes @ 0x1D
  5761  00007D                     	ds	2
  5762  00007F                     i2c_display_program_custom_character@address:
  5763                           	opt stack 0
  5764  00007F                     flash_sector_write@page:
  5765                           	opt stack 0
  5766  00007F                     flash_partial_write@page:
  5767                           	opt stack 0
  5768  00007F                     __flash_partial_read@command:
  5769                           	opt stack 0
  5770                           
  5771                           ; 4 bytes @ 0x1F
  5772  00007F                     	ds	1
  5773  000080                     ??___fldiv:
  5774  000080                     ??___flmul:
  5775  000080                     ??___flge:
  5776  000080                     i2c_display_program_custom_character@cntr:
  5777                           	opt stack 0
  5778  000080                     ltoa@base:
  5779                           	opt stack 0
  5780  000080                     ___fladd@a:
  5781                           	opt stack 0
  5782                           
  5783                           ; 4 bytes @ 0x20
  5784  000080                     	ds	1
  5785  000081                     __motor_decide_direction@overshoot:
  5786                           	opt stack 0
  5787  000081                     flash_sector_write@data:
  5788                           	opt stack 0
  5789  000081                     flash_partial_write@start:
  5790                           	opt stack 0
  5791  000081                     __motor_move_steps@speed:
  5792                           	opt stack 0
  5793                           
  5794                           ; 2 bytes @ 0x21
  5795  000081                     	ds	1
  5796  000082                     ltoa@cp:
  5797                           	opt stack 0
  5798  000082                     __motor_decide_direction@distance_to_limit_cw:
  5799                           	opt stack 0
  5800  000082                     __display_padded_itoa@tmp:
  5801                           	opt stack 0
  5802                           
  5803                           ; 10 bytes @ 0x22
  5804  000082                     	ds	1
  5805  000083                     flash_sector_write@match:
  5806                           	opt stack 0
  5807  000083                     __motor_move_steps@overshoot:
  5808                           	opt stack 0
  5809  000083                     flash_partial_write@length:
  5810                           	opt stack 0
  5811  000083                     __flash_partial_read@address:
  5812                           	opt stack 0
  5813                           
  5814                           ; 4 bytes @ 0x23
  5815  000083                     	ds	1
  5816  000084                     ??___fladd:
  5817  000084                     __motor_move_steps@type:
  5818                           	opt stack 0
  5819  000084                     ___flmul@sign:
  5820                           	opt stack 0
  5821  000084                     ExternalFlash_SectorWrite@config:
  5822                           	opt stack 0
  5823  000084                     fat_restore_mbr_fbr@cntr:
  5824                           	opt stack 0
  5825  000084                     __add_item@item_string:
  5826                           	opt stack 0
  5827  000084                     ___fldiv@rem:
  5828                           	opt stack 0
  5829                           
  5830                           ; 4 bytes @ 0x24
  5831  000084                     	ds	1
  5832  000085                     __motor_move_steps@return_value_1:
  5833                           	opt stack 0
  5834  000085                     flash_partial_write@data:
  5835                           	opt stack 0
  5836  000085                     ___flmul@grs:
  5837                           	opt stack 0
  5838                           
  5839                           ; 4 bytes @ 0x25
  5840  000085                     	ds	1
  5841  000086                     __motor_move_steps@return_value_2:
  5842                           	opt stack 0
  5843  000086                     ExternalFlash_SectorWrite@sector_addr:
  5844                           	opt stack 0
  5845  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5846                           	opt stack 0
  5847  000086                     __add_item@value:
  5848                           	opt stack 0
  5849                           
  5850                           ; 4 bytes @ 0x26
  5851  000086                     	ds	1
  5852  000087                     flash_partial_write@match:
  5853                           	opt stack 0
  5854  000087                     flash_sector_read@page:
  5855                           	opt stack 0
  5856  000087                     flash_partial_read@page:
  5857                           	opt stack 0
  5858  000087                     __motor_move_steps@distance_to_limit:
  5859                           	opt stack 0
  5860                           
  5861                           ; 4 bytes @ 0x27
  5862  000087                     	ds	1
  5863  000088                     ___fldiv@sign:
  5864                           	opt stack 0
  5865  000088                     __write_root@data:
  5866                           	opt stack 0
  5867                           
  5868                           ; 2 bytes @ 0x28
  5869  000088                     	ds	1
  5870  000089                     ___flmul@aexp:
  5871                           	opt stack 0
  5872  000089                     flash_sector_read@data:
  5873                           	opt stack 0
  5874  000089                     flash_partial_read@start:
  5875                           	opt stack 0
  5876  000089                     ___fldiv@new_exp:
  5877                           	opt stack 0
  5878                           
  5879                           ; 2 bytes @ 0x29
  5880  000089                     	ds	1
  5881  00008A                     ___flmul@bexp:
  5882                           	opt stack 0
  5883  00008A                     ExternalFlash_SectorWrite@buffer:
  5884                           	opt stack 0
  5885  00008A                     __write_root@sector:
  5886                           	opt stack 0
  5887  00008A                     __add_item@buffer:
  5888                           	opt stack 0
  5889  00008A                     __motor_decide_direction@distance_to_target_cw:
  5890                           	opt stack 0
  5891                           
  5892                           ; 4 bytes @ 0x2A
  5893  00008A                     	ds	1
  5894  00008B                     ??_fat_get_format_status:
  5895  00008B                     ?__get_available_cluster:
  5896                           	opt stack 0
  5897  00008B                     __motor_move_steps@direction:
  5898                           	opt stack 0
  5899  00008B                     flash_partial_read@length:
  5900                           	opt stack 0
  5901  00008B                     ExternalFlash_SectorRead@config:
  5902                           	opt stack 0
  5903  00008B                     __get_available_cluster@first_sector:
  5904                           	opt stack 0
  5905  00008B                     fat_find_file@name:
  5906                           	opt stack 0
  5907  00008B                     ___fldiv@grs:
  5908                           	opt stack 0
  5909  00008B                     ___flmul@prod:
  5910                           	opt stack 0
  5911                           
  5912                           ; 4 bytes @ 0x2B
  5913  00008B                     	ds	1
  5914  00008C                     ??__add_item:
  5915  00008C                     __display_padded_itoa@len:
  5916                           	opt stack 0
  5917  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5918                           	opt stack 0
  5919  00008C                     ___fladd@signs:
  5920                           	opt stack 0
  5921  00008C                     __write_root@offset:
  5922                           	opt stack 0
  5923  00008C                     motor_move_endless@speed:
  5924                           	opt stack 0
  5925  00008C                     motor_move_steps@distance:
  5926                           	opt stack 0
  5927                           
  5928                           ; 4 bytes @ 0x2C
  5929  00008C                     	ds	1
  5930  00008D                     __display_padded_itoa@pos:
  5931                           	opt stack 0
  5932  00008D                     ___fladd@aexp:
  5933                           	opt stack 0
  5934  00008D                     flash_partial_read@data:
  5935                           	opt stack 0
  5936  00008D                     ExternalFlash_SectorWrite@page:
  5937                           	opt stack 0
  5938  00008D                     __get_available_cluster@skip_sector:
  5939                           	opt stack 0
  5940  00008D                     fat_find_file@extension:
  5941                           	opt stack 0
  5942  00008D                     fat_get_format_status@cntr:
  5943                           	opt stack 0
  5944  00008D                     ExternalFlash_SectorRead@sector_addr:
  5945                           	opt stack 0
  5946                           
  5947                           ; 4 bytes @ 0x2D
  5948  00008D                     	ds	1
  5949  00008E                     __display_padded_itoa@padding:
  5950                           	opt stack 0
  5951  00008E                     __write_root@file_number:
  5952                           	opt stack 0
  5953  00008E                     motor_move_endless@direction:
  5954                           	opt stack 0
  5955  00008E                     __add_item@length:
  5956                           	opt stack 0
  5957  00008E                     ___fladd@bexp:
  5958                           	opt stack 0
  5959  00008E                     __motor_decide_direction@distance_to_target_ccw:
  5960                           	opt stack 0
  5961                           
  5962                           ; 4 bytes @ 0x2E
  5963  00008E                     	ds	1
  5964  00008F                     ??_MSDWriteHandler:
  5965  00008F                     ??_fat_find_file:
  5966  00008F                     ?__read_fat:
  5967                           	opt stack 0
  5968  00008F                     ___fladd@grs:
  5969                           	opt stack 0
  5970  00008F                     ___fldiv@bexp:
  5971                           	opt stack 0
  5972  00008F                     __display_signed_itoa@value:
  5973                           	opt stack 0
  5974  00008F                     __get_available_cluster@cluster:
  5975                           	opt stack 0
  5976  00008F                     __root_is_available@root_sector:
  5977                           	opt stack 0
  5978  00008F                     __read_fat@cluster:
  5979                           	opt stack 0
  5980  00008F                     fat_get_file_information@data:
  5981                           	opt stack 0
  5982  00008F                     ___flmul@temp:
  5983                           	opt stack 0
  5984                           
  5985                           ; 2 bytes @ 0x2F
  5986  00008F                     	ds	1
  5987  000090                     ___fldiv@aexp:
  5988                           	opt stack 0
  5989  000090                     motor_move_steps@speed:
  5990                           	opt stack 0
  5991                           
  5992                           ; 2 bytes @ 0x30
  5993  000090                     	ds	1
  5994  000091                     ??_adc_read_temperature:
  5995  000091                     ?__motor_get_speed_in_degrees:
  5996                           	opt stack 0
  5997  000091                     ?__steps_from_degrees:
  5998                           	opt stack 0
  5999  000091                     ?__motor_steps_from_degrees_int:
  6000                           	opt stack 0
  6001  000091                     ?__step_position_from_divide_position:
  6002                           	opt stack 0
  6003  000091                     fat_find_file@file_number:
  6004                           	opt stack 0
  6005  000091                     __display_signed_itoa@text:
  6006                           	opt stack 0
  6007  000091                     ExternalFlash_SectorRead@buffer:
  6008                           	opt stack 0
  6009  000091                     __get_available_cluster@offset:
  6010                           	opt stack 0
  6011  000091                     __root_is_available@offset:
  6012                           	opt stack 0
  6013  000091                     __read_fat@sector:
  6014                           	opt stack 0
  6015  000091                     __motor_steps_from_degrees_int@degrees:
  6016                           	opt stack 0
  6017  000091                     __motor_get_speed_in_degrees@speed_index:
  6018                           	opt stack 0
  6019  000091                     __step_position_from_divide_position@divide_position:
  6020                           	opt stack 0
  6021  000091                     motor_calculate_position_in_degrees@tmp:
  6022                           	opt stack 0
  6023  000091                     __steps_from_degrees@degrees:
  6024                           	opt stack 0
  6025                           
  6026                           ; 4 bytes @ 0x31
  6027  000091                     	ds	1
  6028  000092                     motor_move_steps@overshoot:
  6029                           	opt stack 0
  6030  000092                     fat_find_file@sector:
  6031                           	opt stack 0
  6032  000092                     fat_get_file_information@root_sector:
  6033                           	opt stack 0
  6034  000092                     motor_goto_steps@position:
  6035                           	opt stack 0
  6036                           
  6037                           ; 4 bytes @ 0x32
  6038  000092                     	ds	1
  6039  000093                     ??__motor_get_speed_in_degrees:
  6040  000093                     __root_is_available@file_number:
  6041                           	opt stack 0
  6042  000093                     motor_move_steps@direction:
  6043                           	opt stack 0
  6044  000093                     ExternalFlash_SectorRead@page:
  6045                           	opt stack 0
  6046  000093                     __get_available_cluster@sector:
  6047                           	opt stack 0
  6048  000093                     __read_fat@offset:
  6049                           	opt stack 0
  6050  000093                     adc_read_temperature@adc_result:
  6051                           	opt stack 0
  6052                           
  6053                           ; 2 bytes @ 0x33
  6054  000093                     	ds	1
  6055  000094                     __root_is_available@first_byte:
  6056                           	opt stack 0
  6057  000094                     motor_arc_move@direction:
  6058                           	opt stack 0
  6059  000094                     fat_find_file@offset:
  6060                           	opt stack 0
  6061  000094                     fat_get_file_information@offset:
  6062                           	opt stack 0
  6063  000094                     __parse_jump_steps@data:
  6064                           	opt stack 0
  6065  000094                     __parse_jump_steps_with_overshoot@data:
  6066                           	opt stack 0
  6067                           
  6068                           ; 2 bytes @ 0x34
  6069  000094                     	ds	1
  6070  000095                     ??_MSDReadHandler:
  6071  000095                     ?__make_cluster_chain:
  6072                           	opt stack 0
  6073  000095                     ?_fat_get_file_size:
  6074                           	opt stack 0
  6075  000095                     __get_available_root_entry@file_number:
  6076                           	opt stack 0
  6077  000095                     __make_cluster_chain@first_cluster:
  6078                           	opt stack 0
  6079  000095                     __read_fat@value:
  6080                           	opt stack 0
  6081  000095                     __motor_steps_from_degrees_int@temp:
  6082                           	opt stack 0
  6083  000095                     __motor_get_speed_in_degrees@speed:
  6084                           	opt stack 0
  6085  000095                     __step_position_from_divide_position@target_position:
  6086                           	opt stack 0
  6087  000095                     motor_arc_move@arc_in_steps:
  6088                           	opt stack 0
  6089  000095                     adc_read_temperature@temperature:
  6090                           	opt stack 0
  6091  000095                     __steps_from_degrees@temp:
  6092                           	opt stack 0
  6093                           
  6094                           ; 4 bytes @ 0x35
  6095  000095                     	ds	1
  6096  000096                     fat_get_file_information@file_number:
  6097                           	opt stack 0
  6098  000096                     __parse_jump_steps@out_buffer:
  6099                           	opt stack 0
  6100  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6101                           	opt stack 0
  6102  000096                     motor_goto_steps@speed:
  6103                           	opt stack 0
  6104                           
  6105                           ; 2 bytes @ 0x36
  6106  000096                     	ds	1
  6107  000097                     ?__find_nth_cluster:
  6108                           	opt stack 0
  6109  000097                     __find_nth_cluster@cluster:
  6110                           	opt stack 0
  6111  000097                     __make_cluster_chain@number_of_clusters:
  6112                           	opt stack 0
  6113                           
  6114                           ; 2 bytes @ 0x37
  6115  000097                     	ds	1
  6116  000098                     motor_goto_steps@overshoot:
  6117                           	opt stack 0
  6118  000098                     __parse_jump_steps@out_idx_ptr:
  6119                           	opt stack 0
  6120  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6121                           	opt stack 0
  6122                           
  6123                           ; 2 bytes @ 0x38
  6124  000098                     	ds	1
  6125  000099                     ??_MSDProcessCommandMediaPresent:
  6126  000099                     ??__make_cluster_chain:
  6127  000099                     __find_nth_cluster@n:
  6128                           	opt stack 0
  6129  000099                     fat_get_file_size@sector:
  6130                           	opt stack 0
  6131  000099                     motor_move_degrees_int@distance:
  6132                           	opt stack 0
  6133  000099                     __parse_item@item_string:
  6134                           	opt stack 0
  6135  000099                     __motor_get_speed_in_degrees@lookup:
  6136                           	opt stack 0
  6137  000099                     motor_goto_steps@distance_in_steps:
  6138                           	opt stack 0
  6139                           
  6140                           ; 4 bytes @ 0x39
  6141  000099                     	ds	1
  6142  00009A                     ??__parse_jump_steps:
  6143  00009A                     ??__parse_jump_steps_with_overshoot:
  6144                           
  6145                           ; 1 bytes @ 0x3A
  6146  00009A                     	ds	1
  6147  00009B                     __parse_jump_steps@return_value:
  6148                           	opt stack 0
  6149  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6150                           	opt stack 0
  6151  00009B                     _MSDProcessCommandMediaPresent$2606:
  6152                           	opt stack 0
  6153  00009B                     __find_nth_cluster@offset:
  6154                           	opt stack 0
  6155  00009B                     __make_cluster_chain@next_offset:
  6156                           	opt stack 0
  6157  00009B                     fat_get_file_size@offset:
  6158                           	opt stack 0
  6159  00009B                     motor_move_degrees_int@speed:
  6160                           	opt stack 0
  6161  00009B                     __parse_item@value_string:
  6162                           	opt stack 0
  6163                           
  6164                           ; 2 bytes @ 0x3B
  6165  00009B                     	ds	1
  6166  00009C                     __parse_jump_steps@number_of_steps:
  6167                           	opt stack 0
  6168  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6169                           	opt stack 0
  6170                           
  6171                           ; 4 bytes @ 0x3C
  6172  00009C                     	ds	1
  6173  00009D                     ?_motor_speed_from_index:
  6174                           	opt stack 0
  6175  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6176                           	opt stack 0
  6177  00009D                     motor_move_degrees_int@overshoot:
  6178                           	opt stack 0
  6179  00009D                     motor_goto_steps@direction:
  6180                           	opt stack 0
  6181  00009D                     __find_nth_cluster@sector_in_buffer:
  6182                           	opt stack 0
  6183  00009D                     __make_cluster_chain@minimum_sector:
  6184                           	opt stack 0
  6185  00009D                     motor_speed_from_index@speed_index:
  6186                           	opt stack 0
  6187  00009D                     fat_get_file_size@file_size:
  6188                           	opt stack 0
  6189                           
  6190                           ; 4 bytes @ 0x3D
  6191  00009D                     	ds	1
  6192  00009E                     ??_motor_divide_jump:
  6193  00009E                     __parse_command_short@cmd:
  6194                           	opt stack 0
  6195  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6196                           	opt stack 0
  6197  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6198                           	opt stack 0
  6199  00009E                     motor_move_degrees_int@distance_in_steps:
  6200                           	opt stack 0
  6201                           
  6202                           ; 4 bytes @ 0x3E
  6203  00009E                     	ds	1
  6204  00009F                     __display_itoa@value:
  6205                           	opt stack 0
  6206  00009F                     __find_nth_cluster@sector:
  6207                           	opt stack 0
  6208  00009F                     __make_cluster_chain@different_sector_cluster:
  6209                           	opt stack 0
  6210  00009F                     motor_divide_jump@target_position_in_steps:
  6211                           	opt stack 0
  6212                           
  6213                           ; 4 bytes @ 0x3F
  6214  00009F                     	ds	1
  6215  0000A0                     __parse_command_long@data:
  6216                           	opt stack 0
  6217                           
  6218                           ; 2 bytes @ 0x40
  6219  0000A0                     	ds	1
  6220  0000A1                     __display_itoa@decimals:
  6221                           	opt stack 0
  6222  0000A1                     __make_cluster_chain@data_changed:
  6223                           	opt stack 0
  6224  0000A1                     fat_get_file_size@file_number:
  6225                           	opt stack 0
  6226  0000A1                     fat_read_from_file_fast@start_byte:
  6227                           	opt stack 0
  6228  0000A1                     fat_modify_file@start_byte:
  6229                           	opt stack 0
  6230                           
  6231                           ; 4 bytes @ 0x41
  6232  0000A1                     	ds	1
  6233  0000A2                     motor_move_degrees_int@direction:
  6234                           	opt stack 0
  6235  0000A2                     __display_itoa@text:
  6236                           	opt stack 0
  6237  0000A2                     __make_cluster_chain@remaining_clusters:
  6238                           	opt stack 0
  6239  0000A2                     __parse_command_long@out_buffer:
  6240                           	opt stack 0
  6241  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6242                           	opt stack 0
  6243  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6244                           	opt stack 0
  6245                           
  6246                           ; 4 bytes @ 0x42
  6247  0000A2                     	ds	1
  6248  0000A3                     motor_divide_jump@target_divide_position:
  6249                           	opt stack 0
  6250                           
  6251                           ; 2 bytes @ 0x43
  6252  0000A3                     	ds	1
  6253  0000A4                     ??__display_itoa:
  6254  0000A4                     __make_cluster_chain@sector:
  6255                           	opt stack 0
  6256  0000A4                     __parse_command_long@out_idx_ptr:
  6257                           	opt stack 0
  6258  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6259                           	opt stack 0
  6260                           
  6261                           ; 4 bytes @ 0x44
  6262  0000A4                     	ds	1
  6263  0000A5                     fat_modify_file@length:
  6264                           	opt stack 0
  6265  0000A5                     fat_read_from_file_fast@length:
  6266                           	opt stack 0
  6267                           
  6268                           ; 4 bytes @ 0x45
  6269  0000A5                     	ds	1
  6270  0000A6                     MSDProcessCommandMediaPresent@i:
  6271                           	opt stack 0
  6272  0000A6                     __parse_command_long@length:
  6273                           	opt stack 0
  6274  0000A6                     __make_cluster_chain@sector_in_buffer:
  6275                           	opt stack 0
  6276                           
  6277                           ; 2 bytes @ 0x46
  6278  0000A6                     	ds	1
  6279  0000A7                     ??_MSDProcessCommand:
  6280  0000A7                     fat_modify_file@data:
  6281                           	opt stack 0
  6282  0000A7                     api_parse@inBuffer:
  6283                           	opt stack 0
  6284                           
  6285                           ; 2 bytes @ 0x47
  6286  0000A7                     	ds	1
  6287  0000A8                     ??_encoder_statemachine:
  6288  0000A8                     __make_cluster_chain@offset:
  6289                           	opt stack 0
  6290                           
  6291                           ; 2 bytes @ 0x48
  6292  0000A8                     	ds	1
  6293  0000A9                     ??_fat_modify_file:
  6294  0000A9                     api_parse@receivedDataLength:
  6295                           	opt stack 0
  6296  0000A9                     fat_read_from_file_fast@data:
  6297                           	opt stack 0
  6298                           
  6299                           ; 2 bytes @ 0x49
  6300  0000A9                     	ds	1
  6301  0000AA                     __make_cluster_chain@next_cluster:
  6302                           	opt stack 0
  6303  0000AA                     api_parse@outBuffer:
  6304                           	opt stack 0
  6305  0000AA                     __display_itoa@tmp:
  6306                           	opt stack 0
  6307                           
  6308                           ; 10 bytes @ 0x4A
  6309  0000AA                     	ds	1
  6310  0000AB                     fat_read_from_file_fast@cluster:
  6311                           	opt stack 0
  6312                           
  6313                           ; 2 bytes @ 0x4B
  6314  0000AB                     	ds	1
  6315  0000AC                     ??_api_parse:
  6316  0000AC                     ??_MSDTasks:
  6317  0000AC                     fat_create_file@name:
  6318                           	opt stack 0
  6319  0000AC                     fat_resize_file@new_file_size:
  6320                           	opt stack 0
  6321                           
  6322                           ; 4 bytes @ 0x4C
  6323  0000AC                     	ds	1
  6324  0000AD                     _MSDTasks$2588:
  6325                           	opt stack 0
  6326  0000AD                     fat_read_from_file_fast@cluster_number:
  6327                           	opt stack 0
  6328                           
  6329                           ; 2 bytes @ 0x4D
  6330  0000AD                     	ds	1
  6331  0000AE                     fat_create_file@extension:
  6332                           	opt stack 0
  6333  0000AE                     api_parse@out_idx_ptr:
  6334                           	opt stack 0
  6335                           
  6336                           ; 2 bytes @ 0x4E
  6337  0000AE                     	ds	1
  6338  0000AF                     ??_fat_read_from_file_fast:
  6339  0000AF                     _MSDTasks$2589:
  6340                           	opt stack 0
  6341                           
  6342                           ; 2 bytes @ 0x4F
  6343  0000AF                     	ds	1
  6344  0000B0                     ??_fat_resize_file:
  6345  0000B0                     api_parse@out_idx:
  6346                           	opt stack 0
  6347  0000B0                     fat_create_file@size:
  6348                           	opt stack 0
  6349                           
  6350                           ; 4 bytes @ 0x50
  6351  0000B0                     	ds	1
  6352  0000B1                     MSDTasks@i:
  6353                           	opt stack 0
  6354  0000B1                     api_parse@in_idx:
  6355                           	opt stack 0
  6356                           
  6357                           ; 1 bytes @ 0x51
  6358  0000B1                     	ds	1
  6359  0000B2                     
  6360                           ; 1 bytes @ 0x52
  6361  0000B2                     	ds	2
  6362  0000B4                     ??_fat_create_file:
  6363  0000B4                     __display_itoa@len:
  6364                           	opt stack 0
  6365  0000B4                     fat_resize_file@old_number_of_clusters:
  6366                           	opt stack 0
  6367                           
  6368                           ; 2 bytes @ 0x54
  6369  0000B4                     	ds	1
  6370  0000B5                     __display_itoa@missing:
  6371                           	opt stack 0
  6372  0000B5                     fat_modify_file@sector:
  6373                           	opt stack 0
  6374                           
  6375                           ; 2 bytes @ 0x55
  6376  0000B5                     	ds	1
  6377  0000B6                     __display_itoa@pos:
  6378                           	opt stack 0
  6379  0000B6                     fat_resize_file@new_number_of_clusters:
  6380                           	opt stack 0
  6381                           
  6382                           ; 2 bytes @ 0x56
  6383  0000B6                     	ds	1
  6384  0000B7                     fat_modify_file@file_number:
  6385                           	opt stack 0
  6386  0000B7                     __display_itoa_long@value:
  6387                           	opt stack 0
  6388                           
  6389                           ; 4 bytes @ 0x57
  6390  0000B7                     	ds	1
  6391  0000B8                     fat_modify_file@return_code:
  6392                           	opt stack 0
  6393  0000B8                     fat_create_file@number_of_clusters:
  6394                           	opt stack 0
  6395  0000B8                     fat_resize_file@first_cluster:
  6396                           	opt stack 0
  6397                           
  6398                           ; 2 bytes @ 0x58
  6399  0000B8                     	ds	1
  6400  0000B9                     fat_modify_file@cluster:
  6401                           	opt stack 0
  6402                           
  6403                           ; 2 bytes @ 0x59
  6404  0000B9                     	ds	1
  6405  0000BA                     fat_resize_file@file_number:
  6406                           	opt stack 0
  6407  0000BA                     fat_create_file@first_cluster:
  6408                           	opt stack 0
  6409                           
  6410                           ; 2 bytes @ 0x5A
  6411  0000BA                     	ds	1
  6412  0000BB                     __display_itoa_long@decimals:
  6413                           	opt stack 0
  6414  0000BB                     fat_read_from_file_fast@sector:
  6415                           	opt stack 0
  6416  0000BB                     fat_modify_file@offset:
  6417                           	opt stack 0
  6418  0000BB                     fat_resize_file@root:
  6419                           	opt stack 0
  6420                           
  6421                           ; 32 bytes @ 0x5B
  6422  0000BB                     	ds	1
  6423  0000BC                     fat_create_file@file_number:
  6424                           	opt stack 0
  6425  0000BC                     __display_itoa_long@text:
  6426                           	opt stack 0
  6427                           
  6428                           ; 2 bytes @ 0x5C
  6429  0000BC                     	ds	1
  6430  0000BD                     fat_read_from_file_fast@working_cluster:
  6431                           	opt stack 0
  6432  0000BD                     fat_modify_file@number_of_bytes:
  6433                           	opt stack 0
  6434  0000BD                     fat_create_file@root_entry:
  6435                           	opt stack 0
  6436                           
  6437                           ; 32 bytes @ 0x5D
  6438  0000BD                     	ds	1
  6439  0000BE                     ??__display_itoa_long:
  6440                           
  6441                           ; 1 bytes @ 0x5E
  6442  0000BE                     	ds	1
  6443  0000BF                     fat_read_from_file_fast@offset:
  6444                           	opt stack 0
  6445  0000BF                     fat_modify_file@position:
  6446                           	opt stack 0
  6447                           
  6448                           ; 4 bytes @ 0x5F
  6449  0000BF                     	ds	2
  6450  0000C1                     fat_read_from_file_fast@needed_cluster:
  6451                           	opt stack 0
  6452                           
  6453                           ; 2 bytes @ 0x61
  6454  0000C1                     	ds	1
  6455  0000C2                     __display_itoa_long@length:
  6456                           	opt stack 0
  6457                           
  6458                           ; 1 bytes @ 0x62
  6459  0000C2                     	ds	1
  6460  0000C3                     __display_itoa_long@short_value:
  6461                           	opt stack 0
  6462  0000C3                     fat_read_from_file_fast@read_length:
  6463                           	opt stack 0
  6464  0000C3                     fat_modify_file@root:
  6465                           	opt stack 0
  6466                           
  6467                           ; 32 bytes @ 0x63
  6468  0000C3                     	ds	2
  6469  0000C5                     __display_itoa_long@last_digit:
  6470                           	opt stack 0
  6471  0000C5                     fat_read_from_file_fast@position:
  6472                           	opt stack 0
  6473                           
  6474                           ; 4 bytes @ 0x65
  6475  0000C5                     	ds	1
  6476  0000C6                     ??_display_prepare:
  6477                           
  6478                           ; 1 bytes @ 0x66
  6479  0000C6                     	ds	2
  6480  0000C8                     display_prepare@temp:
  6481                           	opt stack 0
  6482                           
  6483                           ; 10 bytes @ 0x68
  6484  0000C8                     	ds	1
  6485  0000C9                     fat_read_from_file@start_byte:
  6486                           	opt stack 0
  6487                           
  6488                           ; 4 bytes @ 0x69
  6489  0000C9                     	ds	4
  6490  0000CD                     fat_read_from_file@length:
  6491                           	opt stack 0
  6492                           
  6493                           ; 4 bytes @ 0x6D
  6494  0000CD                     	ds	4
  6495  0000D1                     fat_read_from_file@data:
  6496                           	opt stack 0
  6497                           
  6498                           ; 2 bytes @ 0x71
  6499  0000D1                     	ds	1
  6500  0000D2                     display_prepare@space:
  6501                           	opt stack 0
  6502                           
  6503                           ; 1 bytes @ 0x72
  6504  0000D2                     	ds	1
  6505  0000D3                     ??_fat_read_from_file:
  6506  0000D3                     display_prepare@cntr:
  6507                           	opt stack 0
  6508                           
  6509                           ; 1 bytes @ 0x73
  6510  0000D3                     	ds	4
  6511  0000D7                     fat_read_from_file@file_number:
  6512                           	opt stack 0
  6513                           
  6514                           ; 1 bytes @ 0x77
  6515  0000D7                     	ds	1
  6516  0000D8                     fat_read_from_file@return_code:
  6517                           	opt stack 0
  6518                           
  6519                           ; 1 bytes @ 0x78
  6520  0000D8                     	ds	1
  6521  0000D9                     fat_read_from_file@cluster:
  6522                           	opt stack 0
  6523                           
  6524                           ; 2 bytes @ 0x79
  6525  0000D9                     	ds	2
  6526  0000DB                     fat_read_from_file@cluster_number:
  6527                           	opt stack 0
  6528                           
  6529                           ; 2 bytes @ 0x7B
  6530  0000DB                     	ds	2
  6531  0000DD                     fat_read_from_file@root:
  6532                           	opt stack 0
  6533                           
  6534                           ; 32 bytes @ 0x7D
  6535  0000DD                     	ds	6
  6536  0000E3                     ??_configFile_write:
  6537                           
  6538                           ; 1 bytes @ 0x83
  6539  0000E3                     	ds	1
  6540  0000E4                     configFile_write@file_number:
  6541                           	opt stack 0
  6542                           
  6543                           ; 1 bytes @ 0x84
  6544  0000E4                     	ds	1
  6545  0000E5                     configFile_write@file_size:
  6546                           	opt stack 0
  6547                           
  6548                           ; 4 bytes @ 0x85
  6549  0000E5                     	ds	24
  6550  0000FD                     ??_system_init:
  6551                           
  6552                           ; 1 bytes @ 0x9D
  6553  0000FD                     	ds	1
  6554  0000FE                     main@startup_timer:
  6555                           	opt stack 0
  6556                           
  6557                           ; 1 bytes @ 0x9E
  6558  0000FE                     	ds	1
  6559                           tblptru	equ	0xFF8
  6560                           tblptrh	equ	0xFF7
  6561                           tblptrl	equ	0xFF6
  6562                           tablat	equ	0xFF5
  6563                           postinc0	equ	0xFEE
  6564                           wreg	equ	0xFE8
  6565                           postdec1	equ	0xFE5
  6566                           fsr1h	equ	0xFE2
  6567                           fsr1l	equ	0xFE1
  6568                           
  6569                           	psect	cstackCOMRAM
  6570  000001                     __pcstackCOMRAM:
  6571                           	opt stack 0
  6572  000001                     ??_USBStdGetDscHandler:
  6573  000001                     ??_USBStdGetStatusHandler:
  6574  000001                     ??i2__i2c_wait_idle:
  6575  000001                     ?i2_USBTransferOnePacket:
  6576                           	opt stack 0
  6577  000001                     ?i2_ExternalFlash_MediaInitialize:
  6578                           	opt stack 0
  6579  000001                     USBConfigureEndpoint@direction:
  6580                           	opt stack 0
  6581  000001                     USBCtrlTrfTxService@byteToSend:
  6582                           	opt stack 0
  6583  000001                     USBCtrlTrfRxService@i:
  6584                           	opt stack 0
  6585  000001                     i2USBTransferOnePacket@dir:
  6586                           	opt stack 0
  6587  000001                     i2USBStallEndpoint@dir:
  6588                           	opt stack 0
  6589  000001                     i2__i2c_send@dat:
  6590                           	opt stack 0
  6591  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6592                           	opt stack 0
  6593  000001                     i2ExternalFlash_MediaInitialize@config:
  6594                           	opt stack 0
  6595  000001                     i2ExternalFlash_MediaDetect@config:
  6596                           	opt stack 0
  6597  000001                     i2memcpy@d1:
  6598                           	opt stack 0
  6599  000001                     i2memset@p1:
  6600                           	opt stack 0
  6601                           
  6602                           ; 2 bytes @ 0x0
  6603  000001                     	ds	1
  6604  000002                     ??_USBConfigureEndpoint:
  6605  000002                     ??i2_USBStallEndpoint:
  6606  000002                     USBCtrlTrfRxService@byteToRead:
  6607                           	opt stack 0
  6608  000002                     USBCtrlTrfInHandler@lastDTS:
  6609                           	opt stack 0
  6610  000002                     USBStdGetStatusHandler@p:
  6611                           	opt stack 0
  6612  000002                     i2USBTransferOnePacket@data:
  6613                           	opt stack 0
  6614                           
  6615                           ; 2 bytes @ 0x1
  6616  000002                     	ds	1
  6617  000003                     i2SYSTEM_Initialize@pll_startup_counter_3143:
  6618                           	opt stack 0
  6619  000003                     i2memcpy@s1:
  6620                           	opt stack 0
  6621  000003                     i2memset@c:
  6622                           	opt stack 0
  6623                           
  6624                           ; 2 bytes @ 0x2
  6625  000003                     	ds	1
  6626  000004                     i2USBTransferOnePacket@len:
  6627                           	opt stack 0
  6628                           
  6629                           ; 1 bytes @ 0x3
  6630  000004                     	ds	1
  6631  000005                     ??i2_USBTransferOnePacket:
  6632  000005                     i2SYSTEM_Initialize@state:
  6633                           	opt stack 0
  6634  000005                     i2memcpy@n:
  6635                           	opt stack 0
  6636  000005                     i2memset@n:
  6637                           	opt stack 0
  6638                           
  6639                           ; 2 bytes @ 0x4
  6640  000005                     	ds	1
  6641  000006                     USBConfigureEndpoint@EPNum:
  6642                           	opt stack 0
  6643  000006                     i2USBStallEndpoint@ep:
  6644                           	opt stack 0
  6645  000006                     i2__i2c_eeprom_busy@busy:
  6646                           	opt stack 0
  6647  000006                     i2__i2c_write@data:
  6648                           	opt stack 0
  6649                           
  6650                           ; 2 bytes @ 0x5
  6651  000006                     	ds	1
  6652  000007                     USBConfigureEndpoint@handle:
  6653                           	opt stack 0
  6654  000007                     i2USBStallEndpoint@p:
  6655                           	opt stack 0
  6656  000007                     i2memcpy@d:
  6657                           	opt stack 0
  6658  000007                     i2memset@p:
  6659                           	opt stack 0
  6660                           
  6661                           ; 2 bytes @ 0x6
  6662  000007                     	ds	1
  6663  000008                     i2__i2c_write@length:
  6664                           	opt stack 0
  6665                           
  6666                           ; 1 bytes @ 0x7
  6667  000008                     	ds	1
  6668  000009                     USBEnableEndpoint@options:
  6669                           	opt stack 0
  6670  000009                     i2USBDeviceInit@i:
  6671                           	opt stack 0
  6672  000009                     i2USBTransferOnePacket@ep:
  6673                           	opt stack 0
  6674  000009                     i2__i2c_write@slave_address:
  6675                           	opt stack 0
  6676  000009                     i2memcpy@s:
  6677                           	opt stack 0
  6678                           
  6679                           ; 2 bytes @ 0x8
  6680  000009                     	ds	1
  6681  00000A                     i2__i2c_write@cntr:
  6682                           	opt stack 0
  6683  00000A                     USBEnableEndpoint@p:
  6684                           	opt stack 0
  6685  00000A                     i2USBTransferOnePacket@handle:
  6686                           	opt stack 0
  6687                           
  6688                           ; 2 bytes @ 0x9
  6689  00000A                     	ds	1
  6690  00000B                     i2memcpy@tmp:
  6691                           	opt stack 0
  6692  00000B                     i2c_eeprom_write@address:
  6693                           	opt stack 0
  6694                           
  6695                           ; 2 bytes @ 0xA
  6696  00000B                     	ds	1
  6697  00000C                     ??_USBMSDInit:
  6698  00000C                     USBEnableEndpoint@ep:
  6699                           	opt stack 0
  6700  00000C                     _USBCheckMSDRequest$2534:
  6701                           	opt stack 0
  6702  00000C                     MSDTransferTerminated@handle:
  6703                           	opt stack 0
  6704                           
  6705                           ; 2 bytes @ 0xB
  6706  00000C                     	ds	1
  6707  00000D                     i2c_eeprom_write@data:
  6708                           	opt stack 0
  6709                           
  6710                           ; 2 bytes @ 0xC
  6711  00000D                     	ds	1
  6712  00000E                     _USBCheckMSDRequest$2535:
  6713                           	opt stack 0
  6714  00000E                     _MSDTransferTerminated$2623:
  6715                           	opt stack 0
  6716                           
  6717                           ; 2 bytes @ 0xD
  6718  00000E                     	ds	1
  6719  00000F                     i2c_eeprom_write@length:
  6720                           	opt stack 0
  6721                           
  6722                           ; 1 bytes @ 0xE
  6723  00000F                     	ds	1
  6724  000010                     ??_i2c_eeprom_write:
  6725  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6726                           	opt stack 0
  6727                           
  6728                           ; 2 bytes @ 0xF
  6729  000010                     	ds	2
  6730  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6731                           	opt stack 0
  6732                           
  6733                           ; 2 bytes @ 0x11
  6734  000012                     	ds	1
  6735  000013                     i2c_eeprom_write@dat:
  6736                           	opt stack 0
  6737                           
  6738                           ; 17 bytes @ 0x12
  6739  000013                     	ds	1
  6740  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6741                           	opt stack 0
  6742                           
  6743                           ; 2 bytes @ 0x13
  6744  000014                     	ds	2
  6745  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6746                           
  6747                           ; 1 bytes @ 0x15
  6748  000016                     	ds	2
  6749  000018                     ??_USBStdFeatureReqHandler:
  6750  000018                     USBStdSetCfgHandler@i:
  6751                           	opt stack 0
  6752                           
  6753                           ; 1 bytes @ 0x17
  6754  000018                     	ds	1
  6755  000019                     USBStdFeatureReqHandler@pUEP:
  6756                           	opt stack 0
  6757                           
  6758                           ; 2 bytes @ 0x18
  6759  000019                     	ds	2
  6760  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6761                           	opt stack 0
  6762                           
  6763                           ; 1 bytes @ 0x1A
  6764  00001B                     	ds	1
  6765  00001C                     USBStdFeatureReqHandler@p:
  6766                           	opt stack 0
  6767                           
  6768                           ; 2 bytes @ 0x1B
  6769  00001C                     	ds	2
  6770  00001E                     ??_USBCtrlEPService:
  6771  00001E                     
  6772                           ; 1 bytes @ 0x1D
  6773  00001E                     	ds	1
  6774  00001F                     USBDeviceTasks@i:
  6775                           	opt stack 0
  6776                           
  6777                           ; 1 bytes @ 0x1E
  6778  00001F                     	ds	5
  6779  000024                     i2c_eeprom_write@slave_address:
  6780                           	opt stack 0
  6781                           
  6782                           ; 1 bytes @ 0x23
  6783  000024                     	ds	1
  6784  000025                     i2c_eeprom_write@cntr:
  6785                           	opt stack 0
  6786                           
  6787                           ; 1 bytes @ 0x24
  6788  000025                     	ds	1
  6789  000026                     i2c_eeprom_save_position@buffer:
  6790                           	opt stack 0
  6791                           
  6792                           ; 11 bytes @ 0x25
  6793  000026                     	ds	11
  6794  000031                     ??_motor_isr:
  6795                           
  6796                           ; 1 bytes @ 0x30
  6797  000031                     	ds	16
  6798  000041                     motor_isr@steps_until_standstill:
  6799                           	opt stack 0
  6800                           
  6801                           ; 2 bytes @ 0x40
  6802  000041                     	ds	2
  6803  000043                     motor_isr@steps_until_standstill_if_accelerate:
  6804                           	opt stack 0
  6805                           
  6806                           ; 2 bytes @ 0x42
  6807  000043                     	ds	2
  6808  000045                     motor_isr@steps_remaining:
  6809                           	opt stack 0
  6810                           
  6811                           ; 4 bytes @ 0x44
  6812  000045                     	ds	4
  6813  000049                     ??_SYS_InterruptHigh:
  6814                           
  6815                           ; 1 bytes @ 0x48
  6816  000049                     	ds	14
  6817                           tblptru	equ	0xFF8
  6818                           tblptrh	equ	0xFF7
  6819                           tblptrl	equ	0xFF6
  6820                           tablat	equ	0xFF5
  6821                           postinc0	equ	0xFEE
  6822                           wreg	equ	0xFE8
  6823                           postdec1	equ	0xFE5
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           
  6827 ;;
  6828 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6829 ;;
  6830 ;; *************** function _main *****************
  6831 ;; Defined at:
  6832 ;;		line 49 in file "main.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;		None
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  startup_time    1  158[BANK0 ] unsigned char 
  6837 ;; Return value:  Size  Location     Type
  6838 ;;                  1    wreg      void 
  6839 ;; Registers used:
  6840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6841 ;; Tracked objects:
  6842 ;;		On entry : 0/0
  6843 ;;		On exit  : 0/0
  6844 ;;		Unchanged: 0/0
  6845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;Total ram usage:        1 bytes
  6851 ;; Hardware stack levels required when called:   22
  6852 ;; This function calls:
  6853 ;;		_APP_DeviceCustomHIDTasks
  6854 ;;		_APP_DeviceMSDTasks
  6855 ;;		_SYSTEM_Initialize
  6856 ;;		_USBDeviceAttach
  6857 ;;		_USBDeviceInit
  6858 ;;		_adc_read_temperature
  6859 ;;		_display_prepare
  6860 ;;		_display_update
  6861 ;;		_encoder_statemachine
  6862 ;;		_motor_calculate_position_in_degrees
  6863 ;;		_motor_process_cue
  6864 ;;		_system_init
  6865 ;; This function is called by:
  6866 ;;		Startup code after reset
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text0
  6871  013B42                     __ptext0:
  6872                           	opt stack 0
  6873  013B42                     _main:
  6874                           	opt stack 9
  6875                           
  6876                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6877                           
  6878                           ;incstack = 0
  6879  013B42  ECF8  F07C         	call	_system_init	;wreg free
  6880                           
  6881                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6882  013B46  0E00               	movlw	0
  6883  013B48  ECB1  F0A6         	call	_SYSTEM_Initialize
  6884                           
  6885                           ;main.c: 59: USBDeviceInit();
  6886  013B4C  ECB2  F07F         	call	_USBDeviceInit	;wreg free
  6887                           
  6888                           ;main.c: 60: USBDeviceAttach();
  6889  013B50  EC61  F0AD         	call	_USBDeviceAttach	;wreg free
  6890                           
  6891                           ;main.c: 63: startup_timer = 150;
  6892  013B54  0E96               	movlw	150
  6893  013B56  0100               	movlb	0	; () banked
  6894  013B58  6FFE               	movwf	main@startup_timer& (0+255),b
  6895                           
  6896                           ;main.c: 64: while(startup_timer)
  6897  013B5A  D00D               	goto	l863
  6898  013B5C                     
  6899                           ; BSR set to: 0
  6900                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6901                           
  6902                           ; BSR set to: 0
  6903  013B5C  EC18  F0B0         	call	_APP_DeviceMSDTasks	;wreg free
  6904                           
  6905                           ;main.c: 69: if(!os.done)
  6906  013B60  0101               	movlb	1	; () banked
  6907  013B62  5167               	movf	(_os+2)& (0+255),w,b	;volatile
  6908  013B64  A4D8               	btfss	status,2,c
  6909  013B66  D007               	goto	l863
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6913  013B68  EC2B  F09B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6914                           
  6915                           ;main.c: 74: --startup_timer;
  6916  013B6C  0100               	movlb	0	; () banked
  6917  013B6E  07FE               	decf	main@startup_timer& (0+255),f,b
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;main.c: 75: os.done = 1;
  6921  013B70  0E01               	movlw	1
  6922  013B72  0101               	movlb	1	; () banked
  6923  013B74  6F67               	movwf	(_os+2)& (0+255),b	;volatile
  6924  013B76                     l863:
  6925                           
  6926                           ; BSR set to: 1
  6927                           
  6928                           ; BSR set to: 1
  6929  013B76  0100               	movlb	0	; () banked
  6930  013B78  51FE               	movf	main@startup_timer& (0+255),w,b
  6931  013B7A  A4D8               	btfss	status,2,c
  6932  013B7C  D7EF               	goto	l862
  6933  013B7E                     u19460:
  6934                           
  6935                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6936                           
  6937                           ; BSR set to: 0
  6938                           
  6939                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6940                           
  6941                           ; BSR set to: 0
  6942  013B7E  EC18  F0B0         	call	_APP_DeviceMSDTasks	;wreg free
  6943                           
  6944                           ;main.c: 85: if(!os.done)
  6945  013B82  0101               	movlb	1	; () banked
  6946  013B84  5167               	movf	(_os+2)& (0+255),w,b	;volatile
  6947  013B86  A4D8               	btfss	status,2,c
  6948  013B88  D7FA               	goto	u19460
  6949                           
  6950                           ; BSR set to: 1
  6951  013B8A  0004               	clrwdt		;# 
  6952                           
  6953                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6954  013B8C  EC2B  F09B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6955                           
  6956                           ;main.c: 94: encoder_statemachine();
  6957  013B90  ECE6  F057         	call	_encoder_statemachine	;wreg free
  6958                           
  6959                           ;main.c: 97: motor_process_cue();
  6960  013B94  EC23  F09C         	call	_motor_process_cue	;wreg free
  6961                           
  6962                           ;main.c: 100: adc_read_temperature();
  6963  013B98  EC55  F075         	call	_adc_read_temperature	;wreg free
  6964                           
  6965                           ;main.c: 103: switch(os.timeSlot)
  6966  013B9C  D008               	goto	l867
  6967  013B9E                     
  6968                           ;main.c: 114: motor_calculate_position_in_degrees();
  6969  013B9E  EC30  F093         	call	_motor_calculate_position_in_degrees	;wreg free
  6970  013BA2                     
  6971                           ;main.c: 117: display_prepare();
  6972  013BA2  ECA2  F051         	call	_display_prepare	;wreg free
  6973                           
  6974                           ;main.c: 118: break;
  6975  013BA6  D014               	goto	l869
  6976  013BA8                     
  6977                           ;main.c: 121: display_update();
  6978  013BA8  ECA6  F0AC         	call	_display_update	;wreg free
  6979                           
  6980                           ;main.c: 123: }
  6981                           
  6982                           ;main.c: 122: break;
  6983  013BAC  D011               	goto	l869
  6984  013BAE                     l867:
  6985  013BAE  0101               	movlb	1	; () banked
  6986  013BB0  5166               	movf	(_os+1)& (0+255),w,b	;volatile
  6987                           
  6988                           ; Switch size 1, requested type "space"
  6989                           ; Number of cases is 5, Range of values is 0 to 7
  6990                           ; switch strategies available:
  6991                           ; Name         Instructions Cycles
  6992                           ; simple_byte           16     9 (average)
  6993                           ;	Chosen strategy is simple_byte
  6994  013BB2  0A00               	xorlw	0	; case 0
  6995  013BB4  B4D8               	btfsc	status,2,c
  6996  013BB6  D00C               	goto	l869
  6997  013BB8  0A01               	xorlw	1	; case 1
  6998  013BBA  B4D8               	btfsc	status,2,c
  6999  013BBC  D009               	goto	l869
  7000  013BBE  0A04               	xorlw	4	; case 5
  7001  013BC0  B4D8               	btfsc	status,2,c
  7002  013BC2  D7ED               	goto	l871
  7003  013BC4  0A03               	xorlw	3	; case 6
  7004  013BC6  B4D8               	btfsc	status,2,c
  7005  013BC8  D7EC               	goto	l872
  7006  013BCA  0A01               	xorlw	1	; case 7
  7007  013BCC  B4D8               	btfsc	status,2,c
  7008  013BCE  D7EC               	goto	l873
  7009  013BD0                     l869:
  7010                           
  7011                           ;main.c: 125: os.done = 1;
  7012                           
  7013                           ; BSR set to: 1
  7014  013BD0  0E01               	movlw	1
  7015  013BD2  0101               	movlb	1	; () banked
  7016  013BD4  6F67               	movwf	(_os+2)& (0+255),b	;volatile
  7017                           
  7018                           ; BSR set to: 1
  7019                           
  7020                           ; BSR set to: 1
  7021  013BD6  D7D3               	goto	u19460
  7022  013BD8                     __end_of_main:
  7023                           	opt stack 0
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           postinc0	equ	0xFEE
  7029                           wreg	equ	0xFE8
  7030                           postdec1	equ	0xFE5
  7031                           fsr1h	equ	0xFE2
  7032                           fsr1l	equ	0xFE1
  7033                           status	equ	0xFD8
  7034                           
  7035 ;; *************** function _system_init *****************
  7036 ;; Defined at:
  7037 ;;		line 177 in file "os.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;		None
  7040 ;; Auto vars:     Size  Location     Type
  7041 ;;		None
  7042 ;; Return value:  Size  Location     Type
  7043 ;;                  1    wreg      void 
  7044 ;; Registers used:
  7045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7046 ;; Tracked objects:
  7047 ;;		On entry : 0/0
  7048 ;;		On exit  : 0/0
  7049 ;;		Unchanged: 0/0
  7050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7054 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7055 ;;Total ram usage:        1 bytes
  7056 ;; Hardware stack levels used:    1
  7057 ;; Hardware stack levels required when called:   20
  7058 ;; This function calls:
  7059 ;;		__backlight_init
  7060 ;;		__system_pin_setup
  7061 ;;		__system_timer0_init
  7062 ;;		_adc_init
  7063 ;;		_configFile_read
  7064 ;;		_configFile_readDefault
  7065 ;;		_configFile_write
  7066 ;;		_display_init
  7067 ;;		_display_update
  7068 ;;		_encoder_init
  7069 ;;		_fat_init
  7070 ;;		_flash_init
  7071 ;;		_i2c_eeprom_recover_position
  7072 ;;		_i2c_init
  7073 ;;		_motor_calculate_position_in_degrees
  7074 ;;		_motor_init
  7075 ;; This function is called by:
  7076 ;;		_main
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text1
  7081  00F9F0                     __ptext1:
  7082                           	opt stack 0
  7083  00F9F0                     _system_init:
  7084                           	opt stack 10
  7085                           
  7086                           ;os.c: 180: _system_pin_setup();
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;incstack = 0
  7090  00F9F0  EC6B  F0A4         	call	__system_pin_setup	;wreg free
  7091                           
  7092                           ;os.c: 183: adc_init();
  7093  00F9F4  EC64  F0A7         	call	_adc_init	;wreg free
  7094                           
  7095                           ;os.c: 186: flash_init();
  7096  00F9F8  EC39  F0B0         	call	_flash_init	;wreg free
  7097                           
  7098                           ;os.c: 189: fat_init();
  7099  00F9FC  EC21  F0B0         	call	_fat_init	;wreg free
  7100                           
  7101                           ;os.c: 192: encoder_init();
  7102  00FA00  EC17  F0AF         	call	_encoder_init	;wreg free
  7103                           
  7104                           ;os.c: 195: i2c_init();
  7105  00FA04  ECC2  F0AF         	call	_i2c_init	;wreg free
  7106                           
  7107                           ;os.c: 198: display_init();
  7108  00FA08  EC50  F0AC         	call	_display_init	;wreg free
  7109                           
  7110                           ;os.c: 199: display_update();
  7111  00FA0C  ECA6  F0AC         	call	_display_update	;wreg free
  7112                           
  7113                           ;os.c: 200: _backlight_init();
  7114  00FA10  EC90  F0B0         	call	__backlight_init	;wreg free
  7115                           
  7116                           ;os.c: 203: motor_init();
  7117  00FA14  ECB3  F0AF         	call	_motor_init	;wreg free
  7118                           
  7119                           ;os.c: 206: configFile_readDefault();
  7120  00FA18  ECA9  F0A2         	call	_configFile_readDefault	;wreg free
  7121                           
  7122                           ;os.c: 209: configFile_read();
  7123  00FA1C  ECCA  F079         	call	_configFile_read	;wreg free
  7124                           
  7125                           ;os.c: 212: configFile_write();
  7126  00FA20  ECEC  F060         	call	_configFile_write	;wreg free
  7127                           
  7128                           ;os.c: 215: os.subTimeSlot = 0;
  7129  00FA24  0E00               	movlw	0
  7130  00FA26  0101               	movlb	1	; () banked
  7131  00FA28  6F65               	movwf	_os& (0+255),b	;volatile
  7132                           
  7133                           ; BSR set to: 1
  7134                           ;os.c: 216: os.timeSlot = 0;
  7135  00FA2A  0E00               	movlw	0
  7136  00FA2C  6F66               	movwf	(_os+1)& (0+255),b	;volatile
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;os.c: 217: os.done = 0;
  7140  00FA2E  0E00               	movlw	0
  7141  00FA30  6F67               	movwf	(_os+2)& (0+255),b	;volatile
  7142                           
  7143                           ; BSR set to: 1
  7144                           ;os.c: 218: os.encoder1Count = 0;
  7145  00FA32  0E00               	movlw	0
  7146  00FA34  6F68               	movwf	(_os+3)& (0+255),b	;volatile
  7147                           
  7148                           ; BSR set to: 1
  7149                           ;os.c: 219: os.button1 = 0;
  7150  00FA36  0E00               	movlw	0
  7151  00FA38  6F69               	movwf	(_os+4)& (0+255),b	;volatile
  7152                           
  7153                           ; BSR set to: 1
  7154                           ;os.c: 220: os.encoder2Count = 0;
  7155  00FA3A  0E00               	movlw	0
  7156  00FA3C  6F6A               	movwf	(_os+5)& (0+255),b	;volatile
  7157                           
  7158                           ; BSR set to: 1
  7159                           ;os.c: 221: os.button2 = 0;
  7160  00FA3E  0E00               	movlw	0
  7161  00FA40  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
  7162                           
  7163                           ; BSR set to: 1
  7164                           ;os.c: 222: os.current_position_in_steps = 0;
  7165  00FA42  0E00               	movlw	0
  7166  00FA44  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
  7167  00FA46  0E00               	movlw	0
  7168  00FA48  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
  7169  00FA4A  0E00               	movlw	0
  7170  00FA4C  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
  7171  00FA4E  0E00               	movlw	0
  7172  00FA50  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
  7173                           
  7174                           ; BSR set to: 1
  7175                           ;os.c: 223: os.absolute_position = 0;
  7176  00FA52  0E00               	movlw	0
  7177  00FA54  6F71               	movwf	(_os+12)& (0+255),b	;volatile
  7178  00FA56  0E00               	movlw	0
  7179  00FA58  6F70               	movwf	(_os+11)& (0+255),b	;volatile
  7180                           
  7181                           ; BSR set to: 1
  7182                           ;os.c: 224: os.current_position_in_degrees = 0;
  7183  00FA5A  0E00               	movlw	0
  7184  00FA5C  6F73               	movwf	(_os+14)& (0+255),b	;volatile
  7185  00FA5E  0E00               	movlw	0
  7186  00FA60  6F72               	movwf	(_os+13)& (0+255),b	;volatile
  7187                           
  7188                           ; BSR set to: 1
  7189                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7190  00FA62  0E01               	movlw	1
  7191  00FA64  6F74               	movwf	(_os+15)& (0+255),b	;volatile
  7192                           
  7193                           ; BSR set to: 1
  7194                           ;os.c: 226: os.busy = 0;
  7195  00FA66  0E00               	movlw	0
  7196  00FA68  6F75               	movwf	(_os+16)& (0+255),b	;volatile
  7197                           
  7198                           ; BSR set to: 1
  7199                           ;os.c: 227: os.setup_step_size = 0;
  7200  00FA6A  0E00               	movlw	0
  7201  00FA6C  6F77               	movwf	(_os+18)& (0+255),b	;volatile
  7202  00FA6E  0E00               	movlw	0
  7203  00FA70  6F76               	movwf	(_os+17)& (0+255),b	;volatile
  7204                           
  7205                           ; BSR set to: 1
  7206                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  7207  00FA72  0E01               	movlw	1
  7208  00FA74  6F78               	movwf	(_os+19)& (0+255),b	;volatile
  7209                           
  7210                           ; BSR set to: 1
  7211                           ;os.c: 229: os.division = 36;
  7212  00FA76  0E00               	movlw	0
  7213  00FA78  6F7A               	movwf	(_os+21)& (0+255),b	;volatile
  7214  00FA7A  0E24               	movlw	36
  7215  00FA7C  6F79               	movwf	(_os+20)& (0+255),b	;volatile
  7216                           
  7217                           ; BSR set to: 1
  7218                           ;os.c: 230: os.divide_step_size = 10;
  7219  00FA7E  0E0A               	movlw	10
  7220  00FA80  6F7B               	movwf	(_os+22)& (0+255),b	;volatile
  7221                           
  7222                           ; BSR set to: 1
  7223                           ;os.c: 231: os.divide_position = 0;
  7224  00FA82  0E00               	movlw	0
  7225  00FA84  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
  7226  00FA86  0E00               	movlw	0
  7227  00FA88  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
  7228                           
  7229                           ; BSR set to: 1
  7230                           ;os.c: 232: os.divide_jump_size = 1;
  7231  00FA8A  0E00               	movlw	0
  7232  00FA8C  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
  7233  00FA8E  0E01               	movlw	1
  7234  00FA90  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
  7235                           
  7236                           ; BSR set to: 1
  7237                           ;os.c: 233: os.arc_step_size = 1000;
  7238  00FA92  0E03               	movlw	3
  7239  00FA94  6F81               	movwf	(_os+28)& (0+255),b	;volatile
  7240  00FA96  0EE8               	movlw	232
  7241  00FA98  6F80               	movwf	(_os+27)& (0+255),b	;volatile
  7242                           
  7243                           ; BSR set to: 1
  7244                           ;os.c: 234: os.arc_size = 1000;
  7245  00FA9A  0EE8               	movlw	232
  7246  00FA9C  6F82               	movwf	(_os+29)& (0+255),b	;volatile
  7247  00FA9E  0E03               	movlw	3
  7248  00FAA0  6F83               	movwf	(_os+30)& (0+255),b	;volatile
  7249  00FAA2  0E00               	movlw	0
  7250  00FAA4  6F84               	movwf	(_os+31)& (0+255),b	;volatile
  7251  00FAA6  0E00               	movlw	0
  7252  00FAA8  6F85               	movwf	(_os+32)& (0+255),b	;volatile
  7253                           
  7254                           ; BSR set to: 1
  7255                           ;os.c: 235: os.arc_speed = config.initial_speed_arc;
  7256  00FAAA  C1A3  F186         	movff	_config+13,_os+33	;volatile
  7257  00FAAE  C1A4  F187         	movff	_config+14,_os+34	;volatile
  7258                           
  7259                           ; BSR set to: 1
  7260                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  7261  00FAB2  0E01               	movlw	1
  7262  00FAB4  6F88               	movwf	(_os+35)& (0+255),b	;volatile
  7263                           
  7264                           ; BSR set to: 1
  7265                           ;os.c: 237: os.manual_speed = config.initial_speed_manual;
  7266  00FAB6  C1A7  F189         	movff	_config+17,_os+36	;volatile
  7267  00FABA  C1A8  F18A         	movff	_config+18,_os+37	;volatile
  7268                           
  7269                           ; BSR set to: 1
  7270                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  7271  00FABE  0E01               	movlw	1
  7272  00FAC0  6F8B               	movwf	(_os+38)& (0+255),b	;volatile
  7273                           
  7274                           ; BSR set to: 1
  7275                           ;os.c: 239: os.beep_count = 0;
  7276  00FAC2  0E00               	movlw	0
  7277  00FAC4  6F8C               	movwf	(_os+39)& (0+255),b	;volatile
  7278                           
  7279                           ; BSR set to: 1
  7280                           ;os.c: 240: os.temperature[0] = 0;
  7281  00FAC6  0E00               	movlw	0
  7282  00FAC8  6F8E               	movwf	(_os+41)& (0+255),b	;volatile
  7283  00FACA  0E00               	movlw	0
  7284  00FACC  6F8D               	movwf	(_os+40)& (0+255),b	;volatile
  7285                           
  7286                           ; BSR set to: 1
  7287                           ;os.c: 241: os.temperature[1] = 0;
  7288  00FACE  0E00               	movlw	0
  7289  00FAD0  6F90               	movwf	(_os+43)& (0+255),b	;volatile
  7290  00FAD2  0E00               	movlw	0
  7291  00FAD4  6F8F               	movwf	(_os+42)& (0+255),b	;volatile
  7292                           
  7293                           ; BSR set to: 1
  7294                           ;os.c: 242: os.external_temperature_adc_sum = 0;
  7295  00FAD6  0E00               	movlw	0
  7296  00FAD8  6F92               	movwf	(_os+45)& (0+255),b	;volatile
  7297  00FADA  0E00               	movlw	0
  7298  00FADC  6F91               	movwf	(_os+44)& (0+255),b	;volatile
  7299                           
  7300                           ; BSR set to: 1
  7301                           ;os.c: 243: os.external_temperature_count = 0;
  7302  00FADE  0E00               	movlw	0
  7303  00FAE0  6F93               	movwf	(_os+46)& (0+255),b	;volatile
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;os.c: 244: os.fan_on = 0;
  7307  00FAE2  0E00               	movlw	0
  7308  00FAE4  6F94               	movwf	(_os+47)& (0+255),b	;volatile
  7309                           
  7310                           ; BSR set to: 1
  7311                           ;os.c: 245: os.brake_on = 0;
  7312  00FAE6  0E00               	movlw	0
  7313  00FAE8  6F95               	movwf	(_os+48)& (0+255),b	;volatile
  7314                           
  7315                           ; BSR set to: 1
  7316                           ;os.c: 248: i2c_eeprom_recover_position();
  7317  00FAEA  ECBD  F09C         	call	_i2c_eeprom_recover_position	;wreg free
  7318                           
  7319                           ;os.c: 249: if(os.current_position_in_steps>config.full_circle_in_steps)
  7320  00FAEE  0101               	movlb	1	; () banked
  7321  00FAF0  516C               	movf	(_os+7)& (0+255),w,b	;volatile
  7322  00FAF2  5D96               	subwf	_config& (0+255),w,b
  7323  00FAF4  516D               	movf	(_os+8)& (0+255),w,b	;volatile
  7324  00FAF6  5997               	subwfb	(_config+1)& (0+255),w,b
  7325  00FAF8  516E               	movf	(_os+9)& (0+255),w,b	;volatile
  7326  00FAFA  5998               	subwfb	(_config+2)& (0+255),w,b
  7327  00FAFC  516F               	movf	(_os+10)& (0+255),w,b	;volatile
  7328  00FAFE  5999               	subwfb	(_config+3)& (0+255),w,b
  7329  00FB00  B0D8               	btfsc	status,0,c
  7330  00FB02  D00C               	goto	l1082
  7331                           
  7332                           ; BSR set to: 1
  7333                           ;os.c: 250: {;os.c: 251: os.current_position_in_steps = 0;
  7334  00FB04  0E00               	movlw	0
  7335  00FB06  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
  7336  00FB08  0E00               	movlw	0
  7337  00FB0A  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
  7338  00FB0C  0E00               	movlw	0
  7339  00FB0E  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
  7340  00FB10  0E00               	movlw	0
  7341  00FB12  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
  7342                           
  7343                           ;os.c: 252: os.absolute_position = 0;
  7344  00FB14  0E00               	movlw	0
  7345  00FB16  6F71               	movwf	(_os+12)& (0+255),b	;volatile
  7346  00FB18  0E00               	movlw	0
  7347  00FB1A  6F70               	movwf	(_os+11)& (0+255),b	;volatile
  7348  00FB1C                     l1082:
  7349                           
  7350                           ; BSR set to: 1
  7351                           ;os.c: 253: };os.c: 254: motor_calculate_position_in_degrees();
  7352                           
  7353                           ; BSR set to: 1
  7354  00FB1C  EC30  F093         	call	_motor_calculate_position_in_degrees	;wreg free
  7355                           
  7356                           ;os.c: 255: if(os.division>3600 || os.divide_position>=os.division)
  7357  00FB20  0101               	movlb	1	; () banked
  7358  00FB22  BF7A               	btfsc	(_os+21)& (0+255),7,b	;volatile
  7359  00FB24  D006               	goto	u17760
  7360  00FB26  0E11               	movlw	17
  7361  00FB28  5D79               	subwf	(_os+20)& (0+255),w,b	;volatile
  7362  00FB2A  0E0E               	movlw	14
  7363  00FB2C  597A               	subwfb	(_os+21)& (0+255),w,b	;volatile
  7364  00FB2E  B0D8               	btfsc	status,0,c
  7365  00FB30  D00D               	goto	u17770
  7366  00FB32                     u17760:
  7367                           
  7368                           ; BSR set to: 1
  7369  00FB32  5179               	movf	(_os+20)& (0+255),w,b	;volatile
  7370  00FB34  5D7C               	subwf	(_os+23)& (0+255),w,b	;volatile
  7371  00FB36  517D               	movf	(_os+24)& (0+255),w,b	;volatile
  7372  00FB38  0A80               	xorlw	128
  7373  00FB3A  0100               	movlb	0	; () banked
  7374  00FB3C  6FFD               	movwf	??_system_init& (0+255),b
  7375  00FB3E  0101               	movlb	1	; () banked
  7376  00FB40  517A               	movf	(_os+21)& (0+255),w,b	;volatile
  7377  00FB42  0A80               	xorlw	128
  7378  00FB44  0100               	movlb	0	; () banked
  7379  00FB46  59FD               	subwfb	??_system_init& (0+255),w,b
  7380  00FB48  A0D8               	btfss	status,0,c
  7381  00FB4A  D009               	goto	l1083
  7382  00FB4C                     u17770:
  7383                           
  7384                           ;os.c: 256: {;os.c: 257: os.division = 36;
  7385                           
  7386                           ; BSR set to: 0
  7387  00FB4C  0E00               	movlw	0
  7388  00FB4E  0101               	movlb	1	; () banked
  7389  00FB50  6F7A               	movwf	(_os+21)& (0+255),b	;volatile
  7390  00FB52  0E24               	movlw	36
  7391  00FB54  6F79               	movwf	(_os+20)& (0+255),b	;volatile
  7392                           
  7393                           ;os.c: 258: os.divide_position = 0;
  7394  00FB56  0E00               	movlw	0
  7395  00FB58  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
  7396  00FB5A  0E00               	movlw	0
  7397  00FB5C  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
  7398  00FB5E                     l1083:
  7399                           
  7400                           ;os.c: 259: };os.c: 262: _system_timer0_init();
  7401                           
  7402                           ; BSR set to: 1
  7403  00FB5E  EC36  F0AE         	call	__system_timer0_init	;wreg free
  7404  00FB62  0012               	return		;funcret
  7405  00FB64                     __end_of_system_init:
  7406                           	opt stack 0
  7407                           tblptru	equ	0xFF8
  7408                           tblptrh	equ	0xFF7
  7409                           tblptrl	equ	0xFF6
  7410                           tablat	equ	0xFF5
  7411                           postinc0	equ	0xFEE
  7412                           wreg	equ	0xFE8
  7413                           postdec1	equ	0xFE5
  7414                           fsr1h	equ	0xFE2
  7415                           fsr1l	equ	0xFE1
  7416                           status	equ	0xFD8
  7417                           
  7418 ;; *************** function _motor_init *****************
  7419 ;; Defined at:
  7420 ;;		line 646 in file "motor.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;		None
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;Total ram usage:        0 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:   10
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_system_init
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text2
  7449  015F66                     __ptext2:
  7450                           	opt stack 0
  7451  015F66                     _motor_init:
  7452                           	opt stack 19
  7453                           
  7454                           ;motor.c: 649: motor_cue_read_index = 0;
  7455                           
  7456                           ;incstack = 0
  7457  015F66  0E00               	movlw	0
  7458  015F68  0101               	movlb	1	; () banked
  7459  015F6A  6F4D               	movwf	_motor_cue_read_index& (0+255),b
  7460                           
  7461                           ;motor.c: 650: motor_cue_write_index = 0;
  7462  015F6C  0E00               	movlw	0
  7463  015F6E  6F4C               	movwf	_motor_cue_write_index& (0+255),b
  7464                           
  7465                           ; BSR set to: 1
  7466                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7467  015F70  010F               	movlb	15	; () banked
  7468  015F72  9752               	bcf	82,3,b	;volatile
  7469  015F74  9952               	bcf	82,4,b	;volatile
  7470  015F76  9B52               	bcf	82,5,b	;volatile
  7471                           
  7472                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7473  015F78  0E3F               	movlw	-193
  7474  015F7A  16BA               	andwf	4026,f,c	;volatile
  7475                           
  7476                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7477  015F7C  0ECF               	movlw	-49
  7478  015F7E  16BA               	andwf	4026,f,c	;volatile
  7479                           
  7480                           ; BSR set to: 15
  7481                           ;motor.c: 667: LATBbits.LB0 = 0;
  7482  015F80  908A               	bcf	3978,0,c	;volatile
  7483                           
  7484                           ; BSR set to: 15
  7485  015F82  0012               	return		;funcret
  7486  015F84                     __end_of_motor_init:
  7487                           	opt stack 0
  7488                           tblptru	equ	0xFF8
  7489                           tblptrh	equ	0xFF7
  7490                           tblptrl	equ	0xFF6
  7491                           tablat	equ	0xFF5
  7492                           postinc0	equ	0xFEE
  7493                           wreg	equ	0xFE8
  7494                           postdec1	equ	0xFE5
  7495                           fsr1h	equ	0xFE2
  7496                           fsr1l	equ	0xFE1
  7497                           status	equ	0xFD8
  7498                           
  7499 ;; *************** function _motor_calculate_position_in_degrees *****************
  7500 ;; Defined at:
  7501 ;;		line 548 in file "motor.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;		None
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;  tmp             4   49[BANK0 ] float 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7516 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;Total ram usage:        4 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:   11
  7522 ;; This function calls:
  7523 ;;		___fldiv
  7524 ;;		___flmul
  7525 ;;		___fltol
  7526 ;;		___xxtofl
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;;		_system_init
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text3
  7534  012660                     __ptext3:
  7535                           	opt stack 0
  7536  012660                     _motor_calculate_position_in_degrees:
  7537                           	opt stack 18
  7538                           
  7539                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7540                           
  7541                           ; BSR set to: 15
  7542                           ;incstack = 0
  7543  012660  C16C  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7544  012664  C16D  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7545  012668  C16E  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7546  01266C  C16F  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7547  012670  0E00               	movlw	0
  7548  012672  EC42  F082         	call	___xxtofl
  7549  012676  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7550  01267A  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7551  01267E  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7552  012682  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7553                           
  7554                           ;motor.c: 553: tmp *= 36000;
  7555  012686  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7556  01268A  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7557  01268E  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7558  012692  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7559  012696  0E00               	movlw	0
  7560  012698  0100               	movlb	0	; () banked
  7561  01269A  6F7C               	movwf	___flmul@a& (0+255),b
  7562  01269C  0EA0               	movlw	160
  7563  01269E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7564  0126A0  0E0C               	movlw	12
  7565  0126A2  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7566  0126A4  0E47               	movlw	71
  7567  0126A6  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7568  0126A8  ECDB  F064         	call	___flmul	;wreg free
  7569  0126AC  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7570  0126B0  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7571  0126B4  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7572  0126B8  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7573                           
  7574                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7575  0126BC  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7576  0126C0  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7577  0126C4  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7578  0126C8  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7579  0126CC  C196  F06A         	movff	_config,___xxtofl@val
  7580  0126D0  C197  F06B         	movff	_config+1,___xxtofl@val+1
  7581  0126D4  C198  F06C         	movff	_config+2,___xxtofl@val+2
  7582  0126D8  C199  F06D         	movff	_config+3,___xxtofl@val+3
  7583  0126DC  0E00               	movlw	0
  7584  0126DE  EC42  F082         	call	___xxtofl
  7585  0126E2  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7586  0126E6  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7587  0126EA  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7588  0126EE  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7589  0126F2  EC03  F06B         	call	___fldiv	;wreg free
  7590  0126F6  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7591  0126FA  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7592  0126FE  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7593  012702  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7594                           
  7595                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7596  012706  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7597  01270A  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7598  01270E  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7599  012712  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7600  012716  EC9F  F093         	call	___fltol	;wreg free
  7601  01271A  C060  F172         	movff	?___fltol,_os+13	;volatile
  7602  01271E  C061  F173         	movff	?___fltol+1,_os+14	;volatile
  7603                           
  7604                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7605  012722  0EA0               	movlw	160
  7606  012724  0101               	movlb	1	; () banked
  7607  012726  1972               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7608  012728  E109               	bnz	l2553
  7609  01272A  0E8C               	movlw	140
  7610  01272C  1973               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7611  01272E  A4D8               	btfss	status,2,c
  7612  012730  0012               	return	
  7613                           
  7614                           ; BSR set to: 1
  7615                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7616  012732  0E00               	movlw	0
  7617  012734  6F73               	movwf	(_os+14)& (0+255),b	;volatile
  7618  012736  0E00               	movlw	0
  7619  012738  6F72               	movwf	(_os+13)& (0+255),b	;volatile
  7620  01273A  0012               	return	
  7621  01273C                     l2553:
  7622                           
  7623                           ; BSR set to: 1
  7624  01273C  0012               	return		;funcret
  7625  01273E                     __end_of_motor_calculate_position_in_degrees:
  7626                           	opt stack 0
  7627                           tblptru	equ	0xFF8
  7628                           tblptrh	equ	0xFF7
  7629                           tblptrl	equ	0xFF6
  7630                           tablat	equ	0xFF5
  7631                           postinc0	equ	0xFEE
  7632                           wreg	equ	0xFE8
  7633                           postdec1	equ	0xFE5
  7634                           fsr1h	equ	0xFE2
  7635                           fsr1l	equ	0xFE1
  7636                           status	equ	0xFD8
  7637                           
  7638 ;; *************** function _i2c_init *****************
  7639 ;; Defined at:
  7640 ;;		line 26 in file "i2c.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;		None
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7658 ;;Total ram usage:        0 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; Hardware stack levels required when called:   10
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_system_init
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text4
  7669  015F84                     __ptext4:
  7670                           	opt stack 0
  7671  015F84                     _i2c_init:
  7672                           	opt stack 19
  7673                           
  7674                           ;i2c.c: 28: TRISBbits.TRISB5 = 1;
  7675                           
  7676                           ; BSR set to: 1
  7677                           ;incstack = 0
  7678  015F84  8A93               	bsf	3987,5,c	;volatile
  7679                           
  7680                           ;i2c.c: 29: TRISBbits.TRISB4 = 1;
  7681  015F86  8893               	bsf	3987,4,c	;volatile
  7682                           
  7683                           ;i2c.c: 31: SSP1STATbits.SMP = 1;
  7684  015F88  8EC7               	bsf	4039,7,c	;volatile
  7685                           
  7686                           ;i2c.c: 32: SSP1STATbits.CKE = 0;
  7687  015F8A  9CC7               	bcf	4039,6,c	;volatile
  7688                           
  7689                           ;i2c.c: 34: SSP1ADD = 119;
  7690  015F8C  0E77               	movlw	119
  7691  015F8E  6EC8               	movwf	4040,c	;volatile
  7692                           
  7693                           ;i2c.c: 36: SSP1CON1bits.WCOL = 0;
  7694  015F90  9EC6               	bcf	4038,7,c	;volatile
  7695                           
  7696                           ;i2c.c: 37: SSP1CON1bits.SSPOV = 0;
  7697  015F92  9CC6               	bcf	4038,6,c	;volatile
  7698                           
  7699                           ;i2c.c: 38: SSP1CON1bits.SSPM = 0b1000;
  7700  015F94  50C6               	movf	4038,w,c	;volatile
  7701  015F96  0BF0               	andlw	-16
  7702  015F98  0908               	iorlw	8
  7703  015F9A  6EC6               	movwf	4038,c	;volatile
  7704                           
  7705                           ;i2c.c: 39: SSP1CON1bits.SSPEN = 1;
  7706  015F9C  8AC6               	bsf	4038,5,c	;volatile
  7707  015F9E  0012               	return		;funcret
  7708  015FA0                     __end_of_i2c_init:
  7709                           	opt stack 0
  7710                           tblptru	equ	0xFF8
  7711                           tblptrh	equ	0xFF7
  7712                           tblptrl	equ	0xFF6
  7713                           tablat	equ	0xFF5
  7714                           postinc0	equ	0xFEE
  7715                           wreg	equ	0xFE8
  7716                           postdec1	equ	0xFE5
  7717                           fsr1h	equ	0xFE2
  7718                           fsr1l	equ	0xFE1
  7719                           status	equ	0xFD8
  7720                           
  7721 ;; *************** function _i2c_eeprom_recover_position *****************
  7722 ;; Defined at:
  7723 ;;		line 316 in file "i2c.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;		None
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  buffer         11   25[BANK0 ] unsigned char [11]
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  1    wreg      void 
  7730 ;; Registers used:
  7731 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7738 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7740 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7741 ;;Total ram usage:       11 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:   13
  7744 ;; This function calls:
  7745 ;;		_i2c_eeprom_read
  7746 ;;		_memcpy
  7747 ;; This function is called by:
  7748 ;;		_system_init
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text5
  7753  01397A                     __ptext5:
  7754                           	opt stack 0
  7755  01397A                     _i2c_eeprom_recover_position:
  7756                           	opt stack 16
  7757                           
  7758                           ;i2c.c: 318: uint8_t buffer[11];;i2c.c: 324: i2c_eeprom_read(0x200, &buffer[0], 11);
  7759                           
  7760                           ;incstack = 0
  7761  01397A  0E02               	movlw	2
  7762  01397C  0100               	movlb	0	; () banked
  7763  01397E  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7764  013980  0E00               	movlw	0
  7765  013982  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7766  013984  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7767  013986  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7768  013988  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7769  01398A  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7770  01398C  0E0B               	movlw	11
  7771  01398E  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7772  013990  EC14  F0A8         	call	_i2c_eeprom_read	;wreg free
  7773                           
  7774                           ;i2c.c: 327: memcpy(&os.current_position_in_steps, &buffer[0], 4);
  7775  013994  0E6C               	movlw	low (_os+7)
  7776  013996  0100               	movlb	0	; () banked
  7777  013998  6F60               	movwf	memcpy@d1& (0+255),b
  7778  01399A  0E01               	movlw	high (_os+7)
  7779  01399C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7780  01399E  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7781  0139A0  6F62               	movwf	memcpy@s1& (0+255),b
  7782  0139A2  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7783  0139A4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7784  0139A6  0E00               	movlw	0
  7785  0139A8  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7786  0139AA  0E04               	movlw	4
  7787  0139AC  6F64               	movwf	memcpy@n& (0+255),b
  7788  0139AE  ECCA  F0A5         	call	_memcpy	;wreg free
  7789                           
  7790                           ;i2c.c: 328: memcpy(&os.absolute_position, &buffer[4], 2);
  7791  0139B2  0E70               	movlw	low (_os+11)
  7792  0139B4  0100               	movlb	0	; () banked
  7793  0139B6  6F60               	movwf	memcpy@d1& (0+255),b
  7794  0139B8  0E01               	movlw	high (_os+11)
  7795  0139BA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7796  0139BC  0E7D               	movlw	low (i2c_eeprom_recover_position@buffer+4)
  7797  0139BE  6F62               	movwf	memcpy@s1& (0+255),b
  7798  0139C0  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+4)
  7799  0139C2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7800  0139C4  0E00               	movlw	0
  7801  0139C6  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7802  0139C8  0E02               	movlw	2
  7803  0139CA  6F64               	movwf	memcpy@n& (0+255),b
  7804  0139CC  ECCA  F0A5         	call	_memcpy	;wreg free
  7805                           
  7806                           ;i2c.c: 329: os.approach_direction = buffer[6];
  7807  0139D0  C07F  F178         	movff	i2c_eeprom_recover_position@buffer+6,_os+19	;volatile
  7808                           
  7809                           ;i2c.c: 330: memcpy(&os.division, &buffer[7], 2);
  7810  0139D4  0E79               	movlw	low (_os+20)
  7811  0139D6  0100               	movlb	0	; () banked
  7812  0139D8  6F60               	movwf	memcpy@d1& (0+255),b
  7813  0139DA  0E01               	movlw	high (_os+20)
  7814  0139DC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7815  0139DE  0E80               	movlw	low (i2c_eeprom_recover_position@buffer+7)
  7816  0139E0  6F62               	movwf	memcpy@s1& (0+255),b
  7817  0139E2  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+7)
  7818  0139E4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7819  0139E6  0E00               	movlw	0
  7820  0139E8  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7821  0139EA  0E02               	movlw	2
  7822  0139EC  6F64               	movwf	memcpy@n& (0+255),b
  7823  0139EE  ECCA  F0A5         	call	_memcpy	;wreg free
  7824                           
  7825                           ;i2c.c: 331: memcpy(&os.divide_position, &buffer[9], 2);
  7826  0139F2  0E7C               	movlw	low (_os+23)
  7827  0139F4  0100               	movlb	0	; () banked
  7828  0139F6  6F60               	movwf	memcpy@d1& (0+255),b
  7829  0139F8  0E01               	movlw	high (_os+23)
  7830  0139FA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7831  0139FC  0E82               	movlw	low (i2c_eeprom_recover_position@buffer+9)
  7832  0139FE  6F62               	movwf	memcpy@s1& (0+255),b
  7833  013A00  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+9)
  7834  013A02  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7835  013A04  0E00               	movlw	0
  7836  013A06  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7837  013A08  0E02               	movlw	2
  7838  013A0A  6F64               	movwf	memcpy@n& (0+255),b
  7839  013A0C  ECCA  F0A5         	call	_memcpy	;wreg free
  7840  013A10  0012               	return		;funcret
  7841  013A12                     __end_of_i2c_eeprom_recover_position:
  7842                           	opt stack 0
  7843                           tblptru	equ	0xFF8
  7844                           tblptrh	equ	0xFF7
  7845                           tblptrl	equ	0xFF6
  7846                           tablat	equ	0xFF5
  7847                           postinc0	equ	0xFEE
  7848                           wreg	equ	0xFE8
  7849                           postdec1	equ	0xFE5
  7850                           fsr1h	equ	0xFE2
  7851                           fsr1l	equ	0xFE1
  7852                           status	equ	0xFD8
  7853                           
  7854 ;; *************** function _i2c_eeprom_read *****************
  7855 ;; Defined at:
  7856 ;;		line 277 in file "i2c.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  address         2   17[BANK0 ] unsigned int 
  7859 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7860 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  7861 ;;  length          1   21[BANK0 ] unsigned char 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7864 ;;  addr            1   23[BANK0 ] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7874 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;Total ram usage:        8 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:   12
  7881 ;; This function calls:
  7882 ;;		__i2c_eeprom_busy
  7883 ;;		__i2c_read
  7884 ;;		__i2c_write
  7885 ;; This function is called by:
  7886 ;;		_i2c_eeprom_recover_position
  7887 ;;		_i2c_eeprom_readUint16
  7888 ;;		_i2c_eeprom_readUint32
  7889 ;;		_i2c_eeprom_readInt16
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text6
  7894  015028                     __ptext6:
  7895                           	opt stack 0
  7896  015028                     _i2c_eeprom_read:
  7897                           	opt stack 16
  7898                           
  7899                           ;i2c.c: 279: uint8_t slave_address;;i2c.c: 280: uint8_t addr;;i2c.c: 281: addr = address
      +                           & 0xFF;
  7900                           
  7901                           ;incstack = 0
  7902  015028  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7903                           
  7904                           ;i2c.c: 282: address &= 0b0000011100000000;
  7905  01502C  0100               	movlb	0	; () banked
  7906  01502E  0E00               	movlw	0
  7907  015030  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7908  015032  0E07               	movlw	7
  7909  015034  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7910                           
  7911                           ;i2c.c: 283: address >>= 7;
  7912  015036  0E07               	movlw	7
  7913  015038  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7914  01503A                     u15215:
  7915  01503A  90D8               	bcf	status,0,c
  7916  01503C  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7917  01503E  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7918  015040  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7919  015042  D7FB               	goto	u15215
  7920                           
  7921                           ;i2c.c: 284: slave_address = 0b10100000 | address;
  7922  015044  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7923  015046  09A0               	iorlw	160
  7924  015048  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7925  01504A                     
  7926                           ; BSR set to: 0
  7927                           
  7928                           ; BSR set to: 0
  7929  01504A  ECDD  F0AE         	call	__i2c_eeprom_busy	;wreg free
  7930  01504E  0900               	iorlw	0
  7931  015050  A4D8               	btfss	status,2,c
  7932  015052  D7FB               	goto	l1224
  7933                           
  7934                           ;i2c.c: 289: _i2c_write(slave_address, &addr, 1);
  7935  015054  0E77               	movlw	low i2c_eeprom_read@addr
  7936  015056  0100               	movlb	0	; () banked
  7937  015058  6F65               	movwf	__i2c_write@data& (0+255),b
  7938  01505A  0E00               	movlw	high i2c_eeprom_read@addr
  7939  01505C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7940  01505E  0E01               	movlw	1
  7941  015060  6F67               	movwf	__i2c_write@length& (0+255),b
  7942  015062  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7943  015064  EC03  F0AA         	call	__i2c_write
  7944                           
  7945                           ;i2c.c: 290: _i2c_read(slave_address, &data[0], length);
  7946  015068  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7947  01506C  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7948  015070  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7949  015074  0100               	movlb	0	; () banked
  7950  015076  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7951  015078  ECEC  F09D         	call	__i2c_read
  7952  01507C  0012               	return		;funcret
  7953  01507E                     __end_of_i2c_eeprom_read:
  7954                           	opt stack 0
  7955                           tblptru	equ	0xFF8
  7956                           tblptrh	equ	0xFF7
  7957                           tblptrl	equ	0xFF6
  7958                           tablat	equ	0xFF5
  7959                           postinc0	equ	0xFEE
  7960                           wreg	equ	0xFE8
  7961                           postdec1	equ	0xFE5
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function __i2c_read *****************
  7967 ;; Defined at:
  7968 ;;		line 105 in file "i2c.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;  slave_addres    1    wreg     unsigned char 
  7971 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7972 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  7973 ;;		 -> i2c_eeprom_readByte@addr(1), 
  7974 ;;  length          1    7[BANK0 ] unsigned char 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7977 ;;  cntr            1   16[BANK0 ] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 0/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7987 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;Total ram usage:       12 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:   11
  7994 ;; This function calls:
  7995 ;;		__i2c_acknowledge
  7996 ;;		__i2c_get
  7997 ;;		__i2c_not_acknowledge
  7998 ;;		__i2c_send
  7999 ;;		__i2c_start
  8000 ;;		__i2c_stop
  8001 ;;		__i2c_wait_idle
  8002 ;; This function is called by:
  8003 ;;		_i2c_eeprom_read
  8004 ;;		_i2c_eeprom_readByte
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text7
  8009  013BD8                     __ptext7:
  8010                           	opt stack 0
  8011  013BD8                     __i2c_read:
  8012                           	opt stack 16
  8013                           
  8014                           ;incstack = 0
  8015                           ;__i2c_read@slave_address stored from wreg
  8016  013BD8  0100               	movlb	0	; () banked
  8017  013BDA  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  8018                           
  8019                           ;i2c.c: 107: uint8_t cntr;;i2c.c: 109: _i2c_wait_idle();
  8020  013BDC  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
  8021                           
  8022                           ;i2c.c: 110: _i2c_start();
  8023  013BE0  EC80  F0B0         	call	__i2c_start	;wreg free
  8024                           
  8025                           ;i2c.c: 111: _i2c_wait_idle();
  8026  013BE4  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
  8027                           
  8028                           ;i2c.c: 112: _i2c_send(slave_address | 0x01);
  8029  013BE8  0100               	movlb	0	; () banked
  8030  013BEA  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  8031  013BEC  0901               	iorlw	1
  8032  013BEE  EC72  F0B0         	call	__i2c_send
  8033                           
  8034                           ;i2c.c: 113: _i2c_wait_idle();
  8035  013BF2  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
  8036                           
  8037                           ;i2c.c: 123: for(cntr=0; cntr<length-1; ++cntr)
  8038  013BF6  0E00               	movlw	0
  8039  013BF8  0100               	movlb	0	; () banked
  8040  013BFA  6F70               	movwf	__i2c_read@cntr& (0+255),b
  8041  013BFC  D00F               	goto	l1169
  8042  013BFE                     
  8043                           ; BSR set to: 0
  8044                           ;i2c.c: 124: {;i2c.c: 125: data[cntr] = _i2c_get();
  8045                           
  8046                           ; BSR set to: 0
  8047  013BFE  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8048  013C00  0D01               	mullw	1
  8049  013C02  50F3               	movf	prodl,w,c
  8050  013C04  2565               	addwf	__i2c_read@data& (0+255),w,b
  8051  013C06  6ED9               	movwf	fsr2l,c
  8052  013C08  50F4               	movf	prodh,w,c
  8053  013C0A  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8054  013C0C  6EDA               	movwf	fsr2h,c
  8055  013C0E  EC63  F0B0         	call	__i2c_get	;wreg free
  8056  013C12  6EDF               	movwf	indf2,c
  8057                           
  8058                           ;i2c.c: 126: _i2c_acknowledge();
  8059  013C14  EC68  F0B0         	call	__i2c_acknowledge	;wreg free
  8060  013C18  0100               	movlb	0	; () banked
  8061  013C1A  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  8062  013C1C                     l1169:
  8063                           
  8064                           ; BSR set to: 0
  8065                           
  8066                           ; BSR set to: 0
  8067  013C1C  0EFF               	movlw	255
  8068  013C1E  6F68               	movwf	??__i2c_read& (0+255),b
  8069  013C20  0EFF               	movlw	255
  8070  013C22  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  8071  013C24  5167               	movf	__i2c_read@length& (0+255),w,b
  8072  013C26  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  8073  013C28  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  8074  013C2A  5168               	movf	??__i2c_read& (0+255),w,b
  8075  013C2C  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  8076  013C2E  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  8077  013C30  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  8078  013C32  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8079  013C34  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  8080  013C36  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  8081  013C38  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  8082  013C3A  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  8083  013C3C  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  8084  013C3E  0A80               	xorlw	128
  8085  013C40  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  8086  013C42  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  8087  013C44  0A80               	xorlw	128
  8088  013C46  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  8089  013C48  A0D8               	btfss	status,0,c
  8090  013C4A  D7D9               	goto	l1170
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;i2c.c: 127: };i2c.c: 128: data[cntr] = _i2c_get();
  8094                           
  8095                           ; BSR set to: 0
  8096  013C4C  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8097  013C4E  0D01               	mullw	1
  8098  013C50  50F3               	movf	prodl,w,c
  8099  013C52  2565               	addwf	__i2c_read@data& (0+255),w,b
  8100  013C54  6ED9               	movwf	fsr2l,c
  8101  013C56  50F4               	movf	prodh,w,c
  8102  013C58  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8103  013C5A  6EDA               	movwf	fsr2h,c
  8104  013C5C  EC63  F0B0         	call	__i2c_get	;wreg free
  8105  013C60  6EDF               	movwf	indf2,c
  8106                           
  8107                           ;i2c.c: 129: _i2c_not_acknowledge();
  8108  013C62  EC5E  F0B0         	call	__i2c_not_acknowledge	;wreg free
  8109                           
  8110                           ;i2c.c: 131: _i2c_stop();
  8111  013C66  EC7C  F0B0         	call	__i2c_stop	;wreg free
  8112  013C6A  0012               	return		;funcret
  8113  013C6C                     __end_of__i2c_read:
  8114                           	opt stack 0
  8115                           tblptru	equ	0xFF8
  8116                           tblptrh	equ	0xFF7
  8117                           tblptrl	equ	0xFF6
  8118                           tablat	equ	0xFF5
  8119                           prodh	equ	0xFF4
  8120                           prodl	equ	0xFF3
  8121                           postinc0	equ	0xFEE
  8122                           wreg	equ	0xFE8
  8123                           postdec1	equ	0xFE5
  8124                           fsr1h	equ	0xFE2
  8125                           fsr1l	equ	0xFE1
  8126                           indf2	equ	0xFDF
  8127                           fsr2h	equ	0xFDA
  8128                           fsr2l	equ	0xFD9
  8129                           status	equ	0xFD8
  8130                           
  8131 ;; *************** function __i2c_not_acknowledge *****************
  8132 ;; Defined at:
  8133 ;;		line 78 in file "i2c.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;		None
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;		None
  8138 ;; Return value:  Size  Location     Type
  8139 ;;                  1    wreg      void 
  8140 ;; Registers used:
  8141 ;;		None
  8142 ;; Tracked objects:
  8143 ;;		On entry : 0/0
  8144 ;;		On exit  : 0/0
  8145 ;;		Unchanged: 0/0
  8146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;Total ram usage:        0 bytes
  8152 ;; Hardware stack levels used:    1
  8153 ;; Hardware stack levels required when called:   10
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		__i2c_read
  8158 ;;		_i2c_adc_read
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text8
  8163  0160BC                     __ptext8:
  8164                           	opt stack 0
  8165  0160BC                     __i2c_not_acknowledge:
  8166                           	opt stack 16
  8167                           
  8168                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 1;
  8169                           
  8170                           ;incstack = 0
  8171  0160BC  8AC5               	bsf	4037,5,c	;volatile
  8172                           
  8173                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  8174  0160BE  88C5               	bsf	4037,4,c	;volatile
  8175  0160C0  A8C5               	btfss	4037,4,c	;volatile
  8176  0160C2  0012               	return	
  8177  0160C4  D7FD               	goto	l1158
  8178  0160C6                     __end_of__i2c_not_acknowledge:
  8179                           	opt stack 0
  8180                           tblptru	equ	0xFF8
  8181                           tblptrh	equ	0xFF7
  8182                           tblptrl	equ	0xFF6
  8183                           tablat	equ	0xFF5
  8184                           prodh	equ	0xFF4
  8185                           prodl	equ	0xFF3
  8186                           postinc0	equ	0xFEE
  8187                           wreg	equ	0xFE8
  8188                           postdec1	equ	0xFE5
  8189                           fsr1h	equ	0xFE2
  8190                           fsr1l	equ	0xFE1
  8191                           indf2	equ	0xFDF
  8192                           fsr2h	equ	0xFDA
  8193                           fsr2l	equ	0xFD9
  8194                           status	equ	0xFD8
  8195                           
  8196 ;; *************** function __i2c_get *****************
  8197 ;; Defined at:
  8198 ;;		line 58 in file "i2c.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      unsigned char 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8216 ;;Total ram usage:        0 bytes
  8217 ;; Hardware stack levels used:    1
  8218 ;; Hardware stack levels required when called:   10
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		__i2c_read
  8223 ;;		_i2c_adc_read
  8224 ;; This function uses a non-reentrant model
  8225 ;;
  8226                           
  8227                           	psect	text9
  8228  0160C6                     __ptext9:
  8229                           	opt stack 0
  8230  0160C6                     __i2c_get:
  8231                           	opt stack 16
  8232                           
  8233                           ;i2c.c: 60: SSP1CON2bits.RCEN = 1 ;
  8234                           
  8235                           ;incstack = 0
  8236  0160C6  86C5               	bsf	4037,3,c	;volatile
  8237  0160C8  B6C5               	btfsc	4037,3,c	;volatile
  8238  0160CA  D7FE               	goto	l1140
  8239                           
  8240                           ;i2c.c: 62: return SSP1BUF;
  8241  0160CC  50C9               	movf	4041,w,c	;volatile
  8242  0160CE  0012               	return	
  8243  0160D0                     __end_of__i2c_get:
  8244                           	opt stack 0
  8245                           tblptru	equ	0xFF8
  8246                           tblptrh	equ	0xFF7
  8247                           tblptrl	equ	0xFF6
  8248                           tablat	equ	0xFF5
  8249                           prodh	equ	0xFF4
  8250                           prodl	equ	0xFF3
  8251                           postinc0	equ	0xFEE
  8252                           wreg	equ	0xFE8
  8253                           postdec1	equ	0xFE5
  8254                           fsr1h	equ	0xFE2
  8255                           fsr1l	equ	0xFE1
  8256                           indf2	equ	0xFDF
  8257                           fsr2h	equ	0xFDA
  8258                           fsr2l	equ	0xFD9
  8259                           status	equ	0xFD8
  8260                           
  8261 ;; *************** function __i2c_acknowledge *****************
  8262 ;; Defined at:
  8263 ;;		line 71 in file "i2c.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		None
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:   10
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		__i2c_read
  8288 ;;		_i2c_adc_read
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text10
  8293  0160D0                     __ptext10:
  8294                           	opt stack 0
  8295  0160D0                     __i2c_acknowledge:
  8296                           	opt stack 16
  8297                           
  8298                           ;i2c.c: 73: SSP1CON2bits.ACKDT = 0;
  8299                           
  8300                           ;incstack = 0
  8301  0160D0  9AC5               	bcf	4037,5,c	;volatile
  8302                           
  8303                           ;i2c.c: 74: SSP1CON2bits.ACKEN = 1;
  8304  0160D2  88C5               	bsf	4037,4,c	;volatile
  8305  0160D4  A8C5               	btfss	4037,4,c	;volatile
  8306  0160D6  0012               	return	
  8307  0160D8  D7FD               	goto	l1152
  8308  0160DA                     __end_of__i2c_acknowledge:
  8309                           	opt stack 0
  8310                           tblptru	equ	0xFF8
  8311                           tblptrh	equ	0xFF7
  8312                           tblptrl	equ	0xFF6
  8313                           tablat	equ	0xFF5
  8314                           prodh	equ	0xFF4
  8315                           prodl	equ	0xFF3
  8316                           postinc0	equ	0xFEE
  8317                           wreg	equ	0xFE8
  8318                           postdec1	equ	0xFE5
  8319                           fsr1h	equ	0xFE2
  8320                           fsr1l	equ	0xFE1
  8321                           indf2	equ	0xFDF
  8322                           fsr2h	equ	0xFDA
  8323                           fsr2l	equ	0xFD9
  8324                           status	equ	0xFD8
  8325                           
  8326 ;; *************** function _flash_init *****************
  8327 ;; Defined at:
  8328 ;;		line 361 in file "flash.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;Total ram usage:        0 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:   14
  8349 ;; This function calls:
  8350 ;;		__flash_set_page_size
  8351 ;;		_spi_init
  8352 ;; This function is called by:
  8353 ;;		_system_init
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text11
  8358  016072                     __ptext11:
  8359                           	opt stack 0
  8360  016072                     _flash_init:
  8361                           	opt stack 15
  8362                           
  8363                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8364                           
  8365                           ;incstack = 0
  8366  016072  0E00               	movlw	0
  8367  016074  ECB5  F0AB         	call	_spi_init
  8368                           
  8369                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8370  016078  0E00               	movlw	0
  8371  01607A  EC91  F0A3         	call	__flash_set_page_size
  8372  01607E  0012               	return		;funcret
  8373  016080                     __end_of_flash_init:
  8374                           	opt stack 0
  8375                           tblptru	equ	0xFF8
  8376                           tblptrh	equ	0xFF7
  8377                           tblptrl	equ	0xFF6
  8378                           tablat	equ	0xFF5
  8379                           prodh	equ	0xFF4
  8380                           prodl	equ	0xFF3
  8381                           postinc0	equ	0xFEE
  8382                           wreg	equ	0xFE8
  8383                           postdec1	equ	0xFE5
  8384                           fsr1h	equ	0xFE2
  8385                           fsr1l	equ	0xFE1
  8386                           indf2	equ	0xFDF
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           
  8391 ;; *************** function _spi_init *****************
  8392 ;; Defined at:
  8393 ;;		line 89 in file "spi.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  configuratio    1    wreg     enum E6878
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  configuratio    1    3[BANK0 ] enum E6878
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;Total ram usage:        1 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:   11
  8414 ;; This function calls:
  8415 ;;		__spi_init
  8416 ;; This function is called by:
  8417 ;;		_flash_init
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           
  8421                           	psect	text12
  8422  01576A                     __ptext12:
  8423                           	opt stack 0
  8424  01576A                     _spi_init:
  8425                           	opt stack 17
  8426                           
  8427                           ;incstack = 0
  8428                           ;spi_init@configuration stored from wreg
  8429  01576A  0100               	movlb	0	; () banked
  8430  01576C  6F63               	movwf	spi_init@configuration& (0+255),b
  8431                           
  8432                           ;spi.c: 91: switch(configuration)
  8433  01576E  D012               	goto	l2191
  8434  015770                     
  8435                           ;spi.c: 94: _spi_init(config_internal);
  8436  015770  C12E  F060         	movff	_config_internal,__spi_init@details
  8437  015774  C12F  F061         	movff	_config_internal+1,__spi_init@details+1
  8438  015778  C130  F062         	movff	_config_internal+2,__spi_init@details+2
  8439  01577C  EC8A  F0AC         	call	__spi_init	;wreg free
  8440                           
  8441                           ;spi.c: 95: break;
  8442  015780  D011               	goto	l2193
  8443  015782                     
  8444                           ;spi.c: 98: _spi_init(config_external);
  8445  015782  C12B  F060         	movff	_config_external,__spi_init@details
  8446  015786  C12C  F061         	movff	_config_external+1,__spi_init@details+1
  8447  01578A  C12D  F062         	movff	_config_external+2,__spi_init@details+2
  8448  01578E  EC8A  F0AC         	call	__spi_init	;wreg free
  8449                           
  8450                           ;spi.c: 100: }
  8451                           
  8452                           ;spi.c: 99: break;
  8453  015792  D008               	goto	l2193
  8454  015794                     l2191:
  8455  015794  0100               	movlb	0	; () banked
  8456  015796  5163               	movf	spi_init@configuration& (0+255),w,b
  8457                           
  8458                           ; Switch size 1, requested type "space"
  8459                           ; Number of cases is 2, Range of values is 0 to 1
  8460                           ; switch strategies available:
  8461                           ; Name         Instructions Cycles
  8462                           ; simple_byte            7     4 (average)
  8463                           ;	Chosen strategy is simple_byte
  8464  015798  0A00               	xorlw	0	; case 0
  8465  01579A  B4D8               	btfsc	status,2,c
  8466  01579C  D7E9               	goto	l2192
  8467  01579E  0A01               	xorlw	1	; case 1
  8468  0157A0  B4D8               	btfsc	status,2,c
  8469  0157A2  D7EF               	goto	l2194
  8470  0157A4                     l2193:
  8471                           
  8472                           ;spi.c: 102: active_configuration = configuration;
  8473  0157A4  C063  F14E         	movff	spi_init@configuration,_active_configuration
  8474  0157A8  0012               	return		;funcret
  8475  0157AA                     __end_of_spi_init:
  8476                           	opt stack 0
  8477                           tblptru	equ	0xFF8
  8478                           tblptrh	equ	0xFF7
  8479                           tblptrl	equ	0xFF6
  8480                           tablat	equ	0xFF5
  8481                           prodh	equ	0xFF4
  8482                           prodl	equ	0xFF3
  8483                           postinc0	equ	0xFEE
  8484                           wreg	equ	0xFE8
  8485                           postdec1	equ	0xFE5
  8486                           fsr1h	equ	0xFE2
  8487                           fsr1l	equ	0xFE1
  8488                           indf2	equ	0xFDF
  8489                           fsr2h	equ	0xFDA
  8490                           fsr2l	equ	0xFD9
  8491                           status	equ	0xFD8
  8492                           
  8493 ;; *************** function __spi_init *****************
  8494 ;; Defined at:
  8495 ;;		line 24 in file "spi.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  details         3    0[BANK0 ] struct .
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;		None
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      void 
  8502 ;; Registers used:
  8503 ;;		wreg, status,2
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8509 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8513 ;;Total ram usage:        3 bytes
  8514 ;; Hardware stack levels used:    1
  8515 ;; Hardware stack levels required when called:   10
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_spi_init
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text13
  8524  015914                     __ptext13:
  8525                           	opt stack 0
  8526  015914                     __spi_init:
  8527                           	opt stack 17
  8528                           
  8529                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8530                           
  8531                           ;incstack = 0
  8532  015914  0E55               	movlw	85
  8533  015916  6EA7               	movwf	4007,c	;volsfr
  8534  015918  0EAA               	movlw	170
  8535  01591A  6EA7               	movwf	4007,c	;volsfr
  8536  01591C  010E               	movlb	14	; () banked
  8537  01591E  91BF               	bcf	191,0,b	;volatile
  8538                           
  8539                           ;spi.c: 31: RPINR21 = 22;
  8540  015920  0E16               	movlw	22
  8541  015922  6FFC               	movwf	252,b	;volatile
  8542                           
  8543                           ;spi.c: 32: RPOR21 = 10;
  8544  015924  0E0A               	movlw	10
  8545  015926  6FD5               	movwf	213,b	;volatile
  8546                           
  8547                           ;spi.c: 34: RPOR23 = 11;
  8548  015928  0E0B               	movlw	11
  8549  01592A  6FD7               	movwf	215,b	;volatile
  8550                           
  8551                           ;spi.c: 35: RPINR22 = 23;
  8552  01592C  0E17               	movlw	23
  8553  01592E  6FFD               	movwf	253,b	;volatile
  8554                           
  8555                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8556  015930  0E55               	movlw	85
  8557  015932  6EA7               	movwf	4007,c	;volsfr
  8558  015934  0EAA               	movlw	170
  8559  015936  6EA7               	movwf	4007,c	;volsfr
  8560                           
  8561                           ; BSR set to: 14
  8562  015938  81BF               	bsf	191,0,b	;volatile
  8563                           
  8564                           ; BSR set to: 14
  8565                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8566  01593A  8E73               	bsf	3955,7,c	;volatile
  8567                           
  8568                           ; BSR set to: 14
  8569                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8570  01593C  8C73               	bsf	3955,6,c	;volatile
  8571                           
  8572                           ; BSR set to: 14
  8573                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8574  01593E  9872               	bcf	3954,4,c	;volatile
  8575                           
  8576                           ; BSR set to: 14
  8577                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8578  015940  9072               	bcf	3954,0,c	;volatile
  8579  015942  9272               	bcf	3954,1,c	;volatile
  8580  015944  9472               	bcf	3954,2,c	;volatile
  8581  015946  9672               	bcf	3954,3,c	;volatile
  8582                           
  8583                           ; BSR set to: 14
  8584                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8585  015948  8A72               	bsf	3954,5,c	;volatile
  8586                           
  8587                           ; BSR set to: 14
  8588  01594A  0012               	return		;funcret
  8589  01594C                     __end_of__spi_init:
  8590                           	opt stack 0
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           postinc0	equ	0xFEE
  8598                           wreg	equ	0xFE8
  8599                           postdec1	equ	0xFE5
  8600                           fsr1h	equ	0xFE2
  8601                           fsr1l	equ	0xFE1
  8602                           indf2	equ	0xFDF
  8603                           fsr2h	equ	0xFDA
  8604                           fsr2l	equ	0xFD9
  8605                           status	equ	0xFD8
  8606                           
  8607 ;; *************** function __flash_set_page_size *****************
  8608 ;; Defined at:
  8609 ;;		line 99 in file "flash.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  size            1    wreg     enum E7054
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  size            1   23[BANK0 ] enum E7054
  8614 ;;  command         4   19[BANK0 ] unsigned char [4]
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      void 
  8617 ;; Registers used:
  8618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8625 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;Total ram usage:        5 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:   13
  8631 ;; This function calls:
  8632 ;;		__flash_is_busy
  8633 ;;		_memcpy
  8634 ;;		_spi_tx
  8635 ;; This function is called by:
  8636 ;;		_flash_init
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text14
  8641  014722                     __ptext14:
  8642                           	opt stack 0
  8643  014722                     __flash_set_page_size:
  8644                           	opt stack 15
  8645                           
  8646                           ; BSR set to: 14
  8647                           ;incstack = 0
  8648                           ;__flash_set_page_size@size stored from wreg
  8649  014722  0100               	movlb	0	; () banked
  8650  014724  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8651  014726                     
  8652                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8653  014726  EC4D  F0AF         	call	__flash_is_busy	;wreg free
  8654  01472A  0900               	iorlw	0
  8655  01472C  A4D8               	btfss	status,2,c
  8656  01472E  D7FB               	goto	l16270
  8657                           
  8658                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8659  014730  0100               	movlb	0	; () banked
  8660  014732  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8661  014734  A4D8               	btfss	status,2,c
  8662  014736  D00E               	goto	l1544
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8666  014738  0E73               	movlw	low __flash_set_page_size@command
  8667  01473A  6F60               	movwf	memcpy@d1& (0+255),b
  8668  01473C  0E00               	movlw	high __flash_set_page_size@command
  8669  01473E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8670  014740  0EF6               	movlw	low _flash_command_pagesize_512
  8671  014742  6F62               	movwf	memcpy@s1& (0+255),b
  8672  014744  0EA2               	movlw	high _flash_command_pagesize_512
  8673  014746  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8674  014748  0E00               	movlw	0
  8675  01474A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8676  01474C  0E04               	movlw	4
  8677  01474E  6F64               	movwf	memcpy@n& (0+255),b
  8678  014750  ECCA  F0A5         	call	_memcpy	;wreg free
  8679  014754                     l1544:
  8680                           
  8681                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8682  014754  0100               	movlb	0	; () banked
  8683  014756  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8684  014758  A4D8               	btfss	status,2,c
  8685  01475A  D00E               	goto	l1545
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8689  01475C  0E73               	movlw	low __flash_set_page_size@command
  8690  01475E  6F60               	movwf	memcpy@d1& (0+255),b
  8691  014760  0E00               	movlw	high __flash_set_page_size@command
  8692  014762  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8693  014764  0EF2               	movlw	low _flash_command_pagesize_528
  8694  014766  6F62               	movwf	memcpy@s1& (0+255),b
  8695  014768  0EA2               	movlw	high _flash_command_pagesize_528
  8696  01476A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8697  01476C  0E00               	movlw	0
  8698  01476E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8699  014770  0E04               	movlw	4
  8700  014772  6F64               	movwf	memcpy@n& (0+255),b
  8701  014774  ECCA  F0A5         	call	_memcpy	;wreg free
  8702  014778                     l1545:
  8703                           
  8704                           ;flash.c: 113: spi_tx(command, 4);
  8705  014778  0E73               	movlw	low __flash_set_page_size@command
  8706  01477A  0100               	movlb	0	; () banked
  8707  01477C  6F60               	movwf	spi_tx@data& (0+255),b
  8708  01477E  0E00               	movlw	high __flash_set_page_size@command
  8709  014780  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8710  014782  0E00               	movlw	0
  8711  014784  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8712  014786  0E04               	movlw	4
  8713  014788  6F62               	movwf	spi_tx@length& (0+255),b
  8714  01478A  EC0B  F0A7         	call	_spi_tx	;wreg free
  8715  01478E  0012               	return		;funcret
  8716  014790                     __end_of__flash_set_page_size:
  8717                           	opt stack 0
  8718                           tblptru	equ	0xFF8
  8719                           tblptrh	equ	0xFF7
  8720                           tblptrl	equ	0xFF6
  8721                           tablat	equ	0xFF5
  8722                           prodh	equ	0xFF4
  8723                           prodl	equ	0xFF3
  8724                           postinc0	equ	0xFEE
  8725                           wreg	equ	0xFE8
  8726                           postdec1	equ	0xFE5
  8727                           fsr1h	equ	0xFE2
  8728                           fsr1l	equ	0xFE1
  8729                           indf2	equ	0xFDF
  8730                           fsr2h	equ	0xFDA
  8731                           fsr2l	equ	0xFD9
  8732                           status	equ	0xFD8
  8733                           
  8734 ;; *************** function _fat_init *****************
  8735 ;; Defined at:
  8736 ;;		line 1404 in file "fat16.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;Total ram usage:        0 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:   16
  8757 ;; This function calls:
  8758 ;;		_fat_get_format_status
  8759 ;;		_fat_restore_mbr_fbr
  8760 ;; This function is called by:
  8761 ;;		_system_init
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text15
  8766  016042                     __ptext15:
  8767                           	opt stack 0
  8768  016042                     _fat_init:
  8769                           	opt stack 13
  8770                           
  8771                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8772                           
  8773                           ;incstack = 0
  8774  016042  EC7E  F099         	call	_fat_get_format_status	;wreg free
  8775  016046  0900               	iorlw	0
  8776  016048  A4D8               	btfss	status,2,c
  8777  01604A  0012               	return	
  8778                           
  8779                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8780  01604C  EC13  F09F         	call	_fat_restore_mbr_fbr	;wreg free
  8781  016050  0012               	return	
  8782  016052                     __end_of_fat_init:
  8783                           	opt stack 0
  8784                           tblptru	equ	0xFF8
  8785                           tblptrh	equ	0xFF7
  8786                           tblptrl	equ	0xFF6
  8787                           tablat	equ	0xFF5
  8788                           prodh	equ	0xFF4
  8789                           prodl	equ	0xFF3
  8790                           postinc0	equ	0xFEE
  8791                           wreg	equ	0xFE8
  8792                           postdec1	equ	0xFE5
  8793                           fsr1h	equ	0xFE2
  8794                           fsr1l	equ	0xFE1
  8795                           indf2	equ	0xFDF
  8796                           fsr2h	equ	0xFDA
  8797                           fsr2l	equ	0xFD9
  8798                           status	equ	0xFD8
  8799                           
  8800 ;; *************** function _fat_restore_mbr_fbr *****************
  8801 ;; Defined at:
  8802 ;;		line 1321 in file "fat16.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;		None
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;  cntr            2   36[BANK0 ] unsigned int 
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      unsigned char 
  8809 ;; Registers used:
  8810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;Total ram usage:        2 bytes
  8821 ;; Hardware stack levels used:    1
  8822 ;; Hardware stack levels required when called:   15
  8823 ;; This function calls:
  8824 ;;		__get_fbr
  8825 ;;		__get_mbr
  8826 ;;		_flash_sector_write
  8827 ;; This function is called by:
  8828 ;;		_fat_init
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text16
  8833  013E26                     __ptext16:
  8834                           	opt stack 0
  8835  013E26                     _fat_restore_mbr_fbr:
  8836                           	opt stack 13
  8837                           
  8838                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8839                           
  8840                           ;incstack = 0
  8841  013E26  0E00               	movlw	0
  8842  013E28  0100               	movlb	0	; () banked
  8843  013E2A  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8844  013E2C  0E00               	movlw	0
  8845  013E2E  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8846  013E30                     l16500:
  8847                           
  8848                           ; BSR set to: 0
  8849  013E30  0E02               	movlw	2
  8850  013E32  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8851  013E34  B0D8               	btfsc	status,0,c
  8852  013E36  D011               	goto	u15720
  8853                           
  8854                           ; BSR set to: 0
  8855                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8856                           
  8857                           ; BSR set to: 0
  8858                           
  8859                           ; BSR set to: 0
  8860  013E38  0E00               	movlw	low _buffer
  8861  013E3A  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8862  013E3C  6ED9               	movwf	fsr2l,c
  8863  013E3E  0E0A               	movlw	high _buffer
  8864  013E40  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8865  013E42  6EDA               	movwf	fsr2h,c
  8866  013E44  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8867  013E48  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8868  013E4C  ECE9  F094         	call	__get_mbr	;wreg free
  8869  013E50  6EDF               	movwf	indf2,c
  8870  013E52  0100               	movlb	0	; () banked
  8871  013E54  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8872  013E56  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8873  013E58  D7EB               	goto	l16500
  8874  013E5A                     u15720:
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8878                           
  8879                           ; BSR set to: 0
  8880  013E5A  0E00               	movlw	0
  8881  013E5C  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8882  013E5E  0E00               	movlw	0
  8883  013E60  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8884  013E62  0E00               	movlw	low _buffer
  8885  013E64  6F81               	movwf	flash_sector_write@data& (0+255),b
  8886  013E66  0E0A               	movlw	high _buffer
  8887  013E68  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8888  013E6A  ECB3  F0A9         	call	_flash_sector_write	;wreg free
  8889                           
  8890                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8891  013E6E  0E00               	movlw	0
  8892  013E70  0100               	movlb	0	; () banked
  8893  013E72  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8894  013E74  0E00               	movlw	0
  8895  013E76  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8896  013E78                     l16514:
  8897                           
  8898                           ; BSR set to: 0
  8899  013E78  0E02               	movlw	2
  8900  013E7A  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8901  013E7C  B0D8               	btfsc	status,0,c
  8902  013E7E  D011               	goto	u15740
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8906                           
  8907                           ; BSR set to: 0
  8908                           
  8909                           ; BSR set to: 0
  8910  013E80  0E00               	movlw	low _buffer
  8911  013E82  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8912  013E84  6ED9               	movwf	fsr2l,c
  8913  013E86  0E0A               	movlw	high _buffer
  8914  013E88  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8915  013E8A  6EDA               	movwf	fsr2h,c
  8916  013E8C  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8917  013E90  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8918  013E94  ECA2  F06D         	call	__get_fbr	;wreg free
  8919  013E98  6EDF               	movwf	indf2,c
  8920  013E9A  0100               	movlb	0	; () banked
  8921  013E9C  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8922  013E9E  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8923  013EA0  D7EB               	goto	l16514
  8924  013EA2                     u15740:
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  8928                           
  8929                           ; BSR set to: 0
  8930  013EA2  0E00               	movlw	0
  8931  013EA4  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8932  013EA6  0E01               	movlw	1
  8933  013EA8  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8934  013EAA  0E00               	movlw	low _buffer
  8935  013EAC  6F81               	movwf	flash_sector_write@data& (0+255),b
  8936  013EAE  0E0A               	movlw	high _buffer
  8937  013EB0  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8938  013EB2  ECB3  F0A9         	call	_flash_sector_write	;wreg free
  8939  013EB6  0012               	return	
  8940  013EB8                     __end_of_fat_restore_mbr_fbr:
  8941                           	opt stack 0
  8942                           tblptru	equ	0xFF8
  8943                           tblptrh	equ	0xFF7
  8944                           tblptrl	equ	0xFF6
  8945                           tablat	equ	0xFF5
  8946                           prodh	equ	0xFF4
  8947                           prodl	equ	0xFF3
  8948                           postinc0	equ	0xFEE
  8949                           wreg	equ	0xFE8
  8950                           postdec1	equ	0xFE5
  8951                           fsr1h	equ	0xFE2
  8952                           fsr1l	equ	0xFE1
  8953                           indf2	equ	0xFDF
  8954                           fsr2h	equ	0xFDA
  8955                           fsr2l	equ	0xFD9
  8956                           status	equ	0xFD8
  8957                           
  8958 ;; *************** function _fat_get_format_status *****************
  8959 ;; Defined at:
  8960 ;;		line 1293 in file "fat16.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  cntr            2   45[BANK0 ] unsigned int 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      enum E7028
  8967 ;; Registers used:
  8968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8976 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;Total ram usage:        4 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:   15
  8981 ;; This function calls:
  8982 ;;		__get_fbr
  8983 ;;		__get_mbr
  8984 ;;		_flash_sector_read
  8985 ;; This function is called by:
  8986 ;;		_fat_init
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text17
  8991  0132FC                     __ptext17:
  8992                           	opt stack 0
  8993  0132FC                     _fat_get_format_status:
  8994                           	opt stack 13
  8995                           
  8996                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  8997                           
  8998                           ;incstack = 0
  8999  0132FC  0E00               	movlw	0
  9000  0132FE  0100               	movlb	0	; () banked
  9001  013300  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9002  013302  0E00               	movlw	0
  9003  013304  6F87               	movwf	flash_sector_read@page& (0+255),b
  9004  013306  0E00               	movlw	low _buffer
  9005  013308  6F89               	movwf	flash_sector_read@data& (0+255),b
  9006  01330A  0E0A               	movlw	high _buffer
  9007  01330C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9008  01330E  ECC9  F0AE         	call	_flash_sector_read	;wreg free
  9009                           
  9010                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  9011  013312  0E00               	movlw	0
  9012  013314  0100               	movlb	0	; () banked
  9013  013316  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9014  013318  0E00               	movlw	0
  9015  01331A  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9016  01331C                     l16462:
  9017                           
  9018                           ; BSR set to: 0
  9019  01331C  0E02               	movlw	2
  9020  01331E  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9021  013320  B0D8               	btfsc	status,0,c
  9022  013322  D017               	goto	u15670
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  9026                           
  9027                           ; BSR set to: 0
  9028                           
  9029                           ; BSR set to: 0
  9030  013324  0E00               	movlw	low _buffer
  9031  013326  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9032  013328  6ED9               	movwf	fsr2l,c
  9033  01332A  0E0A               	movlw	high _buffer
  9034  01332C  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9035  01332E  6EDA               	movwf	fsr2h,c
  9036  013330  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  9037  013334  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  9038  013338  ECE9  F094         	call	__get_mbr	;wreg free
  9039  01333C  0100               	movlb	0	; () banked
  9040  01333E  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9041  013340  50DE               	movf	postinc2,w,c
  9042  013342  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9043  013344  B4D8               	btfsc	status,2,c
  9044  013346  D002               	goto	l2068
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  9048  013348  0E00               	movlw	0
  9049                           
  9050                           ; BSR set to: 0
  9051  01334A  0012               	return	
  9052  01334C                     l2068:
  9053                           
  9054                           ; BSR set to: 0
  9055                           
  9056                           ; BSR set to: 0
  9057  01334C  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9058  01334E  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9059  013350  D7E5               	goto	l16462
  9060  013352                     u15670:
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  9064                           
  9065                           ; BSR set to: 0
  9066  013352  0E00               	movlw	0
  9067  013354  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9068  013356  0E01               	movlw	1
  9069  013358  6F87               	movwf	flash_sector_read@page& (0+255),b
  9070  01335A  0E00               	movlw	low _buffer
  9071  01335C  6F89               	movwf	flash_sector_read@data& (0+255),b
  9072  01335E  0E0A               	movlw	high _buffer
  9073  013360  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9074  013362  ECC9  F0AE         	call	_flash_sector_read	;wreg free
  9075                           
  9076                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9077  013366  0E00               	movlw	0
  9078  013368  0100               	movlb	0	; () banked
  9079  01336A  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9080  01336C  0E00               	movlw	0
  9081  01336E  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9082  013370                     l16480:
  9083                           
  9084                           ; BSR set to: 0
  9085  013370  0E02               	movlw	2
  9086  013372  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9087  013374  B0D8               	btfsc	status,0,c
  9088  013376  D017               	goto	u15700
  9089                           
  9090                           ; BSR set to: 0
  9091                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9092                           
  9093                           ; BSR set to: 0
  9094                           
  9095                           ; BSR set to: 0
  9096  013378  0E00               	movlw	low _buffer
  9097  01337A  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9098  01337C  6ED9               	movwf	fsr2l,c
  9099  01337E  0E0A               	movlw	high _buffer
  9100  013380  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9101  013382  6EDA               	movwf	fsr2h,c
  9102  013384  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9103  013388  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9104  01338C  ECA2  F06D         	call	__get_fbr	;wreg free
  9105  013390  0100               	movlb	0	; () banked
  9106  013392  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9107  013394  50DE               	movf	postinc2,w,c
  9108  013396  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9109  013398  B4D8               	btfsc	status,2,c
  9110  01339A  D002               	goto	l2072
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9114  01339C  0E00               	movlw	0
  9115                           
  9116                           ; BSR set to: 0
  9117  01339E  0012               	return	
  9118  0133A0                     l2072:
  9119                           
  9120                           ; BSR set to: 0
  9121                           
  9122                           ; BSR set to: 0
  9123  0133A0  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9124  0133A2  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9125  0133A4  D7E5               	goto	l16480
  9126  0133A6                     u15700:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9130                           
  9131                           ; BSR set to: 0
  9132  0133A6  0E01               	movlw	1
  9133  0133A8  0012               	return	
  9134  0133AA                     __end_of_fat_get_format_status:
  9135                           	opt stack 0
  9136                           tblptru	equ	0xFF8
  9137                           tblptrh	equ	0xFF7
  9138                           tblptrl	equ	0xFF6
  9139                           tablat	equ	0xFF5
  9140                           prodh	equ	0xFF4
  9141                           prodl	equ	0xFF3
  9142                           postinc0	equ	0xFEE
  9143                           wreg	equ	0xFE8
  9144                           postdec1	equ	0xFE5
  9145                           fsr1h	equ	0xFE2
  9146                           fsr1l	equ	0xFE1
  9147                           indf2	equ	0xFDF
  9148                           postinc2	equ	0xFDE
  9149                           fsr2h	equ	0xFDA
  9150                           fsr2l	equ	0xFD9
  9151                           status	equ	0xFD8
  9152                           
  9153 ;; *************** function __get_mbr *****************
  9154 ;; Defined at:
  9155 ;;		line 1038 in file "fat16.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;  idx             2    0[BANK0 ] unsigned int 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      unsigned char 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;Total ram usage:        4 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:   10
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_fat_get_format_status
  9180 ;;		_fat_restore_mbr_fbr
  9181 ;;		_fat_format
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text18
  9186  0129D2                     __ptext18:
  9187                           	opt stack 0
  9188  0129D2                     __get_mbr:
  9189                           	opt stack 17
  9190                           
  9191                           ;fat16.c: 1040: switch (idx)
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;incstack = 0
  9195  0129D2  D026               	goto	l1940
  9196  0129D4                     
  9197                           ;fat16.c: 1043: return 0x80;
  9198  0129D4  0E80               	movlw	128
  9199  0129D6  0012               	return	
  9200  0129D8                     
  9201                           ;fat16.c: 1045: return 0;
  9202  0129D8  0E00               	movlw	0
  9203  0129DA  0012               	return	
  9204  0129DC                     
  9205                           ;fat16.c: 1047: return 2;
  9206  0129DC  0E02               	movlw	2
  9207  0129DE  0012               	return	
  9208  0129E0                     
  9209                           ;fat16.c: 1049: return 0;
  9210  0129E0  0E00               	movlw	0
  9211  0129E2  0012               	return	
  9212  0129E4                     
  9213                           ;fat16.c: 1051: return 0x04;
  9214  0129E4  0E04               	movlw	4
  9215  0129E6  0012               	return	
  9216  0129E8                     
  9217                           ;fat16.c: 1053: return 2;
  9218  0129E8  0E02               	movlw	2
  9219  0129EA  0012               	return	
  9220  0129EC                     
  9221                           ;fat16.c: 1055: return 3;
  9222  0129EC  0E03               	movlw	3
  9223  0129EE  0012               	return	
  9224  0129F0                     
  9225                           ;fat16.c: 1057: return 8;
  9226  0129F0  0E08               	movlw	8
  9227  0129F2  0012               	return	
  9228  0129F4                     
  9229                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9230  0129F4  0E01               	movlw	1
  9231  0129F6  0012               	return	
  9232  0129F8                     
  9233                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9234  0129F8  0E00               	movlw	0
  9235  0129FA  0012               	return	
  9236  0129FC                     
  9237                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9238  0129FC  0E00               	movlw	0
  9239  0129FE  0012               	return	
  9240  012A00                     
  9241                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9242  012A00  0E00               	movlw	0
  9243  012A02  0012               	return	
  9244  012A04                     
  9245                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9246  012A04  0EFF               	movlw	255
  9247  012A06  0012               	return	
  9248  012A08                     
  9249                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9250  012A08  0E1F               	movlw	31
  9251  012A0A  0012               	return	
  9252  012A0C                     
  9253                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9254  012A0C  0E00               	movlw	0
  9255  012A0E  0012               	return	
  9256  012A10                     
  9257                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9258  012A10  0E00               	movlw	0
  9259  012A12  0012               	return	
  9260  012A14                     
  9261                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9262  012A14  0E55               	movlw	85
  9263  012A16  0012               	return	
  9264  012A18                     
  9265                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9266  012A18  0EAA               	movlw	170
  9267  012A1A  0012               	return	
  9268  012A1C                     
  9269                           ;fat16.c: 1079: return 0X00;
  9270  012A1C  0E00               	movlw	0
  9271                           
  9272                           ;fat16.c: 1080: }
  9273  012A1E  0012               	return	
  9274  012A20                     l1940:
  9275  012A20  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9276  012A24  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9277                           
  9278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9279                           ; Switch size 1, requested type "space"
  9280                           ; Number of cases is 1, Range of values is 1 to 1
  9281                           ; switch strategies available:
  9282                           ; Name         Instructions Cycles
  9283                           ; simple_byte            4     3 (average)
  9284                           ;	Chosen strategy is simple_byte
  9285  012A28  0100               	movlb	0	; () banked
  9286  012A2A  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9287  012A2C  0A01               	xorlw	1	; case 1
  9288  012A2E  A4D8               	btfss	status,2,c
  9289  012A30  D7F5               	goto	l1960
  9290                           
  9291                           ; BSR set to: 0
  9292                           ; Switch size 1, requested type "space"
  9293                           ; Number of cases is 18, Range of values is 190 to 255
  9294                           ; switch strategies available:
  9295                           ; Name         Instructions Cycles
  9296                           ; simple_byte           55    28 (average)
  9297                           ;	Chosen strategy is simple_byte
  9298  012A32  5162               	movf	??__get_mbr& (0+255),w,b
  9299  012A34  0ABE               	xorlw	190	; case 190
  9300  012A36  B4D8               	btfsc	status,2,c
  9301  012A38  D7CD               	goto	l1941
  9302  012A3A  0A01               	xorlw	1	; case 191
  9303  012A3C  B4D8               	btfsc	status,2,c
  9304  012A3E  D7CC               	goto	l1943
  9305  012A40  0A7F               	xorlw	127	; case 192
  9306  012A42  B4D8               	btfsc	status,2,c
  9307  012A44  D7CB               	goto	l1944
  9308  012A46  0A01               	xorlw	1	; case 193
  9309  012A48  B4D8               	btfsc	status,2,c
  9310  012A4A  D7CA               	goto	l1945
  9311  012A4C  0A03               	xorlw	3	; case 194
  9312  012A4E  B4D8               	btfsc	status,2,c
  9313  012A50  D7C9               	goto	l1946
  9314  012A52  0A01               	xorlw	1	; case 195
  9315  012A54  B4D8               	btfsc	status,2,c
  9316  012A56  D7C8               	goto	l1947
  9317  012A58  0A07               	xorlw	7	; case 196
  9318  012A5A  B4D8               	btfsc	status,2,c
  9319  012A5C  D7C7               	goto	l1948
  9320  012A5E  0A01               	xorlw	1	; case 197
  9321  012A60  B4D8               	btfsc	status,2,c
  9322  012A62  D7C6               	goto	l1949
  9323  012A64  0A03               	xorlw	3	; case 198
  9324  012A66  B4D8               	btfsc	status,2,c
  9325  012A68  D7C5               	goto	l1950
  9326  012A6A  0A01               	xorlw	1	; case 199
  9327  012A6C  B4D8               	btfsc	status,2,c
  9328  012A6E  D7C4               	goto	l1951
  9329  012A70  0A0F               	xorlw	15	; case 200
  9330  012A72  B4D8               	btfsc	status,2,c
  9331  012A74  D7C3               	goto	l1952
  9332  012A76  0A01               	xorlw	1	; case 201
  9333  012A78  B4D8               	btfsc	status,2,c
  9334  012A7A  D7C2               	goto	l1953
  9335  012A7C  0A03               	xorlw	3	; case 202
  9336  012A7E  B4D8               	btfsc	status,2,c
  9337  012A80  D7C1               	goto	l1954
  9338  012A82  0A01               	xorlw	1	; case 203
  9339  012A84  B4D8               	btfsc	status,2,c
  9340  012A86  D7C0               	goto	l1955
  9341  012A88  0A07               	xorlw	7	; case 204
  9342  012A8A  B4D8               	btfsc	status,2,c
  9343  012A8C  D7BF               	goto	l1956
  9344  012A8E  0A01               	xorlw	1	; case 205
  9345  012A90  B4D8               	btfsc	status,2,c
  9346  012A92  D7BE               	goto	l1957
  9347  012A94  0A33               	xorlw	51	; case 254
  9348  012A96  B4D8               	btfsc	status,2,c
  9349  012A98  D7BD               	goto	l1958
  9350  012A9A  0A01               	xorlw	1	; case 255
  9351  012A9C  B4D8               	btfsc	status,2,c
  9352  012A9E  D7BC               	goto	l1959
  9353  012AA0  D7BD               	goto	l1960
  9354  012AA2                     __end_of__get_mbr:
  9355                           	opt stack 0
  9356                           tblptru	equ	0xFF8
  9357                           tblptrh	equ	0xFF7
  9358                           tblptrl	equ	0xFF6
  9359                           tablat	equ	0xFF5
  9360                           prodh	equ	0xFF4
  9361                           prodl	equ	0xFF3
  9362                           postinc0	equ	0xFEE
  9363                           wreg	equ	0xFE8
  9364                           postdec1	equ	0xFE5
  9365                           fsr1h	equ	0xFE2
  9366                           fsr1l	equ	0xFE1
  9367                           indf2	equ	0xFDF
  9368                           postinc2	equ	0xFDE
  9369                           fsr2h	equ	0xFDA
  9370                           fsr2l	equ	0xFD9
  9371                           status	equ	0xFD8
  9372                           
  9373 ;; *************** function __get_fbr *****************
  9374 ;; Defined at:
  9375 ;;		line 1083 in file "fat16.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  idx             2    0[BANK0 ] unsigned int 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      unsigned char 
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9393 ;;Total ram usage:        4 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:   10
  9396 ;; This function calls:
  9397 ;;		Nothing
  9398 ;; This function is called by:
  9399 ;;		_fat_get_format_status
  9400 ;;		_fat_restore_mbr_fbr
  9401 ;;		_fat_format
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405                           	psect	text19
  9406  00DB44                     __ptext19:
  9407                           	opt stack 0
  9408  00DB44                     __get_fbr:
  9409                           	opt stack 17
  9410                           
  9411                           ;fat16.c: 1085: switch (idx)
  9412                           
  9413                           ;incstack = 0
  9414  00DB44  D098               	goto	l1964
  9415  00DB46                     
  9416                           ;fat16.c: 1088: return 0xEB;
  9417  00DB46  0EEB               	movlw	235
  9418  00DB48  0012               	return	
  9419  00DB4A                     
  9420                           ;fat16.c: 1090: return 0x3C;
  9421  00DB4A  0E3C               	movlw	60
  9422  00DB4C  0012               	return	
  9423  00DB4E                     
  9424                           ;fat16.c: 1092: return 0x90;
  9425  00DB4E  0E90               	movlw	144
  9426  00DB50  0012               	return	
  9427  00DB52                     
  9428                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9429  00DB52  0E20               	movlw	low STR_7
  9430  00DB54  6EF6               	movwf	tblptrl,c
  9431  00DB56                     	if	1	;There is more than 1 active tblptr byte
  9432  00DB56  0EA3               	movlw	high STR_7
  9433  00DB58  6EF7               	movwf	tblptrh,c
  9434  00DB5A                     	endif
  9435  00DB5A                     	if	1	;There are 3 active tblptr bytes
  9436  00DB5A  0E00               	movlw	low (STR_7 shr (0+16))
  9437  00DB5C  6EF8               	movwf	tblptru,c
  9438  00DB5E                     	endif
  9439  00DB5E  0008               	tblrd		*
  9440  00DB60  50F5               	movf	tablat,w,c
  9441  00DB62  0012               	return	
  9442  00DB64                     
  9443                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9444  00DB64  0E21               	movlw	low (STR_7+1)
  9445  00DB66  6EF6               	movwf	tblptrl,c
  9446  00DB68  0EA3               	movlw	high (STR_7+1)
  9447  00DB6A  6EF7               	movwf	tblptrh,c
  9448  00DB6C                     	if	0	;tblptru may be non-zero
  9449  00DB6C                     	endif
  9450  00DB6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9451  00DB6C  0E00               	movlw	low (__mediumconst shr (0+16))
  9452  00DB6E  6EF8               	movwf	tblptru,c
  9453  00DB70                     	endif
  9454  00DB70  0008               	tblrd		*
  9455  00DB72  50F5               	movf	tablat,w,c
  9456  00DB74  0012               	return	
  9457  00DB76                     
  9458                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9459  00DB76  0E22               	movlw	low (STR_7+2)
  9460  00DB78  6EF6               	movwf	tblptrl,c
  9461  00DB7A  0EA3               	movlw	high (STR_7+2)
  9462  00DB7C  6EF7               	movwf	tblptrh,c
  9463  00DB7E                     	if	0	;tblptru may be non-zero
  9464  00DB7E                     	endif
  9465  00DB7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9466  00DB7E  0E00               	movlw	low (__mediumconst shr (0+16))
  9467  00DB80  6EF8               	movwf	tblptru,c
  9468  00DB82                     	endif
  9469  00DB82  0008               	tblrd		*
  9470  00DB84  50F5               	movf	tablat,w,c
  9471  00DB86  0012               	return	
  9472  00DB88                     
  9473                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9474  00DB88  0E23               	movlw	low (STR_7+3)
  9475  00DB8A  6EF6               	movwf	tblptrl,c
  9476  00DB8C  0EA3               	movlw	high (STR_7+3)
  9477  00DB8E  6EF7               	movwf	tblptrh,c
  9478  00DB90                     	if	0	;tblptru may be non-zero
  9479  00DB90                     	endif
  9480  00DB90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9481  00DB90  0E00               	movlw	low (__mediumconst shr (0+16))
  9482  00DB92  6EF8               	movwf	tblptru,c
  9483  00DB94                     	endif
  9484  00DB94  0008               	tblrd		*
  9485  00DB96  50F5               	movf	tablat,w,c
  9486  00DB98  0012               	return	
  9487  00DB9A                     
  9488                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9489  00DB9A  0E24               	movlw	low (STR_7+4)
  9490  00DB9C  6EF6               	movwf	tblptrl,c
  9491  00DB9E  0EA3               	movlw	high (STR_7+4)
  9492  00DBA0  6EF7               	movwf	tblptrh,c
  9493  00DBA2                     	if	0	;tblptru may be non-zero
  9494  00DBA2                     	endif
  9495  00DBA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9496  00DBA2  0E00               	movlw	low (__mediumconst shr (0+16))
  9497  00DBA4  6EF8               	movwf	tblptru,c
  9498  00DBA6                     	endif
  9499  00DBA6  0008               	tblrd		*
  9500  00DBA8  50F5               	movf	tablat,w,c
  9501  00DBAA  0012               	return	
  9502  00DBAC                     
  9503                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9504  00DBAC  0E25               	movlw	low (STR_7+5)
  9505  00DBAE  6EF6               	movwf	tblptrl,c
  9506  00DBB0  0EA3               	movlw	high (STR_7+5)
  9507  00DBB2  6EF7               	movwf	tblptrh,c
  9508  00DBB4                     	if	0	;tblptru may be non-zero
  9509  00DBB4                     	endif
  9510  00DBB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9511  00DBB4  0E00               	movlw	low (__mediumconst shr (0+16))
  9512  00DBB6  6EF8               	movwf	tblptru,c
  9513  00DBB8                     	endif
  9514  00DBB8  0008               	tblrd		*
  9515  00DBBA  50F5               	movf	tablat,w,c
  9516  00DBBC  0012               	return	
  9517  00DBBE                     
  9518                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9519  00DBBE  0E26               	movlw	low (STR_7+6)
  9520  00DBC0  6EF6               	movwf	tblptrl,c
  9521  00DBC2  0EA3               	movlw	high (STR_7+6)
  9522  00DBC4  6EF7               	movwf	tblptrh,c
  9523  00DBC6                     	if	0	;tblptru may be non-zero
  9524  00DBC6                     	endif
  9525  00DBC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9526  00DBC6  0E00               	movlw	low (__mediumconst shr (0+16))
  9527  00DBC8  6EF8               	movwf	tblptru,c
  9528  00DBCA                     	endif
  9529  00DBCA  0008               	tblrd		*
  9530  00DBCC  50F5               	movf	tablat,w,c
  9531  00DBCE  0012               	return	
  9532  00DBD0                     
  9533                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9534  00DBD0  0E27               	movlw	low (STR_7+7)
  9535  00DBD2  6EF6               	movwf	tblptrl,c
  9536  00DBD4  0EA3               	movlw	high (STR_7+7)
  9537  00DBD6  6EF7               	movwf	tblptrh,c
  9538  00DBD8                     	if	0	;tblptru may be non-zero
  9539  00DBD8                     	endif
  9540  00DBD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9541  00DBD8  0E00               	movlw	low (__mediumconst shr (0+16))
  9542  00DBDA  6EF8               	movwf	tblptru,c
  9543  00DBDC                     	endif
  9544  00DBDC  0008               	tblrd		*
  9545  00DBDE  50F5               	movf	tablat,w,c
  9546  00DBE0  0012               	return	
  9547  00DBE2                     
  9548                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9549  00DBE2  0E00               	movlw	0
  9550  00DBE4  0012               	return	
  9551  00DBE6                     
  9552                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9553  00DBE6  0E02               	movlw	2
  9554  00DBE8  0012               	return	
  9555  00DBEA                     
  9556                           ;fat16.c: 1114: return 1;
  9557  00DBEA  0E01               	movlw	1
  9558  00DBEC  0012               	return	
  9559  00DBEE                     
  9560                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9561  00DBEE  0E01               	movlw	1
  9562  00DBF0  0012               	return	
  9563  00DBF2                     
  9564                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9565  00DBF2  0E00               	movlw	0
  9566  00DBF4  0012               	return	
  9567  00DBF6                     
  9568                           ;fat16.c: 1120: return 1;
  9569  00DBF6  0E01               	movlw	1
  9570  00DBF8  0012               	return	
  9571  00DBFA                     
  9572                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9573  00DBFA  0E40               	movlw	64
  9574  00DBFC  0012               	return	
  9575  00DBFE                     
  9576                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9577  00DBFE  0E00               	movlw	0
  9578  00DC00  0012               	return	
  9579  00DC02                     
  9580                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9581  00DC02  0EFF               	movlw	255
  9582  00DC04  0012               	return	
  9583  00DC06                     
  9584                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9585  00DC06  0E1F               	movlw	31
  9586  00DC08  0012               	return	
  9587  00DC0A                     
  9588                           ;fat16.c: 1130: return 0XF8;
  9589  00DC0A  0EF8               	movlw	248
  9590  00DC0C  0012               	return	
  9591  00DC0E                     
  9592                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9593  00DC0E  0E20               	movlw	32
  9594  00DC10  0012               	return	
  9595  00DC12                     
  9596                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9597  00DC12  0E00               	movlw	0
  9598  00DC14  0012               	return	
  9599  00DC16                     
  9600                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9601  00DC16  0E3F               	movlw	63
  9602  00DC18  0012               	return	
  9603  00DC1A                     
  9604                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9605  00DC1A  0E00               	movlw	0
  9606  00DC1C  0012               	return	
  9607  00DC1E                     
  9608                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9609  00DC1E  0E10               	movlw	16
  9610  00DC20  0012               	return	
  9611  00DC22                     
  9612                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9613  00DC22  0E00               	movlw	0
  9614  00DC24  0012               	return	
  9615  00DC26                     
  9616                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9617  00DC26  0E00               	movlw	0
  9618  00DC28  0012               	return	
  9619  00DC2A                     
  9620                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9621  00DC2A  0E00               	movlw	0
  9622  00DC2C  0012               	return	
  9623  00DC2E                     
  9624                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9625  00DC2E  0E00               	movlw	0
  9626  00DC30  0012               	return	
  9627  00DC32                     
  9628                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9629  00DC32  0E00               	movlw	0
  9630  00DC34  0012               	return	
  9631  00DC36                     
  9632                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9633  00DC36  0E01               	movlw	1
  9634  00DC38  0012               	return	
  9635  00DC3A                     
  9636                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9637  00DC3A  0E00               	movlw	0
  9638  00DC3C  0012               	return	
  9639  00DC3E                     
  9640                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9641  00DC3E  0E22               	movlw	34
  9642  00DC40  0012               	return	
  9643  00DC42                     
  9644                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9645  00DC42  0E00               	movlw	0
  9646  00DC44  0012               	return	
  9647  00DC46                     
  9648                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9649                           
  9650                           ;fat16.c: 1161: case 0x2F:
  9651  00DC46  0E00               	movlw	0
  9652  00DC48  0012               	return	
  9653  00DC4A                     
  9654                           ;fat16.c: 1164: return 'F';
  9655  00DC4A  0E46               	movlw	70
  9656  00DC4C  0012               	return	
  9657  00DC4E                     
  9658                           ;fat16.c: 1166: return 'A';
  9659  00DC4E  0E41               	movlw	65
  9660  00DC50  0012               	return	
  9661  00DC52                     
  9662                           ;fat16.c: 1168: return 'T';
  9663  00DC52  0E54               	movlw	84
  9664  00DC54  0012               	return	
  9665  00DC56                     
  9666                           ;fat16.c: 1170: return '1';
  9667  00DC56  0E31               	movlw	49
  9668  00DC58  0012               	return	
  9669  00DC5A                     
  9670                           ;fat16.c: 1172: return '6';
  9671  00DC5A  0E36               	movlw	54
  9672  00DC5C  0012               	return	
  9673  00DC5E                     
  9674                           ;fat16.c: 1174: return ' ';
  9675  00DC5E  0E20               	movlw	32
  9676  00DC60  0012               	return	
  9677  00DC62                     
  9678                           ;fat16.c: 1176: return ' ';
  9679  00DC62  0E20               	movlw	32
  9680  00DC64  0012               	return	
  9681  00DC66                     
  9682                           ;fat16.c: 1178: return ' ';
  9683  00DC66  0E20               	movlw	32
  9684  00DC68  0012               	return	
  9685  00DC6A                     
  9686                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9687  00DC6A  0E55               	movlw	85
  9688  00DC6C  0012               	return	
  9689  00DC6E                     
  9690                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9691  00DC6E  0EAA               	movlw	170
  9692  00DC70  0012               	return	
  9693  00DC72                     
  9694                           ;fat16.c: 1184: return 0X00;
  9695  00DC72  0E00               	movlw	0
  9696                           
  9697                           ;fat16.c: 1185: }
  9698  00DC74  0012               	return	
  9699  00DC76                     l1964:
  9700  00DC76  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9701  00DC7A  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9702                           
  9703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9704                           ; Switch size 1, requested type "space"
  9705                           ; Number of cases is 2, Range of values is 0 to 1
  9706                           ; switch strategies available:
  9707                           ; Name         Instructions Cycles
  9708                           ; simple_byte            7     4 (average)
  9709                           ;	Chosen strategy is simple_byte
  9710  00DC7E  0100               	movlb	0	; () banked
  9711  00DC80  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9712  00DC82  0A00               	xorlw	0	; case 0
  9713  00DC84  B4D8               	btfsc	status,2,c
  9714  00DC86  D004               	goto	l20142
  9715  00DC88  0A01               	xorlw	1	; case 1
  9716  00DC8A  B4D8               	btfsc	status,2,c
  9717  00DC8C  D08D               	goto	l20144
  9718  00DC8E  D7F1               	goto	l2014
  9719  00DC90                     l20142:
  9720                           
  9721                           ; BSR set to: 0
  9722                           ; Switch size 1, requested type "space"
  9723                           ; Number of cases is 46, Range of values is 0 to 61
  9724                           ; switch strategies available:
  9725                           ; Name         Instructions Cycles
  9726                           ; simple_byte          139    70 (average)
  9727                           ;	Chosen strategy is simple_byte
  9728  00DC90  5162               	movf	??__get_fbr& (0+255),w,b
  9729  00DC92  0A00               	xorlw	0	; case 0
  9730  00DC94  B4D8               	btfsc	status,2,c
  9731  00DC96  D757               	goto	l1965
  9732  00DC98  0A01               	xorlw	1	; case 1
  9733  00DC9A  B4D8               	btfsc	status,2,c
  9734  00DC9C  D756               	goto	l1967
  9735  00DC9E  0A03               	xorlw	3	; case 2
  9736  00DCA0  B4D8               	btfsc	status,2,c
  9737  00DCA2  D755               	goto	l1968
  9738  00DCA4  0A01               	xorlw	1	; case 3
  9739  00DCA6  B4D8               	btfsc	status,2,c
  9740  00DCA8  D754               	goto	l1969
  9741  00DCAA  0A07               	xorlw	7	; case 4
  9742  00DCAC  B4D8               	btfsc	status,2,c
  9743  00DCAE  D75A               	goto	l1970
  9744  00DCB0  0A01               	xorlw	1	; case 5
  9745  00DCB2  B4D8               	btfsc	status,2,c
  9746  00DCB4  D760               	goto	l1971
  9747  00DCB6  0A03               	xorlw	3	; case 6
  9748  00DCB8  B4D8               	btfsc	status,2,c
  9749  00DCBA  D766               	goto	l1972
  9750  00DCBC  0A01               	xorlw	1	; case 7
  9751  00DCBE  B4D8               	btfsc	status,2,c
  9752  00DCC0  D76C               	goto	l1973
  9753  00DCC2  0A0F               	xorlw	15	; case 8
  9754  00DCC4  B4D8               	btfsc	status,2,c
  9755  00DCC6  D772               	goto	l1974
  9756  00DCC8  0A01               	xorlw	1	; case 9
  9757  00DCCA  B4D8               	btfsc	status,2,c
  9758  00DCCC  D778               	goto	l1975
  9759  00DCCE  0A03               	xorlw	3	; case 10
  9760  00DCD0  B4D8               	btfsc	status,2,c
  9761  00DCD2  D77E               	goto	l1976
  9762  00DCD4  0A01               	xorlw	1	; case 11
  9763  00DCD6  B4D8               	btfsc	status,2,c
  9764  00DCD8  D784               	goto	l1977
  9765  00DCDA  0A07               	xorlw	7	; case 12
  9766  00DCDC  B4D8               	btfsc	status,2,c
  9767  00DCDE  D783               	goto	l1978
  9768  00DCE0  0A01               	xorlw	1	; case 13
  9769  00DCE2  B4D8               	btfsc	status,2,c
  9770  00DCE4  D782               	goto	l1979
  9771  00DCE6  0A03               	xorlw	3	; case 14
  9772  00DCE8  B4D8               	btfsc	status,2,c
  9773  00DCEA  D781               	goto	l1980
  9774  00DCEC  0A01               	xorlw	1	; case 15
  9775  00DCEE  B4D8               	btfsc	status,2,c
  9776  00DCF0  D780               	goto	l1981
  9777  00DCF2  0A1F               	xorlw	31	; case 16
  9778  00DCF4  B4D8               	btfsc	status,2,c
  9779  00DCF6  D77F               	goto	l1982
  9780  00DCF8  0A01               	xorlw	1	; case 17
  9781  00DCFA  B4D8               	btfsc	status,2,c
  9782  00DCFC  D77E               	goto	l1983
  9783  00DCFE  0A03               	xorlw	3	; case 18
  9784  00DD00  B4D8               	btfsc	status,2,c
  9785  00DD02  D77D               	goto	l1984
  9786  00DD04  0A01               	xorlw	1	; case 19
  9787  00DD06  B4D8               	btfsc	status,2,c
  9788  00DD08  D77C               	goto	l1985
  9789  00DD0A  0A07               	xorlw	7	; case 20
  9790  00DD0C  B4D8               	btfsc	status,2,c
  9791  00DD0E  D77B               	goto	l1986
  9792  00DD10  0A01               	xorlw	1	; case 21
  9793  00DD12  B4D8               	btfsc	status,2,c
  9794  00DD14  D77A               	goto	l1987
  9795  00DD16  0A03               	xorlw	3	; case 22
  9796  00DD18  B4D8               	btfsc	status,2,c
  9797  00DD1A  D779               	goto	l1988
  9798  00DD1C  0A01               	xorlw	1	; case 23
  9799  00DD1E  B4D8               	btfsc	status,2,c
  9800  00DD20  D778               	goto	l1989
  9801  00DD22  0A0F               	xorlw	15	; case 24
  9802  00DD24  B4D8               	btfsc	status,2,c
  9803  00DD26  D777               	goto	l1990
  9804  00DD28  0A01               	xorlw	1	; case 25
  9805  00DD2A  B4D8               	btfsc	status,2,c
  9806  00DD2C  D776               	goto	l1991
  9807  00DD2E  0A03               	xorlw	3	; case 26
  9808  00DD30  B4D8               	btfsc	status,2,c
  9809  00DD32  D775               	goto	l1992
  9810  00DD34  0A01               	xorlw	1	; case 27
  9811  00DD36  B4D8               	btfsc	status,2,c
  9812  00DD38  D774               	goto	l1993
  9813  00DD3A  0A07               	xorlw	7	; case 28
  9814  00DD3C  B4D8               	btfsc	status,2,c
  9815  00DD3E  D773               	goto	l1994
  9816  00DD40  0A01               	xorlw	1	; case 29
  9817  00DD42  B4D8               	btfsc	status,2,c
  9818  00DD44  D772               	goto	l1995
  9819  00DD46  0A03               	xorlw	3	; case 30
  9820  00DD48  B4D8               	btfsc	status,2,c
  9821  00DD4A  D771               	goto	l1996
  9822  00DD4C  0A01               	xorlw	1	; case 31
  9823  00DD4E  B4D8               	btfsc	status,2,c
  9824  00DD50  D770               	goto	l1997
  9825  00DD52  0A37               	xorlw	55	; case 40
  9826  00DD54  B4D8               	btfsc	status,2,c
  9827  00DD56  D76F               	goto	l1998
  9828  00DD58  0A01               	xorlw	1	; case 41
  9829  00DD5A  B4D8               	btfsc	status,2,c
  9830  00DD5C  D76E               	goto	l1999
  9831  00DD5E  0A05               	xorlw	5	; case 44
  9832  00DD60  B4D8               	btfsc	status,2,c
  9833  00DD62  D76D               	goto	l2000
  9834  00DD64  0A01               	xorlw	1	; case 45
  9835  00DD66  B4D8               	btfsc	status,2,c
  9836  00DD68  D76C               	goto	l2001
  9837  00DD6A  0A03               	xorlw	3	; case 46
  9838  00DD6C  B4D8               	btfsc	status,2,c
  9839  00DD6E  D76B               	goto	l2002
  9840  00DD70  0A01               	xorlw	1	; case 47
  9841  00DD72  B4D8               	btfsc	status,2,c
  9842  00DD74  D768               	goto	l2002
  9843  00DD76  0A19               	xorlw	25	; case 54
  9844  00DD78  B4D8               	btfsc	status,2,c
  9845  00DD7A  D767               	goto	l2004
  9846  00DD7C  0A01               	xorlw	1	; case 55
  9847  00DD7E  B4D8               	btfsc	status,2,c
  9848  00DD80  D766               	goto	l2005
  9849  00DD82  0A0F               	xorlw	15	; case 56
  9850  00DD84  B4D8               	btfsc	status,2,c
  9851  00DD86  D765               	goto	l2006
  9852  00DD88  0A01               	xorlw	1	; case 57
  9853  00DD8A  B4D8               	btfsc	status,2,c
  9854  00DD8C  D764               	goto	l2007
  9855  00DD8E  0A03               	xorlw	3	; case 58
  9856  00DD90  B4D8               	btfsc	status,2,c
  9857  00DD92  D763               	goto	l2008
  9858  00DD94  0A01               	xorlw	1	; case 59
  9859  00DD96  B4D8               	btfsc	status,2,c
  9860  00DD98  D762               	goto	l2009
  9861  00DD9A  0A07               	xorlw	7	; case 60
  9862  00DD9C  B4D8               	btfsc	status,2,c
  9863  00DD9E  D761               	goto	l2010
  9864  00DDA0  0A01               	xorlw	1	; case 61
  9865  00DDA2  B4D8               	btfsc	status,2,c
  9866  00DDA4  D760               	goto	l2011
  9867  00DDA6  D765               	goto	l2014
  9868  00DDA8                     l20144:
  9869                           
  9870                           ; BSR set to: 0
  9871                           ; Switch size 1, requested type "space"
  9872                           ; Number of cases is 2, Range of values is 254 to 255
  9873                           ; switch strategies available:
  9874                           ; Name         Instructions Cycles
  9875                           ; simple_byte            7     4 (average)
  9876                           ;	Chosen strategy is simple_byte
  9877  00DDA8  5162               	movf	??__get_fbr& (0+255),w,b
  9878  00DDAA  0AFE               	xorlw	254	; case 254
  9879  00DDAC  B4D8               	btfsc	status,2,c
  9880  00DDAE  D75D               	goto	l2012
  9881  00DDB0  0A01               	xorlw	1	; case 255
  9882  00DDB2  B4D8               	btfsc	status,2,c
  9883  00DDB4  D75C               	goto	l2013
  9884  00DDB6  D75D               	goto	l2014
  9885  00DDB8                     __end_of__get_fbr:
  9886                           	opt stack 0
  9887                           tblptru	equ	0xFF8
  9888                           tblptrh	equ	0xFF7
  9889                           tblptrl	equ	0xFF6
  9890                           tablat	equ	0xFF5
  9891                           prodh	equ	0xFF4
  9892                           prodl	equ	0xFF3
  9893                           postinc0	equ	0xFEE
  9894                           wreg	equ	0xFE8
  9895                           postdec1	equ	0xFE5
  9896                           fsr1h	equ	0xFE2
  9897                           fsr1l	equ	0xFE1
  9898                           indf2	equ	0xFDF
  9899                           postinc2	equ	0xFDE
  9900                           fsr2h	equ	0xFDA
  9901                           fsr2l	equ	0xFD9
  9902                           status	equ	0xFD8
  9903                           
  9904 ;; *************** function _encoder_init *****************
  9905 ;; Defined at:
  9906 ;;		line 92 in file "encoder.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg, status,2, status,0
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9924 ;;Total ram usage:        0 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:   10
  9927 ;; This function calls:
  9928 ;;		Nothing
  9929 ;; This function is called by:
  9930 ;;		_system_init
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text20
  9935  015E2E                     __ptext20:
  9936                           	opt stack 0
  9937  015E2E                     _encoder_init:
  9938                           	opt stack 19
  9939                           
  9940                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9941                           
  9942                           ;incstack = 0
  9943  015E2E  5084               	movf	3972,w,c	;volatile
  9944  015E30  0B07               	andlw	7
  9945  015E32  0101               	movlb	1	; () banked
  9946  015E34  6F48               	movwf	_enc1& (0+255),b
  9947                           
  9948                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9949  015E36  5080               	movf	3968,w,c	;volatile
  9950  015E38  0B07               	andlw	7
  9951  015E3A  6F47               	movwf	_enc2& (0+255),b
  9952                           
  9953                           ; BSR set to: 1
  9954                           ;encoder.c: 96: os.encoder1Count = 0;
  9955  015E3C  0E00               	movlw	0
  9956  015E3E  6F68               	movwf	(_os+3)& (0+255),b	;volatile
  9957                           
  9958                           ; BSR set to: 1
  9959                           ;encoder.c: 97: os.encoder2Count = 0;
  9960  015E40  0E00               	movlw	0
  9961  015E42  6F6A               	movwf	(_os+5)& (0+255),b	;volatile
  9962                           
  9963                           ; BSR set to: 1
  9964                           ;encoder.c: 98: os.button1 = 0;
  9965  015E44  0E00               	movlw	0
  9966  015E46  6F69               	movwf	(_os+4)& (0+255),b	;volatile
  9967                           
  9968                           ; BSR set to: 1
  9969                           ;encoder.c: 99: os.button2 = 0;
  9970  015E48  0E00               	movlw	0
  9971  015E4A  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
  9972                           
  9973                           ; BSR set to: 1
  9974                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9975  015E4C  0E01               	movlw	1
  9976  015E4E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
  9977                           
  9978                           ; BSR set to: 1
  9979  015E50  0012               	return		;funcret
  9980  015E52                     __end_of_encoder_init:
  9981                           	opt stack 0
  9982                           tblptru	equ	0xFF8
  9983                           tblptrh	equ	0xFF7
  9984                           tblptrl	equ	0xFF6
  9985                           tablat	equ	0xFF5
  9986                           prodh	equ	0xFF4
  9987                           prodl	equ	0xFF3
  9988                           postinc0	equ	0xFEE
  9989                           wreg	equ	0xFE8
  9990                           postdec1	equ	0xFE5
  9991                           fsr1h	equ	0xFE2
  9992                           fsr1l	equ	0xFE1
  9993                           indf2	equ	0xFDF
  9994                           postinc2	equ	0xFDE
  9995                           fsr2h	equ	0xFDA
  9996                           fsr2l	equ	0xFD9
  9997                           status	equ	0xFD8
  9998                           
  9999 ;; *************** function _display_update *****************
 10000 ;; Defined at:
 10001 ;;		line 636 in file "display.c"
 10002 ;; Parameters:    Size  Location     Type
 10003 ;;		None
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;  line            1   16[BANK0 ] unsigned char 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      void 
 10008 ;; Registers used:
 10009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10018 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10019 ;;Total ram usage:        1 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:   14
 10022 ;; This function calls:
 10023 ;;		_i2c_display_cursor
 10024 ;;		_i2c_display_write_fixed
 10025 ;; This function is called by:
 10026 ;;		_main
 10027 ;;		_system_init
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text21
 10032  01594C                     __ptext21:
 10033                           	opt stack 0
 10034  01594C                     _display_update:
 10035                           	opt stack 15
 10036                           
 10037                           ;display.c: 638: uint8_t line;;display.c: 639: for(line=0; line<4; ++line)
 10038                           
 10039                           ; BSR set to: 1
 10040                           ;incstack = 0
 10041  01594C  0E00               	movlw	0
 10042  01594E  0100               	movlb	0	; () banked
 10043  015950  6F70               	movwf	display_update@line& (0+255),b
 10044  015952                     l17254:
 10045                           
 10046                           ; BSR set to: 0
 10047  015952  0E03               	movlw	3
 10048  015954  6570               	cpfsgt	display_update@line& (0+255),b
 10049  015956  D001               	goto	l1507
 10050  015958  0012               	return	
 10051  01595A                     l1507:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;display.c: 640: {;display.c: 641: i2c_display_cursor(line, 0);
 10055                           
 10056                           ; BSR set to: 0
 10057  01595A  0E00               	movlw	0
 10058  01595C  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10059  01595E  5170               	movf	display_update@line& (0+255),w,b
 10060  015960  EC5F  F0AF         	call	_i2c_display_cursor
 10061                           
 10062                           ;display.c: 642: i2c_display_write_fixed(display_content[line], 20);
 10063  015964  0100               	movlb	0	; () banked
 10064  015966  5170               	movf	display_update@line& (0+255),w,b
 10065  015968  0D14               	mullw	20
 10066  01596A  0E48               	movlw	low _display_content
 10067  01596C  24F3               	addwf	prodl,w,c
 10068  01596E  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10069  015970  0E02               	movlw	high _display_content
 10070  015972  20F4               	addwfc	prodh,w,c
 10071  015974  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10072  015976  0E14               	movlw	20
 10073  015978  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10074  01597A  EC6A  F0A8         	call	_i2c_display_write_fixed	;wreg free
 10075  01597E  0100               	movlb	0	; () banked
 10076  015980  2B70               	incf	display_update@line& (0+255),f,b
 10077  015982  D7E7               	goto	l17254
 10078  015984                     __end_of_display_update:
 10079                           	opt stack 0
 10080                           tblptru	equ	0xFF8
 10081                           tblptrh	equ	0xFF7
 10082                           tblptrl	equ	0xFF6
 10083                           tablat	equ	0xFF5
 10084                           prodh	equ	0xFF4
 10085                           prodl	equ	0xFF3
 10086                           postinc0	equ	0xFEE
 10087                           wreg	equ	0xFE8
 10088                           postdec1	equ	0xFE5
 10089                           fsr1h	equ	0xFE2
 10090                           fsr1l	equ	0xFE1
 10091                           indf2	equ	0xFDF
 10092                           postinc2	equ	0xFDE
 10093                           fsr2h	equ	0xFDA
 10094                           fsr2l	equ	0xFD9
 10095                           status	equ	0xFD8
 10096                           
 10097 ;; *************** function _i2c_display_write_fixed *****************
 10098 ;; Defined at:
 10099 ;;		line 479 in file "i2c.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10102 ;;		 -> display_content(80), 
 10103 ;;  length          1    7[BANK0 ] unsigned char 
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;  pos             1    8[BANK0 ] unsigned char 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  1    wreg      void 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10115 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10116 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10118 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10119 ;;Total ram usage:        4 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:   11
 10122 ;; This function calls:
 10123 ;;		__i2c_send
 10124 ;;		__i2c_start
 10125 ;;		__i2c_stop
 10126 ;;		__i2c_wait_idle
 10127 ;; This function is called by:
 10128 ;;		_display_update
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           	psect	text22
 10133  0150D4                     __ptext22:
 10134                           	opt stack 0
 10135  0150D4                     _i2c_display_write_fixed:
 10136                           	opt stack 17
 10137                           
 10138                           ;i2c.c: 481: uint8_t pos;;i2c.c: 486: _i2c_wait_idle();
 10139                           
 10140                           ; BSR set to: 0
 10141                           ;incstack = 0
 10142  0150D4  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 10143                           
 10144                           ;i2c.c: 487: _i2c_start();
 10145  0150D8  EC80  F0B0         	call	__i2c_start	;wreg free
 10146                           
 10147                           ;i2c.c: 488: _i2c_wait_idle();
 10148  0150DC  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 10149                           
 10150                           ;i2c.c: 489: _i2c_send(0b01111000);
 10151  0150E0  0E78               	movlw	120
 10152  0150E2  EC72  F0B0         	call	__i2c_send
 10153                           
 10154                           ;i2c.c: 490: _i2c_wait_idle();
 10155  0150E6  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 10156                           
 10157                           ;i2c.c: 491: _i2c_send(0b01000000);
 10158  0150EA  0E40               	movlw	64
 10159  0150EC  EC72  F0B0         	call	__i2c_send
 10160                           
 10161                           ;i2c.c: 492: _i2c_wait_idle();
 10162  0150F0  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 10163                           
 10164                           ;i2c.c: 495: for(pos=0; pos<length; ++pos)
 10165  0150F4  0E00               	movlw	0
 10166  0150F6  0100               	movlb	0	; () banked
 10167  0150F8  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10168  0150FA  D00F               	goto	l1260
 10169  0150FC                     
 10170                           ; BSR set to: 0
 10171                           ;i2c.c: 496: {;i2c.c: 497: _i2c_send(data[pos]);
 10172                           
 10173                           ; BSR set to: 0
 10174  0150FC  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10175  0150FE  0D01               	mullw	1
 10176  015100  50F3               	movf	prodl,w,c
 10177  015102  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10178  015104  6ED9               	movwf	fsr2l,c
 10179  015106  50F4               	movf	prodh,w,c
 10180  015108  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10181  01510A  6EDA               	movwf	fsr2h,c
 10182  01510C  50DF               	movf	indf2,w,c
 10183  01510E  EC72  F0B0         	call	__i2c_send
 10184                           
 10185                           ;i2c.c: 498: _i2c_wait_idle();
 10186  015112  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 10187  015116  0100               	movlb	0	; () banked
 10188  015118  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10189  01511A                     l1260:
 10190                           
 10191                           ; BSR set to: 0
 10192                           
 10193                           ; BSR set to: 0
 10194  01511A  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10195  01511C  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10196  01511E  A0D8               	btfss	status,0,c
 10197  015120  D7ED               	goto	l1261
 10198                           
 10199                           ; BSR set to: 0
 10200                           ;i2c.c: 499: };i2c.c: 501: _i2c_stop();
 10201                           
 10202                           ; BSR set to: 0
 10203  015122  EC7C  F0B0         	call	__i2c_stop	;wreg free
 10204  015126  0012               	return		;funcret
 10205  015128                     __end_of_i2c_display_write_fixed:
 10206                           	opt stack 0
 10207                           tblptru	equ	0xFF8
 10208                           tblptrh	equ	0xFF7
 10209                           tblptrl	equ	0xFF6
 10210                           tablat	equ	0xFF5
 10211                           prodh	equ	0xFF4
 10212                           prodl	equ	0xFF3
 10213                           postinc0	equ	0xFEE
 10214                           wreg	equ	0xFE8
 10215                           postdec1	equ	0xFE5
 10216                           fsr1h	equ	0xFE2
 10217                           fsr1l	equ	0xFE1
 10218                           indf2	equ	0xFDF
 10219                           postinc2	equ	0xFDE
 10220                           fsr2h	equ	0xFDA
 10221                           fsr2l	equ	0xFD9
 10222                           status	equ	0xFD8
 10223                           
 10224 ;; *************** function _i2c_display_cursor *****************
 10225 ;; Defined at:
 10226 ;;		line 439 in file "i2c.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  line            1    wreg     unsigned char 
 10229 ;;  position        1   13[BANK0 ] unsigned char 
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;  line            1   14[BANK0 ] unsigned char 
 10232 ;;  address         1   15[BANK0 ] unsigned char 
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  1    wreg      void 
 10235 ;; Registers used:
 10236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10242 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10245 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10246 ;;Total ram usage:        3 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; Hardware stack levels required when called:   13
 10249 ;; This function calls:
 10250 ;;		__ic2_display_set_ddram_address
 10251 ;; This function is called by:
 10252 ;;		_display_update
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text23
 10257  015EBE                     __ptext23:
 10258                           	opt stack 0
 10259  015EBE                     _i2c_display_cursor:
 10260                           	opt stack 15
 10261                           
 10262                           ;incstack = 0
 10263                           ;i2c_display_cursor@line stored from wreg
 10264  015EBE  0100               	movlb	0	; () banked
 10265  015EC0  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10266                           
 10267                           ;i2c.c: 441: uint8_t address;;i2c.c: 444: line &= 0b11;
 10268  015EC2  0E03               	movlw	3
 10269  015EC4  0100               	movlb	0	; () banked
 10270  015EC6  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10271                           
 10272                           ;i2c.c: 445: address = line<<5;
 10273  015EC8  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10274  015ECA  46E8               	rlncf	wreg,f,c
 10275  015ECC  0BE0               	andlw	224
 10276  015ECE  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10277                           
 10278                           ;i2c.c: 446: position &= 0b11111;
 10279  015ED0  0E1F               	movlw	31
 10280  015ED2  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10281                           
 10282                           ;i2c.c: 447: address |= position;
 10283  015ED4  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10284  015ED6  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;i2c.c: 453: _ic2_display_set_ddram_address(address);
 10288  015ED8  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10289  015EDA  EC29  F0AF         	call	__ic2_display_set_ddram_address
 10290  015EDE  0012               	return		;funcret
 10291  015EE0                     __end_of_i2c_display_cursor:
 10292                           	opt stack 0
 10293                           tblptru	equ	0xFF8
 10294                           tblptrh	equ	0xFF7
 10295                           tblptrl	equ	0xFF6
 10296                           tablat	equ	0xFF5
 10297                           prodh	equ	0xFF4
 10298                           prodl	equ	0xFF3
 10299                           postinc0	equ	0xFEE
 10300                           wreg	equ	0xFE8
 10301                           postdec1	equ	0xFE5
 10302                           fsr1h	equ	0xFE2
 10303                           fsr1l	equ	0xFE1
 10304                           indf2	equ	0xFDF
 10305                           postinc2	equ	0xFDE
 10306                           fsr2h	equ	0xFDA
 10307                           fsr2l	equ	0xFD9
 10308                           status	equ	0xFD8
 10309                           
 10310 ;; *************** function __ic2_display_set_ddram_address *****************
 10311 ;; Defined at:
 10312 ;;		line 410 in file "i2c.c"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  address         1    wreg     unsigned char 
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;  address         1   10[BANK0 ] unsigned char 
 10317 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10330 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10331 ;;Total ram usage:        3 bytes
 10332 ;; Hardware stack levels used:    1
 10333 ;; Hardware stack levels required when called:   12
 10334 ;; This function calls:
 10335 ;;		__i2c_write
 10336 ;; This function is called by:
 10337 ;;		_i2c_display_cursor
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text24
 10342  015E52                     __ptext24:
 10343                           	opt stack 0
 10344  015E52                     __ic2_display_set_ddram_address:
 10345                           	opt stack 15
 10346                           
 10347                           ;incstack = 0
 10348                           ;__ic2_display_set_ddram_address@address stored from wreg
 10349  015E52  0100               	movlb	0	; () banked
 10350  015E54  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10351                           
 10352                           ;i2c.c: 412: uint8_t data_array[2];;i2c.c: 413: data_array[0] = 0b00000000;
 10353  015E56  0E00               	movlw	0
 10354  015E58  0100               	movlb	0	; () banked
 10355  015E5A  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;i2c.c: 414: data_array[1] = 0b10000000 | address;
 10359  015E5C  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10360  015E5E  0980               	iorlw	128
 10361  015E60  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;i2c.c: 420: _i2c_write(0b01111000, &data_array[0], 2);
 10365  015E62  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10366  015E64  6F65               	movwf	__i2c_write@data& (0+255),b
 10367  015E66  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10368  015E68  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10369  015E6A  0E02               	movlw	2
 10370  015E6C  6F67               	movwf	__i2c_write@length& (0+255),b
 10371  015E6E  0E78               	movlw	120
 10372  015E70  EC03  F0AA         	call	__i2c_write
 10373  015E74  0012               	return		;funcret
 10374  015E76                     __end_of__ic2_display_set_ddram_address:
 10375                           	opt stack 0
 10376                           tblptru	equ	0xFF8
 10377                           tblptrh	equ	0xFF7
 10378                           tblptrl	equ	0xFF6
 10379                           tablat	equ	0xFF5
 10380                           prodh	equ	0xFF4
 10381                           prodl	equ	0xFF3
 10382                           postinc0	equ	0xFEE
 10383                           wreg	equ	0xFE8
 10384                           postdec1	equ	0xFE5
 10385                           fsr1h	equ	0xFE2
 10386                           fsr1l	equ	0xFE1
 10387                           indf2	equ	0xFDF
 10388                           postinc2	equ	0xFDE
 10389                           fsr2h	equ	0xFDA
 10390                           fsr2l	equ	0xFD9
 10391                           status	equ	0xFD8
 10392                           
 10393 ;; *************** function _display_init *****************
 10394 ;; Defined at:
 10395 ;;		line 274 in file "display.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;		None
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;		None
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10413 ;;Total ram usage:        0 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:   15
 10416 ;; This function calls:
 10417 ;;		__display_start
 10418 ;;		_i2c_display_init
 10419 ;;		_i2c_display_program_custom_character
 10420 ;; This function is called by:
 10421 ;;		_system_init
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           	psect	text25
 10426  0158A0                     __ptext25:
 10427                           	opt stack 0
 10428  0158A0                     _display_init:
 10429                           	opt stack 14
 10430                           
 10431                           ;display.c: 276: i2c_display_init();
 10432                           
 10433                           ;incstack = 0
 10434  0158A0  EC63  F0A9         	call	_i2c_display_init	;wreg free
 10435                           
 10436                           ;display.c: 277: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10437  0158A4  0EEA               	movlw	low _bit_pattern_verticalbar
 10438  0158A6  0100               	movlb	0	; () banked
 10439  0158A8  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10440  0158AA  0EA2               	movlw	high _bit_pattern_verticalbar
 10441  0158AC  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10442  0158AE  0E00               	movlw	0
 10443  0158B0  EC76  F0A1         	call	_i2c_display_program_custom_character
 10444                           
 10445                           ;display.c: 278: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10446  0158B4  0EE2               	movlw	low _bit_pattern_degree
 10447  0158B6  0100               	movlb	0	; () banked
 10448  0158B8  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10449  0158BA  0EA2               	movlw	high _bit_pattern_degree
 10450  0158BC  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10451  0158BE  0E01               	movlw	1
 10452  0158C0  EC76  F0A1         	call	_i2c_display_program_custom_character
 10453                           
 10454                           ;display.c: 279: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10455  0158C4  0EDA               	movlw	low _bit_pattern_ae
 10456  0158C6  0100               	movlb	0	; () banked
 10457  0158C8  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10458  0158CA  0EA2               	movlw	high _bit_pattern_ae
 10459  0158CC  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10460  0158CE  0E02               	movlw	2
 10461  0158D0  EC76  F0A1         	call	_i2c_display_program_custom_character
 10462                           
 10463                           ;display.c: 281: _display_start();
 10464  0158D4  EC25  F099         	call	__display_start	;wreg free
 10465  0158D8  0012               	return		;funcret
 10466  0158DA                     __end_of_display_init:
 10467                           	opt stack 0
 10468                           tblptru	equ	0xFF8
 10469                           tblptrh	equ	0xFF7
 10470                           tblptrl	equ	0xFF6
 10471                           tablat	equ	0xFF5
 10472                           prodh	equ	0xFF4
 10473                           prodl	equ	0xFF3
 10474                           postinc0	equ	0xFEE
 10475                           wreg	equ	0xFE8
 10476                           postdec1	equ	0xFE5
 10477                           fsr1h	equ	0xFE2
 10478                           fsr1l	equ	0xFE1
 10479                           indf2	equ	0xFDF
 10480                           postinc2	equ	0xFDE
 10481                           fsr2h	equ	0xFDA
 10482                           fsr2l	equ	0xFD9
 10483                           status	equ	0xFD8
 10484                           
 10485 ;; *************** function _i2c_display_program_custom_character *****************
 10486 ;; Defined at:
 10487 ;;		line 504 in file "i2c.c"
 10488 ;; Parameters:    Size  Location     Type
 10489 ;;  address         1    wreg     unsigned char 
 10490 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10491 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;  address         1   31[BANK0 ] unsigned char 
 10494 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10495 ;;  cntr            1   32[BANK0 ] unsigned char 
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10500 ;; Tracked objects:
 10501 ;;		On entry : 0/0
 10502 ;;		On exit  : 0/0
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10506 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10507 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10508 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10509 ;;Total ram usage:       19 bytes
 10510 ;; Hardware stack levels used:    1
 10511 ;; Hardware stack levels required when called:   13
 10512 ;; This function calls:
 10513 ;;		__i2c_write
 10514 ;;		__ic2_display_set_cgram_address
 10515 ;; This function is called by:
 10516 ;;		_display_init
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           	psect	text26
 10521  0142EC                     __ptext26:
 10522                           	opt stack 0
 10523  0142EC                     _i2c_display_program_custom_character:
 10524                           	opt stack 15
 10525                           
 10526                           ;incstack = 0
 10527                           ;i2c_display_program_custom_character@address stored from wreg
 10528  0142EC  0100               	movlb	0	; () banked
 10529  0142EE  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10530                           
 10531                           ;i2c.c: 506: uint8_t cntr;;i2c.c: 507: uint8_t data_array[11];;i2c.c: 510: _ic2_display_
      +                          set_cgram_address(address<<3);
 10532  0142F0  0100               	movlb	0	; () banked
 10533  0142F2  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10534  0142F4  42E8               	rrncf	wreg,f,c
 10535  0142F6  0BF8               	andlw	248
 10536  0142F8  EC62  F0AE         	call	__ic2_display_set_cgram_address
 10537                           
 10538                           ;i2c.c: 513: data_array[0] = 0b01000000;
 10539  0142FC  0E40               	movlw	64
 10540  0142FE  0100               	movlb	0	; () banked
 10541  014300  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10542                           
 10543                           ; BSR set to: 0
 10544                           ;i2c.c: 514: for(cntr=0; cntr<8; ++cntr)
 10545  014302  0E00               	movlw	0
 10546  014304  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10547  014306                     l16154:
 10548                           
 10549                           ; BSR set to: 0
 10550  014306  0E07               	movlw	7
 10551  014308  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10552  01430A  D001               	goto	l1266
 10553  01430C  D023               	goto	u15260
 10554  01430E                     l1266:
 10555                           
 10556                           ; BSR set to: 0
 10557                           ;i2c.c: 515: {;i2c.c: 516: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10558                           
 10559                           ; BSR set to: 0
 10560  01430E  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10561  014310  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10562  014312  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10563  014314  0E01               	movlw	1
 10564  014316  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10565  014318  0E00               	movlw	0
 10566  01431A  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10567  01431C  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10568  01431E  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10569  014320  6ED9               	movwf	fsr2l,c
 10570  014322  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10571  014324  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10572  014326  6EDA               	movwf	fsr2h,c
 10573  014328  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10574  01432A  0D01               	mullw	1
 10575  01432C  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10576  014330  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10577  014334  50F3               	movf	prodl,w,c
 10578  014336  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10579  014338  50F4               	movf	prodh,w,c
 10580  01433A  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10581  01433C  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10582  014340  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10583  014344                     	if	0	;tblptru may be non-zero
 10584  014344                     	endif
 10585  014344                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10586  014344  0E00               	movlw	low (__mediumconst shr (0+16))
 10587  014346  6EF8               	movwf	tblptru,c
 10588  014348                     	endif
 10589  014348  0008               	tblrd		*
 10590  01434A  50F5               	movf	tablat,w,c
 10591  01434C  0B1F               	andlw	31
 10592  01434E  6EDF               	movwf	indf2,c
 10593                           
 10594                           ; BSR set to: 0
 10595  014350  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10596  014352  D7D9               	goto	l16154
 10597  014354                     u15260:
 10598                           
 10599                           ; BSR set to: 0
 10600                           ;i2c.c: 517: };i2c.c: 518: _i2c_write(0b01111000, data_array, 9);
 10601                           
 10602                           ; BSR set to: 0
 10603  014354  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10604  014356  6F65               	movwf	__i2c_write@data& (0+255),b
 10605  014358  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10606  01435A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10607  01435C  0E09               	movlw	9
 10608  01435E  6F67               	movwf	__i2c_write@length& (0+255),b
 10609  014360  0E78               	movlw	120
 10610  014362  EC03  F0AA         	call	__i2c_write
 10611  014366  0012               	return		;funcret
 10612  014368                     __end_of_i2c_display_program_custom_character:
 10613                           	opt stack 0
 10614                           tblptru	equ	0xFF8
 10615                           tblptrh	equ	0xFF7
 10616                           tblptrl	equ	0xFF6
 10617                           tablat	equ	0xFF5
 10618                           prodh	equ	0xFF4
 10619                           prodl	equ	0xFF3
 10620                           postinc0	equ	0xFEE
 10621                           wreg	equ	0xFE8
 10622                           postdec1	equ	0xFE5
 10623                           fsr1h	equ	0xFE2
 10624                           fsr1l	equ	0xFE1
 10625                           indf2	equ	0xFDF
 10626                           postinc2	equ	0xFDE
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           
 10631 ;; *************** function __ic2_display_set_cgram_address *****************
 10632 ;; Defined at:
 10633 ;;		line 423 in file "i2c.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  address         1    wreg     unsigned char 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  address         1   13[BANK0 ] unsigned char 
 10638 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10639 ;; Return value:  Size  Location     Type
 10640 ;;                  1    wreg      void 
 10641 ;; Registers used:
 10642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10643 ;; Tracked objects:
 10644 ;;		On entry : 0/0
 10645 ;;		On exit  : 0/0
 10646 ;;		Unchanged: 0/0
 10647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10649 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;Total ram usage:        4 bytes
 10653 ;; Hardware stack levels used:    1
 10654 ;; Hardware stack levels required when called:   12
 10655 ;; This function calls:
 10656 ;;		__i2c_write
 10657 ;; This function is called by:
 10658 ;;		_i2c_display_program_custom_character
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text27
 10663  015CC4                     __ptext27:
 10664                           	opt stack 0
 10665  015CC4                     __ic2_display_set_cgram_address:
 10666                           	opt stack 15
 10667                           
 10668                           ;incstack = 0
 10669                           ;__ic2_display_set_cgram_address@address stored from wreg
 10670  015CC4  0100               	movlb	0	; () banked
 10671  015CC6  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10672                           
 10673                           ;i2c.c: 425: uint8_t data_array[3];;i2c.c: 430: address &= 0b001111111;
 10674  015CC8  0100               	movlb	0	; () banked
 10675  015CCA  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;i2c.c: 431: data_array[0] = 0b00000000;
 10679  015CCC  0E00               	movlw	0
 10680  015CCE  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10681                           
 10682                           ; BSR set to: 0
 10683                           ;i2c.c: 432: data_array[1] = 0b00111000;
 10684  015CD0  0E38               	movlw	56
 10685  015CD2  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10686                           
 10687                           ;i2c.c: 433: data_array[2] = 0b01000000 | address;
 10688  015CD4  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10689  015CD6  0940               	iorlw	64
 10690  015CD8  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;i2c.c: 436: _i2c_write(0b01111000, data_array, 3);
 10694  015CDA  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10695  015CDC  6F65               	movwf	__i2c_write@data& (0+255),b
 10696  015CDE  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10697  015CE0  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10698  015CE2  0E03               	movlw	3
 10699  015CE4  6F67               	movwf	__i2c_write@length& (0+255),b
 10700  015CE6  0E78               	movlw	120
 10701  015CE8  EC03  F0AA         	call	__i2c_write
 10702  015CEC  0012               	return		;funcret
 10703  015CEE                     __end_of__ic2_display_set_cgram_address:
 10704                           	opt stack 0
 10705                           tblptru	equ	0xFF8
 10706                           tblptrh	equ	0xFF7
 10707                           tblptrl	equ	0xFF6
 10708                           tablat	equ	0xFF5
 10709                           prodh	equ	0xFF4
 10710                           prodl	equ	0xFF3
 10711                           postinc0	equ	0xFEE
 10712                           wreg	equ	0xFE8
 10713                           postdec1	equ	0xFE5
 10714                           fsr1h	equ	0xFE2
 10715                           fsr1l	equ	0xFE1
 10716                           indf2	equ	0xFDF
 10717                           postinc2	equ	0xFDE
 10718                           fsr2h	equ	0xFDA
 10719                           fsr2l	equ	0xFD9
 10720                           status	equ	0xFD8
 10721                           
 10722 ;; *************** function _i2c_display_init *****************
 10723 ;; Defined at:
 10724 ;;		line 381 in file "i2c.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;		None
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      void 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10742 ;;Total ram usage:       10 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:   12
 10745 ;; This function calls:
 10746 ;;		__i2c_write
 10747 ;; This function is called by:
 10748 ;;		_display_init
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           	psect	text28
 10753  0152C6                     __ptext28:
 10754                           	opt stack 0
 10755  0152C6                     _i2c_display_init:
 10756                           	opt stack 16
 10757                           
 10758                           ;i2c.c: 383: uint8_t init_sequence[9] = {;i2c.c: 384: 0x3A,;i2c.c: 386: 0b00011110,;i2c.
      +                          c: 387: 0x39,;i2c.c: 389: 0b00001100,;i2c.c: 390: 0x74,;i2c.c: 391: 0b1011100,;i2c.c: 39
      +                          2: 0x6d,;i2c.c: 393: 0x0c,;i2c.c: 394: 0x01;i2c.c: 395: };
 10759                           
 10760                           ;incstack = 0
 10761  0152C6  EE22  F0BA         	lfsr	2,i2c_display_init@F7093
 10762  0152CA  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10763  0152CE  0E08               	movlw	8
 10764  0152D0                     u15231:
 10765  0152D0  CFDB FFE3          	movff	plusw2,plusw1
 10766  0152D4  06E8               	decf	wreg,f,c
 10767  0152D6  E2FC               	bc	u15231
 10768                           
 10769                           ;i2c.c: 398: LATAbits.LA3 = 0;
 10770  0152D8  9689               	bcf	3977,3,c	;volatile
 10771                           
 10772                           ;i2c.c: 399: _delay((unsigned long)((10)*(8000000/4000.0)));
 10773  0152DA  0E1A               	movlw	26
 10774  0152DC  0100               	movlb	0	; () banked
 10775  0152DE  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10776  0152E0  0EF8               	movlw	248
 10777  0152E2                     u20067:
 10778  0152E2  2EE8               	decfsz	wreg,f,c
 10779  0152E4  D7FE               	bra	u20067
 10780  0152E6  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10781  0152E8  D7FC               	bra	u20067
 10782  0152EA  F000               	nop	
 10783                           
 10784                           ;i2c.c: 400: LATAbits.LA3 = 1;
 10785  0152EC  8689               	bsf	3977,3,c	;volatile
 10786                           
 10787                           ;i2c.c: 401: _delay((unsigned long)((50)*(8000000/4000.0)));
 10788  0152EE  0E82               	movlw	130
 10789  0152F0  0100               	movlb	0	; () banked
 10790  0152F2  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10791  0152F4  0EDD               	movlw	221
 10792  0152F6                     u20077:
 10793  0152F6  2EE8               	decfsz	wreg,f,c
 10794  0152F8  D7FE               	bra	u20077
 10795  0152FA  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10796  0152FC  D7FC               	bra	u20077
 10797  0152FE  D000               	nop2	
 10798                           
 10799                           ;i2c.c: 407: _i2c_write(0b01111000, &init_sequence[0], 9);
 10800  015300  0E6B               	movlw	low i2c_display_init@init_sequence
 10801  015302  0100               	movlb	0	; () banked
 10802  015304  6F65               	movwf	__i2c_write@data& (0+255),b
 10803  015306  0E00               	movlw	high i2c_display_init@init_sequence
 10804  015308  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10805  01530A  0E09               	movlw	9
 10806  01530C  6F67               	movwf	__i2c_write@length& (0+255),b
 10807  01530E  0E78               	movlw	120
 10808  015310  EC03  F0AA         	call	__i2c_write
 10809  015314  0012               	return		;funcret
 10810  015316                     __end_of_i2c_display_init:
 10811                           	opt stack 0
 10812                           tblptru	equ	0xFF8
 10813                           tblptrh	equ	0xFF7
 10814                           tblptrl	equ	0xFF6
 10815                           tablat	equ	0xFF5
 10816                           prodh	equ	0xFF4
 10817                           prodl	equ	0xFF3
 10818                           postinc0	equ	0xFEE
 10819                           wreg	equ	0xFE8
 10820                           postdec1	equ	0xFE5
 10821                           plusw1	equ	0xFE3
 10822                           fsr1h	equ	0xFE2
 10823                           fsr1l	equ	0xFE1
 10824                           indf2	equ	0xFDF
 10825                           postinc2	equ	0xFDE
 10826                           plusw2	equ	0xFDB
 10827                           fsr2h	equ	0xFDA
 10828                           fsr2l	equ	0xFD9
 10829                           status	equ	0xFD8
 10830                           
 10831 ;; *************** function __display_start *****************
 10832 ;; Defined at:
 10833 ;;		line 284 in file "display.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;		None
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;  cntr            1   28[BANK0 ] unsigned char 
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10851 ;;Total ram usage:        1 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:   14
 10854 ;; This function calls:
 10855 ;;		__display_itoa_u16
 10856 ;;		_memcpy
 10857 ;; This function is called by:
 10858 ;;		_display_init
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text29
 10863  01324A                     __ptext29:
 10864                           	opt stack 0
 10865  01324A                     __display_start:
 10866                           	opt stack 14
 10867                           
 10868                           ;display.c: 286: uint8_t cntr;;display.c: 287: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 10869                           
 10870                           ;incstack = 0
 10871  01324A  0E48               	movlw	low _display_content
 10872  01324C  0100               	movlb	0	; () banked
 10873  01324E  6F60               	movwf	memcpy@d1& (0+255),b
 10874  013250  0E02               	movlw	high _display_content
 10875  013252  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10876  013254  0E00               	movlw	low _dc_startup
 10877  013256  6F62               	movwf	memcpy@s1& (0+255),b
 10878  013258  0E04               	movlw	high _dc_startup
 10879  01325A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10880  01325C  0E00               	movlw	0
 10881  01325E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10882  013260  0E50               	movlw	80
 10883  013262  6F64               	movwf	memcpy@n& (0+255),b
 10884  013264  ECCA  F0A5         	call	_memcpy	;wreg free
 10885                           
 10886                           ;display.c: 288: cntr = 6;
 10887  013268  0E06               	movlw	6
 10888  01326A  0100               	movlb	0	; () banked
 10889  01326C  6F7C               	movwf	__display_start@cntr& (0+255),b
 10890                           
 10891                           ; BSR set to: 0
 10892                           ;display.c: 289: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 10893  01326E  0E00               	movlw	0
 10894  013270  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 10895  013272  0E00               	movlw	0
 10896  013274  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 10897  013276  517C               	movf	__display_start@cntr& (0+255),w,b
 10898  013278  0D01               	mullw	1
 10899  01327A  0E70               	movlw	low (_display_content+40)
 10900  01327C  24F3               	addwf	prodl,w,c
 10901  01327E  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 10902  013280  0E02               	movlw	high (_display_content+40)
 10903  013282  20F4               	addwfc	prodh,w,c
 10904  013284  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 10905  013286  ECCB  F098         	call	__display_itoa_u16	;wreg free
 10906  01328A  0100               	movlb	0	; () banked
 10907  01328C  277C               	addwf	__display_start@cntr& (0+255),f,b
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;display.c: 290: display_content[2][cntr++] = '.';
 10911  01328E  517C               	movf	__display_start@cntr& (0+255),w,b
 10912  013290  0D01               	mullw	1
 10913  013292  0E70               	movlw	low (_display_content+40)
 10914  013294  24F3               	addwf	prodl,w,c
 10915  013296  6ED9               	movwf	fsr2l,c
 10916  013298  0E02               	movlw	high (_display_content+40)
 10917  01329A  20F4               	addwfc	prodh,w,c
 10918  01329C  6EDA               	movwf	fsr2h,c
 10919  01329E  0E2E               	movlw	46
 10920  0132A0  6EDF               	movwf	indf2,c
 10921                           
 10922                           ; BSR set to: 0
 10923  0132A2  2B7C               	incf	__display_start@cntr& (0+255),f,b
 10924                           
 10925                           ; BSR set to: 0
 10926                           ;display.c: 291: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 10927  0132A4  0E00               	movlw	0
 10928  0132A6  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 10929  0132A8  0E06               	movlw	6
 10930  0132AA  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 10931  0132AC  517C               	movf	__display_start@cntr& (0+255),w,b
 10932  0132AE  0D01               	mullw	1
 10933  0132B0  0E70               	movlw	low (_display_content+40)
 10934  0132B2  24F3               	addwf	prodl,w,c
 10935  0132B4  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 10936  0132B6  0E02               	movlw	high (_display_content+40)
 10937  0132B8  20F4               	addwfc	prodh,w,c
 10938  0132BA  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 10939  0132BC  ECCB  F098         	call	__display_itoa_u16	;wreg free
 10940  0132C0  0100               	movlb	0	; () banked
 10941  0132C2  277C               	addwf	__display_start@cntr& (0+255),f,b
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;display.c: 292: display_content[2][cntr++] = '.';
 10945  0132C4  517C               	movf	__display_start@cntr& (0+255),w,b
 10946  0132C6  0D01               	mullw	1
 10947  0132C8  0E70               	movlw	low (_display_content+40)
 10948  0132CA  24F3               	addwf	prodl,w,c
 10949  0132CC  6ED9               	movwf	fsr2l,c
 10950  0132CE  0E02               	movlw	high (_display_content+40)
 10951  0132D0  20F4               	addwfc	prodh,w,c
 10952  0132D2  6EDA               	movwf	fsr2h,c
 10953  0132D4  0E2E               	movlw	46
 10954  0132D6  6EDF               	movwf	indf2,c
 10955                           
 10956                           ; BSR set to: 0
 10957  0132D8  2B7C               	incf	__display_start@cntr& (0+255),f,b
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;display.c: 293: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 10961  0132DA  0E00               	movlw	0
 10962  0132DC  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 10963  0132DE  0E05               	movlw	5
 10964  0132E0  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 10965  0132E2  517C               	movf	__display_start@cntr& (0+255),w,b
 10966  0132E4  0D01               	mullw	1
 10967  0132E6  0E70               	movlw	low (_display_content+40)
 10968  0132E8  24F3               	addwf	prodl,w,c
 10969  0132EA  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 10970  0132EC  0E02               	movlw	high (_display_content+40)
 10971  0132EE  20F4               	addwfc	prodh,w,c
 10972  0132F0  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 10973  0132F2  ECCB  F098         	call	__display_itoa_u16	;wreg free
 10974  0132F6  0100               	movlb	0	; () banked
 10975  0132F8  277C               	addwf	__display_start@cntr& (0+255),f,b
 10976                           
 10977                           ; BSR set to: 0
 10978  0132FA  0012               	return		;funcret
 10979  0132FC                     __end_of__display_start:
 10980                           	opt stack 0
 10981                           tblptru	equ	0xFF8
 10982                           tblptrh	equ	0xFF7
 10983                           tblptrl	equ	0xFF6
 10984                           tablat	equ	0xFF5
 10985                           prodh	equ	0xFF4
 10986                           prodl	equ	0xFF3
 10987                           postinc0	equ	0xFEE
 10988                           wreg	equ	0xFE8
 10989                           postdec1	equ	0xFE5
 10990                           plusw1	equ	0xFE3
 10991                           fsr1h	equ	0xFE2
 10992                           fsr1l	equ	0xFE1
 10993                           indf2	equ	0xFDF
 10994                           postinc2	equ	0xFDE
 10995                           plusw2	equ	0xFDB
 10996                           fsr2h	equ	0xFDA
 10997                           fsr2l	equ	0xFD9
 10998                           status	equ	0xFD8
 10999                           
 11000 ;; *************** function __display_itoa_u16 *****************
 11001 ;; Defined at:
 11002 ;;		line 227 in file "display.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  value           2   24[BANK0 ] unsigned int 
 11005 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11006 ;;		 -> display_content(80), 
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;		None
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  1    wreg      unsigned char 
 11011 ;; Registers used:
 11012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11018 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11021 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11022 ;;Total ram usage:        4 bytes
 11023 ;; Hardware stack levels used:    1
 11024 ;; Hardware stack levels required when called:   13
 11025 ;; This function calls:
 11026 ;;		_itoa
 11027 ;; This function is called by:
 11028 ;;		__display_start
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           	psect	text30
 11033  013196                     __ptext30:
 11034                           	opt stack 0
 11035  013196                     __display_itoa_u16:
 11036                           	opt stack 14
 11037                           
 11038                           ;display.c: 229: itoa(text, value, 10);
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;incstack = 0
 11042  013196  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11043  01319A  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11044  01319E  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11045  0131A2  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11046  0131A6  0E00               	movlw	0
 11047  0131A8  0100               	movlb	0	; () banked
 11048  0131AA  6F75               	movwf	(itoa@base+1)& (0+255),b
 11049  0131AC  0E0A               	movlw	10
 11050  0131AE  6F74               	movwf	itoa@base& (0+255),b
 11051  0131B0  EC4F  F0AB         	call	_itoa	;wreg free
 11052                           
 11053                           ;display.c: 230: if(value>9999)
 11054  0131B4  0E10               	movlw	16
 11055  0131B6  0100               	movlb	0	; () banked
 11056  0131B8  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11057  0131BA  0E27               	movlw	39
 11058  0131BC  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11059  0131BE  A0D8               	btfss	status,0,c
 11060  0131C0  D00A               	goto	l1376
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;display.c: 231: {;display.c: 232: *(text+5) = ' ';
 11064  0131C2  EE20 F005          	lfsr	2,5
 11065  0131C6  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11066  0131C8  26D9               	addwf	fsr2l,f,c
 11067  0131CA  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11068  0131CC  22DA               	addwfc	fsr2h,f,c
 11069  0131CE  0E20               	movlw	32
 11070  0131D0  6EDF               	movwf	indf2,c
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;display.c: 233: return 5;
 11074  0131D2  0E05               	movlw	5
 11075                           
 11076                           ; BSR set to: 0
 11077                           ;display.c: 234: }
 11078                           
 11079                           ; BSR set to: 0
 11080  0131D4  0012               	return	
 11081  0131D6                     l1376:
 11082                           
 11083                           ; BSR set to: 0
 11084                           ;display.c: 235: else if (value>999)
 11085                           
 11086                           ; BSR set to: 0
 11087  0131D6  0EE8               	movlw	232
 11088  0131D8  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11089  0131DA  0E03               	movlw	3
 11090  0131DC  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11091  0131DE  A0D8               	btfss	status,0,c
 11092  0131E0  D00A               	goto	l1379
 11093                           
 11094                           ; BSR set to: 0
 11095                           ;display.c: 236: {;display.c: 237: *(text+4) = ' ';
 11096  0131E2  EE20 F004          	lfsr	2,4
 11097  0131E6  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11098  0131E8  26D9               	addwf	fsr2l,f,c
 11099  0131EA  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11100  0131EC  22DA               	addwfc	fsr2h,f,c
 11101  0131EE  0E20               	movlw	32
 11102  0131F0  6EDF               	movwf	indf2,c
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;display.c: 238: return 4;
 11106  0131F2  0E04               	movlw	4
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;display.c: 239: }
 11110                           
 11111                           ; BSR set to: 0
 11112  0131F4  0012               	return	
 11113  0131F6                     l1379:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;display.c: 240: else if (value>99)
 11117                           
 11118                           ; BSR set to: 0
 11119  0131F6  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11120  0131F8  E104               	bnz	u13940
 11121  0131FA  0E64               	movlw	100
 11122  0131FC  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11123  0131FE  A0D8               	btfss	status,0,c
 11124  013200  D00A               	goto	l1381
 11125  013202                     u13940:
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;display.c: 241: {;display.c: 242: *(text+3) = ' ';
 11129  013202  EE20 F003          	lfsr	2,3
 11130  013206  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11131  013208  26D9               	addwf	fsr2l,f,c
 11132  01320A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11133  01320C  22DA               	addwfc	fsr2h,f,c
 11134  01320E  0E20               	movlw	32
 11135  013210  6EDF               	movwf	indf2,c
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;display.c: 243: return 3;
 11139  013212  0E03               	movlw	3
 11140                           
 11141                           ; BSR set to: 0
 11142                           ;display.c: 244: }
 11143                           
 11144                           ; BSR set to: 0
 11145  013214  0012               	return	
 11146  013216                     l1381:
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;display.c: 245: else if (value>9)
 11150                           
 11151                           ; BSR set to: 0
 11152  013216  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11153  013218  E104               	bnz	u13950
 11154  01321A  0E0A               	movlw	10
 11155  01321C  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11156  01321E  A0D8               	btfss	status,0,c
 11157  013220  D00A               	goto	l1383
 11158  013222                     u13950:
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;display.c: 246: {;display.c: 247: *(text+2) = ' ';
 11162  013222  EE20 F002          	lfsr	2,2
 11163  013226  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11164  013228  26D9               	addwf	fsr2l,f,c
 11165  01322A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11166  01322C  22DA               	addwfc	fsr2h,f,c
 11167  01322E  0E20               	movlw	32
 11168  013230  6EDF               	movwf	indf2,c
 11169                           
 11170                           ; BSR set to: 0
 11171                           ;display.c: 248: return 2;
 11172  013232  0E02               	movlw	2
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;display.c: 249: }
 11176                           
 11177                           ; BSR set to: 0
 11178  013234  0012               	return	
 11179  013236                     l1383:
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;display.c: 250: else;display.c: 251: {;display.c: 252: *(text+1) = ' ';
 11183                           
 11184                           ; BSR set to: 0
 11185  013236  EE20 F001          	lfsr	2,1
 11186  01323A  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11187  01323C  26D9               	addwf	fsr2l,f,c
 11188  01323E  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11189  013240  22DA               	addwfc	fsr2h,f,c
 11190  013242  0E20               	movlw	32
 11191  013244  6EDF               	movwf	indf2,c
 11192                           
 11193                           ; BSR set to: 0
 11194                           ;display.c: 253: return 1;
 11195  013246  0E01               	movlw	1
 11196                           
 11197                           ; BSR set to: 0
 11198                           
 11199                           ; BSR set to: 0
 11200                           
 11201                           ; BSR set to: 0
 11202                           
 11203                           ; BSR set to: 0
 11204  013248  0012               	return	
 11205  01324A                     __end_of__display_itoa_u16:
 11206                           	opt stack 0
 11207                           tblptru	equ	0xFF8
 11208                           tblptrh	equ	0xFF7
 11209                           tblptrl	equ	0xFF6
 11210                           tablat	equ	0xFF5
 11211                           prodh	equ	0xFF4
 11212                           prodl	equ	0xFF3
 11213                           postinc0	equ	0xFEE
 11214                           wreg	equ	0xFE8
 11215                           postdec1	equ	0xFE5
 11216                           plusw1	equ	0xFE3
 11217                           fsr1h	equ	0xFE2
 11218                           fsr1l	equ	0xFE1
 11219                           indf2	equ	0xFDF
 11220                           postinc2	equ	0xFDE
 11221                           plusw2	equ	0xFDB
 11222                           fsr2h	equ	0xFDA
 11223                           fsr2l	equ	0xFD9
 11224                           status	equ	0xFD8
 11225                           
 11226 ;; *************** function _configFile_write *****************
 11227 ;; Defined at:
 11228 ;;		line 313 in file "config_file.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;		None
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  file_size       4  133[BANK0 ] unsigned long 
 11233 ;;  file_number     1  132[BANK0 ] unsigned char 
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      void 
 11236 ;; Registers used:
 11237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11244 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11246 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11247 ;;Total ram usage:        6 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:   18
 11250 ;; This function calls:
 11251 ;;		__add_item
 11252 ;;		_fat_create_file
 11253 ;;		_fat_find_file
 11254 ;;		_fat_modify_file
 11255 ;;		_fat_resize_file
 11256 ;; This function is called by:
 11257 ;;		_system_init
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text31
 11262  00C1D8                     __ptext31:
 11263                           	opt stack 0
 11264  00C1D8                     _configFile_write:
 11265                           	opt stack 11
 11266                           
 11267                           ;config_file.c: 315: uint8_t file_number;;config_file.c: 316: uint32_t file_size;;config
      +                          _file.c: 318: file_size = 0;
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;incstack = 0
 11271  00C1D8  0E00               	movlw	0
 11272  00C1DA  0100               	movlb	0	; () banked
 11273  00C1DC  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11274  00C1DE  0E00               	movlw	0
 11275  00C1E0  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11276  00C1E2  0E00               	movlw	0
 11277  00C1E4  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11278  00C1E6  0E00               	movlw	0
 11279  00C1E8  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;config_file.c: 319: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11283  00C1EA  0E12               	movlw	low _full_circle_in_steps_string
 11284  00C1EC  6F84               	movwf	__add_item@item_string& (0+255),b
 11285  00C1EE  0EA2               	movlw	high _full_circle_in_steps_string
 11286  00C1F0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11287  00C1F2  C196  F086         	movff	_config,__add_item@value
 11288  00C1F6  C197  F087         	movff	_config+1,__add_item@value+1
 11289  00C1FA  C198  F088         	movff	_config+2,__add_item@value+2
 11290  00C1FE  C199  F089         	movff	_config+3,__add_item@value+3
 11291  00C202  0E00               	movlw	low _ConfigFile_buffer
 11292  00C204  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11293  00C206  6F8A               	movwf	__add_item@buffer& (0+255),b
 11294  00C208  0E08               	movlw	high _ConfigFile_buffer
 11295  00C20A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11296  00C20C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11297  00C20E  ECC1  F08D         	call	__add_item	;wreg free
 11298  00C212  0100               	movlb	0	; () banked
 11299  00C214  6FE3               	movwf	??_configFile_write& (0+255),b
 11300  00C216  51E3               	movf	??_configFile_write& (0+255),w,b
 11301  00C218  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11302  00C21A  0E00               	movlw	0
 11303  00C21C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11304  00C21E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11305  00C220  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;config_file.c: 320: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11309  00C222  0E5E               	movlw	low _inverse_direction_string
 11310  00C224  6F84               	movwf	__add_item@item_string& (0+255),b
 11311  00C226  0EA2               	movlw	high _inverse_direction_string
 11312  00C228  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11313  00C22A  0101               	movlb	1	; () banked
 11314  00C22C  519A               	movf	(_config+4)& (0+255),w,b
 11315  00C22E  0100               	movlb	0	; () banked
 11316  00C230  6F86               	movwf	__add_item@value& (0+255),b
 11317  00C232  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11318  00C234  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11319  00C236  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11320  00C238  0E00               	movlw	low _ConfigFile_buffer
 11321  00C23A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11322  00C23C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11323  00C23E  0E08               	movlw	high _ConfigFile_buffer
 11324  00C240  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11325  00C242  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11326  00C244  ECC1  F08D         	call	__add_item	;wreg free
 11327  00C248  0100               	movlb	0	; () banked
 11328  00C24A  6FE3               	movwf	??_configFile_write& (0+255),b
 11329  00C24C  51E3               	movf	??_configFile_write& (0+255),w,b
 11330  00C24E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11331  00C250  0E00               	movlw	0
 11332  00C252  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11333  00C254  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11334  00C256  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;config_file.c: 321: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11338  00C258  0E27               	movlw	low _overshoot_in_steps_string
 11339  00C25A  6F84               	movwf	__add_item@item_string& (0+255),b
 11340  00C25C  0EA2               	movlw	high _overshoot_in_steps_string
 11341  00C25E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11342  00C260  C19B  F086         	movff	_config+5,__add_item@value
 11343  00C264  C19C  F087         	movff	_config+6,__add_item@value+1
 11344  00C268  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11345  00C26A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11346  00C26C  0E00               	movlw	low _ConfigFile_buffer
 11347  00C26E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11348  00C270  6F8A               	movwf	__add_item@buffer& (0+255),b
 11349  00C272  0E08               	movlw	high _ConfigFile_buffer
 11350  00C274  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11351  00C276  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11352  00C278  ECC1  F08D         	call	__add_item	;wreg free
 11353  00C27C  0100               	movlb	0	; () banked
 11354  00C27E  6FE3               	movwf	??_configFile_write& (0+255),b
 11355  00C280  51E3               	movf	??_configFile_write& (0+255),w,b
 11356  00C282  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11357  00C284  0E00               	movlw	0
 11358  00C286  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11359  00C288  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11360  00C28A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;config_file.c: 322: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11364  00C28C  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11365  00C28E  6F84               	movwf	__add_item@item_string& (0+255),b
 11366  00C290  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11367  00C292  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11368  00C294  C19D  F086         	movff	_config+7,__add_item@value
 11369  00C298  C19E  F087         	movff	_config+8,__add_item@value+1
 11370  00C29C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11371  00C29E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11372  00C2A0  0E00               	movlw	low _ConfigFile_buffer
 11373  00C2A2  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11374  00C2A4  6F8A               	movwf	__add_item@buffer& (0+255),b
 11375  00C2A6  0E08               	movlw	high _ConfigFile_buffer
 11376  00C2A8  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11377  00C2AA  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11378  00C2AC  ECC1  F08D         	call	__add_item	;wreg free
 11379  00C2B0  0100               	movlb	0	; () banked
 11380  00C2B2  6FE3               	movwf	??_configFile_write& (0+255),b
 11381  00C2B4  51E3               	movf	??_configFile_write& (0+255),w,b
 11382  00C2B6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11383  00C2B8  0E00               	movlw	0
 11384  00C2BA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11385  00C2BC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11386  00C2BE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;config_file.c: 323: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11390  00C2C0  0EAC               	movlw	low _minimum_speed_string
 11391  00C2C2  6F84               	movwf	__add_item@item_string& (0+255),b
 11392  00C2C4  0EA2               	movlw	high _minimum_speed_string
 11393  00C2C6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11394  00C2C8  C19F  F086         	movff	_config+9,__add_item@value
 11395  00C2CC  C1A0  F087         	movff	_config+10,__add_item@value+1
 11396  00C2D0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11397  00C2D2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11398  00C2D4  0E00               	movlw	low _ConfigFile_buffer
 11399  00C2D6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11400  00C2D8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11401  00C2DA  0E08               	movlw	high _ConfigFile_buffer
 11402  00C2DC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11403  00C2DE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11404  00C2E0  ECC1  F08D         	call	__add_item	;wreg free
 11405  00C2E4  0100               	movlb	0	; () banked
 11406  00C2E6  6FE3               	movwf	??_configFile_write& (0+255),b
 11407  00C2E8  51E3               	movf	??_configFile_write& (0+255),w,b
 11408  00C2EA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11409  00C2EC  0E00               	movlw	0
 11410  00C2EE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11411  00C2F0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11412  00C2F2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;config_file.c: 324: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11416  00C2F4  0E9E               	movlw	low _maximum_speed_string
 11417  00C2F6  6F84               	movwf	__add_item@item_string& (0+255),b
 11418  00C2F8  0EA2               	movlw	high _maximum_speed_string
 11419  00C2FA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11420  00C2FC  C1A1  F086         	movff	_config+11,__add_item@value
 11421  00C300  C1A2  F087         	movff	_config+12,__add_item@value+1
 11422  00C304  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11423  00C306  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11424  00C308  0E00               	movlw	low _ConfigFile_buffer
 11425  00C30A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11426  00C30C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11427  00C30E  0E08               	movlw	high _ConfigFile_buffer
 11428  00C310  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11429  00C312  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11430  00C314  ECC1  F08D         	call	__add_item	;wreg free
 11431  00C318  0100               	movlb	0	; () banked
 11432  00C31A  6FE3               	movwf	??_configFile_write& (0+255),b
 11433  00C31C  51E3               	movf	??_configFile_write& (0+255),w,b
 11434  00C31E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11435  00C320  0E00               	movlw	0
 11436  00C322  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11437  00C324  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11438  00C326  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;config_file.c: 325: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11442  00C328  0E4C               	movlw	low _initial_speed_arc_string
 11443  00C32A  6F84               	movwf	__add_item@item_string& (0+255),b
 11444  00C32C  0EA2               	movlw	high _initial_speed_arc_string
 11445  00C32E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11446  00C330  C1A3  F086         	movff	_config+13,__add_item@value
 11447  00C334  C1A4  F087         	movff	_config+14,__add_item@value+1
 11448  00C338  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11449  00C33A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11450  00C33C  0E00               	movlw	low _ConfigFile_buffer
 11451  00C33E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11452  00C340  6F8A               	movwf	__add_item@buffer& (0+255),b
 11453  00C342  0E08               	movlw	high _ConfigFile_buffer
 11454  00C344  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11455  00C346  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11456  00C348  ECC1  F08D         	call	__add_item	;wreg free
 11457  00C34C  0100               	movlb	0	; () banked
 11458  00C34E  6FE3               	movwf	??_configFile_write& (0+255),b
 11459  00C350  51E3               	movf	??_configFile_write& (0+255),w,b
 11460  00C352  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11461  00C354  0E00               	movlw	0
 11462  00C356  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11463  00C358  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11464  00C35A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;config_file.c: 326: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11468  00C35C  0E3A               	movlw	low _maximum_speed_arc_string
 11469  00C35E  6F84               	movwf	__add_item@item_string& (0+255),b
 11470  00C360  0EA2               	movlw	high _maximum_speed_arc_string
 11471  00C362  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11472  00C364  C1A5  F086         	movff	_config+15,__add_item@value
 11473  00C368  C1A6  F087         	movff	_config+16,__add_item@value+1
 11474  00C36C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11475  00C36E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11476  00C370  0E00               	movlw	low _ConfigFile_buffer
 11477  00C372  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11478  00C374  6F8A               	movwf	__add_item@buffer& (0+255),b
 11479  00C376  0E08               	movlw	high _ConfigFile_buffer
 11480  00C378  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11481  00C37A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11482  00C37C  ECC1  F08D         	call	__add_item	;wreg free
 11483  00C380  0100               	movlb	0	; () banked
 11484  00C382  6FE3               	movwf	??_configFile_write& (0+255),b
 11485  00C384  51E3               	movf	??_configFile_write& (0+255),w,b
 11486  00C386  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11487  00C388  0E00               	movlw	0
 11488  00C38A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11489  00C38C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11490  00C38E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;config_file.c: 327: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11494  00C390  0EFD               	movlw	low _initial_speed_manual_string
 11495  00C392  6F84               	movwf	__add_item@item_string& (0+255),b
 11496  00C394  0EA1               	movlw	high _initial_speed_manual_string
 11497  00C396  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11498  00C398  C1A7  F086         	movff	_config+17,__add_item@value
 11499  00C39C  C1A8  F087         	movff	_config+18,__add_item@value+1
 11500  00C3A0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11501  00C3A2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11502  00C3A4  0E00               	movlw	low _ConfigFile_buffer
 11503  00C3A6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11504  00C3A8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11505  00C3AA  0E08               	movlw	high _ConfigFile_buffer
 11506  00C3AC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11507  00C3AE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11508  00C3B0  ECC1  F08D         	call	__add_item	;wreg free
 11509  00C3B4  0100               	movlb	0	; () banked
 11510  00C3B6  6FE3               	movwf	??_configFile_write& (0+255),b
 11511  00C3B8  51E3               	movf	??_configFile_write& (0+255),w,b
 11512  00C3BA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11513  00C3BC  0E00               	movlw	0
 11514  00C3BE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11515  00C3C0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11516  00C3C2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;config_file.c: 328: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11520  00C3C4  0EE8               	movlw	low _maximum_speed_manual_string
 11521  00C3C6  6F84               	movwf	__add_item@item_string& (0+255),b
 11522  00C3C8  0EA1               	movlw	high _maximum_speed_manual_string
 11523  00C3CA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11524  00C3CC  C1A9  F086         	movff	_config+19,__add_item@value
 11525  00C3D0  C1AA  F087         	movff	_config+20,__add_item@value+1
 11526  00C3D4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11527  00C3D6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11528  00C3D8  0E00               	movlw	low _ConfigFile_buffer
 11529  00C3DA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11530  00C3DC  6F8A               	movwf	__add_item@buffer& (0+255),b
 11531  00C3DE  0E08               	movlw	high _ConfigFile_buffer
 11532  00C3E0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11533  00C3E2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11534  00C3E4  ECC1  F08D         	call	__add_item	;wreg free
 11535  00C3E8  0100               	movlb	0	; () banked
 11536  00C3EA  6FE3               	movwf	??_configFile_write& (0+255),b
 11537  00C3EC  51E3               	movf	??_configFile_write& (0+255),w,b
 11538  00C3EE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11539  00C3F0  0E00               	movlw	0
 11540  00C3F2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11541  00C3F4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11542  00C3F6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;config_file.c: 329: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 11546  00C3F8  0E82               	movlw	low _use_ccw_limit_string
 11547  00C3FA  6F84               	movwf	__add_item@item_string& (0+255),b
 11548  00C3FC  0EA2               	movlw	high _use_ccw_limit_string
 11549  00C3FE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11550  00C400  0101               	movlb	1	; () banked
 11551  00C402  51B5               	movf	(_config+31)& (0+255),w,b
 11552  00C404  0100               	movlb	0	; () banked
 11553  00C406  6F86               	movwf	__add_item@value& (0+255),b
 11554  00C408  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11555  00C40A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11556  00C40C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11557  00C40E  0E00               	movlw	low _ConfigFile_buffer
 11558  00C410  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11559  00C412  6F8A               	movwf	__add_item@buffer& (0+255),b
 11560  00C414  0E08               	movlw	high _ConfigFile_buffer
 11561  00C416  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11562  00C418  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11563  00C41A  ECC1  F08D         	call	__add_item	;wreg free
 11564  00C41E  0100               	movlb	0	; () banked
 11565  00C420  6FE3               	movwf	??_configFile_write& (0+255),b
 11566  00C422  51E3               	movf	??_configFile_write& (0+255),w,b
 11567  00C424  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11568  00C426  0E00               	movlw	0
 11569  00C428  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11570  00C42A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11571  00C42C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;config_file.c: 330: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 11575  00C42E  0EC7               	movlw	low _ccw_limit_string
 11576  00C430  6F84               	movwf	__add_item@item_string& (0+255),b
 11577  00C432  0EA2               	movlw	high _ccw_limit_string
 11578  00C434  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11579  00C436  C1B6  F086         	movff	_config+32,__add_item@value
 11580  00C43A  C1B7  F087         	movff	_config+33,__add_item@value+1
 11581  00C43E  C1B8  F088         	movff	_config+34,__add_item@value+2
 11582  00C442  C1B9  F089         	movff	_config+35,__add_item@value+3
 11583  00C446  0E00               	movlw	low _ConfigFile_buffer
 11584  00C448  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11585  00C44A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11586  00C44C  0E08               	movlw	high _ConfigFile_buffer
 11587  00C44E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11588  00C450  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11589  00C452  ECC1  F08D         	call	__add_item	;wreg free
 11590  00C456  0100               	movlb	0	; () banked
 11591  00C458  6FE3               	movwf	??_configFile_write& (0+255),b
 11592  00C45A  51E3               	movf	??_configFile_write& (0+255),w,b
 11593  00C45C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11594  00C45E  0E00               	movlw	0
 11595  00C460  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11596  00C462  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11597  00C464  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;config_file.c: 331: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 11601  00C466  0EBA               	movlw	low _use_cw_limit_string
 11602  00C468  6F84               	movwf	__add_item@item_string& (0+255),b
 11603  00C46A  0EA2               	movlw	high _use_cw_limit_string
 11604  00C46C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11605  00C46E  0101               	movlb	1	; () banked
 11606  00C470  51AC               	movf	(_config+22)& (0+255),w,b
 11607  00C472  0100               	movlb	0	; () banked
 11608  00C474  6F86               	movwf	__add_item@value& (0+255),b
 11609  00C476  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11610  00C478  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11611  00C47A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11612  00C47C  0E00               	movlw	low _ConfigFile_buffer
 11613  00C47E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11614  00C480  6F8A               	movwf	__add_item@buffer& (0+255),b
 11615  00C482  0E08               	movlw	high _ConfigFile_buffer
 11616  00C484  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11617  00C486  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11618  00C488  ECC1  F08D         	call	__add_item	;wreg free
 11619  00C48C  0100               	movlb	0	; () banked
 11620  00C48E  6FE3               	movwf	??_configFile_write& (0+255),b
 11621  00C490  51E3               	movf	??_configFile_write& (0+255),w,b
 11622  00C492  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11623  00C494  0E00               	movlw	0
 11624  00C496  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11625  00C498  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11626  00C49A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11627                           
 11628                           ; BSR set to: 0
 11629                           ;config_file.c: 332: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 11630  00C49C  0ED1               	movlw	low _cw_limit_string
 11631  00C49E  6F84               	movwf	__add_item@item_string& (0+255),b
 11632  00C4A0  0EA2               	movlw	high _cw_limit_string
 11633  00C4A2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11634  00C4A4  C1AD  F086         	movff	_config+23,__add_item@value
 11635  00C4A8  C1AE  F087         	movff	_config+24,__add_item@value+1
 11636  00C4AC  C1AF  F088         	movff	_config+25,__add_item@value+2
 11637  00C4B0  C1B0  F089         	movff	_config+26,__add_item@value+3
 11638  00C4B4  0E00               	movlw	low _ConfigFile_buffer
 11639  00C4B6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11640  00C4B8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11641  00C4BA  0E08               	movlw	high _ConfigFile_buffer
 11642  00C4BC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11643  00C4BE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11644  00C4C0  ECC1  F08D         	call	__add_item	;wreg free
 11645  00C4C4  0100               	movlb	0	; () banked
 11646  00C4C6  6FE3               	movwf	??_configFile_write& (0+255),b
 11647  00C4C8  51E3               	movf	??_configFile_write& (0+255),w,b
 11648  00C4CA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11649  00C4CC  0E00               	movlw	0
 11650  00C4CE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11651  00C4D0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11652  00C4D2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;config_file.c: 333: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 11656  00C4D4  0E90               	movlw	low _beep_duration_string
 11657  00C4D6  6F84               	movwf	__add_item@item_string& (0+255),b
 11658  00C4D8  0EA2               	movlw	high _beep_duration_string
 11659  00C4DA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11660  00C4DC  0101               	movlb	1	; () banked
 11661  00C4DE  51AB               	movf	(_config+21)& (0+255),w,b
 11662  00C4E0  0100               	movlb	0	; () banked
 11663  00C4E2  6F86               	movwf	__add_item@value& (0+255),b
 11664  00C4E4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11665  00C4E6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11666  00C4E8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11667  00C4EA  0E00               	movlw	low _ConfigFile_buffer
 11668  00C4EC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11669  00C4EE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11670  00C4F0  0E08               	movlw	high _ConfigFile_buffer
 11671  00C4F2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11672  00C4F4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11673  00C4F6  ECC1  F08D         	call	__add_item	;wreg free
 11674  00C4FA  0100               	movlb	0	; () banked
 11675  00C4FC  6FE3               	movwf	??_configFile_write& (0+255),b
 11676  00C4FE  51E3               	movf	??_configFile_write& (0+255),w,b
 11677  00C500  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11678  00C502  0E00               	movlw	0
 11679  00C504  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11680  00C506  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11681  00C508  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;config_file.c: 334: file_size += _add_item(&position_display_180_string, (int32_t) conf
      +                          ig.position_display_180, &ConfigFile_buffer[file_size]);
 11685  00C50A  0ED3               	movlw	low _position_display_180_string
 11686  00C50C  6F84               	movwf	__add_item@item_string& (0+255),b
 11687  00C50E  0EA1               	movlw	high _position_display_180_string
 11688  00C510  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11689  00C512  0101               	movlb	1	; () banked
 11690  00C514  51BE               	movf	(_config+40)& (0+255),w,b
 11691  00C516  0100               	movlb	0	; () banked
 11692  00C518  6F86               	movwf	__add_item@value& (0+255),b
 11693  00C51A  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11694  00C51C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11695  00C51E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11696  00C520  0E00               	movlw	low _ConfigFile_buffer
 11697  00C522  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11698  00C524  6F8A               	movwf	__add_item@buffer& (0+255),b
 11699  00C526  0E08               	movlw	high _ConfigFile_buffer
 11700  00C528  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11701  00C52A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11702  00C52C  ECC1  F08D         	call	__add_item	;wreg free
 11703  00C530  0100               	movlb	0	; () banked
 11704  00C532  6FE3               	movwf	??_configFile_write& (0+255),b
 11705  00C534  51E3               	movf	??_configFile_write& (0+255),w,b
 11706  00C536  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11707  00C538  0E00               	movlw	0
 11708  00C53A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11709  00C53C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11710  00C53E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11711                           
 11712                           ; BSR set to: 0
 11713                           ;config_file.c: 337: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 11714  00C540  0ED4               	movlw	low _configFile_used_name
 11715  00C542  6F8B               	movwf	fat_find_file@name& (0+255),b
 11716  00C544  0E02               	movlw	high _configFile_used_name
 11717  00C546  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 11718  00C548  0EE4               	movlw	low _configFile_used_extention
 11719  00C54A  6F8D               	movwf	fat_find_file@extension& (0+255),b
 11720  00C54C  0E02               	movlw	high _configFile_used_extention
 11721  00C54E  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 11722  00C550  ECA4  F08F         	call	_fat_find_file	;wreg free
 11723  00C554  0100               	movlb	0	; () banked
 11724  00C556  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11725                           
 11726                           ; BSR set to: 0
 11727                           ;config_file.c: 338: if(file_number==0xFF)
 11728  00C558  29E4               	incf	configFile_write@file_number& (0+255),w,b
 11729  00C55A  A4D8               	btfss	status,2,c
 11730  00C55C  D015               	goto	l3093
 11731                           
 11732                           ; BSR set to: 0
 11733                           ;config_file.c: 339: {;config_file.c: 340: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 11734  00C55E  0ED4               	movlw	low _configFile_used_name
 11735  00C560  6FAC               	movwf	fat_create_file@name& (0+255),b
 11736  00C562  0E02               	movlw	high _configFile_used_name
 11737  00C564  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 11738  00C566  0EE4               	movlw	low _configFile_used_extention
 11739  00C568  6FAE               	movwf	fat_create_file@extension& (0+255),b
 11740  00C56A  0E02               	movlw	high _configFile_used_extention
 11741  00C56C  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 11742  00C56E  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 11743  00C572  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 11744  00C576  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 11745  00C57A  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 11746  00C57E  EC84  F083         	call	_fat_create_file	;wreg free
 11747  00C582  0100               	movlb	0	; () banked
 11748  00C584  6FE4               	movwf	configFile_write@file_number& (0+255),b
 11749                           
 11750                           ;config_file.c: 341: }
 11751  00C586  D00B               	goto	l3094
 11752  00C588                     l3093:
 11753                           
 11754                           ; BSR set to: 0
 11755                           ;config_file.c: 342: else;config_file.c: 343: {;config_file.c: 344: fat_resize_file(file
      +                          _number, file_size);
 11756                           
 11757                           ; BSR set to: 0
 11758  00C588  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 11759  00C58C  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 11760  00C590  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 11761  00C594  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 11762  00C598  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11763  00C59A  EC45  F08C         	call	_fat_resize_file
 11764  00C59E                     l3094:
 11765                           
 11766                           ;config_file.c: 345: };config_file.c: 348: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 11767  00C59E  0E00               	movlw	0
 11768  00C5A0  0100               	movlb	0	; () banked
 11769  00C5A2  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 11770  00C5A4  0E00               	movlw	0
 11771  00C5A6  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 11772  00C5A8  0E00               	movlw	0
 11773  00C5AA  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 11774  00C5AC  0E00               	movlw	0
 11775  00C5AE  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 11776  00C5B0  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 11777  00C5B4  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 11778  00C5B8  0E00               	movlw	low _ConfigFile_buffer
 11779  00C5BA  6FA7               	movwf	fat_modify_file@data& (0+255),b
 11780  00C5BC  0E08               	movlw	high _ConfigFile_buffer
 11781  00C5BE  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 11782  00C5C0  51E4               	movf	configFile_write@file_number& (0+255),w,b
 11783  00C5C2  EC0F  F070         	call	_fat_modify_file
 11784  00C5C6  0012               	return		;funcret
 11785  00C5C8                     __end_of_configFile_write:
 11786                           	opt stack 0
 11787                           tblptru	equ	0xFF8
 11788                           tblptrh	equ	0xFF7
 11789                           tblptrl	equ	0xFF6
 11790                           tablat	equ	0xFF5
 11791                           prodh	equ	0xFF4
 11792                           prodl	equ	0xFF3
 11793                           postinc0	equ	0xFEE
 11794                           wreg	equ	0xFE8
 11795                           postdec1	equ	0xFE5
 11796                           plusw1	equ	0xFE3
 11797                           fsr1h	equ	0xFE2
 11798                           fsr1l	equ	0xFE1
 11799                           indf2	equ	0xFDF
 11800                           postinc2	equ	0xFDE
 11801                           plusw2	equ	0xFDB
 11802                           fsr2h	equ	0xFDA
 11803                           fsr2l	equ	0xFD9
 11804                           status	equ	0xFD8
 11805                           
 11806 ;; *************** function _fat_resize_file *****************
 11807 ;; Defined at:
 11808 ;;		line 911 in file "fat16.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  file_number     1    wreg     unsigned char 
 11811 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  file_number     1   90[BANK0 ] unsigned char 
 11814 ;;  root           32   91[BANK0 ] struct .
 11815 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 11816 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 11817 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1    wreg      unsigned char 
 11820 ;; Registers used:
 11821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11822 ;; Tracked objects:
 11823 ;;		On entry : 0/0
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11827 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11828 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11829 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;Total ram usage:       47 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; Hardware stack levels required when called:   17
 11834 ;; This function calls:
 11835 ;;		__make_cluster_chain
 11836 ;;		__root_is_available
 11837 ;;		__write_root
 11838 ;;		_fat_get_file_information
 11839 ;; This function is called by:
 11840 ;;		_configFile_write
 11841 ;;		_fat_append_to_file
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text32
 11846  01188A                     __ptext32:
 11847                           	opt stack 0
 11848  01188A                     _fat_resize_file:
 11849                           	opt stack 11
 11850                           
 11851                           ;incstack = 0
 11852                           ;fat_resize_file@file_number stored from wreg
 11853  01188A  0100               	movlb	0	; () banked
 11854  01188C  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 11855                           
 11856                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 11857  01188E  0E3F               	movlw	63
 11858  011890  0100               	movlb	0	; () banked
 11859  011892  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 11860  011894  D002               	goto	l1922
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 11864  011896  0EFF               	movlw	255
 11865                           
 11866                           ; BSR set to: 0
 11867  011898  0012               	return	
 11868  01189A                     l1922:
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 11872                           
 11873                           ; BSR set to: 0
 11874  01189A  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 11875  01189C  EC35  F0A4         	call	__root_is_available
 11876  0118A0  0900               	iorlw	0
 11877  0118A2  B4D8               	btfsc	status,2,c
 11878  0118A4  D002               	goto	l1924
 11879                           
 11880                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 11881  0118A6  0EFE               	movlw	254
 11882  0118A8  0012               	return	
 11883  0118AA                     l1924:
 11884                           
 11885                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 11886  0118AA  0EBB               	movlw	low fat_resize_file@root
 11887  0118AC  0100               	movlb	0	; () banked
 11888  0118AE  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 11889  0118B0  0E00               	movlw	high fat_resize_file@root
 11890  0118B2  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 11891  0118B4  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 11892  0118B6  ECF2  F0A1         	call	_fat_get_file_information
 11893                           
 11894                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 11895  0118BA  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 11896  0118BE  0EFF               	movlw	255
 11897  0118C0  24DE               	addwf	postinc2,w,c
 11898  0118C2  0100               	movlb	0	; () banked
 11899  0118C4  6FB0               	movwf	??_fat_resize_file& (0+255),b
 11900  0118C6  0E01               	movlw	1
 11901  0118C8  20DE               	addwfc	postinc2,w,c
 11902  0118CA  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 11903  0118CC  0E00               	movlw	0
 11904  0118CE  20DE               	addwfc	postinc2,w,c
 11905  0118D0  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 11906  0118D2  0E00               	movlw	0
 11907  0118D4  20DE               	addwfc	postinc2,w,c
 11908  0118D6  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 11909  0118D8  0E0A               	movlw	10
 11910  0118DA  D005               	goto	u15510
 11911  0118DC                     u15515:
 11912  0118DC  90D8               	bcf	status,0,c
 11913  0118DE  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 11914  0118E0  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 11915  0118E2  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 11916  0118E4  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 11917  0118E6                     u15510:
 11918  0118E6  2EE8               	decfsz	wreg,f,c
 11919  0118E8  D7F9               	goto	u15515
 11920  0118EA  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 11921  0118EE  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 11925  0118F2  0EFF               	movlw	255
 11926  0118F4  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 11927  0118F6  6FB0               	movwf	??_fat_resize_file& (0+255),b
 11928  0118F8  0E01               	movlw	1
 11929  0118FA  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 11930  0118FC  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 11931  0118FE  0E00               	movlw	0
 11932  011900  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 11933  011902  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 11934  011904  0E00               	movlw	0
 11935  011906  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 11936  011908  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 11937  01190A  0E0A               	movlw	10
 11938  01190C  D005               	goto	u15520
 11939  01190E                     u15525:
 11940  01190E  90D8               	bcf	status,0,c
 11941  011910  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 11942  011912  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 11943  011914  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 11944  011916  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 11945  011918                     u15520:
 11946  011918  2EE8               	decfsz	wreg,f,c
 11947  01191A  D7F9               	goto	u15525
 11948  01191C  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 11949  011920  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 11953  011924  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 11954  011926  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 11955  011928  E104               	bnz	u15530
 11956  01192A  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 11957  01192C  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 11958  01192E  B4D8               	btfsc	status,2,c
 11959  011930  D01A               	goto	l1925
 11960  011932                     u15530:
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 11964  011932  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 11965  011936  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 11966  01193A  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 11967  01193E  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 11968  011942  EC98  F069         	call	__make_cluster_chain	;wreg free
 11969  011946  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 11970  01194A  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 11971                           
 11972                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 11973  01194E  0100               	movlb	0	; () banked
 11974  011950  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 11975  011952  E105               	bnz	l1926
 11976  011954  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 11977  011956  A4D8               	btfss	status,2,c
 11978  011958  D002               	goto	l1926
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 11982  01195A  0EFD               	movlw	253
 11983                           
 11984                           ; BSR set to: 0
 11985  01195C  0012               	return	
 11986  01195E                     l1926:
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 11990  01195E  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 11991  011962  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 11992  011966                     l1925:
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 11996  011966  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 11997  01196A  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 11998  01196E  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 11999  011972  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;fat16.c: 957: _write_root(file_number, &root);
 12003  011976  0EBB               	movlw	low fat_resize_file@root
 12004  011978  6F88               	movwf	__write_root@data& (0+255),b
 12005  01197A  0E00               	movlw	high fat_resize_file@root
 12006  01197C  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12007  01197E  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12008  011980  EC52  F0AA         	call	__write_root
 12009                           
 12010                           ;fat16.c: 960: return 0x00;
 12011  011984  0E00               	movlw	0
 12012  011986  0012               	return	
 12013  011988                     __end_of_fat_resize_file:
 12014                           	opt stack 0
 12015                           tblptru	equ	0xFF8
 12016                           tblptrh	equ	0xFF7
 12017                           tblptrl	equ	0xFF6
 12018                           tablat	equ	0xFF5
 12019                           prodh	equ	0xFF4
 12020                           prodl	equ	0xFF3
 12021                           postinc0	equ	0xFEE
 12022                           wreg	equ	0xFE8
 12023                           postdec1	equ	0xFE5
 12024                           plusw1	equ	0xFE3
 12025                           fsr1h	equ	0xFE2
 12026                           fsr1l	equ	0xFE1
 12027                           indf2	equ	0xFDF
 12028                           postinc2	equ	0xFDE
 12029                           plusw2	equ	0xFDB
 12030                           fsr2h	equ	0xFDA
 12031                           fsr2l	equ	0xFD9
 12032                           status	equ	0xFD8
 12033                           
 12034 ;; *************** function _fat_modify_file *****************
 12035 ;; Defined at:
 12036 ;;		line 963 in file "fat16.c"
 12037 ;; Parameters:    Size  Location     Type
 12038 ;;  file_number     1    wreg     unsigned char 
 12039 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12040 ;;  length          2   69[BANK0 ] unsigned int 
 12041 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12042 ;;		 -> ConfigFile_buffer(512), 
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;  file_number     1   87[BANK0 ] unsigned char 
 12045 ;;  root           32   99[BANK0 ] struct .
 12046 ;;  position        4   95[BANK0 ] unsigned long 
 12047 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12048 ;;  offset          2   91[BANK0 ] unsigned int 
 12049 ;;  cluster         2   89[BANK0 ] unsigned int 
 12050 ;;  sector          2   85[BANK0 ] unsigned int 
 12051 ;;  return_code     1   88[BANK0 ] unsigned char 
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      unsigned char 
 12054 ;; Registers used:
 12055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12061 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12062 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12063 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12064 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12065 ;;Total ram usage:       66 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:   17
 12068 ;; This function calls:
 12069 ;;		__data_sector_from_cluster
 12070 ;;		__find_nth_cluster
 12071 ;;		__read_fat
 12072 ;;		_fat_get_file_information
 12073 ;;		_flash_partial_write
 12074 ;; This function is called by:
 12075 ;;		_configFile_write
 12076 ;;		_fat_append_to_file
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text33
 12081  00E01E                     __ptext33:
 12082                           	opt stack 0
 12083  00E01E                     _fat_modify_file:
 12084                           	opt stack 11
 12085                           
 12086                           ;incstack = 0
 12087                           ;fat_modify_file@file_number stored from wreg
 12088  00E01E  0100               	movlb	0	; () banked
 12089  00E020  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12090                           
 12091                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12092  00E022  0EC3               	movlw	low fat_modify_file@root
 12093  00E024  0100               	movlb	0	; () banked
 12094  00E026  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12095  00E028  0E00               	movlw	high fat_modify_file@root
 12096  00E02A  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12097  00E02C  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12098  00E02E  ECF2  F0A1         	call	_fat_get_file_information
 12099  00E032  0100               	movlb	0	; () banked
 12100  00E034  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;fat16.c: 975: if(return_code!=0x00)
 12104  00E036  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12105  00E038  A4D8               	btfss	status,2,c
 12106  00E03A  0012               	return	
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12110                           
 12111                           ; BSR set to: 0
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12115  00E03C  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12116  00E03E  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12117  00E040  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12118  00E042  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12119  00E044  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12120  00E046  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12121  00E048  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12122  00E04A  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12123  00E04C  A0D8               	btfss	status,0,c
 12124  00E04E  0012               	return	
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12128                           
 12129                           ; BSR set to: 0
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12133  00E050  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12134  00E052  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12135  00E054  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12136  00E056  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12137  00E058  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12138  00E05A  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12139  00E05C  0E00               	movlw	0
 12140  00E05E  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12141  00E060  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12142  00E062  0E00               	movlw	0
 12143  00E064  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12144  00E066  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12145  00E068  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12146  00E06A  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12147  00E06C  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12148  00E06E  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12149  00E070  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12150  00E072  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12151  00E074  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12152  00E076  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12153  00E078  B0D8               	btfsc	status,0,c
 12154  00E07A  D00E               	goto	l1932
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12158  00E07C  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12159  00E080  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12160  00E084  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12161  00E086  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12162  00E088  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12163  00E08A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12164  00E08C  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12165  00E08E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12166  00E090  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12167  00E092  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12168  00E094  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12169  00E096  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12170  00E098                     l1932:
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12174                           
 12175                           ; BSR set to: 0
 12176  00E098  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12177  00E09C  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12178  00E0A0  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12179  00E0A4  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12180  00E0A8  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12181  00E0AC  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12182  00E0B0  0E0A               	movlw	10
 12183  00E0B2  D005               	goto	u15580
 12184  00E0B4                     u15585:
 12185  00E0B4  90D8               	bcf	status,0,c
 12186  00E0B6  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12187  00E0B8  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12188  00E0BA  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12189  00E0BC  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12190  00E0BE                     u15580:
 12191  00E0BE  2EE8               	decfsz	wreg,f,c
 12192  00E0C0  D7F9               	goto	u15585
 12193  00E0C2  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12194  00E0C6  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12195  00E0CA  EC7F  F09B         	call	__find_nth_cluster	;wreg free
 12196  00E0CE  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12197  00E0D2  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12198                           
 12199                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12200  00E0D6  0E00               	movlw	0
 12201  00E0D8  0100               	movlb	0	; () banked
 12202  00E0DA  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12203  00E0DC  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12204  00E0DE  0EFE               	movlw	254
 12205  00E0E0  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12206  00E0E2  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12207  00E0E4  0EFF               	movlw	255
 12208  00E0E6  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12209  00E0E8  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12210  00E0EA  0EFF               	movlw	255
 12211  00E0EC  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12212  00E0EE  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12216  00E0F0  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12217  00E0F4  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12218  00E0F8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12219  00E0FA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12220  00E0FC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12221  00E0FE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12222  00E100  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12223  00E102  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12224  00E104  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12225  00E106  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12226  00E108  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12227  00E10A  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;fat16.c: 1004: position = 0;
 12231  00E10C  0E00               	movlw	0
 12232  00E10E  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12233  00E110  0E00               	movlw	0
 12234  00E112  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12235  00E114  0E00               	movlw	0
 12236  00E116  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12237  00E118  0E00               	movlw	0
 12238  00E11A  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12239                           
 12240                           ;fat16.c: 1005: while(position < length)
 12241  00E11C  D089               	goto	l1933
 12242  00E11E                     
 12243                           ; BSR set to: 0
 12244                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12245                           
 12246                           ; BSR set to: 0
 12247  00E11E  0E02               	movlw	2
 12248  00E120  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12249  00E122  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12250  00E124  A4D8               	btfss	status,2,c
 12251  00E126  D00F               	goto	l1935
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12255  00E128  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12256  00E12C  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12257  00E130  EC38  F0A7         	call	__read_fat	;wreg free
 12258  00E134  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12259  00E138  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12260                           
 12261                           ;fat16.c: 1013: offset = 0;
 12262  00E13C  0E00               	movlw	0
 12263  00E13E  0100               	movlb	0	; () banked
 12264  00E140  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12265  00E142  0E00               	movlw	0
 12266  00E144  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12267  00E146                     l1935:
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12271                           
 12272                           ; BSR set to: 0
 12273  00E146  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12274  00E14A  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12275  00E14E  EC29  F0B0         	call	__data_sector_from_cluster	;wreg free
 12276  00E152  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12277  00E156  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12278                           
 12279                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12280  00E15A  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12281  00E15E  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12282  00E162  0100               	movlb	0	; () banked
 12283  00E164  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12284  00E166  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12285  00E168  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12286  00E16A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12287  00E16C  0E00               	movlw	0
 12288  00E16E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12289  00E170  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12290  00E172  0E02               	movlw	2
 12291  00E174  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12292  00E176  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12296  00E178  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12297  00E17A  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12298  00E17C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12299  00E17E  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12300  00E180  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12301  00E182  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12302  00E184  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12303  00E188  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12304  00E18C  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12305  00E190  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12306  00E194  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12307  00E196  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12308  00E198  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12309  00E19A  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12310  00E19C  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12311  00E19E  0E00               	movlw	0
 12312  00E1A0  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12313  00E1A2  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12314  00E1A4  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12315  00E1A6  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12316  00E1A8  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12317  00E1AA  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12318  00E1AC  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12319  00E1AE  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12320  00E1B0  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12321  00E1B2  0E00               	movlw	0
 12322  00E1B4  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12323  00E1B6  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12324  00E1B8  0E00               	movlw	0
 12325  00E1BA  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12326  00E1BC  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12327  00E1BE  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12328  00E1C0  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12329  00E1C2  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12330  00E1C4  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12331  00E1C6  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12332  00E1C8  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12333  00E1CA  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12334  00E1CC  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12335  00E1CE  B0D8               	btfsc	status,0,c
 12336  00E1D0  D00E               	goto	l1936
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12340  00E1D2  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12341  00E1D6  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12342  00E1DA  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12343  00E1DC  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12344  00E1DE  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12345  00E1E0  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12346  00E1E2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12347  00E1E4  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12348  00E1E6  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12349  00E1E8  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12350  00E1EA  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12351  00E1EC  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12352  00E1EE                     l1936:
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12356                           
 12357                           ; BSR set to: 0
 12358  00E1EE  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12359  00E1F2  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12360  00E1F6  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12361  00E1FA  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12362  00E1FE  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12363  00E202  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12364  00E206  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12365  00E208  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12366  00E20A  6F85               	movwf	flash_partial_write@data& (0+255),b
 12367  00E20C  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12368  00E20E  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12369  00E210  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12370  00E212  ECFF  F0A3         	call	_flash_partial_write	;wreg free
 12371                           
 12372                           ;fat16.c: 1030: position += number_of_bytes;
 12373  00E216  0100               	movlb	0	; () banked
 12374  00E218  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12375  00E21A  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12376  00E21C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12377  00E21E  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12378  00E220  0E00               	movlw	0
 12379  00E222  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12380  00E224  0E00               	movlw	0
 12381  00E226  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12382                           
 12383                           ; BSR set to: 0
 12384                           ;fat16.c: 1031: offset += number_of_bytes;
 12385  00E228  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12386  00E22A  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12387  00E22C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12388  00E22E  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12389  00E230                     l1933:
 12390                           
 12391                           ; BSR set to: 0
 12392                           
 12393                           ; BSR set to: 0
 12394  00E230  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12395  00E232  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12396  00E234  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12397  00E236  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12398  00E238  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12399  00E23A  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12400  00E23C  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12401  00E23E  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12402  00E240  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12403  00E242  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12404  00E244  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12405  00E246  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12406  00E248  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12407  00E24A  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12408  00E24C  B0D8               	btfsc	status,0,c
 12409  00E24E  0012               	return	
 12410  00E250  D766               	goto	l1934
 12411  00E252                     __end_of_fat_modify_file:
 12412                           	opt stack 0
 12413                           tblptru	equ	0xFF8
 12414                           tblptrh	equ	0xFF7
 12415                           tblptrl	equ	0xFF6
 12416                           tablat	equ	0xFF5
 12417                           prodh	equ	0xFF4
 12418                           prodl	equ	0xFF3
 12419                           postinc0	equ	0xFEE
 12420                           wreg	equ	0xFE8
 12421                           postdec1	equ	0xFE5
 12422                           plusw1	equ	0xFE3
 12423                           fsr1h	equ	0xFE2
 12424                           fsr1l	equ	0xFE1
 12425                           indf2	equ	0xFDF
 12426                           postinc2	equ	0xFDE
 12427                           plusw2	equ	0xFDB
 12428                           fsr2h	equ	0xFDA
 12429                           fsr2l	equ	0xFD9
 12430                           status	equ	0xFD8
 12431                           
 12432 ;; *************** function _fat_create_file *****************
 12433 ;; Defined at:
 12434 ;;		line 587 in file "fat16.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12437 ;;		 -> configFile_used_name(8), 
 12438 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12439 ;;		 -> configFile_used_extention(3), 
 12440 ;;  size            4   80[BANK0 ] unsigned long 
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;  root_entry     32   93[BANK0 ] struct .
 12443 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12444 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12445 ;;  file_number     1   92[BANK0 ] unsigned char 
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1    wreg      unsigned char 
 12448 ;; Registers used:
 12449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12455 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12456 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12457 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12458 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12459 ;;Total ram usage:       49 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; Hardware stack levels required when called:   17
 12462 ;; This function calls:
 12463 ;;		__get_available_root_entry
 12464 ;;		__get_date
 12465 ;;		__get_time
 12466 ;;		__make_cluster_chain
 12467 ;;		__write_root
 12468 ;;		_fat_find_file
 12469 ;;		_memcpy
 12470 ;; This function is called by:
 12471 ;;		_configFile_write
 12472 ;;		_fat_copy_file
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476                           	psect	text34
 12477  010708                     __ptext34:
 12478                           	opt stack 0
 12479  010708                     _fat_create_file:
 12480                           	opt stack 11
 12481                           
 12482                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;incstack = 0
 12486  010708  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12487  01070C  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12488  010710  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12489  010714  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12490  010718  ECA4  F08F         	call	_fat_find_file	;wreg free
 12491  01071C  0AFF               	xorlw	255
 12492  01071E  B4D8               	btfsc	status,2,c
 12493  010720  D002               	goto	l1871
 12494                           
 12495                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12496  010722  0EFF               	movlw	255
 12497  010724  0012               	return	
 12498  010726                     l1871:
 12499                           
 12500                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12501  010726  EC77  F0AE         	call	__get_available_root_entry	;wreg free
 12502  01072A  0100               	movlb	0	; () banked
 12503  01072C  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;fat16.c: 606: if(file_number == 0xFF)
 12507  01072E  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12508  010730  A4D8               	btfss	status,2,c
 12509  010732  D002               	goto	l1873
 12510                           
 12511                           ; BSR set to: 0
 12512                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12513  010734  0EFE               	movlw	254
 12514                           
 12515                           ; BSR set to: 0
 12516  010736  0012               	return	
 12517  010738                     l1873:
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12521                           
 12522                           ; BSR set to: 0
 12523  010738  0EFF               	movlw	255
 12524  01073A  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12525  01073C  6FB4               	movwf	??_fat_create_file& (0+255),b
 12526  01073E  0E01               	movlw	1
 12527  010740  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12528  010742  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12529  010744  0E00               	movlw	0
 12530  010746  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 12531  010748  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 12532  01074A  0E00               	movlw	0
 12533  01074C  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 12534  01074E  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 12535  010750  0E0A               	movlw	10
 12536  010752  D005               	goto	u15470
 12537  010754                     u15475:
 12538  010754  90D8               	bcf	status,0,c
 12539  010756  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 12540  010758  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 12541  01075A  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 12542  01075C  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 12543  01075E                     u15470:
 12544  01075E  2EE8               	decfsz	wreg,f,c
 12545  010760  D7F9               	goto	u15475
 12546  010762  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 12547  010766  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 12551  01076A  0E00               	movlw	0
 12552  01076C  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 12553  01076E  0E00               	movlw	0
 12554  010770  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 12555  010772  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 12556  010776  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 12557  01077A  EC98  F069         	call	__make_cluster_chain	;wreg free
 12558  01077E  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 12559  010782  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 12560                           
 12561                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 12562  010786  0100               	movlb	0	; () banked
 12563  010788  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 12564  01078A  E105               	bnz	l16328
 12565  01078C  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 12566  01078E  A4D8               	btfss	status,2,c
 12567  010790  D002               	goto	l1874
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 12571  010792  0EFD               	movlw	253
 12572                           
 12573                           ; BSR set to: 0
 12574  010794  0012               	return	
 12575  010796                     l1874:
 12576  010796                     l16328:
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 12580  010796  0EBD               	movlw	low fat_create_file@root_entry
 12581  010798  6F60               	movwf	memcpy@d1& (0+255),b
 12582  01079A  0E00               	movlw	high fat_create_file@root_entry
 12583  01079C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12584  01079E  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 12585  0107A2  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 12586  0107A6  0E00               	movlw	0
 12587  0107A8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12588  0107AA  0E08               	movlw	8
 12589  0107AC  6F64               	movwf	memcpy@n& (0+255),b
 12590  0107AE  ECCA  F0A5         	call	_memcpy	;wreg free
 12591                           
 12592                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 12593  0107B2  0EC5               	movlw	low (fat_create_file@root_entry+8)
 12594  0107B4  0100               	movlb	0	; () banked
 12595  0107B6  6F60               	movwf	memcpy@d1& (0+255),b
 12596  0107B8  0E00               	movlw	high (fat_create_file@root_entry+8)
 12597  0107BA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12598  0107BC  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 12599  0107C0  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 12600  0107C4  0E00               	movlw	0
 12601  0107C6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12602  0107C8  0E03               	movlw	3
 12603  0107CA  6F64               	movwf	memcpy@n& (0+255),b
 12604  0107CC  ECCA  F0A5         	call	_memcpy	;wreg free
 12605                           
 12606                           ;fat16.c: 630: root_entry.attributes = 0x00;
 12607  0107D0  0E00               	movlw	0
 12608  0107D2  0100               	movlb	0	; () banked
 12609  0107D4  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 12613  0107D6  0E00               	movlw	0
 12614  0107D8  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 12618  0107DA  0E00               	movlw	0
 12619  0107DC  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 12623  0107DE  EC40  F0B0         	call	__get_time	;wreg free
 12624  0107E2  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 12625  0107E6  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 12626                           
 12627                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 12628  0107EA  EC46  F0B0         	call	__get_date	;wreg free
 12629  0107EE  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 12630  0107F2  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 12631                           
 12632                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 12633  0107F6  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 12634  0107FA  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 12635                           
 12636                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 12637  0107FE  0E00               	movlw	0
 12638  010800  0100               	movlb	0	; () banked
 12639  010802  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 12640  010804  0E00               	movlw	0
 12641  010806  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 12642                           
 12643                           ; BSR set to: 0
 12644                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 12645  010808  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 12646  01080C  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 12650  010810  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 12651  010814  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 12655  010818  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 12656  01081C  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;fat16.c: 640: root_entry.fileSize = size;
 12660  010820  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 12661  010824  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 12662  010828  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 12663  01082C  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 12664                           
 12665                           ; BSR set to: 0
 12666                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 12667  010830  0EBD               	movlw	low fat_create_file@root_entry
 12668  010832  6F88               	movwf	__write_root@data& (0+255),b
 12669  010834  0E00               	movlw	high fat_create_file@root_entry
 12670  010836  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12671  010838  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12672  01083A  EC52  F0AA         	call	__write_root
 12673                           
 12674                           ;fat16.c: 645: return file_number;
 12675  01083E  0100               	movlb	0	; () banked
 12676  010840  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 12677  010842  0012               	return	
 12678  010844                     __end_of_fat_create_file:
 12679                           	opt stack 0
 12680                           tblptru	equ	0xFF8
 12681                           tblptrh	equ	0xFF7
 12682                           tblptrl	equ	0xFF6
 12683                           tablat	equ	0xFF5
 12684                           prodh	equ	0xFF4
 12685                           prodl	equ	0xFF3
 12686                           postinc0	equ	0xFEE
 12687                           wreg	equ	0xFE8
 12688                           postdec1	equ	0xFE5
 12689                           plusw1	equ	0xFE3
 12690                           fsr1h	equ	0xFE2
 12691                           fsr1l	equ	0xFE1
 12692                           indf2	equ	0xFDF
 12693                           postinc2	equ	0xFDE
 12694                           plusw2	equ	0xFDB
 12695                           fsr2h	equ	0xFDA
 12696                           fsr2l	equ	0xFD9
 12697                           status	equ	0xFD8
 12698                           
 12699 ;; *************** function __write_root *****************
 12700 ;; Defined at:
 12701 ;;		line 474 in file "fat16.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;  file_number     1    wreg     unsigned char 
 12704 ;;  data            2   40[BANK0 ] PTR struct .
 12705 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12706 ;; Auto vars:     Size  Location     Type
 12707 ;;  file_number     1   46[BANK0 ] unsigned char 
 12708 ;;  offset          2   44[BANK0 ] unsigned int 
 12709 ;;  sector          2   42[BANK0 ] unsigned int 
 12710 ;; Return value:  Size  Location     Type
 12711 ;;                  1    wreg      void 
 12712 ;; Registers used:
 12713 ;;		wreg, status,2, status,0, cstack
 12714 ;; Tracked objects:
 12715 ;;		On entry : 0/0
 12716 ;;		On exit  : 0/0
 12717 ;;		Unchanged: 0/0
 12718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12720 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12722 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12723 ;;Total ram usage:        7 bytes
 12724 ;; Hardware stack levels used:    1
 12725 ;; Hardware stack levels required when called:   15
 12726 ;; This function calls:
 12727 ;;		__offset_from_file_number
 12728 ;;		__sector_from_file_number
 12729 ;;		_flash_partial_write
 12730 ;; This function is called by:
 12731 ;;		_fat_create_file
 12732 ;;		_fat_resize_file
 12733 ;;		_fat_rename_file
 12734 ;; This function uses a non-reentrant model
 12735 ;;
 12736                           
 12737                           	psect	text35
 12738  0154A4                     __ptext35:
 12739                           	opt stack 0
 12740  0154A4                     __write_root:
 12741                           	opt stack 12
 12742                           
 12743                           ;incstack = 0
 12744                           ;__write_root@file_number stored from wreg
 12745  0154A4  0100               	movlb	0	; () banked
 12746  0154A6  6F8E               	movwf	__write_root@file_number& (0+255),b
 12747                           
 12748                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 12749  0154A8  0100               	movlb	0	; () banked
 12750  0154AA  518E               	movf	__write_root@file_number& (0+255),w,b
 12751  0154AC  EC7A  F0AD         	call	__sector_from_file_number
 12752  0154B0  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 12753  0154B4  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 12754                           
 12755                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 12756  0154B8  0100               	movlb	0	; () banked
 12757  0154BA  518E               	movf	__write_root@file_number& (0+255),w,b
 12758  0154BC  EC8C  F0AE         	call	__offset_from_file_number
 12759  0154C0  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 12760  0154C4  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 12761                           
 12762                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 12763  0154C8  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 12764  0154CC  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 12765  0154D0  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 12766  0154D4  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 12767  0154D8  0E00               	movlw	0
 12768  0154DA  0100               	movlb	0	; () banked
 12769  0154DC  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 12770  0154DE  0E20               	movlw	32
 12771  0154E0  6F83               	movwf	flash_partial_write@length& (0+255),b
 12772  0154E2  C088  F085         	movff	__write_root@data,flash_partial_write@data
 12773  0154E6  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 12774  0154EA  ECFF  F0A3         	call	_flash_partial_write	;wreg free
 12775  0154EE  0012               	return		;funcret
 12776  0154F0                     __end_of__write_root:
 12777                           	opt stack 0
 12778                           tblptru	equ	0xFF8
 12779                           tblptrh	equ	0xFF7
 12780                           tblptrl	equ	0xFF6
 12781                           tablat	equ	0xFF5
 12782                           prodh	equ	0xFF4
 12783                           prodl	equ	0xFF3
 12784                           postinc0	equ	0xFEE
 12785                           wreg	equ	0xFE8
 12786                           postdec1	equ	0xFE5
 12787                           plusw1	equ	0xFE3
 12788                           fsr1h	equ	0xFE2
 12789                           fsr1l	equ	0xFE1
 12790                           indf2	equ	0xFDF
 12791                           postinc2	equ	0xFDE
 12792                           plusw2	equ	0xFDB
 12793                           fsr2h	equ	0xFDA
 12794                           fsr2l	equ	0xFD9
 12795                           status	equ	0xFD8
 12796                           
 12797 ;; *************** function _flash_partial_write *****************
 12798 ;; Defined at:
 12799 ;;		line 460 in file "flash.c"
 12800 ;; Parameters:    Size  Location     Type
 12801 ;;  page            2   31[BANK0 ] unsigned int 
 12802 ;;  start           2   33[BANK0 ] unsigned int 
 12803 ;;  length          2   35[BANK0 ] unsigned int 
 12804 ;;  data            2   37[BANK0 ] PTR unsigned char 
 12805 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 12806 ;;		 -> _delete_root@deleted_value(1), 
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;  match           1   39[BANK0 ] enum E7062
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      void 
 12811 ;; Registers used:
 12812 ;;		wreg, status,2, status,0, cstack
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12818 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12819 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12821 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12822 ;;Total ram usage:        9 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:   14
 12825 ;; This function calls:
 12826 ;;		__flash_compare_page_to_buffer
 12827 ;;		__flash_copy_page_to_buffer
 12828 ;;		__flash_is_busy
 12829 ;;		__flash_write_page_from_buffer
 12830 ;;		__flash_write_to_buffer
 12831 ;; This function is called by:
 12832 ;;		__write_root
 12833 ;;		_fat_modify_file
 12834 ;;		__delete_root
 12835 ;; This function uses a non-reentrant model
 12836 ;;
 12837                           
 12838                           	psect	text36
 12839  0147FE                     __ptext36:
 12840                           	opt stack 0
 12841  0147FE                     _flash_partial_write:
 12842                           	opt stack 12
 12843                           
 12844                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 12845                           
 12846                           ;incstack = 0
 12847  0147FE  EC4D  F0AF         	call	__flash_is_busy	;wreg free
 12848  014802  0900               	iorlw	0
 12849  014804  A4D8               	btfss	status,2,c
 12850  014806  D7FB               	goto	_flash_partial_write
 12851                           
 12852                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 12853  014808  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 12854  01480C  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 12855  014810  0E00               	movlw	0
 12856  014812  0100               	movlb	0	; () banked
 12857  014814  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 12858  014816  EC57  F0A6         	call	__flash_copy_page_to_buffer	;wreg free
 12859                           
 12860                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 12861  01481A  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 12862  01481E  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 12863  014822  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 12864  014826  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 12865  01482A  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 12866  01482E  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 12867  014832  0E00               	movlw	0
 12868  014834  0100               	movlb	0	; () banked
 12869  014836  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 12870  014838  EC12  F0A9         	call	__flash_write_to_buffer	;wreg free
 12871                           
 12872                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 12873  01483C  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 12874  014840  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 12875  014844  0E00               	movlw	0
 12876  014846  0100               	movlb	0	; () banked
 12877  014848  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 12878  01484A  ECB4  F0A1         	call	__flash_compare_page_to_buffer	;wreg free
 12879  01484E  0100               	movlb	0	; () banked
 12880  014850  6F87               	movwf	flash_partial_write@match& (0+255),b
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 12884  014852  0587               	decf	flash_partial_write@match& (0+255),w,b
 12885  014854  A4D8               	btfss	status,2,c
 12886  014856  0012               	return	
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 12890  014858  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 12891  01485C  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 12892  014860  0E00               	movlw	0
 12893  014862  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 12894  014864  ECDE  F0A6         	call	__flash_write_page_from_buffer	;wreg free
 12895  014868  0012               	return	
 12896  01486A                     __end_of_flash_partial_write:
 12897                           	opt stack 0
 12898                           tblptru	equ	0xFF8
 12899                           tblptrh	equ	0xFF7
 12900                           tblptrl	equ	0xFF6
 12901                           tablat	equ	0xFF5
 12902                           prodh	equ	0xFF4
 12903                           prodl	equ	0xFF3
 12904                           postinc0	equ	0xFEE
 12905                           wreg	equ	0xFE8
 12906                           postdec1	equ	0xFE5
 12907                           plusw1	equ	0xFE3
 12908                           fsr1h	equ	0xFE2
 12909                           fsr1l	equ	0xFE1
 12910                           indf2	equ	0xFDF
 12911                           postinc2	equ	0xFDE
 12912                           plusw2	equ	0xFDB
 12913                           fsr2h	equ	0xFDA
 12914                           fsr2l	equ	0xFD9
 12915                           status	equ	0xFD8
 12916                           
 12917 ;; *************** function __flash_copy_page_to_buffer *****************
 12918 ;; Defined at:
 12919 ;;		line 154 in file "flash.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;  page            2   19[BANK0 ] unsigned int 
 12922 ;;  buffer          1   21[BANK0 ] enum E7058
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;  command         4   25[BANK0 ] unsigned char [4]
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2, status,0, cstack
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12934 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12935 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12936 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12937 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12938 ;;Total ram usage:       10 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:   13
 12941 ;; This function calls:
 12942 ;;		__flash_is_busy
 12943 ;;		_spi_tx
 12944 ;; This function is called by:
 12945 ;;		_flash_partial_write
 12946 ;;		_flash_copy_page_to_buffer
 12947 ;; This function uses a non-reentrant model
 12948 ;;
 12949                           
 12950                           	psect	text37
 12951  014CAE                     __ptext37:
 12952                           	opt stack 0
 12953  014CAE                     __flash_copy_page_to_buffer:
 12954                           	opt stack 12
 12955                           
 12956                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 12957                           
 12958                           ;incstack = 0
 12959  014CAE  EC4D  F0AF         	call	__flash_is_busy	;wreg free
 12960  014CB2  0900               	iorlw	0
 12961  014CB4  A4D8               	btfss	status,2,c
 12962  014CB6  D7FB               	goto	__flash_copy_page_to_buffer
 12963                           
 12964                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 12965  014CB8  0100               	movlb	0	; () banked
 12966  014CBA  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 12967  014CBC  A4D8               	btfss	status,2,c
 12968  014CBE  D002               	goto	l1562
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;flash.c: 163: command[0] = 0x53;
 12972  014CC0  0E53               	movlw	83
 12973  014CC2  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 12974  014CC4                     l1562:
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 12978                           
 12979                           ; BSR set to: 0
 12980  014CC4  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 12981  014CC6  A4D8               	btfss	status,2,c
 12982  014CC8  D002               	goto	l1563
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;flash.c: 165: command[0] = 0x55;
 12986  014CCA  0E55               	movlw	85
 12987  014CCC  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 12988  014CCE                     l1563:
 12989                           
 12990                           ; BSR set to: 0
 12991                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 12992                           
 12993                           ; BSR set to: 0
 12994  014CCE  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 12995  014CD2  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 12996  014CD6  0E07               	movlw	7
 12997  014CD8  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 12998  014CDA                     u11625:
 12999  014CDA  90D8               	bcf	status,0,c
 13000  014CDC  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13001  014CDE  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13002  014CE0  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13003  014CE2  D7FB               	goto	u11625
 13004  014CE4  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13005  014CE6  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13009  014CE8  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13010  014CEA  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13011  014CEC  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13012                           
 13013                           ;flash.c: 169: command[3] = 0x00;
 13014  014CEE  0E00               	movlw	0
 13015  014CF0  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;flash.c: 172: spi_tx(command, 4);
 13019  014CF2  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13020  014CF4  6F60               	movwf	spi_tx@data& (0+255),b
 13021  014CF6  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13022  014CF8  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13023  014CFA  0E00               	movlw	0
 13024  014CFC  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13025  014CFE  0E04               	movlw	4
 13026  014D00  6F62               	movwf	spi_tx@length& (0+255),b
 13027  014D02  EC0B  F0A7         	call	_spi_tx	;wreg free
 13028  014D06  0012               	return		;funcret
 13029  014D08                     __end_of__flash_copy_page_to_buffer:
 13030                           	opt stack 0
 13031                           tblptru	equ	0xFF8
 13032                           tblptrh	equ	0xFF7
 13033                           tblptrl	equ	0xFF6
 13034                           tablat	equ	0xFF5
 13035                           prodh	equ	0xFF4
 13036                           prodl	equ	0xFF3
 13037                           postinc0	equ	0xFEE
 13038                           wreg	equ	0xFE8
 13039                           postdec1	equ	0xFE5
 13040                           plusw1	equ	0xFE3
 13041                           fsr1h	equ	0xFE2
 13042                           fsr1l	equ	0xFE1
 13043                           indf2	equ	0xFDF
 13044                           postinc2	equ	0xFDE
 13045                           plusw2	equ	0xFDB
 13046                           fsr2h	equ	0xFDA
 13047                           fsr2l	equ	0xFD9
 13048                           status	equ	0xFD8
 13049                           
 13050 ;; *************** function __make_cluster_chain *****************
 13051 ;; Defined at:
 13052 ;;		line 214 in file "fat16.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13055 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13058 ;;  offset          2   72[BANK0 ] unsigned int 
 13059 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13060 ;;  sector          2   68[BANK0 ] unsigned int 
 13061 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13062 ;;  different_se    2   63[BANK0 ] unsigned int 
 13063 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13064 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13065 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13066 ;; Return value:  Size  Location     Type
 13067 ;;                  2   53[BANK0 ] unsigned int 
 13068 ;; Registers used:
 13069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13070 ;; Tracked objects:
 13071 ;;		On entry : 0/0
 13072 ;;		On exit  : 0/0
 13073 ;;		Unchanged: 0/0
 13074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13076 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13077 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13078 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13079 ;;Total ram usage:       23 bytes
 13080 ;; Hardware stack levels used:    1
 13081 ;; Hardware stack levels required when called:   16
 13082 ;; This function calls:
 13083 ;;		__fat_offset_from_cluster
 13084 ;;		__fat_sector_from_cluster
 13085 ;;		__get_available_cluster
 13086 ;;		__get_available_offset_from_buffer
 13087 ;;		__read_value_from_offset
 13088 ;;		__write_value_to_offset
 13089 ;;		_flash_sector_read
 13090 ;;		_flash_sector_write
 13091 ;; This function is called by:
 13092 ;;		_fat_create_file
 13093 ;;		_fat_resize_file
 13094 ;;		_fat_delete_file
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text38
 13099  00D330                     __ptext38:
 13100                           	opt stack 0
 13101  00D330                     __make_cluster_chain:
 13102                           	opt stack 11
 13103                           
 13104                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13105                           
 13106                           ;incstack = 0
 13107  00D330  0E00               	movlw	0
 13108  00D332  0100               	movlb	0	; () banked
 13109  00D334  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13110  00D336  0E00               	movlw	0
 13111  00D338  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13115  00D33A  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13116  00D33E  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13117                           
 13118                           ;fat16.c: 229: minimum_sector = 2;
 13119  00D342  0E00               	movlw	0
 13120  00D344  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13121  00D346  0E02               	movlw	2
 13122  00D348  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13123                           
 13124                           ;fat16.c: 230: data_changed = 0;
 13125  00D34A  0E00               	movlw	0
 13126  00D34C  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13130  00D34E  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13131  00D350  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13132  00D352  A4D8               	btfss	status,2,c
 13133  00D354  D024               	goto	l1796
 13134                           
 13135                           ; BSR set to: 0
 13136  00D356  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13137  00D358  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13138  00D35A  B4D8               	btfsc	status,2,c
 13139  00D35C  D020               	goto	l1796
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13143  00D35E  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13144  00D362  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13145  00D366  0E00               	movlw	0
 13146  00D368  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13147  00D36A  0E00               	movlw	0
 13148  00D36C  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13149  00D36E  ECB9  F095         	call	__get_available_cluster	;wreg free
 13150  00D372  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13151  00D376  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13152                           
 13153                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13154  00D37A  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13155  00D37E  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13156  00D382  ECD0  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13157  00D386  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13158  00D38A  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13159                           
 13160                           ;fat16.c: 238: if(first_cluster == 0)
 13161  00D38E  0100               	movlb	0	; () banked
 13162  00D390  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13163  00D392  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13164  00D394  A4D8               	btfss	status,2,c
 13165  00D396  D003               	goto	l1796
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13169  00D398  6995               	setf	?__make_cluster_chain& (0+255),b
 13170  00D39A  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13171  00D39C  0012               	return	
 13172  00D39E                     l1796:
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13176                           
 13177                           ; BSR set to: 0
 13178  00D39E  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13179  00D3A2  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13180                           
 13181                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13182  00D3A6  D103               	goto	l1813
 13183  00D3A8                     
 13184                           ; BSR set to: 0
 13185                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13186                           
 13187                           ; BSR set to: 0
 13188  00D3A8  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13189  00D3AC  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13190  00D3B0  ECD0  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13191  00D3B4  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13192  00D3B8  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13193                           
 13194                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13195  00D3BC  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13196  00D3C0  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13197  00D3C4  ECDD  F0AF         	call	__fat_offset_from_cluster	;wreg free
 13198  00D3C8  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13199  00D3CC  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13200                           
 13201                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13202  00D3D0  0100               	movlb	0	; () banked
 13203  00D3D2  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13204  00D3D4  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13205  00D3D6  E104               	bnz	u13990
 13206  00D3D8  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13207  00D3DA  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13208  00D3DC  B4D8               	btfsc	status,2,c
 13209  00D3DE  D037               	goto	l1800
 13210  00D3E0                     u13990:
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13214  00D3E0  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13215  00D3E2  B4D8               	btfsc	status,2,c
 13216  00D3E4  D00A               	goto	l1801
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13220  00D3E6  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13221  00D3EA  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13222  00D3EE  0E00               	movlw	low _buffer
 13223  00D3F0  6F81               	movwf	flash_sector_write@data& (0+255),b
 13224  00D3F2  0E0A               	movlw	high _buffer
 13225  00D3F4  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13226  00D3F6  ECB3  F0A9         	call	_flash_sector_write	;wreg free
 13227  00D3FA                     l1801:
 13228                           
 13229                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13230  00D3FA  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13231  00D3FE  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13232  00D402  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13233  00D406  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13234  00D40A  ECB9  F095         	call	__get_available_cluster	;wreg free
 13235  00D40E  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13236  00D412  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13237                           
 13238                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13239  00D416  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13240  00D41A  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13241  00D41E  ECD0  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13242  00D422  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13243  00D426  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13244                           
 13245                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13246  00D42A  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13247  00D42E  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13248  00D432  0E00               	movlw	low _buffer
 13249  00D434  0100               	movlb	0	; () banked
 13250  00D436  6F89               	movwf	flash_sector_read@data& (0+255),b
 13251  00D438  0E0A               	movlw	high _buffer
 13252  00D43A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13253  00D43C  ECC9  F0AE         	call	_flash_sector_read	;wreg free
 13254                           
 13255                           ;fat16.c: 280: sector_in_buffer = sector;
 13256  00D440  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13257  00D444  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13258                           
 13259                           ;fat16.c: 281: data_changed = 0;
 13260  00D448  0E00               	movlw	0
 13261  00D44A  0100               	movlb	0	; () banked
 13262  00D44C  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13263  00D44E                     l1800:
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13267                           
 13268                           ; BSR set to: 0
 13269  00D44E  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13270  00D450  E104               	bnz	u14010
 13271  00D452  0E02               	movlw	2
 13272  00D454  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13273  00D456  A0D8               	btfss	status,0,c
 13274  00D458  D05E               	goto	l1802
 13275  00D45A                     u14010:
 13276                           
 13277                           ; BSR set to: 0
 13278                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13279  00D45A  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13280  00D45E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13281  00D462  0E00               	movlw	low _buffer
 13282  00D464  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13283  00D466  0E0A               	movlw	high _buffer
 13284  00D468  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13285  00D46A  ECC2  F0AA         	call	__read_value_from_offset	;wreg free
 13286  00D46E  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13287  00D472  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13288                           
 13289                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13290  00D476  0100               	movlb	0	; () banked
 13291  00D478  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13292  00D47A  E104               	bnz	u14020
 13293  00D47C  0E02               	movlw	2
 13294  00D47E  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13295  00D480  A0D8               	btfss	status,0,c
 13296  00D482  D006               	goto	u14030
 13297  00D484                     u14020:
 13298                           
 13299                           ; BSR set to: 0
 13300  00D484  0EDA               	movlw	218
 13301  00D486  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13302  00D488  0E1F               	movlw	31
 13303  00D48A  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13304  00D48C  A0D8               	btfss	status,0,c
 13305  00D48E  D06B               	goto	l1812
 13306  00D490                     u14030:
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13310                           
 13311                           ; BSR set to: 0
 13312  00D490  0E02               	movlw	2
 13313  00D492  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13314  00D494  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13315  00D496  0E00               	movlw	0
 13316  00D498  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13317  00D49A  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13318  00D49C  0E00               	movlw	low _buffer
 13319  00D49E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13320  00D4A0  0E0A               	movlw	high _buffer
 13321  00D4A2  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13322  00D4A4  ECFA  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 13323  00D4A8  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13324  00D4AC  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13325                           
 13326                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13327  00D4B0  0100               	movlb	0	; () banked
 13328  00D4B2  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13329  00D4B4  E103               	bnz	u14040
 13330  00D4B6  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13331  00D4B8  B4D8               	btfsc	status,2,c
 13332  00D4BA  D013               	goto	l1806
 13333  00D4BC                     u14040:
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13337  00D4BC  0EFE               	movlw	254
 13338  00D4BE  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13339  00D4C0  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13340  00D4C2  0EFF               	movlw	255
 13341  00D4C4  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13342  00D4C6  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;fat16.c: 300: next_cluster <<= 8;
 13346  00D4C8  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13347  00D4CA  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13348  00D4CC  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13352  00D4CE  90D8               	bcf	status,0,c
 13353  00D4D0  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13354  00D4D2  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13355  00D4D4  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13356  00D4D6  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13357  00D4D8  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13358  00D4DA  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13359  00D4DC  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13360  00D4DE  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13361                           
 13362                           ;fat16.c: 302: }
 13363  00D4E0  D00B               	goto	l1809
 13364  00D4E2                     l1806:
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13368                           
 13369                           ; BSR set to: 0
 13370  00D4E2  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13371  00D4E4  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13372  00D4E6  A4D8               	btfss	status,2,c
 13373  00D4E8  D003               	goto	l1808
 13374                           
 13375                           ; BSR set to: 0
 13376                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13377  00D4EA  6995               	setf	?__make_cluster_chain& (0+255),b
 13378  00D4EC  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13379  00D4EE  0012               	return	
 13380  00D4F0                     l1808:
 13381                           
 13382                           ; BSR set to: 0
 13383                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13384  00D4F0  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13385  00D4F4  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13386  00D4F8                     l1809:
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13390                           
 13391                           ; BSR set to: 0
 13392                           
 13393                           ; BSR set to: 0
 13394  00D4F8  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13395  00D4FC  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13396  00D500  0E00               	movlw	low _buffer
 13397  00D502  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13398  00D504  0E0A               	movlw	high _buffer
 13399  00D506  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13400  00D508  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13401  00D50C  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13402  00D510  ECDE  F0AC         	call	__write_value_to_offset	;wreg free
 13403  00D514  D025               	goto	L86
 13404  00D516                     l1802:
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13408                           
 13409                           ; BSR set to: 0
 13410  00D516  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13411  00D518  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13412  00D51A  A4D8               	btfss	status,2,c
 13413  00D51C  D028               	goto	l1811
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13417  00D51E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13418  00D522  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13419  00D526  0E00               	movlw	low _buffer
 13420  00D528  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13421  00D52A  0E0A               	movlw	high _buffer
 13422  00D52C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13423  00D52E  ECC2  F0AA         	call	__read_value_from_offset	;wreg free
 13424  00D532  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13425  00D536  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13426                           
 13427                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13428  00D53A  0100               	movlb	0	; () banked
 13429  00D53C  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13430  00D53E  E103               	bnz	u14070
 13431  00D540  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13432  00D542  B4D8               	btfsc	status,2,c
 13433  00D544  D010               	goto	l1812
 13434  00D546                     u14070:
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13438  00D546  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13439  00D54A  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13440  00D54E  0E00               	movlw	low _buffer
 13441  00D550  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13442  00D552  0E0A               	movlw	high _buffer
 13443  00D554  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13444  00D556  0EFF               	movlw	255
 13445  00D558  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13446  00D55A  6964               	setf	__write_value_to_offset@value& (0+255),b
 13447  00D55C  ECDE  F0AC         	call	__write_value_to_offset	;wreg free
 13448  00D560                     L86:
 13449                           
 13450                           ;fat16.c: 337: data_changed = 1;
 13451  00D560  0E01               	movlw	1
 13452  00D562  0100               	movlb	0	; () banked
 13453  00D564  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13454  00D566                     l1812:
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13458                           
 13459                           ; BSR set to: 0
 13460  00D566  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13461  00D568  A0D8               	btfss	status,0,c
 13462  00D56A  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13463                           
 13464                           ;fat16.c: 342: }
 13465  00D56C  D020               	goto	l1813
 13466  00D56E                     l1811:
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13470                           
 13471                           ; BSR set to: 0
 13472  00D56E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13473  00D572  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13474  00D576  0E00               	movlw	low _buffer
 13475  00D578  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13476  00D57A  0E0A               	movlw	high _buffer
 13477  00D57C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13478  00D57E  ECC2  F0AA         	call	__read_value_from_offset	;wreg free
 13479  00D582  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13480  00D586  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13481                           
 13482                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13483  00D58A  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13484  00D58E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13485  00D592  0E00               	movlw	low _buffer
 13486  00D594  0100               	movlb	0	; () banked
 13487  00D596  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13488  00D598  0E0A               	movlw	high _buffer
 13489  00D59A  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13490  00D59C  0E00               	movlw	0
 13491  00D59E  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13492  00D5A0  0E00               	movlw	0
 13493  00D5A2  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13494  00D5A4  ECDE  F0AC         	call	__write_value_to_offset	;wreg free
 13495                           
 13496                           ;fat16.c: 353: data_changed = 1;
 13497  00D5A8  0E01               	movlw	1
 13498  00D5AA  0100               	movlb	0	; () banked
 13499  00D5AC  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13500  00D5AE                     l1813:
 13501                           
 13502                           ; BSR set to: 0
 13503                           
 13504                           ; BSR set to: 0
 13505                           
 13506                           ; BSR set to: 0
 13507                           
 13508                           ; BSR set to: 0
 13509  00D5AE  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13510  00D5B0  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13511  00D5B2  A4D8               	btfss	status,2,c
 13512  00D5B4  D6F9               	goto	l1799
 13513                           
 13514                           ; BSR set to: 0
 13515  00D5B6  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13516  00D5B8  E104               	bnz	u14090
 13517  00D5BA  0E02               	movlw	2
 13518  00D5BC  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13519  00D5BE  A0D8               	btfss	status,0,c
 13520  00D5C0  D006               	goto	u14100
 13521  00D5C2                     u14090:
 13522                           
 13523                           ; BSR set to: 0
 13524  00D5C2  0EDA               	movlw	218
 13525  00D5C4  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13526  00D5C6  0E1F               	movlw	31
 13527  00D5C8  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13528  00D5CA  A0D8               	btfss	status,0,c
 13529  00D5CC  D6ED               	goto	l1799
 13530  00D5CE                     u14100:
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 13534                           
 13535                           ; BSR set to: 0
 13536                           
 13537                           ; BSR set to: 0
 13538  00D5CE  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13539  00D5D0  B4D8               	btfsc	status,2,c
 13540  00D5D2  D00A               	goto	l1817
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 13544  00D5D4  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13545  00D5D8  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13546  00D5DC  0E00               	movlw	low _buffer
 13547  00D5DE  6F81               	movwf	flash_sector_write@data& (0+255),b
 13548  00D5E0  0E0A               	movlw	high _buffer
 13549  00D5E2  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13550  00D5E4  ECB3  F0A9         	call	_flash_sector_write	;wreg free
 13551  00D5E8                     l1817:
 13552                           
 13553                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 13554  00D5E8  0100               	movlb	0	; () banked
 13555  00D5EA  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13556  00D5EC  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13557  00D5EE  B4D8               	btfsc	status,2,c
 13558  00D5F0  D005               	goto	l1818
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 13562  00D5F2  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 13563  00D5F6  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;fat16.c: 368: }
 13567  00D5FA  0012               	return	
 13568  00D5FC                     l1818:
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 13572                           
 13573                           ; BSR set to: 0
 13574  00D5FC  0E00               	movlw	0
 13575  00D5FE  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 13576  00D600  0E00               	movlw	0
 13577  00D602  6F95               	movwf	?__make_cluster_chain& (0+255),b
 13578                           
 13579                           ; BSR set to: 0
 13580  00D604  0012               	return	
 13581  00D606                     __end_of__make_cluster_chain:
 13582                           	opt stack 0
 13583                           tblptru	equ	0xFF8
 13584                           tblptrh	equ	0xFF7
 13585                           tblptrl	equ	0xFF6
 13586                           tablat	equ	0xFF5
 13587                           prodh	equ	0xFF4
 13588                           prodl	equ	0xFF3
 13589                           postinc0	equ	0xFEE
 13590                           wreg	equ	0xFE8
 13591                           postdec1	equ	0xFE5
 13592                           plusw1	equ	0xFE3
 13593                           fsr1h	equ	0xFE2
 13594                           fsr1l	equ	0xFE1
 13595                           indf2	equ	0xFDF
 13596                           postinc2	equ	0xFDE
 13597                           plusw2	equ	0xFDB
 13598                           fsr2h	equ	0xFDA
 13599                           fsr2l	equ	0xFD9
 13600                           status	equ	0xFD8
 13601                           
 13602 ;; *************** function __write_value_to_offset *****************
 13603 ;; Defined at:
 13604 ;;		line 124 in file "fat16.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;  offset          2    0[BANK0 ] unsigned int 
 13607 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13608 ;;		 -> buffer(512), 
 13609 ;;  value           2    4[BANK0 ] unsigned int 
 13610 ;; Auto vars:     Size  Location     Type
 13611 ;;		None
 13612 ;; Return value:  Size  Location     Type
 13613 ;;                  1    wreg      void 
 13614 ;; Registers used:
 13615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13616 ;; Tracked objects:
 13617 ;;		On entry : 0/0
 13618 ;;		On exit  : 0/0
 13619 ;;		Unchanged: 0/0
 13620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13621 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13623 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13624 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13625 ;;Total ram usage:        8 bytes
 13626 ;; Hardware stack levels used:    1
 13627 ;; Hardware stack levels required when called:   10
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		__make_cluster_chain
 13632 ;; This function uses a non-reentrant model
 13633 ;;
 13634                           
 13635                           	psect	text39
 13636  0159BC                     __ptext39:
 13637                           	opt stack 0
 13638  0159BC                     __write_value_to_offset:
 13639                           	opt stack 16
 13640                           
 13641                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;incstack = 0
 13645  0159BC  0100               	movlb	0	; () banked
 13646  0159BE  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 13647  0159C0  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13648  0159C2  6ED9               	movwf	fsr2l,c
 13649  0159C4  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 13650  0159C6  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13651  0159C8  6EDA               	movwf	fsr2h,c
 13652  0159CA  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;fat16.c: 127: value >>= 8;
 13656  0159CE  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 13657  0159D0  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13658  0159D2  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 13662  0159D4  0E01               	movlw	1
 13663  0159D6  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 13664  0159D8  6F66               	movwf	??__write_value_to_offset& (0+255),b
 13665  0159DA  0E00               	movlw	0
 13666  0159DC  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 13667  0159DE  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 13668  0159E0  5166               	movf	??__write_value_to_offset& (0+255),w,b
 13669  0159E2  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 13670  0159E4  6ED9               	movwf	fsr2l,c
 13671  0159E6  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 13672  0159E8  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 13673  0159EA  6EDA               	movwf	fsr2h,c
 13674  0159EC  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 13675                           
 13676                           ; BSR set to: 0
 13677  0159F0  0012               	return		;funcret
 13678  0159F2                     __end_of__write_value_to_offset:
 13679                           	opt stack 0
 13680                           tblptru	equ	0xFF8
 13681                           tblptrh	equ	0xFF7
 13682                           tblptrl	equ	0xFF6
 13683                           tablat	equ	0xFF5
 13684                           prodh	equ	0xFF4
 13685                           prodl	equ	0xFF3
 13686                           postinc0	equ	0xFEE
 13687                           wreg	equ	0xFE8
 13688                           postdec1	equ	0xFE5
 13689                           plusw1	equ	0xFE3
 13690                           fsr1h	equ	0xFE2
 13691                           fsr1l	equ	0xFE1
 13692                           indf2	equ	0xFDF
 13693                           postinc2	equ	0xFDE
 13694                           plusw2	equ	0xFDB
 13695                           fsr2h	equ	0xFDA
 13696                           fsr2l	equ	0xFD9
 13697                           status	equ	0xFD8
 13698                           
 13699 ;; *************** function __get_available_cluster *****************
 13700 ;; Defined at:
 13701 ;;		line 131 in file "fat16.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  first_sector    2   43[BANK0 ] unsigned int 
 13704 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;  sector          2   51[BANK0 ] unsigned int 
 13707 ;;  offset          2   49[BANK0 ] unsigned int 
 13708 ;;  cluster         2   47[BANK0 ] unsigned int 
 13709 ;; Return value:  Size  Location     Type
 13710 ;;                  2   43[BANK0 ] unsigned int 
 13711 ;; Registers used:
 13712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13713 ;; Tracked objects:
 13714 ;;		On entry : 0/0
 13715 ;;		On exit  : 0/0
 13716 ;;		Unchanged: 0/0
 13717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13719 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13721 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13722 ;;Total ram usage:       10 bytes
 13723 ;; Hardware stack levels used:    1
 13724 ;; Hardware stack levels required when called:   15
 13725 ;; This function calls:
 13726 ;;		__cluster_from_sector_and_offset
 13727 ;;		__get_available_offset_from_buffer
 13728 ;;		_flash_sector_read
 13729 ;; This function is called by:
 13730 ;;		__make_cluster_chain
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text40
 13735  012B72                     __ptext40:
 13736                           	opt stack 0
 13737  012B72                     __get_available_cluster:
 13738                           	opt stack 11
 13739                           
 13740                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;incstack = 0
 13744  012B72  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 13745  012B76  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 13746  012B7A  0100               	movlb	0	; () banked
 13747  012B7C  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 13748  012B7E  E15B               	bnz	l14064
 13749  012B80  0E22               	movlw	34
 13750  012B82  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 13751  012B84  B0D8               	btfsc	status,0,c
 13752  012B86  D057               	goto	u12690
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 13756                           
 13757                           ; BSR set to: 0
 13758                           
 13759                           ; BSR set to: 0
 13760  012B88  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 13761  012B8A  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13762  012B8C  E104               	bnz	l14040
 13763  012B8E  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 13764  012B90  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13765  012B92  B4D8               	btfsc	status,2,c
 13766  012B94  D04D               	goto	l1784
 13767  012B96                     l14040:
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 13771  012B96  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 13772  012B9A  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 13773  012B9E  0E00               	movlw	low _buffer
 13774  012BA0  6F89               	movwf	flash_sector_read@data& (0+255),b
 13775  012BA2  0E0A               	movlw	high _buffer
 13776  012BA4  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13777  012BA6  ECC9  F0AE         	call	_flash_sector_read	;wreg free
 13778                           
 13779                           ;fat16.c: 150: if(sector == 2)
 13780  012BAA  0E02               	movlw	2
 13781  012BAC  0100               	movlb	0	; () banked
 13782  012BAE  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 13783  012BB0  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 13784  012BB2  A4D8               	btfss	status,2,c
 13785  012BB4  D00B               	goto	l1779
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 13789  012BB6  0E00               	movlw	0
 13790  012BB8  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13791  012BBA  0E04               	movlw	4
 13792  012BBC  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13793  012BBE  0E00               	movlw	low _buffer
 13794  012BC0  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13795  012BC2  0E0A               	movlw	high _buffer
 13796  012BC4  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13797  012BC6  ECFA  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 13798  012BCA  D00B               	goto	L1
 13799  012BCC                     l1779:
 13800                           
 13801                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 13802  012BCC  0E00               	movlw	0
 13803  012BCE  0100               	movlb	0	; () banked
 13804  012BD0  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13805  012BD2  0E00               	movlw	0
 13806  012BD4  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13807  012BD6  0E00               	movlw	low _buffer
 13808  012BD8  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13809  012BDA  0E0A               	movlw	high _buffer
 13810  012BDC  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13811  012BDE  ECFA  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 13812  012BE2                     L1:
 13813  012BE2  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 13814  012BE6  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 13815                           
 13816                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 13817  012BEA  0100               	movlb	0	; () banked
 13818  012BEC  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 13819  012BEE  E103               	bnz	u12670
 13820  012BF0  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 13821  012BF2  B4D8               	btfsc	status,2,c
 13822  012BF4  D01D               	goto	l1784
 13823  012BF6                     u12670:
 13824                           
 13825                           ; BSR set to: 0
 13826                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 13827  012BF6  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 13828  012BFA  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 13829  012BFE  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 13830  012C02  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 13831  012C06  ECA1  F0AE         	call	__cluster_from_sector_and_offset	;wreg free
 13832  012C0A  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 13833  012C0E  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 13834                           
 13835                           ;fat16.c: 166: if(cluster > 8191)
 13836  012C12  0E20               	movlw	32
 13837  012C14  0100               	movlb	0	; () banked
 13838  012C16  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 13839  012C18  A0D8               	btfss	status,0,c
 13840  012C1A  D005               	goto	l1782
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 13844  012C1C  0E00               	movlw	0
 13845  012C1E  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13846  012C20  0E00               	movlw	0
 13847  012C22  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13848                           
 13849                           ; BSR set to: 0
 13850  012C24  0012               	return	
 13851  012C26                     l1782:
 13852                           
 13853                           ; BSR set to: 0
 13854                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 13855  012C26  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 13856  012C2A  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 13857  012C2E  0012               	return	
 13858  012C30                     l1784:
 13859                           
 13860                           ; BSR set to: 0
 13861                           
 13862                           ; BSR set to: 0
 13863                           
 13864                           ; BSR set to: 0
 13865                           
 13866                           ; BSR set to: 0
 13867  012C30  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 13868  012C32  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 13869  012C34  D7A3               	goto	L2
 13870  012C36                     u12690:
 13871  012C36                     l14064:
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 13875  012C36  0E00               	movlw	0
 13876  012C38  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 13877  012C3A  0E00               	movlw	0
 13878  012C3C  6F8B               	movwf	?__get_available_cluster& (0+255),b
 13879  012C3E  0012               	return	
 13880  012C40                     __end_of__get_available_cluster:
 13881                           	opt stack 0
 13882                           tblptru	equ	0xFF8
 13883                           tblptrh	equ	0xFF7
 13884                           tblptrl	equ	0xFF6
 13885                           tablat	equ	0xFF5
 13886                           prodh	equ	0xFF4
 13887                           prodl	equ	0xFF3
 13888                           postinc0	equ	0xFEE
 13889                           wreg	equ	0xFE8
 13890                           postdec1	equ	0xFE5
 13891                           plusw1	equ	0xFE3
 13892                           fsr1h	equ	0xFE2
 13893                           fsr1l	equ	0xFE1
 13894                           indf2	equ	0xFDF
 13895                           postinc2	equ	0xFDE
 13896                           plusw2	equ	0xFDB
 13897                           fsr2h	equ	0xFDA
 13898                           fsr2l	equ	0xFD9
 13899                           status	equ	0xFD8
 13900                           
 13901 ;; *************** function __get_available_offset_from_buffer *****************
 13902 ;; Defined at:
 13903 ;;		line 99 in file "fat16.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 13906 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13907 ;;		 -> buffer(512), 
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;  offset          2    6[BANK0 ] unsigned int 
 13910 ;; Return value:  Size  Location     Type
 13911 ;;                  2    0[BANK0 ] unsigned int 
 13912 ;; Registers used:
 13913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13914 ;; Tracked objects:
 13915 ;;		On entry : 0/0
 13916 ;;		On exit  : 0/0
 13917 ;;		Unchanged: 0/0
 13918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13919 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13920 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13921 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13922 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13923 ;;Total ram usage:        8 bytes
 13924 ;; Hardware stack levels used:    1
 13925 ;; Hardware stack levels required when called:   10
 13926 ;; This function calls:
 13927 ;;		Nothing
 13928 ;; This function is called by:
 13929 ;;		__get_available_cluster
 13930 ;;		__make_cluster_chain
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text41
 13935  014BF4                     __ptext41:
 13936                           	opt stack 0
 13937  014BF4                     __get_available_offset_from_buffer:
 13938                           	opt stack 16
 13939                           
 13940                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;incstack = 0
 13944  014BF4  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 13945  014BF8  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 13946  014BFC  0E02               	movlw	2
 13947  014BFE  0100               	movlb	0	; () banked
 13948  014C00  D022               	goto	L3
 13949  014C02                     
 13950                           ; BSR set to: 0
 13951                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 13952                           
 13953                           ; BSR set to: 0
 13954  014C02  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 13955  014C04  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 13956  014C06  6ED9               	movwf	fsr2l,c
 13957  014C08  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 13958  014C0A  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 13959  014C0C  6EDA               	movwf	fsr2h,c
 13960  014C0E  50DF               	movf	indf2,w,c
 13961  014C10  A4D8               	btfss	status,2,c
 13962  014C12  D014               	goto	l1765
 13963                           
 13964                           ; BSR set to: 0
 13965  014C14  0E01               	movlw	1
 13966  014C16  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 13967  014C18  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 13968  014C1A  0E00               	movlw	0
 13969  014C1C  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 13970  014C1E  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 13971  014C20  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 13972  014C22  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 13973  014C24  6ED9               	movwf	fsr2l,c
 13974  014C26  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 13975  014C28  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 13976  014C2A  6EDA               	movwf	fsr2h,c
 13977  014C2C  50DF               	movf	indf2,w,c
 13978  014C2E  A4D8               	btfss	status,2,c
 13979  014C30  D005               	goto	l1765
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 13983  014C32  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 13984  014C36  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 13985  014C3A  0012               	return	
 13986  014C3C                     l1765:
 13987                           
 13988                           ; BSR set to: 0
 13989                           
 13990                           ; BSR set to: 0
 13991  014C3C  0E02               	movlw	2
 13992  014C3E  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 13993  014C40  0E00               	movlw	0
 13994  014C42  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 13995  014C44  0E02               	movlw	2
 13996  014C46                     L3:
 13997  014C46  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 13998  014C48  A0D8               	btfss	status,0,c
 13999  014C4A  D7DB               	goto	l1763
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14003  014C4C  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14004  014C4E  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14005                           
 14006                           ; BSR set to: 0
 14007  014C50  0012               	return		;funcret
 14008  014C52                     __end_of__get_available_offset_from_buffer:
 14009                           	opt stack 0
 14010                           tblptru	equ	0xFF8
 14011                           tblptrh	equ	0xFF7
 14012                           tblptrl	equ	0xFF6
 14013                           tablat	equ	0xFF5
 14014                           prodh	equ	0xFF4
 14015                           prodl	equ	0xFF3
 14016                           postinc0	equ	0xFEE
 14017                           wreg	equ	0xFE8
 14018                           postdec1	equ	0xFE5
 14019                           plusw1	equ	0xFE3
 14020                           fsr1h	equ	0xFE2
 14021                           fsr1l	equ	0xFE1
 14022                           indf2	equ	0xFDF
 14023                           postinc2	equ	0xFDE
 14024                           plusw2	equ	0xFDB
 14025                           fsr2h	equ	0xFDA
 14026                           fsr2l	equ	0xFD9
 14027                           status	equ	0xFD8
 14028                           
 14029 ;; *************** function __cluster_from_sector_and_offset *****************
 14030 ;; Defined at:
 14031 ;;		line 90 in file "fat16.c"
 14032 ;; Parameters:    Size  Location     Type
 14033 ;;  sector          2    0[BANK0 ] unsigned int 
 14034 ;;  offset          2    2[BANK0 ] unsigned int 
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;		None
 14037 ;; Return value:  Size  Location     Type
 14038 ;;                  2    0[BANK0 ] unsigned int 
 14039 ;; Registers used:
 14040 ;;		wreg, status,2, status,0
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14049 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14050 ;;Total ram usage:        4 bytes
 14051 ;; Hardware stack levels used:    1
 14052 ;; Hardware stack levels required when called:   10
 14053 ;; This function calls:
 14054 ;;		Nothing
 14055 ;; This function is called by:
 14056 ;;		__get_available_cluster
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           	psect	text42
 14061  015D42                     __ptext42:
 14062                           	opt stack 0
 14063  015D42                     __cluster_from_sector_and_offset:
 14064                           	opt stack 15
 14065                           
 14066                           ;fat16.c: 92: offset >>= 1;
 14067                           
 14068                           ; BSR set to: 0
 14069                           ;incstack = 0
 14070  015D42  0100               	movlb	0	; () banked
 14071  015D44  90D8               	bcf	status,0,c
 14072  015D46  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14073  015D48  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;fat16.c: 93: sector -= 2;
 14077  015D4A  0E02               	movlw	2
 14078  015D4C  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14079  015D4E  0E00               	movlw	0
 14080  015D50  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;fat16.c: 94: sector <<= 8;
 14084  015D52  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14085  015D54  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14086  015D56  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14087                           
 14088                           ; BSR set to: 0
 14089                           ;fat16.c: 95: sector |= offset;
 14090  015D58  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14091  015D5A  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14092  015D5C  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14093  015D5E  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;fat16.c: 96: return sector;
 14097  015D60  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14098  015D64  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14099  015D68  0012               	return	
 14100  015D6A                     __end_of__cluster_from_sector_and_offset:
 14101                           	opt stack 0
 14102                           tblptru	equ	0xFF8
 14103                           tblptrh	equ	0xFF7
 14104                           tblptrl	equ	0xFF6
 14105                           tablat	equ	0xFF5
 14106                           prodh	equ	0xFF4
 14107                           prodl	equ	0xFF3
 14108                           postinc0	equ	0xFEE
 14109                           wreg	equ	0xFE8
 14110                           postdec1	equ	0xFE5
 14111                           plusw1	equ	0xFE3
 14112                           fsr1h	equ	0xFE2
 14113                           fsr1l	equ	0xFE1
 14114                           indf2	equ	0xFDF
 14115                           postinc2	equ	0xFDE
 14116                           plusw2	equ	0xFDB
 14117                           fsr2h	equ	0xFDA
 14118                           fsr2l	equ	0xFD9
 14119                           status	equ	0xFD8
 14120                           
 14121 ;; *************** function __get_time *****************
 14122 ;; Defined at:
 14123 ;;		line 377 in file "fat16.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;		None
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;		None
 14128 ;; Return value:  Size  Location     Type
 14129 ;;                  2    0[BANK0 ] unsigned int 
 14130 ;; Registers used:
 14131 ;;		wreg, status,2
 14132 ;; Tracked objects:
 14133 ;;		On entry : 0/0
 14134 ;;		On exit  : 0/0
 14135 ;;		Unchanged: 0/0
 14136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14140 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14141 ;;Total ram usage:        2 bytes
 14142 ;; Hardware stack levels used:    1
 14143 ;; Hardware stack levels required when called:   10
 14144 ;; This function calls:
 14145 ;;		Nothing
 14146 ;; This function is called by:
 14147 ;;		_fat_create_file
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           	psect	text43
 14152  016080                     __ptext43:
 14153                           	opt stack 0
 14154  016080                     __get_time:
 14155                           	opt stack 17
 14156                           
 14157                           ;fat16.c: 389: return 0x0000;
 14158                           
 14159                           ; BSR set to: 0
 14160                           ;incstack = 0
 14161  016080  0E00               	movlw	0
 14162  016082  0100               	movlb	0	; () banked
 14163  016084  6F61               	movwf	(?__get_time+1)& (0+255),b
 14164  016086  0E00               	movlw	0
 14165  016088  6F60               	movwf	?__get_time& (0+255),b
 14166  01608A  0012               	return	
 14167  01608C                     __end_of__get_time:
 14168                           	opt stack 0
 14169                           tblptru	equ	0xFF8
 14170                           tblptrh	equ	0xFF7
 14171                           tblptrl	equ	0xFF6
 14172                           tablat	equ	0xFF5
 14173                           prodh	equ	0xFF4
 14174                           prodl	equ	0xFF3
 14175                           postinc0	equ	0xFEE
 14176                           wreg	equ	0xFE8
 14177                           postdec1	equ	0xFE5
 14178                           plusw1	equ	0xFE3
 14179                           fsr1h	equ	0xFE2
 14180                           fsr1l	equ	0xFE1
 14181                           indf2	equ	0xFDF
 14182                           postinc2	equ	0xFDE
 14183                           plusw2	equ	0xFDB
 14184                           fsr2h	equ	0xFDA
 14185                           fsr2l	equ	0xFD9
 14186                           status	equ	0xFD8
 14187                           
 14188 ;; *************** function __get_date *****************
 14189 ;; Defined at:
 14190 ;;		line 393 in file "fat16.c"
 14191 ;; Parameters:    Size  Location     Type
 14192 ;;		None
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;		None
 14195 ;; Return value:  Size  Location     Type
 14196 ;;                  2    0[BANK0 ] unsigned int 
 14197 ;; Registers used:
 14198 ;;		wreg, status,2
 14199 ;; Tracked objects:
 14200 ;;		On entry : 0/0
 14201 ;;		On exit  : 0/0
 14202 ;;		Unchanged: 0/0
 14203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14208 ;;Total ram usage:        2 bytes
 14209 ;; Hardware stack levels used:    1
 14210 ;; Hardware stack levels required when called:   10
 14211 ;; This function calls:
 14212 ;;		Nothing
 14213 ;; This function is called by:
 14214 ;;		_fat_create_file
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           	psect	text44
 14219  01608C                     __ptext44:
 14220                           	opt stack 0
 14221  01608C                     __get_date:
 14222                           	opt stack 17
 14223                           
 14224                           ;fat16.c: 405: return 0x0000;
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;incstack = 0
 14228  01608C  0E00               	movlw	0
 14229  01608E  0100               	movlb	0	; () banked
 14230  016090  6F61               	movwf	(?__get_date+1)& (0+255),b
 14231  016092  0E00               	movlw	0
 14232  016094  6F60               	movwf	?__get_date& (0+255),b
 14233  016096  0012               	return	
 14234  016098                     __end_of__get_date:
 14235                           	opt stack 0
 14236                           tblptru	equ	0xFF8
 14237                           tblptrh	equ	0xFF7
 14238                           tblptrl	equ	0xFF6
 14239                           tablat	equ	0xFF5
 14240                           prodh	equ	0xFF4
 14241                           prodl	equ	0xFF3
 14242                           postinc0	equ	0xFEE
 14243                           wreg	equ	0xFE8
 14244                           postdec1	equ	0xFE5
 14245                           plusw1	equ	0xFE3
 14246                           fsr1h	equ	0xFE2
 14247                           fsr1l	equ	0xFE1
 14248                           indf2	equ	0xFDF
 14249                           postinc2	equ	0xFDE
 14250                           plusw2	equ	0xFDB
 14251                           fsr2h	equ	0xFDA
 14252                           fsr2l	equ	0xFD9
 14253                           status	equ	0xFD8
 14254                           
 14255 ;; *************** function __get_available_root_entry *****************
 14256 ;; Defined at:
 14257 ;;		line 443 in file "fat16.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;		None
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;  file_number     1   53[BANK0 ] unsigned char 
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  1    wreg      unsigned char 
 14264 ;; Registers used:
 14265 ;;		wreg, status,2, status,0, cstack
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14274 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14275 ;;Total ram usage:        1 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; Hardware stack levels required when called:   16
 14278 ;; This function calls:
 14279 ;;		__root_is_available
 14280 ;; This function is called by:
 14281 ;;		_fat_create_file
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           	psect	text45
 14286  015CEE                     __ptext45:
 14287                           	opt stack 0
 14288  015CEE                     __get_available_root_entry:
 14289                           	opt stack 11
 14290                           
 14291                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;incstack = 0
 14295  015CEE  0E00               	movlw	0
 14296  015CF0  0100               	movlb	0	; () banked
 14297  015CF2  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14298  015CF4                     l15052:
 14299                           
 14300                           ; BSR set to: 0
 14301  015CF4  0E3F               	movlw	63
 14302  015CF6  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14303  015CF8  D001               	goto	l1836
 14304  015CFA  D00C               	goto	u14150
 14305  015CFC                     l1836:
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14309                           
 14310                           ; BSR set to: 0
 14311  015CFC  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14312  015CFE  EC35  F0A4         	call	__root_is_available
 14313  015D02  0900               	iorlw	0
 14314  015D04  B4D8               	btfsc	status,2,c
 14315  015D06  D003               	goto	l1838
 14316                           
 14317                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14318  015D08  0100               	movlb	0	; () banked
 14319  015D0A  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14320                           
 14321                           ; BSR set to: 0
 14322  015D0C  0012               	return	
 14323  015D0E                     l1838:
 14324                           
 14325                           ; BSR set to: 0
 14326  015D0E  0100               	movlb	0	; () banked
 14327  015D10  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14328  015D12  D7F0               	goto	l15052
 14329  015D14                     u14150:
 14330                           
 14331                           ; BSR set to: 0
 14332                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14333                           
 14334                           ; BSR set to: 0
 14335  015D14  0EFF               	movlw	255
 14336  015D16  0012               	return	
 14337  015D18                     __end_of__get_available_root_entry:
 14338                           	opt stack 0
 14339                           tblptru	equ	0xFF8
 14340                           tblptrh	equ	0xFF7
 14341                           tblptrl	equ	0xFF6
 14342                           tablat	equ	0xFF5
 14343                           prodh	equ	0xFF4
 14344                           prodl	equ	0xFF3
 14345                           postinc0	equ	0xFEE
 14346                           wreg	equ	0xFE8
 14347                           postdec1	equ	0xFE5
 14348                           plusw1	equ	0xFE3
 14349                           fsr1h	equ	0xFE2
 14350                           fsr1l	equ	0xFE1
 14351                           indf2	equ	0xFDF
 14352                           postinc2	equ	0xFDE
 14353                           plusw2	equ	0xFDB
 14354                           fsr2h	equ	0xFDA
 14355                           fsr2l	equ	0xFD9
 14356                           status	equ	0xFD8
 14357                           
 14358 ;; *************** function __add_item *****************
 14359 ;; Defined at:
 14360 ;;		line 42 in file "config_file.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14363 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 14364 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 14365 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 14366 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 14367 ;;  value           4   38[BANK0 ] long 
 14368 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14369 ;;		 -> ConfigFile_buffer(512), 
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;  length          1   46[BANK0 ] unsigned char 
 14372 ;; Return value:  Size  Location     Type
 14373 ;;                  1    wreg      unsigned char 
 14374 ;; Registers used:
 14375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/0
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14381 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14382 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14383 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14384 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14385 ;;Total ram usage:       11 bytes
 14386 ;; Hardware stack levels used:    1
 14387 ;; Hardware stack levels required when called:   13
 14388 ;; This function calls:
 14389 ;;		_ltoa
 14390 ;; This function is called by:
 14391 ;;		_configFile_write
 14392 ;; This function uses a non-reentrant model
 14393 ;;
 14394                           
 14395                           	psect	text46
 14396  011B82                     __ptext46:
 14397                           	opt stack 0
 14398  011B82                     __add_item:
 14399                           	opt stack 15
 14400                           
 14401                           ;config_file.c: 44: uint8_t length = 0;
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;incstack = 0
 14405  011B82  0E00               	movlw	0
 14406  011B84  0100               	movlb	0	; () banked
 14407  011B86  6F8E               	movwf	__add_item@length& (0+255),b
 14408                           
 14409                           ;config_file.c: 47: while(item_string[length])
 14410  011B88  D01C               	goto	l3032
 14411  011B8A                     
 14412                           ; BSR set to: 0
 14413                           ;config_file.c: 48: {;config_file.c: 49: buffer[length] = item_string[length];
 14414                           
 14415                           ; BSR set to: 0
 14416  011B8A  518E               	movf	__add_item@length& (0+255),w,b
 14417  011B8C  0D01               	mullw	1
 14418  011B8E  C084  F08C         	movff	__add_item@item_string,??__add_item
 14419  011B92  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14420  011B96  50F3               	movf	prodl,w,c
 14421  011B98  278C               	addwf	??__add_item& (0+255),f,b
 14422  011B9A  50F4               	movf	prodh,w,c
 14423  011B9C  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14424  011B9E  C08C  FFF6         	movff	??__add_item,tblptrl
 14425  011BA2  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14426  011BA6                     	if	0	;tblptru may be non-zero
 14427  011BA6                     	endif
 14428  011BA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14429  011BA6  0E00               	movlw	low (__mediumconst shr (0+16))
 14430  011BA8  6EF8               	movwf	tblptru,c
 14431  011BAA                     	endif
 14432  011BAA  518E               	movf	__add_item@length& (0+255),w,b
 14433  011BAC  0D01               	mullw	1
 14434  011BAE  50F3               	movf	prodl,w,c
 14435  011BB0  258A               	addwf	__add_item@buffer& (0+255),w,b
 14436  011BB2  6ED9               	movwf	fsr2l,c
 14437  011BB4  50F4               	movf	prodh,w,c
 14438  011BB6  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14439  011BB8  6EDA               	movwf	fsr2h,c
 14440  011BBA  0008               	tblrd		*
 14441  011BBC  CFF5 FFDF          	movff	tablat,indf2
 14442                           
 14443                           ; BSR set to: 0
 14444                           ;config_file.c: 50: ++length;
 14445  011BC0  2B8E               	incf	__add_item@length& (0+255),f,b
 14446  011BC2                     l3032:
 14447                           
 14448                           ; BSR set to: 0
 14449                           
 14450                           ; BSR set to: 0
 14451  011BC2  518E               	movf	__add_item@length& (0+255),w,b
 14452  011BC4  0D01               	mullw	1
 14453  011BC6  C084  F08C         	movff	__add_item@item_string,??__add_item
 14454  011BCA  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14455  011BCE  50F3               	movf	prodl,w,c
 14456  011BD0  278C               	addwf	??__add_item& (0+255),f,b
 14457  011BD2  50F4               	movf	prodh,w,c
 14458  011BD4  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14459  011BD6  C08C  FFF6         	movff	??__add_item,tblptrl
 14460  011BDA  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14461  011BDE                     	if	0	;tblptru may be non-zero
 14462  011BDE                     	endif
 14463  011BDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14464  011BDE  0E00               	movlw	low (__mediumconst shr (0+16))
 14465  011BE0  6EF8               	movwf	tblptru,c
 14466  011BE2                     	endif
 14467  011BE2  0008               	tblrd		*
 14468  011BE4  50F5               	movf	tablat,w,c
 14469  011BE6  0900               	iorlw	0
 14470  011BE8  A4D8               	btfss	status,2,c
 14471  011BEA  D7CF               	goto	l3033
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;config_file.c: 51: };config_file.c: 54: buffer[length++] = '=';
 14475                           
 14476                           ; BSR set to: 0
 14477  011BEC  518E               	movf	__add_item@length& (0+255),w,b
 14478  011BEE  0D01               	mullw	1
 14479  011BF0  50F3               	movf	prodl,w,c
 14480  011BF2  258A               	addwf	__add_item@buffer& (0+255),w,b
 14481  011BF4  6ED9               	movwf	fsr2l,c
 14482  011BF6  50F4               	movf	prodh,w,c
 14483  011BF8  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14484  011BFA  6EDA               	movwf	fsr2h,c
 14485  011BFC  0E3D               	movlw	61
 14486  011BFE  6EDF               	movwf	indf2,c
 14487                           
 14488                           ; BSR set to: 0
 14489  011C00  2B8E               	incf	__add_item@length& (0+255),f,b
 14490                           
 14491                           ; BSR set to: 0
 14492                           ;config_file.c: 57: ltoa(&buffer[length], value, 10);
 14493  011C02  518E               	movf	__add_item@length& (0+255),w,b
 14494  011C04  0D01               	mullw	1
 14495  011C06  50F3               	movf	prodl,w,c
 14496  011C08  258A               	addwf	__add_item@buffer& (0+255),w,b
 14497  011C0A  6F7A               	movwf	ltoa@buf& (0+255),b
 14498  011C0C  50F4               	movf	prodh,w,c
 14499  011C0E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14500  011C10  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14501  011C12  C086  F07C         	movff	__add_item@value,ltoa@val
 14502  011C16  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14503  011C1A  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14504  011C1E  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14505  011C22  0E00               	movlw	0
 14506  011C24  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14507  011C26  0E0A               	movlw	10
 14508  011C28  6F80               	movwf	ltoa@base& (0+255),b
 14509  011C2A  EC94  F0A8         	call	_ltoa	;wreg free
 14510                           
 14511                           ;config_file.c: 58: while(buffer[length])
 14512  011C2E  D002               	goto	l3035
 14513  011C30                     
 14514                           ;config_file.c: 59: {;config_file.c: 60: ++length;
 14515  011C30  0100               	movlb	0	; () banked
 14516  011C32  2B8E               	incf	__add_item@length& (0+255),f,b
 14517  011C34                     l3035:
 14518                           
 14519                           ; BSR set to: 0
 14520  011C34  0100               	movlb	0	; () banked
 14521  011C36  518E               	movf	__add_item@length& (0+255),w,b
 14522  011C38  0D01               	mullw	1
 14523  011C3A  50F3               	movf	prodl,w,c
 14524  011C3C  258A               	addwf	__add_item@buffer& (0+255),w,b
 14525  011C3E  6ED9               	movwf	fsr2l,c
 14526  011C40  50F4               	movf	prodh,w,c
 14527  011C42  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14528  011C44  6EDA               	movwf	fsr2h,c
 14529  011C46  50DF               	movf	indf2,w,c
 14530  011C48  A4D8               	btfss	status,2,c
 14531  011C4A  D7F2               	goto	l3036
 14532                           
 14533                           ; BSR set to: 0
 14534                           ;config_file.c: 61: };config_file.c: 64: buffer[length++] = '\r';
 14535                           
 14536                           ; BSR set to: 0
 14537  011C4C  518E               	movf	__add_item@length& (0+255),w,b
 14538  011C4E  0D01               	mullw	1
 14539  011C50  50F3               	movf	prodl,w,c
 14540  011C52  258A               	addwf	__add_item@buffer& (0+255),w,b
 14541  011C54  6ED9               	movwf	fsr2l,c
 14542  011C56  50F4               	movf	prodh,w,c
 14543  011C58  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14544  011C5A  6EDA               	movwf	fsr2h,c
 14545  011C5C  0E0D               	movlw	13
 14546  011C5E  6EDF               	movwf	indf2,c
 14547                           
 14548                           ; BSR set to: 0
 14549  011C60  2B8E               	incf	__add_item@length& (0+255),f,b
 14550                           
 14551                           ; BSR set to: 0
 14552                           ;config_file.c: 65: buffer[length++] = '\n';
 14553  011C62  518E               	movf	__add_item@length& (0+255),w,b
 14554  011C64  0D01               	mullw	1
 14555  011C66  50F3               	movf	prodl,w,c
 14556  011C68  258A               	addwf	__add_item@buffer& (0+255),w,b
 14557  011C6A  6ED9               	movwf	fsr2l,c
 14558  011C6C  50F4               	movf	prodh,w,c
 14559  011C6E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14560  011C70  6EDA               	movwf	fsr2h,c
 14561  011C72  0E0A               	movlw	10
 14562  011C74  6EDF               	movwf	indf2,c
 14563  011C76  2B8E               	incf	__add_item@length& (0+255),f,b
 14564                           
 14565                           ; BSR set to: 0
 14566                           ;config_file.c: 68: return length;
 14567  011C78  518E               	movf	__add_item@length& (0+255),w,b
 14568  011C7A  0012               	return	
 14569  011C7C                     __end_of__add_item:
 14570                           	opt stack 0
 14571                           tblptru	equ	0xFF8
 14572                           tblptrh	equ	0xFF7
 14573                           tblptrl	equ	0xFF6
 14574                           tablat	equ	0xFF5
 14575                           prodh	equ	0xFF4
 14576                           prodl	equ	0xFF3
 14577                           postinc0	equ	0xFEE
 14578                           wreg	equ	0xFE8
 14579                           postdec1	equ	0xFE5
 14580                           plusw1	equ	0xFE3
 14581                           fsr1h	equ	0xFE2
 14582                           fsr1l	equ	0xFE1
 14583                           indf2	equ	0xFDF
 14584                           postinc2	equ	0xFDE
 14585                           plusw2	equ	0xFDB
 14586                           fsr2h	equ	0xFDA
 14587                           fsr2l	equ	0xFD9
 14588                           status	equ	0xFD8
 14589                           
 14590 ;; *************** function _ltoa *****************
 14591 ;; Defined at:
 14592 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 14595 ;;		 -> ConfigFile_buffer(512), 
 14596 ;;  val             4   28[BANK0 ] long 
 14597 ;;  base            2   32[BANK0 ] int 
 14598 ;; Auto vars:     Size  Location     Type
 14599 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 14600 ;;		 -> ConfigFile_buffer(512), 
 14601 ;; Return value:  Size  Location     Type
 14602 ;;                  2   26[BANK0 ] PTR unsigned char 
 14603 ;; Registers used:
 14604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14605 ;; Tracked objects:
 14606 ;;		On entry : 0/0
 14607 ;;		On exit  : 0/0
 14608 ;;		Unchanged: 0/0
 14609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14613 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14614 ;;Total ram usage:       10 bytes
 14615 ;; Hardware stack levels used:    1
 14616 ;; Hardware stack levels required when called:   12
 14617 ;; This function calls:
 14618 ;;		_ultoa
 14619 ;; This function is called by:
 14620 ;;		__add_item
 14621 ;; This function uses a non-reentrant model
 14622 ;;
 14623                           
 14624                           	psect	text47
 14625  015128                     __ptext47:
 14626                           	opt stack 0
 14627  015128                     _ltoa:
 14628                           	opt stack 15
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;incstack = 0
 14632  015128  C07A  F082         	movff	ltoa@buf,ltoa@cp
 14633  01512C  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 14634  015130  0100               	movlb	0	; () banked
 14635  015132  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 14636  015134  D010               	goto	l3810
 14637                           
 14638                           ; BSR set to: 0
 14639  015136  C07A  FFD9         	movff	ltoa@buf,fsr2l
 14640  01513A  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 14641  01513E  0E2D               	movlw	45
 14642  015140  6EDF               	movwf	indf2,c
 14643                           
 14644                           ; BSR set to: 0
 14645  015142  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 14646  015144  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 14647                           
 14648                           ; BSR set to: 0
 14649  015146  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 14650  015148  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 14651  01514A  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 14652  01514C  6D7C               	negf	ltoa@val& (0+255),b
 14653  01514E  0E00               	movlw	0
 14654  015150  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 14655  015152  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 14656  015154  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 14657  015156                     l3810:
 14658                           
 14659                           ; BSR set to: 0
 14660                           
 14661                           ; BSR set to: 0
 14662  015156  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 14663  01515A  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 14664  01515E  C07C  F06F         	movff	ltoa@val,ultoa@val
 14665  015162  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 14666  015166  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 14667  01516A  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 14668  01516E  C080  F073         	movff	ltoa@base,ultoa@base
 14669  015172  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 14670  015176  ECC4  F08C         	call	_ultoa	;wreg free
 14671  01517A  0012               	return	
 14672  01517C                     __end_of_ltoa:
 14673                           	opt stack 0
 14674                           tblptru	equ	0xFF8
 14675                           tblptrh	equ	0xFF7
 14676                           tblptrl	equ	0xFF6
 14677                           tablat	equ	0xFF5
 14678                           prodh	equ	0xFF4
 14679                           prodl	equ	0xFF3
 14680                           postinc0	equ	0xFEE
 14681                           wreg	equ	0xFE8
 14682                           postdec1	equ	0xFE5
 14683                           plusw1	equ	0xFE3
 14684                           fsr1h	equ	0xFE2
 14685                           fsr1l	equ	0xFE1
 14686                           indf2	equ	0xFDF
 14687                           postinc2	equ	0xFDE
 14688                           plusw2	equ	0xFDB
 14689                           fsr2h	equ	0xFDA
 14690                           fsr2l	equ	0xFD9
 14691                           status	equ	0xFD8
 14692                           
 14693 ;; *************** function _ultoa *****************
 14694 ;; Defined at:
 14695 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 14698 ;;		 -> ConfigFile_buffer(512), 
 14699 ;;  val             4   15[BANK0 ] unsigned long 
 14700 ;;  base            2   19[BANK0 ] int 
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;  v               4   21[BANK0 ] unsigned long 
 14703 ;;  c               1   25[BANK0 ] unsigned char 
 14704 ;; Return value:  Size  Location     Type
 14705 ;;                  2   13[BANK0 ] PTR unsigned char 
 14706 ;; Registers used:
 14707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14708 ;; Tracked objects:
 14709 ;;		On entry : 0/0
 14710 ;;		On exit  : 0/0
 14711 ;;		Unchanged: 0/0
 14712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14713 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14714 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14716 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14717 ;;Total ram usage:       13 bytes
 14718 ;; Hardware stack levels used:    1
 14719 ;; Hardware stack levels required when called:   11
 14720 ;; This function calls:
 14721 ;;		___lldiv
 14722 ;;		___llmod
 14723 ;; This function is called by:
 14724 ;;		_ltoa
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text48
 14729  011988                     __ptext48:
 14730                           	opt stack 0
 14731  011988                     _ultoa:
 14732                           	opt stack 15
 14733                           
 14734                           ;incstack = 0
 14735  011988  C06F  F075         	movff	ultoa@val,ultoa@v
 14736  01198C  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 14737  011990  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 14738  011994  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 14739  011998  C075  F060         	movff	ultoa@v,___lldiv@dividend
 14740  01199C  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 14741  0119A0  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 14742  0119A4  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 14743  0119A8  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14744  0119AC  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14745  0119B0  0100               	movlb	0	; () banked
 14746  0119B2  0E00               	movlw	0
 14747  0119B4  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14748  0119B6  0EFF               	movlw	-1
 14749  0119B8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14750  0119BA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14751  0119BC  EC71  F0A0         	call	___lldiv	;wreg free
 14752  0119C0  C060  F075         	movff	?___lldiv,ultoa@v
 14753  0119C4  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 14754  0119C8  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 14755  0119CC  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 14756  0119D0  0100               	movlb	0	; () banked
 14757  0119D2  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 14758  0119D4  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 14759                           
 14760                           ; BSR set to: 0
 14761  0119D6  5175               	movf	ultoa@v& (0+255),w,b
 14762  0119D8  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 14763  0119DA  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 14764  0119DC  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 14765  0119DE  A4D8               	btfss	status,2,c
 14766  0119E0  D7DB               	goto	l3814
 14767                           
 14768                           ; BSR set to: 0
 14769                           
 14770                           ; BSR set to: 0
 14771  0119E2  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14772  0119E6  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14773  0119EA  0E00               	movlw	0
 14774  0119EC  6EDF               	movwf	indf2,c
 14775                           
 14776                           ; BSR set to: 0
 14777  0119EE  076D               	decf	ultoa@buf& (0+255),f,b
 14778  0119F0  A0D8               	btfss	status,0,c
 14779  0119F2  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14780  0119F4                     
 14781                           ; BSR set to: 0
 14782                           
 14783                           ; BSR set to: 0
 14784  0119F4  C06F  F060         	movff	ultoa@val,___llmod@dividend
 14785  0119F8  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 14786  0119FC  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 14787  011A00  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 14788  011A04  C073  F064         	movff	ultoa@base,___llmod@divisor
 14789  011A08  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 14790  011A0C  0E00               	movlw	0
 14791  011A0E  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 14792  011A10  0EFF               	movlw	-1
 14793  011A12  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 14794  011A14  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 14795  011A16  ECA0  F0A4         	call	___llmod	;wreg free
 14796  011A1A  0100               	movlb	0	; () banked
 14797  011A1C  5160               	movf	?___llmod& (0+255),w,b
 14798  011A1E  6F79               	movwf	ultoa@c& (0+255),b
 14799                           
 14800                           ; BSR set to: 0
 14801  011A20  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 14802  011A24  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 14803  011A28  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 14804  011A2C  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 14805  011A30  C073  F064         	movff	ultoa@base,___lldiv@divisor
 14806  011A34  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 14807  011A38  0E00               	movlw	0
 14808  011A3A  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 14809  011A3C  0EFF               	movlw	-1
 14810  011A3E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14811  011A40  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14812  011A42  EC71  F0A0         	call	___lldiv	;wreg free
 14813  011A46  C060  F06F         	movff	?___lldiv,ultoa@val
 14814  011A4A  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 14815  011A4E  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 14816  011A52  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 14817  011A56  0E09               	movlw	9
 14818  011A58  0100               	movlb	0	; () banked
 14819  011A5A  6579               	cpfsgt	ultoa@c& (0+255),b
 14820  011A5C  D002               	goto	l3817
 14821                           
 14822                           ; BSR set to: 0
 14823  011A5E  0E07               	movlw	7
 14824  011A60  2779               	addwf	ultoa@c& (0+255),f,b
 14825  011A62                     l3817:
 14826                           
 14827                           ; BSR set to: 0
 14828  011A62  0E30               	movlw	48
 14829  011A64  2779               	addwf	ultoa@c& (0+255),f,b
 14830                           
 14831                           ; BSR set to: 0
 14832  011A66  C06D  FFD9         	movff	ultoa@buf,fsr2l
 14833  011A6A  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 14834  011A6E  C079  FFDF         	movff	ultoa@c,indf2
 14835                           
 14836                           ; BSR set to: 0
 14837  011A72  076D               	decf	ultoa@buf& (0+255),f,b
 14838  011A74  A0D8               	btfss	status,0,c
 14839  011A76  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 14840                           
 14841                           ; BSR set to: 0
 14842  011A78  516F               	movf	ultoa@val& (0+255),w,b
 14843  011A7A  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 14844  011A7C  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 14845  011A7E  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 14846  011A80  B4D8               	btfsc	status,2,c
 14847  011A82  0012               	return	
 14848  011A84  D7B7               	goto	l3816
 14849  011A86                     __end_of_ultoa:
 14850                           	opt stack 0
 14851                           tblptru	equ	0xFF8
 14852                           tblptrh	equ	0xFF7
 14853                           tblptrl	equ	0xFF6
 14854                           tablat	equ	0xFF5
 14855                           prodh	equ	0xFF4
 14856                           prodl	equ	0xFF3
 14857                           postinc0	equ	0xFEE
 14858                           wreg	equ	0xFE8
 14859                           postdec1	equ	0xFE5
 14860                           plusw1	equ	0xFE3
 14861                           fsr1h	equ	0xFE2
 14862                           fsr1l	equ	0xFE1
 14863                           indf2	equ	0xFDF
 14864                           postinc2	equ	0xFDE
 14865                           plusw2	equ	0xFDB
 14866                           fsr2h	equ	0xFDA
 14867                           fsr2l	equ	0xFD9
 14868                           status	equ	0xFD8
 14869                           
 14870 ;; *************** function ___llmod *****************
 14871 ;; Defined at:
 14872 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;  dividend        4    0[BANK0 ] unsigned long 
 14875 ;;  divisor         4    4[BANK0 ] unsigned long 
 14876 ;; Auto vars:     Size  Location     Type
 14877 ;;  counter         1    8[BANK0 ] unsigned char 
 14878 ;; Return value:  Size  Location     Type
 14879 ;;                  4    0[BANK0 ] unsigned long 
 14880 ;; Registers used:
 14881 ;;		wreg, status,2, status,0
 14882 ;; Tracked objects:
 14883 ;;		On entry : 0/0
 14884 ;;		On exit  : 0/0
 14885 ;;		Unchanged: 0/0
 14886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14887 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14890 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14891 ;;Total ram usage:        9 bytes
 14892 ;; Hardware stack levels used:    1
 14893 ;; Hardware stack levels required when called:   10
 14894 ;; This function calls:
 14895 ;;		Nothing
 14896 ;; This function is called by:
 14897 ;;		_ultoa
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           	psect	text49
 14902  014940                     __ptext49:
 14903                           	opt stack 0
 14904  014940                     ___llmod:
 14905                           	opt stack 15
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;incstack = 0
 14909  014940  0100               	movlb	0	; () banked
 14910  014942  5164               	movf	___llmod@divisor& (0+255),w,b
 14911  014944  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 14912  014946  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 14913  014948  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 14914  01494A  B4D8               	btfsc	status,2,c
 14915  01494C  D024               	goto	l3512
 14916                           
 14917                           ; BSR set to: 0
 14918  01494E  0E01               	movlw	1
 14919  014950  6F68               	movwf	___llmod@counter& (0+255),b
 14920  014952  D006               	goto	l3507
 14921  014954                     
 14922                           ; BSR set to: 0
 14923                           
 14924                           ; BSR set to: 0
 14925  014954  90D8               	bcf	status,0,c
 14926  014956  3764               	rlcf	___llmod@divisor& (0+255),f,b
 14927  014958  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 14928  01495A  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 14929  01495C  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 14930  01495E  2B68               	incf	___llmod@counter& (0+255),f,b
 14931  014960                     l3507:
 14932                           
 14933                           ; BSR set to: 0
 14934                           
 14935                           ; BSR set to: 0
 14936  014960  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 14937  014962  D7F8               	goto	l3508
 14938  014964                     u11920:
 14939                           
 14940                           ; BSR set to: 0
 14941                           
 14942                           ; BSR set to: 0
 14943                           
 14944                           ; BSR set to: 0
 14945  014964  5164               	movf	___llmod@divisor& (0+255),w,b
 14946  014966  5D60               	subwf	___llmod@dividend& (0+255),w,b
 14947  014968  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 14948  01496A  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 14949  01496C  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 14950  01496E  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 14951  014970  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 14952  014972  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 14953  014974  A0D8               	btfss	status,0,c
 14954  014976  D008               	goto	l3511
 14955                           
 14956                           ; BSR set to: 0
 14957  014978  5164               	movf	___llmod@divisor& (0+255),w,b
 14958  01497A  5F60               	subwf	___llmod@dividend& (0+255),f,b
 14959  01497C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 14960  01497E  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 14961  014980  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 14962  014982  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 14963  014984  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 14964  014986  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 14965  014988                     l3511:
 14966                           
 14967                           ; BSR set to: 0
 14968                           
 14969                           ; BSR set to: 0
 14970  014988  90D8               	bcf	status,0,c
 14971  01498A  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 14972  01498C  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 14973  01498E  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 14974  014990  3364               	rrcf	___llmod@divisor& (0+255),f,b
 14975                           
 14976                           ; BSR set to: 0
 14977  014992  2F68               	decfsz	___llmod@counter& (0+255),f,b
 14978  014994  D7E7               	goto	u11920
 14979  014996                     l3512:
 14980                           
 14981                           ; BSR set to: 0
 14982                           
 14983                           ; BSR set to: 0
 14984  014996  C060  F060         	movff	___llmod@dividend,?___llmod
 14985  01499A  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 14986  01499E  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 14987  0149A2  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 14988                           
 14989                           ; BSR set to: 0
 14990  0149A6  0012               	return		;funcret
 14991  0149A8                     __end_of___llmod:
 14992                           	opt stack 0
 14993                           tblptru	equ	0xFF8
 14994                           tblptrh	equ	0xFF7
 14995                           tblptrl	equ	0xFF6
 14996                           tablat	equ	0xFF5
 14997                           prodh	equ	0xFF4
 14998                           prodl	equ	0xFF3
 14999                           postinc0	equ	0xFEE
 15000                           wreg	equ	0xFE8
 15001                           postdec1	equ	0xFE5
 15002                           plusw1	equ	0xFE3
 15003                           fsr1h	equ	0xFE2
 15004                           fsr1l	equ	0xFE1
 15005                           indf2	equ	0xFDF
 15006                           postinc2	equ	0xFDE
 15007                           plusw2	equ	0xFDB
 15008                           fsr2h	equ	0xFDA
 15009                           fsr2l	equ	0xFD9
 15010                           status	equ	0xFD8
 15011                           
 15012 ;; *************** function ___lldiv *****************
 15013 ;; Defined at:
 15014 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15015 ;; Parameters:    Size  Location     Type
 15016 ;;  dividend        4    0[BANK0 ] unsigned long 
 15017 ;;  divisor         4    4[BANK0 ] unsigned long 
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;  quotient        4    8[BANK0 ] unsigned long 
 15020 ;;  counter         1   12[BANK0 ] unsigned char 
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  4    0[BANK0 ] unsigned long 
 15023 ;; Registers used:
 15024 ;;		wreg, status,2, status,0
 15025 ;; Tracked objects:
 15026 ;;		On entry : 0/0
 15027 ;;		On exit  : 0/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15030 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15031 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15033 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15034 ;;Total ram usage:       13 bytes
 15035 ;; Hardware stack levels used:    1
 15036 ;; Hardware stack levels required when called:   10
 15037 ;; This function calls:
 15038 ;;		Nothing
 15039 ;; This function is called by:
 15040 ;;		_ultoa
 15041 ;; This function uses a non-reentrant model
 15042 ;;
 15043                           
 15044                           	psect	text50
 15045  0140E2                     __ptext50:
 15046                           	opt stack 0
 15047  0140E2                     ___lldiv:
 15048                           	opt stack 15
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;incstack = 0
 15052  0140E2  0E00               	movlw	0
 15053  0140E4  0100               	movlb	0	; () banked
 15054  0140E6  6F68               	movwf	___lldiv@quotient& (0+255),b
 15055  0140E8  0E00               	movlw	0
 15056  0140EA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15057  0140EC  0E00               	movlw	0
 15058  0140EE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15059  0140F0  0E00               	movlw	0
 15060  0140F2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15061                           
 15062                           ; BSR set to: 0
 15063  0140F4  5164               	movf	___lldiv@divisor& (0+255),w,b
 15064  0140F6  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15065  0140F8  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15066  0140FA  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15067  0140FC  B4D8               	btfsc	status,2,c
 15068  0140FE  D02A               	goto	l3131
 15069                           
 15070                           ; BSR set to: 0
 15071  014100  0E01               	movlw	1
 15072  014102  6F6C               	movwf	___lldiv@counter& (0+255),b
 15073  014104  D006               	goto	l3126
 15074  014106                     
 15075                           ; BSR set to: 0
 15076                           
 15077                           ; BSR set to: 0
 15078  014106  90D8               	bcf	status,0,c
 15079  014108  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15080  01410A  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15081  01410C  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15082  01410E  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15083  014110  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15084  014112                     l3126:
 15085                           
 15086                           ; BSR set to: 0
 15087                           
 15088                           ; BSR set to: 0
 15089  014112  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15090  014114  D7F8               	goto	l3127
 15091  014116                     u11890:
 15092                           
 15093                           ; BSR set to: 0
 15094                           
 15095                           ; BSR set to: 0
 15096                           
 15097                           ; BSR set to: 0
 15098  014116  90D8               	bcf	status,0,c
 15099  014118  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15100  01411A  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15101  01411C  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15102  01411E  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15103                           
 15104                           ; BSR set to: 0
 15105  014120  5164               	movf	___lldiv@divisor& (0+255),w,b
 15106  014122  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15107  014124  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15108  014126  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15109  014128  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15110  01412A  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15111  01412C  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15112  01412E  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15113  014130  A0D8               	btfss	status,0,c
 15114  014132  D009               	goto	l3130
 15115                           
 15116                           ; BSR set to: 0
 15117  014134  5164               	movf	___lldiv@divisor& (0+255),w,b
 15118  014136  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15119  014138  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15120  01413A  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15121  01413C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15122  01413E  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15123  014140  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15124  014142  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15125                           
 15126                           ; BSR set to: 0
 15127  014144  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15128  014146                     l3130:
 15129                           
 15130                           ; BSR set to: 0
 15131                           
 15132                           ; BSR set to: 0
 15133  014146  90D8               	bcf	status,0,c
 15134  014148  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15135  01414A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15136  01414C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15137  01414E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15138                           
 15139                           ; BSR set to: 0
 15140  014150  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15141  014152  D7E1               	goto	u11890
 15142  014154                     l3131:
 15143                           
 15144                           ; BSR set to: 0
 15145                           
 15146                           ; BSR set to: 0
 15147  014154  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15148  014158  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15149  01415C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15150  014160  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15151                           
 15152                           ; BSR set to: 0
 15153  014164  0012               	return		;funcret
 15154  014166                     __end_of___lldiv:
 15155                           	opt stack 0
 15156                           tblptru	equ	0xFF8
 15157                           tblptrh	equ	0xFF7
 15158                           tblptrl	equ	0xFF6
 15159                           tablat	equ	0xFF5
 15160                           prodh	equ	0xFF4
 15161                           prodl	equ	0xFF3
 15162                           postinc0	equ	0xFEE
 15163                           wreg	equ	0xFE8
 15164                           postdec1	equ	0xFE5
 15165                           plusw1	equ	0xFE3
 15166                           fsr1h	equ	0xFE2
 15167                           fsr1l	equ	0xFE1
 15168                           indf2	equ	0xFDF
 15169                           postinc2	equ	0xFDE
 15170                           plusw2	equ	0xFDB
 15171                           fsr2h	equ	0xFDA
 15172                           fsr2l	equ	0xFD9
 15173                           status	equ	0xFD8
 15174                           
 15175 ;; *************** function _configFile_readDefault *****************
 15176 ;; Defined at:
 15177 ;;		line 251 in file "config_file.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;		None
 15180 ;; Auto vars:     Size  Location     Type
 15181 ;;		None
 15182 ;; Return value:  Size  Location     Type
 15183 ;;                  1    wreg      void 
 15184 ;; Registers used:
 15185 ;;		wreg, status,2
 15186 ;; Tracked objects:
 15187 ;;		On entry : 0/0
 15188 ;;		On exit  : 0/0
 15189 ;;		Unchanged: 0/0
 15190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15195 ;;Total ram usage:        0 bytes
 15196 ;; Hardware stack levels used:    1
 15197 ;; Hardware stack levels required when called:   10
 15198 ;; This function calls:
 15199 ;;		Nothing
 15200 ;; This function is called by:
 15201 ;;		_system_init
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205                           	psect	text51
 15206  014552                     __ptext51:
 15207                           	opt stack 0
 15208  014552                     _configFile_readDefault:
 15209                           	opt stack 19
 15210                           
 15211                           ;config_file.c: 253: config.full_circle_in_steps = 576000;
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;incstack = 0
 15215  014552  0E00               	movlw	0
 15216  014554  0101               	movlb	1	; () banked
 15217  014556  6F96               	movwf	_config& (0+255),b
 15218  014558  0ECA               	movlw	202
 15219  01455A  6F97               	movwf	(_config+1)& (0+255),b
 15220  01455C  0E08               	movlw	8
 15221  01455E  6F98               	movwf	(_config+2)& (0+255),b
 15222  014560  0E00               	movlw	0
 15223  014562  6F99               	movwf	(_config+3)& (0+255),b
 15224                           
 15225                           ;config_file.c: 254: config.inverse_direction = 1;
 15226  014564  0E01               	movlw	1
 15227  014566  6F9A               	movwf	(_config+4)& (0+255),b
 15228                           
 15229                           ;config_file.c: 255: config.overshoot_in_steps = 6400;
 15230  014568  0E19               	movlw	25
 15231  01456A  6F9C               	movwf	(_config+6)& (0+255),b
 15232  01456C  0E00               	movlw	0
 15233  01456E  6F9B               	movwf	(_config+5)& (0+255),b
 15234                           
 15235                           ;config_file.c: 256: config.overshoot_cost_in_steps = 3000;
 15236  014570  0E0B               	movlw	11
 15237  014572  6F9E               	movwf	(_config+8)& (0+255),b
 15238  014574  0EB8               	movlw	184
 15239  014576  6F9D               	movwf	(_config+7)& (0+255),b
 15240                           
 15241                           ;config_file.c: 257: config.minimum_speed = 1;
 15242  014578  0E00               	movlw	0
 15243  01457A  6FA0               	movwf	(_config+10)& (0+255),b
 15244  01457C  0E01               	movlw	1
 15245  01457E  6F9F               	movwf	(_config+9)& (0+255),b
 15246                           
 15247                           ;config_file.c: 258: config.maximum_speed = 380;
 15248  014580  0E01               	movlw	1
 15249  014582  6FA2               	movwf	(_config+12)& (0+255),b
 15250  014584  0E7C               	movlw	124
 15251  014586  6FA1               	movwf	(_config+11)& (0+255),b
 15252                           
 15253                           ;config_file.c: 259: config.maximum_speed_arc = 305;
 15254  014588  0E01               	movlw	1
 15255  01458A  6FA6               	movwf	(_config+16)& (0+255),b
 15256  01458C  0E31               	movlw	49
 15257  01458E  6FA5               	movwf	(_config+15)& (0+255),b
 15258                           
 15259                           ;config_file.c: 260: config.maximum_speed_manual = 305;
 15260  014590  0E01               	movlw	1
 15261  014592  6FAA               	movwf	(_config+20)& (0+255),b
 15262  014594  0E31               	movlw	49
 15263  014596  6FA9               	movwf	(_config+19)& (0+255),b
 15264                           
 15265                           ;config_file.c: 261: config.use_ccw_limit = 0;
 15266  014598  0E00               	movlw	0
 15267  01459A  6FB5               	movwf	(_config+31)& (0+255),b
 15268                           
 15269                           ;config_file.c: 262: config.ccw_limit = 35500;
 15270  01459C  0EAC               	movlw	172
 15271  01459E  6FB6               	movwf	(_config+32)& (0+255),b
 15272  0145A0  0E8A               	movlw	138
 15273  0145A2  6FB7               	movwf	(_config+33)& (0+255),b
 15274  0145A4  0E00               	movlw	0
 15275  0145A6  6FB8               	movwf	(_config+34)& (0+255),b
 15276  0145A8  0E00               	movlw	0
 15277  0145AA  6FB9               	movwf	(_config+35)& (0+255),b
 15278                           
 15279                           ;config_file.c: 263: config.use_cw_limit = 0;
 15280  0145AC  0E00               	movlw	0
 15281  0145AE  6FAC               	movwf	(_config+22)& (0+255),b
 15282                           
 15283                           ;config_file.c: 264: config.cw_limit = 500;
 15284  0145B0  0EF4               	movlw	244
 15285  0145B2  6FAD               	movwf	(_config+23)& (0+255),b
 15286  0145B4  0E01               	movlw	1
 15287  0145B6  6FAE               	movwf	(_config+24)& (0+255),b
 15288  0145B8  0E00               	movlw	0
 15289  0145BA  6FAF               	movwf	(_config+25)& (0+255),b
 15290  0145BC  0E00               	movlw	0
 15291  0145BE  6FB0               	movwf	(_config+26)& (0+255),b
 15292                           
 15293                           ;config_file.c: 265: config.beep_duration = 10;
 15294  0145C0  0E0A               	movlw	10
 15295  0145C2  6FAB               	movwf	(_config+21)& (0+255),b
 15296                           
 15297                           ;config_file.c: 266: config.position_display_180 = 0;
 15298  0145C4  0E00               	movlw	0
 15299  0145C6  6FBE               	movwf	(_config+40)& (0+255),b
 15300                           
 15301                           ; BSR set to: 1
 15302  0145C8  0012               	return		;funcret
 15303  0145CA                     __end_of_configFile_readDefault:
 15304                           	opt stack 0
 15305                           tblptru	equ	0xFF8
 15306                           tblptrh	equ	0xFF7
 15307                           tblptrl	equ	0xFF6
 15308                           tablat	equ	0xFF5
 15309                           prodh	equ	0xFF4
 15310                           prodl	equ	0xFF3
 15311                           postinc0	equ	0xFEE
 15312                           wreg	equ	0xFE8
 15313                           postdec1	equ	0xFE5
 15314                           plusw1	equ	0xFE3
 15315                           fsr1h	equ	0xFE2
 15316                           fsr1l	equ	0xFE1
 15317                           indf2	equ	0xFDF
 15318                           postinc2	equ	0xFDE
 15319                           plusw2	equ	0xFDB
 15320                           fsr2h	equ	0xFDA
 15321                           fsr2l	equ	0xFD9
 15322                           status	equ	0xFD8
 15323                           
 15324 ;; *************** function _configFile_read *****************
 15325 ;; Defined at:
 15326 ;;		line 270 in file "config_file.c"
 15327 ;; Parameters:    Size  Location     Type
 15328 ;;		None
 15329 ;; Auto vars:     Size  Location     Type
 15330 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15331 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15332 ;;  position        4   56[BANK1 ] unsigned long 
 15333 ;;  file_size       4   51[BANK1 ] unsigned long 
 15334 ;;  file_number     1   55[BANK1 ] unsigned char 
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  1    wreg      void 
 15337 ;; Registers used:
 15338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15345 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15346 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15347 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15348 ;;Total ram usage:       60 bytes
 15349 ;; Hardware stack levels used:    1
 15350 ;; Hardware stack levels required when called:   19
 15351 ;; This function calls:
 15352 ;;		__get_item
 15353 ;;		__parse_item
 15354 ;;		_fat_find_file
 15355 ;;		_fat_get_file_size
 15356 ;;		_fat_read_from_file
 15357 ;; This function is called by:
 15358 ;;		_system_init
 15359 ;; This function uses a non-reentrant model
 15360 ;;
 15361                           
 15362                           	psect	text52
 15363  00F394                     __ptext52:
 15364                           	opt stack 0
 15365  00F394                     _configFile_read:
 15366                           	opt stack 10
 15367                           
 15368                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 274: uint32_t position;;config_file.c: 275: char item_string[31];;config_file.c
      +                          : 276: char value_string[12];;config_file.c: 279: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15369                           
 15370                           ; BSR set to: 1
 15371                           ;incstack = 0
 15372  00F394  0EDC               	movlw	low _configFile_name
 15373  00F396  0100               	movlb	0	; () banked
 15374  00F398  6F8B               	movwf	fat_find_file@name& (0+255),b
 15375  00F39A  0E02               	movlw	high _configFile_name
 15376  00F39C  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15377  00F39E  0EE7               	movlw	low _configFile_extention
 15378  00F3A0  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15379  00F3A2  0E02               	movlw	high _configFile_extention
 15380  00F3A4  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15381  00F3A6  ECA4  F08F         	call	_fat_find_file	;wreg free
 15382  00F3AA  0101               	movlb	1	; () banked
 15383  00F3AC  6FFB               	movwf	configFile_read@file_number& (0+255),b
 15384                           
 15385                           ; BSR set to: 1
 15386                           ;config_file.c: 280: if(file_number==0xFF)
 15387  00F3AE  29FB               	incf	configFile_read@file_number& (0+255),w,b
 15388  00F3B0  B4D8               	btfsc	status,2,c
 15389  00F3B2  0012               	return	
 15390                           
 15391                           ; BSR set to: 1
 15392                           ;config_file.c: 284: };config_file.c: 287: file_size = fat_get_file_size(file_number);
 15393                           
 15394                           ; BSR set to: 1
 15395                           
 15396                           ; BSR set to: 1
 15397                           ;config_file.c: 281: {;config_file.c: 283: return;
 15398  00F3B4  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15399  00F3B6  EC2F  F0A2         	call	_fat_get_file_size
 15400  00F3BA  C095  F1F7         	movff	?_fat_get_file_size,configFile_read@file_size
 15401  00F3BE  C096  F1F8         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15402  00F3C2  C097  F1F9         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15403  00F3C6  C098  F1FA         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15404                           
 15405                           ;config_file.c: 290: position = 0;
 15406  00F3CA  0E00               	movlw	0
 15407  00F3CC  0101               	movlb	1	; () banked
 15408  00F3CE  6FFC               	movwf	configFile_read@position& (0+255),b
 15409  00F3D0  0E00               	movlw	0
 15410  00F3D2  6FFD               	movwf	(configFile_read@position+1)& (0+255),b
 15411  00F3D4  0E00               	movlw	0
 15412  00F3D6  6FFE               	movwf	(configFile_read@position+2)& (0+255),b
 15413  00F3D8  0E00               	movlw	0
 15414  00F3DA  6FFF               	movwf	(configFile_read@position+3)& (0+255),b
 15415                           
 15416                           ;config_file.c: 291: while((file_size-position)>3)
 15417  00F3DC  D086               	goto	l3086
 15418  00F3DE                     
 15419                           ; BSR set to: 1
 15420                           ;config_file.c: 292: {;config_file.c: 293: if((position+45) > file_size)
 15421                           
 15422                           ; BSR set to: 1
 15423  00F3DE  0E2D               	movlw	45
 15424  00F3E0  25FC               	addwf	configFile_read@position& (0+255),w,b
 15425  00F3E2  6FC4               	movwf	??_configFile_read& (0+255),b
 15426  00F3E4  0E00               	movlw	0
 15427  00F3E6  21FD               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15428  00F3E8  6FC5               	movwf	(??_configFile_read+1)& (0+255),b
 15429  00F3EA  0E00               	movlw	0
 15430  00F3EC  21FE               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15431  00F3EE  6FC6               	movwf	(??_configFile_read+2)& (0+255),b
 15432  00F3F0  0E00               	movlw	0
 15433  00F3F2  21FF               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15434  00F3F4  6FC7               	movwf	(??_configFile_read+3)& (0+255),b
 15435  00F3F6  51C4               	movf	??_configFile_read& (0+255),w,b
 15436  00F3F8  5DF7               	subwf	configFile_read@file_size& (0+255),w,b
 15437  00F3FA  51C5               	movf	(??_configFile_read+1)& (0+255),w,b
 15438  00F3FC  59F8               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15439  00F3FE  51C6               	movf	(??_configFile_read+2)& (0+255),w,b
 15440  00F400  59F9               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15441  00F402  51C7               	movf	(??_configFile_read+3)& (0+255),w,b
 15442  00F404  59FA               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15443  00F406  B0D8               	btfsc	status,0,c
 15444  00F408  D035               	goto	l3088
 15445                           
 15446                           ; BSR set to: 1
 15447                           ;config_file.c: 294: {;config_file.c: 296: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15448  00F40A  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15449  00F40E  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15450  00F412  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15451  00F416  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15452  00F41A  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15453  00F41E  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15454  00F422  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15455  00F426  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15456  00F42A  1FC4               	comf	??_configFile_read& (0+255),f,b
 15457  00F42C  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15458  00F42E  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15459  00F430  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15460  00F432  2BC4               	incf	??_configFile_read& (0+255),f,b
 15461  00F434  0E00               	movlw	0
 15462  00F436  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15463  00F438  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15464  00F43A  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15465  00F43C  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15466  00F43E  25C4               	addwf	??_configFile_read& (0+255),w,b
 15467  00F440  0100               	movlb	0	; () banked
 15468  00F442  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15469  00F444  0101               	movlb	1	; () banked
 15470  00F446  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15471  00F448  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15472  00F44A  0100               	movlb	0	; () banked
 15473  00F44C  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15474  00F44E  0101               	movlb	1	; () banked
 15475  00F450  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15476  00F452  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15477  00F454  0100               	movlb	0	; () banked
 15478  00F456  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15479  00F458  0101               	movlb	1	; () banked
 15480  00F45A  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15481  00F45C  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15482  00F45E  0100               	movlb	0	; () banked
 15483  00F460  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15484  00F462  0E00               	movlw	low _ConfigFile_buffer
 15485  00F464  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15486  00F466  0E08               	movlw	high _ConfigFile_buffer
 15487  00F468  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15488  00F46A  0101               	movlb	1	; () banked
 15489  00F46C  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15490  00F46E  EC18  F090         	call	_fat_read_from_file
 15491                           
 15492                           ;config_file.c: 297: }
 15493  00F472  D019               	goto	l3089
 15494  00F474                     l3088:
 15495                           
 15496                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 301: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15497  00F474  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15498  00F478  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15499  00F47C  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15500  00F480  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15501  00F484  0E2D               	movlw	45
 15502  00F486  0100               	movlb	0	; () banked
 15503  00F488  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15504  00F48A  0E00               	movlw	0
 15505  00F48C  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15506  00F48E  0E00               	movlw	0
 15507  00F490  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15508  00F492  0E00               	movlw	0
 15509  00F494  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15510  00F496  0E00               	movlw	low _ConfigFile_buffer
 15511  00F498  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15512  00F49A  0E08               	movlw	high _ConfigFile_buffer
 15513  00F49C  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15514  00F49E  0101               	movlb	1	; () banked
 15515  00F4A0  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15516  00F4A2  EC18  F090         	call	_fat_read_from_file
 15517  00F4A6                     l3089:
 15518                           
 15519                           ;config_file.c: 302: };config_file.c: 305: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15520  00F4A6  0ECC               	movlw	low configFile_read@item_string
 15521  00F4A8  0100               	movlb	0	; () banked
 15522  00F4AA  6F60               	movwf	__get_item@item_string& (0+255),b
 15523  00F4AC  0E01               	movlw	high configFile_read@item_string
 15524  00F4AE  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15525  00F4B0  0EEB               	movlw	low configFile_read@value_string
 15526  00F4B2  6F62               	movwf	__get_item@value_string& (0+255),b
 15527  00F4B4  0E01               	movlw	high configFile_read@value_string
 15528  00F4B6  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15529  00F4B8  0E00               	movlw	low _ConfigFile_buffer
 15530  00F4BA  6F64               	movwf	__get_item@buffer& (0+255),b
 15531  00F4BC  0E08               	movlw	high _ConfigFile_buffer
 15532  00F4BE  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 15533  00F4C0  EC33  F07C         	call	__get_item	;wreg free
 15534  00F4C4  0101               	movlb	1	; () banked
 15535  00F4C6  6FC4               	movwf	??_configFile_read& (0+255),b
 15536  00F4C8  51C4               	movf	??_configFile_read& (0+255),w,b
 15537  00F4CA  27FC               	addwf	configFile_read@position& (0+255),f,b
 15538  00F4CC  0E00               	movlw	0
 15539  00F4CE  23FD               	addwfc	(configFile_read@position+1)& (0+255),f,b
 15540  00F4D0  23FE               	addwfc	(configFile_read@position+2)& (0+255),f,b
 15541  00F4D2  23FF               	addwfc	(configFile_read@position+3)& (0+255),f,b
 15542                           
 15543                           ; BSR set to: 1
 15544                           ;config_file.c: 308: _parse_item(&item_string[0], &value_string[0]);
 15545  00F4D4  0ECC               	movlw	low configFile_read@item_string
 15546  00F4D6  0100               	movlb	0	; () banked
 15547  00F4D8  6F99               	movwf	__parse_item@item_string& (0+255),b
 15548  00F4DA  0E01               	movlw	high configFile_read@item_string
 15549  00F4DC  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 15550  00F4DE  0EEB               	movlw	low configFile_read@value_string
 15551  00F4E0  6F9B               	movwf	__parse_item@value_string& (0+255),b
 15552  00F4E2  0E01               	movlw	high configFile_read@value_string
 15553  00F4E4  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 15554  00F4E6  ECF1  F05E         	call	__parse_item	;wreg free
 15555  00F4EA                     l3086:
 15556  00F4EA  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15557  00F4EE  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15558  00F4F2  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15559  00F4F6  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15560  00F4FA  0101               	movlb	1	; () banked
 15561  00F4FC  1FC4               	comf	??_configFile_read& (0+255),f,b
 15562  00F4FE  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15563  00F500  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15564  00F502  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15565  00F504  2BC4               	incf	??_configFile_read& (0+255),f,b
 15566  00F506  0E00               	movlw	0
 15567  00F508  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15568  00F50A  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15569  00F50C  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15570  00F50E  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15571  00F510  25C4               	addwf	??_configFile_read& (0+255),w,b
 15572  00F512  6FC8               	movwf	(??_configFile_read+4)& (0+255),b
 15573  00F514  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15574  00F516  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15575  00F518  6FC9               	movwf	(??_configFile_read+5)& (0+255),b
 15576  00F51A  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15577  00F51C  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15578  00F51E  6FCA               	movwf	(??_configFile_read+6)& (0+255),b
 15579  00F520  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15580  00F522  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15581  00F524  6FCB               	movwf	(??_configFile_read+7)& (0+255),b
 15582  00F526  51CB               	movf	(??_configFile_read+7)& (0+255),w,b
 15583  00F528  11CA               	iorwf	(??_configFile_read+6)& (0+255),w,b
 15584  00F52A  11C9               	iorwf	(??_configFile_read+5)& (0+255),w,b
 15585  00F52C  E104               	bnz	u17071
 15586  00F52E  0E04               	movlw	4
 15587  00F530  5DC8               	subwf	(??_configFile_read+4)& (0+255),w,b
 15588  00F532  A0D8               	btfss	status,0,c
 15589  00F534  0012               	return	
 15590  00F536                     u17071:
 15591  00F536  D753               	goto	l3087
 15592  00F538                     __end_of_configFile_read:
 15593                           	opt stack 0
 15594                           tblptru	equ	0xFF8
 15595                           tblptrh	equ	0xFF7
 15596                           tblptrl	equ	0xFF6
 15597                           tablat	equ	0xFF5
 15598                           prodh	equ	0xFF4
 15599                           prodl	equ	0xFF3
 15600                           postinc0	equ	0xFEE
 15601                           wreg	equ	0xFE8
 15602                           postdec1	equ	0xFE5
 15603                           plusw1	equ	0xFE3
 15604                           fsr1h	equ	0xFE2
 15605                           fsr1l	equ	0xFE1
 15606                           indf2	equ	0xFDF
 15607                           postinc2	equ	0xFDE
 15608                           plusw2	equ	0xFDB
 15609                           fsr2h	equ	0xFDA
 15610                           fsr2l	equ	0xFD9
 15611                           status	equ	0xFD8
 15612                           
 15613 ;; *************** function _fat_read_from_file *****************
 15614 ;; Defined at:
 15615 ;;		line 752 in file "fat16.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;  file_number     1    wreg     unsigned char 
 15618 ;;  start_byte      4  105[BANK0 ] unsigned long 
 15619 ;;  length          4  109[BANK0 ] unsigned long 
 15620 ;;  data            2  113[BANK0 ] PTR unsigned char 
 15621 ;;		 -> ConfigFile_buffer(512), 
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;  file_number     1  119[BANK0 ] unsigned char 
 15624 ;;  root           32  125[BANK0 ] struct .
 15625 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 15626 ;;  cluster         2  121[BANK0 ] unsigned int 
 15627 ;;  return_code     1  120[BANK0 ] unsigned char 
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  1    wreg      unsigned char 
 15630 ;; Registers used:
 15631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15637 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15638 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15639 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15640 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15641 ;;Total ram usage:       52 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; Hardware stack levels required when called:   18
 15644 ;; This function calls:
 15645 ;;		_fat_get_file_information
 15646 ;;		_fat_read_from_file_fast
 15647 ;; This function is called by:
 15648 ;;		_configFile_read
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           	psect	text53
 15653  012030                     __ptext53:
 15654                           	opt stack 0
 15655  012030                     _fat_read_from_file:
 15656                           	opt stack 10
 15657                           
 15658                           ; BSR set to: 1
 15659                           ;incstack = 0
 15660                           ;fat_read_from_file@file_number stored from wreg
 15661  012030  0100               	movlb	0	; () banked
 15662  012032  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 15663                           
 15664                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 15665  012034  0EDD               	movlw	low fat_read_from_file@root
 15666  012036  0100               	movlb	0	; () banked
 15667  012038  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 15668  01203A  0E00               	movlw	high fat_read_from_file@root
 15669  01203C  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 15670  01203E  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 15671  012040  ECF2  F0A1         	call	_fat_get_file_information
 15672  012044  0100               	movlb	0	; () banked
 15673  012046  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;fat16.c: 761: if(return_code!=0x00)
 15677  012048  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 15678  01204A  A4D8               	btfss	status,2,c
 15679  01204C  0012               	return	
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 15683                           
 15684                           ; BSR set to: 0
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 15688  01204E  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 15689  012050  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15690  012052  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15691  012054  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15692  012056  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15693  012058  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15694  01205A  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15695  01205C  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15696  01205E  A0D8               	btfss	status,0,c
 15697  012060  0012               	return	
 15698                           
 15699                           ; BSR set to: 0
 15700                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 15701                           
 15702                           ; BSR set to: 0
 15703                           
 15704                           ; BSR set to: 0
 15705                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 15706  012062  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 15707  012064  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 15708  012066  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 15709  012068  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 15710  01206A  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 15711  01206C  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 15712  01206E  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 15713  012070  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 15714  012072  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 15715  012074  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 15716  012076  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 15717  012078  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 15718  01207A  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 15719  01207C  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 15720  01207E  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 15721  012080  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 15722  012082  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 15723  012084  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 15724  012086  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 15725  012088  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 15726  01208A  B0D8               	btfsc	status,0,c
 15727  01208C  D01D               	goto	l1899
 15728                           
 15729                           ; BSR set to: 0
 15730                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 15731  01208E  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 15732  012092  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 15733  012096  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 15734  01209A  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 15735  01209E  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 15736  0120A0  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 15737  0120A2  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 15738  0120A4  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 15739  0120A6  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 15740  0120A8  0E00               	movlw	0
 15741  0120AA  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 15742  0120AC  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 15743  0120AE  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 15744  0120B0  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 15745  0120B2  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 15746  0120B4  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15747  0120B6  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 15748  0120B8  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 15749  0120BA  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15750  0120BC  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 15751  0120BE  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 15752  0120C0  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15753  0120C2  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 15754  0120C4  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 15755  0120C6  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15756  0120C8                     l1899:
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 15760                           
 15761                           ; BSR set to: 0
 15762  0120C8  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 15763  0120CC  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 15764                           
 15765                           ; BSR set to: 0
 15766                           ;fat16.c: 782: cluster_number = 0;
 15767  0120D0  0E00               	movlw	0
 15768  0120D2  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 15769  0120D4  0E00               	movlw	0
 15770  0120D6  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 15774  0120D8  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 15775  0120DC  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 15776  0120E0  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 15777  0120E4  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 15778  0120E8  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 15779  0120EC  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 15780  0120F0  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 15781  0120F4  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 15782  0120F8  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 15783  0120FC  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 15784  012100  0ED9               	movlw	low fat_read_from_file@cluster
 15785  012102  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 15786  012104  0E00               	movlw	high fat_read_from_file@cluster
 15787  012106  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 15788  012108  0EDB               	movlw	low fat_read_from_file@cluster_number
 15789  01210A  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 15790  01210C  0E00               	movlw	high fat_read_from_file@cluster_number
 15791  01210E  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 15792  012110  EC29  F071         	call	_fat_read_from_file_fast	;wreg free
 15793  012114  0012               	return	
 15794  012116                     __end_of_fat_read_from_file:
 15795                           	opt stack 0
 15796                           tblptru	equ	0xFF8
 15797                           tblptrh	equ	0xFF7
 15798                           tblptrl	equ	0xFF6
 15799                           tablat	equ	0xFF5
 15800                           prodh	equ	0xFF4
 15801                           prodl	equ	0xFF3
 15802                           postinc0	equ	0xFEE
 15803                           wreg	equ	0xFE8
 15804                           postdec1	equ	0xFE5
 15805                           plusw1	equ	0xFE3
 15806                           fsr1h	equ	0xFE2
 15807                           fsr1l	equ	0xFE1
 15808                           indf2	equ	0xFDF
 15809                           postinc2	equ	0xFDE
 15810                           plusw2	equ	0xFDB
 15811                           fsr2h	equ	0xFDA
 15812                           fsr2l	equ	0xFD9
 15813                           status	equ	0xFD8
 15814                           
 15815 ;; *************** function _fat_read_from_file_fast *****************
 15816 ;; Defined at:
 15817 ;;		line 788 in file "fat16.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  start_byte      4   65[BANK0 ] unsigned long 
 15820 ;;  length          4   69[BANK0 ] unsigned long 
 15821 ;;  data            2   73[BANK0 ] PTR unsigned char 
 15822 ;;		 -> ConfigFile_buffer(512), 
 15823 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 15824 ;;		 -> fat_read_from_file@cluster(2), 
 15825 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 15826 ;;		 -> fat_read_from_file@cluster_number(2), 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  position        4  101[BANK0 ] unsigned long 
 15829 ;;  read_length     2   99[BANK0 ] unsigned int 
 15830 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 15831 ;;  offset          2   95[BANK0 ] unsigned int 
 15832 ;;  working_clus    2   93[BANK0 ] unsigned int 
 15833 ;;  sector          2   91[BANK0 ] unsigned int 
 15834 ;; Return value:  Size  Location     Type
 15835 ;;                  1    wreg      unsigned char 
 15836 ;; Registers used:
 15837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15838 ;; Tracked objects:
 15839 ;;		On entry : 0/0
 15840 ;;		On exit  : 0/0
 15841 ;;		Unchanged: 0/0
 15842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15843 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15844 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15845 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15846 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15847 ;;Total ram usage:       40 bytes
 15848 ;; Hardware stack levels used:    1
 15849 ;; Hardware stack levels required when called:   17
 15850 ;; This function calls:
 15851 ;;		__data_sector_from_cluster
 15852 ;;		__find_nth_cluster
 15853 ;;		__read_fat
 15854 ;;		_flash_partial_read
 15855 ;; This function is called by:
 15856 ;;		_fat_read_from_file
 15857 ;; This function uses a non-reentrant model
 15858 ;;
 15859                           
 15860                           	psect	text54
 15861  00E252                     __ptext54:
 15862                           	opt stack 0
 15863  00E252                     _fat_read_from_file_fast:
 15864                           	opt stack 10
 15865                           
 15866                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 15867                           
 15868                           ;incstack = 0
 15869  00E252  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 15870  00E256  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 15871  00E25A  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 15872  00E25E  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 15873  00E262  0E0A               	movlw	10
 15874  00E264  D006               	goto	u14270
 15875  00E266                     u14275:
 15876  00E266  0100               	movlb	0	; () banked
 15877  00E268  90D8               	bcf	status,0,c
 15878  00E26A  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 15879  00E26C  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 15880  00E26E  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15881  00E270  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 15882  00E272                     u14270:
 15883  00E272  2EE8               	decfsz	wreg,f,c
 15884  00E274  D7F8               	goto	u14275
 15885  00E276  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 15886  00E27A  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 15890  00E27E  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15891  00E282  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15892  00E286  50DE               	movf	postinc2,w,c
 15893  00E288  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 15894  00E28A  50DE               	movf	postinc2,w,c
 15895  00E28C  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 15896  00E28E  B0D8               	btfsc	status,0,c
 15897  00E290  D002               	goto	l1902
 15898                           
 15899                           ; BSR set to: 0
 15900                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 15901  00E292  0EFF               	movlw	255
 15902                           
 15903                           ; BSR set to: 0
 15904  00E294  0012               	return	
 15905  00E296                     l1902:
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 15909                           
 15910                           ; BSR set to: 0
 15911  00E296  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15912  00E29A  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15913  00E29E  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 15914  00E2A2  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 15915  00E2A6  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15916  00E2AA  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15917  00E2AE  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 15918  00E2B2  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 15919  00E2B6  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 15920  00E2B8  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15921  00E2BA  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 15922  00E2BC  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15923  00E2BE  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 15924  00E2C0  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 15925  00E2C2  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 15926  00E2C4  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 15927  00E2C6  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 15928  00E2C8  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 15929  00E2CA  EC7F  F09B         	call	__find_nth_cluster	;wreg free
 15930  00E2CE  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15931  00E2D2  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15932  00E2D6  0100               	movlb	0	; () banked
 15933  00E2D8  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 15934  00E2DC  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 15935                           
 15936                           ; BSR set to: 0
 15937                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 15938  00E2E0  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 15939  00E2E4  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 15940  00E2E8  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 15941  00E2EC  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;fat16.c: 814: working_cluster = (*cluster);
 15945  00E2F0  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 15946  00E2F4  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 15947  00E2F8  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 15948  00E2FC  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 15949                           
 15950                           ; BSR set to: 0
 15951                           ;fat16.c: 817: position = (needed_cluster << 9);
 15952  00E300  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 15953  00E304  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 15954  00E308  0E09               	movlw	9
 15955  00E30A                     u14295:
 15956  00E30A  90D8               	bcf	status,0,c
 15957  00E30C  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 15958  00E30E  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15959  00E310  2EE8               	decfsz	wreg,f,c
 15960  00E312  D7FB               	goto	u14295
 15961  00E314  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 15962  00E318  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 15963  00E31C  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 15964  00E31E  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 15965                           
 15966                           ; BSR set to: 0
 15967                           ;fat16.c: 818: offset = start_byte - position;
 15968  00E320  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 15969  00E324  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 15970  00E328  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 15971  00E32A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15972  00E32C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 15973  00E32E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 15974  00E330  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 15975  00E332  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 15976  00E334  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 15977  00E336  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 15978  00E338  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 15979  00E33A  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;fat16.c: 821: position = 0;
 15983  00E33C  0E00               	movlw	0
 15984  00E33E  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 15985  00E340  0E00               	movlw	0
 15986  00E342  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 15987  00E344  0E00               	movlw	0
 15988  00E346  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 15989  00E348  0E00               	movlw	0
 15990  00E34A  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 15991                           
 15992                           ;fat16.c: 822: while(position < length)
 15993  00E34C  D089               	goto	l1904
 15994  00E34E                     
 15995                           ; BSR set to: 0
 15996                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 15997                           
 15998                           ; BSR set to: 0
 15999  00E34E  0E02               	movlw	2
 16000  00E350  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16001  00E352  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16002  00E354  A4D8               	btfss	status,2,c
 16003  00E356  D00F               	goto	l1906
 16004                           
 16005                           ; BSR set to: 0
 16006                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16007  00E358  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16008  00E35C  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16009  00E360  EC38  F0A7         	call	__read_fat	;wreg free
 16010  00E364  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16011  00E368  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16012                           
 16013                           ;fat16.c: 829: offset = 0;
 16014  00E36C  0E00               	movlw	0
 16015  00E36E  0100               	movlb	0	; () banked
 16016  00E370  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16017  00E372  0E00               	movlw	0
 16018  00E374  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16019  00E376                     l1906:
 16020                           
 16021                           ; BSR set to: 0
 16022                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16023                           
 16024                           ; BSR set to: 0
 16025  00E376  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16026  00E37A  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16027  00E37E  EC29  F0B0         	call	__data_sector_from_cluster	;wreg free
 16028  00E382  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16029  00E386  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16030                           
 16031                           ;fat16.c: 836: read_length = 512 - offset;
 16032  00E38A  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16033  00E38E  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16034  00E392  0100               	movlb	0	; () banked
 16035  00E394  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16036  00E396  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16037  00E398  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16038  00E39A  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16039  00E39C  0E00               	movlw	0
 16040  00E39E  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16041  00E3A0  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16042  00E3A2  0E02               	movlw	2
 16043  00E3A4  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16044  00E3A6  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16045                           
 16046                           ; BSR set to: 0
 16047                           ;fat16.c: 837: if(read_length > (length-position))
 16048  00E3A8  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16049  00E3AA  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16050  00E3AC  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16051  00E3AE  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16052  00E3B0  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16053  00E3B2  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16054  00E3B4  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16055  00E3B8  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16056  00E3BC  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16057  00E3C0  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16058  00E3C4  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16059  00E3C6  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16060  00E3C8  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16061  00E3CA  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16062  00E3CC  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16063  00E3CE  0E00               	movlw	0
 16064  00E3D0  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16065  00E3D2  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16066  00E3D4  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16067  00E3D6  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16068  00E3D8  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16069  00E3DA  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16070  00E3DC  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16071  00E3DE  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16072  00E3E0  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16073  00E3E2  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16074  00E3E4  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16075  00E3E6  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16076  00E3E8  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16077  00E3EA  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16078  00E3EC  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16079  00E3EE  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16080  00E3F0  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16081  00E3F2  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16082  00E3F4  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16083  00E3F6  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16084  00E3F8  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16085  00E3FA  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16086  00E3FC  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16087  00E3FE  B0D8               	btfsc	status,0,c
 16088  00E400  D00E               	goto	l1907
 16089                           
 16090                           ; BSR set to: 0
 16091                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16092  00E402  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16093  00E406  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16094  00E40A  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16095  00E40C  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16096  00E40E  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16097  00E410  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16098  00E412  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16099  00E414  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16100  00E416  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16101  00E418  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16102  00E41A  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16103  00E41C  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16104  00E41E                     l1907:
 16105                           
 16106                           ; BSR set to: 0
 16107                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16108                           
 16109                           ; BSR set to: 0
 16110  00E41E  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16111  00E422  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16112  00E426  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16113  00E42A  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16114  00E42E  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16115  00E432  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16116  00E436  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16117  00E438  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16118  00E43A  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16119  00E43C  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16120  00E43E  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16121  00E440  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16122  00E442  ECF1  F0AE         	call	_flash_partial_read	;wreg free
 16123                           
 16124                           ;fat16.c: 847: position += read_length;
 16125  00E446  0100               	movlb	0	; () banked
 16126  00E448  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16127  00E44A  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16128  00E44C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16129  00E44E  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16130  00E450  0E00               	movlw	0
 16131  00E452  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16132  00E454  0E00               	movlw	0
 16133  00E456  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16134                           
 16135                           ; BSR set to: 0
 16136                           ;fat16.c: 848: offset += read_length;
 16137  00E458  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16138  00E45A  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16139  00E45C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16140  00E45E  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16141  00E460                     l1904:
 16142                           
 16143                           ; BSR set to: 0
 16144                           
 16145                           ; BSR set to: 0
 16146  00E460  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16147  00E462  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16148  00E464  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16149  00E466  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16150  00E468  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16151  00E46A  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16152  00E46C  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16153  00E46E  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16154  00E470  A0D8               	btfss	status,0,c
 16155  00E472  D76D               	goto	l1905
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16159                           
 16160                           ; BSR set to: 0
 16161  00E474  0E00               	movlw	0
 16162  00E476  0012               	return	
 16163  00E478                     __end_of_fat_read_from_file_fast:
 16164                           	opt stack 0
 16165                           tblptru	equ	0xFF8
 16166                           tblptrh	equ	0xFF7
 16167                           tblptrl	equ	0xFF6
 16168                           tablat	equ	0xFF5
 16169                           prodh	equ	0xFF4
 16170                           prodl	equ	0xFF3
 16171                           postinc0	equ	0xFEE
 16172                           wreg	equ	0xFE8
 16173                           postdec1	equ	0xFE5
 16174                           plusw1	equ	0xFE3
 16175                           fsr1h	equ	0xFE2
 16176                           fsr1l	equ	0xFE1
 16177                           indf2	equ	0xFDF
 16178                           postinc2	equ	0xFDE
 16179                           postdec2	equ	0xFDD
 16180                           plusw2	equ	0xFDB
 16181                           fsr2h	equ	0xFDA
 16182                           fsr2l	equ	0xFD9
 16183                           status	equ	0xFD8
 16184                           
 16185 ;; *************** function __find_nth_cluster *****************
 16186 ;; Defined at:
 16187 ;;		line 183 in file "fat16.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;  cluster         2   55[BANK0 ] unsigned int 
 16190 ;;  n               2   57[BANK0 ] unsigned int 
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;  sector          2   63[BANK0 ] unsigned int 
 16193 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16194 ;;  offset          2   59[BANK0 ] unsigned int 
 16195 ;; Return value:  Size  Location     Type
 16196 ;;                  2   55[BANK0 ] unsigned int 
 16197 ;; Registers used:
 16198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16199 ;; Tracked objects:
 16200 ;;		On entry : 0/0
 16201 ;;		On exit  : 0/0
 16202 ;;		Unchanged: 0/0
 16203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16205 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16207 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16208 ;;Total ram usage:       10 bytes
 16209 ;; Hardware stack levels used:    1
 16210 ;; Hardware stack levels required when called:   16
 16211 ;; This function calls:
 16212 ;;		__fat_offset_from_cluster
 16213 ;;		__fat_sector_from_cluster
 16214 ;;		__read_fat
 16215 ;;		__read_value_from_offset
 16216 ;;		_flash_sector_read
 16217 ;; This function is called by:
 16218 ;;		_fat_read_from_file_fast
 16219 ;;		_fat_modify_file
 16220 ;;		_fat_copy_sector_to_buffer
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text55
 16225  0136FE                     __ptext55:
 16226                           	opt stack 0
 16227  0136FE                     __find_nth_cluster:
 16228                           	opt stack 11
 16229                           
 16230                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16231                           
 16232                           ; BSR set to: 0
 16233                           ;incstack = 0
 16234  0136FE  0E00               	movlw	0
 16235  013700  0100               	movlb	0	; () banked
 16236  013702  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16237  013704  0E00               	movlw	0
 16238  013706  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16239                           
 16240                           ; BSR set to: 0
 16241                           ;fat16.c: 190: if(n==1)
 16242  013708  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16243  01370A  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16244  01370C  A4D8               	btfss	status,2,c
 16245  01370E  D040               	goto	l1789
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16249  013710  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16250  013714  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16251  013718  EC38  F0A7         	call	__read_fat	;wreg free
 16252  01371C  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16253  013720  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16254  013724  0012               	return	
 16255  013726                     
 16256                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16257  013726  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16258  01372A  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16259  01372E  ECD0  F0AF         	call	__fat_sector_from_cluster	;wreg free
 16260  013732  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16261  013736  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16262                           
 16263                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16264  01373A  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16265  01373E  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16266  013742  ECDD  F0AF         	call	__fat_offset_from_cluster	;wreg free
 16267  013746  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16268  01374A  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16269                           
 16270                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16271  01374E  0100               	movlb	0	; () banked
 16272  013750  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16273  013752  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16274  013754  E104               	bnz	u12710
 16275  013756  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16276  013758  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16277  01375A  B4D8               	btfsc	status,2,c
 16278  01375C  D00A               	goto	l1791
 16279  01375E                     u12710:
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16283  01375E  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16284  013762  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16285  013766  0E00               	movlw	low _buffer
 16286  013768  6F89               	movwf	flash_sector_read@data& (0+255),b
 16287  01376A  0E0A               	movlw	high _buffer
 16288  01376C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16289  01376E  ECC9  F0AE         	call	_flash_sector_read	;wreg free
 16290  013772                     l1791:
 16291                           
 16292                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16293  013772  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16294  013776  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16295  01377A  0E00               	movlw	low _buffer
 16296  01377C  0100               	movlb	0	; () banked
 16297  01377E  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16298  013780  0E0A               	movlw	high _buffer
 16299  013782  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16300  013784  ECC2  F0AA         	call	__read_value_from_offset	;wreg free
 16301  013788  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16302  01378C  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16303  013790                     l1789:
 16304  013790  0100               	movlb	0	; () banked
 16305  013792  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16306  013794  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16307  013796  A4D8               	btfss	status,2,c
 16308  013798  D7C6               	goto	l1790
 16309                           
 16310                           ; BSR set to: 0
 16311                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16312  01379A  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16313  01379E  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16314  0137A2  0012               	return		;funcret
 16315  0137A4                     __end_of__find_nth_cluster:
 16316                           	opt stack 0
 16317                           tblptru	equ	0xFF8
 16318                           tblptrh	equ	0xFF7
 16319                           tblptrl	equ	0xFF6
 16320                           tablat	equ	0xFF5
 16321                           prodh	equ	0xFF4
 16322                           prodl	equ	0xFF3
 16323                           postinc0	equ	0xFEE
 16324                           wreg	equ	0xFE8
 16325                           postdec1	equ	0xFE5
 16326                           plusw1	equ	0xFE3
 16327                           fsr1h	equ	0xFE2
 16328                           fsr1l	equ	0xFE1
 16329                           indf2	equ	0xFDF
 16330                           postinc2	equ	0xFDE
 16331                           postdec2	equ	0xFDD
 16332                           plusw2	equ	0xFDB
 16333                           fsr2h	equ	0xFDA
 16334                           fsr2l	equ	0xFD9
 16335                           status	equ	0xFD8
 16336                           
 16337 ;; *************** function __read_value_from_offset *****************
 16338 ;; Defined at:
 16339 ;;		line 115 in file "fat16.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;  offset          2    0[BANK0 ] unsigned int 
 16342 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16343 ;;		 -> buffer(512), 
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;  value           2    7[BANK0 ] unsigned int 
 16346 ;; Return value:  Size  Location     Type
 16347 ;;                  2    0[BANK0 ] unsigned int 
 16348 ;; Registers used:
 16349 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16355 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16356 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16357 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16358 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16359 ;;Total ram usage:        9 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; Hardware stack levels required when called:   10
 16362 ;; This function calls:
 16363 ;;		Nothing
 16364 ;; This function is called by:
 16365 ;;		__find_nth_cluster
 16366 ;;		__make_cluster_chain
 16367 ;; This function uses a non-reentrant model
 16368 ;;
 16369                           
 16370                           	psect	text56
 16371  015584                     __ptext56:
 16372                           	opt stack 0
 16373  015584                     __read_value_from_offset:
 16374                           	opt stack 16
 16375                           
 16376                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16377                           
 16378                           ;incstack = 0
 16379  015584  0E01               	movlw	1
 16380  015586  0100               	movlb	0	; () banked
 16381  015588  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16382  01558A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16383  01558C  0E00               	movlw	0
 16384  01558E  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16385  015590  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16386  015592  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16387  015594  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16388  015596  6ED9               	movwf	fsr2l,c
 16389  015598  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16390  01559A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16391  01559C  6EDA               	movwf	fsr2h,c
 16392  01559E  50DF               	movf	indf2,w,c
 16393  0155A0  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16394  0155A2  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16395  0155A4  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16396  0155A6  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;fat16.c: 119: value <<= 8;
 16400  0155A8  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16401  0155AA  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16402  0155AC  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16403                           
 16404                           ; BSR set to: 0
 16405                           ;fat16.c: 120: value |= buffer[offset];
 16406  0155AE  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16407  0155B0  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16408  0155B2  6ED9               	movwf	fsr2l,c
 16409  0155B4  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16410  0155B6  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16411  0155B8  6EDA               	movwf	fsr2h,c
 16412  0155BA  50DF               	movf	indf2,w,c
 16413  0155BC  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16414  0155BE  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16415  0155C0  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;fat16.c: 121: return value;
 16419  0155C2  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16420  0155C6  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16421  0155CA  0012               	return	
 16422  0155CC                     __end_of__read_value_from_offset:
 16423                           	opt stack 0
 16424                           tblptru	equ	0xFF8
 16425                           tblptrh	equ	0xFF7
 16426                           tblptrl	equ	0xFF6
 16427                           tablat	equ	0xFF5
 16428                           prodh	equ	0xFF4
 16429                           prodl	equ	0xFF3
 16430                           postinc0	equ	0xFEE
 16431                           wreg	equ	0xFE8
 16432                           postdec1	equ	0xFE5
 16433                           plusw1	equ	0xFE3
 16434                           fsr1h	equ	0xFE2
 16435                           fsr1l	equ	0xFE1
 16436                           indf2	equ	0xFDF
 16437                           postinc2	equ	0xFDE
 16438                           postdec2	equ	0xFDD
 16439                           plusw2	equ	0xFDB
 16440                           fsr2h	equ	0xFDA
 16441                           fsr2l	equ	0xFD9
 16442                           status	equ	0xFD8
 16443                           
 16444 ;; *************** function __read_fat *****************
 16445 ;; Defined at:
 16446 ;;		line 457 in file "fat16.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;  cluster         2   47[BANK0 ] unsigned int 
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;  value           2   53[BANK0 ] unsigned int 
 16451 ;;  offset          2   51[BANK0 ] unsigned int 
 16452 ;;  sector          2   49[BANK0 ] unsigned int 
 16453 ;; Return value:  Size  Location     Type
 16454 ;;                  2   47[BANK0 ] unsigned int 
 16455 ;; Registers used:
 16456 ;;		wreg, status,2, status,0, cstack
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/0
 16459 ;;		On exit  : 0/0
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16463 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16465 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16466 ;;Total ram usage:        8 bytes
 16467 ;; Hardware stack levels used:    1
 16468 ;; Hardware stack levels required when called:   15
 16469 ;; This function calls:
 16470 ;;		__fat_offset_from_cluster
 16471 ;;		__fat_sector_from_cluster
 16472 ;;		_flash_partial_read
 16473 ;; This function is called by:
 16474 ;;		__find_nth_cluster
 16475 ;;		_fat_read_from_file_fast
 16476 ;;		_fat_modify_file
 16477 ;; This function uses a non-reentrant model
 16478 ;;
 16479                           
 16480                           	psect	text57
 16481  014E70                     __ptext57:
 16482                           	opt stack 0
 16483  014E70                     __read_fat:
 16484                           	opt stack 12
 16485                           
 16486                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;incstack = 0
 16490  014E70  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16491  014E74  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16492  014E78  ECD0  F0AF         	call	__fat_sector_from_cluster	;wreg free
 16493  014E7C  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16494  014E80  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16495                           
 16496                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16497  014E84  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16498  014E88  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16499  014E8C  ECDD  F0AF         	call	__fat_offset_from_cluster	;wreg free
 16500  014E90  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16501  014E94  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16502                           
 16503                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16504  014E98  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16505  014E9C  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16506  014EA0  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16507  014EA4  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16508  014EA8  0E00               	movlw	0
 16509  014EAA  0100               	movlb	0	; () banked
 16510  014EAC  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16511  014EAE  0E02               	movlw	2
 16512  014EB0  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16513  014EB2  0E95               	movlw	low __read_fat@value
 16514  014EB4  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16515  014EB6  0E00               	movlw	high __read_fat@value
 16516  014EB8  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16517  014EBA  ECF1  F0AE         	call	_flash_partial_read	;wreg free
 16518                           
 16519                           ;fat16.c: 471: return value;
 16520  014EBE  C095  F08F         	movff	__read_fat@value,?__read_fat
 16521  014EC2  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16522  014EC6  0012               	return	
 16523  014EC8                     __end_of__read_fat:
 16524                           	opt stack 0
 16525                           tblptru	equ	0xFF8
 16526                           tblptrh	equ	0xFF7
 16527                           tblptrl	equ	0xFF6
 16528                           tablat	equ	0xFF5
 16529                           prodh	equ	0xFF4
 16530                           prodl	equ	0xFF3
 16531                           postinc0	equ	0xFEE
 16532                           wreg	equ	0xFE8
 16533                           postdec1	equ	0xFE5
 16534                           plusw1	equ	0xFE3
 16535                           fsr1h	equ	0xFE2
 16536                           fsr1l	equ	0xFE1
 16537                           indf2	equ	0xFDF
 16538                           postinc2	equ	0xFDE
 16539                           postdec2	equ	0xFDD
 16540                           plusw2	equ	0xFDB
 16541                           fsr2h	equ	0xFDA
 16542                           fsr2l	equ	0xFD9
 16543                           status	equ	0xFD8
 16544                           
 16545 ;; *************** function __fat_sector_from_cluster *****************
 16546 ;; Defined at:
 16547 ;;		line 76 in file "fat16.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;  cluster         2    0[BANK0 ] unsigned int 
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;		None
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  2    0[BANK0 ] unsigned int 
 16554 ;; Registers used:
 16555 ;;		wreg, status,2, status,0
 16556 ;; Tracked objects:
 16557 ;;		On entry : 0/0
 16558 ;;		On exit  : 0/0
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16561 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16564 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16565 ;;Total ram usage:        2 bytes
 16566 ;; Hardware stack levels used:    1
 16567 ;; Hardware stack levels required when called:   10
 16568 ;; This function calls:
 16569 ;;		Nothing
 16570 ;; This function is called by:
 16571 ;;		__find_nth_cluster
 16572 ;;		__make_cluster_chain
 16573 ;;		__read_fat
 16574 ;; This function uses a non-reentrant model
 16575 ;;
 16576                           
 16577                           	psect	text58
 16578  015FA0                     __ptext58:
 16579                           	opt stack 0
 16580  015FA0                     __fat_sector_from_cluster:
 16581                           	opt stack 16
 16582                           
 16583                           ;fat16.c: 78: cluster >>= 8;
 16584                           
 16585                           ;incstack = 0
 16586  015FA0  0100               	movlb	0	; () banked
 16587  015FA2  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 16588  015FA4  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 16589  015FA6  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;fat16.c: 79: cluster += 2;
 16593  015FA8  0E02               	movlw	2
 16594  015FAA  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 16595  015FAC  0E00               	movlw	0
 16596  015FAE  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 16597                           
 16598                           ; BSR set to: 0
 16599                           ;fat16.c: 80: return cluster;
 16600  015FB0  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 16601  015FB4  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 16602  015FB8  0012               	return	
 16603  015FBA                     __end_of__fat_sector_from_cluster:
 16604                           	opt stack 0
 16605                           tblptru	equ	0xFF8
 16606                           tblptrh	equ	0xFF7
 16607                           tblptrl	equ	0xFF6
 16608                           tablat	equ	0xFF5
 16609                           prodh	equ	0xFF4
 16610                           prodl	equ	0xFF3
 16611                           postinc0	equ	0xFEE
 16612                           wreg	equ	0xFE8
 16613                           postdec1	equ	0xFE5
 16614                           plusw1	equ	0xFE3
 16615                           fsr1h	equ	0xFE2
 16616                           fsr1l	equ	0xFE1
 16617                           indf2	equ	0xFDF
 16618                           postinc2	equ	0xFDE
 16619                           postdec2	equ	0xFDD
 16620                           plusw2	equ	0xFDB
 16621                           fsr2h	equ	0xFDA
 16622                           fsr2l	equ	0xFD9
 16623                           status	equ	0xFD8
 16624                           
 16625 ;; *************** function __fat_offset_from_cluster *****************
 16626 ;; Defined at:
 16627 ;;		line 83 in file "fat16.c"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;  cluster         2    0[BANK0 ] unsigned int 
 16630 ;; Auto vars:     Size  Location     Type
 16631 ;;		None
 16632 ;; Return value:  Size  Location     Type
 16633 ;;                  2    0[BANK0 ] unsigned int 
 16634 ;; Registers used:
 16635 ;;		wreg, status,2, status,0
 16636 ;; Tracked objects:
 16637 ;;		On entry : 0/0
 16638 ;;		On exit  : 0/0
 16639 ;;		Unchanged: 0/0
 16640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16645 ;;Total ram usage:        2 bytes
 16646 ;; Hardware stack levels used:    1
 16647 ;; Hardware stack levels required when called:   10
 16648 ;; This function calls:
 16649 ;;		Nothing
 16650 ;; This function is called by:
 16651 ;;		__find_nth_cluster
 16652 ;;		__make_cluster_chain
 16653 ;;		__read_fat
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           	psect	text59
 16658  015FBA                     __ptext59:
 16659                           	opt stack 0
 16660  015FBA                     __fat_offset_from_cluster:
 16661                           	opt stack 16
 16662                           
 16663                           ;fat16.c: 85: cluster &= 0xFF;
 16664                           
 16665                           ; BSR set to: 0
 16666                           ;incstack = 0
 16667  015FBA  0EFF               	movlw	255
 16668  015FBC  0100               	movlb	0	; () banked
 16669  015FBE  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16670  015FC0  0E00               	movlw	0
 16671  015FC2  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16672                           
 16673                           ; BSR set to: 0
 16674                           ;fat16.c: 86: cluster <<= 1;
 16675  015FC4  90D8               	bcf	status,0,c
 16676  015FC6  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 16677  015FC8  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;fat16.c: 87: return cluster;
 16681  015FCA  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 16682  015FCE  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 16683  015FD2  0012               	return	
 16684  015FD4                     __end_of__fat_offset_from_cluster:
 16685                           	opt stack 0
 16686                           tblptru	equ	0xFF8
 16687                           tblptrh	equ	0xFF7
 16688                           tblptrl	equ	0xFF6
 16689                           tablat	equ	0xFF5
 16690                           prodh	equ	0xFF4
 16691                           prodl	equ	0xFF3
 16692                           postinc0	equ	0xFEE
 16693                           wreg	equ	0xFE8
 16694                           postdec1	equ	0xFE5
 16695                           plusw1	equ	0xFE3
 16696                           fsr1h	equ	0xFE2
 16697                           fsr1l	equ	0xFE1
 16698                           indf2	equ	0xFDF
 16699                           postinc2	equ	0xFDE
 16700                           postdec2	equ	0xFDD
 16701                           plusw2	equ	0xFDB
 16702                           fsr2h	equ	0xFDA
 16703                           fsr2l	equ	0xFD9
 16704                           status	equ	0xFD8
 16705                           
 16706 ;; *************** function __data_sector_from_cluster *****************
 16707 ;; Defined at:
 16708 ;;		line 71 in file "fat16.c"
 16709 ;; Parameters:    Size  Location     Type
 16710 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 16711 ;; Auto vars:     Size  Location     Type
 16712 ;;		None
 16713 ;; Return value:  Size  Location     Type
 16714 ;;                  2    0[BANK0 ] unsigned int 
 16715 ;; Registers used:
 16716 ;;		wreg, status,2, status,0
 16717 ;; Tracked objects:
 16718 ;;		On entry : 0/0
 16719 ;;		On exit  : 0/0
 16720 ;;		Unchanged: 0/0
 16721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16725 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16726 ;;Total ram usage:        2 bytes
 16727 ;; Hardware stack levels used:    1
 16728 ;; Hardware stack levels required when called:   10
 16729 ;; This function calls:
 16730 ;;		Nothing
 16731 ;; This function is called by:
 16732 ;;		_fat_read_from_file_fast
 16733 ;;		_fat_modify_file
 16734 ;;		_fat_copy_sector_to_buffer
 16735 ;; This function uses a non-reentrant model
 16736 ;;
 16737                           
 16738                           	psect	text60
 16739  016052                     __ptext60:
 16740                           	opt stack 0
 16741  016052                     __data_sector_from_cluster:
 16742                           	opt stack 17
 16743                           
 16744                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 16745                           
 16746                           ; BSR set to: 0
 16747                           ;incstack = 0
 16748  016052  0E24               	movlw	36
 16749  016054  0100               	movlb	0	; () banked
 16750  016056  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 16751  016058  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 16752  01605A  0E00               	movlw	0
 16753  01605C  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 16754  01605E  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 16755  016060  0012               	return	
 16756  016062                     __end_of__data_sector_from_cluster:
 16757                           	opt stack 0
 16758                           tblptru	equ	0xFF8
 16759                           tblptrh	equ	0xFF7
 16760                           tblptrl	equ	0xFF6
 16761                           tablat	equ	0xFF5
 16762                           prodh	equ	0xFF4
 16763                           prodl	equ	0xFF3
 16764                           postinc0	equ	0xFEE
 16765                           wreg	equ	0xFE8
 16766                           postdec1	equ	0xFE5
 16767                           plusw1	equ	0xFE3
 16768                           fsr1h	equ	0xFE2
 16769                           fsr1l	equ	0xFE1
 16770                           indf2	equ	0xFDF
 16771                           postinc2	equ	0xFDE
 16772                           postdec2	equ	0xFDD
 16773                           plusw2	equ	0xFDB
 16774                           fsr2h	equ	0xFDA
 16775                           fsr2l	equ	0xFD9
 16776                           status	equ	0xFD8
 16777                           
 16778 ;; *************** function _fat_get_file_information *****************
 16779 ;; Defined at:
 16780 ;;		line 1421 in file "fat16.c"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;  file_number     1    wreg     unsigned char 
 16783 ;;  data            2   47[BANK0 ] PTR struct .
 16784 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 16785 ;; Auto vars:     Size  Location     Type
 16786 ;;  file_number     1   54[BANK0 ] unsigned char 
 16787 ;;  offset          2   52[BANK0 ] unsigned int 
 16788 ;;  root_sector     2   50[BANK0 ] unsigned int 
 16789 ;; Return value:  Size  Location     Type
 16790 ;;                  1    wreg      unsigned char 
 16791 ;; Registers used:
 16792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16793 ;; Tracked objects:
 16794 ;;		On entry : 0/0
 16795 ;;		On exit  : 0/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16798 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16799 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16801 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16802 ;;Total ram usage:        8 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; Hardware stack levels required when called:   15
 16805 ;; This function calls:
 16806 ;;		__offset_from_file_number
 16807 ;;		__sector_from_file_number
 16808 ;;		_flash_partial_read
 16809 ;; This function is called by:
 16810 ;;		_fat_read_from_file
 16811 ;;		_fat_resize_file
 16812 ;;		_fat_modify_file
 16813 ;;		_fat_rename_file
 16814 ;; This function uses a non-reentrant model
 16815 ;;
 16816                           
 16817                           	psect	text61
 16818  0143E4                     __ptext61:
 16819                           	opt stack 0
 16820  0143E4                     _fat_get_file_information:
 16821                           	opt stack 12
 16822                           
 16823                           ; BSR set to: 0
 16824                           ;incstack = 0
 16825                           ;fat_get_file_information@file_number stored from wreg
 16826  0143E4  0100               	movlb	0	; () banked
 16827  0143E6  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 16828                           
 16829                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 16830  0143E8  0E3F               	movlw	63
 16831  0143EA  0100               	movlb	0	; () banked
 16832  0143EC  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 16833  0143EE  D002               	goto	l2105
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 16837  0143F0  0E01               	movlw	1
 16838                           
 16839                           ; BSR set to: 0
 16840  0143F2  0012               	return	
 16841  0143F4                     l2105:
 16842                           
 16843                           ; BSR set to: 0
 16844                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 16845                           
 16846                           ; BSR set to: 0
 16847  0143F4  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16848  0143F6  EC7A  F0AD         	call	__sector_from_file_number
 16849  0143FA  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 16850  0143FE  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 16851                           
 16852                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 16853  014402  0100               	movlb	0	; () banked
 16854  014404  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 16855  014406  EC8C  F0AE         	call	__offset_from_file_number
 16856  01440A  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 16857  01440E  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 16858                           
 16859                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 16860  014412  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 16861  014416  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 16862  01441A  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 16863  01441E  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 16864  014422  0E00               	movlw	0
 16865  014424  0100               	movlb	0	; () banked
 16866  014426  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16867  014428  0E20               	movlw	32
 16868  01442A  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16869  01442C  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 16870  014430  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 16871  014434  ECF1  F0AE         	call	_flash_partial_read	;wreg free
 16872                           
 16873                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 16874  014438  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 16875  01443C  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 16876  014440  50DF               	movf	indf2,w,c
 16877  014442  B4D8               	btfsc	status,2,c
 16878  014444  D008               	goto	u14260
 16879  014446  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 16880  01444A  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 16881  01444E  0EE5               	movlw	229
 16882  014450  18DE               	xorwf	postinc2,w,c
 16883  014452  A4D8               	btfss	status,2,c
 16884  014454  D002               	goto	l2107
 16885  014456                     u14260:
 16886                           
 16887                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 16888  014456  0E02               	movlw	2
 16889  014458  0012               	return	
 16890  01445A                     l2107:
 16891                           
 16892                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 16893  01445A  0E00               	movlw	0
 16894  01445C  0012               	return	
 16895  01445E                     __end_of_fat_get_file_information:
 16896                           	opt stack 0
 16897                           tblptru	equ	0xFF8
 16898                           tblptrh	equ	0xFF7
 16899                           tblptrl	equ	0xFF6
 16900                           tablat	equ	0xFF5
 16901                           prodh	equ	0xFF4
 16902                           prodl	equ	0xFF3
 16903                           postinc0	equ	0xFEE
 16904                           wreg	equ	0xFE8
 16905                           postdec1	equ	0xFE5
 16906                           plusw1	equ	0xFE3
 16907                           fsr1h	equ	0xFE2
 16908                           fsr1l	equ	0xFE1
 16909                           indf2	equ	0xFDF
 16910                           postinc2	equ	0xFDE
 16911                           postdec2	equ	0xFDD
 16912                           plusw2	equ	0xFDB
 16913                           fsr2h	equ	0xFDA
 16914                           fsr2l	equ	0xFD9
 16915                           status	equ	0xFD8
 16916                           
 16917 ;; *************** function _fat_get_file_size *****************
 16918 ;; Defined at:
 16919 ;;		line 563 in file "fat16.c"
 16920 ;; Parameters:    Size  Location     Type
 16921 ;;  file_number     1    wreg     unsigned char 
 16922 ;; Auto vars:     Size  Location     Type
 16923 ;;  file_number     1   65[BANK0 ] unsigned char 
 16924 ;;  file_size       4   61[BANK0 ] unsigned long 
 16925 ;;  offset          2   59[BANK0 ] unsigned int 
 16926 ;;  sector          2   57[BANK0 ] unsigned int 
 16927 ;; Return value:  Size  Location     Type
 16928 ;;                  4   53[BANK0 ] unsigned long 
 16929 ;; Registers used:
 16930 ;;		wreg, status,2, status,0, cstack
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16936 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16937 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16939 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16940 ;;Total ram usage:       13 bytes
 16941 ;; Hardware stack levels used:    1
 16942 ;; Hardware stack levels required when called:   16
 16943 ;; This function calls:
 16944 ;;		__offset_from_file_number
 16945 ;;		__root_is_available
 16946 ;;		__sector_from_file_number
 16947 ;;		_flash_partial_read
 16948 ;; This function is called by:
 16949 ;;		_configFile_read
 16950 ;;		_fat_append_to_file
 16951 ;;		_fat_copy_file
 16952 ;;		_fat_copy_sector_to_buffer
 16953 ;;		_fat_write_sector_from_buffer
 16954 ;; This function uses a non-reentrant model
 16955 ;;
 16956                           
 16957                           	psect	text62
 16958  01445E                     __ptext62:
 16959                           	opt stack 0
 16960  01445E                     _fat_get_file_size:
 16961                           	opt stack 12
 16962                           
 16963                           ;incstack = 0
 16964                           ;fat_get_file_size@file_number stored from wreg
 16965  01445E  0100               	movlb	0	; () banked
 16966  014460  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 16967                           
 16968                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 16969  014462  0100               	movlb	0	; () banked
 16970  014464  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 16971  014466  EC35  F0A4         	call	__root_is_available
 16972  01446A  0900               	iorlw	0
 16973  01446C  B4D8               	btfsc	status,2,c
 16974  01446E  D006               	goto	l1867
 16975                           
 16976                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 16977  014470  0100               	movlb	0	; () banked
 16978  014472  6995               	setf	?_fat_get_file_size& (0+255),b
 16979  014474  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 16980  014476  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 16981  014478  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 16982  01447A  0012               	return	
 16983  01447C                     l1867:
 16984                           
 16985                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 16986                           
 16987                           ; BSR set to: 0
 16988  01447C  0100               	movlb	0	; () banked
 16989  01447E  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 16990  014480  EC7A  F0AD         	call	__sector_from_file_number
 16991  014484  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 16992  014488  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 16993                           
 16994                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 16995  01448C  0100               	movlb	0	; () banked
 16996  01448E  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 16997  014490  EC8C  F0AE         	call	__offset_from_file_number
 16998  014494  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 16999  014498  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17000                           
 17001                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17002  01449C  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17003  0144A0  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17004  0144A4  0E1C               	movlw	28
 17005  0144A6  0100               	movlb	0	; () banked
 17006  0144A8  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17007  0144AA  6F89               	movwf	flash_partial_read@start& (0+255),b
 17008  0144AC  0E00               	movlw	0
 17009  0144AE  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17010  0144B0  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17011  0144B2  0E00               	movlw	0
 17012  0144B4  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17013  0144B6  0E04               	movlw	4
 17014  0144B8  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17015  0144BA  0E9D               	movlw	low fat_get_file_size@file_size
 17016  0144BC  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17017  0144BE  0E00               	movlw	high fat_get_file_size@file_size
 17018  0144C0  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17019  0144C2  ECF1  F0AE         	call	_flash_partial_read	;wreg free
 17020                           
 17021                           ;fat16.c: 584: return file_size;
 17022  0144C6  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17023  0144CA  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17024  0144CE  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17025  0144D2  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17026  0144D6  0012               	return	
 17027  0144D8                     __end_of_fat_get_file_size:
 17028                           	opt stack 0
 17029                           tblptru	equ	0xFF8
 17030                           tblptrh	equ	0xFF7
 17031                           tblptrl	equ	0xFF6
 17032                           tablat	equ	0xFF5
 17033                           prodh	equ	0xFF4
 17034                           prodl	equ	0xFF3
 17035                           postinc0	equ	0xFEE
 17036                           wreg	equ	0xFE8
 17037                           postdec1	equ	0xFE5
 17038                           plusw1	equ	0xFE3
 17039                           fsr1h	equ	0xFE2
 17040                           fsr1l	equ	0xFE1
 17041                           indf2	equ	0xFDF
 17042                           postinc2	equ	0xFDE
 17043                           postdec2	equ	0xFDD
 17044                           plusw2	equ	0xFDB
 17045                           fsr2h	equ	0xFDA
 17046                           fsr2l	equ	0xFD9
 17047                           status	equ	0xFD8
 17048                           
 17049 ;; *************** function __root_is_available *****************
 17050 ;; Defined at:
 17051 ;;		line 409 in file "fat16.c"
 17052 ;; Parameters:    Size  Location     Type
 17053 ;;  file_number     1    wreg     unsigned char 
 17054 ;; Auto vars:     Size  Location     Type
 17055 ;;  file_number     1   51[BANK0 ] unsigned char 
 17056 ;;  offset          2   49[BANK0 ] unsigned int 
 17057 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17058 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17059 ;; Return value:  Size  Location     Type
 17060 ;;                  1    wreg      unsigned char 
 17061 ;; Registers used:
 17062 ;;		wreg, status,2, status,0, cstack
 17063 ;; Tracked objects:
 17064 ;;		On entry : 0/0
 17065 ;;		On exit  : 0/0
 17066 ;;		Unchanged: 0/0
 17067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17069 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17071 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17072 ;;Total ram usage:        6 bytes
 17073 ;; Hardware stack levels used:    1
 17074 ;; Hardware stack levels required when called:   15
 17075 ;; This function calls:
 17076 ;;		__offset_from_file_number
 17077 ;;		__sector_from_file_number
 17078 ;;		_flash_partial_read
 17079 ;; This function is called by:
 17080 ;;		__get_available_root_entry
 17081 ;;		_fat_get_file_size
 17082 ;;		_fat_resize_file
 17083 ;;		_fat_delete_file
 17084 ;;		_fat_append_to_file
 17085 ;;		_fat_copy_file
 17086 ;;		_fat_copy_sector_to_buffer
 17087 ;;		_fat_write_sector_from_buffer
 17088 ;; This function uses a non-reentrant model
 17089 ;;
 17090                           
 17091                           	psect	text63
 17092  01486A                     __ptext63:
 17093                           	opt stack 0
 17094  01486A                     __root_is_available:
 17095                           	opt stack 12
 17096                           
 17097                           ;incstack = 0
 17098                           ;__root_is_available@file_number stored from wreg
 17099  01486A  0100               	movlb	0	; () banked
 17100  01486C  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17101                           
 17102                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17103  01486E  0E3F               	movlw	63
 17104  014870  0100               	movlb	0	; () banked
 17105  014872  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17106  014874  D002               	goto	l1828
 17107                           
 17108                           ; BSR set to: 0
 17109                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17110  014876  0E00               	movlw	0
 17111                           
 17112                           ; BSR set to: 0
 17113  014878  0012               	return	
 17114  01487A                     l1828:
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17118                           
 17119                           ; BSR set to: 0
 17120  01487A  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17121  01487C  EC7A  F0AD         	call	__sector_from_file_number
 17122  014880  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17123  014884  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17124                           
 17125                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17126  014888  0100               	movlb	0	; () banked
 17127  01488A  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17128  01488C  EC8C  F0AE         	call	__offset_from_file_number
 17129  014890  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17130  014894  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17131                           
 17132                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17133  014898  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17134  01489C  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17135  0148A0  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17136  0148A4  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17137  0148A8  0E00               	movlw	0
 17138  0148AA  0100               	movlb	0	; () banked
 17139  0148AC  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17140  0148AE  0E01               	movlw	1
 17141  0148B0  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17142  0148B2  0E94               	movlw	low __root_is_available@first_byte
 17143  0148B4  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17144  0148B6  0E00               	movlw	high __root_is_available@first_byte
 17145  0148B8  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17146  0148BA  ECF1  F0AE         	call	_flash_partial_read	;wreg free
 17147                           
 17148                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17149  0148BE  0100               	movlb	0	; () banked
 17150  0148C0  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17151  0148C2  B4D8               	btfsc	status,2,c
 17152  0148C4  D004               	goto	u12750
 17153                           
 17154                           ; BSR set to: 0
 17155  0148C6  0EE5               	movlw	229
 17156  0148C8  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17157  0148CA  A4D8               	btfss	status,2,c
 17158  0148CC  D002               	goto	l1830
 17159  0148CE                     u12750:
 17160                           
 17161                           ; BSR set to: 0
 17162                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17163                           
 17164                           ; BSR set to: 0
 17165  0148CE  0E01               	movlw	1
 17166                           
 17167                           ; BSR set to: 0
 17168                           ;fat16.c: 435: }
 17169                           
 17170                           ; BSR set to: 0
 17171  0148D0  0012               	return	
 17172  0148D2                     l1830:
 17173                           
 17174                           ; BSR set to: 0
 17175                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17176                           
 17177                           ; BSR set to: 0
 17178  0148D2  0E00               	movlw	0
 17179                           
 17180                           ; BSR set to: 0
 17181  0148D4  0012               	return	
 17182  0148D6                     __end_of__root_is_available:
 17183                           	opt stack 0
 17184                           tblptru	equ	0xFF8
 17185                           tblptrh	equ	0xFF7
 17186                           tblptrl	equ	0xFF6
 17187                           tablat	equ	0xFF5
 17188                           prodh	equ	0xFF4
 17189                           prodl	equ	0xFF3
 17190                           postinc0	equ	0xFEE
 17191                           wreg	equ	0xFE8
 17192                           postdec1	equ	0xFE5
 17193                           plusw1	equ	0xFE3
 17194                           fsr1h	equ	0xFE2
 17195                           fsr1l	equ	0xFE1
 17196                           indf2	equ	0xFDF
 17197                           postinc2	equ	0xFDE
 17198                           postdec2	equ	0xFDD
 17199                           plusw2	equ	0xFDB
 17200                           fsr2h	equ	0xFDA
 17201                           fsr2l	equ	0xFD9
 17202                           status	equ	0xFD8
 17203                           
 17204 ;; *************** function _flash_partial_read *****************
 17205 ;; Defined at:
 17206 ;;		line 452 in file "flash.c"
 17207 ;; Parameters:    Size  Location     Type
 17208 ;;  page            2   39[BANK0 ] unsigned int 
 17209 ;;  start           2   41[BANK0 ] unsigned int 
 17210 ;;  length          2   43[BANK0 ] unsigned int 
 17211 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17212 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17213 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17214 ;;		 -> _root_is_available@first_byte(1), 
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;		None
 17217 ;; Return value:  Size  Location     Type
 17218 ;;                  1    wreg      void 
 17219 ;; Registers used:
 17220 ;;		wreg, status,2, status,0, cstack
 17221 ;; Tracked objects:
 17222 ;;		On entry : 0/0
 17223 ;;		On exit  : 0/0
 17224 ;;		Unchanged: 0/0
 17225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17229 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17230 ;;Total ram usage:        8 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:   14
 17233 ;; This function calls:
 17234 ;;		__flash_partial_read
 17235 ;; This function is called by:
 17236 ;;		__root_is_available
 17237 ;;		__read_fat
 17238 ;;		_fat_get_file_size
 17239 ;;		_fat_read_from_file_fast
 17240 ;;		_fat_get_file_information
 17241 ;;		__get_first_cluster
 17242 ;; This function uses a non-reentrant model
 17243 ;;
 17244                           
 17245                           	psect	text64
 17246  015DE2                     __ptext64:
 17247                           	opt stack 0
 17248  015DE2                     _flash_partial_read:
 17249                           	opt stack 12
 17250                           
 17251                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17252                           
 17253                           ; BSR set to: 0
 17254                           ;incstack = 0
 17255  015DE2  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17256  015DE6  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17257  015DEA  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17258  015DEE  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17259  015DF2  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17260  015DF6  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17261  015DFA  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17262  015DFE  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17263  015E02  EC6C  F0A2         	call	__flash_partial_read	;wreg free
 17264  015E06  0012               	return		;funcret
 17265  015E08                     __end_of_flash_partial_read:
 17266                           	opt stack 0
 17267                           tblptru	equ	0xFF8
 17268                           tblptrh	equ	0xFF7
 17269                           tblptrl	equ	0xFF6
 17270                           tablat	equ	0xFF5
 17271                           prodh	equ	0xFF4
 17272                           prodl	equ	0xFF3
 17273                           postinc0	equ	0xFEE
 17274                           wreg	equ	0xFE8
 17275                           postdec1	equ	0xFE5
 17276                           plusw1	equ	0xFE3
 17277                           fsr1h	equ	0xFE2
 17278                           fsr1l	equ	0xFE1
 17279                           indf2	equ	0xFDF
 17280                           postinc2	equ	0xFDE
 17281                           postdec2	equ	0xFDD
 17282                           plusw2	equ	0xFDB
 17283                           fsr2h	equ	0xFDA
 17284                           fsr2l	equ	0xFD9
 17285                           status	equ	0xFD8
 17286                           
 17287 ;; *************** function __sector_from_file_number *****************
 17288 ;; Defined at:
 17289 ;;		line 53 in file "fat16.c"
 17290 ;; Parameters:    Size  Location     Type
 17291 ;;  file_number     1    wreg     unsigned char 
 17292 ;; Auto vars:     Size  Location     Type
 17293 ;;  file_number     1    2[BANK0 ] unsigned char 
 17294 ;;  sector          2    3[BANK0 ] unsigned int 
 17295 ;; Return value:  Size  Location     Type
 17296 ;;                  2    0[BANK0 ] unsigned int 
 17297 ;; Registers used:
 17298 ;;		wreg, status,2, status,0
 17299 ;; Tracked objects:
 17300 ;;		On entry : 0/0
 17301 ;;		On exit  : 0/0
 17302 ;;		Unchanged: 0/0
 17303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17305 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17307 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17308 ;;Total ram usage:        5 bytes
 17309 ;; Hardware stack levels used:    1
 17310 ;; Hardware stack levels required when called:   10
 17311 ;; This function calls:
 17312 ;;		Nothing
 17313 ;; This function is called by:
 17314 ;;		__root_is_available
 17315 ;;		__write_root
 17316 ;;		_fat_get_file_size
 17317 ;;		_fat_get_file_information
 17318 ;;		__delete_root
 17319 ;;		__get_first_cluster
 17320 ;; This function uses a non-reentrant model
 17321 ;;
 17322                           
 17323                           	psect	text65
 17324  015AF4                     __ptext65:
 17325                           	opt stack 0
 17326  015AF4                     __sector_from_file_number:
 17327                           	opt stack 16
 17328                           
 17329                           ;incstack = 0
 17330                           ;__sector_from_file_number@file_number stored from wreg
 17331  015AF4  0100               	movlb	0	; () banked
 17332  015AF6  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17333                           
 17334                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17335  015AF8  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17336  015AFC  0100               	movlb	0	; () banked
 17337  015AFE  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17338                           
 17339                           ; BSR set to: 0
 17340                           ;fat16.c: 57: sector >>= 4;
 17341  015B00  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17342  015B02  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17343  015B04  0E0F               	movlw	15
 17344  015B06  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17345  015B08  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17346  015B0A  0BF0               	andlw	240
 17347  015B0C  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17348  015B0E  0E0F               	movlw	15
 17349  015B10  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17350                           
 17351                           ; BSR set to: 0
 17352                           ;fat16.c: 58: sector += 34;
 17353  015B12  0E22               	movlw	34
 17354  015B14  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17355  015B16  0E00               	movlw	0
 17356  015B18  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17357                           
 17358                           ; BSR set to: 0
 17359                           ;fat16.c: 59: return sector;
 17360  015B1A  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17361  015B1E  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17362  015B22  0012               	return	
 17363  015B24                     __end_of__sector_from_file_number:
 17364                           	opt stack 0
 17365                           tblptru	equ	0xFF8
 17366                           tblptrh	equ	0xFF7
 17367                           tblptrl	equ	0xFF6
 17368                           tablat	equ	0xFF5
 17369                           prodh	equ	0xFF4
 17370                           prodl	equ	0xFF3
 17371                           postinc0	equ	0xFEE
 17372                           wreg	equ	0xFE8
 17373                           postdec1	equ	0xFE5
 17374                           plusw1	equ	0xFE3
 17375                           fsr1h	equ	0xFE2
 17376                           fsr1l	equ	0xFE1
 17377                           indf2	equ	0xFDF
 17378                           postinc2	equ	0xFDE
 17379                           postdec2	equ	0xFDD
 17380                           plusw2	equ	0xFDB
 17381                           fsr2h	equ	0xFDA
 17382                           fsr2l	equ	0xFD9
 17383                           status	equ	0xFD8
 17384                           
 17385 ;; *************** function __offset_from_file_number *****************
 17386 ;; Defined at:
 17387 ;;		line 62 in file "fat16.c"
 17388 ;; Parameters:    Size  Location     Type
 17389 ;;  file_number     1    wreg     unsigned char 
 17390 ;; Auto vars:     Size  Location     Type
 17391 ;;  file_number     1    2[BANK0 ] unsigned char 
 17392 ;;  offset          2    3[BANK0 ] unsigned int 
 17393 ;; Return value:  Size  Location     Type
 17394 ;;                  2    0[BANK0 ] unsigned int 
 17395 ;; Registers used:
 17396 ;;		wreg, status,2, status,0
 17397 ;; Tracked objects:
 17398 ;;		On entry : 0/0
 17399 ;;		On exit  : 0/0
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17403 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17405 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17406 ;;Total ram usage:        5 bytes
 17407 ;; Hardware stack levels used:    1
 17408 ;; Hardware stack levels required when called:   10
 17409 ;; This function calls:
 17410 ;;		Nothing
 17411 ;; This function is called by:
 17412 ;;		__root_is_available
 17413 ;;		__write_root
 17414 ;;		_fat_get_file_size
 17415 ;;		_fat_get_file_information
 17416 ;;		__delete_root
 17417 ;;		__get_first_cluster
 17418 ;; This function uses a non-reentrant model
 17419 ;;
 17420                           
 17421                           	psect	text66
 17422  015D18                     __ptext66:
 17423                           	opt stack 0
 17424  015D18                     __offset_from_file_number:
 17425                           	opt stack 16
 17426                           
 17427                           ; BSR set to: 0
 17428                           ;incstack = 0
 17429                           ;__offset_from_file_number@file_number stored from wreg
 17430  015D18  0100               	movlb	0	; () banked
 17431  015D1A  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17432                           
 17433                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17434  015D1C  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17435  015D20  0100               	movlb	0	; () banked
 17436  015D22  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17437                           
 17438                           ; BSR set to: 0
 17439                           ;fat16.c: 66: offset &= 0b1111;
 17440  015D24  0E0F               	movlw	15
 17441  015D26  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17442  015D28  0E00               	movlw	0
 17443  015D2A  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;fat16.c: 67: offset <<= 5;
 17447  015D2C  0E05               	movlw	5
 17448  015D2E                     u11635:
 17449  015D2E  90D8               	bcf	status,0,c
 17450  015D30  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17451  015D32  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17452  015D34  2EE8               	decfsz	wreg,f,c
 17453  015D36  D7FB               	goto	u11635
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;fat16.c: 68: return offset;
 17457  015D38  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17458  015D3C  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17459  015D40  0012               	return	
 17460  015D42                     __end_of__offset_from_file_number:
 17461                           	opt stack 0
 17462                           tblptru	equ	0xFF8
 17463                           tblptrh	equ	0xFF7
 17464                           tblptrl	equ	0xFF6
 17465                           tablat	equ	0xFF5
 17466                           prodh	equ	0xFF4
 17467                           prodl	equ	0xFF3
 17468                           postinc0	equ	0xFEE
 17469                           wreg	equ	0xFE8
 17470                           postdec1	equ	0xFE5
 17471                           plusw1	equ	0xFE3
 17472                           fsr1h	equ	0xFE2
 17473                           fsr1l	equ	0xFE1
 17474                           indf2	equ	0xFDF
 17475                           postinc2	equ	0xFDE
 17476                           postdec2	equ	0xFDD
 17477                           plusw2	equ	0xFDB
 17478                           fsr2h	equ	0xFDA
 17479                           fsr2l	equ	0xFD9
 17480                           status	equ	0xFD8
 17481                           
 17482 ;; *************** function _fat_find_file *****************
 17483 ;; Defined at:
 17484 ;;		line 518 in file "fat16.c"
 17485 ;; Parameters:    Size  Location     Type
 17486 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17487 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17488 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17489 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;  offset          2   52[BANK0 ] unsigned int 
 17492 ;;  sector          2   50[BANK0 ] unsigned int 
 17493 ;;  file_number     1   49[BANK0 ] unsigned char 
 17494 ;; Return value:  Size  Location     Type
 17495 ;;                  1    wreg      unsigned char 
 17496 ;; Registers used:
 17497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17498 ;; Tracked objects:
 17499 ;;		On entry : 0/0
 17500 ;;		On exit  : 0/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17504 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17505 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17506 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17507 ;;Total ram usage:       11 bytes
 17508 ;; Hardware stack levels used:    1
 17509 ;; Hardware stack levels required when called:   15
 17510 ;; This function calls:
 17511 ;;		_flash_sector_read
 17512 ;;		_strncmp
 17513 ;; This function is called by:
 17514 ;;		_fat_create_file
 17515 ;;		_configFile_read
 17516 ;;		_configFile_write
 17517 ;; This function uses a non-reentrant model
 17518 ;;
 17519                           
 17520                           	psect	text67
 17521  011F48                     __ptext67:
 17522                           	opt stack 0
 17523  011F48                     _fat_find_file:
 17524                           	opt stack 13
 17525                           
 17526                           ;fat16.c: 520: uint8_t file_number = 0;
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;incstack = 0
 17530  011F48  0E00               	movlw	0
 17531  011F4A  0100               	movlb	0	; () banked
 17532  011F4C  6F91               	movwf	fat_find_file@file_number& (0+255),b
 17533                           
 17534                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 17535  011F4E  0E00               	movlw	0
 17536  011F50  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 17537  011F52  0E22               	movlw	34
 17538  011F54  6F92               	movwf	fat_find_file@sector& (0+255),b
 17539                           
 17540                           ; BSR set to: 0
 17541  011F56  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17542  011F58  E169               	bnz	l1855
 17543  011F5A  0E26               	movlw	38
 17544  011F5C  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 17545  011F5E  B0D8               	btfsc	status,0,c
 17546  011F60  D065               	goto	u14230
 17547                           
 17548                           ; BSR set to: 0
 17549                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 17550                           
 17551                           ; BSR set to: 0
 17552                           
 17553                           ; BSR set to: 0
 17554  011F62  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 17555  011F66  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 17556  011F6A  0E00               	movlw	low _buffer
 17557  011F6C  6F89               	movwf	flash_sector_read@data& (0+255),b
 17558  011F6E  0E0A               	movlw	high _buffer
 17559  011F70  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17560  011F72  ECC9  F0AE         	call	_flash_sector_read	;wreg free
 17561                           
 17562                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 17563  011F76  0E00               	movlw	0
 17564  011F78  0100               	movlb	0	; () banked
 17565  011F7A  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 17566  011F7C  0E00               	movlw	0
 17567  011F7E  6F94               	movwf	fat_find_file@offset& (0+255),b
 17568  011F80                     l15082:
 17569                           
 17570                           ; BSR set to: 0
 17571  011F80  0E02               	movlw	2
 17572  011F82  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 17573  011F84  B0D8               	btfsc	status,0,c
 17574  011F86  D04D               	goto	u14220
 17575                           
 17576                           ; BSR set to: 0
 17577                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 17578                           
 17579                           ; BSR set to: 0
 17580                           
 17581                           ; BSR set to: 0
 17582  011F88  0E00               	movlw	low _buffer
 17583  011F8A  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17584  011F8C  6ED9               	movwf	fsr2l,c
 17585  011F8E  0E0A               	movlw	high _buffer
 17586  011F90  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17587  011F92  6EDA               	movwf	fsr2h,c
 17588  011F94  50DF               	movf	indf2,w,c
 17589  011F96  A4D8               	btfss	status,2,c
 17590  011F98  D002               	goto	l1858
 17591                           
 17592                           ; BSR set to: 0
 17593                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 17594  011F9A  0EFF               	movlw	255
 17595                           
 17596                           ; BSR set to: 0
 17597  011F9C  0012               	return	
 17598  011F9E                     l1858:
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 17602                           
 17603                           ; BSR set to: 0
 17604  011F9E  0E00               	movlw	low _buffer
 17605  011FA0  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17606  011FA2  6ED9               	movwf	fsr2l,c
 17607  011FA4  0E0A               	movlw	high _buffer
 17608  011FA6  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17609  011FA8  6EDA               	movwf	fsr2h,c
 17610  011FAA  0EE5               	movlw	229
 17611  011FAC  18DE               	xorwf	postinc2,w,c
 17612  011FAE  B4D8               	btfsc	status,2,c
 17613  011FB0  D032               	goto	l1864
 17614                           
 17615                           ; BSR set to: 0
 17616                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 17617                           
 17618                           ; BSR set to: 0
 17619                           
 17620                           ; BSR set to: 0
 17621                           ;fat16.c: 538: {;fat16.c: 542: }
 17622  011FB2  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 17623  011FB6  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 17624  011FBA  0E00               	movlw	low _buffer
 17625  011FBC  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17626  011FBE  6F62               	movwf	strncmp@s2& (0+255),b
 17627  011FC0  0E0A               	movlw	high _buffer
 17628  011FC2  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17629  011FC4  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17630  011FC6  0E00               	movlw	0
 17631  011FC8  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17632  011FCA  0E08               	movlw	8
 17633  011FCC  6F64               	movwf	strncmp@len& (0+255),b
 17634  011FCE  EC36  F0A1         	call	_strncmp	;wreg free
 17635  011FD2  0100               	movlb	0	; () banked
 17636  011FD4  5160               	movf	?_strncmp& (0+255),w,b
 17637  011FD6  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17638  011FD8  A4D8               	btfss	status,2,c
 17639  011FDA  D01D               	goto	l1864
 17640                           
 17641                           ; BSR set to: 0
 17642                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 17643  011FDC  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 17644  011FE0  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 17645  011FE4  0E08               	movlw	8
 17646  011FE6  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17647  011FE8  6F8F               	movwf	??_fat_find_file& (0+255),b
 17648  011FEA  0E00               	movlw	0
 17649  011FEC  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17650  011FEE  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 17651  011FF0  0E00               	movlw	low _buffer
 17652  011FF2  258F               	addwf	??_fat_find_file& (0+255),w,b
 17653  011FF4  6F62               	movwf	strncmp@s2& (0+255),b
 17654  011FF6  0E0A               	movlw	high _buffer
 17655  011FF8  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 17656  011FFA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 17657  011FFC  0E00               	movlw	0
 17658  011FFE  6F65               	movwf	(strncmp@len+1)& (0+255),b
 17659  012000  0E03               	movlw	3
 17660  012002  6F64               	movwf	strncmp@len& (0+255),b
 17661  012004  EC36  F0A1         	call	_strncmp	;wreg free
 17662  012008  0100               	movlb	0	; () banked
 17663  01200A  5160               	movf	?_strncmp& (0+255),w,b
 17664  01200C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 17665  01200E  A4D8               	btfss	status,2,c
 17666  012010  D002               	goto	l1864
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 17670  012012  5191               	movf	fat_find_file@file_number& (0+255),w,b
 17671                           
 17672                           ; BSR set to: 0
 17673  012014  0012               	return	
 17674  012016                     l1864:
 17675                           
 17676                           ; BSR set to: 0
 17677                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 17678                           
 17679                           ; BSR set to: 0
 17680                           
 17681                           ; BSR set to: 0
 17682                           
 17683                           ; BSR set to: 0
 17684                           
 17685                           ; BSR set to: 0
 17686  012016  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 17687                           
 17688                           ; BSR set to: 0
 17689  012018  0E20               	movlw	32
 17690  01201A  2794               	addwf	fat_find_file@offset& (0+255),f,b
 17691  01201C  0E00               	movlw	0
 17692  01201E  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 17693  012020  D7AF               	goto	l15082
 17694  012022                     u14220:
 17695                           
 17696                           ; BSR set to: 0
 17697                           
 17698                           ; BSR set to: 0
 17699  012022  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 17700  012024  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 17701                           
 17702                           ; BSR set to: 0
 17703  012026  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17704  012028  E101               	bnz	l15116
 17705  01202A  D797               	goto	L4
 17706  01202C                     u14230:
 17707  01202C                     l1855:
 17708  01202C                     l15116:
 17709                           
 17710                           ; BSR set to: 0
 17711                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 17712  01202C  0EFF               	movlw	255
 17713  01202E  0012               	return	
 17714  012030                     __end_of_fat_find_file:
 17715                           	opt stack 0
 17716                           tblptru	equ	0xFF8
 17717                           tblptrh	equ	0xFF7
 17718                           tblptrl	equ	0xFF6
 17719                           tablat	equ	0xFF5
 17720                           prodh	equ	0xFF4
 17721                           prodl	equ	0xFF3
 17722                           postinc0	equ	0xFEE
 17723                           wreg	equ	0xFE8
 17724                           postdec1	equ	0xFE5
 17725                           plusw1	equ	0xFE3
 17726                           fsr1h	equ	0xFE2
 17727                           fsr1l	equ	0xFE1
 17728                           indf2	equ	0xFDF
 17729                           postinc2	equ	0xFDE
 17730                           postdec2	equ	0xFDD
 17731                           plusw2	equ	0xFDB
 17732                           fsr2h	equ	0xFDA
 17733                           fsr2l	equ	0xFD9
 17734                           status	equ	0xFD8
 17735                           
 17736 ;; *************** function _strncmp *****************
 17737 ;; Defined at:
 17738 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 17741 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 17742 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 17743 ;;		 -> buffer(512), 
 17744 ;;  len             2    4[BANK0 ] unsigned int 
 17745 ;; Auto vars:     Size  Location     Type
 17746 ;;		None
 17747 ;; Return value:  Size  Location     Type
 17748 ;;                  2    0[BANK0 ] int 
 17749 ;; Registers used:
 17750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17751 ;; Tracked objects:
 17752 ;;		On entry : 0/0
 17753 ;;		On exit  : 0/0
 17754 ;;		Unchanged: 0/0
 17755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17756 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17758 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17759 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17760 ;;Total ram usage:        9 bytes
 17761 ;; Hardware stack levels used:    1
 17762 ;; Hardware stack levels required when called:   10
 17763 ;; This function calls:
 17764 ;;		Nothing
 17765 ;; This function is called by:
 17766 ;;		_fat_find_file
 17767 ;; This function uses a non-reentrant model
 17768 ;;
 17769                           
 17770                           	psect	text68
 17771  01426C                     __ptext68:
 17772                           	opt stack 0
 17773  01426C                     _strncmp:
 17774                           	opt stack 17
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;incstack = 0
 17778  01426C  D031               	goto	l3850
 17779  01426E                     l14110:
 17780  01426E  C060  FFD9         	movff	strncmp@s1,fsr2l
 17781  014272  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17782  014276  50DF               	movf	indf2,w,c
 17783  014278  B4D8               	btfsc	status,2,c
 17784  01427A  D00C               	goto	u12770
 17785  01427C  C062  FFD9         	movff	strncmp@s2,fsr2l
 17786  014280  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17787  014284  C060  FFE1         	movff	strncmp@s1,fsr1l
 17788  014288  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 17789  01428C  50DE               	movf	postinc2,w,c
 17790  01428E  18E6               	xorwf	postinc1,w,c
 17791  014290  B4D8               	btfsc	status,2,c
 17792  014292  D019               	goto	l3852
 17793  014294                     u12770:
 17794  014294  C062  FFD9         	movff	strncmp@s2,fsr2l
 17795  014298  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 17796  01429C  50DF               	movf	indf2,w,c
 17797  01429E  0100               	movlb	0	; () banked
 17798  0142A0  6F66               	movwf	??_strncmp& (0+255),b
 17799  0142A2  6B67               	clrf	(??_strncmp+1)& (0+255),b
 17800  0142A4  1F66               	comf	??_strncmp& (0+255),f,b
 17801  0142A6  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 17802  0142A8  4B66               	infsnz	??_strncmp& (0+255),f,b
 17803  0142AA  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 17804  0142AC  C060  FFD9         	movff	strncmp@s1,fsr2l
 17805  0142B0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 17806  0142B4  50DF               	movf	indf2,w,c
 17807  0142B6  6F68               	movwf	(??_strncmp+2)& (0+255),b
 17808  0142B8  5168               	movf	(??_strncmp+2)& (0+255),w,b
 17809  0142BA  2566               	addwf	??_strncmp& (0+255),w,b
 17810  0142BC  6F60               	movwf	?_strncmp& (0+255),b
 17811  0142BE  0E00               	movlw	0
 17812  0142C0  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 17813  0142C2  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17814                           
 17815                           ; BSR set to: 0
 17816  0142C4  0012               	return	
 17817  0142C6                     l3852:
 17818                           
 17819                           ; BSR set to: 0
 17820  0142C6  0100               	movlb	0	; () banked
 17821  0142C8  4B60               	infsnz	strncmp@s1& (0+255),f,b
 17822  0142CA  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 17823  0142CC  4B62               	infsnz	strncmp@s2& (0+255),f,b
 17824  0142CE  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 17825  0142D0                     l3850:
 17826                           
 17827                           ; BSR set to: 0
 17828  0142D0  0100               	movlb	0	; () banked
 17829  0142D2  0764               	decf	strncmp@len& (0+255),f,b
 17830  0142D4  A0D8               	btfss	status,0,c
 17831  0142D6  0765               	decf	(strncmp@len+1)& (0+255),f,b
 17832  0142D8  2964               	incf	strncmp@len& (0+255),w,b
 17833  0142DA  E1C9               	bnz	l14110
 17834  0142DC  2965               	incf	(strncmp@len+1)& (0+255),w,b
 17835  0142DE  A4D8               	btfss	status,2,c
 17836  0142E0  D7C6               	goto	l3851
 17837                           
 17838                           ; BSR set to: 0
 17839                           
 17840                           ; BSR set to: 0
 17841  0142E2  0E00               	movlw	0
 17842  0142E4  6F61               	movwf	(?_strncmp+1)& (0+255),b
 17843  0142E6  0E00               	movlw	0
 17844  0142E8  6F60               	movwf	?_strncmp& (0+255),b
 17845  0142EA  0012               	return	
 17846  0142EC                     __end_of_strncmp:
 17847                           	opt stack 0
 17848                           tblptru	equ	0xFF8
 17849                           tblptrh	equ	0xFF7
 17850                           tblptrl	equ	0xFF6
 17851                           tablat	equ	0xFF5
 17852                           prodh	equ	0xFF4
 17853                           prodl	equ	0xFF3
 17854                           postinc0	equ	0xFEE
 17855                           wreg	equ	0xFE8
 17856                           postinc1	equ	0xFE6
 17857                           postdec1	equ	0xFE5
 17858                           plusw1	equ	0xFE3
 17859                           fsr1h	equ	0xFE2
 17860                           fsr1l	equ	0xFE1
 17861                           indf2	equ	0xFDF
 17862                           postinc2	equ	0xFDE
 17863                           postdec2	equ	0xFDD
 17864                           plusw2	equ	0xFDB
 17865                           fsr2h	equ	0xFDA
 17866                           fsr2l	equ	0xFD9
 17867                           status	equ	0xFD8
 17868                           
 17869 ;; *************** function __parse_item *****************
 17870 ;; Defined at:
 17871 ;;		line 111 in file "config_file.c"
 17872 ;; Parameters:    Size  Location     Type
 17873 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 17874 ;;		 -> configFile_read@item_string(31), 
 17875 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 17876 ;;		 -> configFile_read@value_string(12), 
 17877 ;; Auto vars:     Size  Location     Type
 17878 ;;		None
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  1    wreg      unsigned char 
 17881 ;; Registers used:
 17882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17883 ;; Tracked objects:
 17884 ;;		On entry : 0/0
 17885 ;;		On exit  : 0/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17888 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17891 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17892 ;;Total ram usage:        4 bytes
 17893 ;; Hardware stack levels used:    1
 17894 ;; Hardware stack levels required when called:   12
 17895 ;; This function calls:
 17896 ;;		__steps_from_degrees
 17897 ;;		_atoi
 17898 ;;		_atol
 17899 ;;		_stricmp
 17900 ;; This function is called by:
 17901 ;;		_configFile_read
 17902 ;; This function uses a non-reentrant model
 17903 ;;
 17904                           
 17905                           	psect	text69
 17906  00BDE2                     __ptext69:
 17907                           	opt stack 0
 17908  00BDE2                     __parse_item:
 17909                           	opt stack 16
 17910                           
 17911                           ;config_file.c: 113: if(stricmp(item_string, full_circle_in_steps_string)==0)
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;incstack = 0
 17915  00BDE2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 17916  00BDE6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 17917  00BDEA  0E12               	movlw	low _full_circle_in_steps_string
 17918  00BDEC  0100               	movlb	0	; () banked
 17919  00BDEE  6F63               	movwf	stricmp@s2& (0+255),b
 17920  00BDF0  0EA2               	movlw	high _full_circle_in_steps_string
 17921  00BDF2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 17922  00BDF4  EC84  F0A6         	call	_stricmp	;wreg free
 17923  00BDF8  0100               	movlb	0	; () banked
 17924  00BDFA  5161               	movf	?_stricmp& (0+255),w,b
 17925  00BDFC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 17926  00BDFE  A4D8               	btfss	status,2,c
 17927  00BE00  D00F               	goto	l3055
 17928                           
 17929                           ; BSR set to: 0
 17930                           ;config_file.c: 114: {;config_file.c: 115: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 17931  00BE02  C09B  F06C         	movff	__parse_item@value_string,atol@s
 17932  00BE06  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 17933  00BE0A  EC43  F08D         	call	_atol	;wreg free
 17934  00BE0E  C06C  F196         	movff	?_atol,_config
 17935  00BE12  C06D  F197         	movff	?_atol+1,_config+1
 17936  00BE16  C06E  F198         	movff	?_atol+2,_config+2
 17937  00BE1A  C06F  F199         	movff	?_atol+3,_config+3
 17938                           
 17939                           ;config_file.c: 116: return 1;;	Return value of __parse_item is never used
 17940  00BE1E  0012               	return	
 17941  00BE20                     l3055:
 17942                           
 17943                           ;config_file.c: 117: };config_file.c: 119: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 17944  00BE20  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 17945  00BE24  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 17946  00BE28  0E27               	movlw	low _overshoot_in_steps_string
 17947  00BE2A  0100               	movlb	0	; () banked
 17948  00BE2C  6F63               	movwf	stricmp@s2& (0+255),b
 17949  00BE2E  0EA2               	movlw	high _overshoot_in_steps_string
 17950  00BE30  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 17951  00BE32  EC84  F0A6         	call	_stricmp	;wreg free
 17952  00BE36  0100               	movlb	0	; () banked
 17953  00BE38  5161               	movf	?_stricmp& (0+255),w,b
 17954  00BE3A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 17955  00BE3C  A4D8               	btfss	status,2,c
 17956  00BE3E  D00B               	goto	l3057
 17957                           
 17958                           ; BSR set to: 0
 17959                           ;config_file.c: 120: {;config_file.c: 121: config.overshoot_in_steps = atoi(value_string
      +                          );
 17960  00BE40  C09B  F066         	movff	__parse_item@value_string,atoi@s
 17961  00BE44  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 17962  00BE48  EC7D  F094         	call	_atoi	;wreg free
 17963  00BE4C  C066  F19B         	movff	?_atoi,_config+5
 17964  00BE50  C067  F19C         	movff	?_atoi+1,_config+6
 17965                           
 17966                           ;config_file.c: 122: return 2;;	Return value of __parse_item is never used
 17967  00BE54  0012               	return	
 17968  00BE56                     l3057:
 17969                           
 17970                           ;config_file.c: 123: };config_file.c: 125: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 17971  00BE56  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 17972  00BE5A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 17973  00BE5E  0E5E               	movlw	low _inverse_direction_string
 17974  00BE60  0100               	movlb	0	; () banked
 17975  00BE62  6F63               	movwf	stricmp@s2& (0+255),b
 17976  00BE64  0EA2               	movlw	high _inverse_direction_string
 17977  00BE66  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 17978  00BE68  EC84  F0A6         	call	_stricmp	;wreg free
 17979  00BE6C  0100               	movlb	0	; () banked
 17980  00BE6E  5161               	movf	?_stricmp& (0+255),w,b
 17981  00BE70  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 17982  00BE72  A4D8               	btfss	status,2,c
 17983  00BE74  D00B               	goto	l3058
 17984                           
 17985                           ; BSR set to: 0
 17986                           ;config_file.c: 126: {;config_file.c: 127: config.inverse_direction = atol(value_string)
      +                          ;
 17987  00BE76  C09B  F06C         	movff	__parse_item@value_string,atol@s
 17988  00BE7A  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 17989  00BE7E  EC43  F08D         	call	_atol	;wreg free
 17990  00BE82  0100               	movlb	0	; () banked
 17991  00BE84  516C               	movf	?_atol& (0+255),w,b
 17992  00BE86  0101               	movlb	1	; () banked
 17993  00BE88  6F9A               	movwf	(_config+4)& (0+255),b
 17994                           
 17995                           ; BSR set to: 1
 17996                           ;config_file.c: 128: return 3;;	Return value of __parse_item is never used
 17997  00BE8A  0012               	return	
 17998  00BE8C                     l3058:
 17999                           
 18000                           ;config_file.c: 129: };config_file.c: 131: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18001                           
 18002                           ; BSR set to: 1
 18003  00BE8C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18004  00BE90  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18005  00BE94  0E27               	movlw	low _overshoot_in_steps_string
 18006  00BE96  0100               	movlb	0	; () banked
 18007  00BE98  6F63               	movwf	stricmp@s2& (0+255),b
 18008  00BE9A  0EA2               	movlw	high _overshoot_in_steps_string
 18009  00BE9C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18010  00BE9E  EC84  F0A6         	call	_stricmp	;wreg free
 18011  00BEA2  0100               	movlb	0	; () banked
 18012  00BEA4  5161               	movf	?_stricmp& (0+255),w,b
 18013  00BEA6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18014  00BEA8  A4D8               	btfss	status,2,c
 18015  00BEAA  D00B               	goto	l3059
 18016                           
 18017                           ; BSR set to: 0
 18018                           ;config_file.c: 132: {;config_file.c: 133: config.overshoot_in_steps = atoi(value_string
      +                          );
 18019  00BEAC  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18020  00BEB0  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18021  00BEB4  EC7D  F094         	call	_atoi	;wreg free
 18022  00BEB8  C066  F19B         	movff	?_atoi,_config+5
 18023  00BEBC  C067  F19C         	movff	?_atoi+1,_config+6
 18024                           
 18025                           ;config_file.c: 134: return 4;;	Return value of __parse_item is never used
 18026  00BEC0  0012               	return	
 18027  00BEC2                     l3059:
 18028                           
 18029                           ;config_file.c: 135: };config_file.c: 137: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18030  00BEC2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18031  00BEC6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18032  00BECA  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18033  00BECC  0100               	movlb	0	; () banked
 18034  00BECE  6F63               	movwf	stricmp@s2& (0+255),b
 18035  00BED0  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18036  00BED2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18037  00BED4  EC84  F0A6         	call	_stricmp	;wreg free
 18038  00BED8  0100               	movlb	0	; () banked
 18039  00BEDA  5161               	movf	?_stricmp& (0+255),w,b
 18040  00BEDC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18041  00BEDE  A4D8               	btfss	status,2,c
 18042  00BEE0  D00B               	goto	l3060
 18043                           
 18044                           ; BSR set to: 0
 18045                           ;config_file.c: 138: {;config_file.c: 139: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18046  00BEE2  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18047  00BEE6  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18048  00BEEA  EC7D  F094         	call	_atoi	;wreg free
 18049  00BEEE  C066  F19D         	movff	?_atoi,_config+7
 18050  00BEF2  C067  F19E         	movff	?_atoi+1,_config+8
 18051                           
 18052                           ;config_file.c: 140: return 5;;	Return value of __parse_item is never used
 18053  00BEF6  0012               	return	
 18054  00BEF8                     l3060:
 18055                           
 18056                           ;config_file.c: 141: };config_file.c: 143: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18057  00BEF8  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18058  00BEFC  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18059  00BF00  0EAC               	movlw	low _minimum_speed_string
 18060  00BF02  0100               	movlb	0	; () banked
 18061  00BF04  6F63               	movwf	stricmp@s2& (0+255),b
 18062  00BF06  0EA2               	movlw	high _minimum_speed_string
 18063  00BF08  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18064  00BF0A  EC84  F0A6         	call	_stricmp	;wreg free
 18065  00BF0E  0100               	movlb	0	; () banked
 18066  00BF10  5161               	movf	?_stricmp& (0+255),w,b
 18067  00BF12  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18068  00BF14  A4D8               	btfss	status,2,c
 18069  00BF16  D00B               	goto	l3061
 18070                           
 18071                           ; BSR set to: 0
 18072                           ;config_file.c: 144: {;config_file.c: 145: config.minimum_speed = atoi(value_string);
 18073  00BF18  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18074  00BF1C  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18075  00BF20  EC7D  F094         	call	_atoi	;wreg free
 18076  00BF24  C066  F19F         	movff	?_atoi,_config+9
 18077  00BF28  C067  F1A0         	movff	?_atoi+1,_config+10
 18078                           
 18079                           ;config_file.c: 146: return 6;;	Return value of __parse_item is never used
 18080  00BF2C  0012               	return	
 18081  00BF2E                     l3061:
 18082                           
 18083                           ;config_file.c: 147: };config_file.c: 149: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18084  00BF2E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18085  00BF32  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18086  00BF36  0E9E               	movlw	low _maximum_speed_string
 18087  00BF38  0100               	movlb	0	; () banked
 18088  00BF3A  6F63               	movwf	stricmp@s2& (0+255),b
 18089  00BF3C  0EA2               	movlw	high _maximum_speed_string
 18090  00BF3E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18091  00BF40  EC84  F0A6         	call	_stricmp	;wreg free
 18092  00BF44  0100               	movlb	0	; () banked
 18093  00BF46  5161               	movf	?_stricmp& (0+255),w,b
 18094  00BF48  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18095  00BF4A  A4D8               	btfss	status,2,c
 18096  00BF4C  D00B               	goto	l3062
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;config_file.c: 150: {;config_file.c: 151: config.maximum_speed = atoi(value_string);
 18100  00BF4E  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18101  00BF52  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18102  00BF56  EC7D  F094         	call	_atoi	;wreg free
 18103  00BF5A  C066  F1A1         	movff	?_atoi,_config+11
 18104  00BF5E  C067  F1A2         	movff	?_atoi+1,_config+12
 18105                           
 18106                           ;config_file.c: 152: return 7;;	Return value of __parse_item is never used
 18107  00BF62  0012               	return	
 18108  00BF64                     l3062:
 18109                           
 18110                           ;config_file.c: 153: };config_file.c: 155: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18111  00BF64  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18112  00BF68  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18113  00BF6C  0E4C               	movlw	low _initial_speed_arc_string
 18114  00BF6E  0100               	movlb	0	; () banked
 18115  00BF70  6F63               	movwf	stricmp@s2& (0+255),b
 18116  00BF72  0EA2               	movlw	high _initial_speed_arc_string
 18117  00BF74  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18118  00BF76  EC84  F0A6         	call	_stricmp	;wreg free
 18119  00BF7A  0100               	movlb	0	; () banked
 18120  00BF7C  5161               	movf	?_stricmp& (0+255),w,b
 18121  00BF7E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18122  00BF80  A4D8               	btfss	status,2,c
 18123  00BF82  D00B               	goto	l3063
 18124                           
 18125                           ; BSR set to: 0
 18126                           ;config_file.c: 156: {;config_file.c: 157: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18127  00BF84  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18128  00BF88  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18129  00BF8C  EC7D  F094         	call	_atoi	;wreg free
 18130  00BF90  C066  F1A3         	movff	?_atoi,_config+13
 18131  00BF94  C067  F1A4         	movff	?_atoi+1,_config+14
 18132                           
 18133                           ;config_file.c: 158: return 8;;	Return value of __parse_item is never used
 18134  00BF98  0012               	return	
 18135  00BF9A                     l3063:
 18136                           
 18137                           ;config_file.c: 159: };config_file.c: 161: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18138  00BF9A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18139  00BF9E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18140  00BFA2  0E3A               	movlw	low _maximum_speed_arc_string
 18141  00BFA4  0100               	movlb	0	; () banked
 18142  00BFA6  6F63               	movwf	stricmp@s2& (0+255),b
 18143  00BFA8  0EA2               	movlw	high _maximum_speed_arc_string
 18144  00BFAA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18145  00BFAC  EC84  F0A6         	call	_stricmp	;wreg free
 18146  00BFB0  0100               	movlb	0	; () banked
 18147  00BFB2  5161               	movf	?_stricmp& (0+255),w,b
 18148  00BFB4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18149  00BFB6  A4D8               	btfss	status,2,c
 18150  00BFB8  D00B               	goto	l3064
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;config_file.c: 162: {;config_file.c: 163: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18154  00BFBA  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18155  00BFBE  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18156  00BFC2  EC7D  F094         	call	_atoi	;wreg free
 18157  00BFC6  C066  F1A5         	movff	?_atoi,_config+15
 18158  00BFCA  C067  F1A6         	movff	?_atoi+1,_config+16
 18159                           
 18160                           ;config_file.c: 164: return 9;;	Return value of __parse_item is never used
 18161  00BFCE  0012               	return	
 18162  00BFD0                     l3064:
 18163                           
 18164                           ;config_file.c: 165: };config_file.c: 167: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18165  00BFD0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18166  00BFD4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18167  00BFD8  0EFD               	movlw	low _initial_speed_manual_string
 18168  00BFDA  0100               	movlb	0	; () banked
 18169  00BFDC  6F63               	movwf	stricmp@s2& (0+255),b
 18170  00BFDE  0EA1               	movlw	high _initial_speed_manual_string
 18171  00BFE0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18172  00BFE2  EC84  F0A6         	call	_stricmp	;wreg free
 18173  00BFE6  0100               	movlb	0	; () banked
 18174  00BFE8  5161               	movf	?_stricmp& (0+255),w,b
 18175  00BFEA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18176  00BFEC  A4D8               	btfss	status,2,c
 18177  00BFEE  D00B               	goto	l3065
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;config_file.c: 168: {;config_file.c: 169: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18181  00BFF0  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18182  00BFF4  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18183  00BFF8  EC7D  F094         	call	_atoi	;wreg free
 18184  00BFFC  C066  F1A7         	movff	?_atoi,_config+17
 18185  00C000  C067  F1A8         	movff	?_atoi+1,_config+18
 18186                           
 18187                           ;config_file.c: 170: return 10;;	Return value of __parse_item is never used
 18188  00C004  0012               	return	
 18189  00C006                     l3065:
 18190                           
 18191                           ;config_file.c: 171: };config_file.c: 173: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18192  00C006  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18193  00C00A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18194  00C00E  0EE8               	movlw	low _maximum_speed_manual_string
 18195  00C010  0100               	movlb	0	; () banked
 18196  00C012  6F63               	movwf	stricmp@s2& (0+255),b
 18197  00C014  0EA1               	movlw	high _maximum_speed_manual_string
 18198  00C016  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18199  00C018  EC84  F0A6         	call	_stricmp	;wreg free
 18200  00C01C  0100               	movlb	0	; () banked
 18201  00C01E  5161               	movf	?_stricmp& (0+255),w,b
 18202  00C020  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18203  00C022  A4D8               	btfss	status,2,c
 18204  00C024  D00B               	goto	l3066
 18205                           
 18206                           ; BSR set to: 0
 18207                           ;config_file.c: 174: {;config_file.c: 175: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18208  00C026  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18209  00C02A  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18210  00C02E  EC7D  F094         	call	_atoi	;wreg free
 18211  00C032  C066  F1A9         	movff	?_atoi,_config+19
 18212  00C036  C067  F1AA         	movff	?_atoi+1,_config+20
 18213                           
 18214                           ;config_file.c: 176: return 11;;	Return value of __parse_item is never used
 18215  00C03A  0012               	return	
 18216  00C03C                     l3066:
 18217                           
 18218                           ;config_file.c: 177: };config_file.c: 179: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18219  00C03C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18220  00C040  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18221  00C044  0E90               	movlw	low _beep_duration_string
 18222  00C046  0100               	movlb	0	; () banked
 18223  00C048  6F63               	movwf	stricmp@s2& (0+255),b
 18224  00C04A  0EA2               	movlw	high _beep_duration_string
 18225  00C04C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18226  00C04E  EC84  F0A6         	call	_stricmp	;wreg free
 18227  00C052  0100               	movlb	0	; () banked
 18228  00C054  5161               	movf	?_stricmp& (0+255),w,b
 18229  00C056  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18230  00C058  A4D8               	btfss	status,2,c
 18231  00C05A  D00B               	goto	l3067
 18232                           
 18233                           ; BSR set to: 0
 18234                           ;config_file.c: 180: {;config_file.c: 181: config.beep_duration = atoi(value_string);
 18235  00C05C  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18236  00C060  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18237  00C064  EC7D  F094         	call	_atoi	;wreg free
 18238  00C068  0100               	movlb	0	; () banked
 18239  00C06A  5166               	movf	?_atoi& (0+255),w,b
 18240  00C06C  0101               	movlb	1	; () banked
 18241  00C06E  6FAB               	movwf	(_config+21)& (0+255),b
 18242                           
 18243                           ; BSR set to: 1
 18244                           ;config_file.c: 182: return 12;;	Return value of __parse_item is never used
 18245  00C070  0012               	return	
 18246  00C072                     l3067:
 18247                           
 18248                           ;config_file.c: 183: };config_file.c: 185: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18249                           
 18250                           ; BSR set to: 1
 18251  00C072  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18252  00C076  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18253  00C07A  0EBA               	movlw	low _use_cw_limit_string
 18254  00C07C  0100               	movlb	0	; () banked
 18255  00C07E  6F63               	movwf	stricmp@s2& (0+255),b
 18256  00C080  0EA2               	movlw	high _use_cw_limit_string
 18257  00C082  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18258  00C084  EC84  F0A6         	call	_stricmp	;wreg free
 18259  00C088  0100               	movlb	0	; () banked
 18260  00C08A  5161               	movf	?_stricmp& (0+255),w,b
 18261  00C08C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18262  00C08E  A4D8               	btfss	status,2,c
 18263  00C090  D00B               	goto	l3068
 18264                           
 18265                           ; BSR set to: 0
 18266                           ;config_file.c: 186: {;config_file.c: 187: config.use_cw_limit = atol(value_string);
 18267  00C092  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18268  00C096  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18269  00C09A  EC43  F08D         	call	_atol	;wreg free
 18270  00C09E  0100               	movlb	0	; () banked
 18271  00C0A0  516C               	movf	?_atol& (0+255),w,b
 18272  00C0A2  0101               	movlb	1	; () banked
 18273  00C0A4  6FAC               	movwf	(_config+22)& (0+255),b
 18274                           
 18275                           ; BSR set to: 1
 18276                           ;config_file.c: 188: return 13;;	Return value of __parse_item is never used
 18277  00C0A6  0012               	return	
 18278  00C0A8                     l3068:
 18279                           
 18280                           ;config_file.c: 189: };config_file.c: 191: if(stricmp(item_string, cw_limit_string)==0)
 18281                           
 18282                           ; BSR set to: 1
 18283  00C0A8  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18284  00C0AC  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18285  00C0B0  0ED1               	movlw	low _cw_limit_string
 18286  00C0B2  0100               	movlb	0	; () banked
 18287  00C0B4  6F63               	movwf	stricmp@s2& (0+255),b
 18288  00C0B6  0EA2               	movlw	high _cw_limit_string
 18289  00C0B8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18290  00C0BA  EC84  F0A6         	call	_stricmp	;wreg free
 18291  00C0BE  0100               	movlb	0	; () banked
 18292  00C0C0  5161               	movf	?_stricmp& (0+255),w,b
 18293  00C0C2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18294  00C0C4  A4D8               	btfss	status,2,c
 18295  00C0C6  D021               	goto	l3069
 18296                           
 18297                           ; BSR set to: 0
 18298                           ;config_file.c: 192: {;config_file.c: 193: config.cw_limit = atol(value_string);
 18299  00C0C8  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18300  00C0CC  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18301  00C0D0  EC43  F08D         	call	_atol	;wreg free
 18302  00C0D4  C06C  F1AD         	movff	?_atol,_config+23
 18303  00C0D8  C06D  F1AE         	movff	?_atol+1,_config+24
 18304  00C0DC  C06E  F1AF         	movff	?_atol+2,_config+25
 18305  00C0E0  C06F  F1B0         	movff	?_atol+3,_config+26
 18306                           
 18307                           ;config_file.c: 194: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18308  00C0E4  C1AD  F091         	movff	_config+23,__steps_from_degrees@degrees
 18309  00C0E8  C1AE  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18310  00C0EC  C1AF  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18311  00C0F0  C1B0  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18312  00C0F4  EC16  F078         	call	__steps_from_degrees	;wreg free
 18313  00C0F8  C091  F1B1         	movff	?__steps_from_degrees,_config+27
 18314  00C0FC  C092  F1B2         	movff	?__steps_from_degrees+1,_config+28
 18315  00C100  C093  F1B3         	movff	?__steps_from_degrees+2,_config+29
 18316  00C104  C094  F1B4         	movff	?__steps_from_degrees+3,_config+30
 18317                           
 18318                           ;config_file.c: 195: return 14;;	Return value of __parse_item is never used
 18319  00C108  0012               	return	
 18320  00C10A                     l3069:
 18321                           
 18322                           ;config_file.c: 196: };config_file.c: 198: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18323  00C10A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18324  00C10E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18325  00C112  0E82               	movlw	low _use_ccw_limit_string
 18326  00C114  0100               	movlb	0	; () banked
 18327  00C116  6F63               	movwf	stricmp@s2& (0+255),b
 18328  00C118  0EA2               	movlw	high _use_ccw_limit_string
 18329  00C11A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18330  00C11C  EC84  F0A6         	call	_stricmp	;wreg free
 18331  00C120  0100               	movlb	0	; () banked
 18332  00C122  5161               	movf	?_stricmp& (0+255),w,b
 18333  00C124  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18334  00C126  A4D8               	btfss	status,2,c
 18335  00C128  D00B               	goto	l3070
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;config_file.c: 199: {;config_file.c: 200: config.use_ccw_limit = atol(value_string);
 18339  00C12A  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18340  00C12E  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18341  00C132  EC43  F08D         	call	_atol	;wreg free
 18342  00C136  0100               	movlb	0	; () banked
 18343  00C138  516C               	movf	?_atol& (0+255),w,b
 18344  00C13A  0101               	movlb	1	; () banked
 18345  00C13C  6FB5               	movwf	(_config+31)& (0+255),b
 18346                           
 18347                           ; BSR set to: 1
 18348                           ;config_file.c: 201: return 15;;	Return value of __parse_item is never used
 18349  00C13E  0012               	return	
 18350  00C140                     l3070:
 18351                           
 18352                           ;config_file.c: 202: };config_file.c: 204: if(stricmp(item_string, ccw_limit_string)==0)
 18353                           
 18354                           ; BSR set to: 1
 18355  00C140  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18356  00C144  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18357  00C148  0EC7               	movlw	low _ccw_limit_string
 18358  00C14A  0100               	movlb	0	; () banked
 18359  00C14C  6F63               	movwf	stricmp@s2& (0+255),b
 18360  00C14E  0EA2               	movlw	high _ccw_limit_string
 18361  00C150  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18362  00C152  EC84  F0A6         	call	_stricmp	;wreg free
 18363  00C156  0100               	movlb	0	; () banked
 18364  00C158  5161               	movf	?_stricmp& (0+255),w,b
 18365  00C15A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18366  00C15C  A4D8               	btfss	status,2,c
 18367  00C15E  D021               	goto	l3071
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;config_file.c: 205: {;config_file.c: 206: config.ccw_limit = atol(value_string);
 18371  00C160  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18372  00C164  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18373  00C168  EC43  F08D         	call	_atol	;wreg free
 18374  00C16C  C06C  F1B6         	movff	?_atol,_config+32
 18375  00C170  C06D  F1B7         	movff	?_atol+1,_config+33
 18376  00C174  C06E  F1B8         	movff	?_atol+2,_config+34
 18377  00C178  C06F  F1B9         	movff	?_atol+3,_config+35
 18378                           
 18379                           ;config_file.c: 207: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18380  00C17C  C1B6  F091         	movff	_config+32,__steps_from_degrees@degrees
 18381  00C180  C1B7  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18382  00C184  C1B8  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18383  00C188  C1B9  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18384  00C18C  EC16  F078         	call	__steps_from_degrees	;wreg free
 18385  00C190  C091  F1BA         	movff	?__steps_from_degrees,_config+36
 18386  00C194  C092  F1BB         	movff	?__steps_from_degrees+1,_config+37
 18387  00C198  C093  F1BC         	movff	?__steps_from_degrees+2,_config+38
 18388  00C19C  C094  F1BD         	movff	?__steps_from_degrees+3,_config+39
 18389                           
 18390                           ;config_file.c: 208: return 16;;	Return value of __parse_item is never used
 18391  00C1A0  0012               	return	
 18392  00C1A2                     l3071:
 18393                           
 18394                           ;config_file.c: 209: };config_file.c: 211: if(stricmp(item_string, position_display_180_
      +                          string)==0)
 18395  00C1A2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18396  00C1A6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18397  00C1AA  0ED3               	movlw	low _position_display_180_string
 18398  00C1AC  0100               	movlb	0	; () banked
 18399  00C1AE  6F63               	movwf	stricmp@s2& (0+255),b
 18400  00C1B0  0EA1               	movlw	high _position_display_180_string
 18401  00C1B2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18402  00C1B4  EC84  F0A6         	call	_stricmp	;wreg free
 18403  00C1B8  0100               	movlb	0	; () banked
 18404  00C1BA  5161               	movf	?_stricmp& (0+255),w,b
 18405  00C1BC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18406  00C1BE  A4D8               	btfss	status,2,c
 18407  00C1C0  0012               	return	
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;config_file.c: 212: {;config_file.c: 213: config.position_display_180 = atoi(value_stri
      +                          ng);
 18411  00C1C2  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18412  00C1C6  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18413  00C1CA  EC7D  F094         	call	_atoi	;wreg free
 18414  00C1CE  0100               	movlb	0	; () banked
 18415  00C1D0  5166               	movf	?_atoi& (0+255),w,b
 18416  00C1D2  0101               	movlb	1	; () banked
 18417  00C1D4  6FBE               	movwf	(_config+40)& (0+255),b
 18418                           
 18419                           ; BSR set to: 1
 18420                           ;config_file.c: 214: return 17;;	Return value of __parse_item is never used
 18421  00C1D6  0012               	return	
 18422  00C1D8                     __end_of__parse_item:
 18423                           	opt stack 0
 18424                           tblptru	equ	0xFF8
 18425                           tblptrh	equ	0xFF7
 18426                           tblptrl	equ	0xFF6
 18427                           tablat	equ	0xFF5
 18428                           prodh	equ	0xFF4
 18429                           prodl	equ	0xFF3
 18430                           postinc0	equ	0xFEE
 18431                           wreg	equ	0xFE8
 18432                           postinc1	equ	0xFE6
 18433                           postdec1	equ	0xFE5
 18434                           plusw1	equ	0xFE3
 18435                           fsr1h	equ	0xFE2
 18436                           fsr1l	equ	0xFE1
 18437                           indf2	equ	0xFDF
 18438                           postinc2	equ	0xFDE
 18439                           postdec2	equ	0xFDD
 18440                           plusw2	equ	0xFDB
 18441                           fsr2h	equ	0xFDA
 18442                           fsr2l	equ	0xFD9
 18443                           status	equ	0xFD8
 18444                           
 18445 ;; *************** function _stricmp *****************
 18446 ;; Defined at:
 18447 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18448 ;; Parameters:    Size  Location     Type
 18449 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18450 ;;		 -> configFile_read@item_string(31), 
 18451 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18452 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 18453 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 18454 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 18455 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 18456 ;; Auto vars:     Size  Location     Type
 18457 ;;  r               1    6[BANK0 ] char 
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  2    1[BANK0 ] int 
 18460 ;; Registers used:
 18461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18467 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18470 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18471 ;;Total ram usage:        6 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:   11
 18474 ;; This function calls:
 18475 ;;		_toupper
 18476 ;; This function is called by:
 18477 ;;		__parse_item
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           	psect	text70
 18482  014D08                     __ptext70:
 18483                           	opt stack 0
 18484  014D08                     _stricmp:
 18485                           	opt stack 16
 18486                           
 18487                           ;incstack = 0
 18488  014D08  D005               	goto	l3836
 18489  014D0A  0100               	movlb	0	; () banked
 18490  014D0C  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18491  014D0E  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18492  014D10  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18493  014D12  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18494  014D14                     l3836:
 18495                           
 18496                           ; BSR set to: 0
 18497  014D14  C063  FFF6         	movff	stricmp@s2,tblptrl
 18498  014D18  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18499  014D1C                     	if	0	;tblptru may be non-zero
 18500  014D1C                     	endif
 18501  014D1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18502  014D1C  0E00               	movlw	low (__mediumconst shr (0+16))
 18503  014D1E  6EF8               	movwf	tblptru,c
 18504  014D20                     	endif
 18505  014D20  0008               	tblrd		*
 18506  014D22  50F5               	movf	tablat,w,c
 18507  014D24  ECF7  F0AF         	call	_toupper
 18508  014D28  0800               	sublw	0
 18509  014D2A  0100               	movlb	0	; () banked
 18510  014D2C  6F65               	movwf	??_stricmp& (0+255),b
 18511  014D2E  C061  FFD9         	movff	stricmp@s1,fsr2l
 18512  014D32  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18513  014D36  50DF               	movf	indf2,w,c
 18514  014D38  ECF7  F0AF         	call	_toupper
 18515  014D3C  0100               	movlb	0	; () banked
 18516  014D3E  2565               	addwf	??_stricmp& (0+255),w,b
 18517  014D40  6F66               	movwf	stricmp@r& (0+255),b
 18518  014D42  5166               	movf	stricmp@r& (0+255),w,b
 18519  014D44  A4D8               	btfss	status,2,c
 18520  014D46  D007               	goto	u14450
 18521                           
 18522                           ; BSR set to: 0
 18523  014D48  C061  FFD9         	movff	stricmp@s1,fsr2l
 18524  014D4C  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18525  014D50  50DF               	movf	indf2,w,c
 18526  014D52  A4D8               	btfss	status,2,c
 18527  014D54  D7DA               	goto	l3837
 18528  014D56                     u14450:
 18529                           
 18530                           ; BSR set to: 0
 18531                           
 18532                           ; BSR set to: 0
 18533                           
 18534                           ; BSR set to: 0
 18535  014D56  5166               	movf	stricmp@r& (0+255),w,b
 18536  014D58  6F61               	movwf	?_stricmp& (0+255),b
 18537  014D5A  6B62               	clrf	(?_stricmp+1)& (0+255),b
 18538  014D5C  BF61               	btfsc	?_stricmp& (0+255),7,b
 18539  014D5E  0762               	decf	(?_stricmp+1)& (0+255),f,b
 18540  014D60  0012               	return	
 18541  014D62                     __end_of_stricmp:
 18542                           	opt stack 0
 18543                           tblptru	equ	0xFF8
 18544                           tblptrh	equ	0xFF7
 18545                           tblptrl	equ	0xFF6
 18546                           tablat	equ	0xFF5
 18547                           prodh	equ	0xFF4
 18548                           prodl	equ	0xFF3
 18549                           postinc0	equ	0xFEE
 18550                           wreg	equ	0xFE8
 18551                           postinc1	equ	0xFE6
 18552                           postdec1	equ	0xFE5
 18553                           plusw1	equ	0xFE3
 18554                           fsr1h	equ	0xFE2
 18555                           fsr1l	equ	0xFE1
 18556                           indf2	equ	0xFDF
 18557                           postinc2	equ	0xFDE
 18558                           postdec2	equ	0xFDD
 18559                           plusw2	equ	0xFDB
 18560                           fsr2h	equ	0xFDA
 18561                           fsr2l	equ	0xFD9
 18562                           status	equ	0xFD8
 18563                           
 18564 ;; *************** function _toupper *****************
 18565 ;; Defined at:
 18566 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 18567 ;; Parameters:    Size  Location     Type
 18568 ;;  c               1    wreg     unsigned char 
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;  c               1    0[BANK0 ] unsigned char 
 18571 ;; Return value:  Size  Location     Type
 18572 ;;                  1    wreg      unsigned char 
 18573 ;; Registers used:
 18574 ;;		wreg, status,2, status,0
 18575 ;; Tracked objects:
 18576 ;;		On entry : 0/0
 18577 ;;		On exit  : 0/0
 18578 ;;		Unchanged: 0/0
 18579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18583 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18584 ;;Total ram usage:        1 bytes
 18585 ;; Hardware stack levels used:    1
 18586 ;; Hardware stack levels required when called:   10
 18587 ;; This function calls:
 18588 ;;		Nothing
 18589 ;; This function is called by:
 18590 ;;		_stricmp
 18591 ;; This function uses a non-reentrant model
 18592 ;;
 18593                           
 18594                           	psect	text71
 18595  015FEE                     __ptext71:
 18596                           	opt stack 0
 18597  015FEE                     _toupper:
 18598                           	opt stack 16
 18599                           
 18600                           ; BSR set to: 0
 18601                           ;incstack = 0
 18602                           ;toupper@c stored from wreg
 18603  015FEE  0100               	movlb	0	; () banked
 18604  015FF0  6F60               	movwf	toupper@c& (0+255),b
 18605  015FF2  0E7B               	movlw	123
 18606  015FF4  0100               	movlb	0	; () banked
 18607  015FF6  6160               	cpfslt	toupper@c& (0+255),b
 18608  015FF8  D004               	goto	l3859
 18609                           
 18610                           ; BSR set to: 0
 18611  015FFA  0E60               	movlw	96
 18612  015FFC  6560               	cpfsgt	toupper@c& (0+255),b
 18613  015FFE  D001               	goto	l3859
 18614                           
 18615                           ; BSR set to: 0
 18616  016000  9B60               	bcf	toupper@c& (0+255),5,b
 18617  016002                     l3859:
 18618                           
 18619                           ; BSR set to: 0
 18620                           
 18621                           ; BSR set to: 0
 18622  016002  5160               	movf	toupper@c& (0+255),w,b
 18623  016004  0012               	return	
 18624  016006                     __end_of_toupper:
 18625                           	opt stack 0
 18626                           tblptru	equ	0xFF8
 18627                           tblptrh	equ	0xFF7
 18628                           tblptrl	equ	0xFF6
 18629                           tablat	equ	0xFF5
 18630                           prodh	equ	0xFF4
 18631                           prodl	equ	0xFF3
 18632                           postinc0	equ	0xFEE
 18633                           wreg	equ	0xFE8
 18634                           postinc1	equ	0xFE6
 18635                           postdec1	equ	0xFE5
 18636                           plusw1	equ	0xFE3
 18637                           fsr1h	equ	0xFE2
 18638                           fsr1l	equ	0xFE1
 18639                           indf2	equ	0xFDF
 18640                           postinc2	equ	0xFDE
 18641                           postdec2	equ	0xFDD
 18642                           plusw2	equ	0xFDB
 18643                           fsr2h	equ	0xFDA
 18644                           fsr2l	equ	0xFD9
 18645                           status	equ	0xFD8
 18646                           
 18647 ;; *************** function _atol *****************
 18648 ;; Defined at:
 18649 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 18650 ;; Parameters:    Size  Location     Type
 18651 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 18652 ;;		 -> configFile_read@value_string(12), 
 18653 ;; Auto vars:     Size  Location     Type
 18654 ;;  a               4   21[BANK0 ] long 
 18655 ;;  c               1   25[BANK0 ] unsigned char 
 18656 ;;  sign            1   20[BANK0 ] unsigned char 
 18657 ;; Return value:  Size  Location     Type
 18658 ;;                  4   12[BANK0 ] long 
 18659 ;; Registers used:
 18660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18661 ;; Tracked objects:
 18662 ;;		On entry : 0/0
 18663 ;;		On exit  : 0/0
 18664 ;;		Unchanged: 0/0
 18665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18666 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18667 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18669 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18670 ;;Total ram usage:       14 bytes
 18671 ;; Hardware stack levels used:    1
 18672 ;; Hardware stack levels required when called:   11
 18673 ;; This function calls:
 18674 ;;		___lmul
 18675 ;;		_isdigit
 18676 ;; This function is called by:
 18677 ;;		__parse_item
 18678 ;; This function uses a non-reentrant model
 18679 ;;
 18680                           
 18681                           	psect	text72
 18682  011A86                     __ptext72:
 18683                           	opt stack 0
 18684  011A86                     _atol:
 18685                           	opt stack 16
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;incstack = 0
 18689  011A86  C06C  FFD9         	movff	atol@s,fsr2l
 18690  011A8A  C06D  FFDA         	movff	atol@s+1,fsr2h
 18691  011A8E  50DF               	movf	indf2,w,c
 18692  011A90  0100               	movlb	0	; () banked
 18693  011A92  6F79               	movwf	atol@c& (0+255),b
 18694                           
 18695                           ; BSR set to: 0
 18696  011A94  4B6C               	infsnz	atol@s& (0+255),f,b
 18697  011A96  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18698                           
 18699                           ; BSR set to: 0
 18700  011A98  0E20               	movlw	32
 18701  011A9A  1979               	xorwf	atol@c& (0+255),w,b
 18702  011A9C  B4D8               	btfsc	status,2,c
 18703  011A9E  D7F3               	goto	_atol
 18704                           
 18705                           ; BSR set to: 0
 18706  011AA0  0E09               	movlw	9
 18707  011AA2  1979               	xorwf	atol@c& (0+255),w,b
 18708  011AA4  B4D8               	btfsc	status,2,c
 18709  011AA6  D7EF               	goto	_atol
 18710                           
 18711                           ; BSR set to: 0
 18712                           
 18713                           ; BSR set to: 0
 18714  011AA8  0E00               	movlw	0
 18715  011AAA  6F75               	movwf	atol@a& (0+255),b
 18716  011AAC  0E00               	movlw	0
 18717  011AAE  6F76               	movwf	(atol@a+1)& (0+255),b
 18718  011AB0  0E00               	movlw	0
 18719  011AB2  6F77               	movwf	(atol@a+2)& (0+255),b
 18720  011AB4  0E00               	movlw	0
 18721  011AB6  6F78               	movwf	(atol@a+3)& (0+255),b
 18722  011AB8  0E00               	movlw	0
 18723  011ABA  6F74               	movwf	atol@sign& (0+255),b
 18724                           
 18725                           ; BSR set to: 0
 18726  011ABC  0E2D               	movlw	45
 18727  011ABE  1979               	xorwf	atol@c& (0+255),w,b
 18728  011AC0  A4D8               	btfss	status,2,c
 18729  011AC2  D002               	goto	l3779
 18730                           
 18731                           ; BSR set to: 0
 18732  011AC4  2B74               	incf	atol@sign& (0+255),f,b
 18733  011AC6  D029               	goto	L87
 18734  011AC8                     l3779:
 18735                           
 18736                           ; BSR set to: 0
 18737                           
 18738                           ; BSR set to: 0
 18739  011AC8  0E2B               	movlw	43
 18740  011ACA  1979               	xorwf	atol@c& (0+255),w,b
 18741  011ACC  A4D8               	btfss	status,2,c
 18742  011ACE  D02D               	goto	l3782
 18743  011AD0  D024               	goto	L87
 18744  011AD2                     
 18745                           ; BSR set to: 0
 18746  011AD2  C075  F060         	movff	atol@a,___lmul@multiplier
 18747  011AD6  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 18748  011ADA  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 18749  011ADE  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 18750  011AE2  0E0A               	movlw	10
 18751  011AE4  0100               	movlb	0	; () banked
 18752  011AE6  6F64               	movwf	___lmul@multiplicand& (0+255),b
 18753  011AE8  0E00               	movlw	0
 18754  011AEA  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 18755  011AEC  0E00               	movlw	0
 18756  011AEE  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 18757  011AF0  0E00               	movlw	0
 18758  011AF2  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 18759  011AF4  ECBC  F0A7         	call	___lmul	;wreg free
 18760  011AF8  C079  F070         	movff	atol@c,??_atol
 18761  011AFC  0ED0               	movlw	208
 18762  011AFE  0100               	movlb	0	; () banked
 18763  011B00  2770               	addwf	??_atol& (0+255),f,b
 18764  011B02  5170               	movf	??_atol& (0+255),w,b
 18765  011B04  2560               	addwf	?___lmul& (0+255),w,b
 18766  011B06  6F75               	movwf	atol@a& (0+255),b
 18767  011B08  0E00               	movlw	0
 18768  011B0A  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 18769  011B0C  6F76               	movwf	(atol@a+1)& (0+255),b
 18770  011B0E  0E00               	movlw	0
 18771  011B10  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 18772  011B12  6F77               	movwf	(atol@a+2)& (0+255),b
 18773  011B14  0E00               	movlw	0
 18774  011B16  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 18775  011B18  6F78               	movwf	(atol@a+3)& (0+255),b
 18776  011B1A                     L87:
 18777                           
 18778                           ; BSR set to: 0
 18779  011B1A  C06C  FFD9         	movff	atol@s,fsr2l
 18780  011B1E  C06D  FFDA         	movff	atol@s+1,fsr2h
 18781  011B22  50DF               	movf	indf2,w,c
 18782  011B24  6F79               	movwf	atol@c& (0+255),b
 18783                           
 18784                           ; BSR set to: 0
 18785  011B26  4B6C               	infsnz	atol@s& (0+255),f,b
 18786  011B28  2B6D               	incf	(atol@s+1)& (0+255),f,b
 18787  011B2A                     l3782:
 18788                           
 18789                           ; BSR set to: 0
 18790                           
 18791                           ; BSR set to: 0
 18792  011B2A  5179               	movf	atol@c& (0+255),w,b
 18793  011B2C  EC70  F0AF         	call	_isdigit
 18794  011B30  B0D8               	btfsc	status,0,c
 18795  011B32  D7CF               	goto	l3783
 18796  011B34  0100               	movlb	0	; () banked
 18797  011B36  5174               	movf	atol@sign& (0+255),w,b
 18798  011B38  B4D8               	btfsc	status,2,c
 18799  011B3A  D01A               	goto	l3785
 18800                           
 18801                           ; BSR set to: 0
 18802  011B3C  C075  F070         	movff	atol@a,??_atol
 18803  011B40  C076  F071         	movff	atol@a+1,??_atol+1
 18804  011B44  C077  F072         	movff	atol@a+2,??_atol+2
 18805  011B48  C078  F073         	movff	atol@a+3,??_atol+3
 18806  011B4C  1F70               	comf	??_atol& (0+255),f,b
 18807  011B4E  1F71               	comf	(??_atol+1)& (0+255),f,b
 18808  011B50  1F72               	comf	(??_atol+2)& (0+255),f,b
 18809  011B52  1F73               	comf	(??_atol+3)& (0+255),f,b
 18810  011B54  2B70               	incf	??_atol& (0+255),f,b
 18811  011B56  0E00               	movlw	0
 18812  011B58  2371               	addwfc	(??_atol+1)& (0+255),f,b
 18813  011B5A  2372               	addwfc	(??_atol+2)& (0+255),f,b
 18814  011B5C  2373               	addwfc	(??_atol+3)& (0+255),f,b
 18815  011B5E  C070  F06C         	movff	??_atol,?_atol
 18816  011B62  C071  F06D         	movff	??_atol+1,?_atol+1
 18817  011B66  C072  F06E         	movff	??_atol+2,?_atol+2
 18818  011B6A  C073  F06F         	movff	??_atol+3,?_atol+3
 18819                           
 18820                           ; BSR set to: 0
 18821  011B6E  0012               	return	
 18822  011B70                     l3785:
 18823                           
 18824                           ; BSR set to: 0
 18825  011B70  C075  F06C         	movff	atol@a,?_atol
 18826  011B74  C076  F06D         	movff	atol@a+1,?_atol+1
 18827  011B78  C077  F06E         	movff	atol@a+2,?_atol+2
 18828  011B7C  C078  F06F         	movff	atol@a+3,?_atol+3
 18829                           
 18830                           ; BSR set to: 0
 18831  011B80  0012               	return		;funcret
 18832  011B82                     __end_of_atol:
 18833                           	opt stack 0
 18834                           tblptru	equ	0xFF8
 18835                           tblptrh	equ	0xFF7
 18836                           tblptrl	equ	0xFF6
 18837                           tablat	equ	0xFF5
 18838                           prodh	equ	0xFF4
 18839                           prodl	equ	0xFF3
 18840                           postinc0	equ	0xFEE
 18841                           wreg	equ	0xFE8
 18842                           postinc1	equ	0xFE6
 18843                           postdec1	equ	0xFE5
 18844                           plusw1	equ	0xFE3
 18845                           fsr1h	equ	0xFE2
 18846                           fsr1l	equ	0xFE1
 18847                           indf2	equ	0xFDF
 18848                           postinc2	equ	0xFDE
 18849                           postdec2	equ	0xFDD
 18850                           plusw2	equ	0xFDB
 18851                           fsr2h	equ	0xFDA
 18852                           fsr2l	equ	0xFD9
 18853                           status	equ	0xFD8
 18854                           
 18855 ;; *************** function _atoi *****************
 18856 ;; Defined at:
 18857 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 18858 ;; Parameters:    Size  Location     Type
 18859 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 18860 ;;		 -> configFile_read@value_string(12), 
 18861 ;; Auto vars:     Size  Location     Type
 18862 ;;  a               2   11[BANK0 ] int 
 18863 ;;  sign            1   10[BANK0 ] unsigned char 
 18864 ;; Return value:  Size  Location     Type
 18865 ;;                  2    6[BANK0 ] int 
 18866 ;; Registers used:
 18867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18868 ;; Tracked objects:
 18869 ;;		On entry : 0/0
 18870 ;;		On exit  : 0/0
 18871 ;;		Unchanged: 0/0
 18872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18874 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18876 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18877 ;;Total ram usage:        7 bytes
 18878 ;; Hardware stack levels used:    1
 18879 ;; Hardware stack levels required when called:   11
 18880 ;; This function calls:
 18881 ;;		___wmul
 18882 ;;		_isdigit
 18883 ;; This function is called by:
 18884 ;;		__parse_item
 18885 ;; This function uses a non-reentrant model
 18886 ;;
 18887                           
 18888                           	psect	text73
 18889  0128FA                     __ptext73:
 18890                           	opt stack 0
 18891  0128FA                     _atoi:
 18892                           	opt stack 16
 18893                           
 18894                           ; BSR set to: 0
 18895                           ;incstack = 0
 18896  0128FA  D003               	goto	l3762
 18897  0128FC  0100               	movlb	0	; () banked
 18898  0128FE  4B66               	infsnz	atoi@s& (0+255),f,b
 18899  012900  2B67               	incf	(atoi@s+1)& (0+255),f,b
 18900  012902                     l3762:
 18901                           
 18902                           ; BSR set to: 0
 18903  012902  C066  FFD9         	movff	atoi@s,fsr2l
 18904  012906  C067  FFDA         	movff	atoi@s+1,fsr2h
 18905  01290A  0E20               	movlw	32
 18906  01290C  18DE               	xorwf	postinc2,w,c
 18907  01290E  B4D8               	btfsc	status,2,c
 18908  012910  D7F5               	goto	l3763
 18909  012912  C066  FFD9         	movff	atoi@s,fsr2l
 18910  012916  C067  FFDA         	movff	atoi@s+1,fsr2h
 18911  01291A  0E09               	movlw	9
 18912  01291C  18DE               	xorwf	postinc2,w,c
 18913  01291E  B4D8               	btfsc	status,2,c
 18914  012920  D7ED               	goto	l3763
 18915  012922  0E00               	movlw	0
 18916  012924  0100               	movlb	0	; () banked
 18917  012926  6F6C               	movwf	(atoi@a+1)& (0+255),b
 18918  012928  0E00               	movlw	0
 18919  01292A  6F6B               	movwf	atoi@a& (0+255),b
 18920  01292C  0E00               	movlw	0
 18921  01292E  6F6A               	movwf	atoi@sign& (0+255),b
 18922                           
 18923                           ; BSR set to: 0
 18924  012930  C066  FFD9         	movff	atoi@s,fsr2l
 18925  012934  C067  FFDA         	movff	atoi@s+1,fsr2h
 18926  012938  0E2D               	movlw	45
 18927  01293A  18DE               	xorwf	postinc2,w,c
 18928  01293C  A4D8               	btfss	status,2,c
 18929  01293E  D002               	goto	l3765
 18930                           
 18931                           ; BSR set to: 0
 18932  012940  2B6A               	incf	atoi@sign& (0+255),f,b
 18933  012942  D026               	goto	l15692
 18934  012944                     l3765:
 18935                           
 18936                           ; BSR set to: 0
 18937                           
 18938                           ; BSR set to: 0
 18939  012944  C066  FFD9         	movff	atoi@s,fsr2l
 18940  012948  C067  FFDA         	movff	atoi@s+1,fsr2h
 18941  01294C  0E2B               	movlw	43
 18942  01294E  18DE               	xorwf	postinc2,w,c
 18943  012950  A4D8               	btfss	status,2,c
 18944  012952  D020               	goto	l3768
 18945  012954  D01D               	goto	l15692
 18946  012956                     
 18947                           ; BSR set to: 0
 18948  012956  C06B  F060         	movff	atoi@a,___wmul@multiplier
 18949  01295A  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 18950  01295E  0E00               	movlw	0
 18951  012960  0100               	movlb	0	; () banked
 18952  012962  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18953  012964  0E0A               	movlw	10
 18954  012966  6F62               	movwf	___wmul@multiplicand& (0+255),b
 18955  012968  ECB5  F0AE         	call	___wmul	;wreg free
 18956  01296C  C066  FFD9         	movff	atoi@s,fsr2l
 18957  012970  C067  FFDA         	movff	atoi@s+1,fsr2h
 18958  012974  50DF               	movf	indf2,w,c
 18959  012976  0100               	movlb	0	; () banked
 18960  012978  6F68               	movwf	??_atoi& (0+255),b
 18961  01297A  6B69               	clrf	(??_atoi+1)& (0+255),b
 18962  01297C  5160               	movf	?___wmul& (0+255),w,b
 18963  01297E  2768               	addwf	??_atoi& (0+255),f,b
 18964  012980  5161               	movf	(?___wmul+1)& (0+255),w,b
 18965  012982  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 18966  012984  0ED0               	movlw	208
 18967  012986  2568               	addwf	??_atoi& (0+255),w,b
 18968  012988  6F6B               	movwf	atoi@a& (0+255),b
 18969  01298A  0EFF               	movlw	255
 18970  01298C  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 18971  01298E  6F6C               	movwf	(atoi@a+1)& (0+255),b
 18972  012990                     l15692:
 18973                           
 18974                           ; BSR set to: 0
 18975  012990  4B66               	infsnz	atoi@s& (0+255),f,b
 18976  012992  2B67               	incf	(atoi@s+1)& (0+255),f,b
 18977  012994                     l3768:
 18978                           
 18979                           ; BSR set to: 0
 18980                           
 18981                           ; BSR set to: 0
 18982  012994  C066  FFD9         	movff	atoi@s,fsr2l
 18983  012998  C067  FFDA         	movff	atoi@s+1,fsr2h
 18984  01299C  50DF               	movf	indf2,w,c
 18985  01299E  EC70  F0AF         	call	_isdigit
 18986  0129A2  B0D8               	btfsc	status,0,c
 18987  0129A4  D7D8               	goto	l3769
 18988  0129A6  0100               	movlb	0	; () banked
 18989  0129A8  516A               	movf	atoi@sign& (0+255),w,b
 18990  0129AA  B4D8               	btfsc	status,2,c
 18991  0129AC  D00D               	goto	l3771
 18992                           
 18993                           ; BSR set to: 0
 18994  0129AE  C06B  F068         	movff	atoi@a,??_atoi
 18995  0129B2  C06C  F069         	movff	atoi@a+1,??_atoi+1
 18996  0129B6  1F68               	comf	??_atoi& (0+255),f,b
 18997  0129B8  1F69               	comf	(??_atoi+1)& (0+255),f,b
 18998  0129BA  4B68               	infsnz	??_atoi& (0+255),f,b
 18999  0129BC  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19000  0129BE  C068  F066         	movff	??_atoi,?_atoi
 19001  0129C2  C069  F067         	movff	??_atoi+1,?_atoi+1
 19002  0129C6  0012               	return	
 19003  0129C8                     l3771:
 19004                           
 19005                           ; BSR set to: 0
 19006  0129C8  C06B  F066         	movff	atoi@a,?_atoi
 19007  0129CC  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19008                           
 19009                           ; BSR set to: 0
 19010  0129D0  0012               	return		;funcret
 19011  0129D2                     __end_of_atoi:
 19012                           	opt stack 0
 19013                           tblptru	equ	0xFF8
 19014                           tblptrh	equ	0xFF7
 19015                           tblptrl	equ	0xFF6
 19016                           tablat	equ	0xFF5
 19017                           prodh	equ	0xFF4
 19018                           prodl	equ	0xFF3
 19019                           postinc0	equ	0xFEE
 19020                           wreg	equ	0xFE8
 19021                           postinc1	equ	0xFE6
 19022                           postdec1	equ	0xFE5
 19023                           plusw1	equ	0xFE3
 19024                           fsr1h	equ	0xFE2
 19025                           fsr1l	equ	0xFE1
 19026                           indf2	equ	0xFDF
 19027                           postinc2	equ	0xFDE
 19028                           postdec2	equ	0xFDD
 19029                           plusw2	equ	0xFDB
 19030                           fsr2h	equ	0xFDA
 19031                           fsr2l	equ	0xFD9
 19032                           status	equ	0xFD8
 19033                           
 19034 ;; *************** function _isdigit *****************
 19035 ;; Defined at:
 19036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19037 ;; Parameters:    Size  Location     Type
 19038 ;;  c               1    wreg     unsigned char 
 19039 ;; Auto vars:     Size  Location     Type
 19040 ;;  c               1    2[BANK0 ] unsigned char 
 19041 ;; Return value:  Size  Location     Type
 19042 ;;		None               void
 19043 ;; Registers used:
 19044 ;;		wreg, status,2, status,0
 19045 ;; Tracked objects:
 19046 ;;		On entry : 0/0
 19047 ;;		On exit  : 0/0
 19048 ;;		Unchanged: 0/0
 19049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19052 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19053 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19054 ;;Total ram usage:        3 bytes
 19055 ;; Hardware stack levels used:    1
 19056 ;; Hardware stack levels required when called:   10
 19057 ;; This function calls:
 19058 ;;		Nothing
 19059 ;; This function is called by:
 19060 ;;		_atoi
 19061 ;;		_atol
 19062 ;; This function uses a non-reentrant model
 19063 ;;
 19064                           
 19065                           	psect	text74
 19066  015EE0                     __ptext74:
 19067                           	opt stack 0
 19068  015EE0                     _isdigit:
 19069                           	opt stack 16
 19070                           
 19071                           ; BSR set to: 0
 19072                           ;incstack = 0
 19073                           ;isdigit@c stored from wreg
 19074  015EE0  0100               	movlb	0	; () banked
 19075  015EE2  6F62               	movwf	isdigit@c& (0+255),b
 19076  015EE4  0E00               	movlw	0
 19077  015EE6  0100               	movlb	0	; () banked
 19078  015EE8  6F61               	movwf	_isdigit$8446& (0+255),b
 19079                           
 19080                           ; BSR set to: 0
 19081  015EEA  0E3A               	movlw	58
 19082  015EEC  6162               	cpfslt	isdigit@c& (0+255),b
 19083  015EEE  D005               	goto	l3790
 19084                           
 19085                           ; BSR set to: 0
 19086  015EF0  0E2F               	movlw	47
 19087  015EF2  6562               	cpfsgt	isdigit@c& (0+255),b
 19088  015EF4  D002               	goto	l3790
 19089                           
 19090                           ; BSR set to: 0
 19091  015EF6  0E01               	movlw	1
 19092  015EF8  6F61               	movwf	_isdigit$8446& (0+255),b
 19093  015EFA                     l3790:
 19094                           
 19095                           ; BSR set to: 0
 19096                           
 19097                           ; BSR set to: 0
 19098  015EFA  C061  F060         	movff	_isdigit$8446,??_isdigit
 19099  015EFE  3160               	rrcf	??_isdigit& (0+255),w,b
 19100  015F00  0012               	return	
 19101  015F02                     __end_of_isdigit:
 19102                           	opt stack 0
 19103                           tblptru	equ	0xFF8
 19104                           tblptrh	equ	0xFF7
 19105                           tblptrl	equ	0xFF6
 19106                           tablat	equ	0xFF5
 19107                           prodh	equ	0xFF4
 19108                           prodl	equ	0xFF3
 19109                           postinc0	equ	0xFEE
 19110                           wreg	equ	0xFE8
 19111                           postinc1	equ	0xFE6
 19112                           postdec1	equ	0xFE5
 19113                           plusw1	equ	0xFE3
 19114                           fsr1h	equ	0xFE2
 19115                           fsr1l	equ	0xFE1
 19116                           indf2	equ	0xFDF
 19117                           postinc2	equ	0xFDE
 19118                           postdec2	equ	0xFDD
 19119                           plusw2	equ	0xFDB
 19120                           fsr2h	equ	0xFDA
 19121                           fsr2l	equ	0xFD9
 19122                           status	equ	0xFD8
 19123                           
 19124 ;; *************** function ___wmul *****************
 19125 ;; Defined at:
 19126 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19127 ;; Parameters:    Size  Location     Type
 19128 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19129 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19130 ;; Auto vars:     Size  Location     Type
 19131 ;;  product         2    4[BANK0 ] unsigned int 
 19132 ;; Return value:  Size  Location     Type
 19133 ;;                  2    0[BANK0 ] unsigned int 
 19134 ;; Registers used:
 19135 ;;		wreg, status,2, status,0, prodl, prodh
 19136 ;; Tracked objects:
 19137 ;;		On entry : 0/0
 19138 ;;		On exit  : 0/0
 19139 ;;		Unchanged: 0/0
 19140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19144 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19145 ;;Total ram usage:        6 bytes
 19146 ;; Hardware stack levels used:    1
 19147 ;; Hardware stack levels required when called:   10
 19148 ;; This function calls:
 19149 ;;		Nothing
 19150 ;; This function is called by:
 19151 ;;		_atoi
 19152 ;; This function uses a non-reentrant model
 19153 ;;
 19154                           
 19155                           	psect	text75
 19156  015D6A                     __ptext75:
 19157                           	opt stack 0
 19158  015D6A                     ___wmul:
 19159                           	opt stack 16
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;incstack = 0
 19163  015D6A  0100               	movlb	0	; () banked
 19164  015D6C  5160               	movf	___wmul@multiplier& (0+255),w,b
 19165  015D6E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19166  015D70  CFF3 F064          	movff	prodl,___wmul@product
 19167  015D74  CFF4 F065          	movff	prodh,___wmul@product+1
 19168  015D78  5160               	movf	___wmul@multiplier& (0+255),w,b
 19169  015D7A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19170  015D7C  50F3               	movf	prodl,w,c
 19171  015D7E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19172  015D80  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19173  015D82  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19174  015D84  50F3               	movf	prodl,w,c
 19175  015D86  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19176                           
 19177                           ; BSR set to: 0
 19178  015D88  C064  F060         	movff	___wmul@product,?___wmul
 19179  015D8C  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19180  015D90  0012               	return	
 19181  015D92                     __end_of___wmul:
 19182                           	opt stack 0
 19183                           tblptru	equ	0xFF8
 19184                           tblptrh	equ	0xFF7
 19185                           tblptrl	equ	0xFF6
 19186                           tablat	equ	0xFF5
 19187                           prodh	equ	0xFF4
 19188                           prodl	equ	0xFF3
 19189                           postinc0	equ	0xFEE
 19190                           wreg	equ	0xFE8
 19191                           postinc1	equ	0xFE6
 19192                           postdec1	equ	0xFE5
 19193                           plusw1	equ	0xFE3
 19194                           fsr1h	equ	0xFE2
 19195                           fsr1l	equ	0xFE1
 19196                           indf2	equ	0xFDF
 19197                           postinc2	equ	0xFDE
 19198                           postdec2	equ	0xFDD
 19199                           plusw2	equ	0xFDB
 19200                           fsr2h	equ	0xFDA
 19201                           fsr2l	equ	0xFD9
 19202                           status	equ	0xFD8
 19203                           
 19204 ;; *************** function __steps_from_degrees *****************
 19205 ;; Defined at:
 19206 ;;		line 220 in file "config_file.c"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;  degrees         4   49[BANK0 ] long 
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;  temp            4   53[BANK0 ] long 
 19211 ;; Return value:  Size  Location     Type
 19212 ;;                  4   49[BANK0 ] long 
 19213 ;; Registers used:
 19214 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19215 ;; Tracked objects:
 19216 ;;		On entry : 0/0
 19217 ;;		On exit  : 0/0
 19218 ;;		Unchanged: 0/0
 19219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19221 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19223 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19224 ;;Total ram usage:        8 bytes
 19225 ;; Hardware stack levels used:    1
 19226 ;; Hardware stack levels required when called:   11
 19227 ;; This function calls:
 19228 ;;		___fldiv
 19229 ;;		___flge
 19230 ;;		___flmul
 19231 ;;		___fltol
 19232 ;;		___xxtofl
 19233 ;; This function is called by:
 19234 ;;		__parse_item
 19235 ;; This function uses a non-reentrant model
 19236 ;;
 19237                           
 19238                           	psect	text76
 19239  00F02C                     __ptext76:
 19240                           	opt stack 0
 19241  00F02C                     __steps_from_degrees:
 19242                           	opt stack 16
 19243                           
 19244                           ;config_file.c: 222: double temp;;config_file.c: 225: if(degrees==0)
 19245                           
 19246                           ; BSR set to: 0
 19247                           ;incstack = 0
 19248  00F02C  0100               	movlb	0	; () banked
 19249  00F02E  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19250  00F030  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19251  00F032  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19252  00F034  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19253  00F036  A4D8               	btfss	status,2,c
 19254  00F038  D009               	goto	l3075
 19255                           
 19256                           ; BSR set to: 0
 19257                           ;config_file.c: 226: {;config_file.c: 227: return 0;
 19258  00F03A  0E00               	movlw	0
 19259  00F03C  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19260  00F03E  0E00               	movlw	0
 19261  00F040  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19262  00F042  0E00               	movlw	0
 19263  00F044  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19264  00F046  0E00               	movlw	0
 19265  00F048  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19266                           
 19267                           ; BSR set to: 0
 19268  00F04A  0012               	return	
 19269  00F04C                     l3075:
 19270                           
 19271                           ; BSR set to: 0
 19272                           ;config_file.c: 228: };config_file.c: 231: temp = (float) degrees;
 19273                           
 19274                           ; BSR set to: 0
 19275  00F04C  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19276  00F050  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19277  00F054  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19278  00F058  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19279  00F05C  0E01               	movlw	1
 19280  00F05E  EC42  F082         	call	___xxtofl
 19281  00F062  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19282  00F066  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19283  00F06A  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19284  00F06E  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19285                           
 19286                           ;config_file.c: 234: temp *= (float) config.full_circle_in_steps;
 19287  00F072  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19288  00F076  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19289  00F07A  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19290  00F07E  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19291  00F082  C196  F06A         	movff	_config,___xxtofl@val
 19292  00F086  C197  F06B         	movff	_config+1,___xxtofl@val+1
 19293  00F08A  C198  F06C         	movff	_config+2,___xxtofl@val+2
 19294  00F08E  C199  F06D         	movff	_config+3,___xxtofl@val+3
 19295  00F092  0E00               	movlw	0
 19296  00F094  EC42  F082         	call	___xxtofl
 19297  00F098  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19298  00F09C  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19299  00F0A0  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19300  00F0A4  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19301  00F0A8  ECDB  F064         	call	___flmul	;wreg free
 19302  00F0AC  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19303  00F0B0  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19304  00F0B4  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19305  00F0B8  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19306                           
 19307                           ;config_file.c: 235: temp /= 36000.0;
 19308  00F0BC  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19309  00F0C0  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19310  00F0C4  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19311  00F0C8  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19312  00F0CC  0E00               	movlw	0
 19313  00F0CE  0100               	movlb	0	; () banked
 19314  00F0D0  6F7C               	movwf	___fldiv@a& (0+255),b
 19315  00F0D2  0EA0               	movlw	160
 19316  00F0D4  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19317  00F0D6  0E0C               	movlw	12
 19318  00F0D8  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19319  00F0DA  0E47               	movlw	71
 19320  00F0DC  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19321  00F0DE  EC03  F06B         	call	___fldiv	;wreg free
 19322  00F0E2  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19323  00F0E6  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19324  00F0EA  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19325  00F0EE  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19326                           
 19327                           ;config_file.c: 238: if(((int32_t)temp)<-2147483648.0)
 19328  00F0F2  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19329  00F0F6  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19330  00F0FA  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19331  00F0FE  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19332  00F102  EC9F  F093         	call	___fltol	;wreg free
 19333  00F106  C060  F06A         	movff	?___fltol,___xxtofl@val
 19334  00F10A  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19335  00F10E  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19336  00F112  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19337  00F116  0E01               	movlw	1
 19338  00F118  EC42  F082         	call	___xxtofl
 19339  00F11C  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19340  00F120  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19341  00F124  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19342  00F128  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19343  00F12C  0E00               	movlw	0
 19344  00F12E  0100               	movlb	0	; () banked
 19345  00F130  6F7C               	movwf	___flge@ff2& (0+255),b
 19346  00F132  0E00               	movlw	0
 19347  00F134  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19348  00F136  0E00               	movlw	0
 19349  00F138  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19350  00F13A  0ECF               	movlw	207
 19351  00F13C  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19352  00F13E  ECED  F085         	call	___flge	;wreg free
 19353  00F142  0100               	movlb	0	; () banked
 19354  00F144  B0D8               	btfsc	status,0,c
 19355  00F146  D009               	goto	l3077
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;config_file.c: 239: {;config_file.c: 240: return -2147483648;
 19359  00F148  0E00               	movlw	0
 19360  00F14A  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19361  00F14C  0E00               	movlw	0
 19362  00F14E  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19363  00F150  0E00               	movlw	0
 19364  00F152  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19365  00F154  0E80               	movlw	128
 19366  00F156  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19367                           
 19368                           ; BSR set to: 0
 19369  00F158  0012               	return	
 19370  00F15A                     l3077:
 19371                           
 19372                           ; BSR set to: 0
 19373                           ;config_file.c: 241: };config_file.c: 242: if(((int32_t)temp)>2147483647.0)
 19374                           
 19375                           ; BSR set to: 0
 19376  00F15A  0E00               	movlw	0
 19377  00F15C  6F78               	movwf	___flge@ff1& (0+255),b
 19378  00F15E  0E00               	movlw	0
 19379  00F160  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19380  00F162  0E00               	movlw	0
 19381  00F164  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19382  00F166  0E4F               	movlw	79
 19383  00F168  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19384  00F16A  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19385  00F16E  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19386  00F172  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19387  00F176  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19388  00F17A  EC9F  F093         	call	___fltol	;wreg free
 19389  00F17E  C060  F06A         	movff	?___fltol,___xxtofl@val
 19390  00F182  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19391  00F186  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19392  00F18A  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19393  00F18E  0E01               	movlw	1
 19394  00F190  EC42  F082         	call	___xxtofl
 19395  00F194  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19396  00F198  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19397  00F19C  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19398  00F1A0  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19399  00F1A4  ECED  F085         	call	___flge	;wreg free
 19400  00F1A8  0100               	movlb	0	; () banked
 19401  00F1AA  B0D8               	btfsc	status,0,c
 19402  00F1AC  D009               	goto	l3078
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;config_file.c: 243: {;config_file.c: 244: return 2147483647;
 19406  00F1AE  0EFF               	movlw	255
 19407  00F1B0  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19408  00F1B2  0EFF               	movlw	255
 19409  00F1B4  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19410  00F1B6  0EFF               	movlw	255
 19411  00F1B8  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19412  00F1BA  0E7F               	movlw	127
 19413  00F1BC  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19414                           
 19415                           ; BSR set to: 0
 19416  00F1BE  0012               	return	
 19417  00F1C0                     l3078:
 19418                           
 19419                           ; BSR set to: 0
 19420                           ;config_file.c: 245: };config_file.c: 248: return (int32_t) temp;
 19421                           
 19422                           ; BSR set to: 0
 19423  00F1C0  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19424  00F1C4  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19425  00F1C8  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19426  00F1CC  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19427  00F1D0  EC9F  F093         	call	___fltol	;wreg free
 19428  00F1D4  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19429  00F1D8  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19430  00F1DC  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19431  00F1E0  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19432  00F1E4  0012               	return	
 19433  00F1E6                     __end_of__steps_from_degrees:
 19434                           	opt stack 0
 19435                           tblptru	equ	0xFF8
 19436                           tblptrh	equ	0xFF7
 19437                           tblptrl	equ	0xFF6
 19438                           tablat	equ	0xFF5
 19439                           prodh	equ	0xFF4
 19440                           prodl	equ	0xFF3
 19441                           postinc0	equ	0xFEE
 19442                           wreg	equ	0xFE8
 19443                           postinc1	equ	0xFE6
 19444                           postdec1	equ	0xFE5
 19445                           plusw1	equ	0xFE3
 19446                           fsr1h	equ	0xFE2
 19447                           fsr1l	equ	0xFE1
 19448                           indf2	equ	0xFDF
 19449                           postinc2	equ	0xFDE
 19450                           postdec2	equ	0xFDD
 19451                           plusw2	equ	0xFDB
 19452                           fsr2h	equ	0xFDA
 19453                           fsr2l	equ	0xFD9
 19454                           status	equ	0xFD8
 19455                           
 19456 ;; *************** function ___flge *****************
 19457 ;; Defined at:
 19458 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 19459 ;; Parameters:    Size  Location     Type
 19460 ;;  ff1             4   24[BANK0 ] long 
 19461 ;;  ff2             4   28[BANK0 ] long 
 19462 ;; Auto vars:     Size  Location     Type
 19463 ;;		None
 19464 ;; Return value:  Size  Location     Type
 19465 ;;		None               void
 19466 ;; Registers used:
 19467 ;;		wreg, status,2, status,0
 19468 ;; Tracked objects:
 19469 ;;		On entry : 0/0
 19470 ;;		On exit  : 0/0
 19471 ;;		Unchanged: 0/0
 19472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19473 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19475 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19476 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19477 ;;Total ram usage:       12 bytes
 19478 ;; Hardware stack levels used:    1
 19479 ;; Hardware stack levels required when called:   10
 19480 ;; This function calls:
 19481 ;;		Nothing
 19482 ;; This function is called by:
 19483 ;;		__steps_from_degrees
 19484 ;;		_motor_goto_degrees_float
 19485 ;; This function uses a non-reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text77
 19489  010BDA                     __ptext77:
 19490                           	opt stack 0
 19491  010BDA                     ___flge:
 19492                           	opt stack 16
 19493                           
 19494                           ;incstack = 0
 19495  010BDA  0E00               	movlw	0
 19496  010BDC  0100               	movlb	0	; () banked
 19497  010BDE  1578               	andwf	___flge@ff1& (0+255),w,b
 19498  010BE0  6F80               	movwf	??___flge& (0+255),b
 19499  010BE2  0E00               	movlw	0
 19500  010BE4  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 19501  010BE6  6F81               	movwf	(??___flge+1)& (0+255),b
 19502  010BE8  0E80               	movlw	128
 19503  010BEA  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 19504  010BEC  6F82               	movwf	(??___flge+2)& (0+255),b
 19505  010BEE  0E7F               	movlw	127
 19506  010BF0  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 19507  010BF2  6F83               	movwf	(??___flge+3)& (0+255),b
 19508  010BF4  5180               	movf	??___flge& (0+255),w,b
 19509  010BF6  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19510  010BF8  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19511  010BFA  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19512  010BFC  A4D8               	btfss	status,2,c
 19513  010BFE  D008               	goto	l3356
 19514                           
 19515                           ; BSR set to: 0
 19516  010C00  0E00               	movlw	0
 19517  010C02  6F78               	movwf	___flge@ff1& (0+255),b
 19518  010C04  0E00               	movlw	0
 19519  010C06  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19520  010C08  0E00               	movlw	0
 19521  010C0A  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19522  010C0C  0E00               	movlw	0
 19523  010C0E  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19524  010C10                     l3356:
 19525                           
 19526                           ; BSR set to: 0
 19527                           
 19528                           ; BSR set to: 0
 19529  010C10  0E00               	movlw	0
 19530  010C12  157C               	andwf	___flge@ff2& (0+255),w,b
 19531  010C14  6F80               	movwf	??___flge& (0+255),b
 19532  010C16  0E00               	movlw	0
 19533  010C18  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 19534  010C1A  6F81               	movwf	(??___flge+1)& (0+255),b
 19535  010C1C  0E80               	movlw	128
 19536  010C1E  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 19537  010C20  6F82               	movwf	(??___flge+2)& (0+255),b
 19538  010C22  0E7F               	movlw	127
 19539  010C24  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 19540  010C26  6F83               	movwf	(??___flge+3)& (0+255),b
 19541  010C28  5180               	movf	??___flge& (0+255),w,b
 19542  010C2A  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19543  010C2C  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19544  010C2E  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19545  010C30  A4D8               	btfss	status,2,c
 19546  010C32  D008               	goto	l3357
 19547                           
 19548                           ; BSR set to: 0
 19549  010C34  0E00               	movlw	0
 19550  010C36  6F7C               	movwf	___flge@ff2& (0+255),b
 19551  010C38  0E00               	movlw	0
 19552  010C3A  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19553  010C3C  0E00               	movlw	0
 19554  010C3E  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19555  010C40  0E00               	movlw	0
 19556  010C42  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19557  010C44                     l3357:
 19558                           
 19559                           ; BSR set to: 0
 19560                           
 19561                           ; BSR set to: 0
 19562  010C44  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 19563  010C46  D01D               	goto	l3358
 19564                           
 19565                           ; BSR set to: 0
 19566  010C48  C078  F080         	movff	___flge@ff1,??___flge
 19567  010C4C  C079  F081         	movff	___flge@ff1+1,??___flge+1
 19568  010C50  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 19569  010C54  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 19570  010C58  1F80               	comf	??___flge& (0+255),f,b
 19571  010C5A  1F81               	comf	(??___flge+1)& (0+255),f,b
 19572  010C5C  1F82               	comf	(??___flge+2)& (0+255),f,b
 19573  010C5E  1F83               	comf	(??___flge+3)& (0+255),f,b
 19574  010C60  2B80               	incf	??___flge& (0+255),f,b
 19575  010C62  0E00               	movlw	0
 19576  010C64  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19577  010C66  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19578  010C68  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19579  010C6A  0E00               	movlw	0
 19580  010C6C  2580               	addwf	??___flge& (0+255),w,b
 19581  010C6E  6F78               	movwf	___flge@ff1& (0+255),b
 19582  010C70  0E00               	movlw	0
 19583  010C72  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19584  010C74  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19585  010C76  0E00               	movlw	0
 19586  010C78  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19587  010C7A  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19588  010C7C  0E80               	movlw	128
 19589  010C7E  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19590  010C80  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19591  010C82                     l3358:
 19592                           
 19593                           ; BSR set to: 0
 19594                           
 19595                           ; BSR set to: 0
 19596  010C82  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 19597  010C84  D01D               	goto	l3359
 19598                           
 19599                           ; BSR set to: 0
 19600  010C86  C07C  F080         	movff	___flge@ff2,??___flge
 19601  010C8A  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 19602  010C8E  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 19603  010C92  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 19604  010C96  1F80               	comf	??___flge& (0+255),f,b
 19605  010C98  1F81               	comf	(??___flge+1)& (0+255),f,b
 19606  010C9A  1F82               	comf	(??___flge+2)& (0+255),f,b
 19607  010C9C  1F83               	comf	(??___flge+3)& (0+255),f,b
 19608  010C9E  2B80               	incf	??___flge& (0+255),f,b
 19609  010CA0  0E00               	movlw	0
 19610  010CA2  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19611  010CA4  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19612  010CA6  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19613  010CA8  0E00               	movlw	0
 19614  010CAA  2580               	addwf	??___flge& (0+255),w,b
 19615  010CAC  6F7C               	movwf	___flge@ff2& (0+255),b
 19616  010CAE  0E00               	movlw	0
 19617  010CB0  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19618  010CB2  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19619  010CB4  0E00               	movlw	0
 19620  010CB6  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19621  010CB8  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19622  010CBA  0E80               	movlw	128
 19623  010CBC  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19624  010CBE  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19625  010CC0                     l3359:
 19626                           
 19627                           ; BSR set to: 0
 19628  010CC0  0E00               	movlw	0
 19629  010CC2  1B78               	xorwf	___flge@ff1& (0+255),f,b
 19630  010CC4  0E00               	movlw	0
 19631  010CC6  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 19632  010CC8  0E00               	movlw	0
 19633  010CCA  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 19634  010CCC  0E80               	movlw	128
 19635  010CCE  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 19636  010CD0  0E00               	movlw	0
 19637  010CD2  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 19638  010CD4  0E00               	movlw	0
 19639  010CD6  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 19640  010CD8  0E00               	movlw	0
 19641  010CDA  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 19642  010CDC  0E80               	movlw	128
 19643  010CDE  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 19644  010CE0  517C               	movf	___flge@ff2& (0+255),w,b
 19645  010CE2  5D78               	subwf	___flge@ff1& (0+255),w,b
 19646  010CE4  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 19647  010CE6  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 19648  010CE8  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 19649  010CEA  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 19650  010CEC  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 19651  010CEE  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 19652  010CF0  B0D8               	btfsc	status,0,c
 19653  010CF2  D002               	goto	l12142
 19654                           
 19655                           ; BSR set to: 0
 19656  010CF4  90D8               	bcf	status,0,c
 19657  010CF6  0012               	return	
 19658  010CF8                     l12142:
 19659                           
 19660                           ; BSR set to: 0
 19661                           
 19662                           ; BSR set to: 0
 19663  010CF8  80D8               	bsf	status,0,c
 19664                           
 19665                           ; BSR set to: 0
 19666  010CFA  0012               	return	
 19667  010CFC                     __end_of___flge:
 19668                           	opt stack 0
 19669                           tblptru	equ	0xFF8
 19670                           tblptrh	equ	0xFF7
 19671                           tblptrl	equ	0xFF6
 19672                           tablat	equ	0xFF5
 19673                           prodh	equ	0xFF4
 19674                           prodl	equ	0xFF3
 19675                           postinc0	equ	0xFEE
 19676                           wreg	equ	0xFE8
 19677                           postinc1	equ	0xFE6
 19678                           postdec1	equ	0xFE5
 19679                           plusw1	equ	0xFE3
 19680                           fsr1h	equ	0xFE2
 19681                           fsr1l	equ	0xFE1
 19682                           indf2	equ	0xFDF
 19683                           postinc2	equ	0xFDE
 19684                           postdec2	equ	0xFDD
 19685                           plusw2	equ	0xFDB
 19686                           fsr2h	equ	0xFDA
 19687                           fsr2l	equ	0xFD9
 19688                           status	equ	0xFD8
 19689                           
 19690 ;; *************** function __get_item *****************
 19691 ;; Defined at:
 19692 ;;		line 71 in file "config_file.c"
 19693 ;; Parameters:    Size  Location     Type
 19694 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 19695 ;;		 -> configFile_read@item_string(31), 
 19696 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 19697 ;;		 -> configFile_read@value_string(12), 
 19698 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 19699 ;;		 -> ConfigFile_buffer(512), 
 19700 ;; Auto vars:     Size  Location     Type
 19701 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 19702 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 19703 ;; Return value:  Size  Location     Type
 19704 ;;                  1    wreg      unsigned char 
 19705 ;; Registers used:
 19706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19707 ;; Tracked objects:
 19708 ;;		On entry : 0/0
 19709 ;;		On exit  : 0/0
 19710 ;;		Unchanged: 0/0
 19711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19712 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19713 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19714 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19715 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19716 ;;Total ram usage:       11 bytes
 19717 ;; Hardware stack levels used:    1
 19718 ;; Hardware stack levels required when called:   10
 19719 ;; This function calls:
 19720 ;;		Nothing
 19721 ;; This function is called by:
 19722 ;;		_configFile_read
 19723 ;; This function uses a non-reentrant model
 19724 ;;
 19725                           
 19726                           	psect	text78
 19727  00F866                     __ptext78:
 19728                           	opt stack 0
 19729  00F866                     __get_item:
 19730                           	opt stack 18
 19731                           
 19732                           ;config_file.c: 73: uint8_t item_ctr;;config_file.c: 74: uint8_t value_ctr;;config_file.
      +                          c: 77: for(item_ctr=0;item_ctr<30;++item_ctr)
 19733                           
 19734                           ; BSR set to: 0
 19735                           ;incstack = 0
 19736  00F866  0E00               	movlw	0
 19737  00F868  0100               	movlb	0	; () banked
 19738  00F86A  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 19739  00F86C                     l16808:
 19740                           
 19741                           ; BSR set to: 0
 19742  00F86C  0E1D               	movlw	29
 19743  00F86E  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 19744  00F870  D001               	goto	l3041
 19745  00F872  D020               	goto	u15890
 19746  00F874                     l3041:
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;config_file.c: 78: {;config_file.c: 80: if(buffer[item_ctr] == '=')
 19750                           
 19751                           ; BSR set to: 0
 19752  00F874  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19753  00F876  0D01               	mullw	1
 19754  00F878  50F3               	movf	prodl,w,c
 19755  00F87A  2564               	addwf	__get_item@buffer& (0+255),w,b
 19756  00F87C  6ED9               	movwf	fsr2l,c
 19757  00F87E  50F4               	movf	prodh,w,c
 19758  00F880  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19759  00F882  6EDA               	movwf	fsr2h,c
 19760  00F884  0E3D               	movlw	61
 19761  00F886  18DE               	xorwf	postinc2,w,c
 19762  00F888  B4D8               	btfsc	status,2,c
 19763  00F88A  D014               	goto	u15890
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;config_file.c: 83: };config_file.c: 84: item_string[item_ctr] = buffer[item_ctr];
 19767                           
 19768                           ; BSR set to: 0
 19769                           
 19770                           ; BSR set to: 0
 19771                           ;config_file.c: 81: {;config_file.c: 82: break;
 19772  00F88C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19773  00F88E  0D01               	mullw	1
 19774  00F890  50F3               	movf	prodl,w,c
 19775  00F892  2564               	addwf	__get_item@buffer& (0+255),w,b
 19776  00F894  6ED9               	movwf	fsr2l,c
 19777  00F896  50F4               	movf	prodh,w,c
 19778  00F898  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19779  00F89A  6EDA               	movwf	fsr2h,c
 19780  00F89C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19781  00F89E  0D01               	mullw	1
 19782  00F8A0  50F3               	movf	prodl,w,c
 19783  00F8A2  2560               	addwf	__get_item@item_string& (0+255),w,b
 19784  00F8A4  6EE1               	movwf	fsr1l,c
 19785  00F8A6  50F4               	movf	prodh,w,c
 19786  00F8A8  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19787  00F8AA  6EE2               	movwf	fsr1h,c
 19788  00F8AC  CFDF FFE7          	movff	indf2,indf1
 19789                           
 19790                           ; BSR set to: 0
 19791  00F8B0  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19792  00F8B2  D7DC               	goto	l16808
 19793  00F8B4                     u15890:
 19794                           
 19795                           ; BSR set to: 0
 19796                           ;config_file.c: 85: };config_file.c: 86: item_string[item_ctr++] = 0;
 19797                           
 19798                           ; BSR set to: 0
 19799  00F8B4  516A               	movf	__get_item@item_ctr& (0+255),w,b
 19800  00F8B6  0D01               	mullw	1
 19801  00F8B8  50F3               	movf	prodl,w,c
 19802  00F8BA  2560               	addwf	__get_item@item_string& (0+255),w,b
 19803  00F8BC  6ED9               	movwf	fsr2l,c
 19804  00F8BE  50F4               	movf	prodh,w,c
 19805  00F8C0  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 19806  00F8C2  6EDA               	movwf	fsr2h,c
 19807  00F8C4  0E00               	movlw	0
 19808  00F8C6  6EDF               	movwf	indf2,c
 19809                           
 19810                           ; BSR set to: 0
 19811  00F8C8  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;config_file.c: 89: for(value_ctr=0;value_ctr<11;++value_ctr)
 19815  00F8CA  0E00               	movlw	0
 19816  00F8CC  6F69               	movwf	__get_item@value_ctr& (0+255),b
 19817  00F8CE                     l16828:
 19818                           
 19819                           ; BSR set to: 0
 19820  00F8CE  0E0A               	movlw	10
 19821  00F8D0  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 19822  00F8D2  D001               	goto	l3044
 19823  00F8D4  D03B               	goto	u15930
 19824  00F8D6                     l3044:
 19825                           
 19826                           ; BSR set to: 0
 19827                           ;config_file.c: 90: {;config_file.c: 92: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 19828                           
 19829                           ; BSR set to: 0
 19830  00F8D6  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19831  00F8D8  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19832  00F8DC  6B67               	clrf	(??__get_item+1)& (0+255),b
 19833  00F8DE  2766               	addwf	??__get_item& (0+255),f,b
 19834  00F8E0  0E00               	movlw	0
 19835  00F8E2  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19836  00F8E4  5166               	movf	??__get_item& (0+255),w,b
 19837  00F8E6  2564               	addwf	__get_item@buffer& (0+255),w,b
 19838  00F8E8  6ED9               	movwf	fsr2l,c
 19839  00F8EA  5167               	movf	(??__get_item+1)& (0+255),w,b
 19840  00F8EC  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19841  00F8EE  6EDA               	movwf	fsr2h,c
 19842  00F8F0  0E0D               	movlw	13
 19843  00F8F2  18DE               	xorwf	postinc2,w,c
 19844  00F8F4  B4D8               	btfsc	status,2,c
 19845  00F8F6  D02A               	goto	u15930
 19846                           
 19847                           ; BSR set to: 0
 19848  00F8F8  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19849  00F8FA  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19850  00F8FE  6B67               	clrf	(??__get_item+1)& (0+255),b
 19851  00F900  2766               	addwf	??__get_item& (0+255),f,b
 19852  00F902  0E00               	movlw	0
 19853  00F904  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19854  00F906  5166               	movf	??__get_item& (0+255),w,b
 19855  00F908  2564               	addwf	__get_item@buffer& (0+255),w,b
 19856  00F90A  6ED9               	movwf	fsr2l,c
 19857  00F90C  5167               	movf	(??__get_item+1)& (0+255),w,b
 19858  00F90E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19859  00F910  6EDA               	movwf	fsr2h,c
 19860  00F912  0E0A               	movlw	10
 19861  00F914  18DE               	xorwf	postinc2,w,c
 19862  00F916  B4D8               	btfsc	status,2,c
 19863  00F918  D019               	goto	u15930
 19864                           
 19865                           ; BSR set to: 0
 19866                           ;config_file.c: 95: };config_file.c: 96: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 19867                           
 19868                           ; BSR set to: 0
 19869                           
 19870                           ; BSR set to: 0
 19871                           ;config_file.c: 93: {;config_file.c: 94: break;
 19872  00F91A  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19873  00F91C  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19874  00F920  6B67               	clrf	(??__get_item+1)& (0+255),b
 19875  00F922  2766               	addwf	??__get_item& (0+255),f,b
 19876  00F924  0E00               	movlw	0
 19877  00F926  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19878  00F928  5166               	movf	??__get_item& (0+255),w,b
 19879  00F92A  2564               	addwf	__get_item@buffer& (0+255),w,b
 19880  00F92C  6ED9               	movwf	fsr2l,c
 19881  00F92E  5167               	movf	(??__get_item+1)& (0+255),w,b
 19882  00F930  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19883  00F932  6EDA               	movwf	fsr2h,c
 19884  00F934  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19885  00F936  0D01               	mullw	1
 19886  00F938  50F3               	movf	prodl,w,c
 19887  00F93A  2562               	addwf	__get_item@value_string& (0+255),w,b
 19888  00F93C  6EE1               	movwf	fsr1l,c
 19889  00F93E  50F4               	movf	prodh,w,c
 19890  00F940  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 19891  00F942  6EE2               	movwf	fsr1h,c
 19892  00F944  CFDF FFE7          	movff	indf2,indf1
 19893                           
 19894                           ; BSR set to: 0
 19895  00F948  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 19896  00F94A  D7C1               	goto	l16828
 19897  00F94C                     u15930:
 19898                           
 19899                           ; BSR set to: 0
 19900                           ;config_file.c: 97: };config_file.c: 98: value_string[value_ctr++] = 0;
 19901                           
 19902                           ; BSR set to: 0
 19903  00F94C  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19904  00F94E  0D01               	mullw	1
 19905  00F950  50F3               	movf	prodl,w,c
 19906  00F952  2562               	addwf	__get_item@value_string& (0+255),w,b
 19907  00F954  6ED9               	movwf	fsr2l,c
 19908  00F956  50F4               	movf	prodh,w,c
 19909  00F958  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 19910  00F95A  6EDA               	movwf	fsr2h,c
 19911  00F95C  0E00               	movlw	0
 19912  00F95E  6EDF               	movwf	indf2,c
 19913  00F960                     
 19914                           ; BSR set to: 0
 19915                           ;config_file.c: 102: {;config_file.c: 103: ++value_ctr;
 19916                           
 19917                           ; BSR set to: 0
 19918                           
 19919                           ;config_file.c: 101: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 19920                           
 19921                           ; BSR set to: 0
 19922  00F960  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 19923                           
 19924                           ; BSR set to: 0
 19925                           
 19926                           ; BSR set to: 0
 19927  00F962  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19928  00F964  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19929  00F968  6B67               	clrf	(??__get_item+1)& (0+255),b
 19930  00F96A  2766               	addwf	??__get_item& (0+255),f,b
 19931  00F96C  0E00               	movlw	0
 19932  00F96E  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19933  00F970  5166               	movf	??__get_item& (0+255),w,b
 19934  00F972  2564               	addwf	__get_item@buffer& (0+255),w,b
 19935  00F974  6ED9               	movwf	fsr2l,c
 19936  00F976  5167               	movf	(??__get_item+1)& (0+255),w,b
 19937  00F978  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19938  00F97A  6EDA               	movwf	fsr2h,c
 19939  00F97C  0E0D               	movlw	13
 19940  00F97E  18DE               	xorwf	postinc2,w,c
 19941  00F980  B4D8               	btfsc	status,2,c
 19942  00F982  D7EE               	goto	l16844
 19943                           
 19944                           ; BSR set to: 0
 19945  00F984  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19946  00F986  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19947  00F98A  6B67               	clrf	(??__get_item+1)& (0+255),b
 19948  00F98C  2766               	addwf	??__get_item& (0+255),f,b
 19949  00F98E  0E00               	movlw	0
 19950  00F990  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19951  00F992  5166               	movf	??__get_item& (0+255),w,b
 19952  00F994  2564               	addwf	__get_item@buffer& (0+255),w,b
 19953  00F996  6ED9               	movwf	fsr2l,c
 19954  00F998  5167               	movf	(??__get_item+1)& (0+255),w,b
 19955  00F99A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19956  00F99C  6EDA               	movwf	fsr2h,c
 19957  00F99E  0E0A               	movlw	10
 19958  00F9A0  18DE               	xorwf	postinc2,w,c
 19959  00F9A2  B4D8               	btfsc	status,2,c
 19960  00F9A4  D7DD               	goto	l16844
 19961                           
 19962                           ; BSR set to: 0
 19963  00F9A6  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19964  00F9A8  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19965  00F9AC  6B67               	clrf	(??__get_item+1)& (0+255),b
 19966  00F9AE  2766               	addwf	??__get_item& (0+255),f,b
 19967  00F9B0  0E00               	movlw	0
 19968  00F9B2  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19969  00F9B4  5166               	movf	??__get_item& (0+255),w,b
 19970  00F9B6  2564               	addwf	__get_item@buffer& (0+255),w,b
 19971  00F9B8  6ED9               	movwf	fsr2l,c
 19972  00F9BA  5167               	movf	(??__get_item+1)& (0+255),w,b
 19973  00F9BC  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19974  00F9BE  6EDA               	movwf	fsr2h,c
 19975  00F9C0  0E09               	movlw	9
 19976  00F9C2  18DE               	xorwf	postinc2,w,c
 19977  00F9C4  B4D8               	btfsc	status,2,c
 19978  00F9C6  D7CC               	goto	l16844
 19979                           
 19980                           ; BSR set to: 0
 19981  00F9C8  5169               	movf	__get_item@value_ctr& (0+255),w,b
 19982  00F9CA  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 19983  00F9CE  6B67               	clrf	(??__get_item+1)& (0+255),b
 19984  00F9D0  2766               	addwf	??__get_item& (0+255),f,b
 19985  00F9D2  0E00               	movlw	0
 19986  00F9D4  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 19987  00F9D6  5166               	movf	??__get_item& (0+255),w,b
 19988  00F9D8  2564               	addwf	__get_item@buffer& (0+255),w,b
 19989  00F9DA  6ED9               	movwf	fsr2l,c
 19990  00F9DC  5167               	movf	(??__get_item+1)& (0+255),w,b
 19991  00F9DE  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 19992  00F9E0  6EDA               	movwf	fsr2h,c
 19993  00F9E2  0E20               	movlw	32
 19994  00F9E4  18DE               	xorwf	postinc2,w,c
 19995  00F9E6  B4D8               	btfsc	status,2,c
 19996  00F9E8  D7BB               	goto	l16844
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;config_file.c: 104: };config_file.c: 107: return (item_ctr+value_ctr);
 20000                           
 20001                           ; BSR set to: 0
 20002  00F9EA  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20003  00F9EC  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20004  00F9EE  0012               	return	
 20005  00F9F0                     __end_of__get_item:
 20006                           	opt stack 0
 20007                           tblptru	equ	0xFF8
 20008                           tblptrh	equ	0xFF7
 20009                           tblptrl	equ	0xFF6
 20010                           tablat	equ	0xFF5
 20011                           prodh	equ	0xFF4
 20012                           prodl	equ	0xFF3
 20013                           postinc0	equ	0xFEE
 20014                           wreg	equ	0xFE8
 20015                           indf1	equ	0xFE7
 20016                           postinc1	equ	0xFE6
 20017                           postdec1	equ	0xFE5
 20018                           plusw1	equ	0xFE3
 20019                           fsr1h	equ	0xFE2
 20020                           fsr1l	equ	0xFE1
 20021                           indf2	equ	0xFDF
 20022                           postinc2	equ	0xFDE
 20023                           postdec2	equ	0xFDD
 20024                           plusw2	equ	0xFDB
 20025                           fsr2h	equ	0xFDA
 20026                           fsr2l	equ	0xFD9
 20027                           status	equ	0xFD8
 20028                           
 20029 ;; *************** function _adc_init *****************
 20030 ;; Defined at:
 20031 ;;		line 19 in file "adc.c"
 20032 ;; Parameters:    Size  Location     Type
 20033 ;;		None
 20034 ;; Auto vars:     Size  Location     Type
 20035 ;;		None
 20036 ;; Return value:  Size  Location     Type
 20037 ;;                  1    wreg      void 
 20038 ;; Registers used:
 20039 ;;		wreg, status,2
 20040 ;; Tracked objects:
 20041 ;;		On entry : 0/0
 20042 ;;		On exit  : 0/0
 20043 ;;		Unchanged: 0/0
 20044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20049 ;;Total ram usage:        0 bytes
 20050 ;; Hardware stack levels used:    1
 20051 ;; Hardware stack levels required when called:   10
 20052 ;; This function calls:
 20053 ;;		Nothing
 20054 ;; This function is called by:
 20055 ;;		_system_init
 20056 ;; This function uses a non-reentrant model
 20057 ;;
 20058                           
 20059                           	psect	text79
 20060  014EC8                     __ptext79:
 20061                           	opt stack 0
 20062  014EC8                     _adc_init:
 20063                           	opt stack 19
 20064                           
 20065                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20066                           
 20067                           ; BSR set to: 0
 20068                           ;incstack = 0
 20069  014EC8  0E00               	movlw	0
 20070  014ECA  0101               	movlb	1	; () banked
 20071  014ECC  6F8E               	movwf	(_os+41)& (0+255),b	;volatile
 20072  014ECE  0E00               	movlw	0
 20073  014ED0  6F8D               	movwf	(_os+40)& (0+255),b	;volatile
 20074                           
 20075                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20076  014ED2  0E00               	movlw	0
 20077  014ED4  6F90               	movwf	(_os+43)& (0+255),b	;volatile
 20078  014ED6  0E00               	movlw	0
 20079  014ED8  6F8F               	movwf	(_os+42)& (0+255),b	;volatile
 20080                           
 20081                           ;adc.c: 24: os.fan_on = 0;
 20082  014EDA  0E00               	movlw	0
 20083  014EDC  6F94               	movwf	(_os+47)& (0+255),b	;volatile
 20084                           
 20085                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20086  014EDE  0E00               	movlw	0
 20087  014EE0  0102               	movlb	2	; () banked
 20088  014EE2  6F31               	movwf	_params& (0+255),b
 20089                           
 20090                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20091  014EE4  0E00               	movlw	0
 20092  014EE6  6F33               	movwf	(_params+2)& (0+255),b
 20093  014EE8  0E00               	movlw	0
 20094  014EEA  6F32               	movwf	(_params+1)& (0+255),b
 20095                           
 20096                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20097  014EEC  0E00               	movlw	0
 20098  014EEE  6F36               	movwf	(_params+5)& (0+255),b
 20099                           
 20100                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20101  014EF0  0E00               	movlw	0
 20102  014EF2  6F35               	movwf	(_params+4)& (0+255),b
 20103  014EF4  0E00               	movlw	0
 20104  014EF6  6F34               	movwf	(_params+3)& (0+255),b
 20105                           
 20106                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20107  014EF8  0E00               	movlw	0
 20108  014EFA  6F37               	movwf	(_params+6)& (0+255),b
 20109                           
 20110                           ; BSR set to: 2
 20111                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20112  014EFC  9EC2               	bcf	4034,7,c	;volatile
 20113                           
 20114                           ; BSR set to: 2
 20115                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20116  014EFE  9CC2               	bcf	4034,6,c	;volatile
 20117                           
 20118                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20119  014F00  50C2               	movf	4034,w,c	;volatile
 20120  014F02  0BC3               	andlw	-61
 20121  014F04  0924               	iorlw	36
 20122  014F06  6EC2               	movwf	4034,c	;volatile
 20123                           
 20124                           ; BSR set to: 2
 20125                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20126  014F08  8EC1               	bsf	4033,7,c	;volatile
 20127                           
 20128                           ; BSR set to: 2
 20129                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20130  014F0A  9CC1               	bcf	4033,6,c	;volatile
 20131                           
 20132                           ; BSR set to: 2
 20133                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20134  014F0C  86C1               	bsf	4033,3,c	;volatile
 20135  014F0E  88C1               	bsf	4033,4,c	;volatile
 20136  014F10  8AC1               	bsf	4033,5,c	;volatile
 20137                           
 20138                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20139  014F12  50C1               	movf	4033,w,c	;volatile
 20140  014F14  0BF8               	andlw	-8
 20141  014F16  0906               	iorlw	6
 20142  014F18  6EC1               	movwf	4033,c	;volatile
 20143                           
 20144                           ; BSR set to: 2
 20145                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20146  014F1A  80C2               	bsf	4034,0,c	;volatile
 20147                           
 20148                           ; BSR set to: 2
 20149                           ;adc.c: 41: ADCON0bits.GO = 1;
 20150  014F1C  82C2               	bsf	4034,1,c	;volatile
 20151                           
 20152                           ; BSR set to: 2
 20153  014F1E  0012               	return		;funcret
 20154  014F20                     __end_of_adc_init:
 20155                           	opt stack 0
 20156                           tblptru	equ	0xFF8
 20157                           tblptrh	equ	0xFF7
 20158                           tblptrl	equ	0xFF6
 20159                           tablat	equ	0xFF5
 20160                           prodh	equ	0xFF4
 20161                           prodl	equ	0xFF3
 20162                           postinc0	equ	0xFEE
 20163                           wreg	equ	0xFE8
 20164                           indf1	equ	0xFE7
 20165                           postinc1	equ	0xFE6
 20166                           postdec1	equ	0xFE5
 20167                           plusw1	equ	0xFE3
 20168                           fsr1h	equ	0xFE2
 20169                           fsr1l	equ	0xFE1
 20170                           indf2	equ	0xFDF
 20171                           postinc2	equ	0xFDE
 20172                           postdec2	equ	0xFDD
 20173                           plusw2	equ	0xFDB
 20174                           fsr2h	equ	0xFDA
 20175                           fsr2l	equ	0xFD9
 20176                           status	equ	0xFD8
 20177                           
 20178 ;; *************** function __system_timer0_init *****************
 20179 ;; Defined at:
 20180 ;;		line 125 in file "os.c"
 20181 ;; Parameters:    Size  Location     Type
 20182 ;;		None
 20183 ;; Auto vars:     Size  Location     Type
 20184 ;;		None
 20185 ;; Return value:  Size  Location     Type
 20186 ;;                  1    wreg      void 
 20187 ;; Registers used:
 20188 ;;		wreg, status,2
 20189 ;; Tracked objects:
 20190 ;;		On entry : 0/0
 20191 ;;		On exit  : 0/0
 20192 ;;		Unchanged: 0/0
 20193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20198 ;;Total ram usage:        0 bytes
 20199 ;; Hardware stack levels used:    1
 20200 ;; Hardware stack levels required when called:   10
 20201 ;; This function calls:
 20202 ;;		Nothing
 20203 ;; This function is called by:
 20204 ;;		_system_init
 20205 ;; This function uses a non-reentrant model
 20206 ;;
 20207                           
 20208                           	psect	text80
 20209  015C6C                     __ptext80:
 20210                           	opt stack 0
 20211  015C6C                     __system_timer0_init:
 20212                           	opt stack 19
 20213                           
 20214                           ;os.c: 130: T0CONbits.T0CS = 0;
 20215                           
 20216                           ; BSR set to: 2
 20217                           ;incstack = 0
 20218  015C6C  9AD5               	bcf	4053,5,c	;volatile
 20219                           
 20220                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20221  015C6E  9CD5               	bcf	4053,6,c	;volatile
 20222                           
 20223                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20224  015C70  94D5               	bcf	4053,2,c	;volatile
 20225                           
 20226                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20227  015C72  82D5               	bsf	4053,1,c	;volatile
 20228                           
 20229                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20230  015C74  90D5               	bcf	4053,0,c	;volatile
 20231                           
 20232                           ;os.c: 138: T0CONbits.PSA = 0;
 20233  015C76  96D5               	bcf	4053,3,c	;volatile
 20234                           
 20235                           ;os.c: 140: TMR0H = 0xFA;
 20236  015C78  0EFA               	movlw	250
 20237  015C7A  6ED7               	movwf	4055,c	;volatile
 20238                           
 20239                           ;os.c: 141: TMR0L = 0x24;
 20240  015C7C  0E24               	movlw	36
 20241  015C7E  6ED6               	movwf	4054,c	;volatile
 20242                           
 20243                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20244  015C80  8ED5               	bsf	4053,7,c	;volatile
 20245                           
 20246                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20247  015C82  94F2               	bcf	intcon,2,c	;volatile
 20248                           
 20249                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20250  015C84  8AF2               	bsf	intcon,5,c	;volatile
 20251                           
 20252                           ;os.c: 148: INTCONbits.GIE = 1;
 20253  015C86  8EF2               	bsf	intcon,7,c	;volatile
 20254                           
 20255                           ;os.c: 151: os.subTimeSlot = 0;
 20256  015C88  0E00               	movlw	0
 20257  015C8A  0101               	movlb	1	; () banked
 20258  015C8C  6F65               	movwf	_os& (0+255),b	;volatile
 20259                           
 20260                           ;os.c: 152: os.timeSlot = 0;
 20261  015C8E  0E00               	movlw	0
 20262  015C90  6F66               	movwf	(_os+1)& (0+255),b	;volatile
 20263                           
 20264                           ;os.c: 153: os.done = 0;
 20265  015C92  0E00               	movlw	0
 20266  015C94  6F67               	movwf	(_os+2)& (0+255),b	;volatile
 20267                           
 20268                           ; BSR set to: 1
 20269  015C96  0012               	return		;funcret
 20270  015C98                     __end_of__system_timer0_init:
 20271                           	opt stack 0
 20272                           tblptru	equ	0xFF8
 20273                           tblptrh	equ	0xFF7
 20274                           tblptrl	equ	0xFF6
 20275                           tablat	equ	0xFF5
 20276                           prodh	equ	0xFF4
 20277                           prodl	equ	0xFF3
 20278                           intcon	equ	0xFF2
 20279                           postinc0	equ	0xFEE
 20280                           wreg	equ	0xFE8
 20281                           indf1	equ	0xFE7
 20282                           postinc1	equ	0xFE6
 20283                           postdec1	equ	0xFE5
 20284                           plusw1	equ	0xFE3
 20285                           fsr1h	equ	0xFE2
 20286                           fsr1l	equ	0xFE1
 20287                           indf2	equ	0xFDF
 20288                           postinc2	equ	0xFDE
 20289                           postdec2	equ	0xFDD
 20290                           plusw2	equ	0xFDB
 20291                           fsr2h	equ	0xFDA
 20292                           fsr2l	equ	0xFD9
 20293                           status	equ	0xFD8
 20294                           
 20295 ;; *************** function __system_pin_setup *****************
 20296 ;; Defined at:
 20297 ;;		line 59 in file "os.c"
 20298 ;; Parameters:    Size  Location     Type
 20299 ;;		None
 20300 ;; Auto vars:     Size  Location     Type
 20301 ;;		None
 20302 ;; Return value:  Size  Location     Type
 20303 ;;                  1    wreg      void 
 20304 ;; Registers used:
 20305 ;;		wreg, status,2
 20306 ;; Tracked objects:
 20307 ;;		On entry : 0/0
 20308 ;;		On exit  : 0/0
 20309 ;;		Unchanged: 0/0
 20310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20315 ;;Total ram usage:        0 bytes
 20316 ;; Hardware stack levels used:    1
 20317 ;; Hardware stack levels required when called:   10
 20318 ;; This function calls:
 20319 ;;		Nothing
 20320 ;; This function is called by:
 20321 ;;		_system_init
 20322 ;; This function uses a non-reentrant model
 20323 ;;
 20324                           
 20325                           	psect	text81
 20326  0148D6                     __ptext81:
 20327                           	opt stack 0
 20328  0148D6                     __system_pin_setup:
 20329                           	opt stack 19
 20330                           
 20331                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20332                           
 20333                           ; BSR set to: 1
 20334                           ;incstack = 0
 20335  0148D6  8A95               	bsf	3989,5,c	;volatile
 20336                           
 20337                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20338  0148D8  9895               	bcf	3989,4,c	;volatile
 20339                           
 20340                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20341  0148DA  9C95               	bcf	3989,6,c	;volatile
 20342                           
 20343                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20344  0148DC  9E95               	bcf	3989,7,c	;volatile
 20345                           
 20346                           ;os.c: 66: LATDbits.LD7 = 1;
 20347  0148DE  8E8C               	bsf	3980,7,c	;volatile
 20348                           
 20349                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20350  0148E0  8693               	bsf	3987,3,c	;volatile
 20351                           
 20352                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20353  0148E2  010F               	movlb	15	; () banked
 20354  0148E4  9349               	bcf	73,1,b	;volatile
 20355                           
 20356                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20357  0148E6  9E94               	bcf	3988,7,c	;volatile
 20358                           
 20359                           ;os.c: 72: LATCbits.LC7 = 0;
 20360  0148E8  9E8B               	bcf	3979,7,c	;volatile
 20361                           
 20362                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20363  0148EA  9C94               	bcf	3988,6,c	;volatile
 20364                           
 20365                           ;os.c: 75: LATCbits.LC6 = 0;
 20366  0148EC  9C8B               	bcf	3979,6,c	;volatile
 20367                           
 20368                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20369  0148EE  9692               	bcf	3986,3,c	;volatile
 20370                           
 20371                           ;os.c: 78: LATAbits.LA3 = 0;
 20372  0148F0  9689               	bcf	3977,3,c	;volatile
 20373                           
 20374                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20375  0148F2  9294               	bcf	3988,1,c	;volatile
 20376                           
 20377                           ;os.c: 81: LATCbits.LC1 = 0;
 20378  0148F4  928B               	bcf	3979,1,c	;volatile
 20379                           
 20380                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20381  0148F6  8A93               	bsf	3987,5,c	;volatile
 20382                           
 20383                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20384  0148F8  8893               	bsf	3987,4,c	;volatile
 20385                           
 20386                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20387  0148FA  9093               	bcf	3987,0,c	;volatile
 20388                           
 20389                           ;os.c: 90: LATBbits.LB0 = 1;
 20390  0148FC  808A               	bsf	3978,0,c	;volatile
 20391                           
 20392                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20393  0148FE  9493               	bcf	3987,2,c	;volatile
 20394                           
 20395                           ;os.c: 93: LATBbits.LB2 = 0;
 20396  014900  948A               	bcf	3978,2,c	;volatile
 20397                           
 20398                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20399  014902  9293               	bcf	3987,1,c	;volatile
 20400                           
 20401                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20402  014904  8549               	bsf	73,2,b	;volatile
 20403                           
 20404                           ;os.c: 97: LATBbits.LB1 = 0;
 20405  014906  928A               	bcf	3978,1,c	;volatile
 20406                           
 20407                           ; BSR set to: 15
 20408                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20409  014908  0E55               	movlw	85
 20410  01490A  6EA7               	movwf	4007,c	;volsfr
 20411  01490C  0EAA               	movlw	170
 20412  01490E  6EA7               	movwf	4007,c	;volsfr
 20413                           
 20414                           ; BSR set to: 15
 20415  014910  010E               	movlb	14	; () banked
 20416  014912  91BF               	bcf	191,0,b	;volatile
 20417                           
 20418                           ;os.c: 99: RPOR4 = 14;
 20419  014914  0E0E               	movlw	14
 20420  014916  6FC4               	movwf	196,b	;volatile
 20421                           
 20422                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20423  014918  0E55               	movlw	85
 20424  01491A  6EA7               	movwf	4007,c	;volsfr
 20425  01491C  0EAA               	movlw	170
 20426  01491E  6EA7               	movwf	4007,c	;volsfr
 20427                           
 20428                           ; BSR set to: 14
 20429  014920  81BF               	bsf	191,0,b	;volatile
 20430                           
 20431                           ; BSR set to: 14
 20432                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20433  014922  8495               	bsf	3989,2,c	;volatile
 20434                           
 20435                           ; BSR set to: 14
 20436                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20437  014924  8496               	bsf	3990,2,c	;volatile
 20438                           
 20439                           ; BSR set to: 14
 20440                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20441  014926  010F               	movlb	15	; () banked
 20442  014928  8F48               	bsf	72,7,b	;volatile
 20443                           
 20444                           ; BSR set to: 15
 20445                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20446  01492A  8096               	bsf	3990,0,c	;volatile
 20447                           
 20448                           ; BSR set to: 15
 20449                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20450  01492C  8B48               	bsf	72,5,b	;volatile
 20451                           
 20452                           ; BSR set to: 15
 20453                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20454  01492E  8296               	bsf	3990,1,c	;volatile
 20455                           
 20456                           ; BSR set to: 15
 20457                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20458  014930  8D48               	bsf	72,6,b	;volatile
 20459                           
 20460                           ; BSR set to: 15
 20461                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20462  014932  8092               	bsf	3986,0,c	;volatile
 20463                           
 20464                           ; BSR set to: 15
 20465                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20466  014934  8148               	bsf	72,0,b	;volatile
 20467                           
 20468                           ; BSR set to: 15
 20469                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20470  014936  8492               	bsf	3986,2,c	;volatile
 20471                           
 20472                           ; BSR set to: 15
 20473                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20474  014938  8548               	bsf	72,2,b	;volatile
 20475                           
 20476                           ; BSR set to: 15
 20477                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20478  01493A  8292               	bsf	3986,1,c	;volatile
 20479                           
 20480                           ; BSR set to: 15
 20481                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20482  01493C  8348               	bsf	72,1,b	;volatile
 20483                           
 20484                           ; BSR set to: 15
 20485  01493E  0012               	return		;funcret
 20486  014940                     __end_of__system_pin_setup:
 20487                           	opt stack 0
 20488                           tblptru	equ	0xFF8
 20489                           tblptrh	equ	0xFF7
 20490                           tblptrl	equ	0xFF6
 20491                           tablat	equ	0xFF5
 20492                           prodh	equ	0xFF4
 20493                           prodl	equ	0xFF3
 20494                           intcon	equ	0xFF2
 20495                           postinc0	equ	0xFEE
 20496                           wreg	equ	0xFE8
 20497                           indf1	equ	0xFE7
 20498                           postinc1	equ	0xFE6
 20499                           postdec1	equ	0xFE5
 20500                           plusw1	equ	0xFE3
 20501                           fsr1h	equ	0xFE2
 20502                           fsr1l	equ	0xFE1
 20503                           indf2	equ	0xFDF
 20504                           postinc2	equ	0xFDE
 20505                           postdec2	equ	0xFDD
 20506                           plusw2	equ	0xFDB
 20507                           fsr2h	equ	0xFDA
 20508                           fsr2l	equ	0xFD9
 20509                           status	equ	0xFD8
 20510                           
 20511 ;; *************** function __backlight_init *****************
 20512 ;; Defined at:
 20513 ;;		line 158 in file "os.c"
 20514 ;; Parameters:    Size  Location     Type
 20515 ;;		None
 20516 ;; Auto vars:     Size  Location     Type
 20517 ;;		None
 20518 ;; Return value:  Size  Location     Type
 20519 ;;                  1    wreg      void 
 20520 ;; Registers used:
 20521 ;;		None
 20522 ;; Tracked objects:
 20523 ;;		On entry : 0/0
 20524 ;;		On exit  : 0/0
 20525 ;;		Unchanged: 0/0
 20526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20531 ;;Total ram usage:        0 bytes
 20532 ;; Hardware stack levels used:    1
 20533 ;; Hardware stack levels required when called:   10
 20534 ;; This function calls:
 20535 ;;		Nothing
 20536 ;; This function is called by:
 20537 ;;		_system_init
 20538 ;; This function uses a non-reentrant model
 20539 ;;
 20540                           
 20541                           	psect	text82
 20542  016120                     __ptext82:
 20543                           	opt stack 0
 20544  016120                     __backlight_init:
 20545                           	opt stack 19
 20546                           
 20547                           ;os.c: 160: LATCbits.LC1 = 1;
 20548                           
 20549                           ; BSR set to: 15
 20550                           ;incstack = 0
 20551  016120  828B               	bsf	3979,1,c	;volatile
 20552  016122  0012               	return		;funcret
 20553  016124                     __end_of__backlight_init:
 20554                           	opt stack 0
 20555                           tblptru	equ	0xFF8
 20556                           tblptrh	equ	0xFF7
 20557                           tblptrl	equ	0xFF6
 20558                           tablat	equ	0xFF5
 20559                           prodh	equ	0xFF4
 20560                           prodl	equ	0xFF3
 20561                           intcon	equ	0xFF2
 20562                           postinc0	equ	0xFEE
 20563                           wreg	equ	0xFE8
 20564                           indf1	equ	0xFE7
 20565                           postinc1	equ	0xFE6
 20566                           postdec1	equ	0xFE5
 20567                           plusw1	equ	0xFE3
 20568                           fsr1h	equ	0xFE2
 20569                           fsr1l	equ	0xFE1
 20570                           indf2	equ	0xFDF
 20571                           postinc2	equ	0xFDE
 20572                           postdec2	equ	0xFDD
 20573                           plusw2	equ	0xFDB
 20574                           fsr2h	equ	0xFDA
 20575                           fsr2l	equ	0xFD9
 20576                           status	equ	0xFD8
 20577                           
 20578 ;; *************** function _motor_process_cue *****************
 20579 ;; Defined at:
 20580 ;;		line 620 in file "motor.c"
 20581 ;; Parameters:    Size  Location     Type
 20582 ;;		None
 20583 ;; Auto vars:     Size  Location     Type
 20584 ;;		None
 20585 ;; Return value:  Size  Location     Type
 20586 ;;                  1    wreg      void 
 20587 ;; Registers used:
 20588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20589 ;; Tracked objects:
 20590 ;;		On entry : 0/0
 20591 ;;		On exit  : 0/0
 20592 ;;		Unchanged: 0/0
 20593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20598 ;;Total ram usage:        0 bytes
 20599 ;; Hardware stack levels used:    1
 20600 ;; Hardware stack levels required when called:   11
 20601 ;; This function calls:
 20602 ;;		__motor_run
 20603 ;;		_motor_items_in_cue
 20604 ;; This function is called by:
 20605 ;;		_main
 20606 ;; This function uses a non-reentrant model
 20607 ;;
 20608                           
 20609                           	psect	text83
 20610  013846                     __ptext83:
 20611                           	opt stack 0
 20612  013846                     _motor_process_cue:
 20613                           	opt stack 19
 20614                           
 20615                           ;motor.c: 622: if(motor_items_in_cue()==0)
 20616                           
 20617                           ;incstack = 0
 20618  013846  EC58  F0B0         	call	_motor_items_in_cue	;wreg free
 20619  01384A  0900               	iorlw	0
 20620  01384C  B4D8               	btfsc	status,2,c
 20621  01384E  0012               	return	
 20622                           
 20623                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 20624                           
 20625                           ;motor.c: 623: {;motor.c: 625: return;
 20626  013850  0101               	movlb	1	; () banked
 20627  013852  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 20628  013854  A4D8               	btfss	status,2,c
 20629  013856  0012               	return	
 20630                           
 20631                           ; BSR set to: 1
 20632                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 20633                           
 20634                           ; BSR set to: 1
 20635                           
 20636                           ; BSR set to: 1
 20637                           ;motor.c: 629: {;motor.c: 631: return;
 20638  013858  514D               	movf	_motor_cue_read_index& (0+255),w,b
 20639  01385A  0D08               	mullw	8
 20640  01385C  0E01               	movlw	1
 20641  01385E  26F3               	addwf	prodl,f,c
 20642  013860  0E00               	movlw	0
 20643  013862  22F4               	addwfc	prodh,f,c
 20644  013864  0E00               	movlw	low _motor_command_cue
 20645  013866  24F3               	addwf	prodl,w,c
 20646  013868  6ED9               	movwf	fsr2l,c
 20647  01386A  0E03               	movlw	high _motor_command_cue
 20648  01386C  20F4               	addwfc	prodh,w,c
 20649  01386E  6EDA               	movwf	fsr2h,c
 20650  013870  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 20651  013874  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 20652  013878  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 20653  01387C  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 20654  013880  514D               	movf	_motor_cue_read_index& (0+255),w,b
 20655  013882  0D08               	mullw	8
 20656  013884  0E05               	movlw	5
 20657  013886  26F3               	addwf	prodl,f,c
 20658  013888  0E00               	movlw	0
 20659  01388A  22F4               	addwfc	prodh,f,c
 20660  01388C  0E00               	movlw	low _motor_command_cue
 20661  01388E  24F3               	addwf	prodl,w,c
 20662  013890  6ED9               	movwf	fsr2l,c
 20663  013892  0E03               	movlw	high _motor_command_cue
 20664  013894  20F4               	addwfc	prodh,w,c
 20665  013896  6EDA               	movwf	fsr2h,c
 20666  013898  CFDE F064          	movff	postinc2,__motor_run@speed
 20667  01389C  CFDD F065          	movff	postdec2,__motor_run@speed+1
 20668  0138A0  514D               	movf	_motor_cue_read_index& (0+255),w,b
 20669  0138A2  0D08               	mullw	8
 20670  0138A4  0E07               	movlw	7
 20671  0138A6  26F3               	addwf	prodl,f,c
 20672  0138A8  0E00               	movlw	0
 20673  0138AA  22F4               	addwfc	prodh,f,c
 20674  0138AC  0E00               	movlw	low _motor_command_cue
 20675  0138AE  24F3               	addwf	prodl,w,c
 20676  0138B0  6ED9               	movwf	fsr2l,c
 20677  0138B2  0E03               	movlw	high _motor_command_cue
 20678  0138B4  20F4               	addwfc	prodh,w,c
 20679  0138B6  6EDA               	movwf	fsr2h,c
 20680  0138B8  50DF               	movf	indf2,w,c
 20681  0138BA  0100               	movlb	0	; () banked
 20682  0138BC  6F66               	movwf	__motor_run@type& (0+255),b
 20683  0138BE  0101               	movlb	1	; () banked
 20684  0138C0  514D               	movf	_motor_cue_read_index& (0+255),w,b
 20685  0138C2  0D08               	mullw	8
 20686  0138C4  0E00               	movlw	low _motor_command_cue
 20687  0138C6  24F3               	addwf	prodl,w,c
 20688  0138C8  6ED9               	movwf	fsr2l,c
 20689  0138CA  0E03               	movlw	high _motor_command_cue
 20690  0138CC  20F4               	addwfc	prodh,w,c
 20691  0138CE  6EDA               	movwf	fsr2h,c
 20692  0138D0  50DF               	movf	indf2,w,c
 20693  0138D2  EC44  F076         	call	__motor_run
 20694                           
 20695                           ;motor.c: 642: ++motor_cue_read_index;
 20696  0138D6  0101               	movlb	1	; () banked
 20697  0138D8  2B4D               	incf	_motor_cue_read_index& (0+255),f,b
 20698                           
 20699                           ; BSR set to: 1
 20700                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 20701  0138DA  0E07               	movlw	7
 20702  0138DC  174D               	andwf	_motor_cue_read_index& (0+255),f,b
 20703  0138DE  0012               	return		;funcret
 20704  0138E0                     __end_of_motor_process_cue:
 20705                           	opt stack 0
 20706                           tblptru	equ	0xFF8
 20707                           tblptrh	equ	0xFF7
 20708                           tblptrl	equ	0xFF6
 20709                           tablat	equ	0xFF5
 20710                           prodh	equ	0xFF4
 20711                           prodl	equ	0xFF3
 20712                           intcon	equ	0xFF2
 20713                           postinc0	equ	0xFEE
 20714                           wreg	equ	0xFE8
 20715                           indf1	equ	0xFE7
 20716                           postinc1	equ	0xFE6
 20717                           postdec1	equ	0xFE5
 20718                           plusw1	equ	0xFE3
 20719                           fsr1h	equ	0xFE2
 20720                           fsr1l	equ	0xFE1
 20721                           indf2	equ	0xFDF
 20722                           postinc2	equ	0xFDE
 20723                           postdec2	equ	0xFDD
 20724                           plusw2	equ	0xFDB
 20725                           fsr2h	equ	0xFDA
 20726                           fsr2l	equ	0xFD9
 20727                           status	equ	0xFD8
 20728                           
 20729 ;; *************** function __motor_run *****************
 20730 ;; Defined at:
 20731 ;;		line 41 in file "motor.c"
 20732 ;; Parameters:    Size  Location     Type
 20733 ;;  direction       1    wreg     enum E6622
 20734 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 20735 ;;  speed           2    4[BANK0 ] unsigned int 
 20736 ;;  type            1    6[BANK0 ] enum E6631
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;  direction       1   11[BANK0 ] enum E6622
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  1    wreg      void 
 20741 ;; Registers used:
 20742 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20748 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20750 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20751 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20752 ;;Total ram usage:       12 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:   10
 20755 ;; This function calls:
 20756 ;;		Nothing
 20757 ;; This function is called by:
 20758 ;;		_motor_process_cue
 20759 ;; This function uses a non-reentrant model
 20760 ;;
 20761                           
 20762                           	psect	text84
 20763  00EC88                     __ptext84:
 20764                           	opt stack 0
 20765  00EC88                     __motor_run:
 20766                           	opt stack 19
 20767                           
 20768                           ;incstack = 0
 20769                           ;__motor_run@direction stored from wreg
 20770  00EC88  0100               	movlb	0	; () banked
 20771  00EC8A  6F6B               	movwf	__motor_run@direction& (0+255),b
 20772                           
 20773                           ;motor.c: 48: motor_direction = direction;
 20774  00EC8C  C06B  F14A         	movff	__motor_run@direction,_motor_direction
 20775                           
 20776                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 20777  00EC90  C060  F11B         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 20778  00EC94  C061  F11C         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 20779  00EC98  C062  F11D         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 20780  00EC9C  C063  F11E         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 20781                           
 20782                           ;motor.c: 50: motor_maximum_speed = speed;
 20783  00ECA0  C064  F137         	movff	__motor_run@speed,_motor_maximum_speed
 20784  00ECA4  C065  F138         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 20785                           
 20786                           ;motor.c: 51: motor_move_type = type;
 20787  00ECA8  C066  F14B         	movff	__motor_run@type,_motor_move_type
 20788                           
 20789                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 20790  00ECAC  0101               	movlb	1	; () banked
 20791  00ECAE  054B               	decf	_motor_move_type& (0+255),w,b
 20792  00ECB0  A4D8               	btfss	status,2,c
 20793  00ECB2  D004               	goto	l2456
 20794                           
 20795                           ; BSR set to: 1
 20796                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 20797  00ECB4  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 20798  00ECB6  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 20799  00ECB8  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 20800  00ECBA  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 20801  00ECBC                     l2456:
 20802                           
 20803                           ; BSR set to: 1
 20804                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 20805                           
 20806                           ; BSR set to: 1
 20807  00ECBC  0E00               	movlw	0
 20808  00ECBE  6E58               	movwf	_motor_current_speed+1,c	;volatile
 20809  00ECC0  0E00               	movlw	0
 20810  00ECC2  6E57               	movwf	_motor_current_speed,c	;volatile
 20811                           
 20812                           ;motor.c: 61: motor_current_stepcount = 0;
 20813  00ECC4  0E00               	movlw	0
 20814  00ECC6  6F1F               	movwf	_motor_current_stepcount& (0+255),b	;volatile
 20815  00ECC8  0E00               	movlw	0
 20816  00ECCA  6F20               	movwf	(_motor_current_stepcount+1)& (0+255),b	;volatile
 20817  00ECCC  0E00               	movlw	0
 20818  00ECCE  6F21               	movwf	(_motor_current_stepcount+2)& (0+255),b	;volatile
 20819  00ECD0  0E00               	movlw	0
 20820  00ECD2  6F22               	movwf	(_motor_current_stepcount+3)& (0+255),b	;volatile
 20821                           
 20822                           ; BSR set to: 1
 20823                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 20824  00ECD4  0E63               	movlw	low (_motor_steps_lookup+2)
 20825  00ECD6  6EF6               	movwf	tblptrl,c
 20826  00ECD8  0E94               	movlw	high (_motor_steps_lookup+2)
 20827  00ECDA  6EF7               	movwf	tblptrh,c
 20828  00ECDC                     	if	0	;tblptru may be non-zero
 20829  00ECDC                     	endif
 20830  00ECDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20831  00ECDC  0E00               	movlw	low (__mediumconst shr (0+16))
 20832  00ECDE  6EF8               	movwf	tblptru,c
 20833  00ECE0                     	endif
 20834  00ECE0  0009               	tblrd		*+
 20835  00ECE2  CFF5 F067          	movff	tablat,??__motor_run
 20836  00ECE6  0009               	tblrd		*+
 20837  00ECE8  CFF5 F068          	movff	tablat,??__motor_run+1
 20838  00ECEC  C067  F238         	movff	??__motor_run,_motor_next_speed_check	;volatile
 20839  00ECF0  C068  F239         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 20840  00ECF4  0102               	movlb	2	; () banked
 20841  00ECF6  6B3A               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 20842  00ECF8  6B3B               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 20843                           
 20844                           ; BSR set to: 2
 20845                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 20846  00ECFA  90BA               	bcf	4026,0,c	;volatile
 20847  00ECFC  92BA               	bcf	4026,1,c	;volatile
 20848  00ECFE  94BA               	bcf	4026,2,c	;volatile
 20849  00ED00  96BA               	bcf	4026,3,c	;volatile
 20850                           
 20851                           ; BSR set to: 2
 20852                           ;motor.c: 68: LATBbits.LB0 = 0;
 20853  00ED02  908A               	bcf	3978,0,c	;volatile
 20854                           
 20855                           ; BSR set to: 2
 20856                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 20857  00ED04  0100               	movlb	0	; () banked
 20858  00ED06  296B               	incf	__motor_run@direction& (0+255),w,b
 20859  00ED08  A4D8               	btfss	status,2,c
 20860  00ED0A  D005               	goto	l2457
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 20864  00ED0C  0101               	movlb	1	; () banked
 20865  00ED0E  519A               	movf	(_config+4)& (0+255),w,b
 20866  00ED10  B4D8               	btfsc	status,2,c
 20867  00ED12  D005               	goto	u17240
 20868  00ED14  D006               	goto	l2461
 20869  00ED16                     l2457:
 20870                           
 20871                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 20872                           
 20873                           ; BSR set to: 1
 20874  00ED16  0101               	movlb	1	; () banked
 20875  00ED18  519A               	movf	(_config+4)& (0+255),w,b
 20876  00ED1A  B4D8               	btfsc	status,2,c
 20877  00ED1C  D002               	goto	l2461
 20878  00ED1E                     u17240:
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;motor.c: 79: LATBbits.LB2 = 0;
 20882  00ED1E  948A               	bcf	3978,2,c	;volatile
 20883  00ED20  D001               	goto	l2462
 20884  00ED22                     l2461:
 20885                           
 20886                           ; BSR set to: 1
 20887                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 20888  00ED22  848A               	bsf	3978,2,c	;volatile
 20889  00ED24                     l2462:
 20890                           
 20891                           ; BSR set to: 1
 20892                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 20893                           
 20894                           ; BSR set to: 1
 20895  00ED24  828A               	bsf	3978,1,c	;volatile
 20896                           
 20897                           ; BSR set to: 1
 20898                           ;motor.c: 88: ++motor_current_stepcount;
 20899  00ED26  0E01               	movlw	1
 20900  00ED28  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 20901  00ED2A  0E00               	movlw	0
 20902  00ED2C  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 20903  00ED2E  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 20904  00ED30  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 20905                           
 20906                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 20907  00ED32  514A               	movf	_motor_direction& (0+255),w,b
 20908  00ED34  0100               	movlb	0	; () banked
 20909  00ED36  6F67               	movwf	??__motor_run& (0+255),b
 20910  00ED38  0E00               	movlw	0
 20911  00ED3A  BF67               	btfsc	??__motor_run& (0+255),7,b
 20912  00ED3C  0EFF               	movlw	255
 20913  00ED3E  6F68               	movwf	(??__motor_run+1)& (0+255),b
 20914  00ED40  6F69               	movwf	(??__motor_run+2)& (0+255),b
 20915  00ED42  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 20916  00ED44  5167               	movf	??__motor_run& (0+255),w,b
 20917  00ED46  0101               	movlb	1	; () banked
 20918  00ED48  276C               	addwf	(_os+7)& (0+255),f,b	;volatile
 20919  00ED4A  0100               	movlb	0	; () banked
 20920  00ED4C  5168               	movf	(??__motor_run+1)& (0+255),w,b
 20921  00ED4E  0101               	movlb	1	; () banked
 20922  00ED50  236D               	addwfc	(_os+8)& (0+255),f,b	;volatile
 20923  00ED52  0100               	movlb	0	; () banked
 20924  00ED54  5169               	movf	(??__motor_run+2)& (0+255),w,b
 20925  00ED56  0101               	movlb	1	; () banked
 20926  00ED58  236E               	addwfc	(_os+9)& (0+255),f,b	;volatile
 20927  00ED5A  0100               	movlb	0	; () banked
 20928  00ED5C  516A               	movf	(??__motor_run+3)& (0+255),w,b
 20929  00ED5E  0101               	movlb	1	; () banked
 20930  00ED60  236F               	addwfc	(_os+10)& (0+255),f,b	;volatile
 20931                           
 20932                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 20933  00ED62  5196               	movf	_config& (0+255),w,b
 20934  00ED64  196C               	xorwf	(_os+7)& (0+255),w,b	;volatile
 20935  00ED66  E114               	bnz	l17740
 20936  00ED68  5197               	movf	(_config+1)& (0+255),w,b
 20937  00ED6A  196D               	xorwf	(_os+8)& (0+255),w,b	;volatile
 20938  00ED6C  E111               	bnz	l17740
 20939  00ED6E  5198               	movf	(_config+2)& (0+255),w,b
 20940  00ED70  196E               	xorwf	(_os+9)& (0+255),w,b	;volatile
 20941  00ED72  E10E               	bnz	l17740
 20942  00ED74  5199               	movf	(_config+3)& (0+255),w,b
 20943  00ED76  196F               	xorwf	(_os+10)& (0+255),w,b	;volatile
 20944  00ED78  A4D8               	btfss	status,2,c
 20945  00ED7A  D00A               	goto	l2463
 20946                           
 20947                           ; BSR set to: 1
 20948                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 20949  00ED7C  0E00               	movlw	0
 20950  00ED7E  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 20951  00ED80  0E00               	movlw	0
 20952  00ED82  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 20953  00ED84  0E00               	movlw	0
 20954  00ED86  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 20955  00ED88  0E00               	movlw	0
 20956  00ED8A  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 20957                           
 20958                           ; BSR set to: 1
 20959                           ;motor.c: 95: ++os.absolute_position;
 20960  00ED8C  4B70               	infsnz	(_os+11)& (0+255),f,b	;volatile
 20961  00ED8E  2B71               	incf	(_os+12)& (0+255),f,b	;volatile
 20962  00ED90                     l2463:
 20963  00ED90                     l17740:
 20964                           
 20965                           ; BSR set to: 1
 20966                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 20967  00ED90  296C               	incf	(_os+7)& (0+255),w,b	;volatile
 20968  00ED92  E116               	bnz	l17746
 20969  00ED94  296D               	incf	(_os+8)& (0+255),w,b	;volatile
 20970  00ED96  E114               	bnz	l17746
 20971  00ED98  296E               	incf	(_os+9)& (0+255),w,b	;volatile
 20972  00ED9A  E112               	bnz	l17746
 20973  00ED9C  296F               	incf	(_os+10)& (0+255),w,b	;volatile
 20974  00ED9E  A4D8               	btfss	status,2,c
 20975  00EDA0  D00F               	goto	l2464
 20976                           
 20977                           ; BSR set to: 1
 20978                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 20979  00EDA2  0EFF               	movlw	255
 20980  00EDA4  2596               	addwf	_config& (0+255),w,b
 20981  00EDA6  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 20982  00EDA8  0EFF               	movlw	255
 20983  00EDAA  2197               	addwfc	(_config+1)& (0+255),w,b
 20984  00EDAC  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 20985  00EDAE  0EFF               	movlw	255
 20986  00EDB0  2198               	addwfc	(_config+2)& (0+255),w,b
 20987  00EDB2  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 20988  00EDB4  0EFF               	movlw	255
 20989  00EDB6  2199               	addwfc	(_config+3)& (0+255),w,b
 20990  00EDB8  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 20991                           
 20992                           ; BSR set to: 1
 20993                           ;motor.c: 100: --os.absolute_position;
 20994  00EDBA  0770               	decf	(_os+11)& (0+255),f,b	;volatile
 20995  00EDBC  A0D8               	btfss	status,0,c
 20996  00EDBE  0771               	decf	(_os+12)& (0+255),f,b	;volatile
 20997  00EDC0                     l2464:
 20998  00EDC0                     l17746:
 20999                           
 21000                           ; BSR set to: 1
 21001                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21002  00EDC0  0E55               	movlw	85
 21003  00EDC2  6EA7               	movwf	4007,c	;volsfr
 21004                           
 21005                           ; BSR set to: 1
 21006  00EDC4  0EAA               	movlw	170
 21007  00EDC6  6EA7               	movwf	4007,c	;volsfr
 21008                           
 21009                           ; BSR set to: 1
 21010  00EDC8  010E               	movlb	14	; () banked
 21011  00EDCA  91BF               	bcf	191,0,b	;volatile
 21012                           
 21013                           ; BSR set to: 14
 21014                           ;motor.c: 105: RPOR4 = 0;
 21015  00EDCC  0E00               	movlw	0
 21016  00EDCE  6FC4               	movwf	196,b	;volatile
 21017                           
 21018                           ; BSR set to: 14
 21019                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21020  00EDD0  0E55               	movlw	85
 21021  00EDD2  6EA7               	movwf	4007,c	;volsfr
 21022                           
 21023                           ; BSR set to: 14
 21024  00EDD4  0EAA               	movlw	170
 21025  00EDD6  6EA7               	movwf	4007,c	;volsfr
 21026                           
 21027                           ; BSR set to: 14
 21028  00EDD8  81BF               	bsf	191,0,b	;volatile
 21029                           
 21030                           ; BSR set to: 14
 21031                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21032  00EDDA  0E00               	movlw	0
 21033  00EDDC  0101               	movlb	1	; () banked
 21034  00EDDE  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 21035                           
 21036                           ; BSR set to: 1
 21037                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21038  00EDE0  0EFD               	movlw	low _motor_prescaler_lookup
 21039  00EDE2  2457               	addwf	_motor_current_speed,w,c	;volatile
 21040  00EDE4  6EF6               	movwf	tblptrl,c
 21041  00EDE6  0E9B               	movlw	high _motor_prescaler_lookup
 21042  00EDE8  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21043  00EDEA  6EF7               	movwf	tblptrh,c
 21044  00EDEC                     	if	1	;There are 3 active tblptr bytes
 21045  00EDEC  6AF8               	clrf	tblptru,c
 21046  00EDEE  0E00               	movlw	low (__mediumconst shr (0+16))
 21047  00EDF0  22F8               	addwfc	tblptru,f,c
 21048  00EDF2                     	endif
 21049  00EDF2  0008               	tblrd		*
 21050  00EDF4  CFF5 F067          	movff	tablat,??__motor_run
 21051  00EDF8  50CA               	movf	4042,w,c	;volatile
 21052  00EDFA  0100               	movlb	0	; () banked
 21053  00EDFC  1967               	xorwf	??__motor_run& (0+255),w,b
 21054  00EDFE  0BFC               	andlw	-4
 21055  00EE00  1967               	xorwf	??__motor_run& (0+255),w,b
 21056  00EE02  6ECA               	movwf	4042,c	;volatile
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21060  00EE04  0E16               	movlw	low _motor_period_lookup
 21061  00EE06  2457               	addwf	_motor_current_speed,w,c	;volatile
 21062  00EE08  6EF6               	movwf	tblptrl,c
 21063  00EE0A  0E9A               	movlw	high _motor_period_lookup
 21064  00EE0C  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21065  00EE0E  6EF7               	movwf	tblptrh,c
 21066  00EE10                     	if	1	;There are 3 active tblptr bytes
 21067  00EE10  6AF8               	clrf	tblptru,c
 21068  00EE12  0E00               	movlw	low (__mediumconst shr (0+16))
 21069  00EE14  22F8               	addwfc	tblptru,f,c
 21070  00EE16                     	endif
 21071  00EE16  0008               	tblrd		*
 21072  00EE18  CFF5 FFCB          	movff	tablat,4043	;volatile
 21073                           
 21074                           ; BSR set to: 0
 21075                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21076  00EE1C  0E2F               	movlw	low _motor_postscaler_lookup
 21077  00EE1E  2457               	addwf	_motor_current_speed,w,c	;volatile
 21078  00EE20  6EF6               	movwf	tblptrl,c
 21079  00EE22  0E98               	movlw	high _motor_postscaler_lookup
 21080  00EE24  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21081  00EE26  6EF7               	movwf	tblptrh,c
 21082  00EE28                     	if	1	;There are 3 active tblptr bytes
 21083  00EE28  6AF8               	clrf	tblptru,c
 21084  00EE2A  0E00               	movlw	low (__mediumconst shr (0+16))
 21085  00EE2C  22F8               	addwfc	tblptru,f,c
 21086  00EE2E                     	endif
 21087  00EE2E  0008               	tblrd		*
 21088  00EE30  CFF5 F067          	movff	tablat,??__motor_run
 21089  00EE34  4767               	rlncf	??__motor_run& (0+255),f,b
 21090  00EE36  4767               	rlncf	??__motor_run& (0+255),f,b
 21091  00EE38  4767               	rlncf	??__motor_run& (0+255),f,b
 21092  00EE3A  50CA               	movf	4042,w,c	;volatile
 21093  00EE3C  1967               	xorwf	??__motor_run& (0+255),w,b
 21094  00EE3E  0B87               	andlw	-121
 21095  00EE40  1967               	xorwf	??__motor_run& (0+255),w,b
 21096  00EE42  6ECA               	movwf	4042,c	;volatile
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;motor.c: 119: CCPR1L = PR2>>1;
 21100  00EE44  90D8               	bcf	status,0,c
 21101  00EE46  30CB               	rrcf	4043,w,c	;volatile
 21102  00EE48  6EBB               	movwf	4027,c	;volatile
 21103                           
 21104                           ; BSR set to: 0
 21105                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21106  00EE4A  929E               	bcf	3998,1,c	;volatile
 21107                           
 21108                           ; BSR set to: 0
 21109                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21110  00EE4C  829D               	bsf	3997,1,c	;volatile
 21111                           
 21112                           ; BSR set to: 0
 21113                           ;motor.c: 126: TMR2 = 0;
 21114  00EE4E  0E00               	movlw	0
 21115  00EE50  6ECC               	movwf	4044,c	;volatile
 21116                           
 21117                           ; BSR set to: 0
 21118                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21119  00EE52  84CA               	bsf	4042,2,c	;volatile
 21120                           
 21121                           ; BSR set to: 0
 21122                           ;motor.c: 130: os.busy = 1;
 21123  00EE54  0E01               	movlw	1
 21124  00EE56  0101               	movlb	1	; () banked
 21125  00EE58  6F75               	movwf	(_os+16)& (0+255),b	;volatile
 21126                           
 21127                           ; BSR set to: 1
 21128  00EE5A  0012               	return		;funcret
 21129  00EE5C                     __end_of__motor_run:
 21130                           	opt stack 0
 21131                           tblptru	equ	0xFF8
 21132                           tblptrh	equ	0xFF7
 21133                           tblptrl	equ	0xFF6
 21134                           tablat	equ	0xFF5
 21135                           prodh	equ	0xFF4
 21136                           prodl	equ	0xFF3
 21137                           intcon	equ	0xFF2
 21138                           postinc0	equ	0xFEE
 21139                           wreg	equ	0xFE8
 21140                           indf1	equ	0xFE7
 21141                           postinc1	equ	0xFE6
 21142                           postdec1	equ	0xFE5
 21143                           plusw1	equ	0xFE3
 21144                           fsr1h	equ	0xFE2
 21145                           fsr1l	equ	0xFE1
 21146                           indf2	equ	0xFDF
 21147                           postinc2	equ	0xFDE
 21148                           postdec2	equ	0xFDD
 21149                           plusw2	equ	0xFDB
 21150                           fsr2h	equ	0xFDA
 21151                           fsr2l	equ	0xFD9
 21152                           status	equ	0xFD8
 21153                           
 21154 ;; *************** function _encoder_statemachine *****************
 21155 ;; Defined at:
 21156 ;;		line 210 in file "encoder.c"
 21157 ;; Parameters:    Size  Location     Type
 21158 ;;		None
 21159 ;; Auto vars:     Size  Location     Type
 21160 ;;		None
 21161 ;; Return value:  Size  Location     Type
 21162 ;;                  1    wreg      void 
 21163 ;; Registers used:
 21164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21165 ;; Tracked objects:
 21166 ;;		On entry : 0/0
 21167 ;;		On exit  : 0/0
 21168 ;;		Unchanged: 0/0
 21169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21172 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21174 ;;Total ram usage:        4 bytes
 21175 ;; Hardware stack levels used:    1
 21176 ;; Hardware stack levels required when called:   15
 21177 ;; This function calls:
 21178 ;;		__divide_jump_size_decrement
 21179 ;;		__divide_jump_size_increment
 21180 ;;		__encoder_next_arc_step_size
 21181 ;;		__encoder_next_divide_step_size
 21182 ;;		__encoder_next_setup_stepsize
 21183 ;;		_motor_arc_move
 21184 ;;		_motor_change_speed
 21185 ;;		_motor_decrease_manual_speed
 21186 ;;		_motor_divide_jump
 21187 ;;		_motor_divide_jump_to_nearest
 21188 ;;		_motor_goto_steps
 21189 ;;		_motor_increase_manual_speed
 21190 ;;		_motor_move_degrees_int
 21191 ;;		_motor_move_endless
 21192 ;;		_motor_set_zero
 21193 ;;		_motor_stop
 21194 ;; This function is called by:
 21195 ;;		_main
 21196 ;; This function uses a non-reentrant model
 21197 ;;
 21198                           
 21199                           	psect	text85
 21200  00AFCC                     __ptext85:
 21201                           	opt stack 0
 21202  00AFCC                     _encoder_statemachine:
 21203                           	opt stack 15
 21204                           
 21205                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21206                           
 21207                           ; BSR set to: 1
 21208                           ;incstack = 0
 21209  00AFCC  0101               	movlb	1	; () banked
 21210  00AFCE  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 21211  00AFD0  A4D8               	btfss	status,2,c
 21212  00AFD2  D3E2               	goto	l2787
 21213                           
 21214                           ; BSR set to: 1
 21215  00AFD4  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 21216  00AFD6  A4D8               	btfss	status,2,c
 21217  00AFD8  D3DF               	goto	l2787
 21218                           
 21219                           ; BSR set to: 1
 21220  00AFDA  5169               	movf	(_os+4)& (0+255),w,b	;volatile
 21221  00AFDC  A4D8               	btfss	status,2,c
 21222  00AFDE  D3DC               	goto	l2787
 21223                           
 21224                           ; BSR set to: 1
 21225  00AFE0  516B               	movf	(_os+6)& (0+255),w,b	;volatile
 21226  00AFE2  B4D8               	btfsc	status,2,c
 21227  00AFE4  0012               	return	
 21228  00AFE6  D3D8               	goto	l2787
 21229  00AFE8                     
 21230                           ; BSR set to: 1
 21231                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21232                           
 21233                           ; BSR set to: 1
 21234  00AFE8  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21235  00AFEA  B4D8               	btfsc	status,2,c
 21236  00AFEC  D003               	goto	u17910
 21237                           
 21238                           ; BSR set to: 1
 21239  00AFEE  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21240  00AFF0  A4D8               	btfss	status,2,c
 21241  00AFF2  D002               	goto	l2791
 21242  00AFF4                     u17910:
 21243                           
 21244                           ; BSR set to: 1
 21245                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21246                           
 21247                           ; BSR set to: 1
 21248  00AFF4  0E11               	movlw	17
 21249  00AFF6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21250  00AFF8                     l2791:
 21251                           
 21252                           ; BSR set to: 1
 21253                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21254                           
 21255                           ; BSR set to: 1
 21256  00AFF8  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21257  00AFFC  0100               	movlb	0	; () banked
 21258  00AFFE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21259  00B000  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21260  00B002  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21261  00B004  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21262  00B008  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21263  00B00A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21264  00B00C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21265  00B00E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21266  00B010  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21267  00B012  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21268  00B014  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21269  00B016  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21270  00B018  D008               	goto	l2794
 21271  00B01A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21272  00B01C  E103               	bnz	u17920
 21273  00B01E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21274  00B020  A0D8               	btfss	status,0,c
 21275  00B022  D003               	goto	l2794
 21276  00B024                     u17920:
 21277                           
 21278                           ; BSR set to: 0
 21279                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21280  00B024  0E02               	movlw	2
 21281  00B026  0101               	movlb	1	; () banked
 21282  00B028  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21283  00B02A                     l2794:
 21284                           
 21285                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21286                           
 21287                           ; BSR set to: 1
 21288  00B02A  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21289  00B02E  0100               	movlb	0	; () banked
 21290  00B030  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21291  00B032  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21292  00B034  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21293  00B036  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21294  00B03A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21295  00B03C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21296  00B03E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21297  00B040  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21298  00B042  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21299  00B044  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21300  00B046  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21301  00B048  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21302  00B04A  D3CB               	goto	l2822
 21303                           
 21304                           ; BSR set to: 0
 21305                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21306  00B04C  0E05               	movlw	5
 21307  00B04E  D392               	goto	L22
 21308  00B050                     
 21309                           ; BSR set to: 1
 21310                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21311                           
 21312                           ; BSR set to: 1
 21313  00B050  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21314  00B052  B4D8               	btfsc	status,2,c
 21315  00B054  D003               	goto	u17950
 21316                           
 21317                           ; BSR set to: 1
 21318  00B056  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21319  00B058  A4D8               	btfss	status,2,c
 21320  00B05A  D002               	goto	l2798
 21321  00B05C                     u17950:
 21322                           
 21323                           ; BSR set to: 1
 21324                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21325                           
 21326                           ; BSR set to: 1
 21327  00B05C  0E31               	movlw	49
 21328  00B05E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21329  00B060                     l2798:
 21330                           
 21331                           ; BSR set to: 1
 21332                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21333                           
 21334                           ; BSR set to: 1
 21335  00B060  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21336  00B064  0100               	movlb	0	; () banked
 21337  00B066  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21338  00B068  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21339  00B06A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21340  00B06C  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21341  00B070  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21342  00B072  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21343  00B074  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21344  00B076  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21345  00B078  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21346  00B07A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21347  00B07C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21348  00B07E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21349  00B080  D008               	goto	l2801
 21350  00B082  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21351  00B084  E103               	bnz	u17960
 21352  00B086  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21353  00B088  A0D8               	btfss	status,0,c
 21354  00B08A  D003               	goto	l2801
 21355  00B08C                     u17960:
 21356                           
 21357                           ; BSR set to: 0
 21358                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21359  00B08C  0E03               	movlw	3
 21360  00B08E  0101               	movlb	1	; () banked
 21361  00B090  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21362  00B092                     l2801:
 21363                           
 21364                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21365                           
 21366                           ; BSR set to: 1
 21367  00B092  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21368  00B096  0100               	movlb	0	; () banked
 21369  00B098  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21370  00B09A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21371  00B09C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21372  00B09E  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21373  00B0A2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21374  00B0A4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21375  00B0A6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21376  00B0A8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21377  00B0AA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21378  00B0AC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21379  00B0AE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21380  00B0B0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21381  00B0B2  D397               	goto	l2822
 21382                           
 21383                           ; BSR set to: 0
 21384                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21385  00B0B4  0E01               	movlw	1
 21386  00B0B6  D35E               	goto	L22
 21387  00B0B8                     
 21388                           ; BSR set to: 1
 21389                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21390                           
 21391                           ; BSR set to: 1
 21392  00B0B8  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21393  00B0BA  B4D8               	btfsc	status,2,c
 21394  00B0BC  D003               	goto	u17990
 21395                           
 21396                           ; BSR set to: 1
 21397  00B0BE  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21398  00B0C0  A4D8               	btfss	status,2,c
 21399  00B0C2  D002               	goto	l2804
 21400  00B0C4                     u17990:
 21401                           
 21402                           ; BSR set to: 1
 21403                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21404                           
 21405                           ; BSR set to: 1
 21406  00B0C4  0E51               	movlw	81
 21407  00B0C6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21408  00B0C8                     l2804:
 21409                           
 21410                           ; BSR set to: 1
 21411                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21412                           
 21413                           ; BSR set to: 1
 21414  00B0C8  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21415  00B0CC  0100               	movlb	0	; () banked
 21416  00B0CE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21417  00B0D0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21418  00B0D2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21419  00B0D4  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21420  00B0D8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21421  00B0DA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21422  00B0DC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21423  00B0DE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21424  00B0E0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21425  00B0E2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21426  00B0E4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21427  00B0E6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21428  00B0E8  D008               	goto	l2807
 21429  00B0EA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21430  00B0EC  E103               	bnz	u18000
 21431  00B0EE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21432  00B0F0  A0D8               	btfss	status,0,c
 21433  00B0F2  D003               	goto	l2807
 21434  00B0F4                     u18000:
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21438  00B0F4  0E04               	movlw	4
 21439  00B0F6  0101               	movlb	1	; () banked
 21440  00B0F8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21441  00B0FA                     l2807:
 21442                           
 21443                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21444                           
 21445                           ; BSR set to: 1
 21446  00B0FA  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21447  00B0FE  0100               	movlb	0	; () banked
 21448  00B100  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21449  00B102  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21450  00B104  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21451  00B106  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21452  00B10A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21453  00B10C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21454  00B10E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21455  00B110  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21456  00B112  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21457  00B114  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21458  00B116  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21459  00B118  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21460  00B11A  D363               	goto	l2822
 21461                           
 21462                           ; BSR set to: 0
 21463                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21464  00B11C  0E02               	movlw	2
 21465  00B11E  D32A               	goto	L22
 21466  00B120                     
 21467                           ; BSR set to: 1
 21468                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21469                           
 21470                           ; BSR set to: 1
 21471  00B120  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21472  00B122  B4D8               	btfsc	status,2,c
 21473  00B124  D003               	goto	u18030
 21474                           
 21475                           ; BSR set to: 1
 21476  00B126  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21477  00B128  A4D8               	btfss	status,2,c
 21478  00B12A  D002               	goto	l2810
 21479  00B12C                     u18030:
 21480                           
 21481                           ; BSR set to: 1
 21482                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21483                           
 21484                           ; BSR set to: 1
 21485  00B12C  0E82               	movlw	130
 21486  00B12E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21487  00B130                     l2810:
 21488                           
 21489                           ; BSR set to: 1
 21490                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21491                           
 21492                           ; BSR set to: 1
 21493  00B130  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21494  00B134  0100               	movlb	0	; () banked
 21495  00B136  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21496  00B138  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21497  00B13A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21498  00B13C  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21499  00B140  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21500  00B142  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21501  00B144  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21502  00B146  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21503  00B148  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21504  00B14A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21505  00B14C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21506  00B14E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21507  00B150  D008               	goto	l2813
 21508  00B152  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21509  00B154  E103               	bnz	u18040
 21510  00B156  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21511  00B158  A0D8               	btfss	status,0,c
 21512  00B15A  D003               	goto	l2813
 21513  00B15C                     u18040:
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21517  00B15C  0E05               	movlw	5
 21518  00B15E  0101               	movlb	1	; () banked
 21519  00B160  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21520  00B162                     l2813:
 21521                           
 21522                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21523                           
 21524                           ; BSR set to: 1
 21525  00B162  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21526  00B166  0100               	movlb	0	; () banked
 21527  00B168  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21528  00B16A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21529  00B16C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21530  00B16E  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21531  00B172  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21532  00B174  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21533  00B176  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21534  00B178  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21535  00B17A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21536  00B17C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21537  00B17E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21538  00B180  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21539  00B182  D32F               	goto	l2822
 21540                           
 21541                           ; BSR set to: 0
 21542                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21543  00B184  0E03               	movlw	3
 21544  00B186  D2F6               	goto	L22
 21545  00B188                     
 21546                           ; BSR set to: 1
 21547                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21548                           
 21549                           ; BSR set to: 1
 21550  00B188  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21551  00B18A  B4D8               	btfsc	status,2,c
 21552  00B18C  D003               	goto	u18070
 21553                           
 21554                           ; BSR set to: 1
 21555  00B18E  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21556  00B190  A4D8               	btfss	status,2,c
 21557  00B192  D002               	goto	l2816
 21558  00B194                     u18070:
 21559                           
 21560                           ; BSR set to: 1
 21561                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21562                           
 21563                           ; BSR set to: 1
 21564  00B194  0E71               	movlw	113
 21565  00B196  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21566  00B198                     l2816:
 21567                           
 21568                           ; BSR set to: 1
 21569                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21570                           
 21571                           ; BSR set to: 1
 21572  00B198  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21573  00B19C  0100               	movlb	0	; () banked
 21574  00B19E  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21575  00B1A0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21576  00B1A2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21577  00B1A4  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21578  00B1A8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21579  00B1AA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21580  00B1AC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21581  00B1AE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21582  00B1B0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21583  00B1B2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21584  00B1B4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21585  00B1B6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21586  00B1B8  D008               	goto	l2819
 21587  00B1BA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21588  00B1BC  E103               	bnz	u18080
 21589  00B1BE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21590  00B1C0  A0D8               	btfss	status,0,c
 21591  00B1C2  D003               	goto	l2819
 21592  00B1C4                     u18080:
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21596  00B1C4  0E01               	movlw	1
 21597  00B1C6  0101               	movlb	1	; () banked
 21598  00B1C8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21599  00B1CA                     l2819:
 21600                           
 21601                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21602                           
 21603                           ; BSR set to: 1
 21604  00B1CA  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21605  00B1CE  0100               	movlb	0	; () banked
 21606  00B1D0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21607  00B1D2  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21608  00B1D4  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21609  00B1D6  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21610  00B1DA  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21611  00B1DC  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21612  00B1DE  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21613  00B1E0  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21614  00B1E2  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21615  00B1E4  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21616  00B1E6  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21617  00B1E8  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21618  00B1EA  D2FB               	goto	l2822
 21619                           
 21620                           ; BSR set to: 0
 21621                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21622  00B1EC  0E04               	movlw	4
 21623  00B1EE  D2C2               	goto	L22
 21624  00B1F0                     
 21625                           ; BSR set to: 1
 21626  00B1F0  0101               	movlb	1	; () banked
 21627  00B1F2  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 21628                           
 21629                           ; Switch size 1, requested type "space"
 21630                           ; Number of cases is 6, Range of values is 1 to 240
 21631                           ; switch strategies available:
 21632                           ; Name         Instructions Cycles
 21633                           ; simple_byte           19    10 (average)
 21634                           ;	Chosen strategy is simple_byte
 21635  00B1F4  0A01               	xorlw	1	; case 1
 21636  00B1F6  B4D8               	btfsc	status,2,c
 21637  00B1F8  D6F7               	goto	l2790
 21638  00B1FA  0A03               	xorlw	3	; case 2
 21639  00B1FC  B4D8               	btfsc	status,2,c
 21640  00B1FE  D728               	goto	l2797
 21641  00B200  0A01               	xorlw	1	; case 3
 21642  00B202  B4D8               	btfsc	status,2,c
 21643  00B204  D759               	goto	l2803
 21644  00B206  0A07               	xorlw	7	; case 4
 21645  00B208  B4D8               	btfsc	status,2,c
 21646  00B20A  D78A               	goto	l2809
 21647  00B20C  0A01               	xorlw	1	; case 5
 21648  00B20E  B4D8               	btfsc	status,2,c
 21649  00B210  D7BB               	goto	l2815
 21650  00B212  0AF5               	xorlw	245	; case 240
 21651                           
 21652                           ; BSR set to: 1
 21653                           ;encoder.c: 268: break;
 21654  00B214  D2E6               	goto	l2822
 21655  00B216                     
 21656                           ; BSR set to: 1
 21657                           ;encoder.c: 274: if(os.button1==1)
 21658                           
 21659                           ; BSR set to: 1
 21660  00B216  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21661  00B218  A4D8               	btfss	status,2,c
 21662  00B21A  D00E               	goto	l2826
 21663                           
 21664                           ; BSR set to: 1
 21665                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 21666  00B21C  0E00               	movlw	0
 21667  00B21E  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 21668  00B220  0E00               	movlw	0
 21669  00B222  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 21670  00B224  0E00               	movlw	0
 21671  00B226  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 21672  00B228  0E00               	movlw	0
 21673  00B22A  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 21674                           
 21675                           ;encoder.c: 277: os.divide_position = 0;
 21676  00B22C  0E00               	movlw	0
 21677  00B22E  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 21678  00B230  0E00               	movlw	0
 21679  00B232  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 21680                           
 21681                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21682  00B234  0E21               	movlw	33
 21683  00B236  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21684  00B238                     l2826:
 21685                           
 21686                           ; BSR set to: 1
 21687                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 21688                           
 21689                           ; BSR set to: 1
 21690  00B238  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 21691  00B23A  0A80               	xorlw	128
 21692  00B23C  0F7F               	addlw	-129
 21693  00B23E  A0D8               	btfss	status,0,c
 21694  00B240  D002               	goto	l2827
 21695                           
 21696                           ; BSR set to: 1
 21697                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21698  00B242  0E12               	movlw	18
 21699  00B244  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21700  00B246                     l2827:
 21701                           
 21702                           ; BSR set to: 1
 21703                           ;encoder.c: 282: if(os.encoder1Count<0)
 21704                           
 21705                           ; BSR set to: 1
 21706  00B246  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 21707  00B248  D01B               	goto	l2829
 21708                           
 21709                           ; BSR set to: 1
 21710                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21711  00B24A  0E12               	movlw	18
 21712  00B24C  D00F               	goto	L10
 21713  00B24E                     
 21714                           ; BSR set to: 1
 21715                           ;encoder.c: 286: if(os.button1==1)
 21716                           
 21717                           ; BSR set to: 1
 21718  00B24E  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21719  00B250  A4D8               	btfss	status,2,c
 21720  00B252  D002               	goto	l2831
 21721                           
 21722                           ; BSR set to: 1
 21723                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21724  00B254  0E01               	movlw	1
 21725  00B256  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21726  00B258                     l2831:
 21727                           
 21728                           ; BSR set to: 1
 21729                           ;encoder.c: 288: if(os.encoder1Count>0)
 21730                           
 21731                           ; BSR set to: 1
 21732  00B258  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 21733  00B25A  0A80               	xorlw	128
 21734  00B25C  0F7F               	addlw	-129
 21735  00B25E  A0D8               	btfss	status,0,c
 21736  00B260  D002               	goto	l2832
 21737                           
 21738                           ; BSR set to: 1
 21739                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21740  00B262  0E11               	movlw	17
 21741  00B264  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21742  00B266                     l2832:
 21743                           
 21744                           ; BSR set to: 1
 21745                           ;encoder.c: 290: if(os.encoder1Count<0)
 21746                           
 21747                           ; BSR set to: 1
 21748  00B266  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 21749  00B268  D00B               	goto	l2829
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21753  00B26A  0E11               	movlw	17
 21754  00B26C                     L10:
 21755  00B26C  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21756                           
 21757                           ; BSR set to: 1
 21758                           ;encoder.c: 293: }
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;encoder.c: 292: break;
 21762  00B26E  D008               	goto	l2829
 21763  00B270                     
 21764                           ; BSR set to: 1
 21765  00B270  0101               	movlb	1	; () banked
 21766  00B272  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 21767                           
 21768                           ; Switch size 1, requested type "space"
 21769                           ; Number of cases is 2, Range of values is 17 to 18
 21770                           ; switch strategies available:
 21771                           ; Name         Instructions Cycles
 21772                           ; simple_byte            7     4 (average)
 21773                           ;	Chosen strategy is simple_byte
 21774  00B274  0A11               	xorlw	17	; case 17
 21775  00B276  B4D8               	btfsc	status,2,c
 21776  00B278  D7CE               	goto	l2825
 21777  00B27A  0A03               	xorlw	3	; case 18
 21778  00B27C  B4D8               	btfsc	status,2,c
 21779  00B27E  D7E7               	goto	l2830
 21780  00B280                     l2829:
 21781                           
 21782                           ; BSR set to: 1
 21783                           ;encoder.c: 294: if(os.button2==1)
 21784                           
 21785                           ; BSR set to: 1
 21786  00B280  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21787  00B282  A4D8               	btfss	status,2,c
 21788  00B284  D00A               	goto	l2834
 21789                           
 21790                           ; BSR set to: 1
 21791                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21792  00B286  C176  F060         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21793  00B28A  C177  F061         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21794  00B28E  EC21  F0A3         	call	__encoder_next_setup_stepsize	;wreg free
 21795  00B292  C060  F176         	movff	?__encoder_next_setup_stepsize,_os+17	;volatile
 21796  00B296  C061  F177         	movff	?__encoder_next_setup_stepsize+1,_os+18	;volatile
 21797  00B29A                     l2834:
 21798                           
 21799                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 21800  00B29A  0101               	movlb	1	; () banked
 21801  00B29C  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 21802  00B29E  0A80               	xorlw	128
 21803  00B2A0  0F7F               	addlw	-129
 21804  00B2A2  A0D8               	btfss	status,0,c
 21805  00B2A4  D010               	goto	l2836
 21806                           
 21807                           ; BSR set to: 1
 21808                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 21809  00B2A6  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 21810  00B2A8  A4D8               	btfss	status,2,c
 21811  00B2AA  D00D               	goto	l2836
 21812                           
 21813                           ; BSR set to: 1
 21814                           ;encoder.c: 302: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 21815  00B2AC  C176  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 21816  00B2B0  C177  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 21817  00B2B4  0EFF               	movlw	255
 21818  00B2B6  0100               	movlb	0	; () banked
 21819  00B2B8  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 21820  00B2BA  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 21821  00B2BC  0E01               	movlw	1
 21822  00B2BE  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 21823  00B2C0  0E01               	movlw	1
 21824  00B2C2  EC78  F0AA         	call	_motor_move_degrees_int
 21825  00B2C6                     l2836:
 21826                           
 21827                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 21828  00B2C6  0101               	movlb	1	; () banked
 21829  00B2C8  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 21830  00B2CA  D28B               	goto	l2822
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 21834  00B2CC  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 21835  00B2CE  A4D8               	btfss	status,2,c
 21836  00B2D0  D288               	goto	l2822
 21837                           
 21838                           ; BSR set to: 1
 21839                           ;encoder.c: 308: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 21840  00B2D2  C176  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 21841  00B2D6  C177  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 21842  00B2DA  0EFF               	movlw	255
 21843  00B2DC  0100               	movlb	0	; () banked
 21844  00B2DE  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 21845  00B2E0  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 21846  00B2E2  0E01               	movlw	1
 21847  00B2E4  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 21848  00B2E6  0EFF               	movlw	255
 21849  00B2E8  EC78  F0AA         	call	_motor_move_degrees_int
 21850                           
 21851                           ;encoder.c: 309: };encoder.c: 310: break;
 21852  00B2EC  D27A               	goto	l2822
 21853  00B2EE                     
 21854                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 21855  00B2EE  0101               	movlb	1	; () banked
 21856  00B2F0  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21857  00B2F2  B4D8               	btfsc	status,2,c
 21858  00B2F4  D003               	goto	u18220
 21859                           
 21860                           ; BSR set to: 1
 21861  00B2F6  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21862  00B2F8  A4D8               	btfss	status,2,c
 21863  00B2FA  D003               	goto	l2842
 21864  00B2FC                     u18220:
 21865                           
 21866                           ; BSR set to: 1
 21867                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 21868                           
 21869                           ; BSR set to: 1
 21870  00B2FC  0EFF               	movlw	255
 21871  00B2FE  EC14  F0AC         	call	_motor_set_zero
 21872  00B302                     l2842:
 21873                           
 21874                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 21875  00B302  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21876  00B306  0100               	movlb	0	; () banked
 21877  00B308  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21878  00B30A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21879  00B30C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21880  00B30E  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21881  00B312  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21882  00B314  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21883  00B316  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21884  00B318  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21885  00B31A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21886  00B31C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21887  00B31E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21888  00B320  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21889  00B322  D008               	goto	l2845
 21890  00B324  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21891  00B326  E103               	bnz	u18230
 21892  00B328  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21893  00B32A  A0D8               	btfss	status,0,c
 21894  00B32C  D003               	goto	l2845
 21895  00B32E                     u18230:
 21896                           
 21897                           ; BSR set to: 0
 21898                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21899  00B32E  0E22               	movlw	34
 21900  00B330  0101               	movlb	1	; () banked
 21901  00B332  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21902  00B334                     l2845:
 21903                           
 21904                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 21905                           
 21906                           ; BSR set to: 1
 21907  00B334  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21908  00B338  0100               	movlb	0	; () banked
 21909  00B33A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21910  00B33C  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21911  00B33E  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21912  00B340  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21913  00B344  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21914  00B346  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21915  00B348  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21916  00B34A  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21917  00B34C  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21918  00B34E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21919  00B350  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21920  00B352  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21921  00B354  D246               	goto	l2822
 21922                           
 21923                           ; BSR set to: 0
 21924                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21925  00B356  0E22               	movlw	34
 21926  00B358  D20D               	goto	L22
 21927  00B35A                     
 21928                           ; BSR set to: 1
 21929                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 21930                           
 21931                           ; BSR set to: 1
 21932  00B35A  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21933  00B35C  B4D8               	btfsc	status,2,c
 21934  00B35E  D003               	goto	u18260
 21935                           
 21936                           ; BSR set to: 1
 21937  00B360  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21938  00B362  A4D8               	btfss	status,2,c
 21939  00B364  D003               	goto	l2849
 21940  00B366                     u18260:
 21941                           
 21942                           ; BSR set to: 1
 21943                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 21944                           
 21945                           ; BSR set to: 1
 21946  00B366  0E01               	movlw	1
 21947  00B368  EC14  F0AC         	call	_motor_set_zero
 21948  00B36C                     l2849:
 21949                           
 21950                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 21951  00B36C  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21952  00B370  0100               	movlb	0	; () banked
 21953  00B372  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21954  00B374  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21955  00B376  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21956  00B378  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21957  00B37C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21958  00B37E  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21959  00B380  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21960  00B382  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21961  00B384  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21962  00B386  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21963  00B388  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21964  00B38A  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21965  00B38C  D008               	goto	l2852
 21966  00B38E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21967  00B390  E103               	bnz	u18270
 21968  00B392  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21969  00B394  A0D8               	btfss	status,0,c
 21970  00B396  D003               	goto	l2852
 21971  00B398                     u18270:
 21972                           
 21973                           ; BSR set to: 0
 21974                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21975  00B398  0E21               	movlw	33
 21976  00B39A  0101               	movlb	1	; () banked
 21977  00B39C  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21978  00B39E                     l2852:
 21979                           
 21980                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 21981                           
 21982                           ; BSR set to: 1
 21983  00B39E  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21984  00B3A2  0100               	movlb	0	; () banked
 21985  00B3A4  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21986  00B3A6  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21987  00B3A8  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21988  00B3AA  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21989  00B3AE  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21990  00B3B0  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21991  00B3B2  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21992  00B3B4  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21993  00B3B6  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21994  00B3B8  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21995  00B3BA  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21996  00B3BC  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21997  00B3BE  D211               	goto	l2822
 21998                           
 21999                           ; BSR set to: 0
 22000                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22001  00B3C0  0E21               	movlw	33
 22002  00B3C2  D1D8               	goto	L22
 22003  00B3C4                     
 22004                           ; BSR set to: 1
 22005  00B3C4  0101               	movlb	1	; () banked
 22006  00B3C6  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22007                           
 22008                           ; Switch size 1, requested type "space"
 22009                           ; Number of cases is 2, Range of values is 33 to 34
 22010                           ; switch strategies available:
 22011                           ; Name         Instructions Cycles
 22012                           ; simple_byte            7     4 (average)
 22013                           ;	Chosen strategy is simple_byte
 22014  00B3C8  0A21               	xorlw	33	; case 33
 22015  00B3CA  B4D8               	btfsc	status,2,c
 22016  00B3CC  D790               	goto	l2841
 22017  00B3CE  0A03               	xorlw	3	; case 34
 22018  00B3D0  B4D8               	btfsc	status,2,c
 22019  00B3D2  D7C3               	goto	l2848
 22020                           
 22021                           ; BSR set to: 1
 22022                           ;encoder.c: 336: break;
 22023  00B3D4  D206               	goto	l2822
 22024  00B3D6                     
 22025                           ; BSR set to: 1
 22026                           ;encoder.c: 342: if(os.button1==1)
 22027                           
 22028                           ; BSR set to: 1
 22029  00B3D6  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22030  00B3D8  A4D8               	btfss	status,2,c
 22031  00B3DA  D005               	goto	l2857
 22032                           
 22033                           ; BSR set to: 1
 22034                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22035  00B3DC  ECB2  F07D         	call	_motor_divide_jump_to_nearest	;wreg free
 22036                           
 22037                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22038  00B3E0  0E41               	movlw	65
 22039  00B3E2  0101               	movlb	1	; () banked
 22040  00B3E4  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22041  00B3E6                     l2857:
 22042                           
 22043                           ; BSR set to: 1
 22044                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22045                           
 22046                           ; BSR set to: 1
 22047  00B3E6  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22048  00B3E8  0A80               	xorlw	128
 22049  00B3EA  0F7F               	addlw	-129
 22050  00B3EC  A0D8               	btfss	status,0,c
 22051  00B3EE  D002               	goto	l2858
 22052                           
 22053                           ; BSR set to: 1
 22054                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22055  00B3F0  0E32               	movlw	50
 22056  00B3F2  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22057  00B3F4                     l2858:
 22058                           
 22059                           ; BSR set to: 1
 22060                           ;encoder.c: 350: if(os.encoder1Count<0)
 22061                           
 22062                           ; BSR set to: 1
 22063  00B3F4  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22064  00B3F6  D01B               	goto	l2860
 22065                           
 22066                           ; BSR set to: 1
 22067                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22068  00B3F8  0E32               	movlw	50
 22069  00B3FA  D00F               	goto	L13
 22070  00B3FC                     
 22071                           ; BSR set to: 1
 22072                           ;encoder.c: 354: if(os.button1==1)
 22073                           
 22074                           ; BSR set to: 1
 22075  00B3FC  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22076  00B3FE  A4D8               	btfss	status,2,c
 22077  00B400  D002               	goto	l2862
 22078                           
 22079                           ; BSR set to: 1
 22080                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22081  00B402  0E02               	movlw	2
 22082  00B404  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22083  00B406                     l2862:
 22084                           
 22085                           ; BSR set to: 1
 22086                           ;encoder.c: 356: if(os.encoder1Count>0)
 22087                           
 22088                           ; BSR set to: 1
 22089  00B406  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22090  00B408  0A80               	xorlw	128
 22091  00B40A  0F7F               	addlw	-129
 22092  00B40C  A0D8               	btfss	status,0,c
 22093  00B40E  D002               	goto	l2863
 22094                           
 22095                           ; BSR set to: 1
 22096                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22097  00B410  0E31               	movlw	49
 22098  00B412  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22099  00B414                     l2863:
 22100                           
 22101                           ; BSR set to: 1
 22102                           ;encoder.c: 358: if(os.encoder1Count<0)
 22103                           
 22104                           ; BSR set to: 1
 22105  00B414  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22106  00B416  D00B               	goto	l2860
 22107                           
 22108                           ; BSR set to: 1
 22109                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22110  00B418  0E31               	movlw	49
 22111  00B41A                     L13:
 22112  00B41A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22113                           
 22114                           ; BSR set to: 1
 22115                           ;encoder.c: 361: }
 22116                           
 22117                           ; BSR set to: 1
 22118                           ;encoder.c: 360: break;
 22119  00B41C  D008               	goto	l2860
 22120  00B41E                     
 22121                           ; BSR set to: 1
 22122  00B41E  0101               	movlb	1	; () banked
 22123  00B420  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22124                           
 22125                           ; Switch size 1, requested type "space"
 22126                           ; Number of cases is 2, Range of values is 49 to 50
 22127                           ; switch strategies available:
 22128                           ; Name         Instructions Cycles
 22129                           ; simple_byte            7     4 (average)
 22130                           ;	Chosen strategy is simple_byte
 22131  00B422  0A31               	xorlw	49	; case 49
 22132  00B424  B4D8               	btfsc	status,2,c
 22133  00B426  D7D7               	goto	l2856
 22134  00B428  0A03               	xorlw	3	; case 50
 22135  00B42A  B4D8               	btfsc	status,2,c
 22136  00B42C  D7E7               	goto	l2861
 22137  00B42E                     l2860:
 22138                           
 22139                           ; BSR set to: 1
 22140                           ;encoder.c: 362: if(os.button2==1)
 22141                           
 22142                           ; BSR set to: 1
 22143  00B42E  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22144  00B430  A4D8               	btfss	status,2,c
 22145  00B432  D005               	goto	l2865
 22146                           
 22147                           ; BSR set to: 1
 22148                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22149  00B434  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22150  00B436  ECDA  F0AD         	call	__encoder_next_divide_step_size
 22151  00B43A  0101               	movlb	1	; () banked
 22152  00B43C  6F7B               	movwf	(_os+22)& (0+255),b	;volatile
 22153  00B43E                     l2865:
 22154                           
 22155                           ; BSR set to: 1
 22156                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22157                           
 22158                           ; BSR set to: 1
 22159  00B43E  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22160  00B440  0A80               	xorlw	128
 22161  00B442  0F7F               	addlw	-129
 22162  00B444  A0D8               	btfss	status,0,c
 22163  00B446  D004               	goto	l2866
 22164                           
 22165                           ; BSR set to: 1
 22166                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22167  00B448  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22168  00B44A  2779               	addwf	(_os+20)& (0+255),f,b	;volatile
 22169  00B44C  0E00               	movlw	0
 22170  00B44E  237A               	addwfc	(_os+21)& (0+255),f,b	;volatile
 22171  00B450                     l2866:
 22172                           
 22173                           ; BSR set to: 1
 22174                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22175  00B450  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22176  00B452  D1C7               	goto	l2822
 22177                           
 22178                           ; BSR set to: 1
 22179                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22180  00B454  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22181  00B456  0100               	movlb	0	; () banked
 22182  00B458  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22183  00B45A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22184  00B45C  0101               	movlb	1	; () banked
 22185  00B45E  5179               	movf	(_os+20)& (0+255),w,b	;volatile
 22186  00B460  0100               	movlb	0	; () banked
 22187  00B462  5DA8               	subwf	??_encoder_statemachine& (0+255),w,b
 22188  00B464  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22189  00B466  0A80               	xorlw	128
 22190  00B468  6FAA               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22191  00B46A  0101               	movlb	1	; () banked
 22192  00B46C  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 22193  00B46E  0A80               	xorlw	128
 22194  00B470  0100               	movlb	0	; () banked
 22195  00B472  59AA               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22196  00B474  B0D8               	btfsc	status,0,c
 22197  00B476  D006               	goto	l2868
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22201  00B478  0101               	movlb	1	; () banked
 22202  00B47A  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22203  00B47C  5F79               	subwf	(_os+20)& (0+255),f,b	;volatile
 22204  00B47E  0E00               	movlw	0
 22205  00B480  5B7A               	subwfb	(_os+21)& (0+255),f,b	;volatile
 22206                           
 22207                           ;encoder.c: 375: }
 22208  00B482  D1AF               	goto	l2822
 22209  00B484                     l2868:
 22210                           
 22211                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22212                           
 22213                           ; BSR set to: 1
 22214  00B484  0E00               	movlw	0
 22215  00B486  0101               	movlb	1	; () banked
 22216  00B488  6F7A               	movwf	(_os+21)& (0+255),b	;volatile
 22217  00B48A  0E01               	movlw	1
 22218  00B48C  6F79               	movwf	(_os+20)& (0+255),b	;volatile
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22222                           
 22223                           ; BSR set to: 1
 22224  00B48E  D1A9               	goto	l2822
 22225  00B490                     
 22226                           ;encoder.c: 384: if(os.button1==1)
 22227                           
 22228                           ; BSR set to: 1
 22229  00B490  0101               	movlb	1	; () banked
 22230  00B492  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22231  00B494  A4D8               	btfss	status,2,c
 22232  00B496  D002               	goto	l2871
 22233                           
 22234                           ; BSR set to: 1
 22235                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22236  00B498  0E02               	movlw	2
 22237  00B49A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22238  00B49C                     l2871:
 22239                           
 22240                           ; BSR set to: 1
 22241                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22242                           
 22243                           ; BSR set to: 1
 22244  00B49C  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22245  00B49E  B4D8               	btfsc	status,2,c
 22246                           
 22247                           ; BSR set to: 1
 22248                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22249  00B4A0  EC13  F098         	call	_motor_divide_jump	;wreg free
 22250                           
 22251                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22252  00B4A4  0101               	movlb	1	; () banked
 22253  00B4A6  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22254  00B4A8  0A80               	xorlw	128
 22255  00B4AA  0F7F               	addlw	-129
 22256  00B4AC  B0D8               	btfsc	status,0,c
 22257                           
 22258                           ; BSR set to: 1
 22259                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22260  00B4AE  ECD5  F0AB         	call	__divide_jump_size_increment	;wreg free
 22261                           
 22262                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22263  00B4B2  0101               	movlb	1	; () banked
 22264  00B4B4  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22265  00B4B6  D195               	goto	l2822
 22266                           
 22267                           ; BSR set to: 1
 22268                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22269  00B4B8  ECC8  F0A3         	call	__divide_jump_size_decrement	;wreg free
 22270                           
 22271                           ;encoder.c: 399: };encoder.c: 400: break;
 22272  00B4BC  D192               	goto	l2822
 22273  00B4BE                     
 22274                           ;encoder.c: 406: if(os.button1==1)
 22275  00B4BE  0101               	movlb	1	; () banked
 22276  00B4C0  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22277  00B4C2  A4D8               	btfss	status,2,c
 22278  00B4C4  D002               	goto	l2878
 22279                           
 22280                           ; BSR set to: 1
 22281                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22282  00B4C6  0E62               	movlw	98
 22283  00B4C8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22284  00B4CA                     l2878:
 22285                           
 22286                           ; BSR set to: 1
 22287                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22288                           
 22289                           ; BSR set to: 1
 22290  00B4CA  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22291  00B4CC  0A80               	xorlw	128
 22292  00B4CE  0F7F               	addlw	-129
 22293  00B4D0  A0D8               	btfss	status,0,c
 22294  00B4D2  D002               	goto	l2879
 22295                           
 22296                           ; BSR set to: 1
 22297                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22298  00B4D4  0E52               	movlw	82
 22299  00B4D6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22300  00B4D8                     l2879:
 22301                           
 22302                           ; BSR set to: 1
 22303                           ;encoder.c: 412: if(os.encoder1Count<0)
 22304                           
 22305                           ; BSR set to: 1
 22306  00B4D8  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22307  00B4DA  D01B               	goto	l2881
 22308                           
 22309                           ; BSR set to: 1
 22310                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22311  00B4DC  0E52               	movlw	82
 22312  00B4DE  D00F               	goto	L14
 22313  00B4E0                     
 22314                           ; BSR set to: 1
 22315                           ;encoder.c: 416: if(os.button1==1)
 22316                           
 22317                           ; BSR set to: 1
 22318  00B4E0  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22319  00B4E2  A4D8               	btfss	status,2,c
 22320  00B4E4  D002               	goto	l2883
 22321                           
 22322                           ; BSR set to: 1
 22323                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22324  00B4E6  0E03               	movlw	3
 22325  00B4E8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22326  00B4EA                     l2883:
 22327                           
 22328                           ; BSR set to: 1
 22329                           ;encoder.c: 418: if(os.encoder1Count>0)
 22330                           
 22331                           ; BSR set to: 1
 22332  00B4EA  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22333  00B4EC  0A80               	xorlw	128
 22334  00B4EE  0F7F               	addlw	-129
 22335  00B4F0  A0D8               	btfss	status,0,c
 22336  00B4F2  D002               	goto	l2884
 22337                           
 22338                           ; BSR set to: 1
 22339                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22340  00B4F4  0E51               	movlw	81
 22341  00B4F6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22342  00B4F8                     l2884:
 22343                           
 22344                           ; BSR set to: 1
 22345                           ;encoder.c: 420: if(os.encoder1Count<0)
 22346                           
 22347                           ; BSR set to: 1
 22348  00B4F8  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22349  00B4FA  D00B               	goto	l2881
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22353  00B4FC  0E51               	movlw	81
 22354  00B4FE                     L14:
 22355  00B4FE  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22356                           
 22357                           ; BSR set to: 1
 22358                           ;encoder.c: 423: }
 22359                           
 22360                           ; BSR set to: 1
 22361                           ;encoder.c: 422: break;
 22362  00B500  D008               	goto	l2881
 22363  00B502                     
 22364                           ; BSR set to: 1
 22365  00B502  0101               	movlb	1	; () banked
 22366  00B504  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22367                           
 22368                           ; Switch size 1, requested type "space"
 22369                           ; Number of cases is 2, Range of values is 81 to 82
 22370                           ; switch strategies available:
 22371                           ; Name         Instructions Cycles
 22372                           ; simple_byte            7     4 (average)
 22373                           ;	Chosen strategy is simple_byte
 22374  00B506  0A51               	xorlw	81	; case 81
 22375  00B508  B4D8               	btfsc	status,2,c
 22376  00B50A  D7D9               	goto	l2877
 22377  00B50C  0A03               	xorlw	3	; case 82
 22378  00B50E  B4D8               	btfsc	status,2,c
 22379  00B510  D7E7               	goto	l2882
 22380  00B512                     l2881:
 22381                           
 22382                           ; BSR set to: 1
 22383                           ;encoder.c: 424: if(os.button2==1)
 22384                           
 22385                           ; BSR set to: 1
 22386  00B512  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22387  00B514  A4D8               	btfss	status,2,c
 22388  00B516  D00A               	goto	l2886
 22389                           
 22390                           ; BSR set to: 1
 22391                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22392  00B518  C180  F060         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize	;volatile
 22393  00B51C  C181  F061         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22394  00B520  EC59  F0A3         	call	__encoder_next_arc_step_size	;wreg free
 22395  00B524  C060  F180         	movff	?__encoder_next_arc_step_size,_os+27	;volatile
 22396  00B528  C061  F181         	movff	?__encoder_next_arc_step_size+1,_os+28	;volatile
 22397  00B52C                     l2886:
 22398                           
 22399                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22400  00B52C  0101               	movlb	1	; () banked
 22401  00B52E  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22402  00B530  0A80               	xorlw	128
 22403  00B532  0F7F               	addlw	-129
 22404  00B534  A0D8               	btfss	status,0,c
 22405  00B536  D01C               	goto	l2888
 22406                           
 22407                           ; BSR set to: 1
 22408                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22409  00B538  5180               	movf	(_os+27)& (0+255),w,b	;volatile
 22410  00B53A  2782               	addwf	(_os+29)& (0+255),f,b	;volatile
 22411  00B53C  5181               	movf	(_os+28)& (0+255),w,b	;volatile
 22412  00B53E  2383               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22413  00B540  0E00               	movlw	0
 22414  00B542  2384               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22415  00B544  0E00               	movlw	0
 22416  00B546  2385               	addwfc	(_os+32)& (0+255),f,b	;volatile
 22417                           
 22418                           ; BSR set to: 1
 22419                           ;encoder.c: 431: if(os.arc_size>100000)
 22420  00B548  BF85               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22421  00B54A  D012               	goto	l2888
 22422  00B54C  5185               	movf	(_os+32)& (0+255),w,b	;volatile
 22423  00B54E  E108               	bnz	u18510
 22424  00B550  0EA1               	movlw	161
 22425  00B552  5D82               	subwf	(_os+29)& (0+255),w,b	;volatile
 22426  00B554  0E86               	movlw	134
 22427  00B556  5983               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22428  00B558  0E01               	movlw	1
 22429  00B55A  5984               	subwfb	(_os+31)& (0+255),w,b	;volatile
 22430  00B55C  A0D8               	btfss	status,0,c
 22431  00B55E  D008               	goto	l2888
 22432  00B560                     u18510:
 22433                           
 22434                           ; BSR set to: 1
 22435                           ;encoder.c: 432: os.arc_size = 100000;
 22436  00B560  0EA0               	movlw	160
 22437  00B562  6F82               	movwf	(_os+29)& (0+255),b	;volatile
 22438  00B564  0E86               	movlw	134
 22439  00B566  6F83               	movwf	(_os+30)& (0+255),b	;volatile
 22440  00B568  0E01               	movlw	1
 22441  00B56A  6F84               	movwf	(_os+31)& (0+255),b	;volatile
 22442  00B56C  0E00               	movlw	0
 22443  00B56E  6F85               	movwf	(_os+32)& (0+255),b	;volatile
 22444  00B570                     l2888:
 22445                           
 22446                           ; BSR set to: 1
 22447                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22448                           
 22449                           ; BSR set to: 1
 22450                           
 22451                           ; BSR set to: 1
 22452  00B570  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22453  00B572  D137               	goto	l2822
 22454                           
 22455                           ; BSR set to: 1
 22456                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22457  00B574  5180               	movf	(_os+27)& (0+255),w,b	;volatile
 22458  00B576  0100               	movlb	0	; () banked
 22459  00B578  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22460  00B57A  0101               	movlb	1	; () banked
 22461  00B57C  5181               	movf	(_os+28)& (0+255),w,b	;volatile
 22462  00B57E  0100               	movlb	0	; () banked
 22463  00B580  6FA9               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22464  00B582  6BAA               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22465  00B584  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22466  00B586  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22467  00B588  0101               	movlb	1	; () banked
 22468  00B58A  5F82               	subwf	(_os+29)& (0+255),f,b	;volatile
 22469  00B58C  0100               	movlb	0	; () banked
 22470  00B58E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22471  00B590  0101               	movlb	1	; () banked
 22472  00B592  5B83               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22473  00B594  0100               	movlb	0	; () banked
 22474  00B596  51AA               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22475  00B598  0101               	movlb	1	; () banked
 22476  00B59A  5B84               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22477  00B59C  0100               	movlb	0	; () banked
 22478  00B59E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22479  00B5A0  0101               	movlb	1	; () banked
 22480  00B5A2  5B85               	subwfb	(_os+32)& (0+255),f,b	;volatile
 22481                           
 22482                           ;encoder.c: 437: if(os.arc_size<1)
 22483  00B5A4  BF85               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22484  00B5A6  D007               	goto	u18530
 22485  00B5A8  5185               	movf	(_os+32)& (0+255),w,b	;volatile
 22486  00B5AA  1184               	iorwf	(_os+31)& (0+255),w,b	;volatile
 22487  00B5AC  1183               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22488  00B5AE  E102               	bnz	u18531
 22489  00B5B0  0582               	decf	(_os+29)& (0+255),w,b	;volatile
 22490  00B5B2  B0D8               	btfsc	status,0,c
 22491  00B5B4                     u18531:
 22492  00B5B4  D116               	goto	l2822
 22493  00B5B6                     u18530:
 22494                           
 22495                           ; BSR set to: 1
 22496                           ;encoder.c: 438: os.arc_size = 1;
 22497  00B5B6  0E01               	movlw	1
 22498  00B5B8  6F82               	movwf	(_os+29)& (0+255),b	;volatile
 22499  00B5BA  0E00               	movlw	0
 22500  00B5BC  6F83               	movwf	(_os+30)& (0+255),b	;volatile
 22501  00B5BE  0E00               	movlw	0
 22502  00B5C0  6F84               	movwf	(_os+31)& (0+255),b	;volatile
 22503  00B5C2  0E00               	movlw	0
 22504  00B5C4  6F85               	movwf	(_os+32)& (0+255),b	;volatile
 22505                           
 22506                           ; BSR set to: 1
 22507                           ;encoder.c: 439: };encoder.c: 440: break;
 22508                           
 22509                           ; BSR set to: 1
 22510  00B5C6  D10D               	goto	l2822
 22511  00B5C8                     
 22512                           ;encoder.c: 443: if(os.encoder1Count>0)
 22513                           
 22514                           ; BSR set to: 1
 22515  00B5C8  0101               	movlb	1	; () banked
 22516  00B5CA  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22517  00B5CC  0A80               	xorlw	128
 22518  00B5CE  0F7F               	addlw	-129
 22519  00B5D0  A0D8               	btfss	status,0,c
 22520  00B5D2  D011               	goto	l2894
 22521                           
 22522                           ; BSR set to: 1
 22523                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22524  00B5D4  51A5               	movf	(_config+15)& (0+255),w,b
 22525  00B5D6  5D86               	subwf	(_os+33)& (0+255),w,b	;volatile
 22526  00B5D8  51A6               	movf	(_config+16)& (0+255),w,b
 22527  00B5DA  5987               	subwfb	(_os+34)& (0+255),w,b	;volatile
 22528  00B5DC  B0D8               	btfsc	status,0,c
 22529  00B5DE  D002               	goto	l2893
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;encoder.c: 446: ++os.arc_speed;
 22533  00B5E0  4B86               	infsnz	(_os+33)& (0+255),f,b	;volatile
 22534  00B5E2  2B87               	incf	(_os+34)& (0+255),f,b	;volatile
 22535  00B5E4                     l2893:
 22536                           
 22537                           ; BSR set to: 1
 22538                           ;encoder.c: 447: if(os.busy)
 22539                           
 22540                           ; BSR set to: 1
 22541  00B5E4  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 22542  00B5E6  B4D8               	btfsc	status,2,c
 22543  00B5E8  D006               	goto	l2894
 22544                           
 22545                           ; BSR set to: 1
 22546                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 22547  00B5EA  C186  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 22548  00B5EE  C187  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 22549  00B5F2  EC77  F0B0         	call	_motor_change_speed	;wreg free
 22550  00B5F6                     l2894:
 22551                           
 22552                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 22553  00B5F6  0101               	movlb	1	; () banked
 22554  00B5F8  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22555  00B5FA  D046               	goto	l2898
 22556                           
 22557                           ; BSR set to: 1
 22558                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 22559  00B5FC  5186               	movf	(_os+33)& (0+255),w,b	;volatile
 22560  00B5FE  5D9F               	subwf	(_config+9)& (0+255),w,b
 22561  00B600  5187               	movf	(_os+34)& (0+255),w,b	;volatile
 22562  00B602  59A0               	subwfb	(_config+10)& (0+255),w,b
 22563  00B604  B0D8               	btfsc	status,0,c
 22564  00B606  D003               	goto	l2896
 22565                           
 22566                           ; BSR set to: 1
 22567                           ;encoder.c: 453: --os.arc_speed;
 22568  00B608  0786               	decf	(_os+33)& (0+255),f,b	;volatile
 22569  00B60A  A0D8               	btfss	status,0,c
 22570  00B60C  0787               	decf	(_os+34)& (0+255),f,b	;volatile
 22571  00B60E                     l2896:
 22572                           
 22573                           ; BSR set to: 1
 22574                           ;encoder.c: 454: if(os.busy)
 22575                           
 22576                           ; BSR set to: 1
 22577  00B60E  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 22578  00B610  B4D8               	btfsc	status,2,c
 22579  00B612  D03A               	goto	l2898
 22580                           
 22581                           ; BSR set to: 1
 22582                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 22583  00B614  C186  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 22584  00B618  C187  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 22585  00B61C  EC77  F0B0         	call	_motor_change_speed	;wreg free
 22586                           
 22587                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 22588  00B620  D033               	goto	l2898
 22589  00B622                     
 22590                           ;encoder.c: 460: if(os.button2==1)
 22591  00B622  0101               	movlb	1	; () banked
 22592  00B624  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22593  00B626  A4D8               	btfss	status,2,c
 22594  00B628  D006               	goto	l2900
 22595                           
 22596                           ; BSR set to: 1
 22597                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 22598  00B62A  0EFF               	movlw	255
 22599  00B62C  EC8B  F090         	call	_motor_arc_move
 22600                           
 22601                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22602  00B630  0E62               	movlw	98
 22603  00B632  0101               	movlb	1	; () banked
 22604  00B634  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22605  00B636                     l2900:
 22606                           
 22607                           ; BSR set to: 1
 22608                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 22609                           
 22610                           ; BSR set to: 1
 22611  00B636  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22612  00B638  0A80               	xorlw	128
 22613  00B63A  0F7F               	addlw	-129
 22614  00B63C  A0D8               	btfss	status,0,c
 22615  00B63E  D0D1               	goto	l2822
 22616                           
 22617                           ; BSR set to: 1
 22618                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22619  00B640  0E62               	movlw	98
 22620  00B642  D099               	goto	L21
 22621  00B644                     
 22622                           ; BSR set to: 1
 22623                           ;encoder.c: 469: if(os.button2==1)
 22624                           
 22625                           ; BSR set to: 1
 22626  00B644  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22627  00B646  A4D8               	btfss	status,2,c
 22628  00B648  D007               	goto	l2904
 22629                           
 22630                           ; BSR set to: 1
 22631                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 22632  00B64A  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 22633  00B64C  A4D8               	btfss	status,2,c
 22634                           
 22635                           ; BSR set to: 1
 22636                           ;encoder.c: 472: motor_stop();
 22637  00B64E  ECDB  F0A9         	call	_motor_stop	;wreg free
 22638                           
 22639                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22640  00B652  0E03               	movlw	3
 22641  00B654  0101               	movlb	1	; () banked
 22642  00B656  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22643  00B658                     l2904:
 22644                           
 22645                           ; BSR set to: 1
 22646                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 22647                           
 22648                           ; BSR set to: 1
 22649  00B658  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22650  00B65A  0A80               	xorlw	128
 22651  00B65C  0F7F               	addlw	-129
 22652  00B65E  A0D8               	btfss	status,0,c
 22653  00B660  D002               	goto	l2906
 22654                           
 22655                           ; BSR set to: 1
 22656                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 22657  00B662  0E63               	movlw	99
 22658  00B664  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22659  00B666                     l2906:
 22660                           
 22661                           ; BSR set to: 1
 22662                           ;encoder.c: 477: if(os.encoder2Count<0)
 22663                           
 22664                           ; BSR set to: 1
 22665  00B666  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22666  00B668  D0BC               	goto	l2822
 22667                           
 22668                           ; BSR set to: 1
 22669                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 22670  00B66A  0E61               	movlw	97
 22671  00B66C  D084               	goto	L21
 22672  00B66E                     
 22673                           ; BSR set to: 1
 22674                           ;encoder.c: 481: if(os.button2==1)
 22675                           
 22676                           ; BSR set to: 1
 22677  00B66E  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22678  00B670  A4D8               	btfss	status,2,c
 22679  00B672  D006               	goto	l2909
 22680                           
 22681                           ; BSR set to: 1
 22682                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 22683  00B674  0E01               	movlw	1
 22684  00B676  EC8B  F090         	call	_motor_arc_move
 22685                           
 22686                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22687  00B67A  0E62               	movlw	98
 22688  00B67C  0101               	movlb	1	; () banked
 22689  00B67E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22690  00B680                     l2909:
 22691                           
 22692                           ; BSR set to: 1
 22693                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 22694                           
 22695                           ; BSR set to: 1
 22696  00B680  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22697  00B682  D0AF               	goto	l2822
 22698                           
 22699                           ; BSR set to: 1
 22700                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22701  00B684  0E62               	movlw	98
 22702  00B686  D077               	goto	L21
 22703  00B688                     l2898:
 22704                           
 22705                           ; BSR set to: 1
 22706  00B688  0101               	movlb	1	; () banked
 22707  00B68A  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22708                           
 22709                           ; Switch size 1, requested type "space"
 22710                           ; Number of cases is 3, Range of values is 97 to 99
 22711                           ; switch strategies available:
 22712                           ; Name         Instructions Cycles
 22713                           ; simple_byte           10     6 (average)
 22714                           ;	Chosen strategy is simple_byte
 22715  00B68C  0A61               	xorlw	97	; case 97
 22716  00B68E  B4D8               	btfsc	status,2,c
 22717  00B690  D7C8               	goto	l2899
 22718  00B692  0A03               	xorlw	3	; case 98
 22719  00B694  B4D8               	btfsc	status,2,c
 22720  00B696  D7D6               	goto	l2903
 22721  00B698  0A01               	xorlw	1	; case 99
 22722  00B69A  B4D8               	btfsc	status,2,c
 22723  00B69C  D7E8               	goto	l2908
 22724                           
 22725                           ; BSR set to: 1
 22726                           ;encoder.c: 490: break;
 22727  00B69E  D0A1               	goto	l2822
 22728  00B6A0                     
 22729                           ;encoder.c: 493: if(os.button2==1)
 22730                           
 22731                           ; BSR set to: 1
 22732  00B6A0  0101               	movlb	1	; () banked
 22733  00B6A2  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22734  00B6A4  A4D8               	btfss	status,2,c
 22735  00B6A6  D018               	goto	l2912
 22736                           
 22737                           ; BSR set to: 1
 22738                           ;encoder.c: 494: {;encoder.c: 496: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 22739  00B6A8  0E00               	movlw	0
 22740  00B6AA  0100               	movlb	0	; () banked
 22741  00B6AC  6F92               	movwf	motor_goto_steps@position& (0+255),b
 22742  00B6AE  0E00               	movlw	0
 22743  00B6B0  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 22744  00B6B2  0E00               	movlw	0
 22745  00B6B4  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 22746  00B6B6  0E00               	movlw	0
 22747  00B6B8  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 22748  00B6BA  0EFF               	movlw	255
 22749  00B6BC  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 22750  00B6BE  6996               	setf	motor_goto_steps@speed& (0+255),b
 22751  00B6C0  0E00               	movlw	0
 22752  00B6C2  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 22753  00B6C4  0E00               	movlw	0
 22754  00B6C6  EC70  F09C         	call	_motor_goto_steps
 22755                           
 22756                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22757  00B6CA  0E05               	movlw	5
 22758  00B6CC  0101               	movlb	1	; () banked
 22759  00B6CE  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22760                           
 22761                           ; BSR set to: 1
 22762                           ;encoder.c: 499: os.divide_position = 0;
 22763  00B6D0  0E00               	movlw	0
 22764  00B6D2  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 22765  00B6D4  0E00               	movlw	0
 22766  00B6D6  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 22767  00B6D8                     l2912:
 22768                           
 22769                           ; BSR set to: 1
 22770                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 22771                           
 22772                           ; BSR set to: 1
 22773  00B6D8  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22774  00B6DA  A4D8               	btfss	status,2,c
 22775  00B6DC  D082               	goto	l2822
 22776                           
 22777                           ; BSR set to: 1
 22778                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22779  00B6DE  0E05               	movlw	5
 22780  00B6E0  D04A               	goto	L21
 22781  00B6E2                     
 22782                           ;encoder.c: 508: if(os.encoder1Count>0)
 22783                           
 22784                           ; BSR set to: 1
 22785  00B6E2  0101               	movlb	1	; () banked
 22786  00B6E4  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22787  00B6E6  0A80               	xorlw	128
 22788  00B6E8  0F7F               	addlw	-129
 22789  00B6EA  B0D8               	btfsc	status,0,c
 22790                           
 22791                           ; BSR set to: 1
 22792                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 22793  00B6EC  EC3B  F0AF         	call	_motor_increase_manual_speed	;wreg free
 22794                           
 22795                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 22796  00B6F0  0101               	movlb	1	; () banked
 22797  00B6F2  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22798  00B6F4  D042               	goto	l2917
 22799                           
 22800                           ; BSR set to: 1
 22801                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 22802  00B6F6  EC81  F0AF         	call	_motor_decrease_manual_speed	;wreg free
 22803                           
 22804                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 22805  00B6FA  D03F               	goto	l2917
 22806  00B6FC                     
 22807                           ;encoder.c: 519: if(os.button2==1)
 22808  00B6FC  0101               	movlb	1	; () banked
 22809  00B6FE  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22810  00B700  A4D8               	btfss	status,2,c
 22811  00B702  D00A               	goto	l2919
 22812                           
 22813                           ; BSR set to: 1
 22814                           ;encoder.c: 520: {;encoder.c: 521: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 22815  00B704  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 22816  00B708  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 22817  00B70C  0EFF               	movlw	255
 22818  00B70E  EC08  F0AE         	call	_motor_move_endless
 22819                           
 22820                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22821  00B712  0E84               	movlw	132
 22822  00B714  0101               	movlb	1	; () banked
 22823  00B716  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22824  00B718                     l2919:
 22825                           
 22826                           ; BSR set to: 1
 22827                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 22828                           
 22829                           ; BSR set to: 1
 22830  00B718  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22831  00B71A  0A80               	xorlw	128
 22832  00B71C  0F7F               	addlw	-129
 22833  00B71E  A0D8               	btfss	status,0,c
 22834  00B720  D060               	goto	l2822
 22835                           
 22836                           ; BSR set to: 1
 22837                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22838  00B722  0E82               	movlw	130
 22839  00B724  D028               	goto	L21
 22840  00B726                     
 22841                           ; BSR set to: 1
 22842                           ;encoder.c: 528: if(os.button2==1)
 22843                           
 22844                           ; BSR set to: 1
 22845  00B726  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22846  00B728  A4D8               	btfss	status,2,c
 22847  00B72A  D002               	goto	l2923
 22848                           
 22849                           ; BSR set to: 1
 22850                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22851  00B72C  0E04               	movlw	4
 22852  00B72E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22853  00B730                     l2923:
 22854                           
 22855                           ; BSR set to: 1
 22856                           ;encoder.c: 530: if(os.encoder2Count>0)
 22857                           
 22858                           ; BSR set to: 1
 22859  00B730  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22860  00B732  0A80               	xorlw	128
 22861  00B734  0F7F               	addlw	-129
 22862  00B736  A0D8               	btfss	status,0,c
 22863  00B738  D002               	goto	l2924
 22864                           
 22865                           ; BSR set to: 1
 22866                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 22867  00B73A  0E83               	movlw	131
 22868  00B73C  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22869  00B73E                     l2924:
 22870                           
 22871                           ; BSR set to: 1
 22872                           ;encoder.c: 532: if(os.encoder2Count<0)
 22873                           
 22874                           ; BSR set to: 1
 22875  00B73E  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22876  00B740  D050               	goto	l2822
 22877                           
 22878                           ; BSR set to: 1
 22879                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 22880  00B742  0E81               	movlw	129
 22881  00B744  D018               	goto	L21
 22882  00B746                     
 22883                           ; BSR set to: 1
 22884                           ;encoder.c: 536: if(os.button2==1)
 22885                           
 22886                           ; BSR set to: 1
 22887  00B746  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22888  00B748  A4D8               	btfss	status,2,c
 22889  00B74A  D009               	goto	l2927
 22890                           
 22891                           ; BSR set to: 1
 22892                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22893  00B74C  0E84               	movlw	132
 22894  00B74E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22895                           
 22896                           ; BSR set to: 1
 22897                           ;encoder.c: 539: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 22898  00B750  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 22899  00B754  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 22900  00B758  0E01               	movlw	1
 22901  00B75A  EC08  F0AE         	call	_motor_move_endless
 22902  00B75E                     l2927:
 22903                           
 22904                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 22905  00B75E  0101               	movlb	1	; () banked
 22906  00B760  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22907  00B762  D03F               	goto	l2822
 22908                           
 22909                           ; BSR set to: 1
 22910                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22911  00B764  0E82               	movlw	130
 22912  00B766  D007               	goto	L21
 22913  00B768                     
 22914                           ; BSR set to: 1
 22915                           ;encoder.c: 545: if(os.button2==1)
 22916                           
 22917                           ; BSR set to: 1
 22918  00B768  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22919  00B76A  A4D8               	btfss	status,2,c
 22920  00B76C  D03A               	goto	l2822
 22921                           
 22922                           ; BSR set to: 1
 22923                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 22924  00B76E  ECDB  F0A9         	call	_motor_stop	;wreg free
 22925                           
 22926                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22927  00B772  0E82               	movlw	130
 22928  00B774                     L22:
 22929  00B774  0101               	movlb	1	; () banked
 22930  00B776                     L21:
 22931  00B776  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22932                           
 22933                           ; BSR set to: 1
 22934                           ;encoder.c: 551: }
 22935                           
 22936                           ; BSR set to: 1
 22937                           ;encoder.c: 549: };encoder.c: 550: break;
 22938  00B778  D034               	goto	l2822
 22939  00B77A                     l2917:
 22940                           
 22941                           ; BSR set to: 1
 22942  00B77A  0101               	movlb	1	; () banked
 22943  00B77C  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22944                           
 22945                           ; Switch size 1, requested type "space"
 22946                           ; Number of cases is 4, Range of values is 129 to 132
 22947                           ; switch strategies available:
 22948                           ; Name         Instructions Cycles
 22949                           ; simple_byte           13     7 (average)
 22950                           ;	Chosen strategy is simple_byte
 22951  00B77E  0A81               	xorlw	129	; case 129
 22952  00B780  B4D8               	btfsc	status,2,c
 22953  00B782  D7BC               	goto	l2918
 22954  00B784  0A03               	xorlw	3	; case 130
 22955  00B786  B4D8               	btfsc	status,2,c
 22956  00B788  D7CE               	goto	l2922
 22957  00B78A  0A01               	xorlw	1	; case 131
 22958  00B78C  B4D8               	btfsc	status,2,c
 22959  00B78E  D7DB               	goto	l2926
 22960  00B790  0A07               	xorlw	7	; case 132
 22961  00B792  B4D8               	btfsc	status,2,c
 22962  00B794  D7E9               	goto	l2929
 22963                           
 22964                           ; BSR set to: 1
 22965                           ;encoder.c: 553: }
 22966                           
 22967                           ; BSR set to: 1
 22968                           ;encoder.c: 552: break;
 22969  00B796  D025               	goto	l2822
 22970  00B798                     l2787:
 22971                           
 22972                           ; BSR set to: 1
 22973                           
 22974                           ; BSR set to: 1
 22975  00B798  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22976  00B79A  0BF0               	andlw	240
 22977  00B79C  0100               	movlb	0	; () banked
 22978  00B79E  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22979  00B7A0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22980                           
 22981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22982                           ; Switch size 1, requested type "space"
 22983                           ; Number of cases is 1, Range of values is 0 to 0
 22984                           ; switch strategies available:
 22985                           ; Name         Instructions Cycles
 22986                           ; simple_byte            4     3 (average)
 22987                           ;	Chosen strategy is simple_byte
 22988  00B7A2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22989  00B7A4  0A00               	xorlw	0	; case 0
 22990  00B7A6  A4D8               	btfss	status,2,c
 22991  00B7A8  D01C               	goto	l2822
 22992                           
 22993                           ; BSR set to: 0
 22994                           ; Switch size 1, requested type "space"
 22995                           ; Number of cases is 9, Range of values is 0 to 128
 22996                           ; switch strategies available:
 22997                           ; Name         Instructions Cycles
 22998                           ; simple_byte           28    15 (average)
 22999                           ;	Chosen strategy is simple_byte
 23000  00B7AA  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 23001  00B7AC  0A00               	xorlw	0	; case 0
 23002  00B7AE  B4D8               	btfsc	status,2,c
 23003  00B7B0  D51F               	goto	l2789
 23004  00B7B2  0A10               	xorlw	16	; case 16
 23005  00B7B4  B4D8               	btfsc	status,2,c
 23006  00B7B6  D55C               	goto	l2824
 23007  00B7B8  0A30               	xorlw	48	; case 32
 23008  00B7BA  B4D8               	btfsc	status,2,c
 23009  00B7BC  D603               	goto	l2840
 23010  00B7BE  0A10               	xorlw	16	; case 48
 23011  00B7C0  B4D8               	btfsc	status,2,c
 23012  00B7C2  D62D               	goto	l2855
 23013  00B7C4  0A70               	xorlw	112	; case 64
 23014  00B7C6  B4D8               	btfsc	status,2,c
 23015  00B7C8  D663               	goto	l2870
 23016  00B7CA  0A10               	xorlw	16	; case 80
 23017  00B7CC  B4D8               	btfsc	status,2,c
 23018  00B7CE  D699               	goto	l2876
 23019  00B7D0  0A30               	xorlw	48	; case 96
 23020  00B7D2  B4D8               	btfsc	status,2,c
 23021  00B7D4  D6F9               	goto	l2891
 23022  00B7D6  0A10               	xorlw	16	; case 112
 23023  00B7D8  B4D8               	btfsc	status,2,c
 23024  00B7DA  D762               	goto	l2911
 23025  00B7DC  0AF0               	xorlw	240	; case 128
 23026  00B7DE  B4D8               	btfsc	status,2,c
 23027  00B7E0  D780               	goto	l2914
 23028  00B7E2                     l2822:
 23029                           
 23030                           ;encoder.c: 556: os.encoder1Count = 0;
 23031                           
 23032                           ; BSR set to: 0
 23033  00B7E2  0E00               	movlw	0
 23034  00B7E4  0101               	movlb	1	; () banked
 23035  00B7E6  6F68               	movwf	(_os+3)& (0+255),b	;volatile
 23036                           
 23037                           ;encoder.c: 557: os.encoder2Count = 0;
 23038  00B7E8  0E00               	movlw	0
 23039  00B7EA  6F6A               	movwf	(_os+5)& (0+255),b	;volatile
 23040                           
 23041                           ;encoder.c: 558: os.button1 = 0;
 23042  00B7EC  0E00               	movlw	0
 23043  00B7EE  6F69               	movwf	(_os+4)& (0+255),b	;volatile
 23044                           
 23045                           ;encoder.c: 559: os.button2 = 0;
 23046  00B7F0  0E00               	movlw	0
 23047  00B7F2  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
 23048                           
 23049                           ; BSR set to: 1
 23050  00B7F4  0012               	return		;funcret
 23051  00B7F6                     __end_of_encoder_statemachine:
 23052                           	opt stack 0
 23053                           tblptru	equ	0xFF8
 23054                           tblptrh	equ	0xFF7
 23055                           tblptrl	equ	0xFF6
 23056                           tablat	equ	0xFF5
 23057                           prodh	equ	0xFF4
 23058                           prodl	equ	0xFF3
 23059                           intcon	equ	0xFF2
 23060                           postinc0	equ	0xFEE
 23061                           wreg	equ	0xFE8
 23062                           indf1	equ	0xFE7
 23063                           postinc1	equ	0xFE6
 23064                           postdec1	equ	0xFE5
 23065                           plusw1	equ	0xFE3
 23066                           fsr1h	equ	0xFE2
 23067                           fsr1l	equ	0xFE1
 23068                           indf2	equ	0xFDF
 23069                           postinc2	equ	0xFDE
 23070                           postdec2	equ	0xFDD
 23071                           plusw2	equ	0xFDB
 23072                           fsr2h	equ	0xFDA
 23073                           fsr2l	equ	0xFD9
 23074                           status	equ	0xFD8
 23075                           
 23076 ;; *************** function _motor_move_degrees_int *****************
 23077 ;; Defined at:
 23078 ;;		line 1023 in file "motor.c"
 23079 ;; Parameters:    Size  Location     Type
 23080 ;;  direction       1    wreg     enum E6622
 23081 ;;  distance        2   57[BANK0 ] unsigned int 
 23082 ;;  speed           2   59[BANK0 ] unsigned int 
 23083 ;;  overshoot       1   61[BANK0 ] enum E6635
 23084 ;; Auto vars:     Size  Location     Type
 23085 ;;  direction       1   66[BANK0 ] enum E6622
 23086 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 23087 ;; Return value:  Size  Location     Type
 23088 ;;                  1    wreg      enum E6639
 23089 ;; Registers used:
 23090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23091 ;; Tracked objects:
 23092 ;;		On entry : 0/0
 23093 ;;		On exit  : 0/0
 23094 ;;		Unchanged: 0/0
 23095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23096 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23097 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23099 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23100 ;;Total ram usage:       10 bytes
 23101 ;; Hardware stack levels used:    1
 23102 ;; Hardware stack levels required when called:   13
 23103 ;; This function calls:
 23104 ;;		__motor_move_steps
 23105 ;;		__motor_steps_from_degrees_int
 23106 ;; This function is called by:
 23107 ;;		_encoder_statemachine
 23108 ;; This function uses a non-reentrant model
 23109 ;;
 23110                           
 23111                           	psect	text86
 23112  0154F0                     __ptext86:
 23113                           	opt stack 0
 23114  0154F0                     _motor_move_degrees_int:
 23115                           	opt stack 16
 23116                           
 23117                           ; BSR set to: 1
 23118                           ;incstack = 0
 23119                           ;motor_move_degrees_int@direction stored from wreg
 23120  0154F0  0100               	movlb	0	; () banked
 23121  0154F2  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 23122                           
 23123                           ;motor.c: 1026: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 23124  0154F4  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 23125  0154F8  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 23126  0154FC  EC7E  F086         	call	__motor_steps_from_degrees_int	;wreg free
 23127  015500  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 23128  015504  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 23129  015508  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 23130  01550C  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 23131                           
 23132                           ;motor.c: 1029: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 23133  015510  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 23134  015514  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 23135  015518  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 23136  01551C  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 23137  015520  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 23138  015524  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 23139  015528  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 23140  01552C  0E00               	movlw	0
 23141  01552E  0100               	movlb	0	; () banked
 23142  015530  6F84               	movwf	__motor_move_steps@type& (0+255),b
 23143  015532  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 23144  015534  EC2E  F077         	call	__motor_move_steps
 23145  015538  0012               	return	
 23146  01553A                     __end_of_motor_move_degrees_int:
 23147                           	opt stack 0
 23148                           tblptru	equ	0xFF8
 23149                           tblptrh	equ	0xFF7
 23150                           tblptrl	equ	0xFF6
 23151                           tablat	equ	0xFF5
 23152                           prodh	equ	0xFF4
 23153                           prodl	equ	0xFF3
 23154                           intcon	equ	0xFF2
 23155                           postinc0	equ	0xFEE
 23156                           wreg	equ	0xFE8
 23157                           indf1	equ	0xFE7
 23158                           postinc1	equ	0xFE6
 23159                           postdec1	equ	0xFE5
 23160                           plusw1	equ	0xFE3
 23161                           fsr1h	equ	0xFE2
 23162                           fsr1l	equ	0xFE1
 23163                           indf2	equ	0xFDF
 23164                           postinc2	equ	0xFDE
 23165                           postdec2	equ	0xFDD
 23166                           plusw2	equ	0xFDB
 23167                           fsr2h	equ	0xFDA
 23168                           fsr2l	equ	0xFD9
 23169                           status	equ	0xFD8
 23170                           
 23171 ;; *************** function __motor_steps_from_degrees_int *****************
 23172 ;; Defined at:
 23173 ;;		line 426 in file "motor.c"
 23174 ;; Parameters:    Size  Location     Type
 23175 ;;  degrees         2   49[BANK0 ] unsigned int 
 23176 ;; Auto vars:     Size  Location     Type
 23177 ;;  temp            4   53[BANK0 ] unsigned int 
 23178 ;; Return value:  Size  Location     Type
 23179 ;;                  4   49[BANK0 ] unsigned long 
 23180 ;; Registers used:
 23181 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23182 ;; Tracked objects:
 23183 ;;		On entry : 0/0
 23184 ;;		On exit  : 0/0
 23185 ;;		Unchanged: 0/0
 23186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23187 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23188 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23190 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23191 ;;Total ram usage:        8 bytes
 23192 ;; Hardware stack levels used:    1
 23193 ;; Hardware stack levels required when called:   11
 23194 ;; This function calls:
 23195 ;;		___fladd
 23196 ;;		___fldiv
 23197 ;;		___flmul
 23198 ;;		___fltol
 23199 ;;		___xxtofl
 23200 ;; This function is called by:
 23201 ;;		_motor_move_degrees_int
 23202 ;;		_motor_goto_degrees_int
 23203 ;; This function uses a non-reentrant model
 23204 ;;
 23205                           
 23206                           	psect	text87
 23207  010CFC                     __ptext87:
 23208                           	opt stack 0
 23209  010CFC                     __motor_steps_from_degrees_int:
 23210                           	opt stack 17
 23211                           
 23212                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 23213                           
 23214                           ;incstack = 0
 23215  010CFC  0100               	movlb	0	; () banked
 23216  010CFE  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 23217  010D00  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 23218  010D02  A4D8               	btfss	status,2,c
 23219  010D04  D009               	goto	l2523
 23220                           
 23221                           ; BSR set to: 0
 23222                           ;motor.c: 432: {;motor.c: 433: return 0;
 23223  010D06  0E00               	movlw	0
 23224  010D08  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 23225  010D0A  0E00               	movlw	0
 23226  010D0C  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 23227  010D0E  0E00               	movlw	0
 23228  010D10  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 23229  010D12  0E00               	movlw	0
 23230  010D14  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 23231                           
 23232                           ; BSR set to: 0
 23233  010D16  0012               	return	
 23234  010D18                     l2523:
 23235                           
 23236                           ; BSR set to: 0
 23237                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 23238                           
 23239                           ; BSR set to: 0
 23240  010D18  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 23241  010D1C  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 23242  010D20  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 23243  010D22  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 23244  010D24  0E00               	movlw	0
 23245  010D26  EC42  F082         	call	___xxtofl
 23246  010D2A  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 23247  010D2E  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 23248  010D32  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 23249  010D36  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 23250                           
 23251                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 23252  010D3A  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 23253  010D3E  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 23254  010D42  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 23255  010D46  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 23256  010D4A  C196  F06A         	movff	_config,___xxtofl@val
 23257  010D4E  C197  F06B         	movff	_config+1,___xxtofl@val+1
 23258  010D52  C198  F06C         	movff	_config+2,___xxtofl@val+2
 23259  010D56  C199  F06D         	movff	_config+3,___xxtofl@val+3
 23260  010D5A  0E00               	movlw	0
 23261  010D5C  EC42  F082         	call	___xxtofl
 23262  010D60  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23263  010D64  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23264  010D68  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23265  010D6C  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23266  010D70  ECDB  F064         	call	___flmul	;wreg free
 23267  010D74  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 23268  010D78  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 23269  010D7C  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 23270  010D80  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 23271                           
 23272                           ;motor.c: 441: temp /= 36000.0;
 23273  010D84  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 23274  010D88  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 23275  010D8C  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 23276  010D90  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 23277  010D94  0E00               	movlw	0
 23278  010D96  0100               	movlb	0	; () banked
 23279  010D98  6F7C               	movwf	___fldiv@a& (0+255),b
 23280  010D9A  0EA0               	movlw	160
 23281  010D9C  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 23282  010D9E  0E0C               	movlw	12
 23283  010DA0  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 23284  010DA2  0E47               	movlw	71
 23285  010DA4  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 23286  010DA6  EC03  F06B         	call	___fldiv	;wreg free
 23287  010DAA  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 23288  010DAE  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 23289  010DB2  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 23290  010DB6  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 23291                           
 23292                           ;motor.c: 442: temp += 0.5;
 23293  010DBA  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 23294  010DBE  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 23295  010DC2  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 23296  010DC6  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 23297  010DCA  0E00               	movlw	0
 23298  010DCC  0100               	movlb	0	; () banked
 23299  010DCE  6F80               	movwf	___fladd@a& (0+255),b
 23300  010DD0  0E00               	movlw	0
 23301  010DD2  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23302  010DD4  0E00               	movlw	0
 23303  010DD6  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23304  010DD8  0E3F               	movlw	63
 23305  010DDA  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23306  010DDC  EC84  F066         	call	___fladd	;wreg free
 23307  010DE0  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 23308  010DE4  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 23309  010DE8  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 23310  010DEC  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 23311                           
 23312                           ;motor.c: 445: return (uint32_t) temp;
 23313  010DF0  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 23314  010DF4  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 23315  010DF8  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 23316  010DFC  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 23317  010E00  EC9F  F093         	call	___fltol	;wreg free
 23318  010E04  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 23319  010E08  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 23320  010E0C  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 23321  010E10  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 23322  010E14  0012               	return	
 23323  010E16                     __end_of__motor_steps_from_degrees_int:
 23324                           	opt stack 0
 23325                           tblptru	equ	0xFF8
 23326                           tblptrh	equ	0xFF7
 23327                           tblptrl	equ	0xFF6
 23328                           tablat	equ	0xFF5
 23329                           prodh	equ	0xFF4
 23330                           prodl	equ	0xFF3
 23331                           intcon	equ	0xFF2
 23332                           postinc0	equ	0xFEE
 23333                           wreg	equ	0xFE8
 23334                           indf1	equ	0xFE7
 23335                           postinc1	equ	0xFE6
 23336                           postdec1	equ	0xFE5
 23337                           plusw1	equ	0xFE3
 23338                           fsr1h	equ	0xFE2
 23339                           fsr1l	equ	0xFE1
 23340                           indf2	equ	0xFDF
 23341                           postinc2	equ	0xFDE
 23342                           postdec2	equ	0xFDD
 23343                           plusw2	equ	0xFDB
 23344                           fsr2h	equ	0xFDA
 23345                           fsr2l	equ	0xFD9
 23346                           status	equ	0xFD8
 23347                           
 23348 ;; *************** function _motor_increase_manual_speed *****************
 23349 ;; Defined at:
 23350 ;;		line 866 in file "motor.c"
 23351 ;; Parameters:    Size  Location     Type
 23352 ;;		None
 23353 ;; Auto vars:     Size  Location     Type
 23354 ;;		None
 23355 ;; Return value:  Size  Location     Type
 23356 ;;                  1    wreg      void 
 23357 ;; Registers used:
 23358 ;;		wreg, status,2, status,0, cstack
 23359 ;; Tracked objects:
 23360 ;;		On entry : 0/0
 23361 ;;		On exit  : 0/0
 23362 ;;		Unchanged: 0/0
 23363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23368 ;;Total ram usage:        0 bytes
 23369 ;; Hardware stack levels used:    1
 23370 ;; Hardware stack levels required when called:   12
 23371 ;; This function calls:
 23372 ;;		_motor_set_manual_speed
 23373 ;; This function is called by:
 23374 ;;		_encoder_statemachine
 23375 ;; This function uses a non-reentrant model
 23376 ;;
 23377                           
 23378                           	psect	text88
 23379  015E76                     __ptext88:
 23380                           	opt stack 0
 23381  015E76                     _motor_increase_manual_speed:
 23382                           	opt stack 17
 23383                           
 23384                           ;motor.c: 868: if(os.manual_speed<0xFFFF)
 23385                           
 23386                           ;incstack = 0
 23387  015E76  0101               	movlb	1	; () banked
 23388  015E78  2989               	incf	(_os+36)& (0+255),w,b	;volatile
 23389  015E7A  E103               	bnz	u17270
 23390  015E7C  298A               	incf	(_os+37)& (0+255),w,b	;volatile
 23391  015E7E  B4D8               	btfsc	status,2,c
 23392  015E80  0012               	return	
 23393  015E82                     u17270:
 23394                           
 23395                           ; BSR set to: 1
 23396                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 23397  015E82  0E01               	movlw	1
 23398  015E84  2589               	addwf	(_os+36)& (0+255),w,b	;volatile
 23399  015E86  0100               	movlb	0	; () banked
 23400  015E88  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23401  015E8A  0E00               	movlw	0
 23402  015E8C  0101               	movlb	1	; () banked
 23403  015E8E  218A               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23404  015E90  0100               	movlb	0	; () banked
 23405  015E92  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23406  015E94  ECE5  F0A2         	call	_motor_set_manual_speed	;wreg free
 23407  015E98  0012               	return	
 23408  015E9A                     __end_of_motor_increase_manual_speed:
 23409                           	opt stack 0
 23410                           tblptru	equ	0xFF8
 23411                           tblptrh	equ	0xFF7
 23412                           tblptrl	equ	0xFF6
 23413                           tablat	equ	0xFF5
 23414                           prodh	equ	0xFF4
 23415                           prodl	equ	0xFF3
 23416                           intcon	equ	0xFF2
 23417                           postinc0	equ	0xFEE
 23418                           wreg	equ	0xFE8
 23419                           indf1	equ	0xFE7
 23420                           postinc1	equ	0xFE6
 23421                           postdec1	equ	0xFE5
 23422                           plusw1	equ	0xFE3
 23423                           fsr1h	equ	0xFE2
 23424                           fsr1l	equ	0xFE1
 23425                           indf2	equ	0xFDF
 23426                           postinc2	equ	0xFDE
 23427                           postdec2	equ	0xFDD
 23428                           plusw2	equ	0xFDB
 23429                           fsr2h	equ	0xFDA
 23430                           fsr2l	equ	0xFD9
 23431                           status	equ	0xFD8
 23432                           
 23433 ;; *************** function _motor_divide_jump_to_nearest *****************
 23434 ;; Defined at:
 23435 ;;		line 944 in file "motor.c"
 23436 ;; Parameters:    Size  Location     Type
 23437 ;;		None
 23438 ;; Auto vars:     Size  Location     Type
 23439 ;;  divide_posit    4   68[BANK0 ] float 
 23440 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 23441 ;;  nearest_divi    2   66[BANK0 ] int 
 23442 ;; Return value:  Size  Location     Type
 23443 ;;                  1    wreg      void 
 23444 ;; Registers used:
 23445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23446 ;; Tracked objects:
 23447 ;;		On entry : 0/0
 23448 ;;		On exit  : 0/0
 23449 ;;		Unchanged: 0/0
 23450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23452 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23454 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23455 ;;Total ram usage:       10 bytes
 23456 ;; Hardware stack levels used:    1
 23457 ;; Hardware stack levels required when called:   14
 23458 ;; This function calls:
 23459 ;;		___fladd
 23460 ;;		___fldiv
 23461 ;;		___flmul
 23462 ;;		___fltol
 23463 ;;		___xxtofl
 23464 ;;		__step_position_from_divide_position
 23465 ;;		_motor_goto_steps
 23466 ;; This function is called by:
 23467 ;;		_encoder_statemachine
 23468 ;; This function uses a non-reentrant model
 23469 ;;
 23470                           
 23471                           	psect	text89
 23472  00FB64                     __ptext89:
 23473                           	opt stack 0
 23474  00FB64                     _motor_divide_jump_to_nearest:
 23475                           	opt stack 15
 23476                           
 23477                           ;motor.c: 946: float divide_position_float;;motor.c: 947: int16_t nearest_divide_positio
      +                          n;;motor.c: 948: uint32_t nearest_position_in_steps;;motor.c: 950: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23478                           
 23479                           ;incstack = 0
 23480  00FB64  C16C  F06A         	movff	_os+7,___xxtofl@val	;volatile
 23481  00FB68  C16D  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 23482  00FB6C  C16E  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 23483  00FB70  C16F  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 23484  00FB74  0E00               	movlw	0
 23485  00FB76  EC42  F082         	call	___xxtofl
 23486  00FB7A  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23487  00FB7E  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23488  00FB82  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23489  00FB86  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23490                           
 23491                           ;motor.c: 951: divide_position_float *= (float) os.division;
 23492  00FB8A  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23493  00FB8E  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23494  00FB92  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23495  00FB96  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23496  00FB9A  EE21  F079         	lfsr	2,_os+20	;volatile
 23497  00FB9E  CFDE F06A          	movff	postinc2,___xxtofl@val
 23498  00FBA2  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 23499  00FBA6  0100               	movlb	0	; () banked
 23500  00FBA8  0E00               	movlw	0
 23501  00FBAA  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23502  00FBAC  0EFF               	movlw	-1
 23503  00FBAE  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 23504  00FBB0  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 23505  00FBB2  0E01               	movlw	1
 23506  00FBB4  EC42  F082         	call	___xxtofl
 23507  00FBB8  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23508  00FBBC  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23509  00FBC0  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23510  00FBC4  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23511  00FBC8  ECDB  F064         	call	___flmul	;wreg free
 23512  00FBCC  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23513  00FBD0  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23514  00FBD4  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23515  00FBD8  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23516                           
 23517                           ;motor.c: 952: divide_position_float /= (float) config.full_circle_in_steps;
 23518  00FBDC  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23519  00FBE0  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23520  00FBE4  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23521  00FBE8  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23522  00FBEC  C196  F06A         	movff	_config,___xxtofl@val
 23523  00FBF0  C197  F06B         	movff	_config+1,___xxtofl@val+1
 23524  00FBF4  C198  F06C         	movff	_config+2,___xxtofl@val+2
 23525  00FBF8  C199  F06D         	movff	_config+3,___xxtofl@val+3
 23526  00FBFC  0E00               	movlw	0
 23527  00FBFE  EC42  F082         	call	___xxtofl
 23528  00FC02  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 23529  00FC06  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 23530  00FC0A  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 23531  00FC0E  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 23532  00FC12  EC03  F06B         	call	___fldiv	;wreg free
 23533  00FC16  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23534  00FC1A  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23535  00FC1E  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23536  00FC22  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23537                           
 23538                           ;motor.c: 953: divide_position_float += 0.5;
 23539  00FC26  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23540  00FC2A  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23541  00FC2E  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23542  00FC32  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23543  00FC36  0E00               	movlw	0
 23544  00FC38  0100               	movlb	0	; () banked
 23545  00FC3A  6F80               	movwf	___fladd@a& (0+255),b
 23546  00FC3C  0E00               	movlw	0
 23547  00FC3E  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23548  00FC40  0E00               	movlw	0
 23549  00FC42  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23550  00FC44  0E3F               	movlw	63
 23551  00FC46  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23552  00FC48  EC84  F066         	call	___fladd	;wreg free
 23553  00FC4C  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23554  00FC50  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23555  00FC54  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23556  00FC58  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23557                           
 23558                           ;motor.c: 954: nearest_divide_position = (int16_t) divide_position_float;
 23559  00FC5C  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23560  00FC60  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23561  00FC64  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23562  00FC68  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23563  00FC6C  EC9F  F093         	call	___fltol	;wreg free
 23564  00FC70  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23565  00FC74  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23566                           
 23567                           ;motor.c: 957: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23568  00FC78  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23569  00FC7C  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23570  00FC80  ECB8  F08E         	call	__step_position_from_divide_position	;wreg free
 23571  00FC84  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23572  00FC88  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23573  00FC8C  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23574  00FC90  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23575                           
 23576                           ;motor.c: 960: os.divide_position = nearest_divide_position;
 23577  00FC94  C0A2  F17C         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+23	;volatile
 23578  00FC98  C0A3  F17D         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+24	;volatile
 23579                           
 23580                           ;motor.c: 961: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23581  00FC9C  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 23582  00FCA0  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 23583  00FCA4  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 23584  00FCA8  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 23585  00FCAC  0EFF               	movlw	255
 23586  00FCAE  0100               	movlb	0	; () banked
 23587  00FCB0  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23588  00FCB2  6996               	setf	motor_goto_steps@speed& (0+255),b
 23589  00FCB4  0E00               	movlw	0
 23590  00FCB6  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23591  00FCB8  0E00               	movlw	0
 23592  00FCBA  EC70  F09C         	call	_motor_goto_steps
 23593  00FCBE  0012               	return		;funcret
 23594  00FCC0                     __end_of_motor_divide_jump_to_nearest:
 23595                           	opt stack 0
 23596                           tblptru	equ	0xFF8
 23597                           tblptrh	equ	0xFF7
 23598                           tblptrl	equ	0xFF6
 23599                           tablat	equ	0xFF5
 23600                           prodh	equ	0xFF4
 23601                           prodl	equ	0xFF3
 23602                           intcon	equ	0xFF2
 23603                           postinc0	equ	0xFEE
 23604                           wreg	equ	0xFE8
 23605                           indf1	equ	0xFE7
 23606                           postinc1	equ	0xFE6
 23607                           postdec1	equ	0xFE5
 23608                           plusw1	equ	0xFE3
 23609                           fsr1h	equ	0xFE2
 23610                           fsr1l	equ	0xFE1
 23611                           indf2	equ	0xFDF
 23612                           postinc2	equ	0xFDE
 23613                           postdec2	equ	0xFDD
 23614                           plusw2	equ	0xFDB
 23615                           fsr2h	equ	0xFDA
 23616                           fsr2l	equ	0xFD9
 23617                           status	equ	0xFD8
 23618                           
 23619 ;; *************** function _motor_divide_jump *****************
 23620 ;; Defined at:
 23621 ;;		line 913 in file "motor.c"
 23622 ;; Parameters:    Size  Location     Type
 23623 ;;		None
 23624 ;; Auto vars:     Size  Location     Type
 23625 ;;  target_posit    4   63[BANK0 ] unsigned long 
 23626 ;;  target_divid    2   67[BANK0 ] int 
 23627 ;; Return value:  Size  Location     Type
 23628 ;;                  1    wreg      void 
 23629 ;; Registers used:
 23630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23631 ;; Tracked objects:
 23632 ;;		On entry : 0/0
 23633 ;;		On exit  : 0/0
 23634 ;;		Unchanged: 0/0
 23635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23637 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23639 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23640 ;;Total ram usage:        7 bytes
 23641 ;; Hardware stack levels used:    1
 23642 ;; Hardware stack levels required when called:   14
 23643 ;; This function calls:
 23644 ;;		__step_position_from_divide_position
 23645 ;;		_motor_goto_steps
 23646 ;; This function is called by:
 23647 ;;		_encoder_statemachine
 23648 ;; This function uses a non-reentrant model
 23649 ;;
 23650                           
 23651                           	psect	text90
 23652  013026                     __ptext90:
 23653                           	opt stack 0
 23654  013026                     _motor_divide_jump:
 23655                           	opt stack 15
 23656                           
 23657                           ;motor.c: 915: int16_t target_divide_position;;motor.c: 916: uint32_t target_position_in
      +                          _steps;;motor.c: 919: if(os.divide_jump_size>0)
 23658                           
 23659                           ;incstack = 0
 23660  013026  0101               	movlb	1	; () banked
 23661  013028  BF7F               	btfsc	(_os+26)& (0+255),7,b	;volatile
 23662  01302A  D023               	goto	l2631
 23663  01302C  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 23664  01302E  E103               	bnz	u17290
 23665  013030  057E               	decf	(_os+25)& (0+255),w,b	;volatile
 23666  013032  A0D8               	btfss	status,0,c
 23667  013034  D01E               	goto	l2631
 23668  013036                     u17290:
 23669                           
 23670                           ; BSR set to: 1
 23671                           ;motor.c: 920: {;motor.c: 921: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 23672  013036  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 23673  013038  257C               	addwf	(_os+23)& (0+255),w,b	;volatile
 23674  01303A  0100               	movlb	0	; () banked
 23675  01303C  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23676  01303E  0101               	movlb	1	; () banked
 23677  013040  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 23678  013042  217D               	addwfc	(_os+24)& (0+255),w,b	;volatile
 23679  013044  0100               	movlb	0	; () banked
 23680  013046  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23681                           
 23682                           ;motor.c: 922: if(target_divide_position>=os.division)
 23683  013048  0101               	movlb	1	; () banked
 23684  01304A  5179               	movf	(_os+20)& (0+255),w,b	;volatile
 23685  01304C  0100               	movlb	0	; () banked
 23686  01304E  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 23687  013050  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 23688  013052  0A80               	xorlw	128
 23689  013054  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 23690  013056  0101               	movlb	1	; () banked
 23691  013058  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 23692  01305A  0A80               	xorlw	128
 23693  01305C  0100               	movlb	0	; () banked
 23694  01305E  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 23695  013060  A0D8               	btfss	status,0,c
 23696  013062  D019               	goto	l2634
 23697                           
 23698                           ; BSR set to: 0
 23699                           ;motor.c: 923: {;motor.c: 924: target_divide_position -= os.division;
 23700  013064  EE21  F079         	lfsr	2,_os+20	;volatile
 23701  013068  50DE               	movf	postinc2,w,c
 23702  01306A  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23703  01306C  50DD               	movf	postdec2,w,c
 23704  01306E  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23705                           
 23706                           ; BSR set to: 0
 23707                           ;motor.c: 925: };motor.c: 926: }
 23708  013070  D012               	goto	l2634
 23709  013072                     l2631:
 23710                           
 23711                           ;motor.c: 927: else;motor.c: 928: {;motor.c: 929: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 23712                           
 23713                           ; BSR set to: 0
 23714  013072  0101               	movlb	1	; () banked
 23715  013074  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 23716  013076  257C               	addwf	(_os+23)& (0+255),w,b	;volatile
 23717  013078  0100               	movlb	0	; () banked
 23718  01307A  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23719  01307C  0101               	movlb	1	; () banked
 23720  01307E  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 23721  013080  217D               	addwfc	(_os+24)& (0+255),w,b	;volatile
 23722  013082  0100               	movlb	0	; () banked
 23723  013084  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23724                           
 23725                           ;motor.c: 930: if(target_divide_position<0)
 23726  013086  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 23727  013088  D006               	goto	l2634
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;motor.c: 931: {;motor.c: 932: target_divide_position += os.division;
 23731  01308A  EE21  F079         	lfsr	2,_os+20	;volatile
 23732  01308E  50DE               	movf	postinc2,w,c
 23733  013090  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23734  013092  50DD               	movf	postdec2,w,c
 23735  013094  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23736  013096                     l2634:
 23737                           
 23738                           ; BSR set to: 0
 23739                           ;motor.c: 933: };motor.c: 934: };motor.c: 937: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 23740                           
 23741                           ; BSR set to: 0
 23742                           
 23743                           ; BSR set to: 0
 23744  013096  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 23745  01309A  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 23746  01309E  ECB8  F08E         	call	__step_position_from_divide_position	;wreg free
 23747  0130A2  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 23748  0130A6  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 23749  0130AA  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 23750  0130AE  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 23751                           
 23752                           ;motor.c: 940: os.divide_position = target_divide_position;
 23753  0130B2  C0A3  F17C         	movff	motor_divide_jump@target_divide_position,_os+23	;volatile
 23754  0130B6  C0A4  F17D         	movff	motor_divide_jump@target_divide_position+1,_os+24	;volatile
 23755                           
 23756                           ;motor.c: 941: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23757  0130BA  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 23758  0130BE  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 23759  0130C2  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 23760  0130C6  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 23761  0130CA  0EFF               	movlw	255
 23762  0130CC  0100               	movlb	0	; () banked
 23763  0130CE  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23764  0130D0  6996               	setf	motor_goto_steps@speed& (0+255),b
 23765  0130D2  0E00               	movlw	0
 23766  0130D4  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23767  0130D6  0E00               	movlw	0
 23768  0130D8  EC70  F09C         	call	_motor_goto_steps
 23769  0130DC  0012               	return		;funcret
 23770  0130DE                     __end_of_motor_divide_jump:
 23771                           	opt stack 0
 23772                           tblptru	equ	0xFF8
 23773                           tblptrh	equ	0xFF7
 23774                           tblptrl	equ	0xFF6
 23775                           tablat	equ	0xFF5
 23776                           prodh	equ	0xFF4
 23777                           prodl	equ	0xFF3
 23778                           intcon	equ	0xFF2
 23779                           postinc0	equ	0xFEE
 23780                           wreg	equ	0xFE8
 23781                           indf1	equ	0xFE7
 23782                           postinc1	equ	0xFE6
 23783                           postdec1	equ	0xFE5
 23784                           plusw1	equ	0xFE3
 23785                           fsr1h	equ	0xFE2
 23786                           fsr1l	equ	0xFE1
 23787                           indf2	equ	0xFDF
 23788                           postinc2	equ	0xFDE
 23789                           postdec2	equ	0xFDD
 23790                           plusw2	equ	0xFDB
 23791                           fsr2h	equ	0xFDA
 23792                           fsr2l	equ	0xFD9
 23793                           status	equ	0xFD8
 23794                           
 23795 ;; *************** function __step_position_from_divide_position *****************
 23796 ;; Defined at:
 23797 ;;		line 581 in file "motor.c"
 23798 ;; Parameters:    Size  Location     Type
 23799 ;;  divide_posit    2   49[BANK0 ] int 
 23800 ;; Auto vars:     Size  Location     Type
 23801 ;;  target_posit    4   53[BANK0 ] float 
 23802 ;; Return value:  Size  Location     Type
 23803 ;;                  4   49[BANK0 ] unsigned long 
 23804 ;; Registers used:
 23805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23806 ;; Tracked objects:
 23807 ;;		On entry : 0/0
 23808 ;;		On exit  : 0/0
 23809 ;;		Unchanged: 0/0
 23810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23811 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23812 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23814 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23815 ;;Total ram usage:        8 bytes
 23816 ;; Hardware stack levels used:    1
 23817 ;; Hardware stack levels required when called:   11
 23818 ;; This function calls:
 23819 ;;		___fldiv
 23820 ;;		___flmul
 23821 ;;		___fltol
 23822 ;;		___xxtofl
 23823 ;; This function is called by:
 23824 ;;		_motor_divide_jump
 23825 ;;		_motor_divide_jump_to_nearest
 23826 ;; This function uses a non-reentrant model
 23827 ;;
 23828                           
 23829                           	psect	text91
 23830  011D70                     __ptext91:
 23831                           	opt stack 0
 23832  011D70                     __step_position_from_divide_position:
 23833                           	opt stack 17
 23834                           
 23835                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 23836                           
 23837                           ;incstack = 0
 23838  011D70  C196  F06A         	movff	_config,___xxtofl@val
 23839  011D74  C197  F06B         	movff	_config+1,___xxtofl@val+1
 23840  011D78  C198  F06C         	movff	_config+2,___xxtofl@val+2
 23841  011D7C  C199  F06D         	movff	_config+3,___xxtofl@val+3
 23842  011D80  0E00               	movlw	0
 23843  011D82  EC42  F082         	call	___xxtofl
 23844  011D86  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 23845  011D8A  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 23846  011D8E  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 23847  011D92  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 23848                           
 23849                           ;motor.c: 587: target_position *= (float) divide_position;
 23850  011D96  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 23851  011D9A  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 23852  011D9E  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 23853  011DA2  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 23854  011DA6  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 23855  011DAA  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 23856  011DAE  0100               	movlb	0	; () banked
 23857  011DB0  0E00               	movlw	0
 23858  011DB2  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23859  011DB4  0EFF               	movlw	-1
 23860  011DB6  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 23861  011DB8  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 23862  011DBA  0E01               	movlw	1
 23863  011DBC  EC42  F082         	call	___xxtofl
 23864  011DC0  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23865  011DC4  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23866  011DC8  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23867  011DCC  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23868  011DD0  ECDB  F064         	call	___flmul	;wreg free
 23869  011DD4  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 23870  011DD8  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 23871  011DDC  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 23872  011DE0  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 23873                           
 23874                           ;motor.c: 588: target_position /= (float) os.division;
 23875  011DE4  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 23876  011DE8  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 23877  011DEC  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 23878  011DF0  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 23879  011DF4  EE21  F079         	lfsr	2,_os+20	;volatile
 23880  011DF8  CFDE F06A          	movff	postinc2,___xxtofl@val
 23881  011DFC  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 23882  011E00  0100               	movlb	0	; () banked
 23883  011E02  0E00               	movlw	0
 23884  011E04  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23885  011E06  0EFF               	movlw	-1
 23886  011E08  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 23887  011E0A  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 23888  011E0C  0E01               	movlw	1
 23889  011E0E  EC42  F082         	call	___xxtofl
 23890  011E12  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 23891  011E16  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 23892  011E1A  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 23893  011E1E  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 23894  011E22  EC03  F06B         	call	___fldiv	;wreg free
 23895  011E26  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 23896  011E2A  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 23897  011E2E  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 23898  011E32  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 23899                           
 23900                           ;motor.c: 590: return (uint32_t) target_position;
 23901  011E36  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 23902  011E3A  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 23903  011E3E  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 23904  011E42  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 23905  011E46  EC9F  F093         	call	___fltol	;wreg free
 23906  011E4A  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 23907  011E4E  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 23908  011E52  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 23909  011E56  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 23910  011E5A  0012               	return	
 23911  011E5C                     __end_of__step_position_from_divide_position:
 23912                           	opt stack 0
 23913                           tblptru	equ	0xFF8
 23914                           tblptrh	equ	0xFF7
 23915                           tblptrl	equ	0xFF6
 23916                           tablat	equ	0xFF5
 23917                           prodh	equ	0xFF4
 23918                           prodl	equ	0xFF3
 23919                           intcon	equ	0xFF2
 23920                           postinc0	equ	0xFEE
 23921                           wreg	equ	0xFE8
 23922                           indf1	equ	0xFE7
 23923                           postinc1	equ	0xFE6
 23924                           postdec1	equ	0xFE5
 23925                           plusw1	equ	0xFE3
 23926                           fsr1h	equ	0xFE2
 23927                           fsr1l	equ	0xFE1
 23928                           indf2	equ	0xFDF
 23929                           postinc2	equ	0xFDE
 23930                           postdec2	equ	0xFDD
 23931                           plusw2	equ	0xFDB
 23932                           fsr2h	equ	0xFDA
 23933                           fsr2l	equ	0xFD9
 23934                           status	equ	0xFD8
 23935                           
 23936 ;; *************** function _motor_decrease_manual_speed *****************
 23937 ;; Defined at:
 23938 ;;		line 874 in file "motor.c"
 23939 ;; Parameters:    Size  Location     Type
 23940 ;;		None
 23941 ;; Auto vars:     Size  Location     Type
 23942 ;;		None
 23943 ;; Return value:  Size  Location     Type
 23944 ;;                  1    wreg      void 
 23945 ;; Registers used:
 23946 ;;		wreg, status,2, status,0, cstack
 23947 ;; Tracked objects:
 23948 ;;		On entry : 0/0
 23949 ;;		On exit  : 0/0
 23950 ;;		Unchanged: 0/0
 23951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23956 ;;Total ram usage:        0 bytes
 23957 ;; Hardware stack levels used:    1
 23958 ;; Hardware stack levels required when called:   12
 23959 ;; This function calls:
 23960 ;;		_motor_set_manual_speed
 23961 ;; This function is called by:
 23962 ;;		_encoder_statemachine
 23963 ;; This function uses a non-reentrant model
 23964 ;;
 23965                           
 23966                           	psect	text92
 23967  015F02                     __ptext92:
 23968                           	opt stack 0
 23969  015F02                     _motor_decrease_manual_speed:
 23970                           	opt stack 17
 23971                           
 23972                           ;motor.c: 876: if(os.manual_speed>0)
 23973                           
 23974                           ;incstack = 0
 23975  015F02  0101               	movlb	1	; () banked
 23976  015F04  5189               	movf	(_os+36)& (0+255),w,b	;volatile
 23977  015F06  118A               	iorwf	(_os+37)& (0+255),w,b	;volatile
 23978  015F08  B4D8               	btfsc	status,2,c
 23979  015F0A  0012               	return	
 23980                           
 23981                           ; BSR set to: 1
 23982                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 23983  015F0C  0EFF               	movlw	255
 23984  015F0E  2589               	addwf	(_os+36)& (0+255),w,b	;volatile
 23985  015F10  0100               	movlb	0	; () banked
 23986  015F12  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23987  015F14  0EFF               	movlw	255
 23988  015F16  0101               	movlb	1	; () banked
 23989  015F18  218A               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23990  015F1A  0100               	movlb	0	; () banked
 23991  015F1C  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23992  015F1E  ECE5  F0A2         	call	_motor_set_manual_speed	;wreg free
 23993  015F22  0012               	return	
 23994  015F24                     __end_of_motor_decrease_manual_speed:
 23995                           	opt stack 0
 23996                           tblptru	equ	0xFF8
 23997                           tblptrh	equ	0xFF7
 23998                           tblptrl	equ	0xFF6
 23999                           tablat	equ	0xFF5
 24000                           prodh	equ	0xFF4
 24001                           prodl	equ	0xFF3
 24002                           intcon	equ	0xFF2
 24003                           postinc0	equ	0xFEE
 24004                           wreg	equ	0xFE8
 24005                           indf1	equ	0xFE7
 24006                           postinc1	equ	0xFE6
 24007                           postdec1	equ	0xFE5
 24008                           plusw1	equ	0xFE3
 24009                           fsr1h	equ	0xFE2
 24010                           fsr1l	equ	0xFE1
 24011                           indf2	equ	0xFDF
 24012                           postinc2	equ	0xFDE
 24013                           postdec2	equ	0xFDD
 24014                           plusw2	equ	0xFDB
 24015                           fsr2h	equ	0xFDA
 24016                           fsr2l	equ	0xFD9
 24017                           status	equ	0xFD8
 24018                           
 24019 ;; *************** function _motor_arc_move *****************
 24020 ;; Defined at:
 24021 ;;		line 964 in file "motor.c"
 24022 ;; Parameters:    Size  Location     Type
 24023 ;;  direction       1    wreg     enum E6622
 24024 ;; Auto vars:     Size  Location     Type
 24025 ;;  direction       1   52[BANK0 ] enum E6622
 24026 ;;  arc_in_steps    4   53[BANK0 ] float 
 24027 ;; Return value:  Size  Location     Type
 24028 ;;                  1    wreg      void 
 24029 ;; Registers used:
 24030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24031 ;; Tracked objects:
 24032 ;;		On entry : 0/0
 24033 ;;		On exit  : 0/0
 24034 ;;		Unchanged: 0/0
 24035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24037 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24039 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24040 ;;Total ram usage:        5 bytes
 24041 ;; Hardware stack levels used:    1
 24042 ;; Hardware stack levels required when called:   14
 24043 ;; This function calls:
 24044 ;;		___fldiv
 24045 ;;		___flmul
 24046 ;;		___fltol
 24047 ;;		___xxtofl
 24048 ;;		_motor_move_steps
 24049 ;; This function is called by:
 24050 ;;		_encoder_statemachine
 24051 ;; This function uses a non-reentrant model
 24052 ;;
 24053                           
 24054                           	psect	text93
 24055  012116                     __ptext93:
 24056                           	opt stack 0
 24057  012116                     _motor_arc_move:
 24058                           	opt stack 15
 24059                           
 24060                           ;incstack = 0
 24061                           ;motor_arc_move@direction stored from wreg
 24062  012116  0100               	movlb	0	; () banked
 24063  012118  6F94               	movwf	motor_arc_move@direction& (0+255),b
 24064                           
 24065                           ;motor.c: 966: float arc_in_steps;;motor.c: 969: arc_in_steps = (float) os.arc_size;
 24066  01211A  C182  F06A         	movff	_os+29,___xxtofl@val	;volatile
 24067  01211E  C183  F06B         	movff	_os+30,___xxtofl@val+1	;volatile
 24068  012122  C184  F06C         	movff	_os+31,___xxtofl@val+2	;volatile
 24069  012126  C185  F06D         	movff	_os+32,___xxtofl@val+3	;volatile
 24070  01212A  0E01               	movlw	1
 24071  01212C  EC42  F082         	call	___xxtofl
 24072  012130  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24073  012134  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24074  012138  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24075  01213C  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24076                           
 24077                           ;motor.c: 970: arc_in_steps *= (float) config.full_circle_in_steps;
 24078  012140  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24079  012144  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24080  012148  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24081  01214C  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24082  012150  C196  F06A         	movff	_config,___xxtofl@val
 24083  012154  C197  F06B         	movff	_config+1,___xxtofl@val+1
 24084  012158  C198  F06C         	movff	_config+2,___xxtofl@val+2
 24085  01215C  C199  F06D         	movff	_config+3,___xxtofl@val+3
 24086  012160  0E00               	movlw	0
 24087  012162  EC42  F082         	call	___xxtofl
 24088  012166  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24089  01216A  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24090  01216E  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24091  012172  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24092  012176  ECDB  F064         	call	___flmul	;wreg free
 24093  01217A  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 24094  01217E  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24095  012182  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24096  012186  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24097                           
 24098                           ;motor.c: 971: arc_in_steps /= (float) 36000.0;
 24099  01218A  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24100  01218E  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24101  012192  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24102  012196  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24103  01219A  0E00               	movlw	0
 24104  01219C  0100               	movlb	0	; () banked
 24105  01219E  6F7C               	movwf	___fldiv@a& (0+255),b
 24106  0121A0  0EA0               	movlw	160
 24107  0121A2  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 24108  0121A4  0E0C               	movlw	12
 24109  0121A6  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 24110  0121A8  0E47               	movlw	71
 24111  0121AA  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 24112  0121AC  EC03  F06B         	call	___fldiv	;wreg free
 24113  0121B0  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24114  0121B4  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24115  0121B8  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24116  0121BC  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24117                           
 24118                           ;motor.c: 974: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 24119  0121C0  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24120  0121C4  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24121  0121C8  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24122  0121CC  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24123  0121D0  EC9F  F093         	call	___fltol	;wreg free
 24124  0121D4  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 24125  0121D8  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 24126  0121DC  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 24127  0121E0  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 24128  0121E4  C186  F090         	movff	_os+33,motor_move_steps@speed	;volatile
 24129  0121E8  C187  F091         	movff	_os+34,motor_move_steps@speed+1	;volatile
 24130  0121EC  0E01               	movlw	1
 24131  0121EE  0100               	movlb	0	; () banked
 24132  0121F0  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 24133  0121F2  5194               	movf	motor_arc_move@direction& (0+255),w,b
 24134  0121F4  EC1F  F0AE         	call	_motor_move_steps
 24135  0121F8  0012               	return		;funcret
 24136  0121FA                     __end_of_motor_arc_move:
 24137                           	opt stack 0
 24138                           tblptru	equ	0xFF8
 24139                           tblptrh	equ	0xFF7
 24140                           tblptrl	equ	0xFF6
 24141                           tablat	equ	0xFF5
 24142                           prodh	equ	0xFF4
 24143                           prodl	equ	0xFF3
 24144                           intcon	equ	0xFF2
 24145                           postinc0	equ	0xFEE
 24146                           wreg	equ	0xFE8
 24147                           indf1	equ	0xFE7
 24148                           postinc1	equ	0xFE6
 24149                           postdec1	equ	0xFE5
 24150                           plusw1	equ	0xFE3
 24151                           fsr1h	equ	0xFE2
 24152                           fsr1l	equ	0xFE1
 24153                           indf2	equ	0xFDF
 24154                           postinc2	equ	0xFDE
 24155                           postdec2	equ	0xFDD
 24156                           plusw2	equ	0xFDB
 24157                           fsr2h	equ	0xFDA
 24158                           fsr2l	equ	0xFD9
 24159                           status	equ	0xFD8
 24160                           
 24161 ;; *************** function __encoder_next_setup_stepsize *****************
 24162 ;; Defined at:
 24163 ;;		line 24 in file "encoder.c"
 24164 ;; Parameters:    Size  Location     Type
 24165 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;		None
 24168 ;; Return value:  Size  Location     Type
 24169 ;;                  2    0[BANK0 ] unsigned int 
 24170 ;; Registers used:
 24171 ;;		wreg, status,2, status,0
 24172 ;; Tracked objects:
 24173 ;;		On entry : 0/0
 24174 ;;		On exit  : 0/0
 24175 ;;		Unchanged: 0/0
 24176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24180 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24181 ;;Total ram usage:        4 bytes
 24182 ;; Hardware stack levels used:    1
 24183 ;; Hardware stack levels required when called:   10
 24184 ;; This function calls:
 24185 ;;		Nothing
 24186 ;; This function is called by:
 24187 ;;		_encoder_statemachine
 24188 ;; This function uses a non-reentrant model
 24189 ;;
 24190                           
 24191                           	psect	text94
 24192  014642                     __ptext94:
 24193                           	opt stack 0
 24194  014642                     __encoder_next_setup_stepsize:
 24195                           	opt stack 19
 24196                           
 24197                           ;encoder.c: 26: switch(old_stepsize)
 24198                           
 24199                           ;incstack = 0
 24200  014642  D01A               	goto	l2718
 24201  014644                     
 24202                           ;encoder.c: 29: return 100;
 24203  014644  0E00               	movlw	0
 24204  014646  0100               	movlb	0	; () banked
 24205  014648  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24206  01464A  0E64               	movlw	100
 24207  01464C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24208                           
 24209                           ; BSR set to: 0
 24210  01464E  0012               	return	
 24211  014650                     
 24212                           ; BSR set to: 0
 24213                           ;encoder.c: 31: return 10;
 24214                           
 24215                           ; BSR set to: 0
 24216  014650  0E00               	movlw	0
 24217  014652  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24218  014654  0E0A               	movlw	10
 24219  014656  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24220                           
 24221                           ; BSR set to: 0
 24222  014658  0012               	return	
 24223  01465A                     
 24224                           ; BSR set to: 0
 24225                           ;encoder.c: 33: return 1;
 24226                           
 24227                           ; BSR set to: 0
 24228  01465A  0E00               	movlw	0
 24229  01465C  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24230  01465E  0E01               	movlw	1
 24231  014660  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24232                           
 24233                           ; BSR set to: 0
 24234  014662  0012               	return	
 24235  014664                     
 24236                           ; BSR set to: 0
 24237                           ;encoder.c: 35: return 1000;
 24238                           
 24239                           ; BSR set to: 0
 24240  014664  0E03               	movlw	3
 24241  014666  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24242  014668  0EE8               	movlw	232
 24243  01466A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24244                           
 24245                           ; BSR set to: 0
 24246  01466C  0012               	return	
 24247  01466E                     
 24248                           ; BSR set to: 0
 24249                           ;encoder.c: 37: return 100;
 24250                           
 24251                           ; BSR set to: 0
 24252  01466E  0E00               	movlw	0
 24253  014670  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24254  014672  0E64               	movlw	100
 24255  014674  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24256                           
 24257                           ; BSR set to: 0
 24258                           ;encoder.c: 38: }
 24259                           
 24260                           ; BSR set to: 0
 24261  014676  0012               	return	
 24262  014678                     l2718:
 24263                           
 24264                           ; BSR set to: 0
 24265  014678  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24266  01467C  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24267                           
 24268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24269                           ; Switch size 1, requested type "space"
 24270                           ; Number of cases is 2, Range of values is 0 to 3
 24271                           ; switch strategies available:
 24272                           ; Name         Instructions Cycles
 24273                           ; simple_byte            7     4 (average)
 24274                           ;	Chosen strategy is simple_byte
 24275  014680  0100               	movlb	0	; () banked
 24276  014682  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24277  014684  0A00               	xorlw	0	; case 0
 24278  014686  B4D8               	btfsc	status,2,c
 24279  014688  D004               	goto	l20148
 24280  01468A  0A03               	xorlw	3	; case 3
 24281  01468C  B4D8               	btfsc	status,2,c
 24282  01468E  D00C               	goto	l20150
 24283  014690  D7EE               	goto	l2724
 24284  014692                     l20148:
 24285                           
 24286                           ; BSR set to: 0
 24287                           ; Switch size 1, requested type "space"
 24288                           ; Number of cases is 3, Range of values is 1 to 100
 24289                           ; switch strategies available:
 24290                           ; Name         Instructions Cycles
 24291                           ; simple_byte           10     6 (average)
 24292                           ;	Chosen strategy is simple_byte
 24293  014692  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24294  014694  0A01               	xorlw	1	; case 1
 24295  014696  B4D8               	btfsc	status,2,c
 24296  014698  D7E5               	goto	l2723
 24297  01469A  0A0B               	xorlw	11	; case 10
 24298  01469C  B4D8               	btfsc	status,2,c
 24299  01469E  D7DD               	goto	l2722
 24300  0146A0  0A6E               	xorlw	110	; case 100
 24301  0146A2  B4D8               	btfsc	status,2,c
 24302  0146A4  D7D5               	goto	l2721
 24303  0146A6  D7E3               	goto	l2724
 24304  0146A8                     l20150:
 24305                           
 24306                           ; BSR set to: 0
 24307                           ; Switch size 1, requested type "space"
 24308                           ; Number of cases is 1, Range of values is 232 to 232
 24309                           ; switch strategies available:
 24310                           ; Name         Instructions Cycles
 24311                           ; simple_byte            4     3 (average)
 24312                           ;	Chosen strategy is simple_byte
 24313  0146A8  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24314  0146AA  0AE8               	xorlw	232	; case 232
 24315  0146AC  B4D8               	btfsc	status,2,c
 24316  0146AE  D7CA               	goto	l2719
 24317  0146B0  D7DE               	goto	l2724
 24318  0146B2                     __end_of__encoder_next_setup_stepsize:
 24319                           	opt stack 0
 24320                           tblptru	equ	0xFF8
 24321                           tblptrh	equ	0xFF7
 24322                           tblptrl	equ	0xFF6
 24323                           tablat	equ	0xFF5
 24324                           prodh	equ	0xFF4
 24325                           prodl	equ	0xFF3
 24326                           intcon	equ	0xFF2
 24327                           postinc0	equ	0xFEE
 24328                           wreg	equ	0xFE8
 24329                           indf1	equ	0xFE7
 24330                           postinc1	equ	0xFE6
 24331                           postdec1	equ	0xFE5
 24332                           plusw1	equ	0xFE3
 24333                           fsr1h	equ	0xFE2
 24334                           fsr1l	equ	0xFE1
 24335                           indf2	equ	0xFDF
 24336                           postinc2	equ	0xFDE
 24337                           postdec2	equ	0xFDD
 24338                           plusw2	equ	0xFDB
 24339                           fsr2h	equ	0xFDA
 24340                           fsr2l	equ	0xFD9
 24341                           status	equ	0xFD8
 24342                           
 24343 ;; *************** function __encoder_next_divide_step_size *****************
 24344 ;; Defined at:
 24345 ;;		line 41 in file "encoder.c"
 24346 ;; Parameters:    Size  Location     Type
 24347 ;;  old_stepsize    1    wreg     unsigned char 
 24348 ;; Auto vars:     Size  Location     Type
 24349 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24350 ;; Return value:  Size  Location     Type
 24351 ;;                  1    wreg      unsigned char 
 24352 ;; Registers used:
 24353 ;;		wreg, status,2, status,0
 24354 ;; Tracked objects:
 24355 ;;		On entry : 0/0
 24356 ;;		On exit  : 0/0
 24357 ;;		Unchanged: 0/0
 24358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24363 ;;Total ram usage:        1 bytes
 24364 ;; Hardware stack levels used:    1
 24365 ;; Hardware stack levels required when called:   10
 24366 ;; This function calls:
 24367 ;;		Nothing
 24368 ;; This function is called by:
 24369 ;;		_encoder_statemachine
 24370 ;; This function uses a non-reentrant model
 24371 ;;
 24372                           
 24373                           	psect	text95
 24374  015BB4                     __ptext95:
 24375                           	opt stack 0
 24376  015BB4                     __encoder_next_divide_step_size:
 24377                           	opt stack 19
 24378                           
 24379                           ; BSR set to: 0
 24380                           ;incstack = 0
 24381                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24382  015BB4  0100               	movlb	0	; () banked
 24383  015BB6  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24384                           
 24385                           ;encoder.c: 43: switch(old_stepsize)
 24386  015BB8  D008               	goto	l2728
 24387  015BBA                     
 24388                           ;encoder.c: 46: return 10;
 24389  015BBA  0E0A               	movlw	10
 24390  015BBC  0012               	return	
 24391  015BBE                     
 24392                           ;encoder.c: 48: return 1;
 24393  015BBE  0E01               	movlw	1
 24394  015BC0  0012               	return	
 24395  015BC2                     
 24396                           ;encoder.c: 50: return 100;
 24397  015BC2  0E64               	movlw	100
 24398  015BC4  0012               	return	
 24399  015BC6                     
 24400                           ;encoder.c: 52: return 1;
 24401  015BC6  0E01               	movlw	1
 24402                           
 24403                           ;encoder.c: 53: }
 24404  015BC8  0012               	return	
 24405  015BCA                     l2728:
 24406  015BCA  0100               	movlb	0	; () banked
 24407  015BCC  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24408                           
 24409                           ; Switch size 1, requested type "space"
 24410                           ; Number of cases is 3, Range of values is 1 to 100
 24411                           ; switch strategies available:
 24412                           ; Name         Instructions Cycles
 24413                           ; simple_byte           10     6 (average)
 24414                           ;	Chosen strategy is simple_byte
 24415  015BCE  0A01               	xorlw	1	; case 1
 24416  015BD0  B4D8               	btfsc	status,2,c
 24417  015BD2  D7F7               	goto	l2732
 24418  015BD4  0A0B               	xorlw	11	; case 10
 24419  015BD6  B4D8               	btfsc	status,2,c
 24420  015BD8  D7F2               	goto	l2731
 24421  015BDA  0A6E               	xorlw	110	; case 100
 24422  015BDC  B4D8               	btfsc	status,2,c
 24423  015BDE  D7ED               	goto	l2729
 24424  015BE0  D7F2               	goto	l2733
 24425  015BE2                     __end_of__encoder_next_divide_step_size:
 24426                           	opt stack 0
 24427                           tblptru	equ	0xFF8
 24428                           tblptrh	equ	0xFF7
 24429                           tblptrl	equ	0xFF6
 24430                           tablat	equ	0xFF5
 24431                           prodh	equ	0xFF4
 24432                           prodl	equ	0xFF3
 24433                           intcon	equ	0xFF2
 24434                           postinc0	equ	0xFEE
 24435                           wreg	equ	0xFE8
 24436                           indf1	equ	0xFE7
 24437                           postinc1	equ	0xFE6
 24438                           postdec1	equ	0xFE5
 24439                           plusw1	equ	0xFE3
 24440                           fsr1h	equ	0xFE2
 24441                           fsr1l	equ	0xFE1
 24442                           indf2	equ	0xFDF
 24443                           postinc2	equ	0xFDE
 24444                           postdec2	equ	0xFDD
 24445                           plusw2	equ	0xFDB
 24446                           fsr2h	equ	0xFDA
 24447                           fsr2l	equ	0xFD9
 24448                           status	equ	0xFD8
 24449                           
 24450 ;; *************** function __encoder_next_arc_step_size *****************
 24451 ;; Defined at:
 24452 ;;		line 56 in file "encoder.c"
 24453 ;; Parameters:    Size  Location     Type
 24454 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24455 ;; Auto vars:     Size  Location     Type
 24456 ;;		None
 24457 ;; Return value:  Size  Location     Type
 24458 ;;                  2    0[BANK0 ] unsigned int 
 24459 ;; Registers used:
 24460 ;;		wreg, status,2, status,0
 24461 ;; Tracked objects:
 24462 ;;		On entry : 0/0
 24463 ;;		On exit  : 0/0
 24464 ;;		Unchanged: 0/0
 24465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24468 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24469 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24470 ;;Total ram usage:        4 bytes
 24471 ;; Hardware stack levels used:    1
 24472 ;; Hardware stack levels required when called:   10
 24473 ;; This function calls:
 24474 ;;		Nothing
 24475 ;; This function is called by:
 24476 ;;		_encoder_statemachine
 24477 ;; This function uses a non-reentrant model
 24478 ;;
 24479                           
 24480                           	psect	text96
 24481  0146B2                     __ptext96:
 24482                           	opt stack 0
 24483  0146B2                     __encoder_next_arc_step_size:
 24484                           	opt stack 19
 24485                           
 24486                           ;encoder.c: 58: switch(old_stepsize)
 24487                           
 24488                           ;incstack = 0
 24489  0146B2  D01A               	goto	l2737
 24490  0146B4                     
 24491                           ;encoder.c: 61: return 100;
 24492  0146B4  0E00               	movlw	0
 24493  0146B6  0100               	movlb	0	; () banked
 24494  0146B8  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24495  0146BA  0E64               	movlw	100
 24496  0146BC  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24497                           
 24498                           ; BSR set to: 0
 24499  0146BE  0012               	return	
 24500  0146C0                     
 24501                           ; BSR set to: 0
 24502                           ;encoder.c: 63: return 10;
 24503                           
 24504                           ; BSR set to: 0
 24505  0146C0  0E00               	movlw	0
 24506  0146C2  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24507  0146C4  0E0A               	movlw	10
 24508  0146C6  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24509                           
 24510                           ; BSR set to: 0
 24511  0146C8  0012               	return	
 24512  0146CA                     
 24513                           ; BSR set to: 0
 24514                           ;encoder.c: 65: return 1;
 24515                           
 24516                           ; BSR set to: 0
 24517  0146CA  0E00               	movlw	0
 24518  0146CC  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24519  0146CE  0E01               	movlw	1
 24520  0146D0  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24521                           
 24522                           ; BSR set to: 0
 24523  0146D2  0012               	return	
 24524  0146D4                     
 24525                           ; BSR set to: 0
 24526                           ;encoder.c: 67: return 1000;
 24527                           
 24528                           ; BSR set to: 0
 24529  0146D4  0E03               	movlw	3
 24530  0146D6  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24531  0146D8  0EE8               	movlw	232
 24532  0146DA  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24533                           
 24534                           ; BSR set to: 0
 24535  0146DC  0012               	return	
 24536  0146DE                     
 24537                           ; BSR set to: 0
 24538                           ;encoder.c: 69: return 100;
 24539                           
 24540                           ; BSR set to: 0
 24541  0146DE  0E00               	movlw	0
 24542  0146E0  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24543  0146E2  0E64               	movlw	100
 24544  0146E4  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24545                           
 24546                           ; BSR set to: 0
 24547                           ;encoder.c: 70: }
 24548                           
 24549                           ; BSR set to: 0
 24550  0146E6  0012               	return	
 24551  0146E8                     l2737:
 24552                           
 24553                           ; BSR set to: 0
 24554  0146E8  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24555  0146EC  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24556                           
 24557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24558                           ; Switch size 1, requested type "space"
 24559                           ; Number of cases is 2, Range of values is 0 to 3
 24560                           ; switch strategies available:
 24561                           ; Name         Instructions Cycles
 24562                           ; simple_byte            7     4 (average)
 24563                           ;	Chosen strategy is simple_byte
 24564  0146F0  0100               	movlb	0	; () banked
 24565  0146F2  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24566  0146F4  0A00               	xorlw	0	; case 0
 24567  0146F6  B4D8               	btfsc	status,2,c
 24568  0146F8  D004               	goto	l20152
 24569  0146FA  0A03               	xorlw	3	; case 3
 24570  0146FC  B4D8               	btfsc	status,2,c
 24571  0146FE  D00C               	goto	l20154
 24572  014700  D7EE               	goto	l2743
 24573  014702                     l20152:
 24574                           
 24575                           ; BSR set to: 0
 24576                           ; Switch size 1, requested type "space"
 24577                           ; Number of cases is 3, Range of values is 1 to 100
 24578                           ; switch strategies available:
 24579                           ; Name         Instructions Cycles
 24580                           ; simple_byte           10     6 (average)
 24581                           ;	Chosen strategy is simple_byte
 24582  014702  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24583  014704  0A01               	xorlw	1	; case 1
 24584  014706  B4D8               	btfsc	status,2,c
 24585  014708  D7E5               	goto	l2742
 24586  01470A  0A0B               	xorlw	11	; case 10
 24587  01470C  B4D8               	btfsc	status,2,c
 24588  01470E  D7DD               	goto	l2741
 24589  014710  0A6E               	xorlw	110	; case 100
 24590  014712  B4D8               	btfsc	status,2,c
 24591  014714  D7D5               	goto	l2740
 24592  014716  D7E3               	goto	l2743
 24593  014718                     l20154:
 24594                           
 24595                           ; BSR set to: 0
 24596                           ; Switch size 1, requested type "space"
 24597                           ; Number of cases is 1, Range of values is 232 to 232
 24598                           ; switch strategies available:
 24599                           ; Name         Instructions Cycles
 24600                           ; simple_byte            4     3 (average)
 24601                           ;	Chosen strategy is simple_byte
 24602  014718  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24603  01471A  0AE8               	xorlw	232	; case 232
 24604  01471C  B4D8               	btfsc	status,2,c
 24605  01471E  D7CA               	goto	l2738
 24606  014720  D7DE               	goto	l2743
 24607  014722                     __end_of__encoder_next_arc_step_size:
 24608                           	opt stack 0
 24609                           tblptru	equ	0xFF8
 24610                           tblptrh	equ	0xFF7
 24611                           tblptrl	equ	0xFF6
 24612                           tablat	equ	0xFF5
 24613                           prodh	equ	0xFF4
 24614                           prodl	equ	0xFF3
 24615                           intcon	equ	0xFF2
 24616                           postinc0	equ	0xFEE
 24617                           wreg	equ	0xFE8
 24618                           indf1	equ	0xFE7
 24619                           postinc1	equ	0xFE6
 24620                           postdec1	equ	0xFE5
 24621                           plusw1	equ	0xFE3
 24622                           fsr1h	equ	0xFE2
 24623                           fsr1l	equ	0xFE1
 24624                           indf2	equ	0xFDF
 24625                           postinc2	equ	0xFDE
 24626                           postdec2	equ	0xFDD
 24627                           plusw2	equ	0xFDB
 24628                           fsr2h	equ	0xFDA
 24629                           fsr2l	equ	0xFD9
 24630                           status	equ	0xFD8
 24631                           
 24632 ;; *************** function __divide_jump_size_increment *****************
 24633 ;; Defined at:
 24634 ;;		line 73 in file "encoder.c"
 24635 ;; Parameters:    Size  Location     Type
 24636 ;;		None
 24637 ;; Auto vars:     Size  Location     Type
 24638 ;;		None
 24639 ;; Return value:  Size  Location     Type
 24640 ;;                  1    wreg      void 
 24641 ;; Registers used:
 24642 ;;		wreg, status,2, status,0
 24643 ;; Tracked objects:
 24644 ;;		On entry : 0/0
 24645 ;;		On exit  : 0/0
 24646 ;;		Unchanged: 0/0
 24647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24650 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24652 ;;Total ram usage:        1 bytes
 24653 ;; Hardware stack levels used:    1
 24654 ;; Hardware stack levels required when called:   10
 24655 ;; This function calls:
 24656 ;;		Nothing
 24657 ;; This function is called by:
 24658 ;;		_encoder_statemachine
 24659 ;; This function uses a non-reentrant model
 24660 ;;
 24661                           
 24662                           	psect	text97
 24663  0157AA                     __ptext97:
 24664                           	opt stack 0
 24665  0157AA                     __divide_jump_size_increment:
 24666                           	opt stack 19
 24667                           
 24668                           ;encoder.c: 75: ++os.divide_jump_size;
 24669                           
 24670                           ; BSR set to: 0
 24671                           ;incstack = 0
 24672  0157AA  0101               	movlb	1	; () banked
 24673  0157AC  4B7E               	infsnz	(_os+25)& (0+255),f,b	;volatile
 24674  0157AE  2B7F               	incf	(_os+26)& (0+255),f,b	;volatile
 24675                           
 24676                           ; BSR set to: 1
 24677                           ;encoder.c: 76: if(os.divide_jump_size==0)
 24678  0157B0  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 24679  0157B2  117F               	iorwf	(_os+26)& (0+255),w,b	;volatile
 24680  0157B4  A4D8               	btfss	status,2,c
 24681  0157B6  D004               	goto	l2747
 24682                           
 24683                           ; BSR set to: 1
 24684                           ;encoder.c: 77: os.divide_jump_size = 1;
 24685  0157B8  0E00               	movlw	0
 24686  0157BA  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
 24687  0157BC  0E01               	movlw	1
 24688  0157BE  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
 24689  0157C0                     l2747:
 24690                           
 24691                           ; BSR set to: 1
 24692                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 24693                           
 24694                           ; BSR set to: 1
 24695  0157C0  5179               	movf	(_os+20)& (0+255),w,b	;volatile
 24696  0157C2  5D7E               	subwf	(_os+25)& (0+255),w,b	;volatile
 24697  0157C4  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 24698  0157C6  0A80               	xorlw	128
 24699  0157C8  0100               	movlb	0	; () banked
 24700  0157CA  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24701  0157CC  0101               	movlb	1	; () banked
 24702  0157CE  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 24703  0157D0  0A80               	xorlw	128
 24704  0157D2  0100               	movlb	0	; () banked
 24705  0157D4  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24706  0157D6  A0D8               	btfss	status,0,c
 24707  0157D8  0012               	return	
 24708                           
 24709                           ; BSR set to: 0
 24710                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 24711  0157DA  0EFF               	movlw	255
 24712  0157DC  0101               	movlb	1	; () banked
 24713  0157DE  2579               	addwf	(_os+20)& (0+255),w,b	;volatile
 24714  0157E0  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
 24715  0157E2  0EFF               	movlw	255
 24716  0157E4  217A               	addwfc	(_os+21)& (0+255),w,b	;volatile
 24717  0157E6  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
 24718  0157E8  0012               	return	
 24719  0157EA                     __end_of__divide_jump_size_increment:
 24720                           	opt stack 0
 24721                           tblptru	equ	0xFF8
 24722                           tblptrh	equ	0xFF7
 24723                           tblptrl	equ	0xFF6
 24724                           tablat	equ	0xFF5
 24725                           prodh	equ	0xFF4
 24726                           prodl	equ	0xFF3
 24727                           intcon	equ	0xFF2
 24728                           postinc0	equ	0xFEE
 24729                           wreg	equ	0xFE8
 24730                           indf1	equ	0xFE7
 24731                           postinc1	equ	0xFE6
 24732                           postdec1	equ	0xFE5
 24733                           plusw1	equ	0xFE3
 24734                           fsr1h	equ	0xFE2
 24735                           fsr1l	equ	0xFE1
 24736                           indf2	equ	0xFDF
 24737                           postinc2	equ	0xFDE
 24738                           postdec2	equ	0xFDD
 24739                           plusw2	equ	0xFDB
 24740                           fsr2h	equ	0xFDA
 24741                           fsr2l	equ	0xFD9
 24742                           status	equ	0xFD8
 24743                           
 24744 ;; *************** function __divide_jump_size_decrement *****************
 24745 ;; Defined at:
 24746 ;;		line 82 in file "encoder.c"
 24747 ;; Parameters:    Size  Location     Type
 24748 ;;		None
 24749 ;; Auto vars:     Size  Location     Type
 24750 ;;		None
 24751 ;; Return value:  Size  Location     Type
 24752 ;;                  1    wreg      void 
 24753 ;; Registers used:
 24754 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24755 ;; Tracked objects:
 24756 ;;		On entry : 0/0
 24757 ;;		On exit  : 0/0
 24758 ;;		Unchanged: 0/0
 24759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24762 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24763 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24764 ;;Total ram usage:        3 bytes
 24765 ;; Hardware stack levels used:    1
 24766 ;; Hardware stack levels required when called:   10
 24767 ;; This function calls:
 24768 ;;		Nothing
 24769 ;; This function is called by:
 24770 ;;		_encoder_statemachine
 24771 ;; This function uses a non-reentrant model
 24772 ;;
 24773                           
 24774                           	psect	text98
 24775  014790                     __ptext98:
 24776                           	opt stack 0
 24777  014790                     __divide_jump_size_decrement:
 24778                           	opt stack 19
 24779                           
 24780                           ;encoder.c: 84: --os.divide_jump_size;
 24781                           
 24782                           ;incstack = 0
 24783  014790  0101               	movlb	1	; () banked
 24784  014792  077E               	decf	(_os+25)& (0+255),f,b	;volatile
 24785  014794  A0D8               	btfss	status,0,c
 24786  014796  077F               	decf	(_os+26)& (0+255),f,b	;volatile
 24787                           
 24788                           ; BSR set to: 1
 24789                           ;encoder.c: 85: if(os.divide_jump_size==0)
 24790  014798  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 24791  01479A  117F               	iorwf	(_os+26)& (0+255),w,b	;volatile
 24792  01479C  A4D8               	btfss	status,2,c
 24793  01479E  D002               	goto	l2752
 24794                           
 24795                           ; BSR set to: 1
 24796                           ;encoder.c: 86: os.divide_jump_size = -1;
 24797  0147A0  697E               	setf	(_os+25)& (0+255),b	;volatile
 24798  0147A2  697F               	setf	(_os+26)& (0+255),b	;volatile
 24799  0147A4                     l2752:
 24800                           
 24801                           ; BSR set to: 1
 24802                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 24803                           
 24804                           ; BSR set to: 1
 24805  0147A4  EE21  F079         	lfsr	2,_os+20	;volatile
 24806  0147A8  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24807  0147AC  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24808  0147B0  0100               	movlb	0	; () banked
 24809  0147B2  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24810  0147B4  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24811  0147B6  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24812  0147B8  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24813  0147BA  0101               	movlb	1	; () banked
 24814  0147BC  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 24815  0147BE  0100               	movlb	0	; () banked
 24816  0147C0  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 24817  0147C2  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24818  0147C4  0A80               	xorlw	128
 24819  0147C6  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 24820  0147C8  0101               	movlb	1	; () banked
 24821  0147CA  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 24822  0147CC  0A80               	xorlw	128
 24823  0147CE  0100               	movlb	0	; () banked
 24824  0147D0  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 24825  0147D2  A0D8               	btfss	status,0,c
 24826  0147D4  0012               	return	
 24827                           
 24828                           ; BSR set to: 0
 24829                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 24830  0147D6  EE21  F079         	lfsr	2,_os+20	;volatile
 24831  0147DA  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24832  0147DE  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24833  0147E2  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24834  0147E4  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24835  0147E6  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24836  0147E8  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24837  0147EA  0E01               	movlw	1
 24838  0147EC  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 24839  0147EE  0101               	movlb	1	; () banked
 24840  0147F0  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
 24841  0147F2  0E00               	movlw	0
 24842  0147F4  0100               	movlb	0	; () banked
 24843  0147F6  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24844  0147F8  0101               	movlb	1	; () banked
 24845  0147FA  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
 24846  0147FC  0012               	return	
 24847  0147FE                     __end_of__divide_jump_size_decrement:
 24848                           	opt stack 0
 24849                           tblptru	equ	0xFF8
 24850                           tblptrh	equ	0xFF7
 24851                           tblptrl	equ	0xFF6
 24852                           tablat	equ	0xFF5
 24853                           prodh	equ	0xFF4
 24854                           prodl	equ	0xFF3
 24855                           intcon	equ	0xFF2
 24856                           postinc0	equ	0xFEE
 24857                           wreg	equ	0xFE8
 24858                           indf1	equ	0xFE7
 24859                           postinc1	equ	0xFE6
 24860                           postdec1	equ	0xFE5
 24861                           plusw1	equ	0xFE3
 24862                           fsr1h	equ	0xFE2
 24863                           fsr1l	equ	0xFE1
 24864                           indf2	equ	0xFDF
 24865                           postinc2	equ	0xFDE
 24866                           postdec2	equ	0xFDD
 24867                           plusw2	equ	0xFDB
 24868                           fsr2h	equ	0xFDA
 24869                           fsr2l	equ	0xFD9
 24870                           status	equ	0xFD8
 24871                           
 24872 ;; *************** function _display_prepare *****************
 24873 ;; Defined at:
 24874 ;;		line 296 in file "display.c"
 24875 ;; Parameters:    Size  Location     Type
 24876 ;;		None
 24877 ;; Auto vars:     Size  Location     Type
 24878 ;;  temp           10  104[BANK0 ] unsigned char [10]
 24879 ;;  cntr            1  115[BANK0 ] unsigned char 
 24880 ;;  space           1  114[BANK0 ] unsigned char 
 24881 ;; Return value:  Size  Location     Type
 24882 ;;                  1    wreg      void 
 24883 ;; Registers used:
 24884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24885 ;; Tracked objects:
 24886 ;;		On entry : 0/0
 24887 ;;		On exit  : 0/0
 24888 ;;		Unchanged: 0/0
 24889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24891 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24893 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24894 ;;Total ram usage:       14 bytes
 24895 ;; Hardware stack levels used:    1
 24896 ;; Hardware stack levels required when called:   15
 24897 ;; This function calls:
 24898 ;;		__display_clear
 24899 ;;		__display_itoa
 24900 ;;		__display_itoa_long
 24901 ;;		__display_padded_itoa
 24902 ;;		__display_position_in_degrees
 24903 ;;		__display_signed_itoa
 24904 ;;		_memcpy
 24905 ;;		_motor_speed_from_index
 24906 ;;		_strlen
 24907 ;; This function is called by:
 24908 ;;		_main
 24909 ;; This function uses a non-reentrant model
 24910 ;;
 24911                           
 24912                           	psect	text99
 24913  00A344                     __ptext99:
 24914                           	opt stack 0
 24915  00A344                     _display_prepare:
 24916                           	opt stack 15
 24917                           
 24918                           ;display.c: 298: uint8_t cntr;;display.c: 299: uint8_t space;;display.c: 300: char temp[
      +                          10];;display.c: 302: switch(os.displayState & 0xF0)
 24919                           
 24920                           ;incstack = 0
 24921  00A344  EFAA  F057         	goto	l1398
 24922  00A348                     
 24923                           ;display.c: 306: memcpy(display_content, dc_main, sizeof display_content);
 24924  00A348  0E48               	movlw	low _display_content
 24925  00A34A  0100               	movlb	0	; () banked
 24926  00A34C  6F60               	movwf	memcpy@d1& (0+255),b
 24927  00A34E  0E02               	movlw	high _display_content
 24928  00A350  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24929  00A352  0E6E               	movlw	low _dc_main
 24930  00A354  6F62               	movwf	memcpy@s1& (0+255),b
 24931  00A356  0EA0               	movlw	high _dc_main
 24932  00A358  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24933  00A35A  0E00               	movlw	0
 24934  00A35C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24935  00A35E  0E50               	movlw	80
 24936  00A360  6F64               	movwf	memcpy@n& (0+255),b
 24937  00A362  ECCA  F0A5         	call	_memcpy	;wreg free
 24938                           
 24939                           ;display.c: 307: switch(os.displayState)
 24940  00A366  D00F               	goto	l1400
 24941  00A368                     
 24942                           ;display.c: 310: display_content[1][0] = '>';
 24943  00A368  0E3E               	movlw	62
 24944  00A36A  0102               	movlb	2	; () banked
 24945  00A36C  6F5C               	movwf	(_display_content+20)& (0+255),b
 24946                           
 24947                           ;display.c: 311: break;
 24948  00A36E  EFD8  F057         	goto	l1407
 24949  00A372                     
 24950                           ;display.c: 313: display_content[1][9] = '>';
 24951                           
 24952                           ; BSR set to: 2
 24953  00A372  0E3E               	movlw	62
 24954  00A374  0102               	movlb	2	; () banked
 24955  00A376  6F65               	movwf	(_display_content+29)& (0+255),b
 24956                           
 24957                           ;display.c: 314: break;
 24958  00A378  EFD8  F057         	goto	l1407
 24959  00A37C                     
 24960                           ;display.c: 319: display_content[2][9] = '>';
 24961                           
 24962                           ; BSR set to: 2
 24963  00A37C  0E3E               	movlw	62
 24964  00A37E  0102               	movlb	2	; () banked
 24965  00A380  6F79               	movwf	(_display_content+49)& (0+255),b
 24966                           
 24967                           ;display.c: 320: break;
 24968  00A382  EFD8  F057         	goto	l1407
 24969  00A386                     l1400:
 24970                           
 24971                           ; BSR set to: 2
 24972  00A386  0101               	movlb	1	; () banked
 24973  00A388  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 24974                           
 24975                           ; Switch size 1, requested type "space"
 24976                           ; Number of cases is 5, Range of values is 1 to 5
 24977                           ; switch strategies available:
 24978                           ; Name         Instructions Cycles
 24979                           ; simple_byte           16     9 (average)
 24980                           ;	Chosen strategy is simple_byte
 24981  00A38A  0A01               	xorlw	1	; case 1
 24982  00A38C  B4D8               	btfsc	status,2,c
 24983  00A38E  D7EC               	goto	l1401
 24984  00A390  0A03               	xorlw	3	; case 2
 24985  00A392  B4D8               	btfsc	status,2,c
 24986  00A394  D7EE               	goto	l1403
 24987  00A396  0A01               	xorlw	1	; case 3
 24988  00A398  B4D8               	btfsc	status,2,c
 24989  00A39A  D067               	goto	l1420
 24990  00A39C  0A07               	xorlw	7	; case 4
 24991  00A39E  B4D8               	btfsc	status,2,c
 24992  00A3A0  D7ED               	goto	l1405
 24993  00A3A2  0A01               	xorlw	1	; case 5
 24994  00A3A4  D072               	goto	L88
 24995  00A3A6                     
 24996                           ;display.c: 328: memcpy(display_content, dc_setup1, sizeof display_content);
 24997                           
 24998                           ; BSR set to: 1
 24999  00A3A6  0E48               	movlw	low _display_content
 25000  00A3A8  0100               	movlb	0	; () banked
 25001  00A3AA  6F60               	movwf	memcpy@d1& (0+255),b
 25002  00A3AC  0E02               	movlw	high _display_content
 25003  00A3AE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25004  00A3B0  0E1E               	movlw	low _dc_setup1
 25005  00A3B2  6F62               	movwf	memcpy@s1& (0+255),b
 25006  00A3B4  0EA0               	movlw	high _dc_setup1
 25007  00A3B6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25008  00A3B8  0E00               	movlw	0
 25009  00A3BA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25010  00A3BC  0E50               	movlw	80
 25011  00A3BE  6F64               	movwf	memcpy@n& (0+255),b
 25012  00A3C0  ECCA  F0A5         	call	_memcpy	;wreg free
 25013                           
 25014                           ;display.c: 329: _display_itoa(os.setup_step_size, 2, temp);
 25015  00A3C4  C176  F09F         	movff	_os+17,__display_itoa@value	;volatile
 25016  00A3C8  C177  F0A0         	movff	_os+18,__display_itoa@value+1	;volatile
 25017  00A3CC  0E02               	movlw	2
 25018  00A3CE  0100               	movlb	0	; () banked
 25019  00A3D0  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 25020  00A3D2  0EC8               	movlw	low display_prepare@temp
 25021  00A3D4  6FA2               	movwf	__display_itoa@text& (0+255),b
 25022  00A3D6  0E00               	movlw	high display_prepare@temp
 25023  00A3D8  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 25024  00A3DA  EC3C  F072         	call	__display_itoa	;wreg free
 25025                           
 25026                           ;display.c: 330: if(os.setup_step_size>999)
 25027  00A3DE  0EE8               	movlw	232
 25028  00A3E0  0101               	movlb	1	; () banked
 25029  00A3E2  5D76               	subwf	(_os+17)& (0+255),w,b	;volatile
 25030  00A3E4  0E03               	movlw	3
 25031  00A3E6  5977               	subwfb	(_os+18)& (0+255),w,b	;volatile
 25032  00A3E8  A0D8               	btfss	status,0,c
 25033  00A3EA  D002               	goto	l1409
 25034                           
 25035                           ; BSR set to: 1
 25036                           ;display.c: 331: space = 0;
 25037  00A3EC  0E00               	movlw	0
 25038  00A3EE  D001               	goto	L23
 25039  00A3F0                     l1409:
 25040                           
 25041                           ;display.c: 332: else;display.c: 333: space = 1;
 25042                           
 25043                           ; BSR set to: 0
 25044  00A3F0  0E01               	movlw	1
 25045  00A3F2                     L23:
 25046  00A3F2  0100               	movlb	0	; () banked
 25047  00A3F4  6FD2               	movwf	display_prepare@space& (0+255),b
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;display.c: 334: for(cntr=0; temp[cntr]; ++cntr)
 25051  00A3F6  0E00               	movlw	0
 25052  00A3F8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25053  00A3FA  D018               	goto	l1411
 25054  00A3FC                     
 25055                           ; BSR set to: 0
 25056                           ;display.c: 335: {;display.c: 336: display_content[3][space+cntr] = temp[cntr];
 25057                           
 25058                           ; BSR set to: 0
 25059  00A3FC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25060  00A3FE  0D01               	mullw	1
 25061  00A400  0EC8               	movlw	low display_prepare@temp
 25062  00A402  24F3               	addwf	prodl,w,c
 25063  00A404  6ED9               	movwf	fsr2l,c
 25064  00A406  0E00               	movlw	high display_prepare@temp
 25065  00A408  20F4               	addwfc	prodh,w,c
 25066  00A40A  6EDA               	movwf	fsr2h,c
 25067  00A40C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25068  00A40E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 25069  00A412  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25070  00A414  27C6               	addwf	??_display_prepare& (0+255),f,b
 25071  00A416  0E00               	movlw	0
 25072  00A418  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25073  00A41A  0E84               	movlw	low (_display_content+60)
 25074  00A41C  25C6               	addwf	??_display_prepare& (0+255),w,b
 25075  00A41E  6EE1               	movwf	fsr1l,c
 25076  00A420  0E02               	movlw	high (_display_content+60)
 25077  00A422  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25078  00A424  6EE2               	movwf	fsr1h,c
 25079  00A426  CFDF FFE7          	movff	indf2,indf1
 25080                           
 25081                           ; BSR set to: 0
 25082  00A42A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25083  00A42C                     l1411:
 25084                           
 25085                           ; BSR set to: 0
 25086                           
 25087                           ; BSR set to: 0
 25088  00A42C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25089  00A42E  0D01               	mullw	1
 25090  00A430  0EC8               	movlw	low display_prepare@temp
 25091  00A432  24F3               	addwf	prodl,w,c
 25092  00A434  6ED9               	movwf	fsr2l,c
 25093  00A436  0E00               	movlw	high display_prepare@temp
 25094  00A438  20F4               	addwfc	prodh,w,c
 25095  00A43A  6EDA               	movwf	fsr2h,c
 25096  00A43C  50DF               	movf	indf2,w,c
 25097  00A43E  A4D8               	btfss	status,2,c
 25098  00A440  D7DD               	goto	l1412
 25099                           
 25100                           ; BSR set to: 2
 25101                           
 25102                           ; BSR set to: 2
 25103                           ;display.c: 346: }
 25104                           
 25105                           ;display.c: 345: break;
 25106                           
 25107                           ;display.c: 344: display_content[3][12] = '>';
 25108                           
 25109                           ; BSR set to: 2
 25110                           
 25111                           ;display.c: 343: case DISPLAY_STATE_SETUP1_CANCEL:
 25112                           
 25113                           ;display.c: 342: break;
 25114                           
 25115                           ;display.c: 341: display_content[2][12] = '>';
 25116                           
 25117                           ; BSR set to: 0
 25118                           
 25119                           ;display.c: 339: {;display.c: 340: case DISPLAY_STATE_SETUP1_CONFIRM:
 25120                           
 25121                           ; BSR set to: 0
 25122                           ;display.c: 337: };display.c: 338: switch(os.displayState)
 25123  00A442  0101               	movlb	1	; () banked
 25124  00A444  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25125                           
 25126                           ; Switch size 1, requested type "space"
 25127                           ; Number of cases is 2, Range of values is 17 to 18
 25128                           ; switch strategies available:
 25129                           ; Name         Instructions Cycles
 25130                           ; simple_byte            7     4 (average)
 25131                           ;	Chosen strategy is simple_byte
 25132  00A446  0A11               	xorlw	17	; case 17
 25133  00A448  D08E               	goto	L29
 25134  00A44A                     
 25135                           ;display.c: 350: memcpy(display_content, dc_setup2, sizeof display_content);
 25136                           
 25137                           ; BSR set to: 1
 25138  00A44A  0E48               	movlw	low _display_content
 25139  00A44C  0100               	movlb	0	; () banked
 25140  00A44E  6F60               	movwf	memcpy@d1& (0+255),b
 25141  00A450  0E02               	movlw	high _display_content
 25142  00A452  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25143  00A454  0ECE               	movlw	low _dc_setup2
 25144  00A456  6F62               	movwf	memcpy@s1& (0+255),b
 25145  00A458  0E9F               	movlw	high _dc_setup2
 25146  00A45A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25147  00A45C  0E00               	movlw	0
 25148  00A45E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25149  00A460  0E50               	movlw	80
 25150  00A462  6F64               	movwf	memcpy@n& (0+255),b
 25151  00A464  ECCA  F0A5         	call	_memcpy	;wreg free
 25152                           
 25153                           ;display.c: 351: switch(os.displayState)
 25154  00A468  D00A               	goto	l1419
 25155  00A46A                     l1420:
 25156                           
 25157                           ;display.c: 354: display_content[2][0] = '>';
 25158  00A46A  0E3E               	movlw	62
 25159  00A46C  0102               	movlb	2	; () banked
 25160  00A46E  6F70               	movwf	(_display_content+40)& (0+255),b
 25161                           
 25162                           ;display.c: 355: break;
 25163  00A470  EFD8  F057         	goto	l1407
 25164  00A474                     l1422:
 25165                           
 25166                           ;display.c: 357: display_content[3][0] = '>';
 25167                           
 25168                           ; BSR set to: 2
 25169  00A474  0E3E               	movlw	62
 25170  00A476  0102               	movlb	2	; () banked
 25171  00A478  6F84               	movwf	(_display_content+60)& (0+255),b
 25172                           
 25173                           ; BSR set to: 2
 25174                           ;display.c: 359: }
 25175                           
 25176                           ;display.c: 358: break;
 25177  00A47A  EFD8  F057         	goto	l1407
 25178  00A47E                     l1419:
 25179                           
 25180                           ; BSR set to: 2
 25181  00A47E  0101               	movlb	1	; () banked
 25182  00A480  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25183                           
 25184                           ; Switch size 1, requested type "space"
 25185                           ; Number of cases is 2, Range of values is 33 to 34
 25186                           ; switch strategies available:
 25187                           ; Name         Instructions Cycles
 25188                           ; simple_byte            7     4 (average)
 25189                           ;	Chosen strategy is simple_byte
 25190  00A482  0A21               	xorlw	33	; case 33
 25191  00A484  B4D8               	btfsc	status,2,c
 25192  00A486  D7F1               	goto	l1420
 25193  00A488  0A03               	xorlw	3	; case 34
 25194  00A48A                     L88:
 25195  00A48A  B4D8               	btfsc	status,2,c
 25196  00A48C  D7F3               	goto	l1422
 25197                           
 25198                           ; BSR set to: 1
 25199                           ;display.c: 360: break;
 25200  00A48E  EFD8  F057         	goto	l1407
 25201  00A492                     
 25202                           ;display.c: 363: memcpy(display_content, dc_divide1, sizeof display_content);
 25203                           
 25204                           ; BSR set to: 1
 25205  00A492  0E48               	movlw	low _display_content
 25206  00A494  0100               	movlb	0	; () banked
 25207  00A496  6F60               	movwf	memcpy@d1& (0+255),b
 25208  00A498  0E02               	movlw	high _display_content
 25209  00A49A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25210  00A49C  0E7E               	movlw	low _dc_divide1
 25211  00A49E  6F62               	movwf	memcpy@s1& (0+255),b
 25212  00A4A0  0E9F               	movlw	high _dc_divide1
 25213  00A4A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25214  00A4A4  0E00               	movlw	0
 25215  00A4A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25216  00A4A8  0E50               	movlw	80
 25217  00A4AA  6F64               	movwf	memcpy@n& (0+255),b
 25218  00A4AC  ECCA  F0A5         	call	_memcpy	;wreg free
 25219                           
 25220                           ;display.c: 365: _display_padded_itoa(os.divide_step_size, 3, temp);
 25221  00A4B0  C17B  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25222  00A4B4  0100               	movlb	0	; () banked
 25223  00A4B6  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25224  00A4B8  0E03               	movlw	3
 25225  00A4BA  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25226  00A4BC  0EC8               	movlw	low display_prepare@temp
 25227  00A4BE  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25228  00A4C0  0E00               	movlw	high display_prepare@temp
 25229  00A4C2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25230  00A4C4  ECFD  F090         	call	__display_padded_itoa	;wreg free
 25231                           
 25232                           ;display.c: 366: for(cntr=0; cntr<3; ++cntr)
 25233  00A4C8  0E00               	movlw	0
 25234  00A4CA  0100               	movlb	0	; () banked
 25235  00A4CC  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25236  00A4CE                     l18870:
 25237                           
 25238                           ; BSR set to: 0
 25239  00A4CE  0E02               	movlw	2
 25240  00A4D0  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25241  00A4D2  D001               	goto	l1424
 25242  00A4D4  D014               	goto	u18920
 25243  00A4D6                     l1424:
 25244                           
 25245                           ; BSR set to: 0
 25246                           ;display.c: 367: {;display.c: 368: display_content[2][cntr] = temp[cntr];
 25247                           
 25248                           ; BSR set to: 0
 25249  00A4D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25250  00A4D8  0D01               	mullw	1
 25251  00A4DA  0EC8               	movlw	low display_prepare@temp
 25252  00A4DC  24F3               	addwf	prodl,w,c
 25253  00A4DE  6ED9               	movwf	fsr2l,c
 25254  00A4E0  0E00               	movlw	high display_prepare@temp
 25255  00A4E2  20F4               	addwfc	prodh,w,c
 25256  00A4E4  6EDA               	movwf	fsr2h,c
 25257  00A4E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25258  00A4E8  0D01               	mullw	1
 25259  00A4EA  0E70               	movlw	low (_display_content+40)
 25260  00A4EC  24F3               	addwf	prodl,w,c
 25261  00A4EE  6EE1               	movwf	fsr1l,c
 25262  00A4F0  0E02               	movlw	high (_display_content+40)
 25263  00A4F2  20F4               	addwfc	prodh,w,c
 25264  00A4F4  6EE2               	movwf	fsr1h,c
 25265  00A4F6  CFDF FFE7          	movff	indf2,indf1
 25266                           
 25267                           ; BSR set to: 0
 25268  00A4FA  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25269  00A4FC  D7E8               	goto	l18870
 25270  00A4FE                     u18920:
 25271                           
 25272                           ; BSR set to: 0
 25273                           ;display.c: 369: };display.c: 371: _display_padded_itoa(os.division, 4, temp);
 25274                           
 25275                           ; BSR set to: 0
 25276  00A4FE  C179  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25277  00A502  C17A  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25278  00A506  0E04               	movlw	4
 25279  00A508  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25280  00A50A  0EC8               	movlw	low display_prepare@temp
 25281  00A50C  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25282  00A50E  0E00               	movlw	high display_prepare@temp
 25283  00A510  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25284  00A512  ECFD  F090         	call	__display_padded_itoa	;wreg free
 25285                           
 25286                           ;display.c: 372: for(cntr=0; cntr<4; ++cntr)
 25287  00A516  0E00               	movlw	0
 25288  00A518  0100               	movlb	0	; () banked
 25289  00A51A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25290  00A51C                     l18884:
 25291                           
 25292                           ; BSR set to: 0
 25293  00A51C  0E03               	movlw	3
 25294  00A51E  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25295  00A520  D001               	goto	l1426
 25296  00A522  D01E               	goto	l1428
 25297  00A524                     l1426:
 25298                           
 25299                           ; BSR set to: 0
 25300                           ;display.c: 373: {;display.c: 374: display_content[3][cntr] = temp[cntr];
 25301                           
 25302                           ; BSR set to: 0
 25303  00A524  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25304  00A526  0D01               	mullw	1
 25305  00A528  0EC8               	movlw	low display_prepare@temp
 25306  00A52A  24F3               	addwf	prodl,w,c
 25307  00A52C  6ED9               	movwf	fsr2l,c
 25308  00A52E  0E00               	movlw	high display_prepare@temp
 25309  00A530  20F4               	addwfc	prodh,w,c
 25310  00A532  6EDA               	movwf	fsr2h,c
 25311  00A534  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25312  00A536  0D01               	mullw	1
 25313  00A538  0E84               	movlw	low (_display_content+60)
 25314  00A53A  24F3               	addwf	prodl,w,c
 25315  00A53C  6EE1               	movwf	fsr1l,c
 25316  00A53E  0E02               	movlw	high (_display_content+60)
 25317  00A540  20F4               	addwfc	prodh,w,c
 25318  00A542  6EE2               	movwf	fsr1h,c
 25319  00A544  CFDF FFE7          	movff	indf2,indf1
 25320                           
 25321                           ; BSR set to: 0
 25322  00A548  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25323  00A54A  D7E8               	goto	l18884
 25324  00A54C                     
 25325                           ;display.c: 379: display_content[2][12] = '>';
 25326                           
 25327                           ; BSR set to: 0
 25328  00A54C  0E3E               	movlw	62
 25329  00A54E  0102               	movlb	2	; () banked
 25330  00A550  6F7C               	movwf	(_display_content+52)& (0+255),b
 25331                           
 25332                           ;display.c: 380: break;
 25333  00A552  EFD8  F057         	goto	l1407
 25334  00A556                     
 25335                           ;display.c: 382: display_content[3][12] = '>';
 25336                           
 25337                           ; BSR set to: 2
 25338  00A556  0E3E               	movlw	62
 25339  00A558  0102               	movlb	2	; () banked
 25340  00A55A  6F90               	movwf	(_display_content+72)& (0+255),b
 25341                           
 25342                           ; BSR set to: 2
 25343                           ;display.c: 384: }
 25344                           
 25345                           ;display.c: 383: break;
 25346  00A55C  EFD8  F057         	goto	l1407
 25347  00A560                     l1428:
 25348                           
 25349                           ; BSR set to: 2
 25350  00A560  0101               	movlb	1	; () banked
 25351  00A562  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25352                           
 25353                           ; Switch size 1, requested type "space"
 25354                           ; Number of cases is 2, Range of values is 49 to 50
 25355                           ; switch strategies available:
 25356                           ; Name         Instructions Cycles
 25357                           ; simple_byte            7     4 (average)
 25358                           ;	Chosen strategy is simple_byte
 25359  00A564  0A31               	xorlw	49	; case 49
 25360  00A566                     L29:
 25361  00A566  B4D8               	btfsc	status,2,c
 25362  00A568  D7F1               	goto	l1429
 25363  00A56A  0A03               	xorlw	3	; case 50
 25364  00A56C  B4D8               	btfsc	status,2,c
 25365  00A56E  D7F3               	goto	l1431
 25366                           
 25367                           ; BSR set to: 1
 25368                           ;display.c: 385: break;
 25369  00A570  EFD8  F057         	goto	l1407
 25370  00A574                     
 25371                           ;display.c: 388: memcpy(display_content, dc_divide2, sizeof display_content);
 25372                           
 25373                           ; BSR set to: 1
 25374  00A574  0E48               	movlw	low _display_content
 25375  00A576  0100               	movlb	0	; () banked
 25376  00A578  6F60               	movwf	memcpy@d1& (0+255),b
 25377  00A57A  0E02               	movlw	high _display_content
 25378  00A57C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25379  00A57E  0E2E               	movlw	low _dc_divide2
 25380  00A580  6F62               	movwf	memcpy@s1& (0+255),b
 25381  00A582  0E9F               	movlw	high _dc_divide2
 25382  00A584  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25383  00A586  0E00               	movlw	0
 25384  00A588  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25385  00A58A  0E50               	movlw	80
 25386  00A58C  6F64               	movwf	memcpy@n& (0+255),b
 25387  00A58E  ECCA  F0A5         	call	_memcpy	;wreg free
 25388                           
 25389                           ;display.c: 390: _display_padded_itoa(os.division, 0, temp);
 25390  00A592  C179  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25391  00A596  C17A  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25392  00A59A  0E00               	movlw	0
 25393  00A59C  0100               	movlb	0	; () banked
 25394  00A59E  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25395  00A5A0  0EC8               	movlw	low display_prepare@temp
 25396  00A5A2  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25397  00A5A4  0E00               	movlw	high display_prepare@temp
 25398  00A5A6  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25399  00A5A8  ECFD  F090         	call	__display_padded_itoa	;wreg free
 25400                           
 25401                           ;display.c: 391: for(cntr=0; temp[cntr]; ++cntr)
 25402  00A5AC  0E00               	movlw	0
 25403  00A5AE  0100               	movlb	0	; () banked
 25404  00A5B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25405  00A5B2  D018               	goto	l1433
 25406  00A5B4                     
 25407                           ; BSR set to: 0
 25408                           ;display.c: 392: {;display.c: 393: display_content[0][cntr+8] = temp[cntr];
 25409                           
 25410                           ; BSR set to: 0
 25411  00A5B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25412  00A5B6  0D01               	mullw	1
 25413  00A5B8  0EC8               	movlw	low display_prepare@temp
 25414  00A5BA  24F3               	addwf	prodl,w,c
 25415  00A5BC  6ED9               	movwf	fsr2l,c
 25416  00A5BE  0E00               	movlw	high display_prepare@temp
 25417  00A5C0  20F4               	addwfc	prodh,w,c
 25418  00A5C2  6EDA               	movwf	fsr2h,c
 25419  00A5C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25420  00A5C6  6FC6               	movwf	??_display_prepare& (0+255),b
 25421  00A5C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25422  00A5CA  0E08               	movlw	8
 25423  00A5CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 25424  00A5CE  0E00               	movlw	0
 25425  00A5D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25426  00A5D2  0E48               	movlw	low _display_content
 25427  00A5D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 25428  00A5D6  6EE1               	movwf	fsr1l,c
 25429  00A5D8  0E02               	movlw	high _display_content
 25430  00A5DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25431  00A5DC  6EE2               	movwf	fsr1h,c
 25432  00A5DE  CFDF FFE7          	movff	indf2,indf1
 25433                           
 25434                           ; BSR set to: 0
 25435  00A5E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25436  00A5E4                     l1433:
 25437                           
 25438                           ; BSR set to: 0
 25439                           
 25440                           ; BSR set to: 0
 25441  00A5E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25442  00A5E6  0D01               	mullw	1
 25443  00A5E8  0EC8               	movlw	low display_prepare@temp
 25444  00A5EA  24F3               	addwf	prodl,w,c
 25445  00A5EC  6ED9               	movwf	fsr2l,c
 25446  00A5EE  0E00               	movlw	high display_prepare@temp
 25447  00A5F0  20F4               	addwfc	prodh,w,c
 25448  00A5F2  6EDA               	movwf	fsr2h,c
 25449  00A5F4  50DF               	movf	indf2,w,c
 25450  00A5F6  A4D8               	btfss	status,2,c
 25451  00A5F8  D7DD               	goto	l1434
 25452                           
 25453                           ; BSR set to: 0
 25454                           ;display.c: 394: };display.c: 396: display_content[0][cntr+8] = ',';
 25455                           
 25456                           ; BSR set to: 0
 25457  00A5FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25458  00A5FC  6FC6               	movwf	??_display_prepare& (0+255),b
 25459  00A5FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25460  00A600  0E08               	movlw	8
 25461  00A602  27C6               	addwf	??_display_prepare& (0+255),f,b
 25462  00A604  0E00               	movlw	0
 25463  00A606  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25464  00A608  0E48               	movlw	low _display_content
 25465  00A60A  25C6               	addwf	??_display_prepare& (0+255),w,b
 25466  00A60C  6ED9               	movwf	fsr2l,c
 25467  00A60E  0E02               	movlw	high _display_content
 25468  00A610  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25469  00A612  6EDA               	movwf	fsr2h,c
 25470  00A614  0E2C               	movlw	44
 25471  00A616  6EDF               	movwf	indf2,c
 25472                           
 25473                           ; BSR set to: 0
 25474                           ;display.c: 397: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25475  00A618  0101               	movlb	1	; () banked
 25476  00A61A  2978               	incf	(_os+19)& (0+255),w,b	;volatile
 25477  00A61C  A4D8               	btfss	status,2,c
 25478  00A61E  D024               	goto	l1436
 25479                           
 25480                           ; BSR set to: 1
 25481                           ;display.c: 398: {;display.c: 399: display_content[0][cntr+10] = 'C';
 25482  00A620  0100               	movlb	0	; () banked
 25483  00A622  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25484  00A624  6FC6               	movwf	??_display_prepare& (0+255),b
 25485  00A626  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25486  00A628  0E0A               	movlw	10
 25487  00A62A  27C6               	addwf	??_display_prepare& (0+255),f,b
 25488  00A62C  0E00               	movlw	0
 25489  00A62E  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25490  00A630  0E48               	movlw	low _display_content
 25491  00A632  25C6               	addwf	??_display_prepare& (0+255),w,b
 25492  00A634  6ED9               	movwf	fsr2l,c
 25493  00A636  0E02               	movlw	high _display_content
 25494  00A638  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25495  00A63A  6EDA               	movwf	fsr2h,c
 25496  00A63C  0E43               	movlw	67
 25497  00A63E  6EDF               	movwf	indf2,c
 25498                           
 25499                           ;display.c: 400: display_content[0][cntr+11] = 'C';
 25500  00A640  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25501  00A642  6FC6               	movwf	??_display_prepare& (0+255),b
 25502  00A644  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25503  00A646  0E0B               	movlw	11
 25504  00A648  27C6               	addwf	??_display_prepare& (0+255),f,b
 25505  00A64A  0E00               	movlw	0
 25506  00A64C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25507  00A64E  0E48               	movlw	low _display_content
 25508  00A650  25C6               	addwf	??_display_prepare& (0+255),w,b
 25509  00A652  6ED9               	movwf	fsr2l,c
 25510  00A654  0E02               	movlw	high _display_content
 25511  00A656  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25512  00A658  6EDA               	movwf	fsr2h,c
 25513  00A65A  0E43               	movlw	67
 25514  00A65C  6EDF               	movwf	indf2,c
 25515                           
 25516                           ;display.c: 401: display_content[0][cntr+12] = 'W';
 25517  00A65E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25518  00A660  6FC6               	movwf	??_display_prepare& (0+255),b
 25519  00A662  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25520  00A664  0E0C               	movlw	12
 25521  00A666  D014               	goto	L30
 25522  00A668                     l1436:
 25523                           
 25524                           ;display.c: 403: else;display.c: 404: {;display.c: 405: display_content[0][cntr+10] = 'C
      +                          ';
 25525                           
 25526                           ; BSR set to: 0
 25527  00A668  0100               	movlb	0	; () banked
 25528  00A66A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25529  00A66C  6FC6               	movwf	??_display_prepare& (0+255),b
 25530  00A66E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25531  00A670  0E0A               	movlw	10
 25532  00A672  27C6               	addwf	??_display_prepare& (0+255),f,b
 25533  00A674  0E00               	movlw	0
 25534  00A676  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25535  00A678  0E48               	movlw	low _display_content
 25536  00A67A  25C6               	addwf	??_display_prepare& (0+255),w,b
 25537  00A67C  6ED9               	movwf	fsr2l,c
 25538  00A67E  0E02               	movlw	high _display_content
 25539  00A680  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25540  00A682  6EDA               	movwf	fsr2h,c
 25541  00A684  0E43               	movlw	67
 25542  00A686  6EDF               	movwf	indf2,c
 25543                           
 25544                           ;display.c: 406: display_content[0][cntr+11] = 'W';
 25545  00A688  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25546  00A68A  6FC6               	movwf	??_display_prepare& (0+255),b
 25547  00A68C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25548  00A68E  0E0B               	movlw	11
 25549  00A690                     L30:
 25550  00A690  27C6               	addwf	??_display_prepare& (0+255),f,b
 25551  00A692  0E00               	movlw	0
 25552  00A694  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25553  00A696  0E48               	movlw	low _display_content
 25554  00A698  25C6               	addwf	??_display_prepare& (0+255),w,b
 25555  00A69A  6ED9               	movwf	fsr2l,c
 25556  00A69C  0E02               	movlw	high _display_content
 25557  00A69E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25558  00A6A0  6EDA               	movwf	fsr2h,c
 25559  00A6A2  0E57               	movlw	87
 25560  00A6A4  6EDF               	movwf	indf2,c
 25561                           
 25562                           ; BSR set to: 0
 25563                           ;display.c: 407: };display.c: 409: _display_padded_itoa(os.divide_position, 0, temp);
 25564                           
 25565                           ; BSR set to: 0
 25566  00A6A6  C17C  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 25567  00A6AA  C17D  F079         	movff	_os+24,__display_padded_itoa@value+1	;volatile
 25568  00A6AE  0E00               	movlw	0
 25569  00A6B0  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25570  00A6B2  0EC8               	movlw	low display_prepare@temp
 25571  00A6B4  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25572  00A6B6  0E00               	movlw	high display_prepare@temp
 25573  00A6B8  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25574  00A6BA  ECFD  F090         	call	__display_padded_itoa	;wreg free
 25575                           
 25576                           ;display.c: 410: for(cntr=0; temp[cntr]; ++cntr)
 25577  00A6BE  0E00               	movlw	0
 25578  00A6C0  0100               	movlb	0	; () banked
 25579  00A6C2  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25580  00A6C4  D018               	goto	l1438
 25581  00A6C6                     
 25582                           ; BSR set to: 0
 25583                           ;display.c: 411: {;display.c: 412: display_content[1][cntr+5] = temp[cntr];
 25584                           
 25585                           ; BSR set to: 0
 25586  00A6C6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25587  00A6C8  0D01               	mullw	1
 25588  00A6CA  0EC8               	movlw	low display_prepare@temp
 25589  00A6CC  24F3               	addwf	prodl,w,c
 25590  00A6CE  6ED9               	movwf	fsr2l,c
 25591  00A6D0  0E00               	movlw	high display_prepare@temp
 25592  00A6D2  20F4               	addwfc	prodh,w,c
 25593  00A6D4  6EDA               	movwf	fsr2h,c
 25594  00A6D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25595  00A6D8  6FC6               	movwf	??_display_prepare& (0+255),b
 25596  00A6DA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25597  00A6DC  0E05               	movlw	5
 25598  00A6DE  27C6               	addwf	??_display_prepare& (0+255),f,b
 25599  00A6E0  0E00               	movlw	0
 25600  00A6E2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25601  00A6E4  0E5C               	movlw	low (_display_content+20)
 25602  00A6E6  25C6               	addwf	??_display_prepare& (0+255),w,b
 25603  00A6E8  6EE1               	movwf	fsr1l,c
 25604  00A6EA  0E02               	movlw	high (_display_content+20)
 25605  00A6EC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25606  00A6EE  6EE2               	movwf	fsr1h,c
 25607  00A6F0  CFDF FFE7          	movff	indf2,indf1
 25608                           
 25609                           ; BSR set to: 0
 25610  00A6F4  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25611  00A6F6                     l1438:
 25612                           
 25613                           ; BSR set to: 0
 25614                           
 25615                           ; BSR set to: 0
 25616  00A6F6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25617  00A6F8  0D01               	mullw	1
 25618  00A6FA  0EC8               	movlw	low display_prepare@temp
 25619  00A6FC  24F3               	addwf	prodl,w,c
 25620  00A6FE  6ED9               	movwf	fsr2l,c
 25621  00A700  0E00               	movlw	high display_prepare@temp
 25622  00A702  20F4               	addwfc	prodh,w,c
 25623  00A704  6EDA               	movwf	fsr2h,c
 25624  00A706  50DF               	movf	indf2,w,c
 25625  00A708  A4D8               	btfss	status,2,c
 25626  00A70A  D7DD               	goto	l1439
 25627                           
 25628                           ; BSR set to: 0
 25629                           ;display.c: 413: };display.c: 415: display_content[1][cntr+6] = '(';
 25630                           
 25631                           ; BSR set to: 0
 25632  00A70C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25633  00A70E  6FC6               	movwf	??_display_prepare& (0+255),b
 25634  00A710  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25635  00A712  0E06               	movlw	6
 25636  00A714  27C6               	addwf	??_display_prepare& (0+255),f,b
 25637  00A716  0E00               	movlw	0
 25638  00A718  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25639  00A71A  0E5C               	movlw	low (_display_content+20)
 25640  00A71C  25C6               	addwf	??_display_prepare& (0+255),w,b
 25641  00A71E  6ED9               	movwf	fsr2l,c
 25642  00A720  0E02               	movlw	high (_display_content+20)
 25643  00A722  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25644  00A724  6EDA               	movwf	fsr2h,c
 25645  00A726  0E28               	movlw	40
 25646  00A728  6EDF               	movwf	indf2,c
 25647                           
 25648                           ; BSR set to: 0
 25649                           ;display.c: 416: space = cntr + 7;
 25650  00A72A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25651  00A72C  0F07               	addlw	7
 25652  00A72E  6FD2               	movwf	display_prepare@space& (0+255),b
 25653                           
 25654                           ; BSR set to: 0
 25655                           ;display.c: 417: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 25656  00A730  EC8B  F0A9         	call	__display_position_in_degrees	;wreg free
 25657  00A734  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 25658  00A738  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 25659  00A73C  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 25660  00A740  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 25661  00A744  0E02               	movlw	2
 25662  00A746  0100               	movlb	0	; () banked
 25663  00A748  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 25664  00A74A  0EC8               	movlw	low display_prepare@temp
 25665  00A74C  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 25666  00A74E  0E00               	movlw	high display_prepare@temp
 25667  00A750  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25668  00A752  EC23  F088         	call	__display_itoa_long	;wreg free
 25669                           
 25670                           ;display.c: 418: for(cntr=0; temp[cntr]; ++cntr)
 25671  00A756  0E00               	movlw	0
 25672  00A758  0100               	movlb	0	; () banked
 25673  00A75A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25674  00A75C  D018               	goto	l1441
 25675  00A75E                     
 25676                           ; BSR set to: 0
 25677                           ;display.c: 419: {;display.c: 420: display_content[1][cntr+space] = temp[cntr];
 25678                           
 25679                           ; BSR set to: 0
 25680  00A75E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25681  00A760  0D01               	mullw	1
 25682  00A762  0EC8               	movlw	low display_prepare@temp
 25683  00A764  24F3               	addwf	prodl,w,c
 25684  00A766  6ED9               	movwf	fsr2l,c
 25685  00A768  0E00               	movlw	high display_prepare@temp
 25686  00A76A  20F4               	addwfc	prodh,w,c
 25687  00A76C  6EDA               	movwf	fsr2h,c
 25688  00A76E  51D2               	movf	display_prepare@space& (0+255),w,b
 25689  00A770  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 25690  00A774  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25691  00A776  27C6               	addwf	??_display_prepare& (0+255),f,b
 25692  00A778  0E00               	movlw	0
 25693  00A77A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25694  00A77C  0E5C               	movlw	low (_display_content+20)
 25695  00A77E  25C6               	addwf	??_display_prepare& (0+255),w,b
 25696  00A780  6EE1               	movwf	fsr1l,c
 25697  00A782  0E02               	movlw	high (_display_content+20)
 25698  00A784  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25699  00A786  6EE2               	movwf	fsr1h,c
 25700  00A788  CFDF FFE7          	movff	indf2,indf1
 25701                           
 25702                           ; BSR set to: 0
 25703  00A78C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25704  00A78E                     l1441:
 25705                           
 25706                           ; BSR set to: 0
 25707                           
 25708                           ; BSR set to: 0
 25709  00A78E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25710  00A790  0D01               	mullw	1
 25711  00A792  0EC8               	movlw	low display_prepare@temp
 25712  00A794  24F3               	addwf	prodl,w,c
 25713  00A796  6ED9               	movwf	fsr2l,c
 25714  00A798  0E00               	movlw	high display_prepare@temp
 25715  00A79A  20F4               	addwfc	prodh,w,c
 25716  00A79C  6EDA               	movwf	fsr2h,c
 25717  00A79E  50DF               	movf	indf2,w,c
 25718  00A7A0  A4D8               	btfss	status,2,c
 25719  00A7A2  D7DD               	goto	l1442
 25720                           
 25721                           ; BSR set to: 0
 25722                           ;display.c: 421: };display.c: 422: display_content[1][cntr+space] = 0x01;
 25723                           
 25724                           ; BSR set to: 0
 25725  00A7A4  51D2               	movf	display_prepare@space& (0+255),w,b
 25726  00A7A6  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 25727  00A7AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25728  00A7AC  27C6               	addwf	??_display_prepare& (0+255),f,b
 25729  00A7AE  0E00               	movlw	0
 25730  00A7B0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25731  00A7B2  0E5C               	movlw	low (_display_content+20)
 25732  00A7B4  25C6               	addwf	??_display_prepare& (0+255),w,b
 25733  00A7B6  6ED9               	movwf	fsr2l,c
 25734  00A7B8  0E02               	movlw	high (_display_content+20)
 25735  00A7BA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25736  00A7BC  6EDA               	movwf	fsr2h,c
 25737  00A7BE  0E01               	movlw	1
 25738  00A7C0  6EDF               	movwf	indf2,c
 25739                           
 25740                           ;display.c: 423: display_content[1][cntr+space+1] = ')';
 25741  00A7C2  51D2               	movf	display_prepare@space& (0+255),w,b
 25742  00A7C4  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 25743  00A7C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25744  00A7CA  27C6               	addwf	??_display_prepare& (0+255),f,b
 25745  00A7CC  0E00               	movlw	0
 25746  00A7CE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25747  00A7D0  0E01               	movlw	1
 25748  00A7D2  27C6               	addwf	??_display_prepare& (0+255),f,b
 25749  00A7D4  0E00               	movlw	0
 25750  00A7D6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25751  00A7D8  0E5C               	movlw	low (_display_content+20)
 25752  00A7DA  25C6               	addwf	??_display_prepare& (0+255),w,b
 25753  00A7DC  6ED9               	movwf	fsr2l,c
 25754  00A7DE  0E02               	movlw	high (_display_content+20)
 25755  00A7E0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25756  00A7E2  6EDA               	movwf	fsr2h,c
 25757  00A7E4  0E29               	movlw	41
 25758  00A7E6  6EDF               	movwf	indf2,c
 25759                           
 25760                           ; BSR set to: 0
 25761                           ;display.c: 425: _display_signed_itoa(os.divide_jump_size, temp);
 25762  00A7E8  C17E  F08F         	movff	_os+25,__display_signed_itoa@value	;volatile
 25763  00A7EC  C17F  F090         	movff	_os+26,__display_signed_itoa@value+1	;volatile
 25764  00A7F0  0EC8               	movlw	low display_prepare@temp
 25765  00A7F2  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 25766  00A7F4  0E00               	movlw	high display_prepare@temp
 25767  00A7F6  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 25768  00A7F8  EC2D  F0AB         	call	__display_signed_itoa	;wreg free
 25769                           
 25770                           ;display.c: 426: for(cntr=0; temp[cntr]; ++cntr)
 25771  00A7FC  0E00               	movlw	0
 25772  00A7FE  0100               	movlb	0	; () banked
 25773  00A800  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25774  00A802  D018               	goto	l1444
 25775  00A804                     
 25776                           ; BSR set to: 0
 25777                           ;display.c: 427: {;display.c: 428: display_content[2][cntr+11] = temp[cntr];
 25778                           
 25779                           ; BSR set to: 0
 25780  00A804  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25781  00A806  0D01               	mullw	1
 25782  00A808  0EC8               	movlw	low display_prepare@temp
 25783  00A80A  24F3               	addwf	prodl,w,c
 25784  00A80C  6ED9               	movwf	fsr2l,c
 25785  00A80E  0E00               	movlw	high display_prepare@temp
 25786  00A810  20F4               	addwfc	prodh,w,c
 25787  00A812  6EDA               	movwf	fsr2h,c
 25788  00A814  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25789  00A816  6FC6               	movwf	??_display_prepare& (0+255),b
 25790  00A818  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25791  00A81A  0E0B               	movlw	11
 25792  00A81C  27C6               	addwf	??_display_prepare& (0+255),f,b
 25793  00A81E  0E00               	movlw	0
 25794  00A820  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25795  00A822  0E70               	movlw	low (_display_content+40)
 25796  00A824  25C6               	addwf	??_display_prepare& (0+255),w,b
 25797  00A826  6EE1               	movwf	fsr1l,c
 25798  00A828  0E02               	movlw	high (_display_content+40)
 25799  00A82A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25800  00A82C  6EE2               	movwf	fsr1h,c
 25801  00A82E  CFDF FFE7          	movff	indf2,indf1
 25802                           
 25803                           ; BSR set to: 0
 25804  00A832  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25805  00A834                     l1444:
 25806                           
 25807                           ; BSR set to: 0
 25808                           
 25809                           ; BSR set to: 0
 25810  00A834  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25811  00A836  0D01               	mullw	1
 25812  00A838  0EC8               	movlw	low display_prepare@temp
 25813  00A83A  24F3               	addwf	prodl,w,c
 25814  00A83C  6ED9               	movwf	fsr2l,c
 25815  00A83E  0E00               	movlw	high display_prepare@temp
 25816  00A840  20F4               	addwfc	prodh,w,c
 25817  00A842  6EDA               	movwf	fsr2h,c
 25818  00A844  50DF               	movf	indf2,w,c
 25819  00A846  B4D8               	btfsc	status,2,c
 25820  00A848  D3B3               	goto	l1407
 25821  00A84A  D7DC               	goto	l1445
 25822  00A84C                     
 25823                           ; BSR set to: 0
 25824                           ;display.c: 433: memcpy(display_content, dc_arc1, sizeof display_content);
 25825                           
 25826                           ; BSR set to: 0
 25827  00A84C  0E48               	movlw	low _display_content
 25828  00A84E  6F60               	movwf	memcpy@d1& (0+255),b
 25829  00A850  0E02               	movlw	high _display_content
 25830  00A852  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25831  00A854  0EDE               	movlw	low _dc_arc1
 25832  00A856  6F62               	movwf	memcpy@s1& (0+255),b
 25833  00A858  0E9E               	movlw	high _dc_arc1
 25834  00A85A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25835  00A85C  0E00               	movlw	0
 25836  00A85E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25837  00A860  0E50               	movlw	80
 25838  00A862  6F64               	movwf	memcpy@n& (0+255),b
 25839  00A864  ECCA  F0A5         	call	_memcpy	;wreg free
 25840                           
 25841                           ;display.c: 434: switch(os.displayState)
 25842  00A868  D008               	goto	l1448
 25843  00A86A                     
 25844                           ;display.c: 437: display_content[2][12] = '>';
 25845  00A86A  0E3E               	movlw	62
 25846  00A86C  0102               	movlb	2	; () banked
 25847  00A86E  6F7C               	movwf	(_display_content+52)& (0+255),b
 25848                           
 25849                           ;display.c: 438: break;
 25850  00A870  D00C               	goto	l1450
 25851  00A872                     
 25852                           ;display.c: 440: display_content[3][12] = '>';
 25853                           
 25854                           ; BSR set to: 2
 25855  00A872  0E3E               	movlw	62
 25856  00A874  0102               	movlb	2	; () banked
 25857  00A876  6F90               	movwf	(_display_content+72)& (0+255),b
 25858                           
 25859                           ; BSR set to: 2
 25860                           ;display.c: 442: }
 25861                           
 25862                           ;display.c: 441: break;
 25863  00A878  D008               	goto	l1450
 25864  00A87A                     l1448:
 25865                           
 25866                           ; BSR set to: 2
 25867  00A87A  0101               	movlb	1	; () banked
 25868  00A87C  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25869                           
 25870                           ; Switch size 1, requested type "space"
 25871                           ; Number of cases is 2, Range of values is 81 to 82
 25872                           ; switch strategies available:
 25873                           ; Name         Instructions Cycles
 25874                           ; simple_byte            7     4 (average)
 25875                           ;	Chosen strategy is simple_byte
 25876  00A87E  0A51               	xorlw	81	; case 81
 25877  00A880  B4D8               	btfsc	status,2,c
 25878  00A882  D7F3               	goto	l1449
 25879  00A884  0A03               	xorlw	3	; case 82
 25880  00A886  B4D8               	btfsc	status,2,c
 25881  00A888  D7F4               	goto	l1451
 25882  00A88A                     l1450:
 25883                           
 25884                           ;display.c: 445: _display_itoa_long(os.arc_size, 2, temp);
 25885                           
 25886                           ; BSR set to: 1
 25887  00A88A  C182  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 25888  00A88E  C183  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 25889  00A892  C184  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 25890  00A896  C185  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 25891  00A89A  0E02               	movlw	2
 25892  00A89C  0100               	movlb	0	; () banked
 25893  00A89E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 25894  00A8A0  0EC8               	movlw	low display_prepare@temp
 25895  00A8A2  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 25896  00A8A4  0E00               	movlw	high display_prepare@temp
 25897  00A8A6  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25898  00A8A8  EC23  F088         	call	__display_itoa_long	;wreg free
 25899                           
 25900                           ;display.c: 446: for(cntr=0; temp[cntr]; ++cntr)
 25901  00A8AC  0E00               	movlw	0
 25902  00A8AE  0100               	movlb	0	; () banked
 25903  00A8B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25904  00A8B2  D018               	goto	l1452
 25905  00A8B4                     
 25906                           ; BSR set to: 0
 25907                           ;display.c: 447: {;display.c: 448: display_content[1][10+cntr] = temp[cntr];
 25908                           
 25909                           ; BSR set to: 0
 25910  00A8B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25911  00A8B6  0D01               	mullw	1
 25912  00A8B8  0EC8               	movlw	low display_prepare@temp
 25913  00A8BA  24F3               	addwf	prodl,w,c
 25914  00A8BC  6ED9               	movwf	fsr2l,c
 25915  00A8BE  0E00               	movlw	high display_prepare@temp
 25916  00A8C0  20F4               	addwfc	prodh,w,c
 25917  00A8C2  6EDA               	movwf	fsr2h,c
 25918  00A8C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25919  00A8C6  6FC6               	movwf	??_display_prepare& (0+255),b
 25920  00A8C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25921  00A8CA  0E0A               	movlw	10
 25922  00A8CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 25923  00A8CE  0E00               	movlw	0
 25924  00A8D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25925  00A8D2  0E5C               	movlw	low (_display_content+20)
 25926  00A8D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 25927  00A8D6  6EE1               	movwf	fsr1l,c
 25928  00A8D8  0E02               	movlw	high (_display_content+20)
 25929  00A8DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25930  00A8DC  6EE2               	movwf	fsr1h,c
 25931  00A8DE  CFDF FFE7          	movff	indf2,indf1
 25932                           
 25933                           ; BSR set to: 0
 25934  00A8E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25935  00A8E4                     l1452:
 25936                           
 25937                           ; BSR set to: 0
 25938                           
 25939                           ; BSR set to: 0
 25940  00A8E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25941  00A8E6  0D01               	mullw	1
 25942  00A8E8  0EC8               	movlw	low display_prepare@temp
 25943  00A8EA  24F3               	addwf	prodl,w,c
 25944  00A8EC  6ED9               	movwf	fsr2l,c
 25945  00A8EE  0E00               	movlw	high display_prepare@temp
 25946  00A8F0  20F4               	addwfc	prodh,w,c
 25947  00A8F2  6EDA               	movwf	fsr2h,c
 25948  00A8F4  50DF               	movf	indf2,w,c
 25949  00A8F6  A4D8               	btfss	status,2,c
 25950  00A8F8  D7DD               	goto	l1453
 25951                           
 25952                           ; BSR set to: 0
 25953                           ;display.c: 449: };display.c: 450: display_content[1][10+cntr] = 0x01;
 25954                           
 25955                           ; BSR set to: 0
 25956  00A8FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25957  00A8FC  6FC6               	movwf	??_display_prepare& (0+255),b
 25958  00A8FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25959  00A900  0E0A               	movlw	10
 25960  00A902  27C6               	addwf	??_display_prepare& (0+255),f,b
 25961  00A904  0E00               	movlw	0
 25962  00A906  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25963  00A908  0E5C               	movlw	low (_display_content+20)
 25964  00A90A  25C6               	addwf	??_display_prepare& (0+255),w,b
 25965  00A90C  6ED9               	movwf	fsr2l,c
 25966  00A90E  0E02               	movlw	high (_display_content+20)
 25967  00A910  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25968  00A912  6EDA               	movwf	fsr2h,c
 25969  00A914  0E01               	movlw	1
 25970  00A916  6EDF               	movwf	indf2,c
 25971                           
 25972                           ; BSR set to: 0
 25973                           ;display.c: 453: _display_itoa(os.arc_step_size, 2, temp);
 25974  00A918  C180  F09F         	movff	_os+27,__display_itoa@value	;volatile
 25975  00A91C  C181  F0A0         	movff	_os+28,__display_itoa@value+1	;volatile
 25976  00A920  0E02               	movlw	2
 25977  00A922  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 25978  00A924  0EC8               	movlw	low display_prepare@temp
 25979  00A926  6FA2               	movwf	__display_itoa@text& (0+255),b
 25980  00A928  0E00               	movlw	high display_prepare@temp
 25981  00A92A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 25982  00A92C  EC3C  F072         	call	__display_itoa	;wreg free
 25983                           
 25984                           ;display.c: 454: if(os.arc_step_size>999)
 25985  00A930  0EE8               	movlw	232
 25986  00A932  0101               	movlb	1	; () banked
 25987  00A934  5D80               	subwf	(_os+27)& (0+255),w,b	;volatile
 25988  00A936  0E03               	movlw	3
 25989  00A938  5981               	subwfb	(_os+28)& (0+255),w,b	;volatile
 25990  00A93A  A0D8               	btfss	status,0,c
 25991  00A93C  D002               	goto	l1455
 25992                           
 25993                           ; BSR set to: 1
 25994                           ;display.c: 455: space = 0;
 25995  00A93E  0E00               	movlw	0
 25996  00A940  D001               	goto	L24
 25997  00A942                     l1455:
 25998                           
 25999                           ;display.c: 456: else;display.c: 457: space = 1;
 26000                           
 26001                           ; BSR set to: 0
 26002  00A942  0E01               	movlw	1
 26003  00A944                     L24:
 26004  00A944  0100               	movlb	0	; () banked
 26005  00A946  6FD2               	movwf	display_prepare@space& (0+255),b
 26006                           
 26007                           ; BSR set to: 0
 26008                           ;display.c: 458: for(cntr=0; temp[cntr]; ++cntr)
 26009  00A948  0E00               	movlw	0
 26010  00A94A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26011  00A94C  D018               	goto	l1457
 26012  00A94E                     
 26013                           ; BSR set to: 0
 26014                           ;display.c: 459: {;display.c: 460: display_content[3][space+cntr] = temp[cntr];
 26015                           
 26016                           ; BSR set to: 0
 26017  00A94E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26018  00A950  0D01               	mullw	1
 26019  00A952  0EC8               	movlw	low display_prepare@temp
 26020  00A954  24F3               	addwf	prodl,w,c
 26021  00A956  6ED9               	movwf	fsr2l,c
 26022  00A958  0E00               	movlw	high display_prepare@temp
 26023  00A95A  20F4               	addwfc	prodh,w,c
 26024  00A95C  6EDA               	movwf	fsr2h,c
 26025  00A95E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26026  00A960  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26027  00A964  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26028  00A966  27C6               	addwf	??_display_prepare& (0+255),f,b
 26029  00A968  0E00               	movlw	0
 26030  00A96A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26031  00A96C  0E84               	movlw	low (_display_content+60)
 26032  00A96E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26033  00A970  6EE1               	movwf	fsr1l,c
 26034  00A972  0E02               	movlw	high (_display_content+60)
 26035  00A974  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26036  00A976  6EE2               	movwf	fsr1h,c
 26037  00A978  CFDF FFE7          	movff	indf2,indf1
 26038                           
 26039                           ; BSR set to: 0
 26040  00A97C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26041  00A97E                     l1457:
 26042                           
 26043                           ; BSR set to: 0
 26044                           
 26045                           ; BSR set to: 0
 26046  00A97E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26047  00A980  0D01               	mullw	1
 26048  00A982  0EC8               	movlw	low display_prepare@temp
 26049  00A984  24F3               	addwf	prodl,w,c
 26050  00A986  6ED9               	movwf	fsr2l,c
 26051  00A988  0E00               	movlw	high display_prepare@temp
 26052  00A98A  20F4               	addwfc	prodh,w,c
 26053  00A98C  6EDA               	movwf	fsr2h,c
 26054  00A98E  50DF               	movf	indf2,w,c
 26055  00A990  A4D8               	btfss	status,2,c
 26056  00A992  D7DD               	goto	l1458
 26057                           
 26058                           ; BSR set to: 0
 26059                           ;display.c: 461: };display.c: 462: display_content[3][space+cntr] = 0x01 ;
 26060                           
 26061                           ; BSR set to: 0
 26062  00A994  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26063  00A996  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26064  00A99A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26065  00A99C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26066  00A99E  0E00               	movlw	0
 26067  00A9A0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26068  00A9A2  0E84               	movlw	low (_display_content+60)
 26069  00A9A4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26070  00A9A6  6ED9               	movwf	fsr2l,c
 26071  00A9A8  0E02               	movlw	high (_display_content+60)
 26072  00A9AA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26073  00A9AC  6EDA               	movwf	fsr2h,c
 26074  00A9AE  0E01               	movlw	1
 26075  00A9B0  D268               	goto	L27
 26076  00A9B2                     
 26077                           ; BSR set to: 0
 26078                           ;display.c: 467: memcpy(display_content, dc_arc2, sizeof display_content);
 26079                           
 26080                           ; BSR set to: 0
 26081  00A9B2  0E48               	movlw	low _display_content
 26082  00A9B4  6F60               	movwf	memcpy@d1& (0+255),b
 26083  00A9B6  0E02               	movlw	high _display_content
 26084  00A9B8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26085  00A9BA  0E8E               	movlw	low _dc_arc2
 26086  00A9BC  6F62               	movwf	memcpy@s1& (0+255),b
 26087  00A9BE  0E9E               	movlw	high _dc_arc2
 26088  00A9C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26089  00A9C2  0E00               	movlw	0
 26090  00A9C4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26091  00A9C6  0E50               	movlw	80
 26092  00A9C8  6F64               	movwf	memcpy@n& (0+255),b
 26093  00A9CA  ECCA  F0A5         	call	_memcpy	;wreg free
 26094                           
 26095                           ;display.c: 468: switch(os.displayState)
 26096  00A9CE  D025               	goto	l1461
 26097  00A9D0                     
 26098                           ;display.c: 471: display_content[2][6] = 'W';
 26099  00A9D0  0E57               	movlw	87
 26100  00A9D2  0102               	movlb	2	; () banked
 26101  00A9D4  6F76               	movwf	(_display_content+46)& (0+255),b
 26102                           
 26103                           ;display.c: 472: display_content[2][7] = ' ';
 26104  00A9D6  0E20               	movlw	32
 26105  00A9D8  6F77               	movwf	(_display_content+47)& (0+255),b
 26106                           
 26107                           ;display.c: 473: break;
 26108  00A9DA  D027               	goto	l1463
 26109  00A9DC                     
 26110                           ;display.c: 475: memcpy(display_content[2], "        ", 8);
 26111                           
 26112                           ; BSR set to: 2
 26113  00A9DC  0E70               	movlw	low (_display_content+40)
 26114  00A9DE  0100               	movlb	0	; () banked
 26115  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26116  00A9E2  0E02               	movlw	high (_display_content+40)
 26117  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26118  00A9E6  0E29               	movlw	low STR_1
 26119  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26120  00A9EA  0EA3               	movlw	high STR_1
 26121  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26122  00A9EE  0E00               	movlw	0
 26123  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26124  00A9F2  0E08               	movlw	8
 26125  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26126  00A9F6  ECCA  F0A5         	call	_memcpy	;wreg free
 26127                           
 26128                           ;display.c: 476: memcpy(display_content[3], "Cancel", 6);
 26129  00A9FA  0E84               	movlw	low (_display_content+60)
 26130  00A9FC  0100               	movlb	0	; () banked
 26131  00A9FE  6F60               	movwf	memcpy@d1& (0+255),b
 26132  00AA00  0E02               	movlw	high (_display_content+60)
 26133  00AA02  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26134  00AA04  0E32               	movlw	low STR_2
 26135  00AA06  6F62               	movwf	memcpy@s1& (0+255),b
 26136  00AA08  0EA3               	movlw	high STR_2
 26137  00AA0A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26138  00AA0C  0E00               	movlw	0
 26139  00AA0E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26140  00AA10  0E06               	movlw	6
 26141  00AA12  6F64               	movwf	memcpy@n& (0+255),b
 26142  00AA14  ECCA  F0A5         	call	_memcpy	;wreg free
 26143                           
 26144                           ;display.c: 478: }
 26145                           
 26146                           ;display.c: 477: break;
 26147  00AA18  D008               	goto	l1463
 26148  00AA1A                     l1461:
 26149  00AA1A  0101               	movlb	1	; () banked
 26150  00AA1C  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 26151                           
 26152                           ; Switch size 1, requested type "space"
 26153                           ; Number of cases is 2, Range of values is 98 to 99
 26154                           ; switch strategies available:
 26155                           ; Name         Instructions Cycles
 26156                           ; simple_byte            7     4 (average)
 26157                           ;	Chosen strategy is simple_byte
 26158  00AA1E  0A62               	xorlw	98	; case 98
 26159  00AA20  B4D8               	btfsc	status,2,c
 26160  00AA22  D7DC               	goto	l1464
 26161  00AA24  0A01               	xorlw	1	; case 99
 26162  00AA26  B4D8               	btfsc	status,2,c
 26163  00AA28  D7D3               	goto	l1462
 26164  00AA2A                     l1463:
 26165                           
 26166                           ;display.c: 481: _display_itoa_long(os.arc_size, 2, temp);
 26167                           
 26168                           ; BSR set to: 1
 26169  00AA2A  C182  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26170  00AA2E  C183  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26171  00AA32  C184  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26172  00AA36  C185  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26173  00AA3A  0E02               	movlw	2
 26174  00AA3C  0100               	movlb	0	; () banked
 26175  00AA3E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26176  00AA40  0EC8               	movlw	low display_prepare@temp
 26177  00AA42  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26178  00AA44  0E00               	movlw	high display_prepare@temp
 26179  00AA46  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26180  00AA48  EC23  F088         	call	__display_itoa_long	;wreg free
 26181                           
 26182                           ;display.c: 482: for(cntr=0; temp[cntr]; ++cntr)
 26183  00AA4C  0E00               	movlw	0
 26184  00AA4E  0100               	movlb	0	; () banked
 26185  00AA50  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26186  00AA52  D018               	goto	l1465
 26187  00AA54                     
 26188                           ; BSR set to: 0
 26189                           ;display.c: 483: {;display.c: 484: display_content[0][10+cntr] = temp[cntr];
 26190                           
 26191                           ; BSR set to: 0
 26192  00AA54  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26193  00AA56  0D01               	mullw	1
 26194  00AA58  0EC8               	movlw	low display_prepare@temp
 26195  00AA5A  24F3               	addwf	prodl,w,c
 26196  00AA5C  6ED9               	movwf	fsr2l,c
 26197  00AA5E  0E00               	movlw	high display_prepare@temp
 26198  00AA60  20F4               	addwfc	prodh,w,c
 26199  00AA62  6EDA               	movwf	fsr2h,c
 26200  00AA64  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26201  00AA66  6FC6               	movwf	??_display_prepare& (0+255),b
 26202  00AA68  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26203  00AA6A  0E0A               	movlw	10
 26204  00AA6C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26205  00AA6E  0E00               	movlw	0
 26206  00AA70  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26207  00AA72  0E48               	movlw	low _display_content
 26208  00AA74  25C6               	addwf	??_display_prepare& (0+255),w,b
 26209  00AA76  6EE1               	movwf	fsr1l,c
 26210  00AA78  0E02               	movlw	high _display_content
 26211  00AA7A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26212  00AA7C  6EE2               	movwf	fsr1h,c
 26213  00AA7E  CFDF FFE7          	movff	indf2,indf1
 26214                           
 26215                           ; BSR set to: 0
 26216  00AA82  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26217  00AA84                     l1465:
 26218                           
 26219                           ; BSR set to: 0
 26220                           
 26221                           ; BSR set to: 0
 26222  00AA84  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26223  00AA86  0D01               	mullw	1
 26224  00AA88  0EC8               	movlw	low display_prepare@temp
 26225  00AA8A  24F3               	addwf	prodl,w,c
 26226  00AA8C  6ED9               	movwf	fsr2l,c
 26227  00AA8E  0E00               	movlw	high display_prepare@temp
 26228  00AA90  20F4               	addwfc	prodh,w,c
 26229  00AA92  6EDA               	movwf	fsr2h,c
 26230  00AA94  50DF               	movf	indf2,w,c
 26231  00AA96  A4D8               	btfss	status,2,c
 26232  00AA98  D7DD               	goto	l1466
 26233                           
 26234                           ; BSR set to: 0
 26235                           ;display.c: 485: };display.c: 486: display_content[0][10+cntr] = 0x01;
 26236                           
 26237                           ; BSR set to: 0
 26238  00AA9A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26239  00AA9C  6FC6               	movwf	??_display_prepare& (0+255),b
 26240  00AA9E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26241  00AAA0  0E0A               	movlw	10
 26242  00AAA2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26243  00AAA4  0E00               	movlw	0
 26244  00AAA6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26245  00AAA8  0E48               	movlw	low _display_content
 26246  00AAAA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26247  00AAAC  6ED9               	movwf	fsr2l,c
 26248  00AAAE  0E02               	movlw	high _display_content
 26249  00AAB0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26250  00AAB2  6EDA               	movwf	fsr2h,c
 26251  00AAB4  0E01               	movlw	1
 26252  00AAB6  6EDF               	movwf	indf2,c
 26253                           
 26254                           ; BSR set to: 0
 26255                           ;display.c: 489: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26256  00AAB8  EC8B  F0A9         	call	__display_position_in_degrees	;wreg free
 26257  00AABC  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26258  00AAC0  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26259  00AAC4  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26260  00AAC8  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26261  00AACC  0E02               	movlw	2
 26262  00AACE  0100               	movlb	0	; () banked
 26263  00AAD0  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26264  00AAD2  0EC8               	movlw	low display_prepare@temp
 26265  00AAD4  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26266  00AAD6  0E00               	movlw	high display_prepare@temp
 26267  00AAD8  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26268  00AADA  EC23  F088         	call	__display_itoa_long	;wreg free
 26269                           
 26270                           ;display.c: 490: space = 6-strlen(temp);
 26271  00AADE  0EC8               	movlw	low display_prepare@temp
 26272  00AAE0  0100               	movlb	0	; () banked
 26273  00AAE2  6F60               	movwf	strlen@s& (0+255),b
 26274  00AAE4  0E00               	movlw	high display_prepare@temp
 26275  00AAE6  6F61               	movwf	(strlen@s+1)& (0+255),b
 26276  00AAE8  ECF5  F0AB         	call	_strlen	;wreg free
 26277  00AAEC  0100               	movlb	0	; () banked
 26278  00AAEE  5160               	movf	?_strlen& (0+255),w,b
 26279  00AAF0  0800               	sublw	0
 26280  00AAF2  0F06               	addlw	6
 26281  00AAF4  6FD2               	movwf	display_prepare@space& (0+255),b
 26282                           
 26283                           ; BSR set to: 0
 26284                           ;display.c: 491: for(cntr=0; temp[cntr]; ++cntr)
 26285  00AAF6  0E00               	movlw	0
 26286  00AAF8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26287  00AAFA  D01C               	goto	l1468
 26288  00AAFC                     
 26289                           ; BSR set to: 0
 26290                           ;display.c: 492: {;display.c: 493: display_content[1][13+space+cntr] = temp[cntr];
 26291                           
 26292                           ; BSR set to: 0
 26293  00AAFC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26294  00AAFE  0D01               	mullw	1
 26295  00AB00  0EC8               	movlw	low display_prepare@temp
 26296  00AB02  24F3               	addwf	prodl,w,c
 26297  00AB04  6ED9               	movwf	fsr2l,c
 26298  00AB06  0E00               	movlw	high display_prepare@temp
 26299  00AB08  20F4               	addwfc	prodh,w,c
 26300  00AB0A  6EDA               	movwf	fsr2h,c
 26301  00AB0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26302  00AB0E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26303  00AB12  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26304  00AB14  27C6               	addwf	??_display_prepare& (0+255),f,b
 26305  00AB16  0E00               	movlw	0
 26306  00AB18  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26307  00AB1A  0E0D               	movlw	13
 26308  00AB1C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26309  00AB1E  0E00               	movlw	0
 26310  00AB20  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26311  00AB22  0E5C               	movlw	low (_display_content+20)
 26312  00AB24  25C6               	addwf	??_display_prepare& (0+255),w,b
 26313  00AB26  6EE1               	movwf	fsr1l,c
 26314  00AB28  0E02               	movlw	high (_display_content+20)
 26315  00AB2A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26316  00AB2C  6EE2               	movwf	fsr1h,c
 26317  00AB2E  CFDF FFE7          	movff	indf2,indf1
 26318                           
 26319                           ; BSR set to: 0
 26320  00AB32  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26321  00AB34                     l1468:
 26322                           
 26323                           ; BSR set to: 0
 26324                           
 26325                           ; BSR set to: 0
 26326  00AB34  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26327  00AB36  0D01               	mullw	1
 26328  00AB38  0EC8               	movlw	low display_prepare@temp
 26329  00AB3A  24F3               	addwf	prodl,w,c
 26330  00AB3C  6ED9               	movwf	fsr2l,c
 26331  00AB3E  0E00               	movlw	high display_prepare@temp
 26332  00AB40  20F4               	addwfc	prodh,w,c
 26333  00AB42  6EDA               	movwf	fsr2h,c
 26334  00AB44  50DF               	movf	indf2,w,c
 26335  00AB46  A4D8               	btfss	status,2,c
 26336  00AB48  D7D9               	goto	l1469
 26337                           
 26338                           ; BSR set to: 0
 26339                           ;display.c: 494: };display.c: 497: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26340                           
 26341                           ; BSR set to: 0
 26342  00AB4A  C186  F09D         	movff	_os+33,motor_speed_from_index@speed_index	;volatile
 26343  00AB4E  C187  F09E         	movff	_os+34,motor_speed_from_index@speed_index+1	;volatile
 26344  00AB52  EC03  F0B0         	call	_motor_speed_from_index	;wreg free
 26345  00AB56  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 26346  00AB5A  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26347  00AB5E  0E02               	movlw	2
 26348  00AB60  0100               	movlb	0	; () banked
 26349  00AB62  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26350  00AB64  0EC8               	movlw	low display_prepare@temp
 26351  00AB66  6FA2               	movwf	__display_itoa@text& (0+255),b
 26352  00AB68  0E00               	movlw	high display_prepare@temp
 26353  00AB6A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26354  00AB6C  EC3C  F072         	call	__display_itoa	;wreg free
 26355                           
 26356                           ;display.c: 498: for(cntr=0; temp[cntr]; ++cntr)
 26357  00AB70  0E00               	movlw	0
 26358  00AB72  0100               	movlb	0	; () banked
 26359  00AB74  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26360  00AB76  D018               	goto	l1471
 26361  00AB78                     
 26362                           ; BSR set to: 0
 26363                           ;display.c: 499: {;display.c: 500: display_content[3][11+cntr] = temp[cntr];
 26364                           
 26365                           ; BSR set to: 0
 26366  00AB78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26367  00AB7A  0D01               	mullw	1
 26368  00AB7C  0EC8               	movlw	low display_prepare@temp
 26369  00AB7E  24F3               	addwf	prodl,w,c
 26370  00AB80  6ED9               	movwf	fsr2l,c
 26371  00AB82  0E00               	movlw	high display_prepare@temp
 26372  00AB84  20F4               	addwfc	prodh,w,c
 26373  00AB86  6EDA               	movwf	fsr2h,c
 26374  00AB88  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26375  00AB8A  6FC6               	movwf	??_display_prepare& (0+255),b
 26376  00AB8C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26377  00AB8E  0E0B               	movlw	11
 26378  00AB90  27C6               	addwf	??_display_prepare& (0+255),f,b
 26379  00AB92  0E00               	movlw	0
 26380  00AB94  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26381  00AB96  0E84               	movlw	low (_display_content+60)
 26382  00AB98  25C6               	addwf	??_display_prepare& (0+255),w,b
 26383  00AB9A  6EE1               	movwf	fsr1l,c
 26384  00AB9C  0E02               	movlw	high (_display_content+60)
 26385  00AB9E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26386  00ABA0  6EE2               	movwf	fsr1h,c
 26387  00ABA2  CFDF FFE7          	movff	indf2,indf1
 26388                           
 26389                           ; BSR set to: 0
 26390  00ABA6  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26391  00ABA8                     l1471:
 26392                           
 26393                           ; BSR set to: 0
 26394                           
 26395                           ; BSR set to: 0
 26396  00ABA8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26397  00ABAA  0D01               	mullw	1
 26398  00ABAC  0EC8               	movlw	low display_prepare@temp
 26399  00ABAE  24F3               	addwf	prodl,w,c
 26400  00ABB0  6ED9               	movwf	fsr2l,c
 26401  00ABB2  0E00               	movlw	high display_prepare@temp
 26402  00ABB4  20F4               	addwfc	prodh,w,c
 26403  00ABB6  6EDA               	movwf	fsr2h,c
 26404  00ABB8  50DF               	movf	indf2,w,c
 26405  00ABBA  A4D8               	btfss	status,2,c
 26406  00ABBC  D7DD               	goto	l1472
 26407  00ABBE  D135               	goto	L89
 26408  00ABC0                     
 26409                           ; BSR set to: 0
 26410                           ;display.c: 513: memcpy(display_content, dc_zero, sizeof display_content);
 26411                           
 26412                           ; BSR set to: 0
 26413  00ABC0  0E48               	movlw	low _display_content
 26414  00ABC2  6F60               	movwf	memcpy@d1& (0+255),b
 26415  00ABC4  0E02               	movlw	high _display_content
 26416  00ABC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26417  00ABC8  0E3E               	movlw	low _dc_zero
 26418  00ABCA  6F62               	movwf	memcpy@s1& (0+255),b
 26419  00ABCC  0E9E               	movlw	high _dc_zero
 26420  00ABCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26421  00ABD0  0E00               	movlw	0
 26422  00ABD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26423  00ABD4  0E50               	movlw	80
 26424  00ABD6  6F64               	movwf	memcpy@n& (0+255),b
 26425  00ABD8  ECCA  F0A5         	call	_memcpy	;wreg free
 26426                           
 26427                           ;display.c: 516: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26428  00ABDC  EC8B  F0A9         	call	__display_position_in_degrees	;wreg free
 26429  00ABE0  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26430  00ABE4  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26431  00ABE8  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26432  00ABEC  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26433  00ABF0  0E02               	movlw	2
 26434  00ABF2  0100               	movlb	0	; () banked
 26435  00ABF4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26436  00ABF6  0EC8               	movlw	low display_prepare@temp
 26437  00ABF8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26438  00ABFA  0E00               	movlw	high display_prepare@temp
 26439  00ABFC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26440  00ABFE  EC23  F088         	call	__display_itoa_long	;wreg free
 26441                           
 26442                           ;display.c: 517: for(cntr=0; temp[cntr]; ++cntr)
 26443  00AC02  0E00               	movlw	0
 26444  00AC04  0100               	movlb	0	; () banked
 26445  00AC06  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26446  00AC08  D018               	goto	l1475
 26447  00AC0A                     
 26448                           ; BSR set to: 0
 26449                           ;display.c: 518: {;display.c: 519: display_content[1][13+cntr] = temp[cntr];
 26450                           
 26451                           ; BSR set to: 0
 26452  00AC0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26453  00AC0C  0D01               	mullw	1
 26454  00AC0E  0EC8               	movlw	low display_prepare@temp
 26455  00AC10  24F3               	addwf	prodl,w,c
 26456  00AC12  6ED9               	movwf	fsr2l,c
 26457  00AC14  0E00               	movlw	high display_prepare@temp
 26458  00AC16  20F4               	addwfc	prodh,w,c
 26459  00AC18  6EDA               	movwf	fsr2h,c
 26460  00AC1A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26461  00AC1C  6FC6               	movwf	??_display_prepare& (0+255),b
 26462  00AC1E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26463  00AC20  0E0D               	movlw	13
 26464  00AC22  27C6               	addwf	??_display_prepare& (0+255),f,b
 26465  00AC24  0E00               	movlw	0
 26466  00AC26  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26467  00AC28  0E5C               	movlw	low (_display_content+20)
 26468  00AC2A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26469  00AC2C  6EE1               	movwf	fsr1l,c
 26470  00AC2E  0E02               	movlw	high (_display_content+20)
 26471  00AC30  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26472  00AC32  6EE2               	movwf	fsr1h,c
 26473  00AC34  CFDF FFE7          	movff	indf2,indf1
 26474                           
 26475                           ; BSR set to: 0
 26476  00AC38  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26477  00AC3A                     l1475:
 26478                           
 26479                           ; BSR set to: 0
 26480                           
 26481                           ; BSR set to: 0
 26482  00AC3A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26483  00AC3C  0D01               	mullw	1
 26484  00AC3E  0EC8               	movlw	low display_prepare@temp
 26485  00AC40  24F3               	addwf	prodl,w,c
 26486  00AC42  6ED9               	movwf	fsr2l,c
 26487  00AC44  0E00               	movlw	high display_prepare@temp
 26488  00AC46  20F4               	addwfc	prodh,w,c
 26489  00AC48  6EDA               	movwf	fsr2h,c
 26490  00AC4A  50DF               	movf	indf2,w,c
 26491  00AC4C  A4D8               	btfss	status,2,c
 26492  00AC4E  D7DD               	goto	l1476
 26493                           
 26494                           ; BSR set to: 0
 26495                           ;display.c: 520: };display.c: 521: display_content[1][13+cntr] = 0x01;
 26496                           
 26497                           ; BSR set to: 0
 26498  00AC50  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26499  00AC52  6FC6               	movwf	??_display_prepare& (0+255),b
 26500  00AC54  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26501  00AC56  0E0D               	movlw	13
 26502  00AC58  27C6               	addwf	??_display_prepare& (0+255),f,b
 26503  00AC5A  0E00               	movlw	0
 26504  00AC5C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26505  00AC5E  0E5C               	movlw	low (_display_content+20)
 26506  00AC60  25C6               	addwf	??_display_prepare& (0+255),w,b
 26507  00AC62  6ED9               	movwf	fsr2l,c
 26508  00AC64  0E02               	movlw	high (_display_content+20)
 26509  00AC66  D6A1               	goto	L36
 26510  00AC68                     
 26511                           ; BSR set to: 0
 26512                           ;display.c: 526: memcpy(display_content, dc_manual, sizeof display_content);
 26513                           
 26514                           ; BSR set to: 0
 26515  00AC68  0E48               	movlw	low _display_content
 26516  00AC6A  6F60               	movwf	memcpy@d1& (0+255),b
 26517  00AC6C  0E02               	movlw	high _display_content
 26518  00AC6E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26519  00AC70  0EEE               	movlw	low _dc_manual
 26520  00AC72  6F62               	movwf	memcpy@s1& (0+255),b
 26521  00AC74  0E9D               	movlw	high _dc_manual
 26522  00AC76  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26523  00AC78  0E00               	movlw	0
 26524  00AC7A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26525  00AC7C  0E50               	movlw	80
 26526  00AC7E  6F64               	movwf	memcpy@n& (0+255),b
 26527  00AC80  ECCA  F0A5         	call	_memcpy	;wreg free
 26528                           
 26529                           ;display.c: 527: switch(os.displayState)
 26530  00AC84  D044               	goto	l1479
 26531  00AC86                     
 26532                           ;display.c: 530: display_content[2][6] = 'W';
 26533  00AC86  0E57               	movlw	87
 26534  00AC88  0102               	movlb	2	; () banked
 26535  00AC8A  6F76               	movwf	(_display_content+46)& (0+255),b
 26536                           
 26537                           ;display.c: 531: display_content[2][7] = ' ';
 26538  00AC8C  0E20               	movlw	32
 26539  00AC8E  6F77               	movwf	(_display_content+47)& (0+255),b
 26540                           
 26541                           ;display.c: 532: break;
 26542  00AC90  D049               	goto	l1481
 26543  00AC92                     
 26544                           ;display.c: 534: memcpy(display_content[2], "        ", 8);
 26545                           
 26546                           ; BSR set to: 2
 26547  00AC92  0E70               	movlw	low (_display_content+40)
 26548  00AC94  0100               	movlb	0	; () banked
 26549  00AC96  6F60               	movwf	memcpy@d1& (0+255),b
 26550  00AC98  0E02               	movlw	high (_display_content+40)
 26551  00AC9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26552  00AC9C  0E29               	movlw	low STR_1
 26553  00AC9E  6F62               	movwf	memcpy@s1& (0+255),b
 26554  00ACA0  0EA3               	movlw	high STR_1
 26555  00ACA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26556  00ACA4  0E00               	movlw	0
 26557  00ACA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26558  00ACA8  0E08               	movlw	8
 26559  00ACAA  6F64               	movwf	memcpy@n& (0+255),b
 26560  00ACAC  ECCA  F0A5         	call	_memcpy	;wreg free
 26561                           
 26562                           ;display.c: 535: memcpy(display_content[3], "Cancel", 6);
 26563  00ACB0  0E84               	movlw	low (_display_content+60)
 26564  00ACB2  0100               	movlb	0	; () banked
 26565  00ACB4  6F60               	movwf	memcpy@d1& (0+255),b
 26566  00ACB6  0E02               	movlw	high (_display_content+60)
 26567  00ACB8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26568  00ACBA  0E32               	movlw	low STR_2
 26569  00ACBC  6F62               	movwf	memcpy@s1& (0+255),b
 26570  00ACBE  0EA3               	movlw	high STR_2
 26571  00ACC0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26572  00ACC2  0E00               	movlw	0
 26573  00ACC4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26574  00ACC6  0E06               	movlw	6
 26575  00ACC8  6F64               	movwf	memcpy@n& (0+255),b
 26576  00ACCA  ECCA  F0A5         	call	_memcpy	;wreg free
 26577                           
 26578                           ;display.c: 536: break;
 26579  00ACCE  D02A               	goto	l1481
 26580  00ACD0                     
 26581                           ;display.c: 538: memcpy(&display_content[2][0], "        ", 8);
 26582  00ACD0  0E70               	movlw	low (_display_content+40)
 26583  00ACD2  0100               	movlb	0	; () banked
 26584  00ACD4  6F60               	movwf	memcpy@d1& (0+255),b
 26585  00ACD6  0E02               	movlw	high (_display_content+40)
 26586  00ACD8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26587  00ACDA  0E29               	movlw	low STR_1
 26588  00ACDC  6F62               	movwf	memcpy@s1& (0+255),b
 26589  00ACDE  0EA3               	movlw	high STR_1
 26590  00ACE0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26591  00ACE2  0E00               	movlw	0
 26592  00ACE4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26593  00ACE6  0E08               	movlw	8
 26594  00ACE8  6F64               	movwf	memcpy@n& (0+255),b
 26595  00ACEA  ECCA  F0A5         	call	_memcpy	;wreg free
 26596                           
 26597                           ;display.c: 539: memcpy(&display_content[3][0], "Stop ", 5);
 26598  00ACEE  0E84               	movlw	low (_display_content+60)
 26599  00ACF0  0100               	movlb	0	; () banked
 26600  00ACF2  6F60               	movwf	memcpy@d1& (0+255),b
 26601  00ACF4  0E02               	movlw	high (_display_content+60)
 26602  00ACF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26603  00ACF8  0E39               	movlw	low STR_6
 26604  00ACFA  6F62               	movwf	memcpy@s1& (0+255),b
 26605  00ACFC  0EA3               	movlw	high STR_6
 26606  00ACFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26607  00AD00  0E00               	movlw	0
 26608  00AD02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26609  00AD04  0E05               	movlw	5
 26610  00AD06  6F64               	movwf	memcpy@n& (0+255),b
 26611  00AD08  ECCA  F0A5         	call	_memcpy	;wreg free
 26612                           
 26613                           ;display.c: 541: }
 26614                           
 26615                           ;display.c: 540: break;
 26616  00AD0C  D00B               	goto	l1481
 26617  00AD0E                     l1479:
 26618  00AD0E  0101               	movlb	1	; () banked
 26619  00AD10  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 26620                           
 26621                           ; Switch size 1, requested type "space"
 26622                           ; Number of cases is 3, Range of values is 130 to 132
 26623                           ; switch strategies available:
 26624                           ; Name         Instructions Cycles
 26625                           ; simple_byte           10     6 (average)
 26626                           ;	Chosen strategy is simple_byte
 26627  00AD12  0A82               	xorlw	130	; case 130
 26628  00AD14  B4D8               	btfsc	status,2,c
 26629  00AD16  D7BD               	goto	l1482
 26630  00AD18  0A01               	xorlw	1	; case 131
 26631  00AD1A  B4D8               	btfsc	status,2,c
 26632  00AD1C  D7B4               	goto	l1480
 26633  00AD1E  0A07               	xorlw	7	; case 132
 26634  00AD20  B4D8               	btfsc	status,2,c
 26635  00AD22  D7D6               	goto	l1483
 26636  00AD24                     l1481:
 26637                           
 26638                           ;display.c: 544: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26639                           
 26640                           ; BSR set to: 1
 26641  00AD24  EC8B  F0A9         	call	__display_position_in_degrees	;wreg free
 26642  00AD28  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26643  00AD2C  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26644  00AD30  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26645  00AD34  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26646  00AD38  0E02               	movlw	2
 26647  00AD3A  0100               	movlb	0	; () banked
 26648  00AD3C  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26649  00AD3E  0EC8               	movlw	low display_prepare@temp
 26650  00AD40  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26651  00AD42  0E00               	movlw	high display_prepare@temp
 26652  00AD44  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26653  00AD46  EC23  F088         	call	__display_itoa_long	;wreg free
 26654                           
 26655                           ;display.c: 545: space = 7-strlen(temp);
 26656  00AD4A  0EC8               	movlw	low display_prepare@temp
 26657  00AD4C  0100               	movlb	0	; () banked
 26658  00AD4E  6F60               	movwf	strlen@s& (0+255),b
 26659  00AD50  0E00               	movlw	high display_prepare@temp
 26660  00AD52  6F61               	movwf	(strlen@s+1)& (0+255),b
 26661  00AD54  ECF5  F0AB         	call	_strlen	;wreg free
 26662  00AD58  0100               	movlb	0	; () banked
 26663  00AD5A  5160               	movf	?_strlen& (0+255),w,b
 26664  00AD5C  0800               	sublw	0
 26665  00AD5E  0F07               	addlw	7
 26666  00AD60  6FD2               	movwf	display_prepare@space& (0+255),b
 26667                           
 26668                           ; BSR set to: 0
 26669                           ;display.c: 546: for(cntr=0; temp[cntr]; ++cntr)
 26670  00AD62  0E00               	movlw	0
 26671  00AD64  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26672  00AD66  D01C               	goto	l1484
 26673  00AD68                     
 26674                           ; BSR set to: 0
 26675                           ;display.c: 547: {;display.c: 548: display_content[1][12+space+cntr] = temp[cntr];
 26676                           
 26677                           ; BSR set to: 0
 26678  00AD68  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26679  00AD6A  0D01               	mullw	1
 26680  00AD6C  0EC8               	movlw	low display_prepare@temp
 26681  00AD6E  24F3               	addwf	prodl,w,c
 26682  00AD70  6ED9               	movwf	fsr2l,c
 26683  00AD72  0E00               	movlw	high display_prepare@temp
 26684  00AD74  20F4               	addwfc	prodh,w,c
 26685  00AD76  6EDA               	movwf	fsr2h,c
 26686  00AD78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26687  00AD7A  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26688  00AD7E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26689  00AD80  27C6               	addwf	??_display_prepare& (0+255),f,b
 26690  00AD82  0E00               	movlw	0
 26691  00AD84  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26692  00AD86  0E0C               	movlw	12
 26693  00AD88  27C6               	addwf	??_display_prepare& (0+255),f,b
 26694  00AD8A  0E00               	movlw	0
 26695  00AD8C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26696  00AD8E  0E5C               	movlw	low (_display_content+20)
 26697  00AD90  25C6               	addwf	??_display_prepare& (0+255),w,b
 26698  00AD92  6EE1               	movwf	fsr1l,c
 26699  00AD94  0E02               	movlw	high (_display_content+20)
 26700  00AD96  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26701  00AD98  6EE2               	movwf	fsr1h,c
 26702  00AD9A  CFDF FFE7          	movff	indf2,indf1
 26703                           
 26704                           ; BSR set to: 0
 26705  00AD9E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26706  00ADA0                     l1484:
 26707                           
 26708                           ; BSR set to: 0
 26709                           
 26710                           ; BSR set to: 0
 26711  00ADA0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26712  00ADA2  0D01               	mullw	1
 26713  00ADA4  0EC8               	movlw	low display_prepare@temp
 26714  00ADA6  24F3               	addwf	prodl,w,c
 26715  00ADA8  6ED9               	movwf	fsr2l,c
 26716  00ADAA  0E00               	movlw	high display_prepare@temp
 26717  00ADAC  20F4               	addwfc	prodh,w,c
 26718  00ADAE  6EDA               	movwf	fsr2h,c
 26719  00ADB0  50DF               	movf	indf2,w,c
 26720  00ADB2  A4D8               	btfss	status,2,c
 26721  00ADB4  D7D9               	goto	l1485
 26722                           
 26723                           ; BSR set to: 0
 26724                           ;display.c: 549: };display.c: 552: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 26725                           
 26726                           ; BSR set to: 0
 26727  00ADB6  C189  F09D         	movff	_os+36,motor_speed_from_index@speed_index	;volatile
 26728  00ADBA  C18A  F09E         	movff	_os+37,motor_speed_from_index@speed_index+1	;volatile
 26729  00ADBE  EC03  F0B0         	call	_motor_speed_from_index	;wreg free
 26730  00ADC2  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 26731  00ADC6  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26732  00ADCA  0E02               	movlw	2
 26733  00ADCC  0100               	movlb	0	; () banked
 26734  00ADCE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26735  00ADD0  0EC8               	movlw	low display_prepare@temp
 26736  00ADD2  6FA2               	movwf	__display_itoa@text& (0+255),b
 26737  00ADD4  0E00               	movlw	high display_prepare@temp
 26738  00ADD6  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26739  00ADD8  EC3C  F072         	call	__display_itoa	;wreg free
 26740                           
 26741                           ;display.c: 553: for(cntr=0; temp[cntr]; ++cntr)
 26742  00ADDC  0E00               	movlw	0
 26743  00ADDE  0100               	movlb	0	; () banked
 26744  00ADE0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26745  00ADE2  D018               	goto	l1487
 26746  00ADE4                     
 26747                           ; BSR set to: 0
 26748                           ;display.c: 554: {;display.c: 555: display_content[3][11+cntr] = temp[cntr];
 26749                           
 26750                           ; BSR set to: 0
 26751  00ADE4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26752  00ADE6  0D01               	mullw	1
 26753  00ADE8  0EC8               	movlw	low display_prepare@temp
 26754  00ADEA  24F3               	addwf	prodl,w,c
 26755  00ADEC  6ED9               	movwf	fsr2l,c
 26756  00ADEE  0E00               	movlw	high display_prepare@temp
 26757  00ADF0  20F4               	addwfc	prodh,w,c
 26758  00ADF2  6EDA               	movwf	fsr2h,c
 26759  00ADF4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26760  00ADF6  6FC6               	movwf	??_display_prepare& (0+255),b
 26761  00ADF8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26762  00ADFA  0E0B               	movlw	11
 26763  00ADFC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26764  00ADFE  0E00               	movlw	0
 26765  00AE00  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26766  00AE02  0E84               	movlw	low (_display_content+60)
 26767  00AE04  25C6               	addwf	??_display_prepare& (0+255),w,b
 26768  00AE06  6EE1               	movwf	fsr1l,c
 26769  00AE08  0E02               	movlw	high (_display_content+60)
 26770  00AE0A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26771  00AE0C  6EE2               	movwf	fsr1h,c
 26772  00AE0E  CFDF FFE7          	movff	indf2,indf1
 26773                           
 26774                           ; BSR set to: 0
 26775  00AE12  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26776  00AE14                     l1487:
 26777                           
 26778                           ; BSR set to: 0
 26779                           
 26780                           ; BSR set to: 0
 26781  00AE14  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26782  00AE16  0D01               	mullw	1
 26783  00AE18  0EC8               	movlw	low display_prepare@temp
 26784  00AE1A  24F3               	addwf	prodl,w,c
 26785  00AE1C  6ED9               	movwf	fsr2l,c
 26786  00AE1E  0E00               	movlw	high display_prepare@temp
 26787  00AE20  20F4               	addwfc	prodh,w,c
 26788  00AE22  6EDA               	movwf	fsr2h,c
 26789  00AE24  50DF               	movf	indf2,w,c
 26790  00AE26  A4D8               	btfss	status,2,c
 26791  00AE28  D7DD               	goto	l1488
 26792  00AE2A                     L89:
 26793                           
 26794                           ; BSR set to: 0
 26795                           ;display.c: 556: };display.c: 557: display_content[3][11+cntr] = 0x01;
 26796                           
 26797                           ; BSR set to: 0
 26798  00AE2A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26799  00AE2C  6FC6               	movwf	??_display_prepare& (0+255),b
 26800  00AE2E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26801  00AE30  0E0B               	movlw	11
 26802  00AE32  27C6               	addwf	??_display_prepare& (0+255),f,b
 26803  00AE34  0E00               	movlw	0
 26804  00AE36  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26805  00AE38  0E84               	movlw	low (_display_content+60)
 26806  00AE3A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26807  00AE3C  6ED9               	movwf	fsr2l,c
 26808  00AE3E  0E02               	movlw	high (_display_content+60)
 26809  00AE40  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26810  00AE42  6EDA               	movwf	fsr2h,c
 26811  00AE44  0E01               	movlw	1
 26812  00AE46  6EDF               	movwf	indf2,c
 26813                           
 26814                           ;display.c: 558: display_content[3][12+cntr] = '/';
 26815  00AE48  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26816  00AE4A  6FC6               	movwf	??_display_prepare& (0+255),b
 26817  00AE4C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26818  00AE4E  0E0C               	movlw	12
 26819  00AE50  27C6               	addwf	??_display_prepare& (0+255),f,b
 26820  00AE52  0E00               	movlw	0
 26821  00AE54  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26822  00AE56  0E84               	movlw	low (_display_content+60)
 26823  00AE58  25C6               	addwf	??_display_prepare& (0+255),w,b
 26824  00AE5A  6ED9               	movwf	fsr2l,c
 26825  00AE5C  0E02               	movlw	high (_display_content+60)
 26826  00AE5E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26827  00AE60  6EDA               	movwf	fsr2h,c
 26828  00AE62  0E2F               	movlw	47
 26829  00AE64  6EDF               	movwf	indf2,c
 26830                           
 26831                           ;display.c: 559: display_content[3][13+cntr] = 's';
 26832  00AE66  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26833  00AE68  6FC6               	movwf	??_display_prepare& (0+255),b
 26834  00AE6A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26835  00AE6C  0E0D               	movlw	13
 26836  00AE6E  27C6               	addwf	??_display_prepare& (0+255),f,b
 26837  00AE70  0E00               	movlw	0
 26838  00AE72  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26839  00AE74  0E84               	movlw	low (_display_content+60)
 26840  00AE76  25C6               	addwf	??_display_prepare& (0+255),w,b
 26841  00AE78  6ED9               	movwf	fsr2l,c
 26842  00AE7A  0E02               	movlw	high (_display_content+60)
 26843  00AE7C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26844  00AE7E  6EDA               	movwf	fsr2h,c
 26845  00AE80  0E73               	movlw	115
 26846  00AE82                     L27:
 26847  00AE82  6EDF               	movwf	indf2,c
 26848                           
 26849                           ;display.c: 560: break;
 26850  00AE84  D095               	goto	l1407
 26851  00AE86                     
 26852                           ; BSR set to: 0
 26853                           ;display.c: 563: _display_clear();
 26854                           
 26855                           ; BSR set to: 0
 26856  00AE86  EC9D  F0AA         	call	__display_clear	;wreg free
 26857                           
 26858                           ;display.c: 564: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 26859  00AE8A  0101               	movlb	1	; () banked
 26860  00AE8C  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 26861  00AE8E  0100               	movlb	0	; () banked
 26862  00AE90  6F9F               	movwf	__display_itoa@value& (0+255),b
 26863  00AE92  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 26864  00AE94  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 26865  00AE96  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 26866  00AE98  0E00               	movlw	0
 26867  00AE9A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26868  00AE9C  0E48               	movlw	low _display_content
 26869  00AE9E  6FA2               	movwf	__display_itoa@text& (0+255),b
 26870  00AEA0  0E02               	movlw	high _display_content
 26871  00AEA2  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26872  00AEA4  EC3C  F072         	call	__display_itoa	;wreg free
 26873                           
 26874                           ;display.c: 565: if(PORTEbits.RE2)
 26875  00AEA8  A484               	btfss	3972,2,c	;volatile
 26876  00AEAA  D002               	goto	l1491
 26877                           
 26878                           ;display.c: 566: display_content[0][8] = 'H';
 26879  00AEAC  0E48               	movlw	72
 26880  00AEAE  D001               	goto	L31
 26881  00AEB0                     l1491:
 26882                           
 26883                           ;display.c: 567: else;display.c: 568: display_content[0][8] = 'L';
 26884                           
 26885                           ; BSR set to: 2
 26886  00AEB0  0E4C               	movlw	76
 26887  00AEB2                     L31:
 26888  00AEB2  0102               	movlb	2	; () banked
 26889  00AEB4  6F50               	movwf	(_display_content+8)& (0+255),b
 26890                           
 26891                           ; BSR set to: 2
 26892                           ;display.c: 569: if(PORTEbits.RE0)
 26893                           
 26894                           ; BSR set to: 2
 26895  00AEB6  A084               	btfss	3972,0,c	;volatile
 26896  00AEB8  D002               	goto	l1493
 26897                           
 26898                           ; BSR set to: 2
 26899                           ;display.c: 570: display_content[0][9] = 'H';
 26900  00AEBA  0E48               	movlw	72
 26901  00AEBC  D001               	goto	L32
 26902  00AEBE                     l1493:
 26903                           
 26904                           ; BSR set to: 2
 26905                           ;display.c: 571: else;display.c: 572: display_content[0][9] = 'L';
 26906                           
 26907                           ; BSR set to: 2
 26908  00AEBE  0E4C               	movlw	76
 26909  00AEC0                     L32:
 26910  00AEC0  6F51               	movwf	(_display_content+9)& (0+255),b
 26911                           
 26912                           ; BSR set to: 2
 26913                           ;display.c: 573: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 26914                           
 26915                           ; BSR set to: 2
 26916  00AEC2  0101               	movlb	1	; () banked
 26917  00AEC4  5169               	movf	(_os+4)& (0+255),w,b	;volatile
 26918  00AEC6  0100               	movlb	0	; () banked
 26919  00AEC8  6F9F               	movwf	__display_itoa@value& (0+255),b
 26920  00AECA  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 26921  00AECC  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 26922  00AECE  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 26923  00AED0  0E00               	movlw	0
 26924  00AED2  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26925  00AED4  0E5C               	movlw	low (_display_content+20)
 26926  00AED6  6FA2               	movwf	__display_itoa@text& (0+255),b
 26927  00AED8  0E02               	movlw	high (_display_content+20)
 26928  00AEDA  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26929  00AEDC  EC3C  F072         	call	__display_itoa	;wreg free
 26930                           
 26931                           ;display.c: 574: if(PORTEbits.RE1)
 26932  00AEE0  A284               	btfss	3972,1,c	;volatile
 26933  00AEE2  D002               	goto	l1495
 26934                           
 26935                           ;display.c: 575: display_content[1][8] = 'H';
 26936  00AEE4  0E48               	movlw	72
 26937  00AEE6  D001               	goto	L33
 26938  00AEE8                     l1495:
 26939                           
 26940                           ;display.c: 576: else;display.c: 577: display_content[1][8] = 'L';
 26941                           
 26942                           ; BSR set to: 2
 26943  00AEE8  0E4C               	movlw	76
 26944  00AEEA                     L33:
 26945  00AEEA  0102               	movlb	2	; () banked
 26946  00AEEC  6F64               	movwf	(_display_content+28)& (0+255),b
 26947                           
 26948                           ; BSR set to: 2
 26949                           ;display.c: 578: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 26950                           
 26951                           ; BSR set to: 2
 26952  00AEEE  0101               	movlb	1	; () banked
 26953  00AEF0  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 26954  00AEF2  0100               	movlb	0	; () banked
 26955  00AEF4  6F9F               	movwf	__display_itoa@value& (0+255),b
 26956  00AEF6  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 26957  00AEF8  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 26958  00AEFA  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 26959  00AEFC  0E00               	movlw	0
 26960  00AEFE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26961  00AF00  0E70               	movlw	low (_display_content+40)
 26962  00AF02  6FA2               	movwf	__display_itoa@text& (0+255),b
 26963  00AF04  0E02               	movlw	high (_display_content+40)
 26964  00AF06  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26965  00AF08  EC3C  F072         	call	__display_itoa	;wreg free
 26966                           
 26967                           ;display.c: 579: if(PORTAbits.RA0)
 26968  00AF0C  A080               	btfss	3968,0,c	;volatile
 26969  00AF0E  D002               	goto	l1497
 26970                           
 26971                           ;display.c: 580: display_content[2][8] = 'H';
 26972  00AF10  0E48               	movlw	72
 26973  00AF12  D001               	goto	L34
 26974  00AF14                     l1497:
 26975                           
 26976                           ;display.c: 581: else;display.c: 582: display_content[2][8] = 'L';
 26977                           
 26978                           ; BSR set to: 2
 26979  00AF14  0E4C               	movlw	76
 26980  00AF16                     L34:
 26981  00AF16  0102               	movlb	2	; () banked
 26982  00AF18  6F78               	movwf	(_display_content+48)& (0+255),b
 26983                           
 26984                           ; BSR set to: 2
 26985                           ;display.c: 583: if(PORTAbits.RA2)
 26986                           
 26987                           ; BSR set to: 2
 26988  00AF1A  A480               	btfss	3968,2,c	;volatile
 26989  00AF1C  D002               	goto	l1499
 26990                           
 26991                           ; BSR set to: 2
 26992                           ;display.c: 584: display_content[2][9] = 'H';
 26993  00AF1E  0E48               	movlw	72
 26994  00AF20  D001               	goto	L35
 26995  00AF22                     l1499:
 26996                           
 26997                           ; BSR set to: 2
 26998                           ;display.c: 585: else;display.c: 586: display_content[2][9] = 'L';
 26999                           
 27000                           ; BSR set to: 2
 27001  00AF22  0E4C               	movlw	76
 27002  00AF24                     L35:
 27003  00AF24  6F79               	movwf	(_display_content+49)& (0+255),b
 27004                           
 27005                           ; BSR set to: 2
 27006                           ;display.c: 587: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 27007                           
 27008                           ; BSR set to: 2
 27009  00AF26  0101               	movlb	1	; () banked
 27010  00AF28  516B               	movf	(_os+6)& (0+255),w,b	;volatile
 27011  00AF2A  0100               	movlb	0	; () banked
 27012  00AF2C  6F9F               	movwf	__display_itoa@value& (0+255),b
 27013  00AF2E  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27014  00AF30  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27015  00AF32  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27016  00AF34  0E00               	movlw	0
 27017  00AF36  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27018  00AF38  0E84               	movlw	low (_display_content+60)
 27019  00AF3A  6FA2               	movwf	__display_itoa@text& (0+255),b
 27020  00AF3C  0E02               	movlw	high (_display_content+60)
 27021  00AF3E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27022  00AF40  EC3C  F072         	call	__display_itoa	;wreg free
 27023                           
 27024                           ;display.c: 588: if(PORTAbits.RA1)
 27025  00AF44  A280               	btfss	3968,1,c	;volatile
 27026  00AF46  D002               	goto	l1501
 27027                           
 27028                           ;display.c: 589: display_content[3][8] = 'H';
 27029  00AF48  0E48               	movlw	72
 27030  00AF4A  D001               	goto	L28
 27031  00AF4C                     l1501:
 27032                           
 27033                           ;display.c: 590: else;display.c: 591: display_content[3][8] = 'L';
 27034                           
 27035                           ; BSR set to: 2
 27036  00AF4C  0E4C               	movlw	76
 27037  00AF4E                     L28:
 27038  00AF4E  0102               	movlb	2	; () banked
 27039  00AF50  6F8C               	movwf	(_display_content+68)& (0+255),b
 27040                           
 27041                           ; BSR set to: 2
 27042                           ;display.c: 593: }
 27043                           
 27044                           ; BSR set to: 2
 27045                           ;display.c: 592: break;
 27046  00AF52  D02E               	goto	l1407
 27047  00AF54                     l1398:
 27048                           
 27049                           ; BSR set to: 2
 27050  00AF54  0101               	movlb	1	; () banked
 27051  00AF56  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 27052  00AF58  0BF0               	andlw	240
 27053  00AF5A  0100               	movlb	0	; () banked
 27054  00AF5C  6FC6               	movwf	??_display_prepare& (0+255),b
 27055  00AF5E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27056                           
 27057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27058                           ; Switch size 1, requested type "space"
 27059                           ; Number of cases is 1, Range of values is 0 to 0
 27060                           ; switch strategies available:
 27061                           ; Name         Instructions Cycles
 27062                           ; simple_byte            4     3 (average)
 27063                           ;	Chosen strategy is simple_byte
 27064  00AF60  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 27065  00AF62  0A00               	xorlw	0	; case 0
 27066  00AF64  A4D8               	btfss	status,2,c
 27067  00AF66  D024               	goto	l1407
 27068                           
 27069                           ; BSR set to: 0
 27070                           ; Switch size 1, requested type "space"
 27071                           ; Number of cases is 10, Range of values is 0 to 240
 27072                           ; switch strategies available:
 27073                           ; Name         Instructions Cycles
 27074                           ; simple_byte           31    16 (average)
 27075                           ;	Chosen strategy is simple_byte
 27076  00AF68  51C6               	movf	??_display_prepare& (0+255),w,b
 27077  00AF6A  0A00               	xorlw	0	; case 0
 27078  00AF6C  B4D8               	btfsc	status,2,c
 27079  00AF6E  EFA4  F051         	goto	l1399
 27080  00AF72  0A10               	xorlw	16	; case 16
 27081  00AF74  B4D8               	btfsc	status,2,c
 27082  00AF76  EFD3  F051         	goto	l1408
 27083  00AF7A  0A30               	xorlw	48	; case 32
 27084  00AF7C  B4D8               	btfsc	status,2,c
 27085  00AF7E  EF25  F052         	goto	l1418
 27086  00AF82  0A10               	xorlw	16	; case 48
 27087  00AF84  B4D8               	btfsc	status,2,c
 27088  00AF86  EF49  F052         	goto	l1423
 27089  00AF8A  0A70               	xorlw	112	; case 64
 27090  00AF8C  B4D8               	btfsc	status,2,c
 27091  00AF8E  EFBA  F052         	goto	l1432
 27092  00AF92  0A10               	xorlw	16	; case 80
 27093  00AF94  B4D8               	btfsc	status,2,c
 27094  00AF96  D45A               	goto	l1447
 27095  00AF98  0A30               	xorlw	48	; case 96
 27096  00AF9A  B4D8               	btfsc	status,2,c
 27097  00AF9C  D50A               	goto	l1460
 27098  00AF9E  0A10               	xorlw	16	; case 112
 27099  00AFA0  B4D8               	btfsc	status,2,c
 27100  00AFA2  D60E               	goto	l1474
 27101  00AFA4  0AF0               	xorlw	240	; case 128
 27102  00AFA6  B4D8               	btfsc	status,2,c
 27103  00AFA8  D65F               	goto	l1478
 27104  00AFAA  0A70               	xorlw	112	; case 240
 27105  00AFAC  B4D8               	btfsc	status,2,c
 27106  00AFAE  D76B               	goto	l1490
 27107  00AFB0                     l1407:
 27108                           
 27109                           ;display.c: 595: if(!PORTDbits.RD2)
 27110  00AFB0  B483               	btfsc	3971,2,c	;volatile
 27111  00AFB2  0012               	return	
 27112                           
 27113                           ;display.c: 596: {;display.c: 597: display_content[0][0] = 'E';
 27114  00AFB4  0E45               	movlw	69
 27115  00AFB6  0102               	movlb	2	; () banked
 27116  00AFB8  6F48               	movwf	_display_content& (0+255),b
 27117                           
 27118                           ;display.c: 598: display_content[0][1] = 'R';
 27119  00AFBA  0E52               	movlw	82
 27120  00AFBC  6F49               	movwf	(_display_content+1)& (0+255),b
 27121                           
 27122                           ;display.c: 599: display_content[0][2] = 'R';
 27123  00AFBE  0E52               	movlw	82
 27124  00AFC0  6F4A               	movwf	(_display_content+2)& (0+255),b
 27125                           
 27126                           ;display.c: 600: display_content[0][3] = 'O';
 27127  00AFC2  0E4F               	movlw	79
 27128  00AFC4  6F4B               	movwf	(_display_content+3)& (0+255),b
 27129                           
 27130                           ;display.c: 601: display_content[0][4] = 'R';
 27131  00AFC6  0E52               	movlw	82
 27132  00AFC8  6F4C               	movwf	(_display_content+4)& (0+255),b
 27133  00AFCA  0012               	return	
 27134  00AFCC                     __end_of_display_prepare:
 27135                           	opt stack 0
 27136                           tblptru	equ	0xFF8
 27137                           tblptrh	equ	0xFF7
 27138                           tblptrl	equ	0xFF6
 27139                           tablat	equ	0xFF5
 27140                           prodh	equ	0xFF4
 27141                           prodl	equ	0xFF3
 27142                           intcon	equ	0xFF2
 27143                           postinc0	equ	0xFEE
 27144                           wreg	equ	0xFE8
 27145                           indf1	equ	0xFE7
 27146                           postinc1	equ	0xFE6
 27147                           postdec1	equ	0xFE5
 27148                           plusw1	equ	0xFE3
 27149                           fsr1h	equ	0xFE2
 27150                           fsr1l	equ	0xFE1
 27151                           indf2	equ	0xFDF
 27152                           postinc2	equ	0xFDE
 27153                           postdec2	equ	0xFDD
 27154                           plusw2	equ	0xFDB
 27155                           fsr2h	equ	0xFDA
 27156                           fsr2l	equ	0xFD9
 27157                           status	equ	0xFD8
 27158                           
 27159 ;; *************** function _motor_speed_from_index *****************
 27160 ;; Defined at:
 27161 ;;		line 603 in file "motor.c"
 27162 ;; Parameters:    Size  Location     Type
 27163 ;;  speed_index     2   61[BANK0 ] unsigned int 
 27164 ;; Auto vars:     Size  Location     Type
 27165 ;;		None
 27166 ;; Return value:  Size  Location     Type
 27167 ;;                  2   61[BANK0 ] unsigned int 
 27168 ;; Registers used:
 27169 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27170 ;; Tracked objects:
 27171 ;;		On entry : 0/0
 27172 ;;		On exit  : 0/0
 27173 ;;		Unchanged: 0/0
 27174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27175 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27178 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27179 ;;Total ram usage:        2 bytes
 27180 ;; Hardware stack levels used:    1
 27181 ;; Hardware stack levels required when called:   12
 27182 ;; This function calls:
 27183 ;;		__motor_get_speed_in_degrees
 27184 ;; This function is called by:
 27185 ;;		_display_prepare
 27186 ;; This function uses a non-reentrant model
 27187 ;;
 27188                           
 27189                           	psect	text100
 27190  016006                     __ptext100:
 27191                           	opt stack 0
 27192  016006                     _motor_speed_from_index:
 27193                           	opt stack 17
 27194                           
 27195                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 27196                           
 27197                           ;incstack = 0
 27198  016006  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27199  01600A  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27200  01600E  EC22  F084         	call	__motor_get_speed_in_degrees	;wreg free
 27201  016012  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27202  016016  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27203  01601A  0012               	return	
 27204  01601C                     __end_of_motor_speed_from_index:
 27205                           	opt stack 0
 27206                           tblptru	equ	0xFF8
 27207                           tblptrh	equ	0xFF7
 27208                           tblptrl	equ	0xFF6
 27209                           tablat	equ	0xFF5
 27210                           prodh	equ	0xFF4
 27211                           prodl	equ	0xFF3
 27212                           intcon	equ	0xFF2
 27213                           postinc0	equ	0xFEE
 27214                           wreg	equ	0xFE8
 27215                           indf1	equ	0xFE7
 27216                           postinc1	equ	0xFE6
 27217                           postdec1	equ	0xFE5
 27218                           plusw1	equ	0xFE3
 27219                           fsr1h	equ	0xFE2
 27220                           fsr1l	equ	0xFE1
 27221                           indf2	equ	0xFDF
 27222                           postinc2	equ	0xFDE
 27223                           postdec2	equ	0xFDD
 27224                           plusw2	equ	0xFDB
 27225                           fsr2h	equ	0xFDA
 27226                           fsr2l	equ	0xFD9
 27227                           status	equ	0xFD8
 27228                           
 27229 ;; *************** function __motor_get_speed_in_degrees *****************
 27230 ;; Defined at:
 27231 ;;		line 564 in file "motor.c"
 27232 ;; Parameters:    Size  Location     Type
 27233 ;;  speed_index     2   49[BANK0 ] unsigned int 
 27234 ;; Auto vars:     Size  Location     Type
 27235 ;;  lookup          4   57[BANK0 ] unsigned long 
 27236 ;;  speed           4   53[BANK0 ] float 
 27237 ;; Return value:  Size  Location     Type
 27238 ;;                  2   49[BANK0 ] unsigned int 
 27239 ;; Registers used:
 27240 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27241 ;; Tracked objects:
 27242 ;;		On entry : 0/0
 27243 ;;		On exit  : 0/0
 27244 ;;		Unchanged: 0/0
 27245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27246 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27247 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27249 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27250 ;;Total ram usage:       12 bytes
 27251 ;; Hardware stack levels used:    1
 27252 ;; Hardware stack levels required when called:   11
 27253 ;; This function calls:
 27254 ;;		___fldiv
 27255 ;;		___fltol
 27256 ;;		___lmul
 27257 ;;		___xxtofl
 27258 ;; This function is called by:
 27259 ;;		_motor_speed_from_index
 27260 ;;		_motor_get_maximum_speed
 27261 ;;		_motor_get_current_speed
 27262 ;; This function uses a non-reentrant model
 27263 ;;
 27264                           
 27265                           	psect	text101
 27266  010844                     __ptext101:
 27267                           	opt stack 0
 27268  010844                     __motor_get_speed_in_degrees:
 27269                           	opt stack 17
 27270                           
 27271                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 27272                           
 27273                           ;incstack = 0
 27274  010844  90D8               	bcf	status,0,c
 27275  010846  0100               	movlb	0	; () banked
 27276  010848  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27277  01084A  6EF6               	movwf	tblptrl,c
 27278  01084C  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27279  01084E  6EF7               	movwf	tblptrh,c
 27280  010850  0E93               	movlw	low _motor_speed_lookup
 27281  010852  26F6               	addwf	tblptrl,f,c
 27282  010854  0E90               	movlw	high _motor_speed_lookup
 27283  010856  22F7               	addwfc	tblptrh,f,c
 27284  010858                     	if	1	;There are 3 active tblptr bytes
 27285  010858  6AF8               	clrf	tblptru,c
 27286  01085A  0E00               	movlw	low (__mediumconst shr (0+16))
 27287  01085C  22F8               	addwfc	tblptru,f,c
 27288  01085E                     	endif
 27289  01085E  0009               	tblrd		*+
 27290  010860  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 27291  010864  0009               	tblrd		*+
 27292  010866  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 27293  01086A  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27294  01086E  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27295  010872  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27296  010874  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27297                           
 27298                           ; BSR set to: 0
 27299                           ;motor.c: 570: lookup *= 16;
 27300  010876  0E04               	movlw	4
 27301  010878                     u15845:
 27302  010878  90D8               	bcf	status,0,c
 27303  01087A  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27304  01087C  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27305  01087E  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27306  010880  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27307  010882  2EE8               	decfsz	wreg,f,c
 27308  010884  D7F9               	goto	u15845
 27309                           
 27310                           ; BSR set to: 0
 27311                           ;motor.c: 571: lookup *= 360;
 27312  010886  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27313  01088A  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27314  01088E  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27315  010892  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27316  010896  0E68               	movlw	104
 27317  010898  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27318  01089A  0E01               	movlw	1
 27319  01089C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27320  01089E  0E00               	movlw	0
 27321  0108A0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27322  0108A2  0E00               	movlw	0
 27323  0108A4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27324  0108A6  ECBC  F0A7         	call	___lmul	;wreg free
 27325  0108AA  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27326  0108AE  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27327  0108B2  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27328  0108B6  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27329                           
 27330                           ;motor.c: 572: lookup *= 100;
 27331  0108BA  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27332  0108BE  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27333  0108C2  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27334  0108C6  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27335  0108CA  0E64               	movlw	100
 27336  0108CC  0100               	movlb	0	; () banked
 27337  0108CE  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27338  0108D0  0E00               	movlw	0
 27339  0108D2  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27340  0108D4  0E00               	movlw	0
 27341  0108D6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27342  0108D8  0E00               	movlw	0
 27343  0108DA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27344  0108DC  ECBC  F0A7         	call	___lmul	;wreg free
 27345  0108E0  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27346  0108E4  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27347  0108E8  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27348  0108EC  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27349                           
 27350                           ;motor.c: 574: speed = (float) lookup;
 27351  0108F0  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27352  0108F4  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27353  0108F8  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27354  0108FC  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27355  010900  0E00               	movlw	0
 27356  010902  EC42  F082         	call	___xxtofl
 27357  010906  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27358  01090A  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27359  01090E  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27360  010912  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27361                           
 27362                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 27363  010916  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27364  01091A  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27365  01091E  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27366  010922  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27367  010926  C196  F06A         	movff	_config,___xxtofl@val
 27368  01092A  C197  F06B         	movff	_config+1,___xxtofl@val+1
 27369  01092E  C198  F06C         	movff	_config+2,___xxtofl@val+2
 27370  010932  C199  F06D         	movff	_config+3,___xxtofl@val+3
 27371  010936  0E00               	movlw	0
 27372  010938  EC42  F082         	call	___xxtofl
 27373  01093C  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 27374  010940  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 27375  010944  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 27376  010948  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 27377  01094C  EC03  F06B         	call	___fldiv	;wreg free
 27378  010950  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27379  010954  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27380  010958  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27381  01095C  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27382                           
 27383                           ;motor.c: 578: return (uint16_t) speed;
 27384  010960  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27385  010964  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27386  010968  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27387  01096C  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27388  010970  EC9F  F093         	call	___fltol	;wreg free
 27389  010974  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 27390  010978  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27391  01097C  0012               	return	
 27392  01097E                     __end_of__motor_get_speed_in_degrees:
 27393                           	opt stack 0
 27394                           tblptru	equ	0xFF8
 27395                           tblptrh	equ	0xFF7
 27396                           tblptrl	equ	0xFF6
 27397                           tablat	equ	0xFF5
 27398                           prodh	equ	0xFF4
 27399                           prodl	equ	0xFF3
 27400                           intcon	equ	0xFF2
 27401                           postinc0	equ	0xFEE
 27402                           wreg	equ	0xFE8
 27403                           indf1	equ	0xFE7
 27404                           postinc1	equ	0xFE6
 27405                           postdec1	equ	0xFE5
 27406                           plusw1	equ	0xFE3
 27407                           fsr1h	equ	0xFE2
 27408                           fsr1l	equ	0xFE1
 27409                           indf2	equ	0xFDF
 27410                           postinc2	equ	0xFDE
 27411                           postdec2	equ	0xFDD
 27412                           plusw2	equ	0xFDB
 27413                           fsr2h	equ	0xFDA
 27414                           fsr2l	equ	0xFD9
 27415                           status	equ	0xFD8
 27416                           
 27417 ;; *************** function ___fldiv *****************
 27418 ;; Defined at:
 27419 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 27420 ;; Parameters:    Size  Location     Type
 27421 ;;  b               4   24[BANK0 ] unsigned int 
 27422 ;;  a               4   28[BANK0 ] unsigned int 
 27423 ;; Auto vars:     Size  Location     Type
 27424 ;;  grs             4   43[BANK0 ] unsigned long 
 27425 ;;  rem             4   36[BANK0 ] unsigned long 
 27426 ;;  new_exp         2   41[BANK0 ] int 
 27427 ;;  aexp            1   48[BANK0 ] unsigned char 
 27428 ;;  bexp            1   47[BANK0 ] unsigned char 
 27429 ;;  sign            1   40[BANK0 ] unsigned char 
 27430 ;; Return value:  Size  Location     Type
 27431 ;;                  4   24[BANK0 ] unsigned char 
 27432 ;; Registers used:
 27433 ;;		wreg, status,2, status,0
 27434 ;; Tracked objects:
 27435 ;;		On entry : 0/0
 27436 ;;		On exit  : 0/0
 27437 ;;		Unchanged: 0/0
 27438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27439 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27440 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27442 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27443 ;;Total ram usage:       25 bytes
 27444 ;; Hardware stack levels used:    1
 27445 ;; Hardware stack levels required when called:   10
 27446 ;; This function calls:
 27447 ;;		Nothing
 27448 ;; This function is called by:
 27449 ;;		__motor_steps_from_degrees_int
 27450 ;;		_motor_calculate_position_in_degrees
 27451 ;;		__motor_get_speed_in_degrees
 27452 ;;		__step_position_from_divide_position
 27453 ;;		_motor_divide_jump_to_nearest
 27454 ;;		_motor_arc_move
 27455 ;;		__steps_from_degrees
 27456 ;;		__motor_steps_from_degrees_float
 27457 ;;		_motor_steps_from_degrees
 27458 ;; This function uses a non-reentrant model
 27459 ;;
 27460                           
 27461                           	psect	text102
 27462  00D606                     __ptext102:
 27463                           	opt stack 0
 27464  00D606                     ___fldiv:
 27465                           	opt stack 18
 27466                           
 27467                           ;incstack = 0
 27468  00D606  0100               	movlb	0	; () banked
 27469  00D608  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27470  00D60A  0B80               	andlw	128
 27471  00D60C  6F88               	movwf	___fldiv@sign& (0+255),b
 27472  00D60E  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27473  00D610  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 27474  00D612  6F8F               	movwf	___fldiv@bexp& (0+255),b
 27475                           
 27476                           ; BSR set to: 0
 27477  00D614  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 27478                           
 27479                           ; BSR set to: 0
 27480  00D616  818F               	bsf	___fldiv@bexp& (0+255),0,b
 27481                           
 27482                           ; BSR set to: 0
 27483                           
 27484                           ; BSR set to: 0
 27485  00D618  518F               	movf	___fldiv@bexp& (0+255),w,b
 27486  00D61A  B4D8               	btfsc	status,2,c
 27487  00D61C  D00D               	goto	l3660
 27488                           
 27489                           ; BSR set to: 0
 27490  00D61E  298F               	incf	___fldiv@bexp& (0+255),w,b
 27491  00D620  A4D8               	btfss	status,2,c
 27492  00D622  D008               	goto	l3661
 27493                           
 27494                           ; BSR set to: 0
 27495  00D624  0E00               	movlw	0
 27496  00D626  6F78               	movwf	___fldiv@b& (0+255),b
 27497  00D628  0E00               	movlw	0
 27498  00D62A  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27499  00D62C  0E00               	movlw	0
 27500  00D62E  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27501  00D630  0E00               	movlw	0
 27502  00D632  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27503  00D634                     l3661:
 27504                           
 27505                           ; BSR set to: 0
 27506                           
 27507                           ; BSR set to: 0
 27508  00D634  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 27509  00D636  D006               	goto	L37
 27510  00D638                     l3660:
 27511                           
 27512                           ; BSR set to: 0
 27513                           
 27514                           ; BSR set to: 0
 27515  00D638  0E00               	movlw	0
 27516  00D63A  6F78               	movwf	___fldiv@b& (0+255),b
 27517  00D63C  0E00               	movlw	0
 27518  00D63E  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27519  00D640  0E00               	movlw	0
 27520  00D642  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27521  00D644                     L37:
 27522  00D644  0E00               	movlw	0
 27523  00D646  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27524                           
 27525                           ; BSR set to: 0
 27526                           
 27527                           ; BSR set to: 0
 27528  00D648  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27529  00D64A  0B80               	andlw	128
 27530  00D64C  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 27531                           
 27532                           ; BSR set to: 0
 27533  00D64E  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27534  00D650  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 27535  00D652  6F90               	movwf	___fldiv@aexp& (0+255),b
 27536                           
 27537                           ; BSR set to: 0
 27538  00D654  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 27539                           
 27540                           ; BSR set to: 0
 27541  00D656  8190               	bsf	___fldiv@aexp& (0+255),0,b
 27542                           
 27543                           ; BSR set to: 0
 27544                           
 27545                           ; BSR set to: 0
 27546  00D658  5190               	movf	___fldiv@aexp& (0+255),w,b
 27547  00D65A  B4D8               	btfsc	status,2,c
 27548  00D65C  D00D               	goto	l3664
 27549                           
 27550                           ; BSR set to: 0
 27551  00D65E  2990               	incf	___fldiv@aexp& (0+255),w,b
 27552  00D660  A4D8               	btfss	status,2,c
 27553  00D662  D008               	goto	l3665
 27554                           
 27555                           ; BSR set to: 0
 27556  00D664  0E00               	movlw	0
 27557  00D666  6F7C               	movwf	___fldiv@a& (0+255),b
 27558  00D668  0E00               	movlw	0
 27559  00D66A  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 27560  00D66C  0E00               	movlw	0
 27561  00D66E  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 27562  00D670  0E00               	movlw	0
 27563  00D672  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 27564  00D674                     l3665:
 27565                           
 27566                           ; BSR set to: 0
 27567                           
 27568                           ; BSR set to: 0
 27569  00D674  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 27570  00D676  D006               	goto	L38
 27571  00D678                     l3664:
 27572                           
 27573                           ; BSR set to: 0
 27574                           
 27575                           ; BSR set to: 0
 27576  00D678  0E00               	movlw	0
 27577  00D67A  6F7C               	movwf	___fldiv@a& (0+255),b
 27578  00D67C  0E00               	movlw	0
 27579  00D67E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 27580  00D680  0E00               	movlw	0
 27581  00D682  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 27582  00D684                     L38:
 27583  00D684  0E00               	movlw	0
 27584  00D686  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 27585                           
 27586                           ; BSR set to: 0
 27587                           
 27588                           ; BSR set to: 0
 27589  00D688  517C               	movf	___fldiv@a& (0+255),w,b
 27590  00D68A  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 27591  00D68C  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 27592  00D68E  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 27593  00D690  A4D8               	btfss	status,2,c
 27594  00D692  D017               	goto	l3667
 27595                           
 27596                           ; BSR set to: 0
 27597  00D694  0E00               	movlw	0
 27598  00D696  6F78               	movwf	___fldiv@b& (0+255),b
 27599  00D698  0E00               	movlw	0
 27600  00D69A  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27601  00D69C  0E00               	movlw	0
 27602  00D69E  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27603  00D6A0  0E00               	movlw	0
 27604  00D6A2  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27605                           
 27606                           ; BSR set to: 0
 27607  00D6A4  0E80               	movlw	128
 27608  00D6A6  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 27609  00D6A8  0E7F               	movlw	127
 27610  00D6AA  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 27611                           
 27612                           ; BSR set to: 0
 27613  00D6AC  5188               	movf	___fldiv@sign& (0+255),w,b
 27614  00D6AE  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 27615                           
 27616                           ; BSR set to: 0
 27617  00D6B0  C078  F078         	movff	___fldiv@b,?___fldiv
 27618  00D6B4  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 27619  00D6B8  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 27620  00D6BC  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 27621                           
 27622                           ; BSR set to: 0
 27623  00D6C0  0012               	return	
 27624  00D6C2                     l3667:
 27625                           
 27626                           ; BSR set to: 0
 27627                           
 27628                           ; BSR set to: 0
 27629  00D6C2  518F               	movf	___fldiv@bexp& (0+255),w,b
 27630  00D6C4  A4D8               	btfss	status,2,c
 27631  00D6C6  D011               	goto	l3669
 27632                           
 27633                           ; BSR set to: 0
 27634  00D6C8  0E00               	movlw	0
 27635  00D6CA  6F78               	movwf	___fldiv@b& (0+255),b
 27636  00D6CC  0E00               	movlw	0
 27637  00D6CE  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27638  00D6D0  0E00               	movlw	0
 27639  00D6D2  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27640  00D6D4  0E00               	movlw	0
 27641  00D6D6  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27642                           
 27643                           ; BSR set to: 0
 27644  00D6D8  C078  F078         	movff	___fldiv@b,?___fldiv
 27645  00D6DC  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 27646  00D6E0  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 27647  00D6E4  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 27648                           
 27649                           ; BSR set to: 0
 27650  00D6E8  0012               	return	
 27651  00D6EA                     l3669:
 27652                           
 27653                           ; BSR set to: 0
 27654                           
 27655                           ; BSR set to: 0
 27656  00D6EA  5190               	movf	___fldiv@aexp& (0+255),w,b
 27657  00D6EC  6F80               	movwf	??___fldiv& (0+255),b
 27658  00D6EE  6B81               	clrf	(??___fldiv+1)& (0+255),b
 27659  00D6F0  1F80               	comf	??___fldiv& (0+255),f,b
 27660  00D6F2  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 27661  00D6F4  4B80               	infsnz	??___fldiv& (0+255),f,b
 27662  00D6F6  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 27663  00D6F8  518F               	movf	___fldiv@bexp& (0+255),w,b
 27664  00D6FA  6F82               	movwf	(??___fldiv+2)& (0+255),b
 27665  00D6FC  6B83               	clrf	(??___fldiv+3)& (0+255),b
 27666  00D6FE  5180               	movf	??___fldiv& (0+255),w,b
 27667  00D700  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 27668  00D702  5181               	movf	(??___fldiv+1)& (0+255),w,b
 27669  00D704  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 27670  00D706  0E7F               	movlw	127
 27671  00D708  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 27672  00D70A  6F89               	movwf	___fldiv@new_exp& (0+255),b
 27673  00D70C  0E00               	movlw	0
 27674  00D70E  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 27675  00D710  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 27676                           
 27677                           ; BSR set to: 0
 27678  00D712  C078  F084         	movff	___fldiv@b,___fldiv@rem
 27679  00D716  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 27680  00D71A  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 27681  00D71E  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 27682                           
 27683                           ; BSR set to: 0
 27684  00D722  0E00               	movlw	0
 27685  00D724  6F78               	movwf	___fldiv@b& (0+255),b
 27686  00D726  0E00               	movlw	0
 27687  00D728  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27688  00D72A  0E00               	movlw	0
 27689  00D72C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27690  00D72E  0E00               	movlw	0
 27691  00D730  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27692                           
 27693                           ; BSR set to: 0
 27694  00D732  0E00               	movlw	0
 27695  00D734  6F8B               	movwf	___fldiv@grs& (0+255),b
 27696  00D736  0E00               	movlw	0
 27697  00D738  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 27698  00D73A  0E00               	movlw	0
 27699  00D73C  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 27700  00D73E  0E00               	movlw	0
 27701  00D740  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 27702                           
 27703                           ; BSR set to: 0
 27704  00D742  0E00               	movlw	0
 27705  00D744  6F90               	movwf	___fldiv@aexp& (0+255),b
 27706  00D746  D028               	goto	l3670
 27707  00D748                     
 27708                           ; BSR set to: 0
 27709                           
 27710                           ; BSR set to: 0
 27711  00D748  5190               	movf	___fldiv@aexp& (0+255),w,b
 27712  00D74A  B4D8               	btfsc	status,2,c
 27713  00D74C  D011               	goto	l3672
 27714                           
 27715                           ; BSR set to: 0
 27716  00D74E  90D8               	bcf	status,0,c
 27717  00D750  3784               	rlcf	___fldiv@rem& (0+255),f,b
 27718  00D752  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 27719  00D754  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 27720  00D756  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 27721  00D758  90D8               	bcf	status,0,c
 27722  00D75A  3778               	rlcf	___fldiv@b& (0+255),f,b
 27723  00D75C  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 27724  00D75E  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 27725  00D760  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 27726                           
 27727                           ; BSR set to: 0
 27728  00D762  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 27729                           
 27730                           ; BSR set to: 0
 27731  00D764  8178               	bsf	___fldiv@b& (0+255),0,b
 27732                           
 27733                           ; BSR set to: 0
 27734  00D766  90D8               	bcf	status,0,c
 27735  00D768  378B               	rlcf	___fldiv@grs& (0+255),f,b
 27736  00D76A  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 27737  00D76C  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 27738  00D76E  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 27739  00D770                     l3672:
 27740                           
 27741                           ; BSR set to: 0
 27742                           
 27743                           ; BSR set to: 0
 27744  00D770  517C               	movf	___fldiv@a& (0+255),w,b
 27745  00D772  5D84               	subwf	___fldiv@rem& (0+255),w,b
 27746  00D774  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 27747  00D776  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 27748  00D778  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 27749  00D77A  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 27750  00D77C  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27751  00D77E  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 27752  00D780  A0D8               	btfss	status,0,c
 27753  00D782  D009               	goto	l3674
 27754                           
 27755                           ; BSR set to: 0
 27756  00D784  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 27757                           
 27758                           ; BSR set to: 0
 27759  00D786  517C               	movf	___fldiv@a& (0+255),w,b
 27760  00D788  5F84               	subwf	___fldiv@rem& (0+255),f,b
 27761  00D78A  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 27762  00D78C  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 27763  00D78E  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 27764  00D790  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 27765  00D792  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27766  00D794  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 27767  00D796                     l3674:
 27768                           
 27769                           ; BSR set to: 0
 27770                           
 27771                           ; BSR set to: 0
 27772  00D796  2B90               	incf	___fldiv@aexp& (0+255),f,b
 27773  00D798                     l3670:
 27774                           
 27775                           ; BSR set to: 0
 27776  00D798  0E19               	movlw	25
 27777  00D79A  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 27778  00D79C  D7D5               	goto	l3671
 27779                           
 27780                           ; BSR set to: 0
 27781                           
 27782                           ; BSR set to: 0
 27783  00D79E  5184               	movf	___fldiv@rem& (0+255),w,b
 27784  00D7A0  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 27785  00D7A2  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 27786  00D7A4  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 27787  00D7A6  B4D8               	btfsc	status,2,c
 27788  00D7A8  D011               	goto	l3677
 27789                           
 27790                           ; BSR set to: 0
 27791  00D7AA  818B               	bsf	___fldiv@grs& (0+255),0,b
 27792                           
 27793                           ; BSR set to: 0
 27794  00D7AC  D00F               	goto	l3677
 27795  00D7AE                     
 27796                           ; BSR set to: 0
 27797                           
 27798                           ; BSR set to: 0
 27799  00D7AE  90D8               	bcf	status,0,c
 27800  00D7B0  3778               	rlcf	___fldiv@b& (0+255),f,b
 27801  00D7B2  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 27802  00D7B4  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 27803  00D7B6  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 27804                           
 27805                           ; BSR set to: 0
 27806  00D7B8  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 27807                           
 27808                           ; BSR set to: 0
 27809  00D7BA  8178               	bsf	___fldiv@b& (0+255),0,b
 27810                           
 27811                           ; BSR set to: 0
 27812  00D7BC  90D8               	bcf	status,0,c
 27813  00D7BE  378B               	rlcf	___fldiv@grs& (0+255),f,b
 27814  00D7C0  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 27815  00D7C2  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 27816  00D7C4  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 27817  00D7C6  0789               	decf	___fldiv@new_exp& (0+255),f,b
 27818  00D7C8  A0D8               	btfss	status,0,c
 27819  00D7CA  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 27820  00D7CC                     l3677:
 27821                           
 27822                           ; BSR set to: 0
 27823                           
 27824                           ; BSR set to: 0
 27825  00D7CC  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 27826  00D7CE  D7EF               	goto	l3678
 27827                           
 27828                           ; BSR set to: 0
 27829                           
 27830                           ; BSR set to: 0
 27831  00D7D0  0E00               	movlw	0
 27832  00D7D2  6F90               	movwf	___fldiv@aexp& (0+255),b
 27833                           
 27834                           ; BSR set to: 0
 27835  00D7D4  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 27836  00D7D6  D016               	goto	l3684
 27837                           
 27838                           ; BSR set to: 0
 27839  00D7D8  0EFF               	movlw	255
 27840  00D7DA  158B               	andwf	___fldiv@grs& (0+255),w,b
 27841  00D7DC  6F80               	movwf	??___fldiv& (0+255),b
 27842  00D7DE  0EFF               	movlw	255
 27843  00D7E0  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 27844  00D7E2  6F81               	movwf	(??___fldiv+1)& (0+255),b
 27845  00D7E4  0EFF               	movlw	255
 27846  00D7E6  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 27847  00D7E8  6F82               	movwf	(??___fldiv+2)& (0+255),b
 27848  00D7EA  0E7F               	movlw	127
 27849  00D7EC  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 27850  00D7EE  6F83               	movwf	(??___fldiv+3)& (0+255),b
 27851  00D7F0  5180               	movf	??___fldiv& (0+255),w,b
 27852  00D7F2  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 27853  00D7F4  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 27854  00D7F6  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 27855  00D7F8  A4D8               	btfss	status,2,c
 27856  00D7FA  D002               	goto	u13120
 27857                           
 27858                           ; BSR set to: 0
 27859                           
 27860                           ; BSR set to: 0
 27861  00D7FC  A178               	btfss	___fldiv@b& (0+255),0,b
 27862  00D7FE  D002               	goto	l3684
 27863  00D800                     u13120:
 27864                           
 27865                           ; BSR set to: 0
 27866  00D800  0E01               	movlw	1
 27867  00D802  6F90               	movwf	___fldiv@aexp& (0+255),b
 27868  00D804                     l3684:
 27869                           
 27870                           ; BSR set to: 0
 27871                           
 27872                           ; BSR set to: 0
 27873                           
 27874                           ; BSR set to: 0
 27875  00D804  5190               	movf	___fldiv@aexp& (0+255),w,b
 27876  00D806  B4D8               	btfsc	status,2,c
 27877  00D808  D01F               	goto	l3686
 27878                           
 27879                           ; BSR set to: 0
 27880  00D80A  0E01               	movlw	1
 27881  00D80C  2778               	addwf	___fldiv@b& (0+255),f,b
 27882  00D80E  0E00               	movlw	0
 27883  00D810  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 27884  00D812  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 27885  00D814  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 27886                           
 27887                           ; BSR set to: 0
 27888  00D816  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 27889  00D818  D017               	goto	l3686
 27890                           
 27891                           ; BSR set to: 0
 27892  00D81A  C078  F080         	movff	___fldiv@b,??___fldiv
 27893  00D81E  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 27894  00D822  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 27895  00D826  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 27896  00D82A  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 27897  00D82C  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 27898  00D82E  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 27899  00D830  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 27900  00D832  3380               	rrcf	??___fldiv& (0+255),f,b
 27901  00D834  C080  F078         	movff	??___fldiv,___fldiv@b
 27902  00D838  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 27903  00D83C  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 27904  00D840  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 27905                           
 27906                           ; BSR set to: 0
 27907  00D844  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 27908  00D846  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 27909  00D848                     l3686:
 27910                           
 27911                           ; BSR set to: 0
 27912                           
 27913                           ; BSR set to: 0
 27914                           
 27915                           ; BSR set to: 0
 27916  00D848  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 27917  00D84A  D010               	goto	l3687
 27918  00D84C  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 27919  00D84E  E103               	bnz	u13150
 27920  00D850  2989               	incf	___fldiv@new_exp& (0+255),w,b
 27921  00D852  A0D8               	btfss	status,0,c
 27922  00D854  D00B               	goto	l3687
 27923  00D856                     u13150:
 27924                           
 27925                           ; BSR set to: 0
 27926  00D856  0E00               	movlw	0
 27927  00D858  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 27928  00D85A  6989               	setf	___fldiv@new_exp& (0+255),b
 27929  00D85C  0E00               	movlw	0
 27930  00D85E  6F78               	movwf	___fldiv@b& (0+255),b
 27931  00D860  0E00               	movlw	0
 27932  00D862  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27933  00D864  0E00               	movlw	0
 27934  00D866  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27935  00D868  0E00               	movlw	0
 27936  00D86A  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27937  00D86C                     l3687:
 27938                           
 27939                           ; BSR set to: 0
 27940                           
 27941                           ; BSR set to: 0
 27942  00D86C  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 27943  00D86E  D005               	goto	u13160
 27944  00D870  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 27945  00D872  E111               	bnz	l14342
 27946  00D874  0589               	decf	___fldiv@new_exp& (0+255),w,b
 27947  00D876  B0D8               	btfsc	status,0,c
 27948  00D878  D00E               	goto	l3688
 27949  00D87A                     u13160:
 27950                           
 27951                           ; BSR set to: 0
 27952  00D87A  0E00               	movlw	0
 27953  00D87C  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 27954  00D87E  0E00               	movlw	0
 27955  00D880  6F89               	movwf	___fldiv@new_exp& (0+255),b
 27956  00D882  0E00               	movlw	0
 27957  00D884  6F78               	movwf	___fldiv@b& (0+255),b
 27958  00D886  0E00               	movlw	0
 27959  00D888  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27960  00D88A  0E00               	movlw	0
 27961  00D88C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27962  00D88E  0E00               	movlw	0
 27963  00D890  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27964  00D892  0E00               	movlw	0
 27965  00D894  6F88               	movwf	___fldiv@sign& (0+255),b
 27966  00D896                     l3688:
 27967  00D896                     l14342:
 27968                           
 27969                           ; BSR set to: 0
 27970  00D896  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 27971                           
 27972                           ; BSR set to: 0
 27973  00D89A  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 27974  00D89C  D002               	goto	l3689
 27975                           
 27976                           ; BSR set to: 0
 27977  00D89E  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 27978  00D8A0  D001               	goto	l3690
 27979  00D8A2                     l3689:
 27980                           
 27981                           ; BSR set to: 0
 27982                           
 27983                           ; BSR set to: 0
 27984  00D8A2  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 27985  00D8A4                     l3690:
 27986                           
 27987                           ; BSR set to: 0
 27988                           
 27989                           ; BSR set to: 0
 27990  00D8A4  90D8               	bcf	status,0,c
 27991  00D8A6  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 27992  00D8A8  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27993                           
 27994                           ; BSR set to: 0
 27995  00D8AA  5188               	movf	___fldiv@sign& (0+255),w,b
 27996  00D8AC  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 27997                           
 27998                           ; BSR set to: 0
 27999  00D8AE  C078  F078         	movff	___fldiv@b,?___fldiv
 28000  00D8B2  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28001  00D8B6  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28002  00D8BA  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28003  00D8BE  0012               	return	
 28004  00D8C0                     __end_of___fldiv:
 28005                           	opt stack 0
 28006                           tblptru	equ	0xFF8
 28007                           tblptrh	equ	0xFF7
 28008                           tblptrl	equ	0xFF6
 28009                           tablat	equ	0xFF5
 28010                           prodh	equ	0xFF4
 28011                           prodl	equ	0xFF3
 28012                           intcon	equ	0xFF2
 28013                           postinc0	equ	0xFEE
 28014                           wreg	equ	0xFE8
 28015                           indf1	equ	0xFE7
 28016                           postinc1	equ	0xFE6
 28017                           postdec1	equ	0xFE5
 28018                           plusw1	equ	0xFE3
 28019                           fsr1h	equ	0xFE2
 28020                           fsr1l	equ	0xFE1
 28021                           indf2	equ	0xFDF
 28022                           postinc2	equ	0xFDE
 28023                           postdec2	equ	0xFDD
 28024                           plusw2	equ	0xFDB
 28025                           fsr2h	equ	0xFDA
 28026                           fsr2l	equ	0xFD9
 28027                           status	equ	0xFD8
 28028                           
 28029 ;; *************** function __display_signed_itoa *****************
 28030 ;; Defined at:
 28031 ;;		line 121 in file "display.c"
 28032 ;; Parameters:    Size  Location     Type
 28033 ;;  value           2   47[BANK0 ] int 
 28034 ;;  text            2   49[BANK0 ] PTR unsigned char 
 28035 ;;		 -> display_prepare@temp(10), 
 28036 ;; Auto vars:     Size  Location     Type
 28037 ;;		None
 28038 ;; Return value:  Size  Location     Type
 28039 ;;                  1    wreg      void 
 28040 ;; Registers used:
 28041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28042 ;; Tracked objects:
 28043 ;;		On entry : 0/0
 28044 ;;		On exit  : 0/0
 28045 ;;		Unchanged: 0/0
 28046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28047 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28050 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28051 ;;Total ram usage:        4 bytes
 28052 ;; Hardware stack levels used:    1
 28053 ;; Hardware stack levels required when called:   14
 28054 ;; This function calls:
 28055 ;;		__display_padded_itoa
 28056 ;; This function is called by:
 28057 ;;		_display_prepare
 28058 ;; This function uses a non-reentrant model
 28059 ;;
 28060                           
 28061                           	psect	text103
 28062  01565A                     __ptext103:
 28063                           	opt stack 0
 28064  01565A                     __display_signed_itoa:
 28065                           	opt stack 15
 28066                           
 28067                           ;display.c: 123: if(value<0)
 28068                           
 28069                           ; BSR set to: 0
 28070                           ;incstack = 0
 28071  01565A  0100               	movlb	0	; () banked
 28072  01565C  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 28073  01565E  D00A               	goto	l1343
 28074                           
 28075                           ; BSR set to: 0
 28076                           ;display.c: 124: {;display.c: 125: value = -value;
 28077  015660  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 28078  015662  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 28079  015664  B0D8               	btfsc	status,0,c
 28080  015666  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 28081                           
 28082                           ; BSR set to: 0
 28083                           ;display.c: 126: text[0] = '-';
 28084  015668  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28085  01566C  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28086  015670  0E2D               	movlw	45
 28087  015672  D005               	goto	L39
 28088  015674                     l1343:
 28089                           
 28090                           ; BSR set to: 0
 28091                           ;display.c: 128: else;display.c: 129: {;display.c: 130: text[0] = '+';
 28092                           
 28093                           ; BSR set to: 0
 28094  015674  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28095  015678  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28096  01567C  0E2B               	movlw	43
 28097  01567E                     L39:
 28098  01567E  6EDF               	movwf	indf2,c
 28099                           
 28100                           ; BSR set to: 0
 28101                           ;display.c: 131: };display.c: 132: _display_padded_itoa(value, 0, &text[1]);
 28102                           
 28103                           ; BSR set to: 0
 28104  015680  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 28105  015684  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 28106  015688  0E00               	movlw	0
 28107  01568A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 28108  01568C  0E01               	movlw	1
 28109  01568E  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 28110  015690  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 28111  015692  0E00               	movlw	0
 28112  015694  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 28113  015696  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 28114  015698  ECFD  F090         	call	__display_padded_itoa	;wreg free
 28115  01569C  0012               	return		;funcret
 28116  01569E                     __end_of__display_signed_itoa:
 28117                           	opt stack 0
 28118                           tblptru	equ	0xFF8
 28119                           tblptrh	equ	0xFF7
 28120                           tblptrl	equ	0xFF6
 28121                           tablat	equ	0xFF5
 28122                           prodh	equ	0xFF4
 28123                           prodl	equ	0xFF3
 28124                           intcon	equ	0xFF2
 28125                           postinc0	equ	0xFEE
 28126                           wreg	equ	0xFE8
 28127                           indf1	equ	0xFE7
 28128                           postinc1	equ	0xFE6
 28129                           postdec1	equ	0xFE5
 28130                           plusw1	equ	0xFE3
 28131                           fsr1h	equ	0xFE2
 28132                           fsr1l	equ	0xFE1
 28133                           indf2	equ	0xFDF
 28134                           postinc2	equ	0xFDE
 28135                           postdec2	equ	0xFDD
 28136                           plusw2	equ	0xFDB
 28137                           fsr2h	equ	0xFDA
 28138                           fsr2l	equ	0xFD9
 28139                           status	equ	0xFD8
 28140                           
 28141 ;; *************** function __display_padded_itoa *****************
 28142 ;; Defined at:
 28143 ;;		line 99 in file "display.c"
 28144 ;; Parameters:    Size  Location     Type
 28145 ;;  value           2   24[BANK0 ] int 
 28146 ;;  length          1   26[BANK0 ] unsigned char 
 28147 ;;  text            2   27[BANK0 ] PTR unsigned char 
 28148 ;;		 -> display_prepare@temp(10), 
 28149 ;; Auto vars:     Size  Location     Type
 28150 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 28151 ;;  padding         1   46[BANK0 ] unsigned char 
 28152 ;;  pos             1   45[BANK0 ] unsigned char 
 28153 ;;  len             1   44[BANK0 ] unsigned char 
 28154 ;; Return value:  Size  Location     Type
 28155 ;;                  1    wreg      void 
 28156 ;; Registers used:
 28157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28158 ;; Tracked objects:
 28159 ;;		On entry : 0/0
 28160 ;;		On exit  : 0/0
 28161 ;;		Unchanged: 0/0
 28162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28163 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28164 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28165 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28166 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28167 ;;Total ram usage:       23 bytes
 28168 ;; Hardware stack levels used:    1
 28169 ;; Hardware stack levels required when called:   13
 28170 ;; This function calls:
 28171 ;;		_itoa
 28172 ;;		_strlen
 28173 ;; This function is called by:
 28174 ;;		__display_signed_itoa
 28175 ;;		_display_prepare
 28176 ;; This function uses a non-reentrant model
 28177 ;;
 28178                           
 28179                           	psect	text104
 28180  0121FA                     __ptext104:
 28181                           	opt stack 0
 28182  0121FA                     __display_padded_itoa:
 28183                           	opt stack 15
 28184                           
 28185                           ;display.c: 101: uint8_t pos;;display.c: 102: uint8_t padding;;display.c: 104: uint8_t l
      +                          en;;display.c: 105: char tmp[10];;display.c: 106: itoa(tmp, value, 10);
 28186                           
 28187                           ;incstack = 0
 28188  0121FA  0E82               	movlw	low __display_padded_itoa@tmp
 28189  0121FC  0100               	movlb	0	; () banked
 28190  0121FE  6F70               	movwf	itoa@buf& (0+255),b
 28191  012200  0E00               	movlw	high __display_padded_itoa@tmp
 28192  012202  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28193  012204  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 28194  012208  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 28195  01220C  0E00               	movlw	0
 28196  01220E  6F75               	movwf	(itoa@base+1)& (0+255),b
 28197  012210  0E0A               	movlw	10
 28198  012212  6F74               	movwf	itoa@base& (0+255),b
 28199  012214  EC4F  F0AB         	call	_itoa	;wreg free
 28200                           
 28201                           ;display.c: 107: len = strlen(tmp);
 28202  012218  0E82               	movlw	low __display_padded_itoa@tmp
 28203  01221A  0100               	movlb	0	; () banked
 28204  01221C  6F60               	movwf	strlen@s& (0+255),b
 28205  01221E  0E00               	movlw	high __display_padded_itoa@tmp
 28206  012220  6F61               	movwf	(strlen@s+1)& (0+255),b
 28207  012222  ECF5  F0AB         	call	_strlen	;wreg free
 28208  012226  0100               	movlb	0	; () banked
 28209  012228  5160               	movf	?_strlen& (0+255),w,b
 28210  01222A  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 28211                           
 28212                           ; BSR set to: 0
 28213                           ;display.c: 108: padding = 0;
 28214  01222C  0E00               	movlw	0
 28215  01222E  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 28216                           
 28217                           ;display.c: 109: while((padding+len)<length)
 28218  012230  D00B               	goto	l1334
 28219  012232                     
 28220                           ; BSR set to: 0
 28221                           ;display.c: 110: {;display.c: 111: text[padding] = ' ';
 28222                           
 28223                           ; BSR set to: 0
 28224  012232  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28225  012234  0D01               	mullw	1
 28226  012236  50F3               	movf	prodl,w,c
 28227  012238  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28228  01223A  6ED9               	movwf	fsr2l,c
 28229  01223C  50F4               	movf	prodh,w,c
 28230  01223E  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28231  012240  6EDA               	movwf	fsr2h,c
 28232  012242  0E20               	movlw	32
 28233  012244  6EDF               	movwf	indf2,c
 28234                           
 28235                           ; BSR set to: 0
 28236                           ;display.c: 112: ++padding;
 28237  012246  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 28238  012248                     l1334:
 28239                           
 28240                           ; BSR set to: 0
 28241                           
 28242                           ; BSR set to: 0
 28243  012248  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 28244  01224A  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 28245  01224C  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28246  01224E  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 28247  012250  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 28248  012254  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 28249  012256  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 28250  012258  0E00               	movlw	0
 28251  01225A  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 28252  01225C  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28253  01225E  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 28254  012260  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 28255  012262  0A80               	xorlw	128
 28256  012264  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 28257  012266  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28258  012268  0A80               	xorlw	128
 28259  01226A  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 28260  01226C  A0D8               	btfss	status,0,c
 28261  01226E  D7E1               	goto	l1335
 28262                           
 28263                           ; BSR set to: 0
 28264                           ;display.c: 113: };display.c: 114: for(pos=0; tmp[pos]; ++pos)
 28265                           
 28266                           ; BSR set to: 0
 28267  012270  0E00               	movlw	0
 28268  012272  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 28269  012274  D018               	goto	l1337
 28270  012276                     
 28271                           ; BSR set to: 0
 28272                           ;display.c: 115: {;display.c: 116: text[pos+padding] = tmp[pos];
 28273                           
 28274                           ; BSR set to: 0
 28275  012276  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28276  012278  0D01               	mullw	1
 28277  01227A  0E82               	movlw	low __display_padded_itoa@tmp
 28278  01227C  24F3               	addwf	prodl,w,c
 28279  01227E  6ED9               	movwf	fsr2l,c
 28280  012280  0E00               	movlw	high __display_padded_itoa@tmp
 28281  012282  20F4               	addwfc	prodh,w,c
 28282  012284  6EDA               	movwf	fsr2h,c
 28283  012286  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28284  012288  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28285  01228C  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28286  01228E  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28287  012290  0E00               	movlw	0
 28288  012292  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28289  012294  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28290  012296  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28291  012298  6EE1               	movwf	fsr1l,c
 28292  01229A  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28293  01229C  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28294  01229E  6EE2               	movwf	fsr1h,c
 28295  0122A0  CFDF FFE7          	movff	indf2,indf1
 28296                           
 28297                           ; BSR set to: 0
 28298  0122A4  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 28299  0122A6                     l1337:
 28300                           
 28301                           ; BSR set to: 0
 28302                           
 28303                           ; BSR set to: 0
 28304  0122A6  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28305  0122A8  0D01               	mullw	1
 28306  0122AA  0E82               	movlw	low __display_padded_itoa@tmp
 28307  0122AC  24F3               	addwf	prodl,w,c
 28308  0122AE  6ED9               	movwf	fsr2l,c
 28309  0122B0  0E00               	movlw	high __display_padded_itoa@tmp
 28310  0122B2  20F4               	addwfc	prodh,w,c
 28311  0122B4  6EDA               	movwf	fsr2h,c
 28312  0122B6  50DF               	movf	indf2,w,c
 28313  0122B8  A4D8               	btfss	status,2,c
 28314  0122BA  D7DD               	goto	l1338
 28315                           
 28316                           ; BSR set to: 0
 28317                           ;display.c: 117: };display.c: 118: text[pos+padding] = 0x00;
 28318                           
 28319                           ; BSR set to: 0
 28320  0122BC  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28321  0122BE  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28322  0122C2  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28323  0122C4  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28324  0122C6  0E00               	movlw	0
 28325  0122C8  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28326  0122CA  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28327  0122CC  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28328  0122CE  6ED9               	movwf	fsr2l,c
 28329  0122D0  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28330  0122D2  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28331  0122D4  6EDA               	movwf	fsr2h,c
 28332  0122D6  0E00               	movlw	0
 28333  0122D8  6EDF               	movwf	indf2,c
 28334                           
 28335                           ; BSR set to: 0
 28336  0122DA  0012               	return		;funcret
 28337  0122DC                     __end_of__display_padded_itoa:
 28338                           	opt stack 0
 28339                           tblptru	equ	0xFF8
 28340                           tblptrh	equ	0xFF7
 28341                           tblptrl	equ	0xFF6
 28342                           tablat	equ	0xFF5
 28343                           prodh	equ	0xFF4
 28344                           prodl	equ	0xFF3
 28345                           intcon	equ	0xFF2
 28346                           postinc0	equ	0xFEE
 28347                           wreg	equ	0xFE8
 28348                           indf1	equ	0xFE7
 28349                           postinc1	equ	0xFE6
 28350                           postdec1	equ	0xFE5
 28351                           plusw1	equ	0xFE3
 28352                           fsr1h	equ	0xFE2
 28353                           fsr1l	equ	0xFE1
 28354                           indf2	equ	0xFDF
 28355                           postinc2	equ	0xFDE
 28356                           postdec2	equ	0xFDD
 28357                           plusw2	equ	0xFDB
 28358                           fsr2h	equ	0xFDA
 28359                           fsr2l	equ	0xFD9
 28360                           status	equ	0xFD8
 28361                           
 28362 ;; *************** function __display_position_in_degrees *****************
 28363 ;; Defined at:
 28364 ;;		line 258 in file "display.c"
 28365 ;; Parameters:    Size  Location     Type
 28366 ;;		None
 28367 ;; Auto vars:     Size  Location     Type
 28368 ;;  position        4    4[BANK0 ] long 
 28369 ;; Return value:  Size  Location     Type
 28370 ;;                  4    0[BANK0 ] long 
 28371 ;; Registers used:
 28372 ;;		wreg, status,2, status,0
 28373 ;; Tracked objects:
 28374 ;;		On entry : 0/0
 28375 ;;		On exit  : 0/0
 28376 ;;		Unchanged: 0/0
 28377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28378 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28379 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28381 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28382 ;;Total ram usage:        8 bytes
 28383 ;; Hardware stack levels used:    1
 28384 ;; Hardware stack levels required when called:   10
 28385 ;; This function calls:
 28386 ;;		Nothing
 28387 ;; This function is called by:
 28388 ;;		_display_prepare
 28389 ;; This function uses a non-reentrant model
 28390 ;;
 28391                           
 28392                           	psect	text105
 28393  015316                     __ptext105:
 28394                           	opt stack 0
 28395  015316                     __display_position_in_degrees:
 28396                           	opt stack 19
 28397                           
 28398                           ;display.c: 260: int32_t position;;display.c: 261: position = (int32_t) os.current_posit
      +                          ion_in_degrees;
 28399                           
 28400                           ; BSR set to: 0
 28401                           ;incstack = 0
 28402  015316  C172  F064         	movff	_os+13,__display_position_in_degrees@position	;volatile
 28403  01531A  C173  F065         	movff	_os+14,__display_position_in_degrees@position+1	;volatile
 28404  01531E  0100               	movlb	0	; () banked
 28405  015320  6B66               	clrf	(__display_position_in_degrees@position+2)& (0+255),b
 28406  015322  6B67               	clrf	(__display_position_in_degrees@position+3)& (0+255),b
 28407                           
 28408                           ; BSR set to: 0
 28409                           ;display.c: 263: if(config.position_display_180==1)
 28410  015324  0101               	movlb	1	; () banked
 28411  015326  05BE               	decf	(_config+40)& (0+255),w,b
 28412  015328  A4D8               	btfss	status,2,c
 28413  01532A  D014               	goto	l1388
 28414                           
 28415                           ; BSR set to: 1
 28416                           ;display.c: 264: {;display.c: 265: if(position>18000)
 28417  01532C  0100               	movlb	0	; () banked
 28418  01532E  BF67               	btfsc	(__display_position_in_degrees@position+3)& (0+255),7,b
 28419  015330  D011               	goto	l1388
 28420  015332  5167               	movf	(__display_position_in_degrees@position+3)& (0+255),w,b
 28421  015334  1166               	iorwf	(__display_position_in_degrees@position+2)& (0+255),w,b
 28422  015336  E106               	bnz	u17170
 28423  015338  0E51               	movlw	81
 28424  01533A  5D64               	subwf	__display_position_in_degrees@position& (0+255),w,b
 28425  01533C  0E46               	movlw	70
 28426  01533E  5965               	subwfb	(__display_position_in_degrees@position+1)& (0+255),w,b
 28427  015340  A0D8               	btfss	status,0,c
 28428  015342  D008               	goto	l1388
 28429  015344                     u17170:
 28430                           
 28431                           ; BSR set to: 0
 28432                           ;display.c: 266: {;display.c: 267: position -= 36000;
 28433  015344  0E60               	movlw	96
 28434  015346  2764               	addwf	__display_position_in_degrees@position& (0+255),f,b
 28435  015348  0E73               	movlw	115
 28436  01534A  2365               	addwfc	(__display_position_in_degrees@position+1)& (0+255),f,b
 28437  01534C  0EFF               	movlw	255
 28438  01534E  2366               	addwfc	(__display_position_in_degrees@position+2)& (0+255),f,b
 28439  015350  0EFF               	movlw	255
 28440  015352  2367               	addwfc	(__display_position_in_degrees@position+3)& (0+255),f,b
 28441  015354                     l1388:
 28442                           
 28443                           ;display.c: 268: };display.c: 269: };display.c: 271: return position;
 28444                           
 28445                           ; BSR set to: 0
 28446                           
 28447                           ; BSR set to: 0
 28448  015354  C064  F060         	movff	__display_position_in_degrees@position,?__display_position_in_degrees
 28449  015358  C065  F061         	movff	__display_position_in_degrees@position+1,?__display_position_in_degrees+1
 28450  01535C  C066  F062         	movff	__display_position_in_degrees@position+2,?__display_position_in_degrees+2
 28451  015360  C067  F063         	movff	__display_position_in_degrees@position+3,?__display_position_in_degrees+3
 28452  015364  0012               	return	
 28453  015366                     __end_of__display_position_in_degrees:
 28454                           	opt stack 0
 28455                           tblptru	equ	0xFF8
 28456                           tblptrh	equ	0xFF7
 28457                           tblptrl	equ	0xFF6
 28458                           tablat	equ	0xFF5
 28459                           prodh	equ	0xFF4
 28460                           prodl	equ	0xFF3
 28461                           intcon	equ	0xFF2
 28462                           postinc0	equ	0xFEE
 28463                           wreg	equ	0xFE8
 28464                           indf1	equ	0xFE7
 28465                           postinc1	equ	0xFE6
 28466                           postdec1	equ	0xFE5
 28467                           plusw1	equ	0xFE3
 28468                           fsr1h	equ	0xFE2
 28469                           fsr1l	equ	0xFE1
 28470                           indf2	equ	0xFDF
 28471                           postinc2	equ	0xFDE
 28472                           postdec2	equ	0xFDD
 28473                           plusw2	equ	0xFDB
 28474                           fsr2h	equ	0xFDA
 28475                           fsr2l	equ	0xFD9
 28476                           status	equ	0xFD8
 28477                           
 28478 ;; *************** function __display_itoa_long *****************
 28479 ;; Defined at:
 28480 ;;		line 203 in file "display.c"
 28481 ;; Parameters:    Size  Location     Type
 28482 ;;  value           4   87[BANK0 ] long 
 28483 ;;  decimals        1   91[BANK0 ] unsigned char 
 28484 ;;  text            2   92[BANK0 ] PTR unsigned char 
 28485 ;;		 -> display_prepare@temp(10), 
 28486 ;; Auto vars:     Size  Location     Type
 28487 ;;  short_value     2   99[BANK0 ] int 
 28488 ;;  last_digit      1  101[BANK0 ] char 
 28489 ;;  length          1   98[BANK0 ] unsigned char 
 28490 ;; Return value:  Size  Location     Type
 28491 ;;                  1    wreg      void 
 28492 ;; Registers used:
 28493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28494 ;; Tracked objects:
 28495 ;;		On entry : 0/0
 28496 ;;		On exit  : 0/0
 28497 ;;		Unchanged: 0/0
 28498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28499 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28500 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28501 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28502 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28503 ;;Total ram usage:       15 bytes
 28504 ;; Hardware stack levels used:    1
 28505 ;; Hardware stack levels required when called:   14
 28506 ;; This function calls:
 28507 ;;		___aldiv
 28508 ;;		___almod
 28509 ;;		__display_itoa
 28510 ;;		_strlen
 28511 ;; This function is called by:
 28512 ;;		_display_prepare
 28513 ;; This function uses a non-reentrant model
 28514 ;;
 28515                           
 28516                           	psect	text106
 28517  011046                     __ptext106:
 28518                           	opt stack 0
 28519  011046                     __display_itoa_long:
 28520                           	opt stack 15
 28521                           
 28522                           ;display.c: 205: int16_t short_value;;display.c: 206: int8_t last_digit;;display.c: 207:
      +                           uint8_t length;;display.c: 209: short_value = (int16_t) value;
 28523                           
 28524                           ;incstack = 0
 28525  011046  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 28526  01104A  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 28527                           
 28528                           ;display.c: 210: if(short_value==value)
 28529  01104E  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 28530  011052  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 28531  011056  0E00               	movlw	0
 28532  011058  0100               	movlb	0	; () banked
 28533  01105A  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 28534  01105C  0EFF               	movlw	255
 28535  01105E  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 28536  011060  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 28537  011062  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 28538  011064  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 28539  011066  E117               	bnz	l17656
 28540  011068  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 28541  01106A  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 28542  01106C  E114               	bnz	l17656
 28543  01106E  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 28544  011070  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 28545  011072  E111               	bnz	l17656
 28546  011074  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 28547  011076  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 28548  011078  A4D8               	btfss	status,2,c
 28549  01107A  D00D               	goto	l1370
 28550                           
 28551                           ; BSR set to: 0
 28552                           ;display.c: 211: {;display.c: 212: _display_itoa(short_value, decimals, text);
 28553  01107C  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 28554  011080  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 28555  011084  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 28556  011088  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 28557  01108C  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 28558  011090  EC3C  F072         	call	__display_itoa	;wreg free
 28559                           
 28560                           ;display.c: 213: }
 28561  011094  0012               	return	
 28562  011096                     l1370:
 28563  011096                     l17656:
 28564                           
 28565                           ;display.c: 214: else;display.c: 215: {;display.c: 216: short_value = value / 10;
 28566  011096  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 28567  01109A  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 28568  01109E  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 28569  0110A2  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 28570  0110A6  0E0A               	movlw	10
 28571  0110A8  0100               	movlb	0	; () banked
 28572  0110AA  6F64               	movwf	___aldiv@divisor& (0+255),b
 28573  0110AC  0E00               	movlw	0
 28574  0110AE  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 28575  0110B0  0E00               	movlw	0
 28576  0110B2  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 28577  0110B4  0E00               	movlw	0
 28578  0110B6  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 28579  0110B8  EC20  F096         	call	___aldiv	;wreg free
 28580  0110BC  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 28581  0110C0  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 28582                           
 28583                           ;display.c: 217: _display_itoa(short_value, decimals-1, text);
 28584  0110C4  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 28585  0110C8  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 28586  0110CC  0100               	movlb	0	; () banked
 28587  0110CE  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 28588  0110D0  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28589  0110D2  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 28590  0110D6  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 28591  0110DA  EC3C  F072         	call	__display_itoa	;wreg free
 28592                           
 28593                           ;display.c: 218: length = strlen(text);
 28594  0110DE  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 28595  0110E2  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 28596  0110E6  ECF5  F0AB         	call	_strlen	;wreg free
 28597  0110EA  0100               	movlb	0	; () banked
 28598  0110EC  5160               	movf	?_strlen& (0+255),w,b
 28599  0110EE  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 28600                           
 28601                           ; BSR set to: 0
 28602                           ;display.c: 219: last_digit = value % 10;
 28603  0110F0  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 28604  0110F4  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 28605  0110F8  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 28606  0110FC  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 28607  011100  0E0A               	movlw	10
 28608  011102  6F64               	movwf	___almod@divisor& (0+255),b
 28609  011104  0E00               	movlw	0
 28610  011106  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 28611  011108  0E00               	movlw	0
 28612  01110A  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 28613  01110C  0E00               	movlw	0
 28614  01110E  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 28615  011110  ECD5  F099         	call	___almod	;wreg free
 28616  011114  0100               	movlb	0	; () banked
 28617  011116  5160               	movf	?___almod& (0+255),w,b
 28618  011118  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 28619                           
 28620                           ; BSR set to: 0
 28621                           ;display.c: 220: if(last_digit<0)
 28622  01111A  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 28623                           
 28624                           ; BSR set to: 0
 28625                           ;display.c: 221: last_digit = -last_digit;
 28626  01111C  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 28627                           
 28628                           ; BSR set to: 0
 28629                           ;display.c: 222: text[length] = last_digit + 0x30;
 28630                           
 28631                           ; BSR set to: 0
 28632  01111E  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 28633  011120  0D01               	mullw	1
 28634  011122  50F3               	movf	prodl,w,c
 28635  011124  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 28636  011126  6ED9               	movwf	fsr2l,c
 28637  011128  50F4               	movf	prodh,w,c
 28638  01112A  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28639  01112C  6EDA               	movwf	fsr2h,c
 28640  01112E  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 28641  011130  0F30               	addlw	48
 28642  011132  6EDF               	movwf	indf2,c
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;display.c: 223: text[length+1] = 0x00;
 28646  011134  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 28647  011136  6FBE               	movwf	??__display_itoa_long& (0+255),b
 28648  011138  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 28649  01113A  0E01               	movlw	1
 28650  01113C  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 28651  01113E  0E00               	movlw	0
 28652  011140  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 28653  011142  51BE               	movf	??__display_itoa_long& (0+255),w,b
 28654  011144  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 28655  011146  6ED9               	movwf	fsr2l,c
 28656  011148  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 28657  01114A  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28658  01114C  6EDA               	movwf	fsr2h,c
 28659  01114E  0E00               	movlw	0
 28660  011150  6EDF               	movwf	indf2,c
 28661  011152  0012               	return	
 28662  011154                     __end_of__display_itoa_long:
 28663                           	opt stack 0
 28664                           tblptru	equ	0xFF8
 28665                           tblptrh	equ	0xFF7
 28666                           tblptrl	equ	0xFF6
 28667                           tablat	equ	0xFF5
 28668                           prodh	equ	0xFF4
 28669                           prodl	equ	0xFF3
 28670                           intcon	equ	0xFF2
 28671                           postinc0	equ	0xFEE
 28672                           wreg	equ	0xFE8
 28673                           indf1	equ	0xFE7
 28674                           postinc1	equ	0xFE6
 28675                           postdec1	equ	0xFE5
 28676                           plusw1	equ	0xFE3
 28677                           fsr1h	equ	0xFE2
 28678                           fsr1l	equ	0xFE1
 28679                           indf2	equ	0xFDF
 28680                           postinc2	equ	0xFDE
 28681                           postdec2	equ	0xFDD
 28682                           plusw2	equ	0xFDB
 28683                           fsr2h	equ	0xFDA
 28684                           fsr2l	equ	0xFD9
 28685                           status	equ	0xFD8
 28686                           
 28687 ;; *************** function __display_itoa *****************
 28688 ;; Defined at:
 28689 ;;		line 135 in file "display.c"
 28690 ;; Parameters:    Size  Location     Type
 28691 ;;  value           2   63[BANK0 ] int 
 28692 ;;  decimals        1   65[BANK0 ] unsigned char 
 28693 ;;  text            2   66[BANK0 ] PTR unsigned char 
 28694 ;;		 -> display_prepare@temp(10), display_content(80), 
 28695 ;; Auto vars:     Size  Location     Type
 28696 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 28697 ;;  pos             1   86[BANK0 ] unsigned char 
 28698 ;;  missing         1   85[BANK0 ] char 
 28699 ;;  len             1   84[BANK0 ] unsigned char 
 28700 ;; Return value:  Size  Location     Type
 28701 ;;                  1    wreg      void 
 28702 ;; Registers used:
 28703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28704 ;; Tracked objects:
 28705 ;;		On entry : 0/0
 28706 ;;		On exit  : 0/0
 28707 ;;		Unchanged: 0/0
 28708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28709 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28710 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28711 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28712 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28713 ;;Total ram usage:       24 bytes
 28714 ;; Hardware stack levels used:    1
 28715 ;; Hardware stack levels required when called:   13
 28716 ;; This function calls:
 28717 ;;		_itoa
 28718 ;;		_strlen
 28719 ;; This function is called by:
 28720 ;;		__display_itoa_long
 28721 ;;		_display_prepare
 28722 ;; This function uses a non-reentrant model
 28723 ;;
 28724                           
 28725                           	psect	text107
 28726  00E478                     __ptext107:
 28727                           	opt stack 0
 28728  00E478                     __display_itoa:
 28729                           	opt stack 15
 28730                           
 28731                           ;display.c: 137: uint8_t pos;;display.c: 138: uint8_t len;;display.c: 139: int8_t missin
      +                          g;;display.c: 140: char tmp[10];;display.c: 141: itoa(tmp, value, 10);
 28732                           
 28733                           ;incstack = 0
 28734  00E478  0EAA               	movlw	low __display_itoa@tmp
 28735  00E47A  0100               	movlb	0	; () banked
 28736  00E47C  6F70               	movwf	itoa@buf& (0+255),b
 28737  00E47E  0E00               	movlw	high __display_itoa@tmp
 28738  00E480  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28739  00E482  C09F  F072         	movff	__display_itoa@value,itoa@val
 28740  00E486  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 28741  00E48A  0E00               	movlw	0
 28742  00E48C  6F75               	movwf	(itoa@base+1)& (0+255),b
 28743  00E48E  0E0A               	movlw	10
 28744  00E490  6F74               	movwf	itoa@base& (0+255),b
 28745  00E492  EC4F  F0AB         	call	_itoa	;wreg free
 28746                           
 28747                           ;display.c: 142: len = strlen(tmp);
 28748  00E496  0EAA               	movlw	low __display_itoa@tmp
 28749  00E498  0100               	movlb	0	; () banked
 28750  00E49A  6F60               	movwf	strlen@s& (0+255),b
 28751  00E49C  0E00               	movlw	high __display_itoa@tmp
 28752  00E49E  6F61               	movwf	(strlen@s+1)& (0+255),b
 28753  00E4A0  ECF5  F0AB         	call	_strlen	;wreg free
 28754  00E4A4  0100               	movlb	0	; () banked
 28755  00E4A6  5160               	movf	?_strlen& (0+255),w,b
 28756  00E4A8  6FB4               	movwf	__display_itoa@len& (0+255),b
 28757                           
 28758                           ; BSR set to: 0
 28759                           ;display.c: 144: if(value<0)
 28760  00E4AA  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 28761  00E4AC  D054               	goto	l1348
 28762                           
 28763                           ; BSR set to: 0
 28764                           ;display.c: 145: {;display.c: 146: missing = decimals + 2 - len;
 28765  00E4AE  51B4               	movf	__display_itoa@len& (0+255),w,b
 28766  00E4B0  0800               	sublw	0
 28767  00E4B2  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 28768  00E4B4  0F02               	addlw	2
 28769  00E4B6  6FB5               	movwf	__display_itoa@missing& (0+255),b
 28770                           
 28771                           ;display.c: 147: if(missing>0)
 28772  00E4B8  51B5               	movf	__display_itoa@missing& (0+255),w,b
 28773  00E4BA  0A80               	xorlw	128
 28774  00E4BC  0F7F               	addlw	-129
 28775  00E4BE  A0D8               	btfss	status,0,c
 28776  00E4C0  D090               	goto	l1355
 28777                           
 28778                           ; BSR set to: 0
 28779                           ;display.c: 148: {;display.c: 149: for(pos=decimals;pos!=0xFF;--pos)
 28780  00E4C2  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 28781  00E4C6                     l16194:
 28782                           
 28783                           ; BSR set to: 0
 28784  00E4C6  29B6               	incf	__display_itoa@pos& (0+255),w,b
 28785  00E4C8  B4D8               	btfsc	status,2,c
 28786  00E4CA  D042               	goto	u15330
 28787                           
 28788                           ; BSR set to: 0
 28789                           ;display.c: 150: {;display.c: 151: if(pos>=missing)
 28790                           
 28791                           ; BSR set to: 0
 28792                           
 28793                           ; BSR set to: 0
 28794  00E4CC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28795  00E4CE  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 28796  00E4D0  D004               	goto	u15320
 28797  00E4D2  0AFF               	xorlw	255
 28798  00E4D4  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 28799  00E4D6  B0D8               	btfsc	status,0,c
 28800  00E4D8  D02A               	goto	l1352
 28801  00E4DA                     u15320:
 28802                           
 28803                           ; BSR set to: 0
 28804                           ;display.c: 152: {;display.c: 153: tmp[pos+1] = tmp[pos+1-missing];
 28805  00E4DA  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 28806  00E4DE  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 28807  00E4E0  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 28808  00E4E2  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 28809  00E4E4  1FA4               	comf	??__display_itoa& (0+255),f,b
 28810  00E4E6  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 28811  00E4E8  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 28812  00E4EA  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 28813  00E4EC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28814  00E4EE  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 28815  00E4F0  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 28816  00E4F2  51A4               	movf	??__display_itoa& (0+255),w,b
 28817  00E4F4  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 28818  00E4F6  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 28819  00E4F8  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28820  00E4FA  0E01               	movlw	1
 28821  00E4FC  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 28822  00E4FE  0E00               	movlw	0
 28823  00E500  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28824  00E502  0EAA               	movlw	low __display_itoa@tmp
 28825  00E504  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 28826  00E506  6ED9               	movwf	fsr2l,c
 28827  00E508  0E00               	movlw	high __display_itoa@tmp
 28828  00E50A  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28829  00E50C  6EDA               	movwf	fsr2h,c
 28830  00E50E  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28831  00E510  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 28832  00E512  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 28833  00E514  0E01               	movlw	1
 28834  00E516  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 28835  00E518  0E00               	movlw	0
 28836  00E51A  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 28837  00E51C  0EAA               	movlw	low __display_itoa@tmp
 28838  00E51E  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 28839  00E520  6EE1               	movwf	fsr1l,c
 28840  00E522  0E00               	movlw	high __display_itoa@tmp
 28841  00E524  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 28842  00E526  6EE2               	movwf	fsr1h,c
 28843  00E528  CFDF FFE7          	movff	indf2,indf1
 28844                           
 28845                           ;display.c: 154: }
 28846  00E52C  D00F               	goto	l1353
 28847  00E52E                     l1352:
 28848                           
 28849                           ; BSR set to: 0
 28850                           ;display.c: 155: else;display.c: 156: {;display.c: 157: tmp[pos+1] = '0';
 28851                           
 28852                           ; BSR set to: 0
 28853  00E52E  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28854  00E530  6FA4               	movwf	??__display_itoa& (0+255),b
 28855  00E532  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 28856  00E534  0E01               	movlw	1
 28857  00E536  27A4               	addwf	??__display_itoa& (0+255),f,b
 28858  00E538  0E00               	movlw	0
 28859  00E53A  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28860  00E53C  0EAA               	movlw	low __display_itoa@tmp
 28861  00E53E  25A4               	addwf	??__display_itoa& (0+255),w,b
 28862  00E540  6ED9               	movwf	fsr2l,c
 28863  00E542  0E00               	movlw	high __display_itoa@tmp
 28864  00E544  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 28865  00E546  6EDA               	movwf	fsr2h,c
 28866  00E548  0E30               	movlw	48
 28867  00E54A  6EDF               	movwf	indf2,c
 28868  00E54C                     l1353:
 28869                           
 28870                           ; BSR set to: 0
 28871                           
 28872                           ; BSR set to: 0
 28873  00E54C  07B6               	decf	__display_itoa@pos& (0+255),f,b
 28874  00E54E  D7BB               	goto	l16194
 28875  00E550                     u15330:
 28876                           
 28877                           ; BSR set to: 0
 28878                           ;display.c: 158: };display.c: 159: };display.c: 160: len = decimals + 2;
 28879                           
 28880                           ; BSR set to: 0
 28881  00E550  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 28882  00E552  0F02               	addlw	2
 28883  00E554  D045               	goto	L40
 28884  00E556                     l1348:
 28885                           
 28886                           ; BSR set to: 0
 28887                           ;display.c: 163: else;display.c: 164: {;display.c: 165: missing = decimals + 1 - len;
 28888                           
 28889                           ; BSR set to: 0
 28890  00E556  51B4               	movf	__display_itoa@len& (0+255),w,b
 28891  00E558  0800               	sublw	0
 28892  00E55A  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 28893  00E55C  6FA4               	movwf	??__display_itoa& (0+255),b
 28894  00E55E  29A4               	incf	??__display_itoa& (0+255),w,b
 28895  00E560  6FB5               	movwf	__display_itoa@missing& (0+255),b
 28896                           
 28897                           ;display.c: 166: if(missing>0)
 28898  00E562  51B5               	movf	__display_itoa@missing& (0+255),w,b
 28899  00E564  0A80               	xorlw	128
 28900  00E566  0F7F               	addlw	-129
 28901  00E568  A0D8               	btfss	status,0,c
 28902  00E56A  D03B               	goto	l1355
 28903                           
 28904                           ; BSR set to: 0
 28905                           ;display.c: 167: {;display.c: 168: for(pos=decimals;pos!=0xFF;--pos)
 28906  00E56C  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 28907  00E570                     l16214:
 28908                           
 28909                           ; BSR set to: 0
 28910  00E570  29B6               	incf	__display_itoa@pos& (0+255),w,b
 28911  00E572  B4D8               	btfsc	status,2,c
 28912  00E574  D034               	goto	u15370
 28913                           
 28914                           ; BSR set to: 0
 28915                           ;display.c: 169: {;display.c: 170: if(pos>=missing)
 28916                           
 28917                           ; BSR set to: 0
 28918                           
 28919                           ; BSR set to: 0
 28920  00E576  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28921  00E578  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 28922  00E57A  D004               	goto	u15360
 28923  00E57C  0AFF               	xorlw	255
 28924  00E57E  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 28925  00E580  B0D8               	btfsc	status,0,c
 28926  00E582  D021               	goto	l1358
 28927  00E584                     u15360:
 28928                           
 28929                           ; BSR set to: 0
 28930                           ;display.c: 171: {;display.c: 172: tmp[pos] = tmp[pos-missing];
 28931  00E584  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 28932  00E588  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 28933  00E58A  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 28934  00E58C  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 28935  00E58E  1FA4               	comf	??__display_itoa& (0+255),f,b
 28936  00E590  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 28937  00E592  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 28938  00E594  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 28939  00E596  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28940  00E598  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 28941  00E59A  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 28942  00E59C  51A4               	movf	??__display_itoa& (0+255),w,b
 28943  00E59E  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 28944  00E5A0  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 28945  00E5A2  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28946  00E5A4  0EAA               	movlw	low __display_itoa@tmp
 28947  00E5A6  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 28948  00E5A8  6ED9               	movwf	fsr2l,c
 28949  00E5AA  0E00               	movlw	high __display_itoa@tmp
 28950  00E5AC  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28951  00E5AE  6EDA               	movwf	fsr2h,c
 28952  00E5B0  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28953  00E5B2  0D01               	mullw	1
 28954  00E5B4  0EAA               	movlw	low __display_itoa@tmp
 28955  00E5B6  24F3               	addwf	prodl,w,c
 28956  00E5B8  6EE1               	movwf	fsr1l,c
 28957  00E5BA  0E00               	movlw	high __display_itoa@tmp
 28958  00E5BC  20F4               	addwfc	prodh,w,c
 28959  00E5BE  6EE2               	movwf	fsr1h,c
 28960  00E5C0  CFDF FFE7          	movff	indf2,indf1
 28961                           
 28962                           ;display.c: 173: }
 28963  00E5C4  D00A               	goto	l1359
 28964  00E5C6                     l1358:
 28965                           
 28966                           ; BSR set to: 0
 28967                           ;display.c: 174: else;display.c: 175: {;display.c: 176: tmp[pos] = '0';
 28968                           
 28969                           ; BSR set to: 0
 28970  00E5C6  51B6               	movf	__display_itoa@pos& (0+255),w,b
 28971  00E5C8  0D01               	mullw	1
 28972  00E5CA  0EAA               	movlw	low __display_itoa@tmp
 28973  00E5CC  24F3               	addwf	prodl,w,c
 28974  00E5CE  6ED9               	movwf	fsr2l,c
 28975  00E5D0  0E00               	movlw	high __display_itoa@tmp
 28976  00E5D2  20F4               	addwfc	prodh,w,c
 28977  00E5D4  6EDA               	movwf	fsr2h,c
 28978  00E5D6  0E30               	movlw	48
 28979  00E5D8  6EDF               	movwf	indf2,c
 28980  00E5DA                     l1359:
 28981                           
 28982                           ; BSR set to: 0
 28983                           
 28984                           ; BSR set to: 0
 28985  00E5DA  07B6               	decf	__display_itoa@pos& (0+255),f,b
 28986  00E5DC  D7C9               	goto	l16214
 28987  00E5DE                     u15370:
 28988                           
 28989                           ; BSR set to: 0
 28990                           ;display.c: 177: };display.c: 178: };display.c: 179: len = decimals + 1;
 28991                           
 28992                           ; BSR set to: 0
 28993  00E5DE  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 28994  00E5E0                     L40:
 28995  00E5E0  6FB4               	movwf	__display_itoa@len& (0+255),b
 28996  00E5E2                     l1355:
 28997                           
 28998                           ; BSR set to: 0
 28999                           ;display.c: 180: };display.c: 181: };display.c: 183: decimals = len - decimals - 1;
 29000                           
 29001                           ; BSR set to: 0
 29002  00E5E2  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29003  00E5E4  0800               	sublw	0
 29004  00E5E6  25B4               	addwf	__display_itoa@len& (0+255),w,b
 29005  00E5E8  6FA4               	movwf	??__display_itoa& (0+255),b
 29006  00E5EA  05A4               	decf	??__display_itoa& (0+255),w,b
 29007  00E5EC  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29008                           
 29009                           ; BSR set to: 0
 29010                           ;display.c: 185: for(pos=0;pos<len;++pos)
 29011  00E5EE  0E00               	movlw	0
 29012  00E5F0  6FB6               	movwf	__display_itoa@pos& (0+255),b
 29013  00E5F2  D023               	goto	l1360
 29014  00E5F4                     
 29015                           ; BSR set to: 0
 29016                           ;display.c: 186: {;display.c: 187: text[pos] = tmp[pos];
 29017                           
 29018                           ; BSR set to: 0
 29019  00E5F4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29020  00E5F6  0D01               	mullw	1
 29021  00E5F8  0EAA               	movlw	low __display_itoa@tmp
 29022  00E5FA  24F3               	addwf	prodl,w,c
 29023  00E5FC  6ED9               	movwf	fsr2l,c
 29024  00E5FE  0E00               	movlw	high __display_itoa@tmp
 29025  00E600  20F4               	addwfc	prodh,w,c
 29026  00E602  6EDA               	movwf	fsr2h,c
 29027  00E604  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29028  00E606  0D01               	mullw	1
 29029  00E608  50F3               	movf	prodl,w,c
 29030  00E60A  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29031  00E60C  6EE1               	movwf	fsr1l,c
 29032  00E60E  50F4               	movf	prodh,w,c
 29033  00E610  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29034  00E612  6EE2               	movwf	fsr1h,c
 29035  00E614  CFDF FFE7          	movff	indf2,indf1
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;display.c: 188: if(pos==decimals)
 29039  00E618  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29040  00E61A  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 29041  00E61C  A4D8               	btfss	status,2,c
 29042  00E61E  D00C               	goto	l1362
 29043                           
 29044                           ; BSR set to: 0
 29045                           ;display.c: 189: {;display.c: 191: ++pos;
 29046  00E620  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29047                           
 29048                           ; BSR set to: 0
 29049                           ;display.c: 192: text[pos] = '.';
 29050  00E622  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29051  00E624  0D01               	mullw	1
 29052  00E626  50F3               	movf	prodl,w,c
 29053  00E628  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29054  00E62A  6ED9               	movwf	fsr2l,c
 29055  00E62C  50F4               	movf	prodh,w,c
 29056  00E62E  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29057  00E630  6EDA               	movwf	fsr2h,c
 29058  00E632  0E2E               	movlw	46
 29059  00E634  6EDF               	movwf	indf2,c
 29060                           
 29061                           ;display.c: 193: break;
 29062  00E636  D01E               	goto	l1364
 29063  00E638                     l1362:
 29064                           
 29065                           ; BSR set to: 0
 29066                           
 29067                           ; BSR set to: 0
 29068  00E638  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29069  00E63A                     l1360:
 29070                           
 29071                           ; BSR set to: 0
 29072                           
 29073                           ; BSR set to: 0
 29074  00E63A  51B4               	movf	__display_itoa@len& (0+255),w,b
 29075  00E63C  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29076  00E63E  B0D8               	btfsc	status,0,c
 29077  00E640  D019               	goto	l1364
 29078  00E642  D7D8               	goto	l1361
 29079  00E644                     
 29080                           ; BSR set to: 0
 29081                           ;display.c: 197: {;display.c: 198: text[pos+1] = tmp[pos];
 29082                           
 29083                           ; BSR set to: 0
 29084  00E644  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29085  00E646  0D01               	mullw	1
 29086  00E648  0EAA               	movlw	low __display_itoa@tmp
 29087  00E64A  24F3               	addwf	prodl,w,c
 29088  00E64C  6ED9               	movwf	fsr2l,c
 29089  00E64E  0E00               	movlw	high __display_itoa@tmp
 29090  00E650  20F4               	addwfc	prodh,w,c
 29091  00E652  6EDA               	movwf	fsr2h,c
 29092  00E654  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29093  00E656  6FA4               	movwf	??__display_itoa& (0+255),b
 29094  00E658  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29095  00E65A  0E01               	movlw	1
 29096  00E65C  27A4               	addwf	??__display_itoa& (0+255),f,b
 29097  00E65E  0E00               	movlw	0
 29098  00E660  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29099  00E662  51A4               	movf	??__display_itoa& (0+255),w,b
 29100  00E664  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29101  00E666  6EE1               	movwf	fsr1l,c
 29102  00E668  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29103  00E66A  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29104  00E66C  6EE2               	movwf	fsr1h,c
 29105  00E66E  CFDF FFE7          	movff	indf2,indf1
 29106                           
 29107                           ; BSR set to: 0
 29108  00E672  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29109  00E674                     l1364:
 29110                           
 29111                           ; BSR set to: 0
 29112                           
 29113                           ; BSR set to: 0
 29114  00E674  51B4               	movf	__display_itoa@len& (0+255),w,b
 29115  00E676  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29116  00E678  A0D8               	btfss	status,0,c
 29117  00E67A  D7E4               	goto	l1365
 29118                           
 29119                           ; BSR set to: 0
 29120                           ;display.c: 199: };display.c: 200: text[pos+1] = 0;
 29121                           
 29122                           ; BSR set to: 0
 29123  00E67C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29124  00E67E  6FA4               	movwf	??__display_itoa& (0+255),b
 29125  00E680  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29126  00E682  0E01               	movlw	1
 29127  00E684  27A4               	addwf	??__display_itoa& (0+255),f,b
 29128  00E686  0E00               	movlw	0
 29129  00E688  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29130  00E68A  51A4               	movf	??__display_itoa& (0+255),w,b
 29131  00E68C  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29132  00E68E  6ED9               	movwf	fsr2l,c
 29133  00E690  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29134  00E692  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29135  00E694  6EDA               	movwf	fsr2h,c
 29136  00E696  0E00               	movlw	0
 29137  00E698  6EDF               	movwf	indf2,c
 29138                           
 29139                           ; BSR set to: 0
 29140  00E69A  0012               	return		;funcret
 29141  00E69C                     __end_of__display_itoa:
 29142                           	opt stack 0
 29143                           tblptru	equ	0xFF8
 29144                           tblptrh	equ	0xFF7
 29145                           tblptrl	equ	0xFF6
 29146                           tablat	equ	0xFF5
 29147                           prodh	equ	0xFF4
 29148                           prodl	equ	0xFF3
 29149                           intcon	equ	0xFF2
 29150                           postinc0	equ	0xFEE
 29151                           wreg	equ	0xFE8
 29152                           indf1	equ	0xFE7
 29153                           postinc1	equ	0xFE6
 29154                           postdec1	equ	0xFE5
 29155                           plusw1	equ	0xFE3
 29156                           fsr1h	equ	0xFE2
 29157                           fsr1l	equ	0xFE1
 29158                           indf2	equ	0xFDF
 29159                           postinc2	equ	0xFDE
 29160                           postdec2	equ	0xFDD
 29161                           plusw2	equ	0xFDB
 29162                           fsr2h	equ	0xFDA
 29163                           fsr2l	equ	0xFD9
 29164                           status	equ	0xFD8
 29165                           
 29166 ;; *************** function _strlen *****************
 29167 ;; Defined at:
 29168 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 29169 ;; Parameters:    Size  Location     Type
 29170 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 29171 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29172 ;; Auto vars:     Size  Location     Type
 29173 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 29174 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29175 ;; Return value:  Size  Location     Type
 29176 ;;                  2    0[BANK0 ] unsigned int 
 29177 ;; Registers used:
 29178 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29179 ;; Tracked objects:
 29180 ;;		On entry : 0/0
 29181 ;;		On exit  : 0/0
 29182 ;;		Unchanged: 0/0
 29183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29185 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29187 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29188 ;;Total ram usage:        6 bytes
 29189 ;; Hardware stack levels used:    1
 29190 ;; Hardware stack levels required when called:   10
 29191 ;; This function calls:
 29192 ;;		Nothing
 29193 ;; This function is called by:
 29194 ;;		__display_padded_itoa
 29195 ;;		__display_itoa
 29196 ;;		__display_itoa_long
 29197 ;;		_display_prepare
 29198 ;; This function uses a non-reentrant model
 29199 ;;
 29200                           
 29201                           	psect	text108
 29202  0157EA                     __ptext108:
 29203                           	opt stack 0
 29204  0157EA                     _strlen:
 29205                           	opt stack 19
 29206                           
 29207                           ; BSR set to: 0
 29208                           ;incstack = 0
 29209  0157EA  C060  F064         	movff	strlen@s,strlen@cp
 29210  0157EE  C061  F065         	movff	strlen@s+1,strlen@cp+1
 29211  0157F2  D003               	goto	l3844
 29212  0157F4  0100               	movlb	0	; () banked
 29213  0157F6  4B64               	infsnz	strlen@cp& (0+255),f,b
 29214  0157F8  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 29215  0157FA                     l3844:
 29216                           
 29217                           ; BSR set to: 0
 29218  0157FA  C064  FFD9         	movff	strlen@cp,fsr2l
 29219  0157FE  C065  FFDA         	movff	strlen@cp+1,fsr2h
 29220  015802  50DF               	movf	indf2,w,c
 29221  015804  A4D8               	btfss	status,2,c
 29222  015806  D7F6               	goto	l3845
 29223  015808  C060  F062         	movff	strlen@s,??_strlen
 29224  01580C  C061  F063         	movff	strlen@s+1,??_strlen+1
 29225  015810  0100               	movlb	0	; () banked
 29226  015812  1F62               	comf	??_strlen& (0+255),f,b
 29227  015814  1F63               	comf	(??_strlen+1)& (0+255),f,b
 29228  015816  4B62               	infsnz	??_strlen& (0+255),f,b
 29229  015818  2B63               	incf	(??_strlen+1)& (0+255),f,b
 29230  01581A  5164               	movf	strlen@cp& (0+255),w,b
 29231  01581C  2562               	addwf	??_strlen& (0+255),w,b
 29232  01581E  6F60               	movwf	?_strlen& (0+255),b
 29233  015820  5165               	movf	(strlen@cp+1)& (0+255),w,b
 29234  015822  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 29235  015824  6F61               	movwf	(?_strlen+1)& (0+255),b
 29236  015826  0012               	return	
 29237  015828                     __end_of_strlen:
 29238                           	opt stack 0
 29239                           tblptru	equ	0xFF8
 29240                           tblptrh	equ	0xFF7
 29241                           tblptrl	equ	0xFF6
 29242                           tablat	equ	0xFF5
 29243                           prodh	equ	0xFF4
 29244                           prodl	equ	0xFF3
 29245                           intcon	equ	0xFF2
 29246                           postinc0	equ	0xFEE
 29247                           wreg	equ	0xFE8
 29248                           indf1	equ	0xFE7
 29249                           postinc1	equ	0xFE6
 29250                           postdec1	equ	0xFE5
 29251                           plusw1	equ	0xFE3
 29252                           fsr1h	equ	0xFE2
 29253                           fsr1l	equ	0xFE1
 29254                           indf2	equ	0xFDF
 29255                           postinc2	equ	0xFDE
 29256                           postdec2	equ	0xFDD
 29257                           plusw2	equ	0xFDB
 29258                           fsr2h	equ	0xFDA
 29259                           fsr2l	equ	0xFD9
 29260                           status	equ	0xFD8
 29261                           
 29262 ;; *************** function _itoa *****************
 29263 ;; Defined at:
 29264 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29265 ;; Parameters:    Size  Location     Type
 29266 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 29267 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29268 ;;  val             2   18[BANK0 ] int 
 29269 ;;  base            2   20[BANK0 ] int 
 29270 ;; Auto vars:     Size  Location     Type
 29271 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 29272 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29273 ;; Return value:  Size  Location     Type
 29274 ;;                  2   16[BANK0 ] PTR unsigned char 
 29275 ;; Registers used:
 29276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29277 ;; Tracked objects:
 29278 ;;		On entry : 0/0
 29279 ;;		On exit  : 0/0
 29280 ;;		Unchanged: 0/0
 29281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29282 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29283 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29285 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29286 ;;Total ram usage:        8 bytes
 29287 ;; Hardware stack levels used:    1
 29288 ;; Hardware stack levels required when called:   12
 29289 ;; This function calls:
 29290 ;;		_utoa
 29291 ;; This function is called by:
 29292 ;;		__display_padded_itoa
 29293 ;;		__display_itoa
 29294 ;;		__display_itoa_u16
 29295 ;; This function uses a non-reentrant model
 29296 ;;
 29297                           
 29298                           	psect	text109
 29299  01569E                     __ptext109:
 29300                           	opt stack 0
 29301  01569E                     _itoa:
 29302                           	opt stack 14
 29303                           
 29304                           ; BSR set to: 0
 29305                           ;incstack = 0
 29306  01569E  C070  F076         	movff	itoa@buf,itoa@cp
 29307  0156A2  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 29308  0156A6  0100               	movlb	0	; () banked
 29309  0156A8  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 29310  0156AA  D00C               	goto	l3796
 29311                           
 29312                           ; BSR set to: 0
 29313  0156AC  C070  FFD9         	movff	itoa@buf,fsr2l
 29314  0156B0  C071  FFDA         	movff	itoa@buf+1,fsr2h
 29315  0156B4  0E2D               	movlw	45
 29316  0156B6  6EDF               	movwf	indf2,c
 29317                           
 29318                           ; BSR set to: 0
 29319  0156B8  4B70               	infsnz	itoa@buf& (0+255),f,b
 29320  0156BA  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 29321                           
 29322                           ; BSR set to: 0
 29323  0156BC  6D72               	negf	itoa@val& (0+255),b
 29324  0156BE  1F73               	comf	(itoa@val+1)& (0+255),f,b
 29325  0156C0  B0D8               	btfsc	status,0,c
 29326  0156C2  2B73               	incf	(itoa@val+1)& (0+255),f,b
 29327  0156C4                     l3796:
 29328                           
 29329                           ; BSR set to: 0
 29330                           
 29331                           ; BSR set to: 0
 29332  0156C4  C070  F067         	movff	itoa@buf,utoa@buf
 29333  0156C8  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 29334  0156CC  C072  F069         	movff	itoa@val,utoa@val
 29335  0156D0  C073  F06A         	movff	itoa@val+1,utoa@val+1
 29336  0156D4  C074  F06B         	movff	itoa@base,utoa@base
 29337  0156D8  C075  F06C         	movff	itoa@base+1,utoa@base+1
 29338  0156DC  EC2C  F09A         	call	_utoa	;wreg free
 29339  0156E0  0012               	return	
 29340  0156E2                     __end_of_itoa:
 29341                           	opt stack 0
 29342                           tblptru	equ	0xFF8
 29343                           tblptrh	equ	0xFF7
 29344                           tblptrl	equ	0xFF6
 29345                           tablat	equ	0xFF5
 29346                           prodh	equ	0xFF4
 29347                           prodl	equ	0xFF3
 29348                           intcon	equ	0xFF2
 29349                           postinc0	equ	0xFEE
 29350                           wreg	equ	0xFE8
 29351                           indf1	equ	0xFE7
 29352                           postinc1	equ	0xFE6
 29353                           postdec1	equ	0xFE5
 29354                           plusw1	equ	0xFE3
 29355                           fsr1h	equ	0xFE2
 29356                           fsr1l	equ	0xFE1
 29357                           indf2	equ	0xFDF
 29358                           postinc2	equ	0xFDE
 29359                           postdec2	equ	0xFDD
 29360                           plusw2	equ	0xFDB
 29361                           fsr2h	equ	0xFDA
 29362                           fsr2l	equ	0xFD9
 29363                           status	equ	0xFD8
 29364                           
 29365 ;; *************** function _utoa *****************
 29366 ;; Defined at:
 29367 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29368 ;; Parameters:    Size  Location     Type
 29369 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 29370 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29371 ;;  val             2    9[BANK0 ] unsigned int 
 29372 ;;  base            2   11[BANK0 ] int 
 29373 ;; Auto vars:     Size  Location     Type
 29374 ;;  v               2   13[BANK0 ] unsigned int 
 29375 ;;  c               1   15[BANK0 ] unsigned char 
 29376 ;; Return value:  Size  Location     Type
 29377 ;;                  2    7[BANK0 ] PTR unsigned char 
 29378 ;; Registers used:
 29379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29380 ;; Tracked objects:
 29381 ;;		On entry : 0/0
 29382 ;;		On exit  : 0/0
 29383 ;;		Unchanged: 0/0
 29384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29385 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29386 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29388 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29389 ;;Total ram usage:        9 bytes
 29390 ;; Hardware stack levels used:    1
 29391 ;; Hardware stack levels required when called:   11
 29392 ;; This function calls:
 29393 ;;		___lwdiv
 29394 ;;		___lwmod
 29395 ;; This function is called by:
 29396 ;;		_itoa
 29397 ;; This function uses a non-reentrant model
 29398 ;;
 29399                           
 29400                           	psect	text110
 29401  013458                     __ptext110:
 29402                           	opt stack 0
 29403  013458                     _utoa:
 29404                           	opt stack 14
 29405                           
 29406                           ;incstack = 0
 29407  013458  C069  F06D         	movff	utoa@val,utoa@v
 29408  01345C  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 29409  013460  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 29410  013464  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 29411  013468  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29412  01346C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29413  013470  ECBE  F0A8         	call	___lwdiv	;wreg free
 29414  013474  C060  F06D         	movff	?___lwdiv,utoa@v
 29415  013478  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 29416  01347C  0100               	movlb	0	; () banked
 29417  01347E  4B67               	infsnz	utoa@buf& (0+255),f,b
 29418  013480  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29419                           
 29420                           ; BSR set to: 0
 29421  013482  516D               	movf	utoa@v& (0+255),w,b
 29422  013484  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 29423  013486  A4D8               	btfss	status,2,c
 29424  013488  D7EB               	goto	l3800
 29425                           
 29426                           ; BSR set to: 0
 29427                           
 29428                           ; BSR set to: 0
 29429  01348A  C067  FFD9         	movff	utoa@buf,fsr2l
 29430  01348E  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29431  013492  0E00               	movlw	0
 29432  013494  6EDF               	movwf	indf2,c
 29433                           
 29434                           ; BSR set to: 0
 29435  013496  0767               	decf	utoa@buf& (0+255),f,b
 29436  013498  A0D8               	btfss	status,0,c
 29437  01349A  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29438  01349C                     
 29439                           ; BSR set to: 0
 29440                           
 29441                           ; BSR set to: 0
 29442  01349C  C069  F060         	movff	utoa@val,___lwmod@dividend
 29443  0134A0  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 29444  0134A4  C06B  F062         	movff	utoa@base,___lwmod@divisor
 29445  0134A8  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 29446  0134AC  EC71  F0AB         	call	___lwmod	;wreg free
 29447  0134B0  0100               	movlb	0	; () banked
 29448  0134B2  5160               	movf	?___lwmod& (0+255),w,b
 29449  0134B4  6F6F               	movwf	utoa@c& (0+255),b
 29450                           
 29451                           ; BSR set to: 0
 29452  0134B6  C069  F060         	movff	utoa@val,___lwdiv@dividend
 29453  0134BA  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 29454  0134BE  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29455  0134C2  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29456  0134C6  ECBE  F0A8         	call	___lwdiv	;wreg free
 29457  0134CA  C060  F069         	movff	?___lwdiv,utoa@val
 29458  0134CE  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 29459  0134D2  0E09               	movlw	9
 29460  0134D4  0100               	movlb	0	; () banked
 29461  0134D6  656F               	cpfsgt	utoa@c& (0+255),b
 29462  0134D8  D002               	goto	l3803
 29463                           
 29464                           ; BSR set to: 0
 29465  0134DA  0E07               	movlw	7
 29466  0134DC  276F               	addwf	utoa@c& (0+255),f,b
 29467  0134DE                     l3803:
 29468                           
 29469                           ; BSR set to: 0
 29470  0134DE  0E30               	movlw	48
 29471  0134E0  276F               	addwf	utoa@c& (0+255),f,b
 29472                           
 29473                           ; BSR set to: 0
 29474  0134E2  C067  FFD9         	movff	utoa@buf,fsr2l
 29475  0134E6  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29476  0134EA  C06F  FFDF         	movff	utoa@c,indf2
 29477                           
 29478                           ; BSR set to: 0
 29479  0134EE  0767               	decf	utoa@buf& (0+255),f,b
 29480  0134F0  A0D8               	btfss	status,0,c
 29481  0134F2  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29482                           
 29483                           ; BSR set to: 0
 29484  0134F4  5169               	movf	utoa@val& (0+255),w,b
 29485  0134F6  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 29486  0134F8  A4D8               	btfss	status,2,c
 29487  0134FA  D7D0               	goto	l3802
 29488                           
 29489                           ; BSR set to: 0
 29490                           ;	Return value of _utoa is never used
 29491                           
 29492                           ; BSR set to: 0
 29493  0134FC  4B67               	infsnz	utoa@buf& (0+255),f,b
 29494  0134FE  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29495  013500  0012               	return	
 29496  013502                     __end_of_utoa:
 29497                           	opt stack 0
 29498                           tblptru	equ	0xFF8
 29499                           tblptrh	equ	0xFF7
 29500                           tblptrl	equ	0xFF6
 29501                           tablat	equ	0xFF5
 29502                           prodh	equ	0xFF4
 29503                           prodl	equ	0xFF3
 29504                           intcon	equ	0xFF2
 29505                           postinc0	equ	0xFEE
 29506                           wreg	equ	0xFE8
 29507                           indf1	equ	0xFE7
 29508                           postinc1	equ	0xFE6
 29509                           postdec1	equ	0xFE5
 29510                           plusw1	equ	0xFE3
 29511                           fsr1h	equ	0xFE2
 29512                           fsr1l	equ	0xFE1
 29513                           indf2	equ	0xFDF
 29514                           postinc2	equ	0xFDE
 29515                           postdec2	equ	0xFDD
 29516                           plusw2	equ	0xFDB
 29517                           fsr2h	equ	0xFDA
 29518                           fsr2l	equ	0xFD9
 29519                           status	equ	0xFD8
 29520                           
 29521 ;; *************** function ___lwmod *****************
 29522 ;; Defined at:
 29523 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 29524 ;; Parameters:    Size  Location     Type
 29525 ;;  dividend        2    0[BANK0 ] unsigned int 
 29526 ;;  divisor         2    2[BANK0 ] unsigned int 
 29527 ;; Auto vars:     Size  Location     Type
 29528 ;;  counter         1    4[BANK0 ] unsigned char 
 29529 ;; Return value:  Size  Location     Type
 29530 ;;                  2    0[BANK0 ] unsigned int 
 29531 ;; Registers used:
 29532 ;;		wreg, status,2, status,0
 29533 ;; Tracked objects:
 29534 ;;		On entry : 0/0
 29535 ;;		On exit  : 0/0
 29536 ;;		Unchanged: 0/0
 29537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29541 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29542 ;;Total ram usage:        5 bytes
 29543 ;; Hardware stack levels used:    1
 29544 ;; Hardware stack levels required when called:   10
 29545 ;; This function calls:
 29546 ;;		Nothing
 29547 ;; This function is called by:
 29548 ;;		_utoa
 29549 ;; This function uses a non-reentrant model
 29550 ;;
 29551                           
 29552                           	psect	text111
 29553  0156E2                     __ptext111:
 29554                           	opt stack 0
 29555  0156E2                     ___lwmod:
 29556                           	opt stack 14
 29557                           
 29558                           ; BSR set to: 0
 29559                           ;incstack = 0
 29560  0156E2  0100               	movlb	0	; () banked
 29561  0156E4  5162               	movf	___lwmod@divisor& (0+255),w,b
 29562  0156E6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 29563  0156E8  B4D8               	btfsc	status,2,c
 29564  0156EA  D018               	goto	l3593
 29565                           
 29566                           ; BSR set to: 0
 29567  0156EC  0E01               	movlw	1
 29568  0156EE  6F64               	movwf	___lwmod@counter& (0+255),b
 29569  0156F0  D004               	goto	l3588
 29570  0156F2                     
 29571                           ; BSR set to: 0
 29572                           
 29573                           ; BSR set to: 0
 29574  0156F2  90D8               	bcf	status,0,c
 29575  0156F4  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 29576  0156F6  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 29577  0156F8  2B64               	incf	___lwmod@counter& (0+255),f,b
 29578  0156FA                     l3588:
 29579                           
 29580                           ; BSR set to: 0
 29581                           
 29582                           ; BSR set to: 0
 29583  0156FA  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 29584  0156FC  D7FA               	goto	l3589
 29585  0156FE                     u11050:
 29586                           
 29587                           ; BSR set to: 0
 29588                           
 29589                           ; BSR set to: 0
 29590                           
 29591                           ; BSR set to: 0
 29592  0156FE  5162               	movf	___lwmod@divisor& (0+255),w,b
 29593  015700  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 29594  015702  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29595  015704  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 29596  015706  A0D8               	btfss	status,0,c
 29597  015708  D004               	goto	l3592
 29598                           
 29599                           ; BSR set to: 0
 29600  01570A  5162               	movf	___lwmod@divisor& (0+255),w,b
 29601  01570C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 29602  01570E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29603  015710  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 29604  015712                     l3592:
 29605                           
 29606                           ; BSR set to: 0
 29607                           
 29608                           ; BSR set to: 0
 29609  015712  90D8               	bcf	status,0,c
 29610  015714  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 29611  015716  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 29612                           
 29613                           ; BSR set to: 0
 29614  015718  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 29615  01571A  D7F1               	goto	u11050
 29616  01571C                     l3593:
 29617                           
 29618                           ; BSR set to: 0
 29619                           
 29620                           ; BSR set to: 0
 29621  01571C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 29622  015720  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 29623                           
 29624                           ; BSR set to: 0
 29625  015724  0012               	return		;funcret
 29626  015726                     __end_of___lwmod:
 29627                           	opt stack 0
 29628                           tblptru	equ	0xFF8
 29629                           tblptrh	equ	0xFF7
 29630                           tblptrl	equ	0xFF6
 29631                           tablat	equ	0xFF5
 29632                           prodh	equ	0xFF4
 29633                           prodl	equ	0xFF3
 29634                           intcon	equ	0xFF2
 29635                           postinc0	equ	0xFEE
 29636                           wreg	equ	0xFE8
 29637                           indf1	equ	0xFE7
 29638                           postinc1	equ	0xFE6
 29639                           postdec1	equ	0xFE5
 29640                           plusw1	equ	0xFE3
 29641                           fsr1h	equ	0xFE2
 29642                           fsr1l	equ	0xFE1
 29643                           indf2	equ	0xFDF
 29644                           postinc2	equ	0xFDE
 29645                           postdec2	equ	0xFDD
 29646                           plusw2	equ	0xFDB
 29647                           fsr2h	equ	0xFDA
 29648                           fsr2l	equ	0xFD9
 29649                           status	equ	0xFD8
 29650                           
 29651 ;; *************** function ___lwdiv *****************
 29652 ;; Defined at:
 29653 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 29654 ;; Parameters:    Size  Location     Type
 29655 ;;  dividend        2    0[BANK0 ] unsigned int 
 29656 ;;  divisor         2    2[BANK0 ] unsigned int 
 29657 ;; Auto vars:     Size  Location     Type
 29658 ;;  quotient        2    4[BANK0 ] unsigned int 
 29659 ;;  counter         1    6[BANK0 ] unsigned char 
 29660 ;; Return value:  Size  Location     Type
 29661 ;;                  2    0[BANK0 ] unsigned int 
 29662 ;; Registers used:
 29663 ;;		wreg, status,2, status,0
 29664 ;; Tracked objects:
 29665 ;;		On entry : 0/0
 29666 ;;		On exit  : 0/0
 29667 ;;		Unchanged: 0/0
 29668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29669 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29670 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29672 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29673 ;;Total ram usage:        7 bytes
 29674 ;; Hardware stack levels used:    1
 29675 ;; Hardware stack levels required when called:   10
 29676 ;; This function calls:
 29677 ;;		Nothing
 29678 ;; This function is called by:
 29679 ;;		_utoa
 29680 ;; This function uses a non-reentrant model
 29681 ;;
 29682                           
 29683                           	psect	text112
 29684  01517C                     __ptext112:
 29685                           	opt stack 0
 29686  01517C                     ___lwdiv:
 29687                           	opt stack 14
 29688                           
 29689                           ; BSR set to: 0
 29690                           ;incstack = 0
 29691  01517C  0E00               	movlw	0
 29692  01517E  0100               	movlb	0	; () banked
 29693  015180  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29694  015182  0E00               	movlw	0
 29695  015184  6F64               	movwf	___lwdiv@quotient& (0+255),b
 29696                           
 29697                           ; BSR set to: 0
 29698  015186  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29699  015188  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29700  01518A  B4D8               	btfsc	status,2,c
 29701  01518C  D01C               	goto	l3583
 29702                           
 29703                           ; BSR set to: 0
 29704  01518E  0E01               	movlw	1
 29705  015190  6F66               	movwf	___lwdiv@counter& (0+255),b
 29706  015192  D004               	goto	l3578
 29707  015194                     
 29708                           ; BSR set to: 0
 29709                           
 29710                           ; BSR set to: 0
 29711  015194  90D8               	bcf	status,0,c
 29712  015196  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 29713  015198  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29714  01519A  2B66               	incf	___lwdiv@counter& (0+255),f,b
 29715  01519C                     l3578:
 29716                           
 29717                           ; BSR set to: 0
 29718                           
 29719                           ; BSR set to: 0
 29720  01519C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29721  01519E  D7FA               	goto	l3579
 29722  0151A0                     u11020:
 29723                           
 29724                           ; BSR set to: 0
 29725                           
 29726                           ; BSR set to: 0
 29727                           
 29728                           ; BSR set to: 0
 29729  0151A0  90D8               	bcf	status,0,c
 29730  0151A2  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29731  0151A4  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29732                           
 29733                           ; BSR set to: 0
 29734  0151A6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29735  0151A8  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29736  0151AA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29737  0151AC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29738  0151AE  A0D8               	btfss	status,0,c
 29739  0151B0  D005               	goto	l3582
 29740                           
 29741                           ; BSR set to: 0
 29742  0151B2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29743  0151B4  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29744  0151B6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29745  0151B8  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29746                           
 29747                           ; BSR set to: 0
 29748  0151BA  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29749  0151BC                     l3582:
 29750                           
 29751                           ; BSR set to: 0
 29752                           
 29753                           ; BSR set to: 0
 29754  0151BC  90D8               	bcf	status,0,c
 29755  0151BE  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29756  0151C0  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 29757                           
 29758                           ; BSR set to: 0
 29759  0151C2  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 29760  0151C4  D7ED               	goto	u11020
 29761  0151C6                     l3583:
 29762                           
 29763                           ; BSR set to: 0
 29764                           
 29765                           ; BSR set to: 0
 29766  0151C6  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 29767  0151CA  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29768                           
 29769                           ; BSR set to: 0
 29770  0151CE  0012               	return		;funcret
 29771  0151D0                     __end_of___lwdiv:
 29772                           	opt stack 0
 29773                           tblptru	equ	0xFF8
 29774                           tblptrh	equ	0xFF7
 29775                           tblptrl	equ	0xFF6
 29776                           tablat	equ	0xFF5
 29777                           prodh	equ	0xFF4
 29778                           prodl	equ	0xFF3
 29779                           intcon	equ	0xFF2
 29780                           postinc0	equ	0xFEE
 29781                           wreg	equ	0xFE8
 29782                           indf1	equ	0xFE7
 29783                           postinc1	equ	0xFE6
 29784                           postdec1	equ	0xFE5
 29785                           plusw1	equ	0xFE3
 29786                           fsr1h	equ	0xFE2
 29787                           fsr1l	equ	0xFE1
 29788                           indf2	equ	0xFDF
 29789                           postinc2	equ	0xFDE
 29790                           postdec2	equ	0xFDD
 29791                           plusw2	equ	0xFDB
 29792                           fsr2h	equ	0xFDA
 29793                           fsr2l	equ	0xFD9
 29794                           status	equ	0xFD8
 29795                           
 29796 ;; *************** function ___almod *****************
 29797 ;; Defined at:
 29798 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 29799 ;; Parameters:    Size  Location     Type
 29800 ;;  dividend        4    0[BANK0 ] long 
 29801 ;;  divisor         4    4[BANK0 ] long 
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;  sign            1    9[BANK0 ] unsigned char 
 29804 ;;  counter         1    8[BANK0 ] unsigned char 
 29805 ;; Return value:  Size  Location     Type
 29806 ;;                  4    0[BANK0 ] long 
 29807 ;; Registers used:
 29808 ;;		wreg, status,2, status,0
 29809 ;; Tracked objects:
 29810 ;;		On entry : 0/0
 29811 ;;		On exit  : 0/0
 29812 ;;		Unchanged: 0/0
 29813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29814 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29817 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29818 ;;Total ram usage:       10 bytes
 29819 ;; Hardware stack levels used:    1
 29820 ;; Hardware stack levels required when called:   10
 29821 ;; This function calls:
 29822 ;;		Nothing
 29823 ;; This function is called by:
 29824 ;;		__display_itoa_long
 29825 ;; This function uses a non-reentrant model
 29826 ;;
 29827                           
 29828                           	psect	text113
 29829  0133AA                     __ptext113:
 29830                           	opt stack 0
 29831  0133AA                     ___almod:
 29832                           	opt stack 18
 29833                           
 29834                           ; BSR set to: 0
 29835                           ;incstack = 0
 29836  0133AA  0E00               	movlw	0
 29837  0133AC  0100               	movlb	0	; () banked
 29838  0133AE  6F69               	movwf	___almod@sign& (0+255),b
 29839                           
 29840                           ; BSR set to: 0
 29841  0133B0  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 29842  0133B2  D00A               	goto	l3180
 29843                           
 29844                           ; BSR set to: 0
 29845  0133B4  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29846  0133B6  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29847  0133B8  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29848  0133BA  6D60               	negf	___almod@dividend& (0+255),b
 29849  0133BC  0E00               	movlw	0
 29850  0133BE  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29851  0133C0  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29852  0133C2  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29853                           
 29854                           ; BSR set to: 0
 29855  0133C4  0E01               	movlw	1
 29856  0133C6  6F69               	movwf	___almod@sign& (0+255),b
 29857  0133C8                     l3180:
 29858                           
 29859                           ; BSR set to: 0
 29860                           
 29861                           ; BSR set to: 0
 29862  0133C8  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29863  0133CA  D008               	goto	l3181
 29864                           
 29865                           ; BSR set to: 0
 29866  0133CC  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 29867  0133CE  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 29868  0133D0  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 29869  0133D2  6D64               	negf	___almod@divisor& (0+255),b
 29870  0133D4  0E00               	movlw	0
 29871  0133D6  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 29872  0133D8  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 29873  0133DA  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 29874  0133DC                     l3181:
 29875                           
 29876                           ; BSR set to: 0
 29877                           
 29878                           ; BSR set to: 0
 29879  0133DC  5164               	movf	___almod@divisor& (0+255),w,b
 29880  0133DE  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 29881  0133E0  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 29882  0133E2  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 29883  0133E4  B4D8               	btfsc	status,2,c
 29884  0133E6  D024               	goto	l3188
 29885                           
 29886                           ; BSR set to: 0
 29887  0133E8  0E01               	movlw	1
 29888  0133EA  6F68               	movwf	___almod@counter& (0+255),b
 29889  0133EC  D006               	goto	l3183
 29890  0133EE                     
 29891                           ; BSR set to: 0
 29892                           
 29893                           ; BSR set to: 0
 29894  0133EE  90D8               	bcf	status,0,c
 29895  0133F0  3764               	rlcf	___almod@divisor& (0+255),f,b
 29896  0133F2  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 29897  0133F4  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 29898  0133F6  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 29899  0133F8  2B68               	incf	___almod@counter& (0+255),f,b
 29900  0133FA                     l3183:
 29901                           
 29902                           ; BSR set to: 0
 29903                           
 29904                           ; BSR set to: 0
 29905  0133FA  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29906  0133FC  D7F8               	goto	l3184
 29907  0133FE                     u16240:
 29908                           
 29909                           ; BSR set to: 0
 29910                           
 29911                           ; BSR set to: 0
 29912                           
 29913                           ; BSR set to: 0
 29914  0133FE  5164               	movf	___almod@divisor& (0+255),w,b
 29915  013400  5D60               	subwf	___almod@dividend& (0+255),w,b
 29916  013402  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29917  013404  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 29918  013406  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29919  013408  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 29920  01340A  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29921  01340C  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 29922  01340E  A0D8               	btfss	status,0,c
 29923  013410  D008               	goto	l3187
 29924                           
 29925                           ; BSR set to: 0
 29926  013412  5164               	movf	___almod@divisor& (0+255),w,b
 29927  013414  5F60               	subwf	___almod@dividend& (0+255),f,b
 29928  013416  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29929  013418  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 29930  01341A  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29931  01341C  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 29932  01341E  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29933  013420  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 29934  013422                     l3187:
 29935                           
 29936                           ; BSR set to: 0
 29937                           
 29938                           ; BSR set to: 0
 29939  013422  90D8               	bcf	status,0,c
 29940  013424  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 29941  013426  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 29942  013428  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 29943  01342A  3364               	rrcf	___almod@divisor& (0+255),f,b
 29944                           
 29945                           ; BSR set to: 0
 29946  01342C  2F68               	decfsz	___almod@counter& (0+255),f,b
 29947  01342E  D7E7               	goto	u16240
 29948  013430                     l3188:
 29949                           
 29950                           ; BSR set to: 0
 29951                           
 29952                           ; BSR set to: 0
 29953                           
 29954                           ; BSR set to: 0
 29955  013430  5169               	movf	___almod@sign& (0+255),w,b
 29956  013432  B4D8               	btfsc	status,2,c
 29957  013434  D008               	goto	l3189
 29958                           
 29959                           ; BSR set to: 0
 29960  013436  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29961  013438  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29962  01343A  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29963  01343C  6D60               	negf	___almod@dividend& (0+255),b
 29964  01343E  0E00               	movlw	0
 29965  013440  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29966  013442  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29967  013444  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29968  013446                     l3189:
 29969                           
 29970                           ; BSR set to: 0
 29971                           
 29972                           ; BSR set to: 0
 29973  013446  C060  F060         	movff	___almod@dividend,?___almod
 29974  01344A  C061  F061         	movff	___almod@dividend+1,?___almod+1
 29975  01344E  C062  F062         	movff	___almod@dividend+2,?___almod+2
 29976  013452  C063  F063         	movff	___almod@dividend+3,?___almod+3
 29977  013456  0012               	return	
 29978  013458                     __end_of___almod:
 29979                           	opt stack 0
 29980                           tblptru	equ	0xFF8
 29981                           tblptrh	equ	0xFF7
 29982                           tblptrl	equ	0xFF6
 29983                           tablat	equ	0xFF5
 29984                           prodh	equ	0xFF4
 29985                           prodl	equ	0xFF3
 29986                           intcon	equ	0xFF2
 29987                           postinc0	equ	0xFEE
 29988                           wreg	equ	0xFE8
 29989                           indf1	equ	0xFE7
 29990                           postinc1	equ	0xFE6
 29991                           postdec1	equ	0xFE5
 29992                           plusw1	equ	0xFE3
 29993                           fsr1h	equ	0xFE2
 29994                           fsr1l	equ	0xFE1
 29995                           indf2	equ	0xFDF
 29996                           postinc2	equ	0xFDE
 29997                           postdec2	equ	0xFDD
 29998                           plusw2	equ	0xFDB
 29999                           fsr2h	equ	0xFDA
 30000                           fsr2l	equ	0xFD9
 30001                           status	equ	0xFD8
 30002                           
 30003 ;; *************** function ___aldiv *****************
 30004 ;; Defined at:
 30005 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 30006 ;; Parameters:    Size  Location     Type
 30007 ;;  dividend        4    0[BANK0 ] long 
 30008 ;;  divisor         4    4[BANK0 ] long 
 30009 ;; Auto vars:     Size  Location     Type
 30010 ;;  quotient        4   10[BANK0 ] long 
 30011 ;;  sign            1    9[BANK0 ] unsigned char 
 30012 ;;  counter         1    8[BANK0 ] unsigned char 
 30013 ;; Return value:  Size  Location     Type
 30014 ;;                  4    0[BANK0 ] long 
 30015 ;; Registers used:
 30016 ;;		wreg, status,2, status,0
 30017 ;; Tracked objects:
 30018 ;;		On entry : 0/0
 30019 ;;		On exit  : 0/0
 30020 ;;		Unchanged: 0/0
 30021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30022 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30023 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30025 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30026 ;;Total ram usage:       14 bytes
 30027 ;; Hardware stack levels used:    1
 30028 ;; Hardware stack levels required when called:   10
 30029 ;; This function calls:
 30030 ;;		Nothing
 30031 ;; This function is called by:
 30032 ;;		__display_itoa_long
 30033 ;; This function uses a non-reentrant model
 30034 ;;
 30035                           
 30036                           	psect	text114
 30037  012C40                     __ptext114:
 30038                           	opt stack 0
 30039  012C40                     ___aldiv:
 30040                           	opt stack 18
 30041                           
 30042                           ; BSR set to: 0
 30043                           ;incstack = 0
 30044  012C40  0E00               	movlw	0
 30045  012C42  0100               	movlb	0	; () banked
 30046  012C44  6F69               	movwf	___aldiv@sign& (0+255),b
 30047                           
 30048                           ; BSR set to: 0
 30049  012C46  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30050  012C48  D00A               	goto	l3167
 30051                           
 30052                           ; BSR set to: 0
 30053  012C4A  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 30054  012C4C  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 30055  012C4E  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 30056  012C50  6D64               	negf	___aldiv@divisor& (0+255),b
 30057  012C52  0E00               	movlw	0
 30058  012C54  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 30059  012C56  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 30060  012C58  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 30061                           
 30062                           ; BSR set to: 0
 30063  012C5A  0E01               	movlw	1
 30064  012C5C  6F69               	movwf	___aldiv@sign& (0+255),b
 30065  012C5E                     l3167:
 30066                           
 30067                           ; BSR set to: 0
 30068                           
 30069                           ; BSR set to: 0
 30070  012C5E  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 30071  012C60  D00A               	goto	l3168
 30072                           
 30073                           ; BSR set to: 0
 30074  012C62  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 30075  012C64  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 30076  012C66  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 30077  012C68  6D60               	negf	___aldiv@dividend& (0+255),b
 30078  012C6A  0E00               	movlw	0
 30079  012C6C  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 30080  012C6E  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 30081  012C70  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 30082                           
 30083                           ; BSR set to: 0
 30084  012C72  0E01               	movlw	1
 30085  012C74  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 30086  012C76                     l3168:
 30087                           
 30088                           ; BSR set to: 0
 30089                           
 30090                           ; BSR set to: 0
 30091  012C76  0E00               	movlw	0
 30092  012C78  6F6A               	movwf	___aldiv@quotient& (0+255),b
 30093  012C7A  0E00               	movlw	0
 30094  012C7C  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 30095  012C7E  0E00               	movlw	0
 30096  012C80  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 30097  012C82  0E00               	movlw	0
 30098  012C84  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 30099                           
 30100                           ; BSR set to: 0
 30101  012C86  5164               	movf	___aldiv@divisor& (0+255),w,b
 30102  012C88  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 30103  012C8A  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 30104  012C8C  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 30105  012C8E  B4D8               	btfsc	status,2,c
 30106  012C90  D02A               	goto	l3175
 30107                           
 30108                           ; BSR set to: 0
 30109  012C92  0E01               	movlw	1
 30110  012C94  6F68               	movwf	___aldiv@counter& (0+255),b
 30111  012C96  D006               	goto	l3170
 30112  012C98                     
 30113                           ; BSR set to: 0
 30114                           
 30115                           ; BSR set to: 0
 30116  012C98  90D8               	bcf	status,0,c
 30117  012C9A  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 30118  012C9C  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 30119  012C9E  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 30120  012CA0  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 30121  012CA2  2B68               	incf	___aldiv@counter& (0+255),f,b
 30122  012CA4                     l3170:
 30123                           
 30124                           ; BSR set to: 0
 30125                           
 30126                           ; BSR set to: 0
 30127  012CA4  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30128  012CA6  D7F8               	goto	l3171
 30129  012CA8                     u16180:
 30130                           
 30131                           ; BSR set to: 0
 30132                           
 30133                           ; BSR set to: 0
 30134                           
 30135                           ; BSR set to: 0
 30136  012CA8  90D8               	bcf	status,0,c
 30137  012CAA  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 30138  012CAC  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 30139  012CAE  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 30140  012CB0  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 30141                           
 30142                           ; BSR set to: 0
 30143  012CB2  5164               	movf	___aldiv@divisor& (0+255),w,b
 30144  012CB4  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 30145  012CB6  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30146  012CB8  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 30147  012CBA  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30148  012CBC  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 30149  012CBE  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30150  012CC0  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 30151  012CC2  A0D8               	btfss	status,0,c
 30152  012CC4  D009               	goto	l3174
 30153                           
 30154                           ; BSR set to: 0
 30155  012CC6  5164               	movf	___aldiv@divisor& (0+255),w,b
 30156  012CC8  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 30157  012CCA  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30158  012CCC  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 30159  012CCE  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30160  012CD0  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 30161  012CD2  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30162  012CD4  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 30163                           
 30164                           ; BSR set to: 0
 30165  012CD6  816A               	bsf	___aldiv@quotient& (0+255),0,b
 30166  012CD8                     l3174:
 30167                           
 30168                           ; BSR set to: 0
 30169                           
 30170                           ; BSR set to: 0
 30171  012CD8  90D8               	bcf	status,0,c
 30172  012CDA  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 30173  012CDC  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 30174  012CDE  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 30175  012CE0  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 30176                           
 30177                           ; BSR set to: 0
 30178  012CE2  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 30179  012CE4  D7E1               	goto	u16180
 30180  012CE6                     l3175:
 30181                           
 30182                           ; BSR set to: 0
 30183                           
 30184                           ; BSR set to: 0
 30185                           
 30186                           ; BSR set to: 0
 30187  012CE6  5169               	movf	___aldiv@sign& (0+255),w,b
 30188  012CE8  B4D8               	btfsc	status,2,c
 30189  012CEA  D008               	goto	l3176
 30190                           
 30191                           ; BSR set to: 0
 30192  012CEC  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 30193  012CEE  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 30194  012CF0  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 30195  012CF2  6D6A               	negf	___aldiv@quotient& (0+255),b
 30196  012CF4  0E00               	movlw	0
 30197  012CF6  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 30198  012CF8  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 30199  012CFA  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 30200  012CFC                     l3176:
 30201                           
 30202                           ; BSR set to: 0
 30203                           
 30204                           ; BSR set to: 0
 30205  012CFC  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 30206  012D00  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 30207  012D04  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 30208  012D08  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 30209  012D0C  0012               	return	
 30210  012D0E                     __end_of___aldiv:
 30211                           	opt stack 0
 30212                           tblptru	equ	0xFF8
 30213                           tblptrh	equ	0xFF7
 30214                           tblptrl	equ	0xFF6
 30215                           tablat	equ	0xFF5
 30216                           prodh	equ	0xFF4
 30217                           prodl	equ	0xFF3
 30218                           intcon	equ	0xFF2
 30219                           postinc0	equ	0xFEE
 30220                           wreg	equ	0xFE8
 30221                           indf1	equ	0xFE7
 30222                           postinc1	equ	0xFE6
 30223                           postdec1	equ	0xFE5
 30224                           plusw1	equ	0xFE3
 30225                           fsr1h	equ	0xFE2
 30226                           fsr1l	equ	0xFE1
 30227                           indf2	equ	0xFDF
 30228                           postinc2	equ	0xFDE
 30229                           postdec2	equ	0xFDD
 30230                           plusw2	equ	0xFDB
 30231                           fsr2h	equ	0xFDA
 30232                           fsr2l	equ	0xFD9
 30233                           status	equ	0xFD8
 30234                           
 30235 ;; *************** function __display_clear *****************
 30236 ;; Defined at:
 30237 ;;		line 86 in file "display.c"
 30238 ;; Parameters:    Size  Location     Type
 30239 ;;		None
 30240 ;; Auto vars:     Size  Location     Type
 30241 ;;  col             1    3[BANK0 ] unsigned char 
 30242 ;;  row             1    2[BANK0 ] unsigned char 
 30243 ;; Return value:  Size  Location     Type
 30244 ;;                  1    wreg      void 
 30245 ;; Registers used:
 30246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30247 ;; Tracked objects:
 30248 ;;		On entry : 0/0
 30249 ;;		On exit  : 0/0
 30250 ;;		Unchanged: 0/0
 30251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30254 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30256 ;;Total ram usage:        4 bytes
 30257 ;; Hardware stack levels used:    1
 30258 ;; Hardware stack levels required when called:   10
 30259 ;; This function calls:
 30260 ;;		Nothing
 30261 ;; This function is called by:
 30262 ;;		_display_prepare
 30263 ;; This function uses a non-reentrant model
 30264 ;;
 30265                           
 30266                           	psect	text115
 30267  01553A                     __ptext115:
 30268                           	opt stack 0
 30269  01553A                     __display_clear:
 30270                           	opt stack 19
 30271                           
 30272                           ;display.c: 88: uint8_t row;;display.c: 89: uint8_t col;;display.c: 90: for(row=0;row<4;
      +                          ++row)
 30273                           
 30274                           ; BSR set to: 0
 30275                           ;incstack = 0
 30276  01553A  0E00               	movlw	0
 30277  01553C  0100               	movlb	0	; () banked
 30278  01553E  6F62               	movwf	__display_clear@row& (0+255),b
 30279  015540                     l17620:
 30280                           
 30281                           ; BSR set to: 0
 30282  015540  0E03               	movlw	3
 30283  015542  6562               	cpfsgt	__display_clear@row& (0+255),b
 30284  015544  D001               	goto	l1327
 30285  015546  0012               	return	
 30286  015548                     l1327:
 30287                           
 30288                           ; BSR set to: 0
 30289                           ;display.c: 91: {;display.c: 92: for(col=0;col<20;++col)
 30290                           
 30291                           ; BSR set to: 0
 30292  015548  0E00               	movlw	0
 30293  01554A  6F63               	movwf	__display_clear@col& (0+255),b
 30294  01554C                     l17626:
 30295                           
 30296                           ; BSR set to: 0
 30297  01554C  0E13               	movlw	19
 30298  01554E  6563               	cpfsgt	__display_clear@col& (0+255),b
 30299  015550  D001               	goto	l1329
 30300  015552  D016               	goto	u17110
 30301  015554                     l1329:
 30302                           
 30303                           ; BSR set to: 0
 30304                           ;display.c: 93: {;display.c: 94: display_content[row][col] = ' ';
 30305                           
 30306                           ; BSR set to: 0
 30307  015554  5162               	movf	__display_clear@row& (0+255),w,b
 30308  015556  0D14               	mullw	20
 30309  015558  0E48               	movlw	low _display_content
 30310  01555A  6F60               	movwf	??__display_clear& (0+255),b
 30311  01555C  0E02               	movlw	high _display_content
 30312  01555E  6F61               	movwf	(??__display_clear+1)& (0+255),b
 30313  015560  50F3               	movf	prodl,w,c
 30314  015562  2760               	addwf	??__display_clear& (0+255),f,b
 30315  015564  50F4               	movf	prodh,w,c
 30316  015566  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 30317  015568  5163               	movf	__display_clear@col& (0+255),w,b
 30318  01556A  0D01               	mullw	1
 30319  01556C  50F3               	movf	prodl,w,c
 30320  01556E  2560               	addwf	??__display_clear& (0+255),w,b
 30321  015570  6ED9               	movwf	fsr2l,c
 30322  015572  50F4               	movf	prodh,w,c
 30323  015574  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 30324  015576  6EDA               	movwf	fsr2h,c
 30325  015578  0E20               	movlw	32
 30326  01557A  6EDF               	movwf	indf2,c
 30327                           
 30328                           ; BSR set to: 0
 30329  01557C  2B63               	incf	__display_clear@col& (0+255),f,b
 30330  01557E  D7E6               	goto	l17626
 30331  015580                     u17110:
 30332                           
 30333                           ; BSR set to: 0
 30334                           
 30335                           ; BSR set to: 0
 30336  015580  2B62               	incf	__display_clear@row& (0+255),f,b
 30337  015582  D7DE               	goto	l17620
 30338  015584                     __end_of__display_clear:
 30339                           	opt stack 0
 30340                           tblptru	equ	0xFF8
 30341                           tblptrh	equ	0xFF7
 30342                           tblptrl	equ	0xFF6
 30343                           tablat	equ	0xFF5
 30344                           prodh	equ	0xFF4
 30345                           prodl	equ	0xFF3
 30346                           intcon	equ	0xFF2
 30347                           postinc0	equ	0xFEE
 30348                           wreg	equ	0xFE8
 30349                           indf1	equ	0xFE7
 30350                           postinc1	equ	0xFE6
 30351                           postdec1	equ	0xFE5
 30352                           plusw1	equ	0xFE3
 30353                           fsr1h	equ	0xFE2
 30354                           fsr1l	equ	0xFE1
 30355                           indf2	equ	0xFDF
 30356                           postinc2	equ	0xFDE
 30357                           postdec2	equ	0xFDD
 30358                           plusw2	equ	0xFDB
 30359                           fsr2h	equ	0xFDA
 30360                           fsr2l	equ	0xFD9
 30361                           status	equ	0xFD8
 30362                           
 30363 ;; *************** function _adc_read_temperature *****************
 30364 ;; Defined at:
 30365 ;;		line 44 in file "adc.c"
 30366 ;; Parameters:    Size  Location     Type
 30367 ;;		None
 30368 ;; Auto vars:     Size  Location     Type
 30369 ;;  temperature     4   53[BANK0 ] float 
 30370 ;;  adc_result      2   51[BANK0 ] unsigned int 
 30371 ;; Return value:  Size  Location     Type
 30372 ;;                  1    wreg      void 
 30373 ;; Registers used:
 30374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30375 ;; Tracked objects:
 30376 ;;		On entry : 0/0
 30377 ;;		On exit  : 0/0
 30378 ;;		Unchanged: 0/0
 30379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30381 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30383 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30384 ;;Total ram usage:        8 bytes
 30385 ;; Hardware stack levels used:    1
 30386 ;; Hardware stack levels required when called:   11
 30387 ;; This function calls:
 30388 ;;		___fladd
 30389 ;;		___flmul
 30390 ;;		___flneg
 30391 ;;		___fltol
 30392 ;;		___xxtofl
 30393 ;; This function is called by:
 30394 ;;		_main
 30395 ;; This function uses a non-reentrant model
 30396 ;;
 30397                           
 30398                           	psect	text116
 30399  00EAAA                     __ptext116:
 30400                           	opt stack 0
 30401  00EAAA                     _adc_read_temperature:
 30402                           	opt stack 19
 30403                           
 30404                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 30405                           
 30406                           ; BSR set to: 0
 30407                           ;incstack = 0
 30408  00EAAA  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 30409  00EAAE  0100               	movlb	0	; () banked
 30410  00EAB0  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 30411                           
 30412                           ; BSR set to: 0
 30413                           ;adc.c: 51: adc_result <<= 8;
 30414  00EAB2  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30415  00EAB4  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 30416  00EAB6  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 30417                           
 30418                           ; BSR set to: 0
 30419                           ;adc.c: 52: adc_result |= ADRESL;
 30420  00EAB8  50C3               	movf	4035,w,c	;volatile
 30421  00EABA  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 30422                           
 30423                           ; BSR set to: 0
 30424                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 30425  00EABC  0102               	movlb	2	; () banked
 30426  00EABE  5131               	movf	_params& (0+255),w,b
 30427  00EAC0  0D02               	mullw	2
 30428  00EAC2  0E32               	movlw	low (_params+1)
 30429  00EAC4  24F3               	addwf	prodl,w,c
 30430  00EAC6  6ED9               	movwf	fsr2l,c
 30431  00EAC8  0E02               	movlw	high (_params+1)
 30432  00EACA  20F4               	addwfc	prodh,w,c
 30433  00EACC  6EDA               	movwf	fsr2h,c
 30434  00EACE  0100               	movlb	0	; () banked
 30435  00EAD0  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30436  00EAD2  26DE               	addwf	postinc2,f,c
 30437  00EAD4  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 30438  00EAD6  22DD               	addwfc	postdec2,f,c
 30439                           
 30440                           ; BSR set to: 0
 30441                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 30442  00EAD8  0102               	movlb	2	; () banked
 30443  00EADA  5131               	movf	_params& (0+255),w,b
 30444  00EADC  0D01               	mullw	1
 30445  00EADE  0E36               	movlw	low (_params+5)
 30446  00EAE0  24F3               	addwf	prodl,w,c
 30447  00EAE2  6ED9               	movwf	fsr2l,c
 30448  00EAE4  0E02               	movlw	high (_params+5)
 30449  00EAE6  20F4               	addwfc	prodh,w,c
 30450  00EAE8  6EDA               	movwf	fsr2h,c
 30451  00EAEA  2ADF               	incf	indf2,f,c
 30452                           
 30453                           ; BSR set to: 2
 30454                           ;adc.c: 59: ADCON0bits.GO = 1;
 30455  00EAEC  82C2               	bsf	4034,1,c	;volatile
 30456                           
 30457                           ; BSR set to: 2
 30458                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 30459  00EAEE  5131               	movf	_params& (0+255),w,b
 30460  00EAF0  0D01               	mullw	1
 30461  00EAF2  0E36               	movlw	low (_params+5)
 30462  00EAF4  24F3               	addwf	prodl,w,c
 30463  00EAF6  6ED9               	movwf	fsr2l,c
 30464  00EAF8  0E02               	movlw	high (_params+5)
 30465  00EAFA  20F4               	addwfc	prodh,w,c
 30466  00EAFC  6EDA               	movwf	fsr2h,c
 30467  00EAFE  0E08               	movlw	8
 30468  00EB00  18DE               	xorwf	postinc2,w,c
 30469  00EB02  A4D8               	btfss	status,2,c
 30470  00EB04  D0AF               	goto	l2956
 30471                           
 30472                           ; BSR set to: 2
 30473                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 30474  00EB06  5131               	movf	_params& (0+255),w,b
 30475  00EB08  0D02               	mullw	2
 30476  00EB0A  0E32               	movlw	low (_params+1)
 30477  00EB0C  24F3               	addwf	prodl,w,c
 30478  00EB0E  6ED9               	movwf	fsr2l,c
 30479  00EB10  0E02               	movlw	high (_params+1)
 30480  00EB12  20F4               	addwfc	prodh,w,c
 30481  00EB14  6EDA               	movwf	fsr2h,c
 30482  00EB16  CFDE F091          	movff	postinc2,??_adc_read_temperature
 30483  00EB1A  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 30484  00EB1E  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 30485  00EB22  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 30486  00EB26  0100               	movlb	0	; () banked
 30487  00EB28  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 30488  00EB2A  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 30489  00EB2C  0E00               	movlw	0
 30490  00EB2E  EC42  F082         	call	___xxtofl
 30491  00EB32  C06A  F078         	movff	?___xxtofl,___flneg@f1
 30492  00EB36  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 30493  00EB3A  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 30494  00EB3E  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 30495  00EB42  EC92  F0AD         	call	___flneg	;wreg free
 30496  00EB46  C078  F07C         	movff	?___flneg,___fladd@b
 30497  00EB4A  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 30498  00EB4E  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 30499  00EB52  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 30500  00EB56  0E00               	movlw	0
 30501  00EB58  0100               	movlb	0	; () banked
 30502  00EB5A  6F80               	movwf	___fladd@a& (0+255),b
 30503  00EB5C  0E90               	movlw	144
 30504  00EB5E  6F81               	movwf	(___fladd@a+1)& (0+255),b
 30505  00EB60  0EA4               	movlw	164
 30506  00EB62  6F82               	movwf	(___fladd@a+2)& (0+255),b
 30507  00EB64  0E46               	movlw	70
 30508  00EB66  6F83               	movwf	(___fladd@a+3)& (0+255),b
 30509  00EB68  EC84  F066         	call	___fladd	;wreg free
 30510  00EB6C  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 30511  00EB70  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 30512  00EB74  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 30513  00EB78  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 30514                           
 30515                           ;adc.c: 68: temperature *= 0.7405;
 30516  00EB7C  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 30517  00EB80  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 30518  00EB84  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 30519  00EB88  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 30520  00EB8C  0E68               	movlw	104
 30521  00EB8E  0100               	movlb	0	; () banked
 30522  00EB90  6F7C               	movwf	___flmul@a& (0+255),b
 30523  00EB92  0E91               	movlw	145
 30524  00EB94  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 30525  00EB96  0E3D               	movlw	61
 30526  00EB98  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 30527  00EB9A  0E3F               	movlw	63
 30528  00EB9C  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 30529  00EB9E  ECDB  F064         	call	___flmul	;wreg free
 30530  00EBA2  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 30531  00EBA6  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 30532  00EBAA  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 30533  00EBAE  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 30534                           
 30535                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 30536  00EBB2  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 30537  00EBB6  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 30538  00EBBA  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 30539  00EBBE  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 30540  00EBC2  EC9F  F093         	call	___fltol	;wreg free
 30541  00EBC6  0102               	movlb	2	; () banked
 30542  00EBC8  5131               	movf	_params& (0+255),w,b
 30543  00EBCA  0D02               	mullw	2
 30544  00EBCC  0E8D               	movlw	low (_os+40)
 30545  00EBCE  24F3               	addwf	prodl,w,c
 30546  00EBD0  6ED9               	movwf	fsr2l,c
 30547  00EBD2  0E01               	movlw	high (_os+40)
 30548  00EBD4  20F4               	addwfc	prodh,w,c
 30549  00EBD6  6EDA               	movwf	fsr2h,c
 30550  00EBD8  0100               	movlb	0	; () banked
 30551  00EBDA  C060  FFDE         	movff	?___fltol,postinc2
 30552  00EBDE  C061  FFDD         	movff	?___fltol+1,postdec2
 30553                           
 30554                           ; BSR set to: 0
 30555                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 30556  00EBE2  0102               	movlb	2	; () banked
 30557  00EBE4  5131               	movf	_params& (0+255),w,b
 30558  00EBE6  0D02               	mullw	2
 30559  00EBE8  0E32               	movlw	low (_params+1)
 30560  00EBEA  24F3               	addwf	prodl,w,c
 30561  00EBEC  6ED9               	movwf	fsr2l,c
 30562  00EBEE  0E02               	movlw	high (_params+1)
 30563  00EBF0  20F4               	addwfc	prodh,w,c
 30564  00EBF2  6EDA               	movwf	fsr2h,c
 30565  00EBF4  0E00               	movlw	0
 30566  00EBF6  6EDE               	movwf	postinc2,c
 30567  00EBF8  0E00               	movlw	0
 30568  00EBFA  6EDD               	movwf	postdec2,c
 30569                           
 30570                           ; BSR set to: 2
 30571                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 30572  00EBFC  5131               	movf	_params& (0+255),w,b
 30573  00EBFE  0D01               	mullw	1
 30574  00EC00  0E36               	movlw	low (_params+5)
 30575  00EC02  24F3               	addwf	prodl,w,c
 30576  00EC04  6ED9               	movwf	fsr2l,c
 30577  00EC06  0E02               	movlw	high (_params+5)
 30578  00EC08  20F4               	addwfc	prodh,w,c
 30579  00EC0A  6EDA               	movwf	fsr2h,c
 30580  00EC0C  0E00               	movlw	0
 30581  00EC0E  6EDF               	movwf	indf2,c
 30582                           
 30583                           ; BSR set to: 2
 30584                           ;adc.c: 78: if(os.fan_on)
 30585  00EC10  0101               	movlb	1	; () banked
 30586  00EC12  5194               	movf	(_os+47)& (0+255),w,b	;volatile
 30587  00EC14  B4D8               	btfsc	status,2,c
 30588  00EC16  D013               	goto	l2953
 30589                           
 30590                           ; BSR set to: 1
 30591                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 30592  00EC18  BF8E               	btfsc	(_os+41)& (0+255),7,b	;volatile
 30593  00EC1A  D006               	goto	u18840
 30594  00EC1C  0E60               	movlw	96
 30595  00EC1E  5D8D               	subwf	(_os+40)& (0+255),w,b	;volatile
 30596  00EC20  0E09               	movlw	9
 30597  00EC22  598E               	subwfb	(_os+41)& (0+255),w,b	;volatile
 30598  00EC24  B0D8               	btfsc	status,0,c
 30599  00EC26  D01E               	goto	l2956
 30600  00EC28                     u18840:
 30601                           
 30602                           ; BSR set to: 1
 30603  00EC28  BF90               	btfsc	(_os+43)& (0+255),7,b	;volatile
 30604  00EC2A  D006               	goto	u18850
 30605  00EC2C  0E60               	movlw	96
 30606  00EC2E  5D8F               	subwf	(_os+42)& (0+255),w,b	;volatile
 30607  00EC30  0E09               	movlw	9
 30608  00EC32  5990               	subwfb	(_os+43)& (0+255),w,b	;volatile
 30609  00EC34  B0D8               	btfsc	status,0,c
 30610  00EC36  D016               	goto	l2956
 30611  00EC38                     u18850:
 30612                           
 30613                           ; BSR set to: 1
 30614                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 30615  00EC38  9C8B               	bcf	3979,6,c	;volatile
 30616                           
 30617                           ; BSR set to: 1
 30618                           ;adc.c: 83: os.fan_on = 0;
 30619  00EC3A  0E00               	movlw	0
 30620  00EC3C  D012               	goto	L41
 30621  00EC3E                     l2953:
 30622                           
 30623                           ; BSR set to: 1
 30624                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 30625                           
 30626                           ; BSR set to: 1
 30627  00EC3E  BF8E               	btfsc	(_os+41)& (0+255),7,b	;volatile
 30628  00EC40  D006               	goto	u18860
 30629  00EC42  0EC5               	movlw	197
 30630  00EC44  5D8D               	subwf	(_os+40)& (0+255),w,b	;volatile
 30631  00EC46  0E09               	movlw	9
 30632  00EC48  598E               	subwfb	(_os+41)& (0+255),w,b	;volatile
 30633  00EC4A  B0D8               	btfsc	status,0,c
 30634  00EC4C  D008               	goto	u18870
 30635  00EC4E                     u18860:
 30636                           
 30637                           ; BSR set to: 1
 30638  00EC4E  BF90               	btfsc	(_os+43)& (0+255),7,b	;volatile
 30639  00EC50  D009               	goto	l2956
 30640  00EC52  0EC5               	movlw	197
 30641  00EC54  5D8F               	subwf	(_os+42)& (0+255),w,b	;volatile
 30642  00EC56  0E09               	movlw	9
 30643  00EC58  5990               	subwfb	(_os+43)& (0+255),w,b	;volatile
 30644  00EC5A  A0D8               	btfss	status,0,c
 30645  00EC5C  D003               	goto	l2956
 30646  00EC5E                     u18870:
 30647                           
 30648                           ; BSR set to: 1
 30649                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 30650  00EC5E  8C8B               	bsf	3979,6,c	;volatile
 30651                           
 30652                           ; BSR set to: 1
 30653                           ;adc.c: 91: os.fan_on = 1;
 30654  00EC60  0E01               	movlw	1
 30655  00EC62                     L41:
 30656  00EC62  6F94               	movwf	(_os+47)& (0+255),b	;volatile
 30657  00EC64                     l2956:
 30658                           
 30659                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 30660                           
 30661                           ; BSR set to: 1
 30662                           
 30663                           ; BSR set to: 1
 30664  00EC64  0102               	movlb	2	; () banked
 30665  00EC66  5131               	movf	_params& (0+255),w,b
 30666  00EC68  A4D8               	btfss	status,2,c
 30667  00EC6A  D007               	goto	l2959
 30668                           
 30669                           ; BSR set to: 2
 30670                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 30671  00EC6C  50C2               	movf	4034,w,c	;volatile
 30672  00EC6E  0BC3               	andlw	-61
 30673  00EC70  092C               	iorlw	44
 30674  00EC72  6EC2               	movwf	4034,c	;volatile
 30675                           
 30676                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 30677  00EC74  0E01               	movlw	1
 30678  00EC76  6F31               	movwf	_params& (0+255),b
 30679                           
 30680                           ;adc.c: 101: }
 30681  00EC78  0012               	return	
 30682  00EC7A                     l2959:
 30683                           
 30684                           ; BSR set to: 2
 30685                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 30686                           
 30687                           ; BSR set to: 2
 30688  00EC7A  50C2               	movf	4034,w,c	;volatile
 30689  00EC7C  0BC3               	andlw	-61
 30690  00EC7E  0924               	iorlw	36
 30691  00EC80  6EC2               	movwf	4034,c	;volatile
 30692                           
 30693                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 30694  00EC82  0E00               	movlw	0
 30695  00EC84  6F31               	movwf	_params& (0+255),b
 30696  00EC86  0012               	return	
 30697  00EC88                     __end_of_adc_read_temperature:
 30698                           	opt stack 0
 30699                           tblptru	equ	0xFF8
 30700                           tblptrh	equ	0xFF7
 30701                           tblptrl	equ	0xFF6
 30702                           tablat	equ	0xFF5
 30703                           prodh	equ	0xFF4
 30704                           prodl	equ	0xFF3
 30705                           intcon	equ	0xFF2
 30706                           postinc0	equ	0xFEE
 30707                           wreg	equ	0xFE8
 30708                           indf1	equ	0xFE7
 30709                           postinc1	equ	0xFE6
 30710                           postdec1	equ	0xFE5
 30711                           plusw1	equ	0xFE3
 30712                           fsr1h	equ	0xFE2
 30713                           fsr1l	equ	0xFE1
 30714                           indf2	equ	0xFDF
 30715                           postinc2	equ	0xFDE
 30716                           postdec2	equ	0xFDD
 30717                           plusw2	equ	0xFDB
 30718                           fsr2h	equ	0xFDA
 30719                           fsr2l	equ	0xFD9
 30720                           status	equ	0xFD8
 30721                           
 30722 ;; *************** function ___xxtofl *****************
 30723 ;; Defined at:
 30724 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 30725 ;; Parameters:    Size  Location     Type
 30726 ;;  sign            1    wreg     unsigned char 
 30727 ;;  val             4   10[BANK0 ] long 
 30728 ;; Auto vars:     Size  Location     Type
 30729 ;;  sign            1   18[BANK0 ] unsigned char 
 30730 ;;  arg             4   20[BANK0 ] unsigned long 
 30731 ;;  exp             1   19[BANK0 ] unsigned char 
 30732 ;; Return value:  Size  Location     Type
 30733 ;;                  4   10[BANK0 ] unsigned char 
 30734 ;; Registers used:
 30735 ;;		wreg, status,2, status,0
 30736 ;; Tracked objects:
 30737 ;;		On entry : 0/0
 30738 ;;		On exit  : 0/0
 30739 ;;		Unchanged: 0/0
 30740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30742 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30743 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30744 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30745 ;;Total ram usage:       14 bytes
 30746 ;; Hardware stack levels used:    1
 30747 ;; Hardware stack levels required when called:   10
 30748 ;; This function calls:
 30749 ;;		Nothing
 30750 ;; This function is called by:
 30751 ;;		__motor_steps_from_degrees_int
 30752 ;;		_motor_calculate_position_in_degrees
 30753 ;;		__motor_get_speed_in_degrees
 30754 ;;		__step_position_from_divide_position
 30755 ;;		_motor_divide_jump_to_nearest
 30756 ;;		_motor_arc_move
 30757 ;;		_adc_read_temperature
 30758 ;;		__steps_from_degrees
 30759 ;;		__motor_steps_from_degrees_float
 30760 ;;		_motor_steps_from_degrees
 30761 ;; This function uses a non-reentrant model
 30762 ;;
 30763                           
 30764                           	psect	text117
 30765  010484                     __ptext117:
 30766                           	opt stack 0
 30767  010484                     ___xxtofl:
 30768                           	opt stack 18
 30769                           
 30770                           ; BSR set to: 2
 30771                           ;incstack = 0
 30772                           ;___xxtofl@sign stored from wreg
 30773  010484  0100               	movlb	0	; () banked
 30774  010486  6F72               	movwf	___xxtofl@sign& (0+255),b
 30775  010488  0100               	movlb	0	; () banked
 30776  01048A  5172               	movf	___xxtofl@sign& (0+255),w,b
 30777  01048C  A4D8               	btfss	status,2,c
 30778                           
 30779                           ; BSR set to: 0
 30780  01048E  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 30781  010490  D01A               	goto	l3741
 30782                           
 30783                           ; BSR set to: 0
 30784  010492  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 30785  010496  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 30786  01049A  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 30787  01049E  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 30788  0104A2  1F6E               	comf	??___xxtofl& (0+255),f,b
 30789  0104A4  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 30790  0104A6  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 30791  0104A8  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 30792  0104AA  2B6E               	incf	??___xxtofl& (0+255),f,b
 30793  0104AC  0E00               	movlw	0
 30794  0104AE  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 30795  0104B0  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 30796  0104B2  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 30797  0104B4  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 30798  0104B8  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 30799  0104BC  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 30800  0104C0  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 30801  0104C4  D008               	goto	l3742
 30802  0104C6                     l3741:
 30803                           
 30804                           ; BSR set to: 0
 30805  0104C6  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 30806  0104CA  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 30807  0104CE  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 30808  0104D2  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 30809  0104D6                     l3742:
 30810                           
 30811                           ; BSR set to: 0
 30812                           
 30813                           ; BSR set to: 0
 30814  0104D6  516A               	movf	___xxtofl@val& (0+255),w,b
 30815  0104D8  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 30816  0104DA  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 30817  0104DC  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 30818  0104DE  A4D8               	btfss	status,2,c
 30819  0104E0  D009               	goto	l3743
 30820                           
 30821                           ; BSR set to: 0
 30822  0104E2  0E00               	movlw	0
 30823  0104E4  6F6A               	movwf	?___xxtofl& (0+255),b
 30824  0104E6  0E00               	movlw	0
 30825  0104E8  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 30826  0104EA  0E00               	movlw	0
 30827  0104EC  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 30828  0104EE  0E00               	movlw	0
 30829  0104F0  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 30830                           
 30831                           ; BSR set to: 0
 30832  0104F2  0012               	return	
 30833  0104F4                     l3743:
 30834                           
 30835                           ; BSR set to: 0
 30836                           
 30837                           ; BSR set to: 0
 30838  0104F4  0E96               	movlw	150
 30839  0104F6  6F73               	movwf	___xxtofl@exp& (0+255),b
 30840  0104F8  D006               	goto	l3745
 30841  0104FA                     
 30842                           ; BSR set to: 0
 30843                           
 30844                           ; BSR set to: 0
 30845  0104FA  2B73               	incf	___xxtofl@exp& (0+255),f,b
 30846  0104FC  90D8               	bcf	status,0,c
 30847  0104FE  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 30848  010500  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 30849  010502  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 30850  010504  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 30851  010506                     l3745:
 30852                           
 30853                           ; BSR set to: 0
 30854                           
 30855                           ; BSR set to: 0
 30856  010506  0E00               	movlw	0
 30857  010508  1574               	andwf	___xxtofl@arg& (0+255),w,b
 30858  01050A  6F6E               	movwf	??___xxtofl& (0+255),b
 30859  01050C  0E00               	movlw	0
 30860  01050E  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 30861  010510  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 30862  010512  0E00               	movlw	0
 30863  010514  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 30864  010516  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 30865  010518  0EFE               	movlw	254
 30866  01051A  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 30867  01051C  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 30868  01051E  516E               	movf	??___xxtofl& (0+255),w,b
 30869  010520  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 30870  010522  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 30871  010524  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 30872  010526  B4D8               	btfsc	status,2,c
 30873  010528  D00D               	goto	l3748
 30874  01052A  D7E7               	goto	l3746
 30875  01052C                     
 30876                           ; BSR set to: 0
 30877                           
 30878                           ; BSR set to: 0
 30879  01052C  2B73               	incf	___xxtofl@exp& (0+255),f,b
 30880                           
 30881                           ; BSR set to: 0
 30882  01052E  0E01               	movlw	1
 30883  010530  2774               	addwf	___xxtofl@arg& (0+255),f,b
 30884  010532  0E00               	movlw	0
 30885  010534  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 30886  010536  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 30887  010538  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 30888                           
 30889                           ; BSR set to: 0
 30890  01053A  90D8               	bcf	status,0,c
 30891  01053C  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 30892  01053E  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 30893  010540  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 30894  010542  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 30895  010544                     l3748:
 30896                           
 30897                           ; BSR set to: 0
 30898  010544  0E00               	movlw	0
 30899  010546  1574               	andwf	___xxtofl@arg& (0+255),w,b
 30900  010548  6F6E               	movwf	??___xxtofl& (0+255),b
 30901  01054A  0E00               	movlw	0
 30902  01054C  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 30903  01054E  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 30904  010550  0E00               	movlw	0
 30905  010552  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 30906  010554  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 30907  010556  0EFF               	movlw	255
 30908  010558  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 30909  01055A  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 30910  01055C  516E               	movf	??___xxtofl& (0+255),w,b
 30911  01055E  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 30912  010560  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 30913  010562  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 30914  010564  B4D8               	btfsc	status,2,c
 30915  010566  D007               	goto	l3751
 30916  010568  D7E1               	goto	l3749
 30917  01056A                     
 30918                           ; BSR set to: 0
 30919                           
 30920                           ; BSR set to: 0
 30921  01056A  0773               	decf	___xxtofl@exp& (0+255),f,b
 30922  01056C  90D8               	bcf	status,0,c
 30923  01056E  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 30924  010570  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 30925  010572  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 30926  010574  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 30927  010576                     l3751:
 30928                           
 30929                           ; BSR set to: 0
 30930                           
 30931                           ; BSR set to: 0
 30932  010576  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 30933  010578  D003               	goto	u13550
 30934                           
 30935                           ; BSR set to: 0
 30936  01057A  0E02               	movlw	2
 30937  01057C  6173               	cpfslt	___xxtofl@exp& (0+255),b
 30938  01057E  D7F5               	goto	l3752
 30939  010580                     u13550:
 30940                           
 30941                           ; BSR set to: 0
 30942                           
 30943                           ; BSR set to: 0
 30944  010580  A173               	btfss	___xxtofl@exp& (0+255),0,b
 30945                           
 30946                           ; BSR set to: 0
 30947  010582  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 30948                           
 30949                           ; BSR set to: 0
 30950                           
 30951                           ; BSR set to: 0
 30952  010584  90D8               	bcf	status,0,c
 30953  010586  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 30954                           
 30955                           ; BSR set to: 0
 30956  010588  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 30957  01058C  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 30958  01058E  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 30959  010590  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 30960  010592  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 30961  010596  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 30962  010598  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 30963  01059A  6B6E               	clrf	??___xxtofl& (0+255),b
 30964  01059C  516E               	movf	??___xxtofl& (0+255),w,b
 30965  01059E  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 30966  0105A0  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 30967  0105A2  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 30968  0105A4  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 30969  0105A6  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 30970  0105A8  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 30971  0105AA  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 30972                           
 30973                           ; BSR set to: 0
 30974  0105AC  5172               	movf	___xxtofl@sign& (0+255),w,b
 30975  0105AE  A4D8               	btfss	status,2,c
 30976                           
 30977                           ; BSR set to: 0
 30978  0105B0  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 30979  0105B2  D001               	goto	l3757
 30980                           
 30981                           ; BSR set to: 0
 30982  0105B4  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 30983  0105B6                     l3757:
 30984                           
 30985                           ; BSR set to: 0
 30986                           
 30987                           ; BSR set to: 0
 30988  0105B6  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 30989  0105BA  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 30990  0105BE  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 30991  0105C2  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 30992  0105C6  0012               	return	
 30993  0105C8                     __end_of___xxtofl:
 30994                           	opt stack 0
 30995                           tblptru	equ	0xFF8
 30996                           tblptrh	equ	0xFF7
 30997                           tblptrl	equ	0xFF6
 30998                           tablat	equ	0xFF5
 30999                           prodh	equ	0xFF4
 31000                           prodl	equ	0xFF3
 31001                           intcon	equ	0xFF2
 31002                           postinc0	equ	0xFEE
 31003                           wreg	equ	0xFE8
 31004                           indf1	equ	0xFE7
 31005                           postinc1	equ	0xFE6
 31006                           postdec1	equ	0xFE5
 31007                           plusw1	equ	0xFE3
 31008                           fsr1h	equ	0xFE2
 31009                           fsr1l	equ	0xFE1
 31010                           indf2	equ	0xFDF
 31011                           postinc2	equ	0xFDE
 31012                           postdec2	equ	0xFDD
 31013                           plusw2	equ	0xFDB
 31014                           fsr2h	equ	0xFDA
 31015                           fsr2l	equ	0xFD9
 31016                           status	equ	0xFD8
 31017                           
 31018 ;; *************** function ___fltol *****************
 31019 ;; Defined at:
 31020 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 31021 ;; Parameters:    Size  Location     Type
 31022 ;;  f1              4    0[BANK0 ] unsigned char 
 31023 ;; Auto vars:     Size  Location     Type
 31024 ;;  exp1            1    9[BANK0 ] unsigned char 
 31025 ;;  sign1           1    8[BANK0 ] unsigned char 
 31026 ;; Return value:  Size  Location     Type
 31027 ;;                  4    0[BANK0 ] long 
 31028 ;; Registers used:
 31029 ;;		wreg, status,2, status,0
 31030 ;; Tracked objects:
 31031 ;;		On entry : 0/0
 31032 ;;		On exit  : 0/0
 31033 ;;		Unchanged: 0/0
 31034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31035 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31036 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31037 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31038 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31039 ;;Total ram usage:       10 bytes
 31040 ;; Hardware stack levels used:    1
 31041 ;; Hardware stack levels required when called:   10
 31042 ;; This function calls:
 31043 ;;		Nothing
 31044 ;; This function is called by:
 31045 ;;		__motor_steps_from_degrees_int
 31046 ;;		_motor_calculate_position_in_degrees
 31047 ;;		__motor_get_speed_in_degrees
 31048 ;;		__step_position_from_divide_position
 31049 ;;		_motor_divide_jump_to_nearest
 31050 ;;		_motor_arc_move
 31051 ;;		_adc_read_temperature
 31052 ;;		__steps_from_degrees
 31053 ;;		__motor_steps_from_degrees_float
 31054 ;;		_motor_steps_from_degrees
 31055 ;; This function uses a non-reentrant model
 31056 ;;
 31057                           
 31058                           	psect	text118
 31059  01273E                     __ptext118:
 31060                           	opt stack 0
 31061  01273E                     ___fltol:
 31062                           	opt stack 18
 31063                           
 31064                           ; BSR set to: 0
 31065                           ;incstack = 0
 31066  01273E  0100               	movlb	0	; () banked
 31067  012740  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 31068  012742  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 31069  012744  6F69               	movwf	___fltol@exp1& (0+255),b
 31070  012746  5169               	movf	___fltol@exp1& (0+255),w,b
 31071  012748  A4D8               	btfss	status,2,c
 31072  01274A  D009               	goto	l3386
 31073                           
 31074                           ; BSR set to: 0
 31075  01274C  0E00               	movlw	0
 31076  01274E  6F60               	movwf	?___fltol& (0+255),b
 31077  012750  0E00               	movlw	0
 31078  012752  6F61               	movwf	(?___fltol+1)& (0+255),b
 31079  012754  0E00               	movlw	0
 31080  012756  6F62               	movwf	(?___fltol+2)& (0+255),b
 31081  012758  0E00               	movlw	0
 31082  01275A  6F63               	movwf	(?___fltol+3)& (0+255),b
 31083                           
 31084                           ; BSR set to: 0
 31085  01275C  0012               	return	
 31086  01275E                     l3386:
 31087                           
 31088                           ; BSR set to: 0
 31089                           
 31090                           ; BSR set to: 0
 31091  01275E  C060  F064         	movff	___fltol@f1,??___fltol
 31092  012762  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 31093  012766  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 31094  01276A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 31095  01276E  0E20               	movlw	32
 31096  012770  D005               	goto	u13430
 31097  012772                     u13435:
 31098  012772  90D8               	bcf	status,0,c
 31099  012774  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 31100  012776  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 31101  012778  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 31102  01277A  3364               	rrcf	??___fltol& (0+255),f,b
 31103  01277C                     u13430:
 31104  01277C  2EE8               	decfsz	wreg,f,c
 31105  01277E  D7F9               	goto	u13435
 31106  012780  5164               	movf	??___fltol& (0+255),w,b
 31107  012782  6F68               	movwf	___fltol@sign1& (0+255),b
 31108                           
 31109                           ; BSR set to: 0
 31110  012784  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 31111                           
 31112                           ; BSR set to: 0
 31113  012786  0EFF               	movlw	255
 31114  012788  1760               	andwf	___fltol@f1& (0+255),f,b
 31115  01278A  0EFF               	movlw	255
 31116  01278C  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 31117  01278E  0EFF               	movlw	255
 31118  012790  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 31119  012792  0E00               	movlw	0
 31120  012794  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 31121                           
 31122                           ; BSR set to: 0
 31123  012796  0E96               	movlw	150
 31124  012798  5F69               	subwf	___fltol@exp1& (0+255),f,b
 31125                           
 31126                           ; BSR set to: 0
 31127  01279A  AF69               	btfss	___fltol@exp1& (0+255),7,b
 31128  01279C  D016               	goto	l3388
 31129                           
 31130                           ; BSR set to: 0
 31131  01279E  5169               	movf	___fltol@exp1& (0+255),w,b
 31132  0127A0  0A80               	xorlw	128
 31133  0127A2  0F97               	addlw	151
 31134  0127A4  B0D8               	btfsc	status,0,c
 31135  0127A6  D009               	goto	l3389
 31136                           
 31137                           ; BSR set to: 0
 31138  0127A8  0E00               	movlw	0
 31139  0127AA  6F60               	movwf	?___fltol& (0+255),b
 31140  0127AC  0E00               	movlw	0
 31141  0127AE  6F61               	movwf	(?___fltol+1)& (0+255),b
 31142  0127B0  0E00               	movlw	0
 31143  0127B2  6F62               	movwf	(?___fltol+2)& (0+255),b
 31144  0127B4  0E00               	movlw	0
 31145  0127B6  6F63               	movwf	(?___fltol+3)& (0+255),b
 31146                           
 31147                           ; BSR set to: 0
 31148  0127B8  0012               	return	
 31149  0127BA                     l3389:
 31150                           
 31151                           ; BSR set to: 0
 31152                           
 31153                           ; BSR set to: 0
 31154                           
 31155                           ; BSR set to: 0
 31156  0127BA  90D8               	bcf	status,0,c
 31157  0127BC  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 31158  0127BE  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 31159  0127C0  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 31160  0127C2  3360               	rrcf	___fltol@f1& (0+255),f,b
 31161                           
 31162                           ; BSR set to: 0
 31163  0127C4  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 31164  0127C6  D7F9               	goto	l3389
 31165                           
 31166                           ; BSR set to: 0
 31167  0127C8  D015               	goto	u13470
 31168  0127CA                     l3388:
 31169                           
 31170                           ; BSR set to: 0
 31171                           
 31172                           ; BSR set to: 0
 31173  0127CA  0E1F               	movlw	31
 31174  0127CC  6569               	cpfsgt	___fltol@exp1& (0+255),b
 31175  0127CE  D00F               	goto	l3394
 31176                           
 31177                           ; BSR set to: 0
 31178  0127D0  0E00               	movlw	0
 31179  0127D2  6F60               	movwf	?___fltol& (0+255),b
 31180  0127D4  0E00               	movlw	0
 31181  0127D6  6F61               	movwf	(?___fltol+1)& (0+255),b
 31182  0127D8  0E00               	movlw	0
 31183  0127DA  6F62               	movwf	(?___fltol+2)& (0+255),b
 31184  0127DC  0E00               	movlw	0
 31185  0127DE  6F63               	movwf	(?___fltol+3)& (0+255),b
 31186                           
 31187                           ; BSR set to: 0
 31188  0127E0  0012               	return	
 31189  0127E2                     
 31190                           ; BSR set to: 0
 31191                           
 31192                           ; BSR set to: 0
 31193  0127E2  90D8               	bcf	status,0,c
 31194  0127E4  3760               	rlcf	___fltol@f1& (0+255),f,b
 31195  0127E6  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 31196  0127E8  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 31197  0127EA  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 31198  0127EC  0769               	decf	___fltol@exp1& (0+255),f,b
 31199  0127EE                     l3394:
 31200                           
 31201                           ; BSR set to: 0
 31202                           
 31203                           ; BSR set to: 0
 31204  0127EE  5169               	movf	___fltol@exp1& (0+255),w,b
 31205  0127F0  A4D8               	btfss	status,2,c
 31206  0127F2  D7F7               	goto	l3395
 31207  0127F4                     u13470:
 31208                           
 31209                           ; BSR set to: 0
 31210                           
 31211                           ; BSR set to: 0
 31212                           
 31213                           ; BSR set to: 0
 31214  0127F4  5168               	movf	___fltol@sign1& (0+255),w,b
 31215  0127F6  B4D8               	btfsc	status,2,c
 31216  0127F8  D008               	goto	l3397
 31217                           
 31218                           ; BSR set to: 0
 31219  0127FA  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 31220  0127FC  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 31221  0127FE  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 31222  012800  6D60               	negf	___fltol@f1& (0+255),b
 31223  012802  0E00               	movlw	0
 31224  012804  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 31225  012806  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 31226  012808  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 31227  01280A                     l3397:
 31228                           
 31229                           ; BSR set to: 0
 31230                           
 31231                           ; BSR set to: 0
 31232  01280A  C060  F060         	movff	___fltol@f1,?___fltol
 31233  01280E  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 31234  012812  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 31235  012816  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 31236  01281A  0012               	return	
 31237  01281C                     __end_of___fltol:
 31238                           	opt stack 0
 31239                           tblptru	equ	0xFF8
 31240                           tblptrh	equ	0xFF7
 31241                           tblptrl	equ	0xFF6
 31242                           tablat	equ	0xFF5
 31243                           prodh	equ	0xFF4
 31244                           prodl	equ	0xFF3
 31245                           intcon	equ	0xFF2
 31246                           postinc0	equ	0xFEE
 31247                           wreg	equ	0xFE8
 31248                           indf1	equ	0xFE7
 31249                           postinc1	equ	0xFE6
 31250                           postdec1	equ	0xFE5
 31251                           plusw1	equ	0xFE3
 31252                           fsr1h	equ	0xFE2
 31253                           fsr1l	equ	0xFE1
 31254                           indf2	equ	0xFDF
 31255                           postinc2	equ	0xFDE
 31256                           postdec2	equ	0xFDD
 31257                           plusw2	equ	0xFDB
 31258                           fsr2h	equ	0xFDA
 31259                           fsr2l	equ	0xFD9
 31260                           status	equ	0xFD8
 31261                           
 31262 ;; *************** function ___flneg *****************
 31263 ;; Defined at:
 31264 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 31265 ;; Parameters:    Size  Location     Type
 31266 ;;  f1              4   24[BANK0 ] long 
 31267 ;; Auto vars:     Size  Location     Type
 31268 ;;		None
 31269 ;; Return value:  Size  Location     Type
 31270 ;;                  4   24[BANK0 ] long 
 31271 ;; Registers used:
 31272 ;;		wreg, status,2, status,0
 31273 ;; Tracked objects:
 31274 ;;		On entry : 0/0
 31275 ;;		On exit  : 0/0
 31276 ;;		Unchanged: 0/0
 31277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31281 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31282 ;;Total ram usage:        4 bytes
 31283 ;; Hardware stack levels used:    1
 31284 ;; Hardware stack levels required when called:   10
 31285 ;; This function calls:
 31286 ;;		Nothing
 31287 ;; This function is called by:
 31288 ;;		_adc_read_temperature
 31289 ;;		__motor_steps_from_degrees_float
 31290 ;; This function uses a non-reentrant model
 31291 ;;
 31292                           
 31293                           	psect	text119
 31294  015B24                     __ptext119:
 31295                           	opt stack 0
 31296  015B24                     ___flneg:
 31297                           	opt stack 19
 31298                           
 31299                           ; BSR set to: 0
 31300                           ;incstack = 0
 31301  015B24  0100               	movlb	0	; () banked
 31302  015B26  5178               	movf	___flneg@f1& (0+255),w,b
 31303  015B28  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31304  015B2A  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31305  015B2C  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31306  015B2E  B4D8               	btfsc	status,2,c
 31307  015B30  D008               	goto	l3363
 31308                           
 31309                           ; BSR set to: 0
 31310  015B32  0E00               	movlw	0
 31311  015B34  1B78               	xorwf	___flneg@f1& (0+255),f,b
 31312  015B36  0E00               	movlw	0
 31313  015B38  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31314  015B3A  0E00               	movlw	0
 31315  015B3C  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31316  015B3E  0E80               	movlw	128
 31317  015B40  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31318  015B42                     l3363:
 31319                           
 31320                           ; BSR set to: 0
 31321                           
 31322                           ; BSR set to: 0
 31323  015B42  C078  F078         	movff	___flneg@f1,?___flneg
 31324  015B46  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 31325  015B4A  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 31326  015B4E  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 31327  015B52  0012               	return	
 31328  015B54                     __end_of___flneg:
 31329                           	opt stack 0
 31330                           tblptru	equ	0xFF8
 31331                           tblptrh	equ	0xFF7
 31332                           tblptrl	equ	0xFF6
 31333                           tablat	equ	0xFF5
 31334                           prodh	equ	0xFF4
 31335                           prodl	equ	0xFF3
 31336                           intcon	equ	0xFF2
 31337                           postinc0	equ	0xFEE
 31338                           wreg	equ	0xFE8
 31339                           indf1	equ	0xFE7
 31340                           postinc1	equ	0xFE6
 31341                           postdec1	equ	0xFE5
 31342                           plusw1	equ	0xFE3
 31343                           fsr1h	equ	0xFE2
 31344                           fsr1l	equ	0xFE1
 31345                           indf2	equ	0xFDF
 31346                           postinc2	equ	0xFDE
 31347                           postdec2	equ	0xFDD
 31348                           plusw2	equ	0xFDB
 31349                           fsr2h	equ	0xFDA
 31350                           fsr2l	equ	0xFD9
 31351                           status	equ	0xFD8
 31352                           
 31353 ;; *************** function ___flmul *****************
 31354 ;; Defined at:
 31355 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 31356 ;; Parameters:    Size  Location     Type
 31357 ;;  b               4   24[BANK0 ] long 
 31358 ;;  a               4   28[BANK0 ] long 
 31359 ;; Auto vars:     Size  Location     Type
 31360 ;;  prod            4   43[BANK0 ] struct .
 31361 ;;  grs             4   37[BANK0 ] unsigned long 
 31362 ;;  temp            2   47[BANK0 ] struct .
 31363 ;;  bexp            1   42[BANK0 ] unsigned char 
 31364 ;;  aexp            1   41[BANK0 ] unsigned char 
 31365 ;;  sign            1   36[BANK0 ] unsigned char 
 31366 ;; Return value:  Size  Location     Type
 31367 ;;                  4   24[BANK0 ] unsigned char 
 31368 ;; Registers used:
 31369 ;;		wreg, status,2, status,0, prodl, prodh
 31370 ;; Tracked objects:
 31371 ;;		On entry : 0/0
 31372 ;;		On exit  : 0/0
 31373 ;;		Unchanged: 0/0
 31374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31375 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31376 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31377 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31378 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31379 ;;Total ram usage:       25 bytes
 31380 ;; Hardware stack levels used:    1
 31381 ;; Hardware stack levels required when called:   10
 31382 ;; This function calls:
 31383 ;;		Nothing
 31384 ;; This function is called by:
 31385 ;;		__motor_steps_from_degrees_int
 31386 ;;		_motor_calculate_position_in_degrees
 31387 ;;		__step_position_from_divide_position
 31388 ;;		_motor_divide_jump_to_nearest
 31389 ;;		_motor_arc_move
 31390 ;;		_adc_read_temperature
 31391 ;;		__steps_from_degrees
 31392 ;;		__motor_steps_from_degrees_float
 31393 ;;		_motor_steps_from_degrees
 31394 ;; This function uses a non-reentrant model
 31395 ;;
 31396                           
 31397                           	psect	text120
 31398  00C9B6                     __ptext120:
 31399                           	opt stack 0
 31400  00C9B6                     ___flmul:
 31401                           	opt stack 18
 31402                           
 31403                           ; BSR set to: 0
 31404                           ;incstack = 0
 31405  00C9B6  0100               	movlb	0	; () banked
 31406  00C9B8  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31407  00C9BA  0B80               	andlw	128
 31408  00C9BC  6F84               	movwf	___flmul@sign& (0+255),b
 31409  00C9BE  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31410  00C9C0  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 31411  00C9C2  6F8A               	movwf	___flmul@bexp& (0+255),b
 31412                           
 31413                           ; BSR set to: 0
 31414  00C9C4  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 31415                           
 31416                           ; BSR set to: 0
 31417  00C9C6  818A               	bsf	___flmul@bexp& (0+255),0,b
 31418                           
 31419                           ; BSR set to: 0
 31420                           
 31421                           ; BSR set to: 0
 31422  00C9C8  518A               	movf	___flmul@bexp& (0+255),w,b
 31423  00C9CA  B4D8               	btfsc	status,2,c
 31424  00C9CC  D00D               	goto	l3694
 31425                           
 31426                           ; BSR set to: 0
 31427  00C9CE  298A               	incf	___flmul@bexp& (0+255),w,b
 31428  00C9D0  A4D8               	btfss	status,2,c
 31429  00C9D2  D008               	goto	l3695
 31430                           
 31431                           ; BSR set to: 0
 31432  00C9D4  0E00               	movlw	0
 31433  00C9D6  6F78               	movwf	___flmul@b& (0+255),b
 31434  00C9D8  0E00               	movlw	0
 31435  00C9DA  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31436  00C9DC  0E00               	movlw	0
 31437  00C9DE  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31438  00C9E0  0E00               	movlw	0
 31439  00C9E2  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31440  00C9E4                     l3695:
 31441                           
 31442                           ; BSR set to: 0
 31443                           
 31444                           ; BSR set to: 0
 31445  00C9E4  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 31446  00C9E6  D008               	goto	l3696
 31447  00C9E8                     l3694:
 31448                           
 31449                           ; BSR set to: 0
 31450                           
 31451                           ; BSR set to: 0
 31452  00C9E8  0E00               	movlw	0
 31453  00C9EA  6F78               	movwf	___flmul@b& (0+255),b
 31454  00C9EC  0E00               	movlw	0
 31455  00C9EE  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31456  00C9F0  0E00               	movlw	0
 31457  00C9F2  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31458  00C9F4  0E00               	movlw	0
 31459  00C9F6  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31460  00C9F8                     l3696:
 31461                           
 31462                           ; BSR set to: 0
 31463                           
 31464                           ; BSR set to: 0
 31465  00C9F8  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31466  00C9FA  0B80               	andlw	128
 31467  00C9FC  1B84               	xorwf	___flmul@sign& (0+255),f,b
 31468                           
 31469                           ; BSR set to: 0
 31470  00C9FE  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31471  00CA00  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 31472  00CA02  6F89               	movwf	___flmul@aexp& (0+255),b
 31473                           
 31474                           ; BSR set to: 0
 31475  00CA04  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 31476                           
 31477                           ; BSR set to: 0
 31478  00CA06  8189               	bsf	___flmul@aexp& (0+255),0,b
 31479                           
 31480                           ; BSR set to: 0
 31481                           
 31482                           ; BSR set to: 0
 31483  00CA08  5189               	movf	___flmul@aexp& (0+255),w,b
 31484  00CA0A  B4D8               	btfsc	status,2,c
 31485  00CA0C  D00D               	goto	l3698
 31486                           
 31487                           ; BSR set to: 0
 31488  00CA0E  2989               	incf	___flmul@aexp& (0+255),w,b
 31489  00CA10  A4D8               	btfss	status,2,c
 31490  00CA12  D008               	goto	l3699
 31491                           
 31492                           ; BSR set to: 0
 31493  00CA14  0E00               	movlw	0
 31494  00CA16  6F7C               	movwf	___flmul@a& (0+255),b
 31495  00CA18  0E00               	movlw	0
 31496  00CA1A  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31497  00CA1C  0E00               	movlw	0
 31498  00CA1E  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31499  00CA20  0E00               	movlw	0
 31500  00CA22  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31501  00CA24                     l3699:
 31502                           
 31503                           ; BSR set to: 0
 31504                           
 31505                           ; BSR set to: 0
 31506  00CA24  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 31507  00CA26  D008               	goto	l3700
 31508  00CA28                     l3698:
 31509                           
 31510                           ; BSR set to: 0
 31511                           
 31512                           ; BSR set to: 0
 31513  00CA28  0E00               	movlw	0
 31514  00CA2A  6F7C               	movwf	___flmul@a& (0+255),b
 31515  00CA2C  0E00               	movlw	0
 31516  00CA2E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31517  00CA30  0E00               	movlw	0
 31518  00CA32  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31519  00CA34  0E00               	movlw	0
 31520  00CA36  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31521  00CA38                     l3700:
 31522                           
 31523                           ; BSR set to: 0
 31524  00CA38  5189               	movf	___flmul@aexp& (0+255),w,b
 31525  00CA3A  B4D8               	btfsc	status,2,c
 31526  00CA3C  D003               	goto	u13250
 31527                           
 31528                           ; BSR set to: 0
 31529  00CA3E  518A               	movf	___flmul@bexp& (0+255),w,b
 31530  00CA40  A4D8               	btfss	status,2,c
 31531  00CA42  D009               	goto	l3701
 31532  00CA44                     u13250:
 31533                           
 31534                           ; BSR set to: 0
 31535                           
 31536                           ; BSR set to: 0
 31537  00CA44  0E00               	movlw	0
 31538  00CA46  6F78               	movwf	?___flmul& (0+255),b
 31539  00CA48  0E00               	movlw	0
 31540  00CA4A  6F79               	movwf	(?___flmul+1)& (0+255),b
 31541  00CA4C  0E00               	movlw	0
 31542  00CA4E  6F7A               	movwf	(?___flmul+2)& (0+255),b
 31543  00CA50  0E00               	movlw	0
 31544  00CA52  6F7B               	movwf	(?___flmul+3)& (0+255),b
 31545                           
 31546                           ; BSR set to: 0
 31547  00CA54  0012               	return	
 31548  00CA56                     l3701:
 31549                           
 31550                           ; BSR set to: 0
 31551                           
 31552                           ; BSR set to: 0
 31553  00CA56  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31554  00CA58  0378               	mulwf	___flmul@b& (0+255),b
 31555  00CA5A  CFF3 F08F          	movff	prodl,___flmul@temp
 31556  00CA5E  CFF4 F090          	movff	prodh,___flmul@temp+1
 31557                           
 31558                           ; BSR set to: 0
 31559  00CA62  518F               	movf	___flmul@temp& (0+255),w,b
 31560  00CA64  6F85               	movwf	___flmul@grs& (0+255),b
 31561  00CA66  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 31562  00CA68  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 31563  00CA6A  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 31564                           
 31565                           ; BSR set to: 0
 31566  00CA6C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31567  00CA6E  6F8B               	movwf	___flmul@prod& (0+255),b
 31568  00CA70  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 31569  00CA72  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 31570  00CA74  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 31571  00CA76  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31572  00CA78  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31573  00CA7A  CFF3 F08F          	movff	prodl,___flmul@temp
 31574  00CA7E  CFF4 F090          	movff	prodh,___flmul@temp+1
 31575                           
 31576                           ; BSR set to: 0
 31577  00CA82  518F               	movf	___flmul@temp& (0+255),w,b
 31578  00CA84  2785               	addwf	___flmul@grs& (0+255),f,b
 31579  00CA86  0E00               	movlw	0
 31580  00CA88  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31581  00CA8A  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31582  00CA8C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31583                           
 31584                           ; BSR set to: 0
 31585  00CA8E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31586  00CA90  278B               	addwf	___flmul@prod& (0+255),f,b
 31587  00CA92  0E00               	movlw	0
 31588  00CA94  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31589  00CA96  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31590  00CA98  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31591  00CA9A  517C               	movf	___flmul@a& (0+255),w,b
 31592  00CA9C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31593  00CA9E  CFF3 F08F          	movff	prodl,___flmul@temp
 31594  00CAA2  CFF4 F090          	movff	prodh,___flmul@temp+1
 31595                           
 31596                           ; BSR set to: 0
 31597  00CAA6  518F               	movf	___flmul@temp& (0+255),w,b
 31598  00CAA8  2785               	addwf	___flmul@grs& (0+255),f,b
 31599  00CAAA  0E00               	movlw	0
 31600  00CAAC  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31601  00CAAE  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31602  00CAB0  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31603                           
 31604                           ; BSR set to: 0
 31605  00CAB2  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31606  00CAB4  278B               	addwf	___flmul@prod& (0+255),f,b
 31607  00CAB6  0E00               	movlw	0
 31608  00CAB8  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31609  00CABA  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31610  00CABC  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31611                           
 31612                           ; BSR set to: 0
 31613  00CABE  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31614  00CAC2  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31615  00CAC6  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31616  00CACA  6B85               	clrf	___flmul@grs& (0+255),b
 31617                           
 31618                           ; BSR set to: 0
 31619  00CACC  517C               	movf	___flmul@a& (0+255),w,b
 31620  00CACE  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31621  00CAD0  CFF3 F08F          	movff	prodl,___flmul@temp
 31622  00CAD4  CFF4 F090          	movff	prodh,___flmul@temp+1
 31623                           
 31624                           ; BSR set to: 0
 31625  00CAD8  518F               	movf	___flmul@temp& (0+255),w,b
 31626  00CADA  2785               	addwf	___flmul@grs& (0+255),f,b
 31627  00CADC  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31628  00CADE  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31629  00CAE0  0E00               	movlw	0
 31630  00CAE2  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31631  00CAE4  0E00               	movlw	0
 31632  00CAE6  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31633                           
 31634                           ; BSR set to: 0
 31635  00CAE8  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31636  00CAEA  0378               	mulwf	___flmul@b& (0+255),b
 31637  00CAEC  CFF3 F08F          	movff	prodl,___flmul@temp
 31638  00CAF0  CFF4 F090          	movff	prodh,___flmul@temp+1
 31639                           
 31640                           ; BSR set to: 0
 31641  00CAF4  518F               	movf	___flmul@temp& (0+255),w,b
 31642  00CAF6  2785               	addwf	___flmul@grs& (0+255),f,b
 31643  00CAF8  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31644  00CAFA  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31645  00CAFC  0E00               	movlw	0
 31646  00CAFE  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31647  00CB00  0E00               	movlw	0
 31648  00CB02  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31649                           
 31650                           ; BSR set to: 0
 31651  00CB04  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31652  00CB08  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31653  00CB0C  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31654  00CB10  6B85               	clrf	___flmul@grs& (0+255),b
 31655  00CB12  517C               	movf	___flmul@a& (0+255),w,b
 31656  00CB14  0378               	mulwf	___flmul@b& (0+255),b
 31657  00CB16  CFF3 F08F          	movff	prodl,___flmul@temp
 31658  00CB1A  CFF4 F090          	movff	prodh,___flmul@temp+1
 31659                           
 31660                           ; BSR set to: 0
 31661  00CB1E  518F               	movf	___flmul@temp& (0+255),w,b
 31662  00CB20  2785               	addwf	___flmul@grs& (0+255),f,b
 31663  00CB22  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31664  00CB24  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31665  00CB26  0E00               	movlw	0
 31666  00CB28  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31667  00CB2A  0E00               	movlw	0
 31668  00CB2C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31669                           
 31670                           ; BSR set to: 0
 31671  00CB2E  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31672  00CB30  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31673  00CB32  CFF3 F08F          	movff	prodl,___flmul@temp
 31674  00CB36  CFF4 F090          	movff	prodh,___flmul@temp+1
 31675  00CB3A  518F               	movf	___flmul@temp& (0+255),w,b
 31676  00CB3C  278B               	addwf	___flmul@prod& (0+255),f,b
 31677  00CB3E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31678  00CB40  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31679  00CB42  0E00               	movlw	0
 31680  00CB44  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31681  00CB46  0E00               	movlw	0
 31682  00CB48  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31683                           
 31684                           ; BSR set to: 0
 31685  00CB4A  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31686  00CB4C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31687  00CB4E  CFF3 F08F          	movff	prodl,___flmul@temp
 31688  00CB52  CFF4 F090          	movff	prodh,___flmul@temp+1
 31689                           
 31690                           ; BSR set to: 0
 31691  00CB56  518F               	movf	___flmul@temp& (0+255),w,b
 31692  00CB58  278B               	addwf	___flmul@prod& (0+255),f,b
 31693  00CB5A  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31694  00CB5C  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31695  00CB5E  0E00               	movlw	0
 31696  00CB60  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31697  00CB62  0E00               	movlw	0
 31698  00CB64  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31699  00CB66  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31700  00CB68  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31701  00CB6A  CFF3 F08F          	movff	prodl,___flmul@temp
 31702  00CB6E  CFF4 F090          	movff	prodh,___flmul@temp+1
 31703                           
 31704                           ; BSR set to: 0
 31705  00CB72  518F               	movf	___flmul@temp& (0+255),w,b
 31706  00CB74  6F80               	movwf	??___flmul& (0+255),b
 31707  00CB76  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31708  00CB78  6F81               	movwf	(??___flmul+1)& (0+255),b
 31709  00CB7A  6B82               	clrf	(??___flmul+2)& (0+255),b
 31710  00CB7C  6B83               	clrf	(??___flmul+3)& (0+255),b
 31711  00CB7E  C082  F083         	movff	??___flmul+2,??___flmul+3
 31712  00CB82  C081  F082         	movff	??___flmul+1,??___flmul+2
 31713  00CB86  C080  F081         	movff	??___flmul,??___flmul+1
 31714  00CB8A  6B80               	clrf	??___flmul& (0+255),b
 31715  00CB8C  5180               	movf	??___flmul& (0+255),w,b
 31716  00CB8E  278B               	addwf	___flmul@prod& (0+255),f,b
 31717  00CB90  5181               	movf	(??___flmul+1)& (0+255),w,b
 31718  00CB92  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31719  00CB94  5182               	movf	(??___flmul+2)& (0+255),w,b
 31720  00CB96  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31721  00CB98  5183               	movf	(??___flmul+3)& (0+255),w,b
 31722  00CB9A  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31723                           
 31724                           ; BSR set to: 0
 31725  00CB9C  C085  F080         	movff	___flmul@grs,??___flmul
 31726  00CBA0  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 31727  00CBA4  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 31728  00CBA8  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 31729  00CBAC  0E19               	movlw	25
 31730  00CBAE  D005               	goto	u13260
 31731  00CBB0                     u13265:
 31732  00CBB0  90D8               	bcf	status,0,c
 31733  00CBB2  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 31734  00CBB4  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 31735  00CBB6  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 31736  00CBB8  3380               	rrcf	??___flmul& (0+255),f,b
 31737  00CBBA                     u13260:
 31738  00CBBA  2EE8               	decfsz	wreg,f,c
 31739  00CBBC  D7F9               	goto	u13265
 31740  00CBBE  5180               	movf	??___flmul& (0+255),w,b
 31741  00CBC0  278B               	addwf	___flmul@prod& (0+255),f,b
 31742  00CBC2  5181               	movf	(??___flmul+1)& (0+255),w,b
 31743  00CBC4  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31744  00CBC6  5182               	movf	(??___flmul+2)& (0+255),w,b
 31745  00CBC8  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31746  00CBCA  5183               	movf	(??___flmul+3)& (0+255),w,b
 31747  00CBCC  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31748                           
 31749                           ; BSR set to: 0
 31750  00CBCE  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31751  00CBD2  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31752  00CBD6  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31753  00CBDA  6B85               	clrf	___flmul@grs& (0+255),b
 31754                           
 31755                           ; BSR set to: 0
 31756  00CBDC  5189               	movf	___flmul@aexp& (0+255),w,b
 31757  00CBDE  C08A  F080         	movff	___flmul@bexp,??___flmul
 31758  00CBE2  6B81               	clrf	(??___flmul+1)& (0+255),b
 31759  00CBE4  2780               	addwf	??___flmul& (0+255),f,b
 31760  00CBE6  0E00               	movlw	0
 31761  00CBE8  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 31762  00CBEA  0E82               	movlw	130
 31763  00CBEC  2580               	addwf	??___flmul& (0+255),w,b
 31764  00CBEE  6F8F               	movwf	___flmul@temp& (0+255),b
 31765  00CBF0  0EFF               	movlw	255
 31766  00CBF2  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 31767  00CBF4  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 31768  00CBF6  D00F               	goto	l3705
 31769  00CBF8                     
 31770                           ; BSR set to: 0
 31771                           
 31772                           ; BSR set to: 0
 31773  00CBF8  90D8               	bcf	status,0,c
 31774  00CBFA  378B               	rlcf	___flmul@prod& (0+255),f,b
 31775  00CBFC  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 31776  00CBFE  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 31777  00CC00  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 31778                           
 31779                           ; BSR set to: 0
 31780  00CC02  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 31781                           
 31782                           ; BSR set to: 0
 31783  00CC04  818B               	bsf	___flmul@prod& (0+255),0,b
 31784                           
 31785                           ; BSR set to: 0
 31786  00CC06  90D8               	bcf	status,0,c
 31787  00CC08  3785               	rlcf	___flmul@grs& (0+255),f,b
 31788  00CC0A  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 31789  00CC0C  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 31790  00CC0E  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 31791  00CC10  078F               	decf	___flmul@temp& (0+255),f,b
 31792  00CC12  A0D8               	btfss	status,0,c
 31793  00CC14  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 31794  00CC16                     l3705:
 31795                           
 31796                           ; BSR set to: 0
 31797                           
 31798                           ; BSR set to: 0
 31799  00CC16  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 31800  00CC18  D7EF               	goto	l3706
 31801                           
 31802                           ; BSR set to: 0
 31803                           
 31804                           ; BSR set to: 0
 31805  00CC1A  0E00               	movlw	0
 31806  00CC1C  6F89               	movwf	___flmul@aexp& (0+255),b
 31807                           
 31808                           ; BSR set to: 0
 31809  00CC1E  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 31810  00CC20  D016               	goto	l3712
 31811                           
 31812                           ; BSR set to: 0
 31813  00CC22  0EFF               	movlw	255
 31814  00CC24  1585               	andwf	___flmul@grs& (0+255),w,b
 31815  00CC26  6F80               	movwf	??___flmul& (0+255),b
 31816  00CC28  0EFF               	movlw	255
 31817  00CC2A  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 31818  00CC2C  6F81               	movwf	(??___flmul+1)& (0+255),b
 31819  00CC2E  0EFF               	movlw	255
 31820  00CC30  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 31821  00CC32  6F82               	movwf	(??___flmul+2)& (0+255),b
 31822  00CC34  0E7F               	movlw	127
 31823  00CC36  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 31824  00CC38  6F83               	movwf	(??___flmul+3)& (0+255),b
 31825  00CC3A  5180               	movf	??___flmul& (0+255),w,b
 31826  00CC3C  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 31827  00CC3E  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 31828  00CC40  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 31829  00CC42  A4D8               	btfss	status,2,c
 31830  00CC44  D002               	goto	u13310
 31831                           
 31832                           ; BSR set to: 0
 31833                           
 31834                           ; BSR set to: 0
 31835  00CC46  A18B               	btfss	___flmul@prod& (0+255),0,b
 31836  00CC48  D002               	goto	l3712
 31837  00CC4A                     u13310:
 31838                           
 31839                           ; BSR set to: 0
 31840  00CC4A  0E01               	movlw	1
 31841  00CC4C  6F89               	movwf	___flmul@aexp& (0+255),b
 31842  00CC4E                     l3712:
 31843                           
 31844                           ; BSR set to: 0
 31845                           
 31846                           ; BSR set to: 0
 31847                           
 31848                           ; BSR set to: 0
 31849  00CC4E  5189               	movf	___flmul@aexp& (0+255),w,b
 31850  00CC50  B4D8               	btfsc	status,2,c
 31851  00CC52  D01F               	goto	l3714
 31852                           
 31853                           ; BSR set to: 0
 31854  00CC54  0E01               	movlw	1
 31855  00CC56  278B               	addwf	___flmul@prod& (0+255),f,b
 31856  00CC58  0E00               	movlw	0
 31857  00CC5A  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31858  00CC5C  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31859  00CC5E  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31860                           
 31861                           ; BSR set to: 0
 31862  00CC60  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 31863  00CC62  D017               	goto	l3714
 31864                           
 31865                           ; BSR set to: 0
 31866  00CC64  C08B  F080         	movff	___flmul@prod,??___flmul
 31867  00CC68  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 31868  00CC6C  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 31869  00CC70  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 31870  00CC74  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 31871  00CC76  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 31872  00CC78  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 31873  00CC7A  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 31874  00CC7C  3380               	rrcf	??___flmul& (0+255),f,b
 31875  00CC7E  C080  F08B         	movff	??___flmul,___flmul@prod
 31876  00CC82  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 31877  00CC86  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 31878  00CC8A  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 31879                           
 31880                           ; BSR set to: 0
 31881  00CC8E  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 31882  00CC90  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 31883  00CC92                     l3714:
 31884                           
 31885                           ; BSR set to: 0
 31886                           
 31887                           ; BSR set to: 0
 31888                           
 31889                           ; BSR set to: 0
 31890  00CC92  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 31891  00CC94  D00D               	goto	l3715
 31892  00CC96  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31893  00CC98  E103               	bnz	u13340
 31894  00CC9A  298F               	incf	___flmul@temp& (0+255),w,b
 31895  00CC9C  A0D8               	btfss	status,0,c
 31896  00CC9E  D008               	goto	l3715
 31897  00CCA0                     u13340:
 31898                           
 31899                           ; BSR set to: 0
 31900  00CCA0  0E00               	movlw	0
 31901  00CCA2  6F8B               	movwf	___flmul@prod& (0+255),b
 31902  00CCA4  0E00               	movlw	0
 31903  00CCA6  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 31904  00CCA8  0E80               	movlw	128
 31905  00CCAA  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 31906  00CCAC  0E7F               	movlw	127
 31907  00CCAE  D020               	goto	L42
 31908  00CCB0                     l3715:
 31909                           
 31910                           ; BSR set to: 0
 31911                           
 31912                           ; BSR set to: 0
 31913  00CCB0  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 31914  00CCB2  D005               	goto	u13350
 31915  00CCB4  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31916  00CCB6  E10E               	bnz	l3717
 31917  00CCB8  058F               	decf	___flmul@temp& (0+255),w,b
 31918  00CCBA  B0D8               	btfsc	status,0,c
 31919  00CCBC  D00B               	goto	l3717
 31920  00CCBE                     u13350:
 31921                           
 31922                           ; BSR set to: 0
 31923  00CCBE  0E00               	movlw	0
 31924  00CCC0  6F8B               	movwf	___flmul@prod& (0+255),b
 31925  00CCC2  0E00               	movlw	0
 31926  00CCC4  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 31927  00CCC6  0E00               	movlw	0
 31928  00CCC8  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 31929  00CCCA  0E00               	movlw	0
 31930  00CCCC  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 31931  00CCCE  0E00               	movlw	0
 31932  00CCD0  6F84               	movwf	___flmul@sign& (0+255),b
 31933  00CCD2  D00F               	goto	l3718
 31934  00CCD4                     l3717:
 31935                           
 31936                           ; BSR set to: 0
 31937  00CCD4  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 31938                           
 31939                           ; BSR set to: 0
 31940  00CCD8  0EFF               	movlw	255
 31941  00CCDA  178B               	andwf	___flmul@prod& (0+255),f,b
 31942  00CCDC  0EFF               	movlw	255
 31943  00CCDE  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 31944  00CCE0  0E7F               	movlw	127
 31945  00CCE2  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 31946  00CCE4  0E00               	movlw	0
 31947  00CCE6  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 31948                           
 31949                           ; BSR set to: 0
 31950  00CCE8  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 31951                           
 31952                           ; BSR set to: 0
 31953  00CCEA  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 31954                           
 31955                           ; BSR set to: 0
 31956                           
 31957                           ; BSR set to: 0
 31958  00CCEC  90D8               	bcf	status,0,c
 31959  00CCEE  318A               	rrcf	___flmul@bexp& (0+255),w,b
 31960  00CCF0                     L42:
 31961  00CCF0  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 31962  00CCF2                     l3718:
 31963                           
 31964                           ; BSR set to: 0
 31965                           
 31966                           ; BSR set to: 0
 31967                           
 31968                           ; BSR set to: 0
 31969  00CCF2  5184               	movf	___flmul@sign& (0+255),w,b
 31970  00CCF4  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 31971                           
 31972                           ; BSR set to: 0
 31973  00CCF6  C08B  F078         	movff	___flmul@prod,?___flmul
 31974  00CCFA  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 31975  00CCFE  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 31976  00CD02  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 31977  00CD06  0012               	return	
 31978  00CD08                     __end_of___flmul:
 31979                           	opt stack 0
 31980                           tblptru	equ	0xFF8
 31981                           tblptrh	equ	0xFF7
 31982                           tblptrl	equ	0xFF6
 31983                           tablat	equ	0xFF5
 31984                           prodh	equ	0xFF4
 31985                           prodl	equ	0xFF3
 31986                           intcon	equ	0xFF2
 31987                           postinc0	equ	0xFEE
 31988                           wreg	equ	0xFE8
 31989                           indf1	equ	0xFE7
 31990                           postinc1	equ	0xFE6
 31991                           postdec1	equ	0xFE5
 31992                           plusw1	equ	0xFE3
 31993                           fsr1h	equ	0xFE2
 31994                           fsr1l	equ	0xFE1
 31995                           indf2	equ	0xFDF
 31996                           postinc2	equ	0xFDE
 31997                           postdec2	equ	0xFDD
 31998                           plusw2	equ	0xFDB
 31999                           fsr2h	equ	0xFDA
 32000                           fsr2l	equ	0xFD9
 32001                           status	equ	0xFD8
 32002                           
 32003 ;; *************** function ___fladd *****************
 32004 ;; Defined at:
 32005 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 32006 ;; Parameters:    Size  Location     Type
 32007 ;;  b               4   28[BANK0 ] unsigned char 
 32008 ;;  a               4   32[BANK0 ] unsigned char 
 32009 ;; Auto vars:     Size  Location     Type
 32010 ;;  grs             1   47[BANK0 ] unsigned char 
 32011 ;;  bexp            1   46[BANK0 ] unsigned char 
 32012 ;;  aexp            1   45[BANK0 ] unsigned char 
 32013 ;;  signs           1   44[BANK0 ] unsigned char 
 32014 ;; Return value:  Size  Location     Type
 32015 ;;                  4   28[BANK0 ] unsigned char 
 32016 ;; Registers used:
 32017 ;;		wreg, status,2, status,0
 32018 ;; Tracked objects:
 32019 ;;		On entry : 0/0
 32020 ;;		On exit  : 0/0
 32021 ;;		Unchanged: 0/0
 32022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32023 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32025 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32026 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32027 ;;Total ram usage:       20 bytes
 32028 ;; Hardware stack levels used:    1
 32029 ;; Hardware stack levels required when called:   10
 32030 ;; This function calls:
 32031 ;;		Nothing
 32032 ;; This function is called by:
 32033 ;;		__motor_steps_from_degrees_int
 32034 ;;		_motor_divide_jump_to_nearest
 32035 ;;		_adc_read_temperature
 32036 ;;		__motor_steps_from_degrees_float
 32037 ;; This function uses a non-reentrant model
 32038 ;;
 32039                           
 32040                           	psect	text121
 32041  00CD08                     __ptext121:
 32042                           	opt stack 0
 32043  00CD08                     ___fladd:
 32044                           	opt stack 17
 32045                           
 32046                           ; BSR set to: 0
 32047                           ;incstack = 0
 32048  00CD08  0100               	movlb	0	; () banked
 32049  00CD0A  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32050  00CD0C  0B80               	andlw	128
 32051  00CD0E  6F8C               	movwf	___fladd@signs& (0+255),b
 32052  00CD10  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32053  00CD12  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 32054  00CD14  6F8E               	movwf	___fladd@bexp& (0+255),b
 32055                           
 32056                           ; BSR set to: 0
 32057  00CD16  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 32058                           
 32059                           ; BSR set to: 0
 32060  00CD18  818E               	bsf	___fladd@bexp& (0+255),0,b
 32061                           
 32062                           ; BSR set to: 0
 32063                           
 32064                           ; BSR set to: 0
 32065  00CD1A  518E               	movf	___fladd@bexp& (0+255),w,b
 32066  00CD1C  B4D8               	btfsc	status,2,c
 32067  00CD1E  D00D               	goto	l3603
 32068                           
 32069                           ; BSR set to: 0
 32070  00CD20  298E               	incf	___fladd@bexp& (0+255),w,b
 32071  00CD22  A4D8               	btfss	status,2,c
 32072  00CD24  D008               	goto	l3604
 32073                           
 32074                           ; BSR set to: 0
 32075  00CD26  0E00               	movlw	0
 32076  00CD28  6F7C               	movwf	___fladd@b& (0+255),b
 32077  00CD2A  0E00               	movlw	0
 32078  00CD2C  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32079  00CD2E  0E00               	movlw	0
 32080  00CD30  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32081  00CD32  0E00               	movlw	0
 32082  00CD34  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32083  00CD36                     l3604:
 32084                           
 32085                           ; BSR set to: 0
 32086                           
 32087                           ; BSR set to: 0
 32088  00CD36  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32089  00CD38  D006               	goto	L43
 32090  00CD3A                     l3603:
 32091                           
 32092                           ; BSR set to: 0
 32093                           
 32094                           ; BSR set to: 0
 32095  00CD3A  0E00               	movlw	0
 32096  00CD3C  6F7C               	movwf	___fladd@b& (0+255),b
 32097  00CD3E  0E00               	movlw	0
 32098  00CD40  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32099  00CD42  0E00               	movlw	0
 32100  00CD44  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32101  00CD46                     L43:
 32102  00CD46  0E00               	movlw	0
 32103  00CD48  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32104                           
 32105                           ; BSR set to: 0
 32106                           
 32107                           ; BSR set to: 0
 32108  00CD4A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32109  00CD4C  0B80               	andlw	128
 32110  00CD4E  6F8D               	movwf	___fladd@aexp& (0+255),b
 32111                           
 32112                           ; BSR set to: 0
 32113  00CD50  518C               	movf	___fladd@signs& (0+255),w,b
 32114  00CD52  198D               	xorwf	___fladd@aexp& (0+255),w,b
 32115  00CD54  A4D8               	btfss	status,2,c
 32116                           
 32117                           ; BSR set to: 0
 32118  00CD56  8D8C               	bsf	___fladd@signs& (0+255),6,b
 32119                           
 32120                           ; BSR set to: 0
 32121                           
 32122                           ; BSR set to: 0
 32123  00CD58  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32124  00CD5A  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 32125  00CD5C  6F8D               	movwf	___fladd@aexp& (0+255),b
 32126                           
 32127                           ; BSR set to: 0
 32128  00CD5E  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 32129                           
 32130                           ; BSR set to: 0
 32131  00CD60  818D               	bsf	___fladd@aexp& (0+255),0,b
 32132                           
 32133                           ; BSR set to: 0
 32134                           
 32135                           ; BSR set to: 0
 32136  00CD62  518D               	movf	___fladd@aexp& (0+255),w,b
 32137  00CD64  B4D8               	btfsc	status,2,c
 32138  00CD66  D00D               	goto	l3608
 32139                           
 32140                           ; BSR set to: 0
 32141  00CD68  298D               	incf	___fladd@aexp& (0+255),w,b
 32142  00CD6A  A4D8               	btfss	status,2,c
 32143  00CD6C  D008               	goto	l3609
 32144                           
 32145                           ; BSR set to: 0
 32146  00CD6E  0E00               	movlw	0
 32147  00CD70  6F80               	movwf	___fladd@a& (0+255),b
 32148  00CD72  0E00               	movlw	0
 32149  00CD74  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32150  00CD76  0E00               	movlw	0
 32151  00CD78  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32152  00CD7A  0E00               	movlw	0
 32153  00CD7C  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32154  00CD7E                     l3609:
 32155                           
 32156                           ; BSR set to: 0
 32157                           
 32158                           ; BSR set to: 0
 32159  00CD7E  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 32160  00CD80  D006               	goto	L44
 32161  00CD82                     l3608:
 32162                           
 32163                           ; BSR set to: 0
 32164                           
 32165                           ; BSR set to: 0
 32166  00CD82  0E00               	movlw	0
 32167  00CD84  6F80               	movwf	___fladd@a& (0+255),b
 32168  00CD86  0E00               	movlw	0
 32169  00CD88  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32170  00CD8A  0E00               	movlw	0
 32171  00CD8C  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32172  00CD8E                     L44:
 32173  00CD8E  0E00               	movlw	0
 32174  00CD90  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32175                           
 32176                           ; BSR set to: 0
 32177                           
 32178                           ; BSR set to: 0
 32179  00CD92  518E               	movf	___fladd@bexp& (0+255),w,b
 32180  00CD94  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 32181  00CD96  B0D8               	btfsc	status,0,c
 32182  00CD98  D022               	goto	l3611
 32183                           
 32184                           ; BSR set to: 0
 32185  00CD9A  AD8C               	btfss	___fladd@signs& (0+255),6,b
 32186  00CD9C  D002               	goto	l3612
 32187                           
 32188                           ; BSR set to: 0
 32189  00CD9E  0E80               	movlw	128
 32190  00CDA0  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32191  00CDA2                     l3612:
 32192                           
 32193                           ; BSR set to: 0
 32194                           
 32195                           ; BSR set to: 0
 32196  00CDA2  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 32197                           
 32198                           ; BSR set to: 0
 32199  00CDA6  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32200                           
 32201                           ; BSR set to: 0
 32202  00CDAA  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 32203                           
 32204                           ; BSR set to: 0
 32205  00CDAE  C07C  F08F         	movff	___fladd@b,___fladd@grs
 32206                           
 32207                           ; BSR set to: 0
 32208  00CDB2  C080  F07C         	movff	___fladd@a,___fladd@b
 32209                           
 32210                           ; BSR set to: 0
 32211  00CDB6  C08F  F080         	movff	___fladd@grs,___fladd@a
 32212                           
 32213                           ; BSR set to: 0
 32214  00CDBA  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 32215                           
 32216                           ; BSR set to: 0
 32217  00CDBE  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 32218                           
 32219                           ; BSR set to: 0
 32220  00CDC2  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 32221                           
 32222                           ; BSR set to: 0
 32223  00CDC6  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 32224                           
 32225                           ; BSR set to: 0
 32226  00CDCA  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 32227                           
 32228                           ; BSR set to: 0
 32229  00CDCE  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 32230                           
 32231                           ; BSR set to: 0
 32232  00CDD2  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 32233                           
 32234                           ; BSR set to: 0
 32235  00CDD6  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 32236                           
 32237                           ; BSR set to: 0
 32238  00CDDA  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 32239  00CDDE                     l3611:
 32240                           
 32241                           ; BSR set to: 0
 32242                           
 32243                           ; BSR set to: 0
 32244  00CDDE  0E00               	movlw	0
 32245  00CDE0  6F8F               	movwf	___fladd@grs& (0+255),b
 32246                           
 32247                           ; BSR set to: 0
 32248  00CDE2  518E               	movf	___fladd@bexp& (0+255),w,b
 32249  00CDE4  6F84               	movwf	??___fladd& (0+255),b
 32250  00CDE6  6B85               	clrf	(??___fladd+1)& (0+255),b
 32251  00CDE8  1F84               	comf	??___fladd& (0+255),f,b
 32252  00CDEA  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32253  00CDEC  4B84               	infsnz	??___fladd& (0+255),f,b
 32254  00CDEE  2B85               	incf	(??___fladd+1)& (0+255),f,b
 32255  00CDF0  518D               	movf	___fladd@aexp& (0+255),w,b
 32256  00CDF2  6F86               	movwf	(??___fladd+2)& (0+255),b
 32257  00CDF4  6B87               	clrf	(??___fladd+3)& (0+255),b
 32258  00CDF6  5184               	movf	??___fladd& (0+255),w,b
 32259  00CDF8  2786               	addwf	(??___fladd+2)& (0+255),f,b
 32260  00CDFA  5185               	movf	(??___fladd+1)& (0+255),w,b
 32261  00CDFC  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32262  00CDFE  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 32263  00CE00  D02C               	goto	l3615
 32264  00CE02  5187               	movf	(??___fladd+3)& (0+255),w,b
 32265  00CE04  E104               	bnz	u14700
 32266  00CE06  0E1A               	movlw	26
 32267  00CE08  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 32268  00CE0A  A0D8               	btfss	status,0,c
 32269  00CE0C  D026               	goto	l3615
 32270  00CE0E                     u14700:
 32271                           
 32272                           ; BSR set to: 0
 32273  00CE0E  517C               	movf	___fladd@b& (0+255),w,b
 32274  00CE10  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32275  00CE12  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32276  00CE14  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32277  00CE16  B4D8               	btfsc	status,2,c
 32278  00CE18  D002               	goto	u14710
 32279  00CE1A  0E01               	movlw	1
 32280  00CE1C  D001               	goto	u14720
 32281  00CE1E                     u14710:
 32282  00CE1E  0E00               	movlw	0
 32283  00CE20                     u14720:
 32284  00CE20  6F8F               	movwf	___fladd@grs& (0+255),b
 32285                           
 32286                           ; BSR set to: 0
 32287  00CE22  0E00               	movlw	0
 32288  00CE24  6F7C               	movwf	___fladd@b& (0+255),b
 32289  00CE26  0E00               	movlw	0
 32290  00CE28  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32291  00CE2A  0E00               	movlw	0
 32292  00CE2C  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32293  00CE2E  0E00               	movlw	0
 32294  00CE30  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32295                           
 32296                           ; BSR set to: 0
 32297  00CE32  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32298  00CE36  D015               	goto	u14750
 32299  00CE38                     l3616:
 32300                           
 32301                           ; BSR set to: 0
 32302  00CE38  A18F               	btfss	___fladd@grs& (0+255),0,b
 32303  00CE3A  D005               	goto	l3617
 32304                           
 32305                           ; BSR set to: 0
 32306  00CE3C  90D8               	bcf	status,0,c
 32307  00CE3E  318F               	rrcf	___fladd@grs& (0+255),w,b
 32308  00CE40  0901               	iorlw	1
 32309  00CE42  6F8F               	movwf	___fladd@grs& (0+255),b
 32310  00CE44  D002               	goto	l3618
 32311  00CE46                     l3617:
 32312                           
 32313                           ; BSR set to: 0
 32314                           
 32315                           ; BSR set to: 0
 32316  00CE46  90D8               	bcf	status,0,c
 32317  00CE48  338F               	rrcf	___fladd@grs& (0+255),f,b
 32318  00CE4A                     l3618:
 32319                           
 32320                           ; BSR set to: 0
 32321                           
 32322                           ; BSR set to: 0
 32323  00CE4A  B17C               	btfsc	___fladd@b& (0+255),0,b
 32324                           
 32325                           ; BSR set to: 0
 32326  00CE4C  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32327                           
 32328                           ; BSR set to: 0
 32329                           
 32330                           ; BSR set to: 0
 32331  00CE4E  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32332  00CE50  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32333  00CE52  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32334  00CE54  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32335  00CE56  337C               	rrcf	___fladd@b& (0+255),f,b
 32336                           
 32337                           ; BSR set to: 0
 32338  00CE58  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32339  00CE5A                     l3615:
 32340                           
 32341                           ; BSR set to: 0
 32342  00CE5A  518D               	movf	___fladd@aexp& (0+255),w,b
 32343  00CE5C  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 32344  00CE5E  A0D8               	btfss	status,0,c
 32345  00CE60  D7EB               	goto	l3616
 32346  00CE62                     u14750:
 32347                           
 32348                           ; BSR set to: 0
 32349                           
 32350                           ; BSR set to: 0
 32351  00CE62  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 32352  00CE64  D028               	goto	l3621
 32353                           
 32354                           ; BSR set to: 0
 32355  00CE66  518E               	movf	___fladd@bexp& (0+255),w,b
 32356  00CE68  A4D8               	btfss	status,2,c
 32357  00CE6A  D009               	goto	l3622
 32358                           
 32359                           ; BSR set to: 0
 32360  00CE6C  0E00               	movlw	0
 32361  00CE6E  6F7C               	movwf	?___fladd& (0+255),b
 32362  00CE70  0E00               	movlw	0
 32363  00CE72  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32364  00CE74  0E00               	movlw	0
 32365  00CE76  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32366  00CE78  0E00               	movlw	0
 32367  00CE7A  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32368                           
 32369                           ; BSR set to: 0
 32370  00CE7C  0012               	return	
 32371  00CE7E                     l3622:
 32372                           
 32373                           ; BSR set to: 0
 32374                           
 32375                           ; BSR set to: 0
 32376  00CE7E  5180               	movf	___fladd@a& (0+255),w,b
 32377  00CE80  277C               	addwf	___fladd@b& (0+255),f,b
 32378  00CE82  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32379  00CE84  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32380  00CE86  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32381  00CE88  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32382  00CE8A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32383  00CE8C  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32384                           
 32385                           ; BSR set to: 0
 32386  00CE8E  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32387  00CE90  D082               	goto	u14880
 32388                           
 32389                           ; BSR set to: 0
 32390  00CE92  A18F               	btfss	___fladd@grs& (0+255),0,b
 32391  00CE94  D005               	goto	l3625
 32392                           
 32393                           ; BSR set to: 0
 32394  00CE96  90D8               	bcf	status,0,c
 32395  00CE98  318F               	rrcf	___fladd@grs& (0+255),w,b
 32396  00CE9A  0901               	iorlw	1
 32397  00CE9C  6F8F               	movwf	___fladd@grs& (0+255),b
 32398  00CE9E  D002               	goto	l3626
 32399  00CEA0                     l3625:
 32400                           
 32401                           ; BSR set to: 0
 32402                           
 32403                           ; BSR set to: 0
 32404  00CEA0  90D8               	bcf	status,0,c
 32405  00CEA2  338F               	rrcf	___fladd@grs& (0+255),f,b
 32406  00CEA4                     l3626:
 32407                           
 32408                           ; BSR set to: 0
 32409                           
 32410                           ; BSR set to: 0
 32411  00CEA4  B17C               	btfsc	___fladd@b& (0+255),0,b
 32412                           
 32413                           ; BSR set to: 0
 32414  00CEA6  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32415                           
 32416                           ; BSR set to: 0
 32417                           
 32418                           ; BSR set to: 0
 32419  00CEA8  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32420  00CEAA  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32421  00CEAC  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32422  00CEAE  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32423  00CEB0  337C               	rrcf	___fladd@b& (0+255),f,b
 32424                           
 32425                           ; BSR set to: 0
 32426  00CEB2  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32427                           
 32428                           ; BSR set to: 0
 32429  00CEB4  D070               	goto	u14880
 32430  00CEB6                     l3621:
 32431                           
 32432                           ; BSR set to: 0
 32433                           
 32434                           ; BSR set to: 0
 32435  00CEB6  5180               	movf	___fladd@a& (0+255),w,b
 32436  00CEB8  5D7C               	subwf	___fladd@b& (0+255),w,b
 32437  00CEBA  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32438  00CEBC  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 32439  00CEBE  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32440  00CEC0  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 32441  00CEC2  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32442  00CEC4  0A80               	xorlw	128
 32443  00CEC6  6F84               	movwf	??___fladd& (0+255),b
 32444  00CEC8  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32445  00CECA  0A80               	xorlw	128
 32446  00CECC  5984               	subwfb	??___fladd& (0+255),w,b
 32447  00CECE  B0D8               	btfsc	status,0,c
 32448  00CED0  D036               	goto	l3629
 32449                           
 32450                           ; BSR set to: 0
 32451  00CED2  C07C  F084         	movff	___fladd@b,??___fladd
 32452  00CED6  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32453  00CEDA  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32454  00CEDE  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32455  00CEE2  1F84               	comf	??___fladd& (0+255),f,b
 32456  00CEE4  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32457  00CEE6  1F86               	comf	(??___fladd+2)& (0+255),f,b
 32458  00CEE8  1F87               	comf	(??___fladd+3)& (0+255),f,b
 32459  00CEEA  2B84               	incf	??___fladd& (0+255),f,b
 32460  00CEEC  0E00               	movlw	0
 32461  00CEEE  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 32462  00CEF0  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 32463  00CEF2  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32464  00CEF4  5180               	movf	___fladd@a& (0+255),w,b
 32465  00CEF6  2584               	addwf	??___fladd& (0+255),w,b
 32466  00CEF8  6F88               	movwf	(??___fladd+4)& (0+255),b
 32467  00CEFA  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32468  00CEFC  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 32469  00CEFE  6F89               	movwf	(??___fladd+5)& (0+255),b
 32470  00CF00  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32471  00CF02  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 32472  00CF04  6F8A               	movwf	(??___fladd+6)& (0+255),b
 32473  00CF06  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32474  00CF08  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 32475  00CF0A  6F8B               	movwf	(??___fladd+7)& (0+255),b
 32476  00CF0C  0EFF               	movlw	255
 32477  00CF0E  2588               	addwf	(??___fladd+4)& (0+255),w,b
 32478  00CF10  6F7C               	movwf	___fladd@b& (0+255),b
 32479  00CF12  0EFF               	movlw	255
 32480  00CF14  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 32481  00CF16  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32482  00CF18  0EFF               	movlw	255
 32483  00CF1A  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 32484  00CF1C  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32485  00CF1E  0EFF               	movlw	255
 32486  00CF20  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 32487  00CF22  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32488  00CF24  0E80               	movlw	128
 32489  00CF26  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32490                           
 32491                           ; BSR set to: 0
 32492  00CF28  6D8F               	negf	___fladd@grs& (0+255),b
 32493                           
 32494                           ; BSR set to: 0
 32495  00CF2A  518F               	movf	___fladd@grs& (0+255),w,b
 32496  00CF2C  A4D8               	btfss	status,2,c
 32497  00CF2E  D00F               	goto	l3631
 32498                           
 32499                           ; BSR set to: 0
 32500  00CF30  0E01               	movlw	1
 32501  00CF32  277C               	addwf	___fladd@b& (0+255),f,b
 32502  00CF34  0E00               	movlw	0
 32503  00CF36  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32504  00CF38  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32505  00CF3A  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32506                           
 32507                           ; BSR set to: 0
 32508  00CF3C  D008               	goto	l3631
 32509  00CF3E                     l3629:
 32510                           
 32511                           ; BSR set to: 0
 32512                           
 32513                           ; BSR set to: 0
 32514  00CF3E  5180               	movf	___fladd@a& (0+255),w,b
 32515  00CF40  5F7C               	subwf	___fladd@b& (0+255),f,b
 32516  00CF42  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32517  00CF44  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 32518  00CF46  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32519  00CF48  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 32520  00CF4A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32521  00CF4C  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 32522  00CF4E                     l3631:
 32523                           
 32524                           ; BSR set to: 0
 32525  00CF4E  517C               	movf	___fladd@b& (0+255),w,b
 32526  00CF50  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32527  00CF52  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32528  00CF54  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32529  00CF56  A4D8               	btfss	status,2,c
 32530  00CF58  D01C               	goto	l3638
 32531                           
 32532                           ; BSR set to: 0
 32533  00CF5A  518F               	movf	___fladd@grs& (0+255),w,b
 32534  00CF5C  A4D8               	btfss	status,2,c
 32535  00CF5E  D019               	goto	l3638
 32536                           
 32537                           ; BSR set to: 0
 32538  00CF60  0E00               	movlw	0
 32539  00CF62  6F7C               	movwf	?___fladd& (0+255),b
 32540  00CF64  0E00               	movlw	0
 32541  00CF66  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32542  00CF68  0E00               	movlw	0
 32543  00CF6A  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32544  00CF6C  0E00               	movlw	0
 32545  00CF6E  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32546                           
 32547                           ; BSR set to: 0
 32548  00CF70  0012               	return	
 32549  00CF72                     
 32550                           ; BSR set to: 0
 32551                           
 32552                           ; BSR set to: 0
 32553  00CF72  90D8               	bcf	status,0,c
 32554  00CF74  377C               	rlcf	___fladd@b& (0+255),f,b
 32555  00CF76  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 32556  00CF78  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 32557  00CF7A  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 32558                           
 32559                           ; BSR set to: 0
 32560  00CF7C  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 32561                           
 32562                           ; BSR set to: 0
 32563  00CF7E  817C               	bsf	___fladd@b& (0+255),0,b
 32564                           
 32565                           ; BSR set to: 0
 32566                           
 32567                           ; BSR set to: 0
 32568  00CF80  A18F               	btfss	___fladd@grs& (0+255),0,b
 32569  00CF82  D002               	goto	l3636
 32570                           
 32571                           ; BSR set to: 0
 32572  00CF84  80D8               	bsf	status,0,c
 32573  00CF86  D001               	goto	L45
 32574  00CF88                     l3636:
 32575                           
 32576                           ; BSR set to: 0
 32577                           
 32578                           ; BSR set to: 0
 32579  00CF88  90D8               	bcf	status,0,c
 32580  00CF8A                     L45:
 32581  00CF8A  378F               	rlcf	___fladd@grs& (0+255),f,b
 32582                           
 32583                           ; BSR set to: 0
 32584                           
 32585                           ; BSR set to: 0
 32586  00CF8C  518E               	movf	___fladd@bexp& (0+255),w,b
 32587  00CF8E  A4D8               	btfss	status,2,c
 32588                           
 32589                           ; BSR set to: 0
 32590  00CF90  078E               	decf	___fladd@bexp& (0+255),f,b
 32591  00CF92                     l3638:
 32592                           
 32593                           ; BSR set to: 0
 32594                           
 32595                           ; BSR set to: 0
 32596                           
 32597                           ; BSR set to: 0
 32598  00CF92  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 32599  00CF94  D7EE               	goto	l3634
 32600  00CF96                     u14880:
 32601                           
 32602                           ; BSR set to: 0
 32603                           
 32604                           ; BSR set to: 0
 32605                           
 32606                           ; BSR set to: 0
 32607  00CF96  0E00               	movlw	0
 32608  00CF98  6F8D               	movwf	___fladd@aexp& (0+255),b
 32609                           
 32610                           ; BSR set to: 0
 32611  00CF9A  AF8F               	btfss	___fladd@grs& (0+255),7,b
 32612  00CF9C  D00A               	goto	l3643
 32613                           
 32614                           ; BSR set to: 0
 32615  00CF9E  C08F  F084         	movff	___fladd@grs,??___fladd
 32616  00CFA2  0E7F               	movlw	127
 32617  00CFA4  1784               	andwf	??___fladd& (0+255),f,b
 32618  00CFA6  A4D8               	btfss	status,2,c
 32619  00CFA8  D002               	goto	u14910
 32620                           
 32621                           ; BSR set to: 0
 32622                           
 32623                           ; BSR set to: 0
 32624  00CFAA  A17C               	btfss	___fladd@b& (0+255),0,b
 32625  00CFAC  D002               	goto	l3643
 32626  00CFAE                     u14910:
 32627                           
 32628                           ; BSR set to: 0
 32629  00CFAE  0E01               	movlw	1
 32630  00CFB0  6F8D               	movwf	___fladd@aexp& (0+255),b
 32631  00CFB2                     l3643:
 32632                           
 32633                           ; BSR set to: 0
 32634                           
 32635                           ; BSR set to: 0
 32636                           
 32637                           ; BSR set to: 0
 32638  00CFB2  518D               	movf	___fladd@aexp& (0+255),w,b
 32639  00CFB4  B4D8               	btfsc	status,2,c
 32640  00CFB6  D020               	goto	l3646
 32641                           
 32642                           ; BSR set to: 0
 32643  00CFB8  0E01               	movlw	1
 32644  00CFBA  277C               	addwf	___fladd@b& (0+255),f,b
 32645  00CFBC  0E00               	movlw	0
 32646  00CFBE  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32647  00CFC0  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32648  00CFC2  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32649                           
 32650                           ; BSR set to: 0
 32651  00CFC4  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32652  00CFC6  D018               	goto	l3646
 32653                           
 32654                           ; BSR set to: 0
 32655  00CFC8  C07C  F084         	movff	___fladd@b,??___fladd
 32656  00CFCC  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32657  00CFD0  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32658  00CFD4  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32659  00CFD8  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 32660  00CFDA  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 32661  00CFDC  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 32662  00CFDE  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 32663  00CFE0  3384               	rrcf	??___fladd& (0+255),f,b
 32664  00CFE2  C084  F07C         	movff	??___fladd,___fladd@b
 32665  00CFE6  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 32666  00CFEA  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 32667  00CFEE  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 32668  00CFF2  298E               	incf	___fladd@bexp& (0+255),w,b
 32669  00CFF4  A4D8               	btfss	status,2,c
 32670                           
 32671                           ; BSR set to: 0
 32672  00CFF6  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32673  00CFF8                     l3646:
 32674                           
 32675                           ; BSR set to: 0
 32676                           
 32677                           ; BSR set to: 0
 32678                           
 32679                           ; BSR set to: 0
 32680                           
 32681                           ; BSR set to: 0
 32682  00CFF8  298E               	incf	___fladd@bexp& (0+255),w,b
 32683  00CFFA  B4D8               	btfsc	status,2,c
 32684  00CFFC  D003               	goto	u14960
 32685                           
 32686                           ; BSR set to: 0
 32687  00CFFE  518E               	movf	___fladd@bexp& (0+255),w,b
 32688  00D000  A4D8               	btfss	status,2,c
 32689  00D002  D00D               	goto	l3650
 32690  00D004                     u14960:
 32691                           
 32692                           ; BSR set to: 0
 32693                           
 32694                           ; BSR set to: 0
 32695  00D004  0E00               	movlw	0
 32696  00D006  6F7C               	movwf	___fladd@b& (0+255),b
 32697  00D008  0E00               	movlw	0
 32698  00D00A  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32699  00D00C  0E00               	movlw	0
 32700  00D00E  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32701  00D010  0E00               	movlw	0
 32702  00D012  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32703  00D014  518E               	movf	___fladd@bexp& (0+255),w,b
 32704  00D016  A4D8               	btfss	status,2,c
 32705  00D018  D002               	goto	l3650
 32706                           
 32707                           ; BSR set to: 0
 32708  00D01A  0E00               	movlw	0
 32709  00D01C  6F8C               	movwf	___fladd@signs& (0+255),b
 32710  00D01E                     l3650:
 32711                           
 32712                           ; BSR set to: 0
 32713                           
 32714                           ; BSR set to: 0
 32715                           
 32716                           ; BSR set to: 0
 32717  00D01E  A18E               	btfss	___fladd@bexp& (0+255),0,b
 32718  00D020  D002               	goto	l3651
 32719                           
 32720                           ; BSR set to: 0
 32721  00D022  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32722  00D024  D001               	goto	l3652
 32723  00D026                     l3651:
 32724                           
 32725                           ; BSR set to: 0
 32726                           
 32727                           ; BSR set to: 0
 32728  00D026  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 32729  00D028                     l3652:
 32730                           
 32731                           ; BSR set to: 0
 32732                           
 32733                           ; BSR set to: 0
 32734  00D028  90D8               	bcf	status,0,c
 32735  00D02A  318E               	rrcf	___fladd@bexp& (0+255),w,b
 32736  00D02C  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32737                           
 32738                           ; BSR set to: 0
 32739  00D02E  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 32740                           
 32741                           ; BSR set to: 0
 32742  00D030  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 32743                           
 32744                           ; BSR set to: 0
 32745                           
 32746                           ; BSR set to: 0
 32747  00D032  C07C  F07C         	movff	___fladd@b,?___fladd
 32748  00D036  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 32749  00D03A  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 32750  00D03E  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 32751  00D042  0012               	return	
 32752  00D044                     __end_of___fladd:
 32753                           	opt stack 0
 32754                           tblptru	equ	0xFF8
 32755                           tblptrh	equ	0xFF7
 32756                           tblptrl	equ	0xFF6
 32757                           tablat	equ	0xFF5
 32758                           prodh	equ	0xFF4
 32759                           prodl	equ	0xFF3
 32760                           intcon	equ	0xFF2
 32761                           postinc0	equ	0xFEE
 32762                           wreg	equ	0xFE8
 32763                           indf1	equ	0xFE7
 32764                           postinc1	equ	0xFE6
 32765                           postdec1	equ	0xFE5
 32766                           plusw1	equ	0xFE3
 32767                           fsr1h	equ	0xFE2
 32768                           fsr1l	equ	0xFE1
 32769                           indf2	equ	0xFDF
 32770                           postinc2	equ	0xFDE
 32771                           postdec2	equ	0xFDD
 32772                           plusw2	equ	0xFDB
 32773                           fsr2h	equ	0xFDA
 32774                           fsr2l	equ	0xFD9
 32775                           status	equ	0xFD8
 32776                           
 32777 ;; *************** function _USBDeviceInit *****************
 32778 ;; Defined at:
 32779 ;;		line 277 in file "usb_device.c"
 32780 ;; Parameters:    Size  Location     Type
 32781 ;;		None
 32782 ;; Auto vars:     Size  Location     Type
 32783 ;;  i               1    8[BANK0 ] unsigned char 
 32784 ;; Return value:  Size  Location     Type
 32785 ;;                  1    wreg      void 
 32786 ;; Registers used:
 32787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32788 ;; Tracked objects:
 32789 ;;		On entry : 0/0
 32790 ;;		On exit  : 0/0
 32791 ;;		Unchanged: 0/0
 32792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32797 ;;Total ram usage:        1 bytes
 32798 ;; Hardware stack levels used:    1
 32799 ;; Hardware stack levels required when called:   11
 32800 ;; This function calls:
 32801 ;;		_memset
 32802 ;; This function is called by:
 32803 ;;		_main
 32804 ;; This function uses a non-reentrant model
 32805 ;;
 32806                           
 32807                           	psect	text122
 32808  00FF64                     __ptext122:
 32809                           	opt stack 0
 32810  00FF64                     _USBDeviceInit:
 32811                           	opt stack 19
 32812                           
 32813                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 32814                           
 32815                           ; BSR set to: 0
 32816                           ;incstack = 0
 32817  00FF64  98A0               	bcf	4000,4,c	;volatile
 32818                           
 32819                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 32820  00FF66  0E00               	movlw	0
 32821  00FF68  6E63               	movwf	3939,c	;volatile
 32822                           
 32823                           ;usb_device.c: 291: {UIR = 0;};
 32824  00FF6A  0E00               	movlw	0
 32825  00FF6C  6E62               	movwf	3938,c	;volatile
 32826                           
 32827                           ;usb_device.c: 294: UEP0 = 0;
 32828  00FF6E  0E00               	movlw	0
 32829  00FF70  010F               	movlb	15	; () banked
 32830  00FF72  6F26               	movwf	38,b	;volatile
 32831                           
 32832                           ; BSR set to: 15
 32833                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 32834  00FF74  0E27               	movlw	39
 32835  00FF76  0100               	movlb	0	; () banked
 32836  00FF78  6F60               	movwf	memset@p1& (0+255),b
 32837  00FF7A  0E0F               	movlw	15
 32838  00FF7C  6F61               	movwf	(memset@p1+1)& (0+255),b
 32839  00FF7E  0E00               	movlw	0
 32840  00FF80  6F63               	movwf	(memset@c+1)& (0+255),b
 32841  00FF82  0E00               	movlw	0
 32842  00FF84  6F62               	movwf	memset@c& (0+255),b
 32843  00FF86  0E00               	movlw	0
 32844  00FF88  6F65               	movwf	(memset@n+1)& (0+255),b
 32845  00FF8A  0E02               	movlw	2
 32846  00FF8C  6F64               	movwf	memset@n& (0+255),b
 32847  00FF8E  ECAA  F0AD         	call	_memset	;wreg free
 32848                           
 32849                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 32850  00FF92  0E16               	movlw	22
 32851  00FF94  010F               	movlb	15	; () banked
 32852  00FF96  6F39               	movwf	57,b	;volatile
 32853                           
 32854                           ; BSR set to: 15
 32855  00FF98  0E9F               	movlw	159
 32856  00FF9A  6F37               	movwf	55,b	;volatile
 32857                           
 32858                           ; BSR set to: 15
 32859  00FF9C  0E7B               	movlw	123
 32860  00FF9E  6F36               	movwf	54,b	;volatile
 32861                           
 32862                           ; BSR set to: 15
 32863                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 32864  00FFA0  0E00               	movlw	0
 32865  00FFA2  0100               	movlb	0	; () banked
 32866  00FFA4  6F68               	movwf	USBDeviceInit@i& (0+255),b
 32867  00FFA6                     l18034:
 32868                           
 32869                           ; BSR set to: 0
 32870  00FFA6  0E0B               	movlw	11
 32871  00FFA8  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 32872  00FFAA  D001               	goto	l145
 32873  00FFAC  D00E               	goto	u17430
 32874  00FFAE                     l145:
 32875                           
 32876                           ; BSR set to: 0
 32877                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 32878                           
 32879                           ; BSR set to: 0
 32880  00FFAE  5168               	movf	USBDeviceInit@i& (0+255),w,b
 32881  00FFB0  0D04               	mullw	4
 32882  00FFB2  0E00               	movlw	0
 32883  00FFB4  24F3               	addwf	prodl,w,c
 32884  00FFB6  6ED9               	movwf	fsr2l,c
 32885  00FFB8  0E0D               	movlw	13
 32886  00FFBA  20F4               	addwfc	prodh,w,c
 32887  00FFBC  6EDA               	movwf	fsr2h,c
 32888  00FFBE  6ADE               	clrf	postinc2,c
 32889  00FFC0  6ADE               	clrf	postinc2,c
 32890  00FFC2  6ADE               	clrf	postinc2,c
 32891  00FFC4  6ADD               	clrf	postdec2,c
 32892                           
 32893                           ; BSR set to: 0
 32894  00FFC6  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 32895  00FFC8  D7EE               	goto	l18034
 32896  00FFCA                     u17430:
 32897                           
 32898                           ; BSR set to: 0
 32899                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 32900  00FFCA  8C65               	bsf	3941,6,c	;volatile
 32901                           
 32902                           ; BSR set to: 0
 32903                           ;usb_device.c: 316: UADDR = 0x00;
 32904  00FFCC  0E00               	movlw	0
 32905  00FFCE  010F               	movlb	15	; () banked
 32906  00FFD0  6F38               	movwf	56,b	;volatile
 32907                           
 32908                           ; BSR set to: 15
 32909                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 32910  00FFD2  9865               	bcf	3941,4,c	;volatile
 32911                           
 32912                           ; BSR set to: 15
 32913                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 32914  00FFD4  9C65               	bcf	3941,6,c	;volatile
 32915  00FFD6                     
 32916                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 32917                           
 32918                           ; BSR set to: 15
 32919  00FFD6  9662               	bcf	3938,3,c	;volatile
 32920                           
 32921                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 32922  00FFD8  0E00               	movlw	0
 32923  00FFDA  0101               	movlb	1	; () banked
 32924  00FFDC  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 32925                           
 32926                           ; BSR set to: 1
 32927                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 32928  00FFDE  0E00               	movlw	0
 32929  00FFE0  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 32930                           
 32931                           ; BSR set to: 1
 32932                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 32933  00FFE2  0E00               	movlw	0
 32934  00FFE4  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 32935  00FFE6  0E00               	movlw	0
 32936  00FFE8  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 32937                           
 32938                           ; BSR set to: 1
 32939                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 32940  00FFEA  B662               	btfsc	3938,3,c	;volatile
 32941  00FFEC  D7F4               	goto	l147
 32942                           
 32943                           ; BSR set to: 1
 32944                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 32945                           
 32946                           ; BSR set to: 1
 32947  00FFEE  0E01               	movlw	1
 32948  00FFF0  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 32949                           
 32950                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 32951  00FFF2  0E01               	movlw	1
 32952  00FFF4  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 32953                           
 32954                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 32955  00FFF6  0E00               	movlw	0
 32956  00FFF8  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 32957                           
 32958                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 32959  00FFFA  0E00               	movlw	0
 32960  00FFFC  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 32961                           
 32962                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 32963  00FFFE  0E00               	movlw	0
 32964  010000  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 32965                           
 32966                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 32967  010002  0E00               	movlw	0
 32968  010004  0100               	movlb	0	; () banked
 32969  010006  6F68               	movwf	USBDeviceInit@i& (0+255),b
 32970  010008                     l18062:
 32971                           
 32972                           ; BSR set to: 0
 32973  010008  0E02               	movlw	2
 32974  01000A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 32975  01000C  D001               	goto	l149
 32976  01000E  D02E               	goto	u17460
 32977  010010                     l149:
 32978                           
 32979                           ; BSR set to: 0
 32980                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 32981                           
 32982                           ; BSR set to: 0
 32983  010010  5168               	movf	USBDeviceInit@i& (0+255),w,b
 32984  010012  0D02               	mullw	2
 32985  010014  0E0F               	movlw	low _pBDTEntryIn
 32986  010016  24F3               	addwf	prodl,w,c
 32987  010018  6ED9               	movwf	fsr2l,c
 32988  01001A  0E01               	movlw	high _pBDTEntryIn
 32989  01001C  20F4               	addwfc	prodh,w,c
 32990  01001E  6EDA               	movwf	fsr2h,c
 32991  010020  0E00               	movlw	0
 32992  010022  6EDE               	movwf	postinc2,c
 32993  010024  0E00               	movlw	0
 32994  010026  6EDD               	movwf	postdec2,c
 32995                           
 32996                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 32997  010028  5168               	movf	USBDeviceInit@i& (0+255),w,b
 32998  01002A  0D02               	mullw	2
 32999  01002C  0E15               	movlw	low _pBDTEntryOut
 33000  01002E  24F3               	addwf	prodl,w,c
 33001  010030  6ED9               	movwf	fsr2l,c
 33002  010032  0E01               	movlw	high _pBDTEntryOut
 33003  010034  20F4               	addwfc	prodh,w,c
 33004  010036  6EDA               	movwf	fsr2h,c
 33005  010038  0E00               	movlw	0
 33006  01003A  6EDE               	movwf	postinc2,c
 33007  01003C  0E00               	movlw	0
 33008  01003E  6EDD               	movwf	postdec2,c
 33009                           
 33010                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 33011  010040  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33012  010042  0D01               	mullw	1
 33013  010044  0E34               	movlw	low _ep_data_in
 33014  010046  24F3               	addwf	prodl,w,c
 33015  010048  6ED9               	movwf	fsr2l,c
 33016  01004A  0E01               	movlw	high _ep_data_in
 33017  01004C  20F4               	addwfc	prodh,w,c
 33018  01004E  6EDA               	movwf	fsr2h,c
 33019  010050  0E00               	movlw	0
 33020  010052  6EDF               	movwf	indf2,c
 33021                           
 33022                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 33023  010054  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33024  010056  0D01               	mullw	1
 33025  010058  0E31               	movlw	low _ep_data_out
 33026  01005A  24F3               	addwf	prodl,w,c
 33027  01005C  6ED9               	movwf	fsr2l,c
 33028  01005E  0E01               	movlw	high _ep_data_out
 33029  010060  20F4               	addwfc	prodh,w,c
 33030  010062  6EDA               	movwf	fsr2h,c
 33031  010064  0E00               	movlw	0
 33032  010066  6EDF               	movwf	indf2,c
 33033                           
 33034                           ; BSR set to: 0
 33035  010068  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33036  01006A  D7CE               	goto	l18062
 33037  01006C                     u17460:
 33038                           
 33039                           ; BSR set to: 0
 33040                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33041                           
 33042                           ; BSR set to: 0
 33043  01006C  0E08               	movlw	8
 33044  01006E  0101               	movlb	1	; () banked
 33045  010070  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 33046  010072  0E0D               	movlw	13
 33047  010074  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33048                           
 33049                           ; BSR set to: 1
 33050                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 33051  010076  0E16               	movlw	22
 33052  010078  010F               	movlb	15	; () banked
 33053  01007A  6F26               	movwf	38,b	;volatile
 33054                           
 33055                           ; BSR set to: 15
 33056                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 33057  01007C  0E0D               	movlw	13
 33058  01007E  010D               	movlb	13	; () banked
 33059  010080  6F03               	movwf	3,b	;volatile
 33060  010082  0E30               	movlw	48
 33061  010084  6F02               	movwf	2,b	;volatile
 33062                           
 33063                           ; BSR set to: 13
 33064                           ;usb_device.c: 359: BDT[0].CNT = 8;
 33065  010086  0E08               	movlw	8
 33066  010088  6F01               	movwf	1,b	;volatile
 33067                           
 33068                           ; BSR set to: 13
 33069                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 33070  01008A  0E04               	movlw	4
 33071  01008C  6F00               	movwf	0,b	;volatile
 33072                           
 33073                           ; BSR set to: 13
 33074                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 33075  01008E  8F00               	bsf	0,7,b	;volatile
 33076                           
 33077                           ; BSR set to: 13
 33078                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 33079  010090  0E00               	movlw	0
 33080  010092  0101               	movlb	1	; () banked
 33081  010094  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 33082                           
 33083                           ; BSR set to: 1
 33084                           ;usb_device.c: 366: USB1msTickCount = 0;
 33085  010096  0E00               	movlw	0
 33086  010098  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 33087  01009A  0E00               	movlw	0
 33088  01009C  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 33089  01009E  0E00               	movlw	0
 33090  0100A0  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 33091  0100A2  0E00               	movlw	0
 33092  0100A4  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 33093                           
 33094                           ; BSR set to: 1
 33095                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 33096  0100A6  0E00               	movlw	0
 33097  0100A8  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33098                           
 33099                           ; BSR set to: 1
 33100                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 33101  0100AA  0E00               	movlw	0
 33102  0100AC  6E5D               	movwf	_USBDeviceState,c	;volatile
 33103                           
 33104                           ; BSR set to: 1
 33105  0100AE  0012               	return		;funcret
 33106  0100B0                     __end_of_USBDeviceInit:
 33107                           	opt stack 0
 33108                           tblptru	equ	0xFF8
 33109                           tblptrh	equ	0xFF7
 33110                           tblptrl	equ	0xFF6
 33111                           tablat	equ	0xFF5
 33112                           prodh	equ	0xFF4
 33113                           prodl	equ	0xFF3
 33114                           intcon	equ	0xFF2
 33115                           postinc0	equ	0xFEE
 33116                           wreg	equ	0xFE8
 33117                           indf1	equ	0xFE7
 33118                           postinc1	equ	0xFE6
 33119                           postdec1	equ	0xFE5
 33120                           plusw1	equ	0xFE3
 33121                           fsr1h	equ	0xFE2
 33122                           fsr1l	equ	0xFE1
 33123                           indf2	equ	0xFDF
 33124                           postinc2	equ	0xFDE
 33125                           postdec2	equ	0xFDD
 33126                           plusw2	equ	0xFDB
 33127                           fsr2h	equ	0xFDA
 33128                           fsr2l	equ	0xFD9
 33129                           status	equ	0xFD8
 33130                           
 33131 ;; *************** function _memset *****************
 33132 ;; Defined at:
 33133 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 33134 ;; Parameters:    Size  Location     Type
 33135 ;;  p1              2    0[BANK0 ] PTR void 
 33136 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33137 ;;  c               2    2[BANK0 ] int 
 33138 ;;  n               2    4[BANK0 ] unsigned int 
 33139 ;; Auto vars:     Size  Location     Type
 33140 ;;  p               2    6[BANK0 ] PTR unsigned char 
 33141 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33142 ;; Return value:  Size  Location     Type
 33143 ;;                  2    0[BANK0 ] PTR void 
 33144 ;; Registers used:
 33145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33146 ;; Tracked objects:
 33147 ;;		On entry : 0/0
 33148 ;;		On exit  : 0/0
 33149 ;;		Unchanged: 0/0
 33150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33151 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33154 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33155 ;;Total ram usage:        8 bytes
 33156 ;; Hardware stack levels used:    1
 33157 ;; Hardware stack levels required when called:   10
 33158 ;; This function calls:
 33159 ;;		Nothing
 33160 ;; This function is called by:
 33161 ;;		_USBDeviceInit
 33162 ;; This function uses a non-reentrant model
 33163 ;;
 33164                           
 33165                           	psect	text123
 33166  015B54                     __ptext123:
 33167                           	opt stack 0
 33168  015B54                     _memset:
 33169                           	opt stack 19
 33170                           
 33171                           ; BSR set to: 1
 33172                           ;incstack = 0
 33173  015B54  C060  F066         	movff	memset@p1,memset@p
 33174  015B58  C061  F067         	movff	memset@p1+1,memset@p+1
 33175  015B5C  D009               	goto	l3828
 33176  015B5E                     l17060:
 33177  015B5E  C066  FFD9         	movff	memset@p,fsr2l
 33178  015B62  C067  FFDA         	movff	memset@p+1,fsr2h
 33179  015B66  C062  FFDF         	movff	memset@c,indf2
 33180  015B6A  0100               	movlb	0	; () banked
 33181  015B6C  4B66               	infsnz	memset@p& (0+255),f,b
 33182  015B6E  2B67               	incf	(memset@p+1)& (0+255),f,b
 33183  015B70                     l3828:
 33184                           
 33185                           ; BSR set to: 0
 33186  015B70  0100               	movlb	0	; () banked
 33187  015B72  0764               	decf	memset@n& (0+255),f,b
 33188  015B74  A0D8               	btfss	status,0,c
 33189  015B76  0765               	decf	(memset@n+1)& (0+255),f,b
 33190  015B78  2964               	incf	memset@n& (0+255),w,b
 33191  015B7A  E1F1               	bnz	l17060
 33192  015B7C  2965               	incf	(memset@n+1)& (0+255),w,b
 33193  015B7E  B4D8               	btfsc	status,2,c
 33194  015B80  0012               	return	
 33195  015B82  D7ED               	goto	l3829
 33196  015B84                     __end_of_memset:
 33197                           	opt stack 0
 33198                           tblptru	equ	0xFF8
 33199                           tblptrh	equ	0xFF7
 33200                           tblptrl	equ	0xFF6
 33201                           tablat	equ	0xFF5
 33202                           prodh	equ	0xFF4
 33203                           prodl	equ	0xFF3
 33204                           intcon	equ	0xFF2
 33205                           postinc0	equ	0xFEE
 33206                           wreg	equ	0xFE8
 33207                           indf1	equ	0xFE7
 33208                           postinc1	equ	0xFE6
 33209                           postdec1	equ	0xFE5
 33210                           plusw1	equ	0xFE3
 33211                           fsr1h	equ	0xFE2
 33212                           fsr1l	equ	0xFE1
 33213                           indf2	equ	0xFDF
 33214                           postinc2	equ	0xFDE
 33215                           postdec2	equ	0xFDD
 33216                           plusw2	equ	0xFDB
 33217                           fsr2h	equ	0xFDA
 33218                           fsr2l	equ	0xFD9
 33219                           status	equ	0xFD8
 33220                           
 33221 ;; *************** function _USBDeviceAttach *****************
 33222 ;; Defined at:
 33223 ;;		line 1354 in file "usb_device.c"
 33224 ;; Parameters:    Size  Location     Type
 33225 ;;		None
 33226 ;; Auto vars:     Size  Location     Type
 33227 ;;		None
 33228 ;; Return value:  Size  Location     Type
 33229 ;;                  1    wreg      void 
 33230 ;; Registers used:
 33231 ;;		wreg, status,2
 33232 ;; Tracked objects:
 33233 ;;		On entry : 0/0
 33234 ;;		On exit  : 0/0
 33235 ;;		Unchanged: 0/0
 33236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33241 ;;Total ram usage:        0 bytes
 33242 ;; Hardware stack levels used:    1
 33243 ;; Hardware stack levels required when called:   10
 33244 ;; This function calls:
 33245 ;;		Nothing
 33246 ;; This function is called by:
 33247 ;;		_main
 33248 ;; This function uses a non-reentrant model
 33249 ;;
 33250                           
 33251                           	psect	text124
 33252  015AC2                     __ptext124:
 33253                           	opt stack 0
 33254  015AC2                     _USBDeviceAttach:
 33255                           	opt stack 20
 33256                           
 33257                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 33258                           
 33259                           ; BSR set to: 0
 33260                           ;incstack = 0
 33261  015AC2  505D               	movf	_USBDeviceState,w,c	;volatile
 33262  015AC4  A4D8               	btfss	status,2,c
 33263  015AC6  0012               	return	
 33264                           
 33265                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 33266  015AC8  0E00               	movlw	0
 33267  015ACA  6E65               	movwf	3941,c	;volatile
 33268                           
 33269                           ;usb_device.c: 1365: UIE = 0;
 33270  015ACC  0E00               	movlw	0
 33271  015ACE  010F               	movlb	15	; () banked
 33272  015AD0  6F36               	movwf	54,b	;volatile
 33273                           
 33274                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 33275  015AD2  0E16               	movlw	22
 33276  015AD4  6F39               	movwf	57,b	;volatile
 33277  015AD6  0E9F               	movlw	159
 33278  015AD8  6F37               	movwf	55,b	;volatile
 33279  015ADA  0E7B               	movlw	123
 33280  015ADC  6F36               	movwf	54,b	;volatile
 33281                           
 33282                           ; BSR set to: 15
 33283                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 33284  015ADE  8ED0               	bsf	4048,7,c	;volatile
 33285                           
 33286                           ; BSR set to: 15
 33287  015AE0  88A2               	bsf	4002,4,c	;volatile
 33288                           
 33289                           ; BSR set to: 15
 33290  015AE2  88A0               	bsf	4000,4,c	;volatile
 33291                           
 33292                           ; BSR set to: 15
 33293  015AE4  8EF2               	bsf	intcon,7,c	;volatile
 33294                           
 33295                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 33296  015AE6  D001               	goto	l206
 33297  015AE8                     l207:
 33298  015AE8  8665               	bsf	3941,3,c	;volatile
 33299  015AEA                     l206:
 33300  015AEA  A665               	btfss	3941,3,c	;volatile
 33301  015AEC  D7FD               	goto	l207
 33302                           
 33303                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 33304  015AEE  0E01               	movlw	1
 33305  015AF0  6E5D               	movwf	_USBDeviceState,c	;volatile
 33306  015AF2  0012               	return	
 33307  015AF4                     __end_of_USBDeviceAttach:
 33308                           	opt stack 0
 33309                           tblptru	equ	0xFF8
 33310                           tblptrh	equ	0xFF7
 33311                           tblptrl	equ	0xFF6
 33312                           tablat	equ	0xFF5
 33313                           prodh	equ	0xFF4
 33314                           prodl	equ	0xFF3
 33315                           intcon	equ	0xFF2
 33316                           postinc0	equ	0xFEE
 33317                           wreg	equ	0xFE8
 33318                           indf1	equ	0xFE7
 33319                           postinc1	equ	0xFE6
 33320                           postdec1	equ	0xFE5
 33321                           plusw1	equ	0xFE3
 33322                           fsr1h	equ	0xFE2
 33323                           fsr1l	equ	0xFE1
 33324                           indf2	equ	0xFDF
 33325                           postinc2	equ	0xFDE
 33326                           postdec2	equ	0xFDD
 33327                           plusw2	equ	0xFDB
 33328                           fsr2h	equ	0xFDA
 33329                           fsr2l	equ	0xFD9
 33330                           status	equ	0xFD8
 33331                           
 33332 ;; *************** function _SYSTEM_Initialize *****************
 33333 ;; Defined at:
 33334 ;;		line 39 in file "system.c"
 33335 ;; Parameters:    Size  Location     Type
 33336 ;;  state           1    wreg     enum E6623
 33337 ;; Auto vars:     Size  Location     Type
 33338 ;;  state           1    4[BANK0 ] enum E6623
 33339 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 33340 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 33341 ;; Return value:  Size  Location     Type
 33342 ;;                  1    wreg      void 
 33343 ;; Registers used:
 33344 ;;		wreg, status,2, status,0
 33345 ;; Tracked objects:
 33346 ;;		On entry : 0/0
 33347 ;;		On exit  : 0/0
 33348 ;;		Unchanged: 0/0
 33349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33351 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33353 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33354 ;;Total ram usage:        5 bytes
 33355 ;; Hardware stack levels used:    1
 33356 ;; Hardware stack levels required when called:   10
 33357 ;; This function calls:
 33358 ;;		Nothing
 33359 ;; This function is called by:
 33360 ;;		_main
 33361 ;; This function uses a non-reentrant model
 33362 ;;
 33363                           
 33364                           	psect	text125
 33365  014D62                     __ptext125:
 33366                           	opt stack 0
 33367  014D62                     _SYSTEM_Initialize:
 33368                           	opt stack 20
 33369                           
 33370                           ;incstack = 0
 33371                           ;SYSTEM_Initialize@state stored from wreg
 33372  014D62  0100               	movlb	0	; () banked
 33373  014D64  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 33374                           
 33375                           ;system.c: 41: switch(state)
 33376  014D66  D01E               	goto	l897
 33377  014D68                     
 33378                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 33379  014D68  0E02               	movlw	2
 33380  014D6A  0100               	movlb	0	; () banked
 33381  014D6C  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 33382  014D6E  0E58               	movlw	88
 33383  014D70  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 33384                           
 33385                           ; BSR set to: 0
 33386                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 33387  014D72  8C9B               	bsf	3995,6,c	;volatile
 33388  014D74                     l18214:
 33389                           
 33390                           ; BSR set to: 0
 33391  014D74  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 33392  014D76  A0D8               	btfss	status,0,c
 33393  014D78  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 33394  014D7A  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 33395  014D7C  E1FB               	bnz	l18214
 33396  014D7E  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 33397  014D80  B4D8               	btfsc	status,2,c
 33398  014D82  0012               	return	
 33399  014D84  D7F7               	goto	l900
 33400  014D86                     
 33401                           ; BSR set to: 0
 33402                           ;system.c: 78: OSCCON = 0x70;
 33403                           
 33404                           ; BSR set to: 0
 33405  014D86  0E70               	movlw	112
 33406  014D88  6ED3               	movwf	4051,c	;volatile
 33407                           
 33408                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 33409  014D8A  0E03               	movlw	3
 33410  014D8C  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),b
 33411  014D8E  0E20               	movlw	32
 33412  014D90  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),b
 33413  014D92                     l18218:
 33414                           
 33415                           ; BSR set to: 0
 33416  014D92  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),f,b
 33417  014D94  A0D8               	btfss	status,0,c
 33418  014D96  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),f,b
 33419  014D98  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),w,b
 33420  014D9A  E1FB               	bnz	l18218
 33421  014D9C  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),w,b
 33422  014D9E  B4D8               	btfsc	status,2,c
 33423  014DA0  0012               	return	
 33424  014DA2  D7F7               	goto	l906
 33425  014DA4                     l897:
 33426                           
 33427                           ; BSR set to: 0
 33428  014DA4  0100               	movlb	0	; () banked
 33429  014DA6  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 33430                           
 33431                           ; Switch size 1, requested type "space"
 33432                           ; Number of cases is 3, Range of values is 0 to 2
 33433                           ; switch strategies available:
 33434                           ; Name         Instructions Cycles
 33435                           ; simple_byte           10     6 (average)
 33436                           ;	Chosen strategy is simple_byte
 33437  014DA8  0A00               	xorlw	0	; case 0
 33438  014DAA  B4D8               	btfsc	status,2,c
 33439  014DAC  D7DD               	goto	l898
 33440  014DAE  0A01               	xorlw	1	; case 1
 33441  014DB0  B4D8               	btfsc	status,2,c
 33442  014DB2  0012               	return	
 33443  014DB4  0A03               	xorlw	3	; case 2
 33444  014DB6  A4D8               	btfss	status,2,c
 33445  014DB8  0012               	return	
 33446  014DBA  D7E5               	goto	l904
 33447  014DBC                     __end_of_SYSTEM_Initialize:
 33448                           	opt stack 0
 33449                           tblptru	equ	0xFF8
 33450                           tblptrh	equ	0xFF7
 33451                           tblptrl	equ	0xFF6
 33452                           tablat	equ	0xFF5
 33453                           prodh	equ	0xFF4
 33454                           prodl	equ	0xFF3
 33455                           intcon	equ	0xFF2
 33456                           postinc0	equ	0xFEE
 33457                           wreg	equ	0xFE8
 33458                           indf1	equ	0xFE7
 33459                           postinc1	equ	0xFE6
 33460                           postdec1	equ	0xFE5
 33461                           plusw1	equ	0xFE3
 33462                           fsr1h	equ	0xFE2
 33463                           fsr1l	equ	0xFE1
 33464                           indf2	equ	0xFDF
 33465                           postinc2	equ	0xFDE
 33466                           postdec2	equ	0xFDD
 33467                           plusw2	equ	0xFDB
 33468                           fsr2h	equ	0xFDA
 33469                           fsr2l	equ	0xFD9
 33470                           status	equ	0xFD8
 33471                           
 33472 ;; *************** function _APP_DeviceMSDTasks *****************
 33473 ;; Defined at:
 33474 ;;		line 110 in file "app_device_msd.c"
 33475 ;; Parameters:    Size  Location     Type
 33476 ;;		None
 33477 ;; Auto vars:     Size  Location     Type
 33478 ;;		None
 33479 ;; Return value:  Size  Location     Type
 33480 ;;                  1    wreg      void 
 33481 ;; Registers used:
 33482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33483 ;; Tracked objects:
 33484 ;;		On entry : 0/0
 33485 ;;		On exit  : 0/0
 33486 ;;		Unchanged: 0/0
 33487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33492 ;;Total ram usage:        0 bytes
 33493 ;; Hardware stack levels used:    1
 33494 ;; Hardware stack levels required when called:   21
 33495 ;; This function calls:
 33496 ;;		_MSDTasks
 33497 ;; This function is called by:
 33498 ;;		_main
 33499 ;; This function uses a non-reentrant model
 33500 ;;
 33501                           
 33502                           	psect	text126
 33503  016030                     __ptext126:
 33504                           	opt stack 0
 33505  016030                     _APP_DeviceMSDTasks:
 33506                           	opt stack 9
 33507                           
 33508                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 33509                           
 33510                           ; BSR set to: 0
 33511                           ;incstack = 0
 33512  016030  0E20               	movlw	32
 33513  016032  605D               	cpfslt	_USBDeviceState,c	;volatile
 33514  016034  D001               	goto	l986
 33515  016036  0012               	return	
 33516  016038                     l986:
 33517                           
 33518                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 33519  016038  B265               	btfsc	3941,1,c	;volatile
 33520  01603A  0012               	return	
 33521                           
 33522                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 33523                           
 33524                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 33525  01603C  ECDC  F06E         	call	_MSDTasks	;wreg free
 33526  016040  0012               	return		;funcret
 33527  016042                     __end_of_APP_DeviceMSDTasks:
 33528                           	opt stack 0
 33529                           tblptru	equ	0xFF8
 33530                           tblptrh	equ	0xFF7
 33531                           tblptrl	equ	0xFF6
 33532                           tablat	equ	0xFF5
 33533                           prodh	equ	0xFF4
 33534                           prodl	equ	0xFF3
 33535                           intcon	equ	0xFF2
 33536                           postinc0	equ	0xFEE
 33537                           wreg	equ	0xFE8
 33538                           indf1	equ	0xFE7
 33539                           postinc1	equ	0xFE6
 33540                           postdec1	equ	0xFE5
 33541                           plusw1	equ	0xFE3
 33542                           fsr1h	equ	0xFE2
 33543                           fsr1l	equ	0xFE1
 33544                           indf2	equ	0xFDF
 33545                           postinc2	equ	0xFDE
 33546                           postdec2	equ	0xFDD
 33547                           plusw2	equ	0xFDB
 33548                           fsr2h	equ	0xFDA
 33549                           fsr2l	equ	0xFD9
 33550                           status	equ	0xFD8
 33551                           
 33552 ;; *************** function _MSDTasks *****************
 33553 ;; Defined at:
 33554 ;;		line 335 in file "usb_device_msd.c"
 33555 ;; Parameters:    Size  Location     Type
 33556 ;;		None
 33557 ;; Auto vars:     Size  Location     Type
 33558 ;;  i               1   81[BANK0 ] unsigned char 
 33559 ;; Return value:  Size  Location     Type
 33560 ;;                  1    wreg      unsigned char 
 33561 ;; Registers used:
 33562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33563 ;; Tracked objects:
 33564 ;;		On entry : 0/0
 33565 ;;		On exit  : 0/0
 33566 ;;		Unchanged: 0/0
 33567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33569 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33571 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33572 ;;Total ram usage:        6 bytes
 33573 ;; Hardware stack levels used:    1
 33574 ;; Hardware stack levels required when called:   20
 33575 ;; This function calls:
 33576 ;;		_MSDProcessCommand
 33577 ;;		_USBStallEndpoint
 33578 ;;		_USBTransferOnePacket
 33579 ;; This function is called by:
 33580 ;;		_APP_DeviceMSDTasks
 33581 ;; This function uses a non-reentrant model
 33582 ;;
 33583                           
 33584                           	psect	text127
 33585  00DDB8                     __ptext127:
 33586                           	opt stack 0
 33587  00DDB8                     _MSDTasks:
 33588                           	opt stack 9
 33589                           
 33590                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 33591                           
 33592                           ;incstack = 0
 33593  00DDB8  0E20               	movlw	32
 33594  00DDBA  185D               	xorwf	_USBDeviceState,w,c	;volatile
 33595  00DDBC  A4D8               	btfss	status,2,c
 33596  00DDBE  0012               	return	
 33597                           
 33598                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 33599                           
 33600                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 33601  00DDC0  98A0               	bcf	4000,4,c	;volatile
 33602                           
 33603                           ;usb_device_msd.c: 357: switch(MSD_State)
 33604  00DDC2  D11C               	goto	l570
 33605  00DDC4                     
 33606                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 33607  00DDC4  0101               	movlb	1	; () banked
 33608  00DDC6  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 33609  00DDC8  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33610  00DDCA  B4D8               	btfsc	status,2,c
 33611  00DDCC  D006               	goto	u16410
 33612                           
 33613                           ; BSR set to: 1
 33614  00DDCE  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33615  00DDD2  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33616  00DDD6  BEDF               	btfsc	indf2,7,c
 33617  00DDD8  D120               	goto	l586
 33618  00DDDA                     u16410:
 33619                           
 33620                           ; BSR set to: 1
 33621                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 33622                           
 33623                           ; BSR set to: 1
 33624  00DDDA  0E00               	movlw	0
 33625  00DDDC  0100               	movlb	0	; () banked
 33626  00DDDE  6FB1               	movwf	MSDTasks@i& (0+255),b
 33627  00DDE0                     l17146:
 33628                           
 33629                           ; BSR set to: 0
 33630  00DDE0  0E1E               	movlw	30
 33631  00DDE2  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 33632  00DDE4  D001               	goto	l575
 33633  00DDE6  D014               	goto	u16430
 33634  00DDE8                     l575:
 33635                           
 33636                           ; BSR set to: 0
 33637                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 33638                           
 33639                           ; BSR set to: 0
 33640  00DDE8  51B1               	movf	MSDTasks@i& (0+255),w,b
 33641  00DDEA  0D01               	mullw	1
 33642  00DDEC  0E40               	movlw	64
 33643  00DDEE  24F3               	addwf	prodl,w,c
 33644  00DDF0  6ED9               	movwf	fsr2l,c
 33645  00DDF2  0E0D               	movlw	13
 33646  00DDF4  20F4               	addwfc	prodh,w,c
 33647  00DDF6  6EDA               	movwf	fsr2h,c
 33648  00DDF8  51B1               	movf	MSDTasks@i& (0+255),w,b
 33649  00DDFA  0D01               	mullw	1
 33650  00DDFC  0E00               	movlw	low _gblCBW
 33651  00DDFE  24F3               	addwf	prodl,w,c
 33652  00DE00  6EE1               	movwf	fsr1l,c
 33653  00DE02  0E02               	movlw	high _gblCBW
 33654  00DE04  20F4               	addwfc	prodh,w,c
 33655  00DE06  6EE2               	movwf	fsr1h,c
 33656  00DE08  CFDF FFE7          	movff	indf2,indf1
 33657                           
 33658                           ; BSR set to: 0
 33659  00DE0C  2BB1               	incf	MSDTasks@i& (0+255),f,b
 33660  00DE0E  D7E8               	goto	l17146
 33661  00DE10                     u16430:
 33662                           
 33663                           ; BSR set to: 0
 33664                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 33665                           
 33666                           ; BSR set to: 0
 33667  00DE10  0101               	movlb	1	; () banked
 33668  00DE12  EE20 F001          	lfsr	2,1
 33669  00DE16  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 33670  00DE18  26D9               	addwf	fsr2l,f,c
 33671  00DE1A  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33672  00DE1C  22DA               	addwfc	fsr2h,f,c
 33673  00DE1E  0E1F               	movlw	31
 33674  00DE20  18DE               	xorwf	postinc2,w,c
 33675  00DE22  A4D8               	btfss	status,2,c
 33676  00DE24  D075               	goto	l577
 33677                           
 33678                           ; BSR set to: 1
 33679  00DE26  0E55               	movlw	85
 33680  00DE28  0102               	movlb	2	; () banked
 33681  00DE2A  1900               	xorwf	_gblCBW& (0+255),w,b
 33682  00DE2C  E171               	bnz	l577
 33683  00DE2E  0E53               	movlw	83
 33684  00DE30  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 33685  00DE32  E16E               	bnz	l577
 33686  00DE34  0E42               	movlw	66
 33687  00DE36  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 33688  00DE38  E16B               	bnz	l577
 33689  00DE3A  0E43               	movlw	67
 33690  00DE3C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 33691  00DE3E  A4D8               	btfss	status,2,c
 33692  00DE40  D067               	goto	l577
 33693                           
 33694                           ; BSR set to: 2
 33695                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 33696  00DE42  0E01               	movlw	1
 33697  00DE44  0101               	movlb	1	; () banked
 33698  00DE46  6F50               	movwf	_MSDCBWValid& (0+255),b
 33699                           
 33700                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 33701  00DE48  0102               	movlb	2	; () banked
 33702  00DE4A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 33703  00DE4C  A4D8               	btfss	status,2,c
 33704  00DE4E  D053               	goto	l578
 33705                           
 33706                           ; BSR set to: 2
 33707  00DE50  0E11               	movlw	17
 33708  00DE52  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 33709  00DE54  D050               	goto	l578
 33710                           
 33711                           ; BSR set to: 2
 33712  00DE56  510E               	movf	(_gblCBW+14)& (0+255),w,b
 33713  00DE58  B4D8               	btfsc	status,2,c
 33714  00DE5A  D04D               	goto	l578
 33715                           
 33716                           ; BSR set to: 2
 33717  00DE5C  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 33718  00DE60  0E3F               	movlw	63
 33719  00DE62  0100               	movlb	0	; () banked
 33720  00DE64  17AC               	andwf	??_MSDTasks& (0+255),f,b
 33721  00DE66  A4D8               	btfss	status,2,c
 33722  00DE68  D046               	goto	l578
 33723                           
 33724                           ; BSR set to: 0
 33725                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 33726  00DE6A  0E55               	movlw	85
 33727  00DE6C  010D               	movlb	13	; () banked
 33728  00DE6E  6F80               	movwf	128,b	;volatile
 33729  00DE70  0E53               	movlw	83
 33730  00DE72  6F81               	movwf	129,b	;volatile
 33731  00DE74  0E42               	movlw	66
 33732  00DE76  6F82               	movwf	130,b	;volatile
 33733  00DE78  0E53               	movlw	83
 33734  00DE7A  6F83               	movwf	131,b	;volatile
 33735                           
 33736                           ; BSR set to: 13
 33737                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 33738  00DE7C  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 33739  00DE80  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 33740  00DE84  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 33741  00DE88  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 33742                           
 33743                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 33744  00DE8C  0E00               	movlw	0
 33745  00DE8E  6F88               	movwf	136,b	;volatile
 33746  00DE90  0E00               	movlw	0
 33747  00DE92  6F89               	movwf	137,b	;volatile
 33748  00DE94  0E00               	movlw	0
 33749  00DE96  6F8A               	movwf	138,b	;volatile
 33750  00DE98  0E00               	movlw	0
 33751  00DE9A  6F8B               	movwf	139,b	;volatile
 33752                           
 33753                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 33754  00DE9C  0E00               	movlw	0
 33755  00DE9E  6F8C               	movwf	140,b	;volatile
 33756                           
 33757                           ; BSR set to: 13
 33758                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 33759  00DEA0  0101               	movlb	1	; () banked
 33760  00DEA2  6957               	setf	_MSDCommandState& (0+255),b
 33761                           
 33762                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 33763  00DEA4  0E00               	movlw	0
 33764  00DEA6  6F56               	movwf	_MSDReadState& (0+255),b
 33765                           
 33766                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 33767  00DEA8  0E00               	movlw	0
 33768  00DEAA  6F55               	movwf	_MSDWriteState& (0+255),b
 33769                           
 33770                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 33771  00DEAC  0E00               	movlw	0
 33772  00DEAE  6F54               	movwf	_MSDRetryAttempt& (0+255),b
 33773                           
 33774                           ; BSR set to: 1
 33775                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 33776  00DEB0  0E03               	movlw	3
 33777  00DEB2  0102               	movlb	2	; () banked
 33778  00DEB4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 33779  00DEB6  B4D8               	btfsc	status,2,c
 33780  00DEB8  D008               	goto	l579
 33781                           
 33782                           ; BSR set to: 2
 33783                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 33784  00DEBA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 33785  00DEBC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 33786  00DEBE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 33787  00DEC0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 33788                           
 33789                           ; BSR set to: 2
 33790                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 33791  00DEC2  0E00               	movlw	0
 33792  00DEC4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 33793                           
 33794                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 33795  00DEC6  0E00               	movlw	0
 33796  00DEC8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 33797  00DECA                     l579:
 33798                           
 33799                           ; BSR set to: 2
 33800                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 33801                           
 33802                           ; BSR set to: 2
 33803  00DECA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 33804  00DECC  D002               	goto	l580
 33805                           
 33806                           ; BSR set to: 2
 33807                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 33808  00DECE  0E01               	movlw	1
 33809  00DED0  D001               	goto	L47
 33810  00DED2                     l580:
 33811                           
 33812                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 33813                           
 33814                           ; BSR set to: 1
 33815  00DED2  0E02               	movlw	2
 33816  00DED4                     L47:
 33817  00DED4  0101               	movlb	1	; () banked
 33818  00DED6  6F58               	movwf	_MSD_State& (0+255),b
 33819                           
 33820                           ; BSR set to: 1
 33821                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 33822                           
 33823                           ; BSR set to: 1
 33824  00DED8  0102               	movlb	2	; () banked
 33825  00DEDA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 33826  00DEDC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33827  00DEDE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33828  00DEE0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 33829  00DEE2  B4D8               	btfsc	status,2,c
 33830  00DEE4  D002               	goto	l582
 33831                           
 33832                           ; BSR set to: 2
 33833                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 33834  00DEE6  0E00               	movlw	0
 33835  00DEE8  D001               	goto	L48
 33836  00DEEA                     l582:
 33837                           
 33838                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 33839                           
 33840                           ; BSR set to: 1
 33841  00DEEA  0E01               	movlw	1
 33842  00DEEC                     L48:
 33843  00DEEC  0101               	movlb	1	; () banked
 33844  00DEEE  6F51               	movwf	_MSDHostNoData& (0+255),b
 33845                           
 33846                           ; BSR set to: 1
 33847                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 33848                           
 33849                           ; BSR set to: 1
 33850  00DEF0  C20F  F157         	movff	_gblCBW+15,_MSDCommandState
 33851                           
 33852                           ;usb_device_msd.c: 454: }
 33853  00DEF4  D092               	goto	l586
 33854  00DEF6                     l578:
 33855                           
 33856                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 33857                           
 33858                           ; BSR set to: 1
 33859  00DEF6  0E01               	movlw	1
 33860  00DEF8  0100               	movlb	0	; () banked
 33861  00DEFA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33862  00DEFC  0E02               	movlw	2
 33863  00DEFE  ECB8  F089         	call	_USBStallEndpoint
 33864                           
 33865                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 33866  00DF02  0E00               	movlw	0
 33867  00DF04  0100               	movlb	0	; () banked
 33868  00DF06  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33869  00DF08  0E02               	movlw	2
 33870  00DF0A  ECB8  F089         	call	_USBStallEndpoint
 33871                           
 33872                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 33873  00DF0E  D085               	goto	l586
 33874  00DF10                     l577:
 33875                           
 33876                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 33877  00DF10  0E01               	movlw	1
 33878  00DF12  0100               	movlb	0	; () banked
 33879  00DF14  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33880  00DF16  0E02               	movlw	2
 33881  00DF18  ECB8  F089         	call	_USBStallEndpoint
 33882                           
 33883                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 33884  00DF1C  0E00               	movlw	0
 33885  00DF1E  0100               	movlb	0	; () banked
 33886  00DF20  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33887  00DF22  0E02               	movlw	2
 33888  00DF24  ECB8  F089         	call	_USBStallEndpoint
 33889                           
 33890                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 33891  00DF28  0E00               	movlw	0
 33892  00DF2A  0101               	movlb	1	; () banked
 33893  00DF2C  6F50               	movwf	_MSDCBWValid& (0+255),b
 33894                           
 33895                           ; BSR set to: 1
 33896                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 33897                           
 33898                           ; BSR set to: 1
 33899  00DF2E  D075               	goto	l586
 33900  00DF30                     
 33901                           ; BSR set to: 1
 33902                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 33903                           
 33904                           ; BSR set to: 1
 33905  00DF30  ECBF  F084         	call	_MSDProcessCommand	;wreg free
 33906  00DF34  0AFF               	xorlw	255
 33907  00DF36  A4D8               	btfss	status,2,c
 33908  00DF38  D070               	goto	l586
 33909  00DF3A  D011               	goto	l591
 33910  00DF3C                     
 33911                           ; BSR set to: 1
 33912                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 33913                           
 33914                           ; BSR set to: 1
 33915  00DF3C  ECBF  F084         	call	_MSDProcessCommand	;wreg free
 33916  00DF40  0AFF               	xorlw	255
 33917  00DF42  A4D8               	btfss	status,2,c
 33918  00DF44  D06A               	goto	l586
 33919                           
 33920                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 33921  00DF46  010D               	movlb	13	; () banked
 33922  00DF48  518C               	movf	140,w,b	;volatile
 33923  00DF4A  A4D8               	btfss	status,2,c
 33924  00DF4C  D008               	goto	l591
 33925                           
 33926                           ; BSR set to: 13
 33927  00DF4E  5188               	movf	136,w,b	;volatile
 33928  00DF50  1189               	iorwf	137,w,b	;volatile
 33929  00DF52  118A               	iorwf	138,w,b	;volatile
 33930  00DF54  118B               	iorwf	139,w,b	;volatile
 33931  00DF56  B4D8               	btfsc	status,2,c
 33932  00DF58  D002               	goto	l591
 33933                           
 33934                           ; BSR set to: 13
 33935                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 33936  00DF5A  0E02               	movlw	2
 33937  00DF5C  6F8C               	movwf	140,b	;volatile
 33938  00DF5E                     l591:
 33939                           
 33940                           ; BSR set to: 13
 33941                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 33942  00DF5E  0E03               	movlw	3
 33943  00DF60  D03E               	goto	L46
 33944  00DF62                     
 33945                           ; BSR set to: 1
 33946                           
 33947                           ; BSR set to: 1
 33948  00DF62  C113  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 33949  00DF66  C114  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 33950                           
 33951                           ; BSR set to: 1
 33952                           
 33953                           ; BSR set to: 1
 33954                           
 33955                           ; BSR set to: 1
 33956  00DF6A  0100               	movlb	0	; () banked
 33957  00DF6C  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 33958  00DF6E  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 33959  00DF70  B4D8               	btfsc	status,2,c
 33960  00DF72  D00A               	goto	l593
 33961                           
 33962                           ; BSR set to: 0
 33963  00DF74  C113  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 33964  00DF78  C114  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 33965                           
 33966                           ; BSR set to: 0
 33967                           
 33968                           ; BSR set to: 0
 33969                           
 33970                           ; BSR set to: 0
 33971                           
 33972                           ; BSR set to: 0
 33973  00DF7C  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 33974  00DF80  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 33975  00DF84  BEDF               	btfsc	indf2,7,c
 33976  00DF86  D049               	goto	l586
 33977  00DF88                     l593:
 33978                           
 33979                           ; BSR set to: 0
 33980                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 33981                           
 33982                           ; BSR set to: 0
 33983  00DF88  0E01               	movlw	1
 33984  00DF8A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33985  00DF8C  0E80               	movlw	128
 33986  00DF8E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 33987  00DF90  0E0D               	movlw	13
 33988  00DF92  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 33989  00DF94  0E0D               	movlw	13
 33990  00DF96  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33991  00DF98  0E02               	movlw	2
 33992  00DF9A  EC3D  F08A         	call	_USBTransferOnePacket
 33993  00DF9E  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33994  00DFA2  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33995                           
 33996                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 33997  00DFA6  0101               	movlb	1	; () banked
 33998  00DFA8  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 33999  00DFAA  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34000  00DFAC  B4D8               	btfsc	status,2,c
 34001  00DFAE  D006               	goto	u16600
 34002                           
 34003                           ; BSR set to: 1
 34004  00DFB0  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34005  00DFB4  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34006  00DFB8  BEDF               	btfsc	indf2,7,c
 34007  00DFBA  D010               	goto	l602
 34008  00DFBC                     u16600:
 34009                           
 34010                           ; BSR set to: 1
 34011                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 34012                           
 34013                           ; BSR set to: 1
 34014  00DFBC  0E00               	movlw	0
 34015  00DFBE  0100               	movlb	0	; () banked
 34016  00DFC0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34017  00DFC2  0E40               	movlw	64
 34018  00DFC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34019  00DFC6  0E0D               	movlw	13
 34020  00DFC8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34021  00DFCA  0E40               	movlw	64
 34022  00DFCC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34023  00DFCE  0E02               	movlw	2
 34024  00DFD0  EC3D  F08A         	call	_USBTransferOnePacket
 34025  00DFD4  C060  F141         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 34026  00DFD8  C061  F142         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 34027  00DFDC                     l602:
 34028                           
 34029                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 34030  00DFDC  0E00               	movlw	0
 34031  00DFDE                     L46:
 34032  00DFDE  0101               	movlb	1	; () banked
 34033  00DFE0  6F58               	movwf	_MSD_State& (0+255),b
 34034                           
 34035                           ;usb_device_msd.c: 513: break;
 34036  00DFE2  D01B               	goto	l586
 34037  00DFE4                     
 34038                           ; BSR set to: 1
 34039                           ;usb_device_msd.c: 518: MSD_State=0x00;
 34040                           
 34041                           ; BSR set to: 1
 34042  00DFE4  0E00               	movlw	0
 34043  00DFE6  6F58               	movwf	_MSD_State& (0+255),b
 34044                           
 34045                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 34046  00DFE8  0E02               	movlw	2
 34047  00DFEA  010D               	movlb	13	; () banked
 34048  00DFEC  6F8C               	movwf	140,b	;volatile
 34049                           
 34050                           ; BSR set to: 13
 34051                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 34052  00DFEE  0E00               	movlw	0
 34053  00DFF0  0100               	movlb	0	; () banked
 34054  00DFF2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34055  00DFF4  0E02               	movlw	2
 34056  00DFF6  ECB8  F089         	call	_USBStallEndpoint
 34057                           
 34058                           ;usb_device_msd.c: 521: }
 34059  00DFFA  D00F               	goto	l586
 34060  00DFFC                     l570:
 34061  00DFFC  0101               	movlb	1	; () banked
 34062  00DFFE  5158               	movf	_MSD_State& (0+255),w,b
 34063                           
 34064                           ; Switch size 1, requested type "space"
 34065                           ; Number of cases is 4, Range of values is 0 to 3
 34066                           ; switch strategies available:
 34067                           ; Name         Instructions Cycles
 34068                           ; simple_byte           13     7 (average)
 34069                           ;	Chosen strategy is simple_byte
 34070  00E000  0A00               	xorlw	0	; case 0
 34071  00E002  B4D8               	btfsc	status,2,c
 34072  00E004  D6DF               	goto	l571
 34073  00E006  0A01               	xorlw	1	; case 1
 34074  00E008  B4D8               	btfsc	status,2,c
 34075  00E00A  D792               	goto	l587
 34076  00E00C  0A03               	xorlw	3	; case 2
 34077  00E00E  B4D8               	btfsc	status,2,c
 34078  00E010  D795               	goto	l589
 34079  00E012  0A01               	xorlw	1	; case 3
 34080  00E014  B4D8               	btfsc	status,2,c
 34081  00E016  D7A5               	goto	l592
 34082  00E018  D7E5               	goto	l605
 34083  00E01A                     l586:
 34084                           
 34085                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 34086  00E01A  88A0               	bsf	4000,4,c	;volatile
 34087                           
 34088                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 34089  00E01C  0012               	return		;funcret
 34090  00E01E                     __end_of_MSDTasks:
 34091                           	opt stack 0
 34092                           tblptru	equ	0xFF8
 34093                           tblptrh	equ	0xFF7
 34094                           tblptrl	equ	0xFF6
 34095                           tablat	equ	0xFF5
 34096                           prodh	equ	0xFF4
 34097                           prodl	equ	0xFF3
 34098                           intcon	equ	0xFF2
 34099                           postinc0	equ	0xFEE
 34100                           wreg	equ	0xFE8
 34101                           indf1	equ	0xFE7
 34102                           postinc1	equ	0xFE6
 34103                           postdec1	equ	0xFE5
 34104                           plusw1	equ	0xFE3
 34105                           fsr1h	equ	0xFE2
 34106                           fsr1l	equ	0xFE1
 34107                           indf2	equ	0xFDF
 34108                           postinc2	equ	0xFDE
 34109                           postdec2	equ	0xFDD
 34110                           plusw2	equ	0xFDB
 34111                           fsr2h	equ	0xFDA
 34112                           fsr2l	equ	0xFD9
 34113                           status	equ	0xFD8
 34114                           
 34115 ;; *************** function _MSDProcessCommand *****************
 34116 ;; Defined at:
 34117 ;;		line 553 in file "usb_device_msd.c"
 34118 ;; Parameters:    Size  Location     Type
 34119 ;;		None
 34120 ;; Auto vars:     Size  Location     Type
 34121 ;;		None
 34122 ;; Return value:  Size  Location     Type
 34123 ;;                  1    wreg      unsigned char 
 34124 ;; Registers used:
 34125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34126 ;; Tracked objects:
 34127 ;;		On entry : 0/0
 34128 ;;		On exit  : 0/0
 34129 ;;		Unchanged: 0/0
 34130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34133 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34134 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34135 ;;Total ram usage:        5 bytes
 34136 ;; Hardware stack levels used:    1
 34137 ;; Hardware stack levels required when called:   19
 34138 ;; This function calls:
 34139 ;;		_ExternalFlash_MediaDetect
 34140 ;;		_ExternalFlash_MediaInitialize
 34141 ;;		_MSDProcessCommandMediaAbsent
 34142 ;;		_MSDProcessCommandMediaPresent
 34143 ;; This function is called by:
 34144 ;;		_MSDTasks
 34145 ;; This function uses a non-reentrant model
 34146 ;;
 34147                           
 34148                           	psect	text128
 34149  01097E                     __ptext128:
 34150                           	opt stack 0
 34151  01097E                     _MSDProcessCommand:
 34152                           	opt stack 9
 34153                           
 34154                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 34155                           
 34156                           ;incstack = 0
 34157  01097E  C2B2  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 34158  010982  C2B3  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 34159  010986  EE22  F0A6         	lfsr	2,_LUN+9
 34160  01098A  D801               	call	u15098
 34161  01098C  D00A               	goto	u15099
 34162  01098E                     u15098:
 34163  01098E  0005               	push	
 34164  010990  6EFA               	movwf	pclath,c
 34165  010992  50DE               	movf	postinc2,w,c
 34166  010994  6EFD               	movwf	tosl,c
 34167  010996  50DE               	movf	postinc2,w,c
 34168  010998  6EFE               	movwf	tosh,c
 34169  01099A  50DE               	movf	postinc2,w,c
 34170  01099C  6EFF               	movwf	tosu,c
 34171  01099E  50FA               	movf	pclath,w,c
 34172  0109A0  0012               	return		;indir
 34173  0109A2                     u15099:
 34174  0109A2  0900               	iorlw	0
 34175  0109A4  B4D8               	btfsc	status,2,c
 34176  0109A6  D00C               	goto	u15110
 34177  0109A8  0102               	movlb	2	; () banked
 34178  0109AA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34179  0109AC  0D01               	mullw	1
 34180  0109AE  0E52               	movlw	low _SoftDetach
 34181  0109B0  24F3               	addwf	prodl,w,c
 34182  0109B2  6ED9               	movwf	fsr2l,c
 34183  0109B4  0E01               	movlw	high _SoftDetach
 34184  0109B6  20F4               	addwfc	prodh,w,c
 34185  0109B8  6EDA               	movwf	fsr2h,c
 34186  0109BA  04DE               	decf	postinc2,w,c
 34187  0109BC  A4D8               	btfss	status,2,c
 34188  0109BE  D01D               	goto	l608
 34189  0109C0                     u15110:
 34190                           
 34191                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 34192                           
 34193                           ; BSR set to: 2
 34194  0109C0  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34195  0109C4  0E01               	movlw	1
 34196  0109C6  0100               	movlb	0	; () banked
 34197  0109C8  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34198  0109CA  0E00               	movlw	0
 34199  0109CC  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34200  0109CE  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34201  0109D0  D003               	goto	u15124
 34202  0109D2                     u15125:
 34203  0109D2  90D8               	bcf	status,0,c
 34204  0109D4  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34205  0109D6  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34206  0109D8                     u15124:
 34207  0109D8  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34208  0109DA  D7FB               	goto	u15125
 34209  0109DC  0100               	movlb	0	; () banked
 34210  0109DE  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 34211  0109E0  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 34212  0109E2  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 34213  0109E4  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 34214  0109E6  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 34215  0109E8  0102               	movlb	2	; () banked
 34216  0109EA  1744               	andwf	_gblMediaPresent& (0+255),f,b
 34217  0109EC  0100               	movlb	0	; () banked
 34218  0109EE  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 34219  0109F0  0102               	movlb	2	; () banked
 34220  0109F2  1745               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 34221                           
 34222                           ; BSR set to: 2
 34223                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 34224  0109F4  EC06  F0A5         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34225                           
 34226                           ;usb_device_msd.c: 563: }
 34227  0109F8  D058               	goto	l615
 34228  0109FA                     l608:
 34229                           
 34230                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 34231  0109FA  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34232  0109FE  0E01               	movlw	1
 34233  010A00  0100               	movlb	0	; () banked
 34234  010A02  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34235  010A04  0E00               	movlw	0
 34236  010A06  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34237  010A08  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34238  010A0A  D003               	goto	u15134
 34239  010A0C                     u15135:
 34240  010A0C  90D8               	bcf	status,0,c
 34241  010A0E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34242  010A10  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34243  010A12                     u15134:
 34244  010A12  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34245  010A14  D7FB               	goto	u15135
 34246  010A16  0102               	movlb	2	; () banked
 34247  010A18  5144               	movf	_gblMediaPresent& (0+255),w,b
 34248  010A1A  0100               	movlb	0	; () banked
 34249  010A1C  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 34250  010A1E  0102               	movlb	2	; () banked
 34251  010A20  5145               	movf	(_gblMediaPresent+1)& (0+255),w,b
 34252  010A22  0100               	movlb	0	; () banked
 34253  010A24  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 34254  010A26  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34255  010A28  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 34256  010A2A  A4D8               	btfss	status,2,c
 34257  010A2C  D03C               	goto	l612
 34258                           
 34259                           ; BSR set to: 0
 34260                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 34261  010A2E  C2B2  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 34262  010A32  C2B3  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 34263  010A36  D801               	call	u15158
 34264  010A38  D00B               	goto	u15159
 34265  010A3A                     u15158:
 34266  010A3A  0005               	push	
 34267  010A3C  6EFA               	movwf	pclath,c
 34268  010A3E  0102               	movlb	2	; () banked
 34269  010A40  519D               	movf	_LUN& (0+255),w,b
 34270  010A42  6EFD               	movwf	tosl,c
 34271  010A44  519E               	movf	(_LUN+1)& (0+255),w,b
 34272  010A46  6EFE               	movwf	tosh,c
 34273  010A48  519F               	movf	(_LUN+2)& (0+255),w,b
 34274  010A4A  6EFF               	movwf	tosu,c
 34275  010A4C  50FA               	movf	pclath,w,c
 34276  010A4E  0012               	return		;indir
 34277  010A50                     u15159:
 34278  010A50  0100               	movlb	0	; () banked
 34279  010A52  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 34280  010A54  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 34281  010A56  B4D8               	btfsc	status,2,c
 34282  010A58  D023               	goto	l613
 34283                           
 34284                           ; BSR set to: 0
 34285                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 34286  010A5A  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34287  010A5E  0E01               	movlw	1
 34288  010A60  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34289  010A62  0E00               	movlw	0
 34290  010A64  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34291  010A66  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34292  010A68  D003               	goto	u15174
 34293  010A6A                     u15175:
 34294  010A6A  90D8               	bcf	status,0,c
 34295  010A6C  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34296  010A6E  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34297  010A70                     u15174:
 34298  010A70  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34299  010A72  D7FB               	goto	u15175
 34300  010A74  0100               	movlb	0	; () banked
 34301  010A76  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34302  010A78  0102               	movlb	2	; () banked
 34303  010A7A  1344               	iorwf	_gblMediaPresent& (0+255),f,b
 34304  010A7C  0100               	movlb	0	; () banked
 34305  010A7E  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 34306  010A80  0102               	movlb	2	; () banked
 34307  010A82  1345               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 34308                           
 34309                           ; BSR set to: 2
 34310                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 34311  010A84  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34312  010A86  0BF0               	andlw	-16
 34313  010A88  0906               	iorlw	6
 34314  010A8A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34315                           
 34316                           ; BSR set to: 2
 34317                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 34318  010A8C  0E28               	movlw	40
 34319  010A8E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34320                           
 34321                           ; BSR set to: 2
 34322                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 34323  010A90  0E00               	movlw	0
 34324  010A92  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34325                           
 34326                           ; BSR set to: 2
 34327                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 34328  010A94  0E01               	movlw	1
 34329  010A96  010D               	movlb	13	; () banked
 34330  010A98  6F8C               	movwf	140,b	;volatile
 34331                           
 34332                           ; BSR set to: 13
 34333                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 34334  010A9A  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34335                           
 34336                           ;usb_device_msd.c: 589: }
 34337  010A9E  D005               	goto	l615
 34338  010AA0                     l613:
 34339                           
 34340                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 34341  010AA0  EC06  F0A5         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34342                           
 34343                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 34344  010AA4  D002               	goto	l615
 34345  010AA6                     l612:
 34346                           
 34347                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 34348  010AA6  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34349  010AAA                     l615:
 34350                           
 34351                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 34352  010AAA  0101               	movlb	1	; () banked
 34353  010AAC  5157               	movf	_MSDCommandState& (0+255),w,b
 34354  010AAE  0012               	return	
 34355  010AB0                     __end_of_MSDProcessCommand:
 34356                           	opt stack 0
 34357                           tosu	equ	0xFFF
 34358                           tosh	equ	0xFFE
 34359                           tosl	equ	0xFFD
 34360                           pclath	equ	0xFFA
 34361                           tblptru	equ	0xFF8
 34362                           tblptrh	equ	0xFF7
 34363                           tblptrl	equ	0xFF6
 34364                           tablat	equ	0xFF5
 34365                           prodh	equ	0xFF4
 34366                           prodl	equ	0xFF3
 34367                           intcon	equ	0xFF2
 34368                           postinc0	equ	0xFEE
 34369                           wreg	equ	0xFE8
 34370                           indf1	equ	0xFE7
 34371                           postinc1	equ	0xFE6
 34372                           postdec1	equ	0xFE5
 34373                           plusw1	equ	0xFE3
 34374                           fsr1h	equ	0xFE2
 34375                           fsr1l	equ	0xFE1
 34376                           indf2	equ	0xFDF
 34377                           postinc2	equ	0xFDE
 34378                           postdec2	equ	0xFDD
 34379                           plusw2	equ	0xFDB
 34380                           fsr2h	equ	0xFDA
 34381                           fsr2l	equ	0xFD9
 34382                           status	equ	0xFD8
 34383                           
 34384 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 34385 ;; Defined at:
 34386 ;;		line 635 in file "usb_device_msd.c"
 34387 ;; Parameters:    Size  Location     Type
 34388 ;;		None
 34389 ;; Auto vars:     Size  Location     Type
 34390 ;;		None
 34391 ;; Return value:  Size  Location     Type
 34392 ;;                  1    wreg      void 
 34393 ;; Registers used:
 34394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34395 ;; Tracked objects:
 34396 ;;		On entry : 0/0
 34397 ;;		On exit  : 0/0
 34398 ;;		Unchanged: 0/0
 34399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34404 ;;Total ram usage:        0 bytes
 34405 ;; Hardware stack levels used:    1
 34406 ;; Hardware stack levels required when called:   18
 34407 ;; This function calls:
 34408 ;;		_MSDErrorHandler
 34409 ;;		_MSDProcessCommandMediaPresent
 34410 ;;		_ResetSenseData
 34411 ;; This function is called by:
 34412 ;;		_MSDProcessCommand
 34413 ;; This function uses a non-reentrant model
 34414 ;;
 34415                           
 34416                           	psect	text129
 34417  014A0C                     __ptext129:
 34418                           	opt stack 0
 34419  014A0C                     _MSDProcessCommandMediaAbsent:
 34420                           	opt stack 9
 34421                           
 34422                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 34423                           
 34424                           ; BSR set to: 1
 34425                           ;incstack = 0
 34426  014A0C  D01E               	goto	l619
 34427  014A0E                     
 34428                           ;usb_device_msd.c: 646: ResetSenseData();
 34429  014A0E  EC37  F0A5         	call	_ResetSenseData	;wreg free
 34430                           
 34431                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 34432  014A12  0102               	movlb	2	; () banked
 34433  014A14  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34434  014A16  0BF0               	andlw	-16
 34435  014A18  0902               	iorlw	2
 34436  014A1A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34437                           
 34438                           ; BSR set to: 2
 34439                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 34440  014A1C  0E3A               	movlw	58
 34441  014A1E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34442                           
 34443                           ; BSR set to: 2
 34444                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 34445  014A20  0E00               	movlw	0
 34446  014A22  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34447                           
 34448                           ; BSR set to: 2
 34449                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 34450  014A24  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34451                           
 34452                           ;usb_device_msd.c: 655: break;
 34453  014A28  0012               	return	
 34454  014A2A                     
 34455                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 34456  014A2A  0E01               	movlw	1
 34457  014A2C  010D               	movlb	13	; () banked
 34458  014A2E  6F8C               	movwf	140,b	;volatile
 34459                           
 34460                           ; BSR set to: 13
 34461                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 34462  014A30  0101               	movlb	1	; () banked
 34463  014A32  6957               	setf	_MSDCommandState& (0+255),b
 34464                           
 34465                           ;usb_device_msd.c: 665: break;
 34466  014A34  0012               	return	
 34467  014A36                     
 34468                           ; BSR set to: 1
 34469                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 34470                           
 34471                           ; BSR set to: 1
 34472  014A36  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34473                           
 34474                           ;usb_device_msd.c: 671: break;
 34475  014A3A  0012               	return	
 34476  014A3C                     
 34477                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 34478  014A3C  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34479                           
 34480                           ;usb_device_msd.c: 677: break;
 34481  014A40  0012               	return	
 34482  014A42                     
 34483                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 34484  014A42  0E7F               	movlw	127
 34485  014A44  EC0B  F087         	call	_MSDErrorHandler
 34486                           
 34487                           ;usb_device_msd.c: 685: }
 34488                           
 34489                           ;usb_device_msd.c: 684: break;
 34490  014A48  0012               	return	
 34491  014A4A                     l619:
 34492  014A4A  0101               	movlb	1	; () banked
 34493  014A4C  5157               	movf	_MSDCommandState& (0+255),w,b
 34494                           
 34495                           ; Switch size 1, requested type "space"
 34496                           ; Number of cases is 5, Range of values is 0 to 253
 34497                           ; switch strategies available:
 34498                           ; Name         Instructions Cycles
 34499                           ; simple_byte           16     9 (average)
 34500                           ;	Chosen strategy is simple_byte
 34501  014A4E  0A00               	xorlw	0	; case 0
 34502  014A50  B4D8               	btfsc	status,2,c
 34503  014A52  D7EB               	goto	l622
 34504  014A54  0A03               	xorlw	3	; case 3
 34505  014A56  B4D8               	btfsc	status,2,c
 34506  014A58  D7DA               	goto	l620
 34507  014A5A  0A11               	xorlw	17	; case 18
 34508  014A5C  B4D8               	btfsc	status,2,c
 34509  014A5E  D7EB               	goto	l624
 34510  014A60  0A0C               	xorlw	12	; case 30
 34511  014A62  B4D8               	btfsc	status,2,c
 34512  014A64  D7E2               	goto	l622
 34513  014A66  0AE3               	xorlw	227	; case 253
 34514  014A68  B4D8               	btfsc	status,2,c
 34515  014A6A  D7E8               	goto	l625
 34516  014A6C  D7EA               	goto	l626
 34517  014A6E                     __end_of_MSDProcessCommandMediaAbsent:
 34518                           	opt stack 0
 34519                           tosu	equ	0xFFF
 34520                           tosh	equ	0xFFE
 34521                           tosl	equ	0xFFD
 34522                           pclath	equ	0xFFA
 34523                           tblptru	equ	0xFF8
 34524                           tblptrh	equ	0xFF7
 34525                           tblptrl	equ	0xFF6
 34526                           tablat	equ	0xFF5
 34527                           prodh	equ	0xFF4
 34528                           prodl	equ	0xFF3
 34529                           intcon	equ	0xFF2
 34530                           postinc0	equ	0xFEE
 34531                           wreg	equ	0xFE8
 34532                           indf1	equ	0xFE7
 34533                           postinc1	equ	0xFE6
 34534                           postdec1	equ	0xFE5
 34535                           plusw1	equ	0xFE3
 34536                           fsr1h	equ	0xFE2
 34537                           fsr1l	equ	0xFE1
 34538                           indf2	equ	0xFDF
 34539                           postinc2	equ	0xFDE
 34540                           postdec2	equ	0xFDD
 34541                           plusw2	equ	0xFDB
 34542                           fsr2h	equ	0xFDA
 34543                           fsr2l	equ	0xFD9
 34544                           status	equ	0xFD8
 34545                           
 34546 ;; *************** function _MSDProcessCommandMediaPresent *****************
 34547 ;; Defined at:
 34548 ;;		line 712 in file "usb_device_msd.c"
 34549 ;; Parameters:    Size  Location     Type
 34550 ;;		None
 34551 ;; Auto vars:     Size  Location     Type
 34552 ;;  capacity        4   66[BANK0 ] struct .
 34553 ;;  sectorSize      4   62[BANK0 ] struct .
 34554 ;;  i               1   70[BANK0 ] unsigned char 
 34555 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 34556 ;; Return value:  Size  Location     Type
 34557 ;;                  1    wreg      void 
 34558 ;; Registers used:
 34559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34560 ;; Tracked objects:
 34561 ;;		On entry : 0/0
 34562 ;;		On exit  : 0/0
 34563 ;;		Unchanged: 0/0
 34564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34566 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34567 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34568 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34569 ;;Total ram usage:       14 bytes
 34570 ;; Hardware stack levels used:    1
 34571 ;; Hardware stack levels required when called:   17
 34572 ;; This function calls:
 34573 ;;		_ExternalFlash_CapacityRead
 34574 ;;		_ExternalFlash_SectorSizeRead
 34575 ;;		_ExternalFlash_WriteProtectStateGet
 34576 ;;		_MSDCheckForErrorCases
 34577 ;;		_MSDComputeDeviceInAndResidue
 34578 ;;		_MSDErrorHandler
 34579 ;;		_MSDReadHandler
 34580 ;;		_MSDWriteHandler
 34581 ;;		_ResetSenseData
 34582 ;;		_USBTransferOnePacket
 34583 ;;		_memcpy
 34584 ;; This function is called by:
 34585 ;;		_MSDProcessCommand
 34586 ;;		_MSDProcessCommandMediaAbsent
 34587 ;; This function uses a non-reentrant model
 34588 ;;
 34589                           
 34590                           	psect	text130
 34591  00C5C8                     __ptext130:
 34592                           	opt stack 0
 34593  00C5C8                     _MSDProcessCommandMediaPresent:
 34594                           	opt stack 10
 34595                           
 34596                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 34597                           
 34598                           ;incstack = 0
 34599  00C5C8  D1D1               	goto	l630
 34600  00C5CA                     
 34601                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 34602  00C5CA  EC60  F074         	call	_MSDReadHandler	;wreg free
 34603  00C5CE  0900               	iorlw	0
 34604  00C5D0  A4D8               	btfss	status,2,c
 34605  00C5D2  0012               	return	
 34606                           
 34607                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 34608  00C5D4  0101               	movlb	1	; () banked
 34609  00C5D6  6957               	setf	_MSDCommandState& (0+255),b
 34610                           
 34611                           ; BSR set to: 1
 34612                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 34613  00C5D8  0012               	return	
 34614  00C5DA                     
 34615                           ; BSR set to: 1
 34616                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 34617                           
 34618                           ; BSR set to: 1
 34619  00C5DA  EC22  F068         	call	_MSDWriteHandler	;wreg free
 34620  00C5DE  0900               	iorlw	0
 34621  00C5E0  A4D8               	btfss	status,2,c
 34622  00C5E2  0012               	return	
 34623                           
 34624                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 34625  00C5E4  0101               	movlb	1	; () banked
 34626  00C5E6  6957               	setf	_MSDCommandState& (0+255),b
 34627                           
 34628                           ; BSR set to: 1
 34629                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 34630  00C5E8  0012               	return	
 34631  00C5EA                     
 34632                           ; BSR set to: 1
 34633                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 34634                           
 34635                           ; BSR set to: 1
 34636  00C5EA  0551               	decf	_MSDHostNoData& (0+255),w,b
 34637  00C5EC  A4D8               	btfss	status,2,c
 34638  00C5EE  D002               	goto	l637
 34639                           
 34640                           ; BSR set to: 1
 34641                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 34642  00C5F0  6957               	setf	_MSDCommandState& (0+255),b
 34643                           
 34644                           ;usb_device_msd.c: 751: break;
 34645  00C5F2  0012               	return	
 34646  00C5F4                     l637:
 34647                           
 34648                           ; BSR set to: 1
 34649                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 34650  00C5F4  C212  F13E         	movff	_gblCBW+18,_TransferLength+1
 34651                           
 34652                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 34653  00C5F8  C213  F13D         	movff	_gblCBW+19,_TransferLength
 34654                           
 34655                           ; BSR set to: 1
 34656                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 34657  00C5FC  C13D  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 34658  00C600  C13E  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 34659  00C604  0100               	movlb	0	; () banked
 34660  00C606  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 34661  00C608  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 34662  00C60A  EC98  F087         	call	_MSDCheckForErrorCases	;wreg free
 34663  00C60E  0900               	iorlw	0
 34664  00C610  A4D8               	btfss	status,2,c
 34665  00C612  0012               	return	
 34666                           
 34667                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 34668                           
 34669                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 34670  00C614  0E00               	movlw	0
 34671  00C616  0100               	movlb	0	; () banked
 34672  00C618  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 34673  00C61A  0E24               	movlw	36
 34674  00C61C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 34675  00C61E  ECB3  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 34676                           
 34677                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 34678  00C622  0E00               	movlw	0
 34679  00C624  0100               	movlb	0	; () banked
 34680  00C626  6F60               	movwf	memcpy@d1& (0+255),b
 34681  00C628  0E06               	movlw	6
 34682  00C62A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34683  00C62C  0E60               	movlw	low _inq_resp
 34684  00C62E  6F62               	movwf	memcpy@s1& (0+255),b
 34685  00C630  0EA1               	movlw	high _inq_resp
 34686  00C632  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34687  00C634  0E00               	movlw	0
 34688  00C636  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34689  00C638  0E24               	movlw	36
 34690  00C63A  6F64               	movwf	memcpy@n& (0+255),b
 34691  00C63C  ECCA  F0A5         	call	_memcpy	;wreg free
 34692                           
 34693                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 34694  00C640  0EFD               	movlw	253
 34695  00C642  0101               	movlb	1	; () banked
 34696  00C644  6F57               	movwf	_MSDCommandState& (0+255),b
 34697                           
 34698                           ;usb_device_msd.c: 773: break;
 34699  00C646  0012               	return	
 34700  00C648                     
 34701                           ; BSR set to: 1
 34702                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 34703                           
 34704                           ; BSR set to: 1
 34705  00C648  C2B2  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 34706  00C64C  C2B3  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 34707  00C650  EE22  F0A0         	lfsr	2,_LUN+3
 34708  00C654  D801               	call	u12408
 34709  00C656  D00A               	goto	u12409
 34710  00C658                     u12408:
 34711  00C658  0005               	push	
 34712  00C65A  6EFA               	movwf	pclath,c
 34713  00C65C  50DE               	movf	postinc2,w,c
 34714  00C65E  6EFD               	movwf	tosl,c
 34715  00C660  50DE               	movf	postinc2,w,c
 34716  00C662  6EFE               	movwf	tosh,c
 34717  00C664  50DE               	movf	postinc2,w,c
 34718  00C666  6EFF               	movwf	tosu,c
 34719  00C668  50FA               	movf	pclath,w,c
 34720  00C66A  0012               	return		;indir
 34721  00C66C                     u12409:
 34722  00C66C  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 34723  00C670  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 34724  00C674  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 34725  00C678  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 34726                           
 34727                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 34728  00C67C  C2B2  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 34729  00C680  C2B3  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 34730  00C684  EE22  F0A3         	lfsr	2,_LUN+6
 34731  00C688  D801               	call	u12418
 34732  00C68A  D00A               	goto	u12419
 34733  00C68C                     u12418:
 34734  00C68C  0005               	push	
 34735  00C68E  6EFA               	movwf	pclath,c
 34736  00C690  50DE               	movf	postinc2,w,c
 34737  00C692  6EFD               	movwf	tosl,c
 34738  00C694  50DE               	movf	postinc2,w,c
 34739  00C696  6EFE               	movwf	tosh,c
 34740  00C698  50DE               	movf	postinc2,w,c
 34741  00C69A  6EFF               	movwf	tosu,c
 34742  00C69C  50FA               	movf	pclath,w,c
 34743  00C69E  0012               	return		;indir
 34744  00C6A0                     u12419:
 34745  00C6A0  0100               	movlb	0	; () banked
 34746  00C6A2  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 34747  00C6A6  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 34748  00C6AA  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 34749  00C6AC  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 34750                           
 34751                           ; BSR set to: 0
 34752                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 34753  00C6AE  EE26 F000          	lfsr	2,1536
 34754  00C6B2  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 34755                           
 34756                           ; BSR set to: 0
 34757                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 34758  00C6B6  EE26 F001          	lfsr	2,1537	;volatile
 34759  00C6BA  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 34760                           
 34761                           ; BSR set to: 0
 34762                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 34763  00C6BE  EE26 F002          	lfsr	2,1538	;volatile
 34764  00C6C2  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 34765                           
 34766                           ; BSR set to: 0
 34767                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 34768  00C6C6  EE26 F003          	lfsr	2,1539	;volatile
 34769  00C6CA  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 34770                           
 34771                           ; BSR set to: 0
 34772                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 34773  00C6CE  EE26 F004          	lfsr	2,1540	;volatile
 34774  00C6D2  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 34775                           
 34776                           ; BSR set to: 0
 34777                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 34778  00C6D6  EE26 F005          	lfsr	2,1541	;volatile
 34779  00C6DA  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 34780                           
 34781                           ; BSR set to: 0
 34782                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 34783  00C6DE  EE26 F006          	lfsr	2,1542	;volatile
 34784  00C6E2  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 34785                           
 34786                           ; BSR set to: 0
 34787                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 34788  00C6E6  EE26 F007          	lfsr	2,1543	;volatile
 34789  00C6EA  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 34790                           
 34791                           ; BSR set to: 0
 34792                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 34793  00C6EE  0E00               	movlw	0
 34794  00C6F0  0101               	movlb	1	; () banked
 34795  00C6F2  6F3E               	movwf	(_TransferLength+1)& (0+255),b
 34796  00C6F4  0E08               	movlw	8
 34797  00C6F6  6F3D               	movwf	_TransferLength& (0+255),b
 34798                           
 34799                           ; BSR set to: 1
 34800                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 34801  00C6F8  0E00               	movlw	0
 34802  00C6FA  0100               	movlb	0	; () banked
 34803  00C6FC  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 34804  00C6FE  0E08               	movlw	8
 34805  00C700  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 34806  00C702  ECB3  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 34807                           
 34808                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 34809  00C706  0EFD               	movlw	253
 34810  00C708  0101               	movlb	1	; () banked
 34811  00C70A  6F57               	movwf	_MSDCommandState& (0+255),b
 34812                           
 34813                           ;usb_device_msd.c: 802: break;
 34814  00C70C  0012               	return	
 34815  00C70E                     
 34816                           ; BSR set to: 1
 34817                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 34818                           
 34819                           ; BSR set to: 1
 34820  00C70E  0551               	decf	_MSDHostNoData& (0+255),w,b
 34821  00C710  A4D8               	btfss	status,2,c
 34822  00C712  D002               	goto	l641
 34823                           
 34824                           ; BSR set to: 1
 34825                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 34826  00C714  6957               	setf	_MSDCommandState& (0+255),b
 34827                           
 34828                           ;usb_device_msd.c: 814: break;
 34829  00C716  0012               	return	
 34830  00C718                     l641:
 34831                           
 34832                           ; BSR set to: 1
 34833                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 34834                           
 34835                           ; BSR set to: 1
 34836  00C718  0E00               	movlw	0
 34837  00C71A  6F3E               	movwf	(_TransferLength+1)& (0+255),b
 34838  00C71C  0E12               	movlw	18
 34839  00C71E  6F3D               	movwf	_TransferLength& (0+255),b
 34840                           
 34841                           ; BSR set to: 1
 34842                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 34843  00C720  0E00               	movlw	0
 34844  00C722  0100               	movlb	0	; () banked
 34845  00C724  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 34846  00C726  0E12               	movlw	18
 34847  00C728  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 34848  00C72A  ECB3  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 34849                           
 34850                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 34851  00C72E  0E00               	movlw	0
 34852  00C730  0100               	movlb	0	; () banked
 34853  00C732  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 34854  00C734                     l13856:
 34855                           
 34856                           ; BSR set to: 0
 34857  00C734  0E11               	movlw	17
 34858  00C736  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 34859  00C738  D001               	goto	l642
 34860  00C73A  D014               	goto	u12440
 34861  00C73C                     l642:
 34862                           
 34863                           ; BSR set to: 0
 34864                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 34865                           
 34866                           ; BSR set to: 0
 34867  00C73C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 34868  00C73E  0D01               	mullw	1
 34869  00C740  0E1F               	movlw	low _gblSenseData
 34870  00C742  24F3               	addwf	prodl,w,c
 34871  00C744  6ED9               	movwf	fsr2l,c
 34872  00C746  0E02               	movlw	high _gblSenseData
 34873  00C748  20F4               	addwfc	prodh,w,c
 34874  00C74A  6EDA               	movwf	fsr2h,c
 34875  00C74C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 34876  00C74E  0D01               	mullw	1
 34877  00C750  0E00               	movlw	0
 34878  00C752  24F3               	addwf	prodl,w,c
 34879  00C754  6EE1               	movwf	fsr1l,c
 34880  00C756  0E06               	movlw	6
 34881  00C758  20F4               	addwfc	prodh,w,c
 34882  00C75A  6EE2               	movwf	fsr1h,c
 34883  00C75C  CFDF FFE7          	movff	indf2,indf1
 34884                           
 34885                           ; BSR set to: 0
 34886  00C760  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 34887  00C762  D7E8               	goto	l13856
 34888  00C764                     u12440:
 34889                           
 34890                           ; BSR set to: 0
 34891                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 34892                           
 34893                           ; BSR set to: 0
 34894  00C764  0EFD               	movlw	253
 34895  00C766  0101               	movlb	1	; () banked
 34896  00C768  6F57               	movwf	_MSDCommandState& (0+255),b
 34897                           
 34898                           ;usb_device_msd.c: 827: break;
 34899  00C76A  0012               	return	
 34900  00C76C                     l644:
 34901                           
 34902                           ; BSR set to: 1
 34903                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 34904  00C76C  0E03               	movlw	3
 34905  00C76E  CFE8 F600          	movff	wreg,1536
 34906                           
 34907                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 34908  00C772  0E00               	movlw	0
 34909  00C774  CFE8 F601          	movff	wreg,1537	;volatile
 34910                           
 34911                           ; BSR set to: 1
 34912                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 34913  00C778  C2B2  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 34914  00C77C  C2B3  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 34915  00C780  EE22  F0AC         	lfsr	2,_LUN+15
 34916  00C784  D801               	call	u12458
 34917  00C786  D00A               	goto	u12459
 34918  00C788                     u12458:
 34919  00C788  0005               	push	
 34920  00C78A  6EFA               	movwf	pclath,c
 34921  00C78C  50DE               	movf	postinc2,w,c
 34922  00C78E  6EFD               	movwf	tosl,c
 34923  00C790  50DE               	movf	postinc2,w,c
 34924  00C792  6EFE               	movwf	tosh,c
 34925  00C794  50DE               	movf	postinc2,w,c
 34926  00C796  6EFF               	movwf	tosu,c
 34927  00C798  50FA               	movf	pclath,w,c
 34928  00C79A  0012               	return		;indir
 34929  00C79C                     u12459:
 34930  00C79C  0900               	iorlw	0
 34931  00C79E  A4D8               	btfss	status,2,c
 34932  00C7A0  D005               	goto	l646
 34933  00C7A2  0E00               	movlw	0
 34934  00C7A4  0100               	movlb	0	; () banked
 34935  00C7A6  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 34936  00C7A8  0E00               	movlw	0
 34937  00C7AA  D004               	goto	L49
 34938  00C7AC                     l646:
 34939                           
 34940                           ; BSR set to: 0
 34941  00C7AC  0E00               	movlw	0
 34942  00C7AE  0100               	movlb	0	; () banked
 34943  00C7B0  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 34944  00C7B2  0E80               	movlw	128
 34945  00C7B4                     L49:
 34946  00C7B4  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 34947                           
 34948                           ; BSR set to: 0
 34949                           
 34950                           ; BSR set to: 0
 34951  00C7B6  EE26 F002          	lfsr	2,1538	;volatile
 34952  00C7BA  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 34953                           
 34954                           ; BSR set to: 0
 34955                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 34956  00C7BE  0E00               	movlw	0
 34957  00C7C0  CFE8 F603          	movff	wreg,1539	;volatile
 34958                           
 34959                           ; BSR set to: 0
 34960                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 34961  00C7C4  0E00               	movlw	0
 34962  00C7C6  0101               	movlb	1	; () banked
 34963  00C7C8  6F3E               	movwf	(_TransferLength+1)& (0+255),b
 34964  00C7CA  0E04               	movlw	4
 34965  00C7CC  6F3D               	movwf	_TransferLength& (0+255),b
 34966                           
 34967                           ; BSR set to: 1
 34968                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 34969  00C7CE  0E00               	movlw	0
 34970  00C7D0  0100               	movlb	0	; () banked
 34971  00C7D2  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 34972  00C7D4  0E04               	movlw	4
 34973  00C7D6  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 34974  00C7D8  ECB3  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 34975                           
 34976                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 34977  00C7DC  0EFD               	movlw	253
 34978  00C7DE  0101               	movlb	1	; () banked
 34979  00C7E0  6F57               	movwf	_MSDCommandState& (0+255),b
 34980                           
 34981                           ;usb_device_msd.c: 839: break;
 34982  00C7E2  0012               	return	
 34983  00C7E4                     
 34984                           ; BSR set to: 1
 34985                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 34986                           
 34987                           ; BSR set to: 1
 34988  00C7E4  0102               	movlb	2	; () banked
 34989  00C7E6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34990  00C7E8  0BF0               	andlw	-16
 34991  00C7EA  0905               	iorlw	5
 34992  00C7EC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34993                           
 34994                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 34995  00C7EE  0E20               	movlw	32
 34996  00C7F0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34997                           
 34998                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 34999  00C7F2  0E00               	movlw	0
 35000  00C7F4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35001                           
 35002                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 35003  00C7F6  0E01               	movlw	1
 35004  00C7F8  010D               	movlb	13	; () banked
 35005  00C7FA  6F8C               	movwf	140,b	;volatile
 35006                           
 35007                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 35008  00C7FC  0E00               	movlw	0
 35009  00C7FE  6F88               	movwf	136,b	;volatile
 35010  00C800  0E00               	movlw	0
 35011  00C802  6F89               	movwf	137,b	;volatile
 35012  00C804  0E00               	movlw	0
 35013  00C806  6F8A               	movwf	138,b	;volatile
 35014  00C808  0E00               	movlw	0
 35015  00C80A  6F8B               	movwf	139,b	;volatile
 35016                           
 35017                           ; BSR set to: 13
 35018                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 35019  00C80C  0101               	movlb	1	; () banked
 35020  00C80E  6957               	setf	_MSDCommandState& (0+255),b
 35021                           
 35022                           ;usb_device_msd.c: 848: break;
 35023  00C810  0012               	return	
 35024  00C812                     
 35025                           ; BSR set to: 1
 35026                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 35027                           
 35028                           ; BSR set to: 1
 35029  00C812  0E00               	movlw	0
 35030  00C814  0100               	movlb	0	; () banked
 35031  00C816  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 35032  00C818  0E00               	movlw	0
 35033  00C81A  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 35034  00C81C  0E00               	movlw	0
 35035  00C81E  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35036  00C820  0E00               	movlw	0
 35037  00C822  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35038  00C824  EC98  F087         	call	_MSDCheckForErrorCases	;wreg free
 35039  00C828  0900               	iorlw	0
 35040  00C82A  A4D8               	btfss	status,2,c
 35041  00C82C  0012               	return	
 35042                           
 35043                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 35044                           
 35045                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 35046  00C82E  0102               	movlb	2	; () banked
 35047  00C830  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35048  00C832  0B0F               	andlw	15
 35049  00C834  0A06               	xorlw	6
 35050  00C836  A4D8               	btfss	status,2,c
 35051  00C838  D007               	goto	l652
 35052                           
 35053                           ; BSR set to: 2
 35054  00C83A  010D               	movlb	13	; () banked
 35055  00C83C  058C               	decf	140,w,b	;volatile
 35056  00C83E  A4D8               	btfss	status,2,c
 35057  00C840  D003               	goto	l652
 35058                           
 35059                           ; BSR set to: 13
 35060                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 35061  00C842  0101               	movlb	1	; () banked
 35062  00C844  6957               	setf	_MSDCommandState& (0+255),b
 35063                           
 35064                           ;usb_device_msd.c: 870: }
 35065  00C846  0012               	return	
 35066  00C848                     l652:
 35067                           
 35068                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 35069                           
 35070                           ; BSR set to: 1
 35071  00C848  EC37  F0A5         	call	_ResetSenseData	;wreg free
 35072                           
 35073                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 35074  00C84C  0E00               	movlw	0
 35075  00C84E  010D               	movlb	13	; () banked
 35076  00C850  6F88               	movwf	136,b	;volatile
 35077  00C852  0E00               	movlw	0
 35078  00C854  6F89               	movwf	137,b	;volatile
 35079  00C856  0E00               	movlw	0
 35080  00C858  6F8A               	movwf	138,b	;volatile
 35081  00C85A  0E00               	movlw	0
 35082  00C85C  6F8B               	movwf	139,b	;volatile
 35083                           
 35084                           ; BSR set to: 13
 35085                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 35086  00C85E  0101               	movlb	1	; () banked
 35087  00C860  6957               	setf	_MSDCommandState& (0+255),b
 35088                           
 35089                           ; BSR set to: 1
 35090                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 35091  00C862  0012               	return	
 35092  00C864                     
 35093                           ; BSR set to: 1
 35094                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 35095                           
 35096                           ; BSR set to: 1
 35097                           
 35098                           ; BSR set to: 1
 35099  00C864  0E00               	movlw	0
 35100  00C866  010D               	movlb	13	; () banked
 35101  00C868  6F88               	movwf	136,b	;volatile
 35102  00C86A  0E00               	movlw	0
 35103  00C86C  6F89               	movwf	137,b	;volatile
 35104  00C86E  0E00               	movlw	0
 35105  00C870  6F8A               	movwf	138,b	;volatile
 35106  00C872  0E00               	movlw	0
 35107  00C874  6F8B               	movwf	139,b	;volatile
 35108                           
 35109                           ; BSR set to: 13
 35110                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 35111  00C876  0101               	movlb	1	; () banked
 35112  00C878  6957               	setf	_MSDCommandState& (0+255),b
 35113                           
 35114                           ;usb_device_msd.c: 885: break;
 35115  00C87A  0012               	return	
 35116  00C87C                     
 35117                           ; BSR set to: 1
 35118                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 35119                           
 35120                           ; BSR set to: 1
 35121  00C87C  513F               	movf	_USBMSDInHandle& (0+255),w,b
 35122  00C87E  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35123  00C880  B4D8               	btfsc	status,2,c
 35124  00C882  D006               	goto	u12510
 35125                           
 35126                           ; BSR set to: 1
 35127  00C884  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 35128  00C888  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35129  00C88C  BEDF               	btfsc	indf2,7,c
 35130  00C88E  0012               	return	
 35131  00C890                     u12510:
 35132                           
 35133                           ; BSR set to: 1
 35134                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 35135                           
 35136                           ; BSR set to: 1
 35137  00C890  0102               	movlb	2	; () banked
 35138  00C892  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35139  00C894  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35140  00C896  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35141  00C898  E104               	bnz	u12520
 35142  00C89A  0E40               	movlw	64
 35143  00C89C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 35144  00C89E  A0D8               	btfss	status,0,c
 35145  00C8A0  D00B               	goto	l660
 35146  00C8A2                     u12520:
 35147                           
 35148                           ; BSR set to: 2
 35149                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 35150  00C8A2  0E40               	movlw	64
 35151  00C8A4  0100               	movlb	0	; () banked
 35152  00C8A6  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 35153                           
 35154                           ; BSR set to: 0
 35155                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 35156  00C8A8  0E40               	movlw	64
 35157  00C8AA  0102               	movlb	2	; () banked
 35158  00C8AC  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35159  00C8AE  0E00               	movlw	0
 35160  00C8B0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35161  00C8B2  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35162  00C8B4  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35163                           
 35164                           ;usb_device_msd.c: 900: }
 35165  00C8B6  D00A               	goto	l661
 35166  00C8B8                     l660:
 35167                           
 35168                           ; BSR set to: 2
 35169                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 35170  00C8B8  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 35171                           
 35172                           ; BSR set to: 2
 35173                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 35174  00C8BC  0E00               	movlw	0
 35175  00C8BE  6F08               	movwf	(_gblCBW+8)& (0+255),b
 35176  00C8C0  0E00               	movlw	0
 35177  00C8C2  6F09               	movwf	(_gblCBW+9)& (0+255),b
 35178  00C8C4  0E00               	movlw	0
 35179  00C8C6  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 35180  00C8C8  0E00               	movlw	0
 35181  00C8CA  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 35182  00C8CC                     l661:
 35183                           
 35184                           ; BSR set to: 2
 35185                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 35186                           
 35187                           ; BSR set to: 2
 35188  00C8CC  0100               	movlb	0	; () banked
 35189  00C8CE  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35190  00C8D0  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 35191  00C8D2  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 35192  00C8D4  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 35193  00C8D6  0101               	movlb	1	; () banked
 35194  00C8D8  5D3D               	subwf	_TransferLength& (0+255),w,b
 35195  00C8DA  0100               	movlb	0	; () banked
 35196  00C8DC  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 35197  00C8DE  0101               	movlb	1	; () banked
 35198  00C8E0  593E               	subwfb	(_TransferLength+1)& (0+255),w,b
 35199  00C8E2  A0D8               	btfss	status,0,c
 35200  00C8E4  D007               	goto	l662
 35201                           
 35202                           ; BSR set to: 1
 35203                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 35204  00C8E6  0100               	movlb	0	; () banked
 35205  00C8E8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35206  00C8EA  0101               	movlb	1	; () banked
 35207  00C8EC  5F3D               	subwf	_TransferLength& (0+255),f,b
 35208  00C8EE  0E00               	movlw	0
 35209  00C8F0  5B3E               	subwfb	(_TransferLength+1)& (0+255),f,b
 35210                           
 35211                           ;usb_device_msd.c: 918: }
 35212  00C8F2  D01E               	goto	u12550
 35213  00C8F4                     l662:
 35214                           
 35215                           ; BSR set to: 1
 35216                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 35217                           
 35218                           ; BSR set to: 1
 35219  00C8F4  0E00               	movlw	0
 35220  00C8F6  0100               	movlb	0	; () banked
 35221  00C8F8  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35222  00C8FA  D016               	goto	l664
 35223  00C8FC                     
 35224                           ; BSR set to: 0
 35225                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 35226                           
 35227                           ; BSR set to: 0
 35228  00C8FC  0101               	movlb	1	; () banked
 35229  00C8FE  513D               	movf	_TransferLength& (0+255),w,b
 35230  00C900  113E               	iorwf	(_TransferLength+1)& (0+255),w,b
 35231  00C902  B4D8               	btfsc	status,2,c
 35232  00C904  D004               	goto	l666
 35233                           
 35234                           ; BSR set to: 1
 35235                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 35236  00C906  073D               	decf	_TransferLength& (0+255),f,b
 35237  00C908  A0D8               	btfss	status,0,c
 35238  00C90A  073E               	decf	(_TransferLength+1)& (0+255),f,b
 35239                           
 35240                           ;usb_device_msd.c: 932: }
 35241  00C90C  D00B               	goto	l667
 35242  00C90E                     l666:
 35243                           
 35244                           ; BSR set to: 1
 35245                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 35246                           
 35247                           ; BSR set to: 1
 35248  00C90E  0100               	movlb	0	; () banked
 35249  00C910  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35250  00C912  0D01               	mullw	1
 35251  00C914  0E00               	movlw	0
 35252  00C916  24F3               	addwf	prodl,w,c
 35253  00C918  6ED9               	movwf	fsr2l,c
 35254  00C91A  0E06               	movlw	6
 35255  00C91C  20F4               	addwfc	prodh,w,c
 35256  00C91E  6EDA               	movwf	fsr2h,c
 35257  00C920  0E00               	movlw	0
 35258  00C922  6EDF               	movwf	indf2,c
 35259  00C924                     l667:
 35260                           
 35261                           ; BSR set to: 0
 35262  00C924  0100               	movlb	0	; () banked
 35263  00C926  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35264  00C928                     l664:
 35265                           
 35266                           ; BSR set to: 0
 35267                           
 35268                           ; BSR set to: 0
 35269  00C928  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35270  00C92A  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35271  00C92C  A0D8               	btfss	status,0,c
 35272  00C92E  D7E6               	goto	l665
 35273  00C930                     u12550:
 35274                           
 35275                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 35276                           
 35277                           ; BSR set to: 0
 35278                           
 35279                           ; BSR set to: 0
 35280  00C930  0E01               	movlw	1
 35281  00C932  0100               	movlb	0	; () banked
 35282  00C934  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35283  00C936  0E00               	movlw	0
 35284  00C938  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35285  00C93A  0E06               	movlw	6
 35286  00C93C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35287  00C93E  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 35288  00C942  0E02               	movlw	2
 35289  00C944  EC3D  F08A         	call	_USBTransferOnePacket
 35290  00C948  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35291  00C94C  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35292                           
 35293                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 35294  00C950  0102               	movlb	2	; () banked
 35295  00C952  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35296  00C954  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35297  00C956  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35298  00C958  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35299  00C95A  A4D8               	btfss	status,2,c
 35300  00C95C  0012               	return	
 35301                           
 35302                           ; BSR set to: 2
 35303                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 35304  00C95E  0101               	movlb	1	; () banked
 35305  00C960  6957               	setf	_MSDCommandState& (0+255),b
 35306                           
 35307                           ; BSR set to: 1
 35308                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 35309                           
 35310                           ; BSR set to: 1
 35311                           
 35312                           ;usb_device_msd.c: 949: break;
 35313  00C962  0012               	return	
 35314  00C964                     
 35315                           ; BSR set to: 1
 35316                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 35317                           
 35318                           ; BSR set to: 1
 35319                           
 35320                           ;usb_device_msd.c: 954: default:
 35321                           
 35322                           ; BSR set to: 1
 35323  00C964  0E7F               	movlw	127
 35324  00C966  EC0B  F087         	call	_MSDErrorHandler
 35325                           
 35326                           ;usb_device_msd.c: 960: }
 35327                           
 35328                           ;usb_device_msd.c: 959: break;
 35329  00C96A  0012               	return	
 35330  00C96C                     l630:
 35331  00C96C  0101               	movlb	1	; () banked
 35332  00C96E  5157               	movf	_MSDCommandState& (0+255),w,b
 35333                           
 35334                           ; Switch size 1, requested type "space"
 35335                           ; Number of cases is 12, Range of values is 0 to 254
 35336                           ; switch strategies available:
 35337                           ; Name         Instructions Cycles
 35338                           ; simple_byte           37    19 (average)
 35339                           ;	Chosen strategy is simple_byte
 35340  00C970  0A00               	xorlw	0	; case 0
 35341  00C972  B4D8               	btfsc	status,2,c
 35342  00C974  D74E               	goto	l650
 35343  00C976  0A03               	xorlw	3	; case 3
 35344  00C978  B4D8               	btfsc	status,2,c
 35345  00C97A  D6C9               	goto	l640
 35346  00C97C  0A11               	xorlw	17	; case 18
 35347  00C97E  B4D8               	btfsc	status,2,c
 35348  00C980  D634               	goto	l636
 35349  00C982  0A08               	xorlw	8	; case 26
 35350  00C984  B4D8               	btfsc	status,2,c
 35351  00C986  D6F2               	goto	l644
 35352  00C988  0A01               	xorlw	1	; case 27
 35353  00C98A  B4D8               	btfsc	status,2,c
 35354  00C98C  D76B               	goto	l654
 35355  00C98E  0A05               	xorlw	5	; case 30
 35356  00C990  B4D8               	btfsc	status,2,c
 35357  00C992  D728               	goto	l649
 35358  00C994  0A3B               	xorlw	59	; case 37
 35359  00C996  B4D8               	btfsc	status,2,c
 35360  00C998  D657               	goto	l639
 35361  00C99A  0A0D               	xorlw	13	; case 40
 35362  00C99C  B4D8               	btfsc	status,2,c
 35363  00C99E  D615               	goto	l631
 35364  00C9A0  0A02               	xorlw	2	; case 42
 35365  00C9A2  B4D8               	btfsc	status,2,c
 35366  00C9A4  D61A               	goto	l634
 35367  00C9A6  0A05               	xorlw	5	; case 47
 35368  00C9A8  B4D8               	btfsc	status,2,c
 35369  00C9AA  D75C               	goto	l654
 35370  00C9AC  0AD2               	xorlw	210	; case 253
 35371  00C9AE  B4D8               	btfsc	status,2,c
 35372  00C9B0  D765               	goto	l656
 35373  00C9B2  0A03               	xorlw	3	; case 254
 35374  00C9B4  D7D7               	goto	l670
 35375  00C9B6                     __end_of_MSDProcessCommandMediaPresent:
 35376                           	opt stack 0
 35377                           tosu	equ	0xFFF
 35378                           tosh	equ	0xFFE
 35379                           tosl	equ	0xFFD
 35380                           pclath	equ	0xFFA
 35381                           tblptru	equ	0xFF8
 35382                           tblptrh	equ	0xFF7
 35383                           tblptrl	equ	0xFF6
 35384                           tablat	equ	0xFF5
 35385                           prodh	equ	0xFF4
 35386                           prodl	equ	0xFF3
 35387                           intcon	equ	0xFF2
 35388                           postinc0	equ	0xFEE
 35389                           wreg	equ	0xFE8
 35390                           indf1	equ	0xFE7
 35391                           postinc1	equ	0xFE6
 35392                           postdec1	equ	0xFE5
 35393                           plusw1	equ	0xFE3
 35394                           fsr1h	equ	0xFE2
 35395                           fsr1l	equ	0xFE1
 35396                           indf2	equ	0xFDF
 35397                           postinc2	equ	0xFDE
 35398                           postdec2	equ	0xFDD
 35399                           plusw2	equ	0xFDB
 35400                           fsr2h	equ	0xFDA
 35401                           fsr2l	equ	0xFD9
 35402                           status	equ	0xFD8
 35403                           
 35404 ;; *************** function _MSDWriteHandler *****************
 35405 ;; Defined at:
 35406 ;;		line 1188 in file "usb_device_msd.c"
 35407 ;; Parameters:    Size  Location     Type
 35408 ;;		None
 35409 ;; Auto vars:     Size  Location     Type
 35410 ;;		None
 35411 ;; Return value:  Size  Location     Type
 35412 ;;                  1    wreg      unsigned char 
 35413 ;; Registers used:
 35414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35415 ;; Tracked objects:
 35416 ;;		On entry : 0/0
 35417 ;;		On exit  : 0/0
 35418 ;;		Unchanged: 0/0
 35419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35422 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35423 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35424 ;;Total ram usage:        5 bytes
 35425 ;; Hardware stack levels used:    1
 35426 ;; Hardware stack levels required when called:   16
 35427 ;; This function calls:
 35428 ;;		_ExternalFlash_SectorWrite
 35429 ;;		_ExternalFlash_WriteProtectStateGet
 35430 ;;		_MSDCheckForErrorCases
 35431 ;;		_USBStallEndpoint
 35432 ;;		_USBTransferOnePacket
 35433 ;; This function is called by:
 35434 ;;		_MSDProcessCommandMediaPresent
 35435 ;; This function uses a non-reentrant model
 35436 ;;
 35437                           
 35438                           	psect	text131
 35439  00D044                     __ptext131:
 35440                           	opt stack 0
 35441  00D044                     _MSDWriteHandler:
 35442                           	opt stack 10
 35443                           
 35444                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 35445                           
 35446                           ;incstack = 0
 35447  00D044  D160               	goto	l700
 35448  00D046                     l701:
 35449                           
 35450                           ; BSR set to: 1
 35451                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 35452  00D046  C211  F126         	movff	_gblCBW+17,_LBA+3
 35453                           
 35454                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 35455  00D04A  C212  F125         	movff	_gblCBW+18,_LBA+2
 35456                           
 35457                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 35458  00D04E  C213  F124         	movff	_gblCBW+19,_LBA+1
 35459                           
 35460                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 35461  00D052  C214  F123         	movff	_gblCBW+20,_LBA
 35462                           
 35463                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 35464  00D056  C216  F13E         	movff	_gblCBW+22,_TransferLength+1
 35465                           
 35466                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 35467  00D05A  C217  F13D         	movff	_gblCBW+23,_TransferLength
 35468                           
 35469                           ; BSR set to: 1
 35470                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35471  00D05E  513D               	movf	_TransferLength& (0+255),w,b
 35472  00D060  0100               	movlb	0	; () banked
 35473  00D062  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35474  00D064  0101               	movlb	1	; () banked
 35475  00D066  513E               	movf	(_TransferLength+1)& (0+255),w,b
 35476  00D068  0100               	movlb	0	; () banked
 35477  00D06A  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 35478  00D06C  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35479  00D06E  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35480  00D070  0E09               	movlw	9
 35481  00D072                     u11305:
 35482  00D072  90D8               	bcf	status,0,c
 35483  00D074  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 35484  00D076  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 35485  00D078  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 35486  00D07A  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 35487  00D07C  2EE8               	decfsz	wreg,f,c
 35488  00D07E  D7F9               	goto	u11305
 35489  00D080  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 35490  00D084  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35491  00D088  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35492  00D08C  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35493  00D090  EC98  F087         	call	_MSDCheckForErrorCases	;wreg free
 35494  00D094  0900               	iorlw	0
 35495  00D096  A4D8               	btfss	status,2,c
 35496  00D098  D148               	goto	l703
 35497                           
 35498                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 35499                           
 35500                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 35501  00D09A  C2B2  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35502  00D09E  C2B3  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35503  00D0A2  EE22  F0AC         	lfsr	2,_LUN+15
 35504  00D0A6  D801               	call	u11328
 35505  00D0A8  D00A               	goto	u11329
 35506  00D0AA                     u11328:
 35507  00D0AA  0005               	push	
 35508  00D0AC  6EFA               	movwf	pclath,c
 35509  00D0AE  50DE               	movf	postinc2,w,c
 35510  00D0B0  6EFD               	movwf	tosl,c
 35511  00D0B2  50DE               	movf	postinc2,w,c
 35512  00D0B4  6EFE               	movwf	tosh,c
 35513  00D0B6  50DE               	movf	postinc2,w,c
 35514  00D0B8  6EFF               	movwf	tosu,c
 35515  00D0BA  50FA               	movf	pclath,w,c
 35516  00D0BC  0012               	return		;indir
 35517  00D0BE                     u11329:
 35518  00D0BE  0900               	iorlw	0
 35519  00D0C0  B4D8               	btfsc	status,2,c
 35520  00D0C2  D017               	goto	l704
 35521                           
 35522                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 35523  00D0C4  0E01               	movlw	1
 35524  00D0C6  010D               	movlb	13	; () banked
 35525  00D0C8  6F8C               	movwf	140,b	;volatile
 35526                           
 35527                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 35528  00D0CA  0102               	movlb	2	; () banked
 35529  00D0CC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35530  00D0CE  0BF0               	andlw	-16
 35531  00D0D0  0907               	iorlw	7
 35532  00D0D2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35533                           
 35534                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 35535  00D0D4  0E27               	movlw	39
 35536  00D0D6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35537                           
 35538                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 35539  00D0D8  0E00               	movlw	0
 35540  00D0DA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35541                           
 35542                           ; BSR set to: 2
 35543                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 35544  00D0DC  0E00               	movlw	0
 35545  00D0DE  0100               	movlb	0	; () banked
 35546  00D0E0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35547  00D0E2  0E02               	movlw	2
 35548  00D0E4  ECB8  F089         	call	_USBStallEndpoint
 35549                           
 35550                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 35551  00D0E8  0E00               	movlw	0
 35552  00D0EA  0101               	movlb	1	; () banked
 35553  00D0EC  6F55               	movwf	_MSDWriteState& (0+255),b
 35554                           
 35555                           ; BSR set to: 1
 35556                           ;usb_device_msd.c: 1228: return MSDWriteState;
 35557  00D0EE  5155               	movf	_MSDWriteState& (0+255),w,b
 35558                           
 35559                           ; BSR set to: 1
 35560  00D0F0  0012               	return	
 35561  00D0F2                     l704:
 35562                           
 35563                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 35564                           
 35565                           ; BSR set to: 1
 35566  00D0F2  0E01               	movlw	1
 35567  00D0F4  0101               	movlb	1	; () banked
 35568  00D0F6  6F58               	movwf	_MSD_State& (0+255),b
 35569  00D0F8                     
 35570                           ; BSR set to: 1
 35571                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 35572                           
 35573                           ; BSR set to: 1
 35574  00D0F8  513D               	movf	_TransferLength& (0+255),w,b
 35575  00D0FA  113E               	iorwf	(_TransferLength+1)& (0+255),w,b
 35576  00D0FC  A4D8               	btfss	status,2,c
 35577  00D0FE  D002               	goto	l707
 35578                           
 35579                           ; BSR set to: 1
 35580                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 35581  00D100  0E00               	movlw	0
 35582  00D102  D0FF               	goto	L53
 35583  00D104                     l707:
 35584                           
 35585                           ; BSR set to: 1
 35586                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 35587                           
 35588                           ; BSR set to: 1
 35589  00D104  0E03               	movlw	3
 35590  00D106  6F55               	movwf	_MSDWriteState& (0+255),b
 35591                           
 35592                           ; BSR set to: 1
 35593                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 35594  00D108  0E00               	movlw	0
 35595  00D10A  6F43               	movwf	_ptrNextData& (0+255),b
 35596  00D10C  0E06               	movlw	6
 35597  00D10E  6F44               	movwf	(_ptrNextData+1)& (0+255),b
 35598                           
 35599                           ; BSR set to: 1
 35600                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 35601  00D110  0E00               	movlw	0
 35602  00D112  010D               	movlb	13	; () banked
 35603  00D114  6F88               	movwf	136,b	;volatile
 35604  00D116  0E02               	movlw	2
 35605  00D118  6F89               	movwf	137,b	;volatile
 35606  00D11A  0E00               	movlw	0
 35607  00D11C  6F8A               	movwf	138,b	;volatile
 35608  00D11E  0E00               	movlw	0
 35609  00D120  6F8B               	movwf	139,b	;volatile
 35610  00D122                     l708:
 35611                           
 35612                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 35613  00D122  010D               	movlb	13	; () banked
 35614  00D124  5188               	movf	136,w,b	;volatile
 35615  00D126  1189               	iorwf	137,w,b	;volatile
 35616  00D128  118A               	iorwf	138,w,b	;volatile
 35617  00D12A  118B               	iorwf	139,w,b	;volatile
 35618  00D12C  B4D8               	btfsc	status,2,c
 35619  00D12E  D01F               	goto	l709
 35620                           
 35621                           ; BSR set to: 13
 35622                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 35623  00D130  0101               	movlb	1	; () banked
 35624  00D132  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 35625  00D134  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35626  00D136  B4D8               	btfsc	status,2,c
 35627  00D138  D006               	goto	l710
 35628                           
 35629                           ; BSR set to: 1
 35630  00D13A  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35631  00D13E  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35632  00D142  BEDF               	btfsc	indf2,7,c
 35633  00D144  D0F2               	goto	l703
 35634  00D146                     l710:
 35635                           
 35636                           ; BSR set to: 1
 35637                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 35638                           
 35639                           ; BSR set to: 1
 35640  00D146  0E00               	movlw	0
 35641  00D148  0100               	movlb	0	; () banked
 35642  00D14A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35643  00D14C  C143  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35644  00D150  C144  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35645  00D154  0E40               	movlw	64
 35646  00D156  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35647  00D158  0E02               	movlw	2
 35648  00D15A  EC3D  F08A         	call	_USBTransferOnePacket
 35649  00D15E  C060  F141         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 35650  00D162  C061  F142         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 35651                           
 35652                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 35653  00D166  0E04               	movlw	4
 35654  00D168  0101               	movlb	1	; () banked
 35655  00D16A  6F55               	movwf	_MSDWriteState& (0+255),b
 35656                           
 35657                           ;usb_device_msd.c: 1260: }
 35658  00D16C  D023               	goto	l711
 35659  00D16E                     l709:
 35660                           
 35661                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 35662                           
 35663                           ; BSR set to: 1
 35664  00D16E  C2B2  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35665  00D172  C2B3  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35666  00D176  EE22  F0AC         	lfsr	2,_LUN+15
 35667  00D17A  D801               	call	u11388
 35668  00D17C  D00A               	goto	u11389
 35669  00D17E                     u11388:
 35670  00D17E  0005               	push	
 35671  00D180  6EFA               	movwf	pclath,c
 35672  00D182  50DE               	movf	postinc2,w,c
 35673  00D184  6EFD               	movwf	tosl,c
 35674  00D186  50DE               	movf	postinc2,w,c
 35675  00D188  6EFE               	movwf	tosh,c
 35676  00D18A  50DE               	movf	postinc2,w,c
 35677  00D18C  6EFF               	movwf	tosu,c
 35678  00D18E  50FA               	movf	pclath,w,c
 35679  00D190  0012               	return		;indir
 35680  00D192                     u11389:
 35681  00D192  0900               	iorlw	0
 35682  00D194  B4D8               	btfsc	status,2,c
 35683  00D196  D00C               	goto	l712
 35684                           
 35685                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 35686  00D198  0E01               	movlw	1
 35687  00D19A  010D               	movlb	13	; () banked
 35688  00D19C  6F8C               	movwf	140,b	;volatile
 35689                           
 35690                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 35691  00D19E  0102               	movlb	2	; () banked
 35692  00D1A0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35693  00D1A2  0BF0               	andlw	-16
 35694  00D1A4  0902               	iorlw	2
 35695  00D1A6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35696                           
 35697                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 35698  00D1A8  0E27               	movlw	39
 35699  00D1AA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35700                           
 35701                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 35702  00D1AC  0E00               	movlw	0
 35703  00D1AE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35704  00D1B0                     l712:
 35705                           
 35706                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 35707  00D1B0  0E02               	movlw	2
 35708  00D1B2  D0A6               	goto	L90
 35709  00D1B4                     l711:
 35710                           
 35711                           ; BSR set to: 1
 35712                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 35713                           
 35714                           ; BSR set to: 1
 35715                           
 35716                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 35717                           
 35718                           ; BSR set to: 1
 35719  00D1B4  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 35720  00D1B6  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35721  00D1B8  B4D8               	btfsc	status,2,c
 35722  00D1BA  D006               	goto	l714
 35723                           
 35724                           ; BSR set to: 1
 35725  00D1BC  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35726  00D1C0  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35727  00D1C4  BEDF               	btfsc	indf2,7,c
 35728  00D1C6  D0B1               	goto	l703
 35729  00D1C8                     l714:
 35730                           
 35731                           ; BSR set to: 1
 35732                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 35733                           
 35734                           ; BSR set to: 1
 35735  00D1C8  EE20 F001          	lfsr	2,1
 35736  00D1CC  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 35737  00D1CE  26D9               	addwf	fsr2l,f,c
 35738  00D1D0  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 35739  00D1D2  22DA               	addwfc	fsr2h,f,c
 35740  00D1D4  50DF               	movf	indf2,w,c
 35741  00D1D6  0100               	movlb	0	; () banked
 35742  00D1D8  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35743  00D1DA  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 35744  00D1DE  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35745  00D1E0  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35746  00D1E2  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 35747  00D1E4  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 35748  00D1E6  0102               	movlb	2	; () banked
 35749  00D1E8  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35750  00D1EA  0100               	movlb	0	; () banked
 35751  00D1EC  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 35752  00D1EE  0102               	movlb	2	; () banked
 35753  00D1F0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35754  00D1F2  0100               	movlb	0	; () banked
 35755  00D1F4  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 35756  00D1F6  0102               	movlb	2	; () banked
 35757  00D1F8  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35758  00D1FA  0100               	movlb	0	; () banked
 35759  00D1FC  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 35760  00D1FE  0102               	movlb	2	; () banked
 35761  00D200  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35762                           
 35763                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 35764  00D202  0101               	movlb	1	; () banked
 35765  00D204  EE20 F001          	lfsr	2,1
 35766  00D208  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 35767  00D20A  26D9               	addwf	fsr2l,f,c
 35768  00D20C  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 35769  00D20E  22DA               	addwfc	fsr2h,f,c
 35770  00D210  50DF               	movf	indf2,w,c
 35771  00D212  0100               	movlb	0	; () banked
 35772  00D214  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35773  00D216  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 35774  00D21A  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35775  00D21C  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35776  00D21E  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 35777  00D220  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 35778  00D222  010D               	movlb	13	; () banked
 35779  00D224  5F88               	subwf	136,f,b	;volatile
 35780  00D226  0100               	movlb	0	; () banked
 35781  00D228  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 35782  00D22A  010D               	movlb	13	; () banked
 35783  00D22C  5B89               	subwfb	137,f,b	;volatile
 35784  00D22E  0100               	movlb	0	; () banked
 35785  00D230  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 35786  00D232  010D               	movlb	13	; () banked
 35787  00D234  5B8A               	subwfb	138,f,b	;volatile
 35788  00D236  0100               	movlb	0	; () banked
 35789  00D238  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 35790  00D23A  010D               	movlb	13	; () banked
 35791  00D23C  5B8B               	subwfb	139,f,b	;volatile
 35792                           
 35793                           ; BSR set to: 13
 35794                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 35795  00D23E  0E40               	movlw	64
 35796  00D240  0101               	movlb	1	; () banked
 35797  00D242  2743               	addwf	_ptrNextData& (0+255),f,b
 35798  00D244  0E00               	movlw	0
 35799  00D246  2344               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35800                           
 35801                           ; BSR set to: 1
 35802                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 35803  00D248  0E03               	movlw	3
 35804  00D24A  D05B               	goto	L53
 35805  00D24C                     
 35806                           ; BSR set to: 1
 35807                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 35808                           
 35809                           ; BSR set to: 1
 35810  00D24C  010D               	movlb	13	; () banked
 35811  00D24E  518C               	movf	140,w,b	;volatile
 35812  00D250  A4D8               	btfss	status,2,c
 35813  00D252  D040               	goto	l719
 35814                           
 35815                           ; BSR set to: 13
 35816                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 35817  00D254  C2B2  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 35818  00D258  C2B3  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 35819  00D25C  C123  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 35820  00D260  C124  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 35821  00D264  C125  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 35822  00D268  C126  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 35823  00D26C  0E00               	movlw	0
 35824  00D26E  0100               	movlb	0	; () banked
 35825  00D270  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 35826  00D272  0E06               	movlw	6
 35827  00D274  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 35828  00D276  0101               	movlb	1	; () banked
 35829  00D278  5123               	movf	_LBA& (0+255),w,b
 35830  00D27A  1124               	iorwf	(_LBA+1)& (0+255),w,b
 35831  00D27C  1125               	iorwf	(_LBA+2)& (0+255),w,b
 35832  00D27E  1126               	iorwf	(_LBA+3)& (0+255),w,b
 35833  00D280  A4D8               	btfss	status,2,c
 35834  00D282  D002               	goto	u11430
 35835  00D284  0E01               	movlw	1
 35836  00D286  D001               	goto	u11440
 35837  00D288                     u11430:
 35838  00D288  0E00               	movlw	0
 35839  00D28A                     u11440:
 35840  00D28A  0100               	movlb	0	; () banked
 35841  00D28C  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 35842  00D28E  EE22  F0AF         	lfsr	2,_LUN+18
 35843  00D292  D801               	call	u11458
 35844  00D294  D00A               	goto	u11459
 35845  00D296                     u11458:
 35846  00D296  0005               	push	
 35847  00D298  6EFA               	movwf	pclath,c
 35848  00D29A  50DE               	movf	postinc2,w,c
 35849  00D29C  6EFD               	movwf	tosl,c
 35850  00D29E  50DE               	movf	postinc2,w,c
 35851  00D2A0  6EFE               	movwf	tosh,c
 35852  00D2A2  50DE               	movf	postinc2,w,c
 35853  00D2A4  6EFF               	movwf	tosu,c
 35854  00D2A6  50FA               	movf	pclath,w,c
 35855  00D2A8  0012               	return		;indir
 35856  00D2AA                     u11459:
 35857  00D2AA  06E8               	decf	wreg,f,c
 35858  00D2AC  B4D8               	btfsc	status,2,c
 35859  00D2AE  D012               	goto	l719
 35860                           
 35861                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 35862  00D2B0  0E64               	movlw	100
 35863  00D2B2  0101               	movlb	1	; () banked
 35864  00D2B4  6154               	cpfslt	_MSDRetryAttempt& (0+255),b
 35865  00D2B6  D002               	goto	l718
 35866                           
 35867                           ; BSR set to: 1
 35868                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 35869  00D2B8  2B54               	incf	_MSDRetryAttempt& (0+255),f,b
 35870                           
 35871                           ;usb_device_msd.c: 1314: break;
 35872  00D2BA  D037               	goto	l703
 35873  00D2BC                     l718:
 35874                           
 35875                           ; BSR set to: 1
 35876                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 35877                           
 35878                           ; BSR set to: 1
 35879  00D2BC  0E01               	movlw	1
 35880  00D2BE  010D               	movlb	13	; () banked
 35881  00D2C0  6F8C               	movwf	140,b	;volatile
 35882                           
 35883                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 35884  00D2C2  0102               	movlb	2	; () banked
 35885  00D2C4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35886  00D2C6  0BF0               	andlw	-16
 35887  00D2C8  0903               	iorlw	3
 35888  00D2CA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35889                           
 35890                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 35891  00D2CC  0E00               	movlw	0
 35892  00D2CE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35893                           
 35894                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 35895  00D2D0  0E00               	movlw	0
 35896  00D2D2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35897  00D2D4                     l719:
 35898                           
 35899                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 35900                           
 35901                           ; BSR set to: 2
 35902                           
 35903                           ; BSR set to: 2
 35904                           
 35905                           ; BSR set to: 2
 35906  00D2D4  0E01               	movlw	1
 35907  00D2D6  0101               	movlb	1	; () banked
 35908  00D2D8  2723               	addwf	_LBA& (0+255),f,b
 35909  00D2DA  0E00               	movlw	0
 35910  00D2DC  2324               	addwfc	(_LBA+1)& (0+255),f,b
 35911  00D2DE  2325               	addwfc	(_LBA+2)& (0+255),f,b
 35912  00D2E0  2326               	addwfc	(_LBA+3)& (0+255),f,b
 35913                           
 35914                           ; BSR set to: 1
 35915                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 35916  00D2E2  073D               	decf	_TransferLength& (0+255),f,b
 35917  00D2E4  A0D8               	btfss	status,0,c
 35918  00D2E6  073E               	decf	(_TransferLength+1)& (0+255),f,b
 35919                           
 35920                           ; BSR set to: 1
 35921                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 35922  00D2E8  0E01               	movlw	1
 35923  00D2EA  D00B               	goto	L53
 35924  00D2EC                     
 35925                           ; BSR set to: 1
 35926                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 35927                           
 35928                           ; BSR set to: 1
 35929  00D2EC  0E02               	movlw	2
 35930  00D2EE  010D               	movlb	13	; () banked
 35931  00D2F0  6F8C               	movwf	140,b	;volatile
 35932                           
 35933                           ; BSR set to: 13
 35934                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 35935  00D2F2  0E00               	movlw	0
 35936  00D2F4  0100               	movlb	0	; () banked
 35937  00D2F6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35938  00D2F8  0E02               	movlw	2
 35939  00D2FA  ECB8  F089         	call	_USBStallEndpoint
 35940                           
 35941                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 35942  00D2FE  0E00               	movlw	0
 35943  00D300                     L90:
 35944  00D300  0101               	movlb	1	; () banked
 35945  00D302                     L53:
 35946  00D302  6F55               	movwf	_MSDWriteState& (0+255),b
 35947                           
 35948                           ; BSR set to: 1
 35949                           ;usb_device_msd.c: 1345: }
 35950                           
 35951                           ;usb_device_msd.c: 1344: break;
 35952  00D304  D012               	goto	l703
 35953  00D306                     l700:
 35954                           
 35955                           ; BSR set to: 1
 35956  00D306  0101               	movlb	1	; () banked
 35957  00D308  5155               	movf	_MSDWriteState& (0+255),w,b
 35958                           
 35959                           ; Switch size 1, requested type "space"
 35960                           ; Number of cases is 5, Range of values is 0 to 4
 35961                           ; switch strategies available:
 35962                           ; Name         Instructions Cycles
 35963                           ; simple_byte           16     9 (average)
 35964                           ;	Chosen strategy is simple_byte
 35965  00D30A  0A00               	xorlw	0	; case 0
 35966  00D30C  B4D8               	btfsc	status,2,c
 35967  00D30E  D69B               	goto	l701
 35968  00D310  0A01               	xorlw	1	; case 1
 35969  00D312  B4D8               	btfsc	status,2,c
 35970  00D314  D6F1               	goto	l706
 35971  00D316  0A03               	xorlw	3	; case 2
 35972  00D318  B4D8               	btfsc	status,2,c
 35973  00D31A  D798               	goto	l715
 35974  00D31C  0A01               	xorlw	1	; case 3
 35975  00D31E  B4D8               	btfsc	status,2,c
 35976  00D320  D700               	goto	l708
 35977  00D322  0A07               	xorlw	7	; case 4
 35978  00D324  B4D8               	btfsc	status,2,c
 35979  00D326  D746               	goto	l711
 35980  00D328  D7E1               	goto	l720
 35981  00D32A                     l703:
 35982                           
 35983                           ;usb_device_msd.c: 1347: return MSDWriteState;
 35984                           
 35985                           ; BSR set to: 1
 35986  00D32A  0101               	movlb	1	; () banked
 35987  00D32C  5155               	movf	_MSDWriteState& (0+255),w,b
 35988  00D32E  0012               	return	
 35989  00D330                     __end_of_MSDWriteHandler:
 35990                           	opt stack 0
 35991                           tosu	equ	0xFFF
 35992                           tosh	equ	0xFFE
 35993                           tosl	equ	0xFFD
 35994                           pclath	equ	0xFFA
 35995                           tblptru	equ	0xFF8
 35996                           tblptrh	equ	0xFF7
 35997                           tblptrl	equ	0xFF6
 35998                           tablat	equ	0xFF5
 35999                           prodh	equ	0xFF4
 36000                           prodl	equ	0xFF3
 36001                           intcon	equ	0xFF2
 36002                           postinc0	equ	0xFEE
 36003                           wreg	equ	0xFE8
 36004                           indf1	equ	0xFE7
 36005                           postinc1	equ	0xFE6
 36006                           postdec1	equ	0xFE5
 36007                           plusw1	equ	0xFE3
 36008                           fsr1h	equ	0xFE2
 36009                           fsr1l	equ	0xFE1
 36010                           indf2	equ	0xFDF
 36011                           postinc2	equ	0xFDE
 36012                           postdec2	equ	0xFDD
 36013                           plusw2	equ	0xFDB
 36014                           fsr2h	equ	0xFDA
 36015                           fsr2l	equ	0xFD9
 36016                           status	equ	0xFD8
 36017                           
 36018 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 36019 ;; Defined at:
 36020 ;;		line 34 in file "external_flash.c"
 36021 ;; Parameters:    Size  Location     Type
 36022 ;;  config          2    0[BANK0 ] PTR void 
 36023 ;;		 -> NULL(0), 
 36024 ;; Auto vars:     Size  Location     Type
 36025 ;;		None
 36026 ;; Return value:  Size  Location     Type
 36027 ;;                  1    wreg      unsigned char 
 36028 ;; Registers used:
 36029 ;;		wreg
 36030 ;; Tracked objects:
 36031 ;;		On entry : 0/0
 36032 ;;		On exit  : 0/0
 36033 ;;		Unchanged: 0/0
 36034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36038 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36039 ;;Total ram usage:        2 bytes
 36040 ;; Hardware stack levels used:    1
 36041 ;; Hardware stack levels required when called:   10
 36042 ;; This function calls:
 36043 ;;		Nothing
 36044 ;; This function is called by:
 36045 ;;		_MSDWriteHandler
 36046 ;;		_MSDProcessCommandMediaPresent
 36047 ;; This function uses a non-reentrant model
 36048 ;;
 36049                           
 36050                           	psect	text132
 36051  016124                     __ptext132:
 36052                           	opt stack 0
 36053  016124                     _ExternalFlash_WriteProtectStateGet:
 36054                           	opt stack 15
 36055                           
 36056                           ;external_flash.c: 37: return 0;
 36057                           
 36058                           ; BSR set to: 1
 36059                           ;incstack = 0
 36060  016124  0E00               	movlw	0
 36061  016126  0012               	return	
 36062  016128                     __end_of_ExternalFlash_WriteProtectStateGet:
 36063                           	opt stack 0
 36064                           tosu	equ	0xFFF
 36065                           tosh	equ	0xFFE
 36066                           tosl	equ	0xFFD
 36067                           pclath	equ	0xFFA
 36068                           tblptru	equ	0xFF8
 36069                           tblptrh	equ	0xFF7
 36070                           tblptrl	equ	0xFF6
 36071                           tablat	equ	0xFF5
 36072                           prodh	equ	0xFF4
 36073                           prodl	equ	0xFF3
 36074                           intcon	equ	0xFF2
 36075                           postinc0	equ	0xFEE
 36076                           wreg	equ	0xFE8
 36077                           indf1	equ	0xFE7
 36078                           postinc1	equ	0xFE6
 36079                           postdec1	equ	0xFE5
 36080                           plusw1	equ	0xFE3
 36081                           fsr1h	equ	0xFE2
 36082                           fsr1l	equ	0xFE1
 36083                           indf2	equ	0xFDF
 36084                           postinc2	equ	0xFDE
 36085                           postdec2	equ	0xFDD
 36086                           plusw2	equ	0xFDB
 36087                           fsr2h	equ	0xFDA
 36088                           fsr2l	equ	0xFD9
 36089                           status	equ	0xFD8
 36090                           
 36091 ;; *************** function _ExternalFlash_SectorWrite *****************
 36092 ;; Defined at:
 36093 ;;		line 56 in file "external_flash.c"
 36094 ;; Parameters:    Size  Location     Type
 36095 ;;  config          2   36[BANK0 ] PTR void 
 36096 ;;		 -> NULL(0), 
 36097 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 36098 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 36099 ;;		 -> msd_buffer(512), 
 36100 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 36101 ;; Auto vars:     Size  Location     Type
 36102 ;;  page            2   45[BANK0 ] unsigned int 
 36103 ;; Return value:  Size  Location     Type
 36104 ;;                  1    wreg      unsigned char 
 36105 ;; Registers used:
 36106 ;;		wreg, status,2, status,0, cstack
 36107 ;; Tracked objects:
 36108 ;;		On entry : 0/0
 36109 ;;		On exit  : 0/0
 36110 ;;		Unchanged: 0/0
 36111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36112 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36113 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36115 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36116 ;;Total ram usage:       11 bytes
 36117 ;; Hardware stack levels used:    1
 36118 ;; Hardware stack levels required when called:   15
 36119 ;; This function calls:
 36120 ;;		_flash_sector_write
 36121 ;; This function is called by:
 36122 ;;		_MSDWriteHandler
 36123 ;; This function uses a non-reentrant model
 36124 ;;
 36125                           
 36126                           	psect	text133
 36127  0159F2                     __ptext133:
 36128                           	opt stack 0
 36129  0159F2                     _ExternalFlash_SectorWrite:
 36130                           	opt stack 10
 36131                           
 36132                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 36133                           
 36134                           ;incstack = 0
 36135  0159F2  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 36136  0159F6  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 36137                           
 36138                           ;external_flash.c: 61: if(sector_addr >= 8192)
 36139  0159FA  0100               	movlb	0	; () banked
 36140  0159FC  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 36141  0159FE  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 36142  015A00  E104               	bnz	u10870
 36143  015A02  0E20               	movlw	32
 36144  015A04  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 36145  015A06  A0D8               	btfss	status,0,c
 36146  015A08  D002               	goto	l1703
 36147  015A0A                     u10870:
 36148                           
 36149                           ; BSR set to: 0
 36150                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 36151  015A0A  0E00               	movlw	0
 36152                           
 36153                           ; BSR set to: 0
 36154  015A0C  0012               	return	
 36155  015A0E                     l1703:
 36156                           
 36157                           ; BSR set to: 0
 36158                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 36159                           
 36160                           ; BSR set to: 0
 36161  015A0E  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 36162  015A12  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 36163  015A16  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 36164  015A1A  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 36165  015A1E  ECB3  F0A9         	call	_flash_sector_write	;wreg free
 36166                           
 36167                           ;external_flash.c: 69: return 1;
 36168  015A22  0E01               	movlw	1
 36169  015A24  0012               	return	
 36170  015A26                     __end_of_ExternalFlash_SectorWrite:
 36171                           	opt stack 0
 36172                           tosu	equ	0xFFF
 36173                           tosh	equ	0xFFE
 36174                           tosl	equ	0xFFD
 36175                           pclath	equ	0xFFA
 36176                           tblptru	equ	0xFF8
 36177                           tblptrh	equ	0xFF7
 36178                           tblptrl	equ	0xFF6
 36179                           tablat	equ	0xFF5
 36180                           prodh	equ	0xFF4
 36181                           prodl	equ	0xFF3
 36182                           intcon	equ	0xFF2
 36183                           postinc0	equ	0xFEE
 36184                           wreg	equ	0xFE8
 36185                           indf1	equ	0xFE7
 36186                           postinc1	equ	0xFE6
 36187                           postdec1	equ	0xFE5
 36188                           plusw1	equ	0xFE3
 36189                           fsr1h	equ	0xFE2
 36190                           fsr1l	equ	0xFE1
 36191                           indf2	equ	0xFDF
 36192                           postinc2	equ	0xFDE
 36193                           postdec2	equ	0xFDD
 36194                           plusw2	equ	0xFDB
 36195                           fsr2h	equ	0xFDA
 36196                           fsr2l	equ	0xFD9
 36197                           status	equ	0xFD8
 36198                           
 36199 ;; *************** function _flash_sector_write *****************
 36200 ;; Defined at:
 36201 ;;		line 434 in file "flash.c"
 36202 ;; Parameters:    Size  Location     Type
 36203 ;;  page            2   31[BANK0 ] unsigned int 
 36204 ;;  data            2   33[BANK0 ] PTR unsigned char 
 36205 ;;		 -> buffer(512), msd_buffer(512), 
 36206 ;; Auto vars:     Size  Location     Type
 36207 ;;  match           1   35[BANK0 ] enum E7062
 36208 ;; Return value:  Size  Location     Type
 36209 ;;                  1    wreg      void 
 36210 ;; Registers used:
 36211 ;;		wreg, status,2, status,0, cstack
 36212 ;; Tracked objects:
 36213 ;;		On entry : 0/0
 36214 ;;		On exit  : 0/0
 36215 ;;		Unchanged: 0/0
 36216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36217 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36220 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36221 ;;Total ram usage:        5 bytes
 36222 ;; Hardware stack levels used:    1
 36223 ;; Hardware stack levels required when called:   14
 36224 ;; This function calls:
 36225 ;;		__flash_compare_page_to_buffer
 36226 ;;		__flash_write_page_from_buffer
 36227 ;;		__flash_write_to_buffer
 36228 ;; This function is called by:
 36229 ;;		_ExternalFlash_SectorWrite
 36230 ;;		__make_cluster_chain
 36231 ;;		_fat_restore_mbr_fbr
 36232 ;;		_fat_format
 36233 ;; This function uses a non-reentrant model
 36234 ;;
 36235                           
 36236                           	psect	text134
 36237  015366                     __ptext134:
 36238                           	opt stack 0
 36239  015366                     _flash_sector_write:
 36240                           	opt stack 13
 36241                           
 36242                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 36243                           
 36244                           ;incstack = 0
 36245  015366  0E00               	movlw	0
 36246  015368  0100               	movlb	0	; () banked
 36247  01536A  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 36248  01536C  0E00               	movlw	0
 36249  01536E  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 36250  015370  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 36251  015374  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 36252  015378  0E02               	movlw	2
 36253  01537A  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 36254  01537C  0E00               	movlw	0
 36255  01537E  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 36256  015380  0E00               	movlw	0
 36257  015382  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 36258  015384  EC12  F0A9         	call	__flash_write_to_buffer	;wreg free
 36259                           
 36260                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36261  015388  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 36262  01538C  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 36263  015390  0E00               	movlw	0
 36264  015392  0100               	movlb	0	; () banked
 36265  015394  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 36266  015396  ECB4  F0A1         	call	__flash_compare_page_to_buffer	;wreg free
 36267  01539A  0100               	movlb	0	; () banked
 36268  01539C  6F83               	movwf	flash_sector_write@match& (0+255),b
 36269                           
 36270                           ; BSR set to: 0
 36271                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 36272  01539E  0583               	decf	flash_sector_write@match& (0+255),w,b
 36273  0153A0  A4D8               	btfss	status,2,c
 36274  0153A2  0012               	return	
 36275                           
 36276                           ; BSR set to: 0
 36277                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36278  0153A4  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 36279  0153A8  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 36280  0153AC  0E00               	movlw	0
 36281  0153AE  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 36282  0153B0  ECDE  F0A6         	call	__flash_write_page_from_buffer	;wreg free
 36283  0153B4  0012               	return	
 36284  0153B6                     __end_of_flash_sector_write:
 36285                           	opt stack 0
 36286                           tosu	equ	0xFFF
 36287                           tosh	equ	0xFFE
 36288                           tosl	equ	0xFFD
 36289                           pclath	equ	0xFFA
 36290                           tblptru	equ	0xFF8
 36291                           tblptrh	equ	0xFF7
 36292                           tblptrl	equ	0xFF6
 36293                           tablat	equ	0xFF5
 36294                           prodh	equ	0xFF4
 36295                           prodl	equ	0xFF3
 36296                           intcon	equ	0xFF2
 36297                           postinc0	equ	0xFEE
 36298                           wreg	equ	0xFE8
 36299                           indf1	equ	0xFE7
 36300                           postinc1	equ	0xFE6
 36301                           postdec1	equ	0xFE5
 36302                           plusw1	equ	0xFE3
 36303                           fsr1h	equ	0xFE2
 36304                           fsr1l	equ	0xFE1
 36305                           indf2	equ	0xFDF
 36306                           postinc2	equ	0xFDE
 36307                           postdec2	equ	0xFDD
 36308                           plusw2	equ	0xFDB
 36309                           fsr2h	equ	0xFDA
 36310                           fsr2l	equ	0xFD9
 36311                           status	equ	0xFD8
 36312                           
 36313 ;; *************** function __flash_write_to_buffer *****************
 36314 ;; Defined at:
 36315 ;;		line 236 in file "flash.c"
 36316 ;; Parameters:    Size  Location     Type
 36317 ;;  start           2   19[BANK0 ] unsigned int 
 36318 ;;  data            2   21[BANK0 ] PTR unsigned char 
 36319 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36320 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36321 ;;  data_length     2   23[BANK0 ] unsigned int 
 36322 ;;  buffer          1   25[BANK0 ] enum E7058
 36323 ;; Auto vars:     Size  Location     Type
 36324 ;;  command         4   26[BANK0 ] unsigned char [4]
 36325 ;; Return value:  Size  Location     Type
 36326 ;;                  1    wreg      void 
 36327 ;; Registers used:
 36328 ;;		wreg, status,2, status,0, cstack
 36329 ;; Tracked objects:
 36330 ;;		On entry : 0/0
 36331 ;;		On exit  : 0/0
 36332 ;;		Unchanged: 0/0
 36333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36334 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36335 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36337 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36338 ;;Total ram usage:       11 bytes
 36339 ;; Hardware stack levels used:    1
 36340 ;; Hardware stack levels required when called:   13
 36341 ;; This function calls:
 36342 ;;		__flash_is_busy
 36343 ;;		_spi_tx_tx
 36344 ;; This function is called by:
 36345 ;;		_flash_sector_write
 36346 ;;		_flash_partial_write
 36347 ;;		_flash_write_to_buffer
 36348 ;; This function uses a non-reentrant model
 36349 ;;
 36350                           
 36351                           	psect	text135
 36352  015224                     __ptext135:
 36353                           	opt stack 0
 36354  015224                     __flash_write_to_buffer:
 36355                           	opt stack 13
 36356                           
 36357                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 36358                           
 36359                           ;incstack = 0
 36360  015224  EC4D  F0AF         	call	__flash_is_busy	;wreg free
 36361  015228  0900               	iorlw	0
 36362  01522A  A4D8               	btfss	status,2,c
 36363  01522C  D7FB               	goto	__flash_write_to_buffer
 36364                           
 36365                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 36366  01522E  0100               	movlb	0	; () banked
 36367  015230  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 36368  015232  A4D8               	btfss	status,2,c
 36369  015234  D002               	goto	l1589
 36370                           
 36371                           ; BSR set to: 0
 36372                           ;flash.c: 245: command[0] = 0x84;
 36373  015236  0E84               	movlw	132
 36374  015238  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36375  01523A                     l1589:
 36376                           
 36377                           ; BSR set to: 0
 36378                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 36379                           
 36380                           ; BSR set to: 0
 36381  01523A  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 36382  01523C  A4D8               	btfss	status,2,c
 36383  01523E  D002               	goto	l1590
 36384                           
 36385                           ; BSR set to: 0
 36386                           ;flash.c: 247: command[0] = 0x87;
 36387  015240  0E87               	movlw	135
 36388  015242  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36389  015244                     l1590:
 36390                           
 36391                           ; BSR set to: 0
 36392                           ;flash.c: 249: command[1] = 0x00;
 36393  015244  0E00               	movlw	0
 36394  015246  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 36395                           
 36396                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36397  015248  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 36398  01524A  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 36399                           
 36400                           ; BSR set to: 0
 36401                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 36402  01524C  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36403                           
 36404                           ; BSR set to: 0
 36405                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 36406  015250  0E7A               	movlw	low __flash_write_to_buffer@command
 36407  015252  6F60               	movwf	spi_tx_tx@command& (0+255),b
 36408  015254  0E00               	movlw	high __flash_write_to_buffer@command
 36409  015256  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 36410  015258  0E00               	movlw	0
 36411  01525A  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 36412  01525C  0E04               	movlw	4
 36413  01525E  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 36414  015260  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36415  015264  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36416  015268  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36417  01526C  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36418  015270  EC5C  F09F         	call	_spi_tx_tx	;wreg free
 36419  015274  0012               	return		;funcret
 36420  015276                     __end_of__flash_write_to_buffer:
 36421                           	opt stack 0
 36422                           tosu	equ	0xFFF
 36423                           tosh	equ	0xFFE
 36424                           tosl	equ	0xFFD
 36425                           pclath	equ	0xFFA
 36426                           tblptru	equ	0xFF8
 36427                           tblptrh	equ	0xFF7
 36428                           tblptrl	equ	0xFF6
 36429                           tablat	equ	0xFF5
 36430                           prodh	equ	0xFF4
 36431                           prodl	equ	0xFF3
 36432                           intcon	equ	0xFF2
 36433                           postinc0	equ	0xFEE
 36434                           wreg	equ	0xFE8
 36435                           indf1	equ	0xFE7
 36436                           postinc1	equ	0xFE6
 36437                           postdec1	equ	0xFE5
 36438                           plusw1	equ	0xFE3
 36439                           fsr1h	equ	0xFE2
 36440                           fsr1l	equ	0xFE1
 36441                           indf2	equ	0xFDF
 36442                           postinc2	equ	0xFDE
 36443                           postdec2	equ	0xFDD
 36444                           plusw2	equ	0xFDB
 36445                           fsr2h	equ	0xFDA
 36446                           fsr2l	equ	0xFD9
 36447                           status	equ	0xFD8
 36448                           
 36449 ;; *************** function _spi_tx_tx *****************
 36450 ;; Defined at:
 36451 ;;		line 146 in file "spi.c"
 36452 ;; Parameters:    Size  Location     Type
 36453 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36454 ;;		 -> _flash_write_to_buffer@command(4), 
 36455 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36456 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36457 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36458 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36459 ;;  data_length     2    6[BANK0 ] unsigned int 
 36460 ;; Auto vars:     Size  Location     Type
 36461 ;;		None
 36462 ;; Return value:  Size  Location     Type
 36463 ;;                  1    wreg      void 
 36464 ;; Registers used:
 36465 ;;		wreg, status,2, status,0
 36466 ;; Tracked objects:
 36467 ;;		On entry : 0/0
 36468 ;;		On exit  : 0/0
 36469 ;;		Unchanged: 0/0
 36470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36471 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36473 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36474 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36475 ;;Total ram usage:       12 bytes
 36476 ;; Hardware stack levels used:    1
 36477 ;; Hardware stack levels required when called:   10
 36478 ;; This function calls:
 36479 ;;		Nothing
 36480 ;; This function is called by:
 36481 ;;		__flash_write_to_buffer
 36482 ;; This function uses a non-reentrant model
 36483 ;;
 36484                           
 36485                           	psect	text136
 36486  013EB8                     __ptext136:
 36487                           	opt stack 0
 36488  013EB8                     _spi_tx_tx:
 36489                           	opt stack 15
 36490                           
 36491                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 36492                           
 36493                           ;incstack = 0
 36494  013EB8  9E88               	bcf	3976,7,c	;volatile
 36495                           
 36496                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 36497  013EBA  9C88               	bcf	3976,6,c	;volatile
 36498                           
 36499                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 36500  013EBC  8A88               	bsf	3976,5,c	;volatile
 36501                           
 36502                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 36503  013EBE  9888               	bcf	3976,4,c	;volatile
 36504                           
 36505                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 36506  013EC0  9688               	bcf	3976,3,c	;volatile
 36507                           
 36508                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 36509  013EC2  8488               	bsf	3976,2,c	;volatile
 36510                           
 36511                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 36512  013EC4  9288               	bcf	3976,1,c	;volatile
 36513                           
 36514                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 36515  013EC6  9886               	bcf	3974,4,c	;volatile
 36516  013EC8  9A86               	bcf	3974,5,c	;volatile
 36517  013ECA  9C86               	bcf	3974,6,c	;volatile
 36518  013ECC  9E86               	bcf	3974,7,c	;volatile
 36519                           
 36520                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 36521  013ECE  9086               	bcf	3974,0,c	;volatile
 36522  013ED0  9286               	bcf	3974,1,c	;volatile
 36523  013ED2  9486               	bcf	3974,2,c	;volatile
 36524  013ED4  9686               	bcf	3974,3,c	;volatile
 36525                           
 36526                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36527  013ED6  0100               	movlb	0	; () banked
 36528  013ED8  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 36529  013EDA  6E6A               	movwf	3946,c	;volatile
 36530                           
 36531                           ; BSR set to: 0
 36532                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36533  013EDC  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36534                           
 36535                           ; BSR set to: 0
 36536                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36537  013EE0  0EFF               	movlw	255
 36538  013EE2  6F68               	movwf	??_spi_tx_tx& (0+255),b
 36539  013EE4  0EFF               	movlw	255
 36540  013EE6  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 36541  013EE8  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 36542  013EEC  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 36543  013EF0  5168               	movf	??_spi_tx_tx& (0+255),w,b
 36544  013EF2  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 36545  013EF4  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 36546  013EF6  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 36547  013EF8  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36548  013EFC  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 36549  013EFE  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 36550  013F00  6E66               	movwf	3942,c	;volatile
 36551                           
 36552                           ; BSR set to: 0
 36553                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36554  013F02  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 36555  013F04  6E67               	movwf	3943,c	;volatile
 36556                           
 36557                           ; BSR set to: 0
 36558                           ;spi.c: 174: LATDbits.LD7 = 0;
 36559  013F06  9E8C               	bcf	3980,7,c	;volatile
 36560                           
 36561                           ; BSR set to: 0
 36562                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 36563  013F08  8088               	bsf	3976,0,c	;volatile
 36564  013F0A                     
 36565                           ; BSR set to: 0
 36566  013F0A  B088               	btfsc	3976,0,c	;volatile
 36567  013F0C  D7FE               	goto	l2205
 36568                           
 36569                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36570  013F0E  0100               	movlb	0	; () banked
 36571  013F10  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 36572  013F12  6E6A               	movwf	3946,c	;volatile
 36573                           
 36574                           ; BSR set to: 0
 36575                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36576  013F14  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 36577                           
 36578                           ; BSR set to: 0
 36579                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36580  013F18  0EFF               	movlw	255
 36581  013F1A  6F68               	movwf	??_spi_tx_tx& (0+255),b
 36582  013F1C  0EFF               	movlw	255
 36583  013F1E  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 36584  013F20  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 36585  013F24  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 36586  013F28  5168               	movf	??_spi_tx_tx& (0+255),w,b
 36587  013F2A  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 36588  013F2C  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 36589  013F2E  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 36590  013F30  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36591  013F34  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 36592  013F36  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 36593  013F38  6E66               	movwf	3942,c	;volatile
 36594                           
 36595                           ; BSR set to: 0
 36596                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36597  013F3A  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 36598  013F3C  6E67               	movwf	3943,c	;volatile
 36599                           
 36600                           ; BSR set to: 0
 36601                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 36602  013F3E  8088               	bsf	3976,0,c	;volatile
 36603  013F40                     
 36604                           ; BSR set to: 0
 36605  013F40  B088               	btfsc	3976,0,c	;volatile
 36606  013F42  D7FE               	goto	l2208
 36607                           
 36608                           ;spi.c: 193: LATDbits.LD7 = 1;
 36609  013F44  8E8C               	bsf	3980,7,c	;volatile
 36610  013F46  0012               	return		;funcret
 36611  013F48                     __end_of_spi_tx_tx:
 36612                           	opt stack 0
 36613                           tosu	equ	0xFFF
 36614                           tosh	equ	0xFFE
 36615                           tosl	equ	0xFFD
 36616                           pclath	equ	0xFFA
 36617                           tblptru	equ	0xFF8
 36618                           tblptrh	equ	0xFF7
 36619                           tblptrl	equ	0xFF6
 36620                           tablat	equ	0xFF5
 36621                           prodh	equ	0xFF4
 36622                           prodl	equ	0xFF3
 36623                           intcon	equ	0xFF2
 36624                           postinc0	equ	0xFEE
 36625                           wreg	equ	0xFE8
 36626                           indf1	equ	0xFE7
 36627                           postinc1	equ	0xFE6
 36628                           postdec1	equ	0xFE5
 36629                           plusw1	equ	0xFE3
 36630                           fsr1h	equ	0xFE2
 36631                           fsr1l	equ	0xFE1
 36632                           indf2	equ	0xFDF
 36633                           postinc2	equ	0xFDE
 36634                           postdec2	equ	0xFDD
 36635                           plusw2	equ	0xFDB
 36636                           fsr2h	equ	0xFDA
 36637                           fsr2l	equ	0xFD9
 36638                           status	equ	0xFD8
 36639                           
 36640 ;; *************** function __flash_write_page_from_buffer *****************
 36641 ;; Defined at:
 36642 ;;		line 258 in file "flash.c"
 36643 ;; Parameters:    Size  Location     Type
 36644 ;;  page            2   19[BANK0 ] unsigned int 
 36645 ;;  buffer          1   21[BANK0 ] enum E7058
 36646 ;; Auto vars:     Size  Location     Type
 36647 ;;  command         4   25[BANK0 ] unsigned char [4]
 36648 ;; Return value:  Size  Location     Type
 36649 ;;                  1    wreg      void 
 36650 ;; Registers used:
 36651 ;;		wreg, status,2, status,0, cstack
 36652 ;; Tracked objects:
 36653 ;;		On entry : 0/0
 36654 ;;		On exit  : 0/0
 36655 ;;		Unchanged: 0/0
 36656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36657 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36658 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36659 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36660 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36661 ;;Total ram usage:       10 bytes
 36662 ;; Hardware stack levels used:    1
 36663 ;; Hardware stack levels required when called:   13
 36664 ;; This function calls:
 36665 ;;		__flash_is_busy
 36666 ;;		_spi_tx
 36667 ;; This function is called by:
 36668 ;;		_flash_sector_write
 36669 ;;		_flash_partial_write
 36670 ;;		_flash_write_page_from_buffer
 36671 ;; This function uses a non-reentrant model
 36672 ;;
 36673                           
 36674                           	psect	text137
 36675  014DBC                     __ptext137:
 36676                           	opt stack 0
 36677  014DBC                     __flash_write_page_from_buffer:
 36678                           	opt stack 13
 36679                           
 36680                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 36681                           
 36682                           ;incstack = 0
 36683  014DBC  EC4D  F0AF         	call	__flash_is_busy	;wreg free
 36684  014DC0  0900               	iorlw	0
 36685  014DC2  A4D8               	btfss	status,2,c
 36686  014DC4  D7FB               	goto	__flash_write_page_from_buffer
 36687                           
 36688                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 36689  014DC6  0100               	movlb	0	; () banked
 36690  014DC8  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 36691  014DCA  A4D8               	btfss	status,2,c
 36692  014DCC  D002               	goto	l1597
 36693                           
 36694                           ; BSR set to: 0
 36695                           ;flash.c: 267: command[0] = 0x83;
 36696  014DCE  0E83               	movlw	131
 36697  014DD0  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 36698  014DD2                     l1597:
 36699                           
 36700                           ; BSR set to: 0
 36701                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 36702                           
 36703                           ; BSR set to: 0
 36704  014DD2  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 36705  014DD4  A4D8               	btfss	status,2,c
 36706  014DD6  D002               	goto	l1598
 36707                           
 36708                           ; BSR set to: 0
 36709                           ;flash.c: 269: command[0] = 0x86;
 36710  014DD8  0E86               	movlw	134
 36711  014DDA  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 36712  014DDC                     l1598:
 36713                           
 36714                           ; BSR set to: 0
 36715                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36716                           
 36717                           ; BSR set to: 0
 36718  014DDC  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 36719  014DE0  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 36720  014DE4  0E07               	movlw	7
 36721  014DE6  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 36722  014DE8                     u10265:
 36723  014DE8  90D8               	bcf	status,0,c
 36724  014DEA  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 36725  014DEC  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 36726  014DEE  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 36727  014DF0  D7FB               	goto	u10265
 36728  014DF2  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 36729  014DF4  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 36730                           
 36731                           ; BSR set to: 0
 36732                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 36733  014DF6  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 36734  014DF8  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 36735  014DFA  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 36736                           
 36737                           ;flash.c: 273: command[3] = 0x00;
 36738  014DFC  0E00               	movlw	0
 36739  014DFE  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 36740                           
 36741                           ; BSR set to: 0
 36742                           ;flash.c: 276: spi_tx(command, 4);
 36743  014E00  0E79               	movlw	low __flash_write_page_from_buffer@command
 36744  014E02  6F60               	movwf	spi_tx@data& (0+255),b
 36745  014E04  0E00               	movlw	high __flash_write_page_from_buffer@command
 36746  014E06  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 36747  014E08  0E00               	movlw	0
 36748  014E0A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 36749  014E0C  0E04               	movlw	4
 36750  014E0E  6F62               	movwf	spi_tx@length& (0+255),b
 36751  014E10  EC0B  F0A7         	call	_spi_tx	;wreg free
 36752  014E14  0012               	return		;funcret
 36753  014E16                     __end_of__flash_write_page_from_buffer:
 36754                           	opt stack 0
 36755                           tosu	equ	0xFFF
 36756                           tosh	equ	0xFFE
 36757                           tosl	equ	0xFFD
 36758                           pclath	equ	0xFFA
 36759                           tblptru	equ	0xFF8
 36760                           tblptrh	equ	0xFF7
 36761                           tblptrl	equ	0xFF6
 36762                           tablat	equ	0xFF5
 36763                           prodh	equ	0xFF4
 36764                           prodl	equ	0xFF3
 36765                           intcon	equ	0xFF2
 36766                           postinc0	equ	0xFEE
 36767                           wreg	equ	0xFE8
 36768                           indf1	equ	0xFE7
 36769                           postinc1	equ	0xFE6
 36770                           postdec1	equ	0xFE5
 36771                           plusw1	equ	0xFE3
 36772                           fsr1h	equ	0xFE2
 36773                           fsr1l	equ	0xFE1
 36774                           indf2	equ	0xFDF
 36775                           postinc2	equ	0xFDE
 36776                           postdec2	equ	0xFDD
 36777                           plusw2	equ	0xFDB
 36778                           fsr2h	equ	0xFDA
 36779                           fsr2l	equ	0xFD9
 36780                           status	equ	0xFD8
 36781                           
 36782 ;; *************** function __flash_compare_page_to_buffer *****************
 36783 ;; Defined at:
 36784 ;;		line 176 in file "flash.c"
 36785 ;; Parameters:    Size  Location     Type
 36786 ;;  page            2   19[BANK0 ] unsigned int 
 36787 ;;  buffer          1   21[BANK0 ] enum E7058
 36788 ;; Auto vars:     Size  Location     Type
 36789 ;;  command         4   27[BANK0 ] unsigned char [4]
 36790 ;;  status          2   25[BANK0 ] unsigned int 
 36791 ;; Return value:  Size  Location     Type
 36792 ;;                  1    wreg      enum E7062
 36793 ;; Registers used:
 36794 ;;		wreg, status,2, status,0, cstack
 36795 ;; Tracked objects:
 36796 ;;		On entry : 0/0
 36797 ;;		On exit  : 0/0
 36798 ;;		Unchanged: 0/0
 36799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36800 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36801 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36802 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36803 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36804 ;;Total ram usage:       12 bytes
 36805 ;; Hardware stack levels used:    1
 36806 ;; Hardware stack levels required when called:   13
 36807 ;; This function calls:
 36808 ;;		__flash_get_status
 36809 ;;		__flash_is_busy
 36810 ;;		_spi_tx
 36811 ;; This function is called by:
 36812 ;;		_flash_sector_write
 36813 ;;		_flash_partial_write
 36814 ;; This function uses a non-reentrant model
 36815 ;;
 36816                           
 36817                           	psect	text138
 36818  014368                     __ptext138:
 36819                           	opt stack 0
 36820  014368                     __flash_compare_page_to_buffer:
 36821                           	opt stack 13
 36822                           
 36823                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 36824                           
 36825                           ;incstack = 0
 36826  014368  EC4D  F0AF         	call	__flash_is_busy	;wreg free
 36827  01436C  0900               	iorlw	0
 36828  01436E  A4D8               	btfss	status,2,c
 36829  014370  D7FB               	goto	__flash_compare_page_to_buffer
 36830                           
 36831                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 36832  014372  0100               	movlb	0	; () banked
 36833  014374  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 36834  014376  A4D8               	btfss	status,2,c
 36835  014378  D002               	goto	l1570
 36836                           
 36837                           ; BSR set to: 0
 36838                           ;flash.c: 186: command[0] = 0x60;
 36839  01437A  0E60               	movlw	96
 36840  01437C  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 36841  01437E                     l1570:
 36842                           
 36843                           ; BSR set to: 0
 36844                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 36845                           
 36846                           ; BSR set to: 0
 36847  01437E  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 36848  014380  A4D8               	btfss	status,2,c
 36849  014382  D002               	goto	l1571
 36850                           
 36851                           ; BSR set to: 0
 36852                           ;flash.c: 188: command[0] = 0x60;
 36853  014384  0E60               	movlw	96
 36854  014386  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 36855  014388                     l1571:
 36856                           
 36857                           ; BSR set to: 0
 36858                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36859                           
 36860                           ; BSR set to: 0
 36861  014388  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 36862  01438C  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 36863  014390  0E07               	movlw	7
 36864  014392  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 36865  014394                     u10175:
 36866  014394  90D8               	bcf	status,0,c
 36867  014396  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 36868  014398  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 36869  01439A  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 36870  01439C  D7FB               	goto	u10175
 36871  01439E  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 36872  0143A0  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 36873                           
 36874                           ; BSR set to: 0
 36875                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 36876  0143A2  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 36877  0143A4  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 36878  0143A6  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 36879                           
 36880                           ;flash.c: 192: command[3] = 0x00;
 36881  0143A8  0E00               	movlw	0
 36882  0143AA  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 36883                           
 36884                           ; BSR set to: 0
 36885                           ;flash.c: 195: spi_tx(command, 4);
 36886  0143AC  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 36887  0143AE  6F60               	movwf	spi_tx@data& (0+255),b
 36888  0143B0  0E00               	movlw	high __flash_compare_page_to_buffer@command
 36889  0143B2  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 36890  0143B4  0E00               	movlw	0
 36891  0143B6  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 36892  0143B8  0E04               	movlw	4
 36893  0143BA  6F62               	movwf	spi_tx@length& (0+255),b
 36894  0143BC  EC0B  F0A7         	call	_spi_tx	;wreg free
 36895  0143C0  EC4D  F0AF         	call	__flash_is_busy	;wreg free
 36896  0143C4  0900               	iorlw	0
 36897  0143C6  A4D8               	btfss	status,2,c
 36898  0143C8  D7FB               	goto	l1573
 36899                           
 36900                           ;flash.c: 201: status = _flash_get_status();
 36901  0143CA  EC2D  F0AD         	call	__flash_get_status	;wreg free
 36902  0143CE  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 36903  0143D2  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 36904                           
 36905                           ;flash.c: 204: if(status & 0b0000000001000000)
 36906  0143D6  0100               	movlb	0	; () banked
 36907  0143D8  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 36908  0143DA  D002               	goto	l1575
 36909                           
 36910                           ; BSR set to: 0
 36911                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 36912  0143DC  0E01               	movlw	1
 36913                           
 36914                           ; BSR set to: 0
 36915                           ;flash.c: 208: }
 36916                           
 36917                           ; BSR set to: 0
 36918  0143DE  0012               	return	
 36919  0143E0                     l1575:
 36920                           
 36921                           ; BSR set to: 0
 36922                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 36923                           
 36924                           ; BSR set to: 0
 36925  0143E0  0E00               	movlw	0
 36926                           
 36927                           ; BSR set to: 0
 36928  0143E2  0012               	return	
 36929  0143E4                     __end_of__flash_compare_page_to_buffer:
 36930                           	opt stack 0
 36931                           tosu	equ	0xFFF
 36932                           tosh	equ	0xFFE
 36933                           tosl	equ	0xFFD
 36934                           pclath	equ	0xFFA
 36935                           tblptru	equ	0xFF8
 36936                           tblptrh	equ	0xFF7
 36937                           tblptrl	equ	0xFF6
 36938                           tablat	equ	0xFF5
 36939                           prodh	equ	0xFF4
 36940                           prodl	equ	0xFF3
 36941                           intcon	equ	0xFF2
 36942                           postinc0	equ	0xFEE
 36943                           wreg	equ	0xFE8
 36944                           indf1	equ	0xFE7
 36945                           postinc1	equ	0xFE6
 36946                           postdec1	equ	0xFE5
 36947                           plusw1	equ	0xFE3
 36948                           fsr1h	equ	0xFE2
 36949                           fsr1l	equ	0xFE1
 36950                           indf2	equ	0xFDF
 36951                           postinc2	equ	0xFDE
 36952                           postdec2	equ	0xFDD
 36953                           plusw2	equ	0xFDB
 36954                           fsr2h	equ	0xFDA
 36955                           fsr2l	equ	0xFD9
 36956                           status	equ	0xFD8
 36957                           
 36958 ;; *************** function _MSDReadHandler *****************
 36959 ;; Defined at:
 36960 ;;		line 1038 in file "usb_device_msd.c"
 36961 ;; Parameters:    Size  Location     Type
 36962 ;;		None
 36963 ;; Auto vars:     Size  Location     Type
 36964 ;;		None
 36965 ;; Return value:  Size  Location     Type
 36966 ;;                  1    wreg      unsigned char 
 36967 ;; Registers used:
 36968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 36969 ;; Tracked objects:
 36970 ;;		On entry : 0/0
 36971 ;;		On exit  : 0/0
 36972 ;;		Unchanged: 0/0
 36973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36976 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36977 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36978 ;;Total ram usage:        4 bytes
 36979 ;; Hardware stack levels used:    1
 36980 ;; Hardware stack levels required when called:   16
 36981 ;; This function calls:
 36982 ;;		_ExternalFlash_SectorRead
 36983 ;;		_MSDCheckForErrorCases
 36984 ;;		_USBStallEndpoint
 36985 ;;		_USBTransferOnePacket
 36986 ;; This function is called by:
 36987 ;;		_MSDProcessCommandMediaPresent
 36988 ;; This function uses a non-reentrant model
 36989 ;;
 36990                           
 36991                           	psect	text139
 36992  00E8C0                     __ptext139:
 36993                           	opt stack 0
 36994  00E8C0                     _MSDReadHandler:
 36995                           	opt stack 10
 36996                           
 36997                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 36998                           
 36999                           ; BSR set to: 0
 37000                           ;incstack = 0
 37001  00E8C0  D0DF               	goto	l681
 37002  00E8C2                     l682:
 37003                           
 37004                           ; BSR set to: 1
 37005                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 37006  00E8C2  C211  F126         	movff	_gblCBW+17,_LBA+3
 37007                           
 37008                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 37009  00E8C6  C212  F125         	movff	_gblCBW+18,_LBA+2
 37010                           
 37011                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 37012  00E8CA  C213  F124         	movff	_gblCBW+19,_LBA+1
 37013                           
 37014                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 37015  00E8CE  C214  F123         	movff	_gblCBW+20,_LBA
 37016                           
 37017                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 37018  00E8D2  C216  F13E         	movff	_gblCBW+22,_TransferLength+1
 37019                           
 37020                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 37021  00E8D6  C217  F13D         	movff	_gblCBW+23,_TransferLength
 37022                           
 37023                           ; BSR set to: 1
 37024                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 37025  00E8DA  513D               	movf	_TransferLength& (0+255),w,b
 37026  00E8DC  0100               	movlb	0	; () banked
 37027  00E8DE  6F95               	movwf	??_MSDReadHandler& (0+255),b
 37028  00E8E0  0101               	movlb	1	; () banked
 37029  00E8E2  513E               	movf	(_TransferLength+1)& (0+255),w,b
 37030  00E8E4  0100               	movlb	0	; () banked
 37031  00E8E6  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 37032  00E8E8  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 37033  00E8EA  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 37034  00E8EC  0E09               	movlw	9
 37035  00E8EE                     u11195:
 37036  00E8EE  90D8               	bcf	status,0,c
 37037  00E8F0  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 37038  00E8F2  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 37039  00E8F4  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 37040  00E8F6  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 37041  00E8F8  2EE8               	decfsz	wreg,f,c
 37042  00E8FA  D7F9               	goto	u11195
 37043  00E8FC  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 37044  00E900  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 37045  00E904  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 37046  00E908  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 37047  00E90C  EC98  F087         	call	_MSDCheckForErrorCases	;wreg free
 37048  00E910  0900               	iorlw	0
 37049  00E912  A4D8               	btfss	status,2,c
 37050  00E914  D0C7               	goto	l684
 37051                           
 37052                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 37053                           
 37054                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 37055  00E916  0E01               	movlw	1
 37056  00E918  0101               	movlb	1	; () banked
 37057  00E91A  6F56               	movwf	_MSDReadState& (0+255),b
 37058  00E91C                     
 37059                           ; BSR set to: 1
 37060                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 37061                           
 37062                           ; BSR set to: 1
 37063  00E91C  513D               	movf	_TransferLength& (0+255),w,b
 37064  00E91E  113E               	iorwf	(_TransferLength+1)& (0+255),w,b
 37065  00E920  A4D8               	btfss	status,2,c
 37066  00E922  D002               	goto	l686
 37067                           
 37068                           ; BSR set to: 1
 37069                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 37070  00E924  0E00               	movlw	0
 37071  00E926  D04A               	goto	L54
 37072  00E928                     l686:
 37073                           
 37074                           ; BSR set to: 1
 37075                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 37076                           
 37077                           ; BSR set to: 1
 37078  00E928  073D               	decf	_TransferLength& (0+255),f,b
 37079  00E92A  A0D8               	btfss	status,0,c
 37080  00E92C  073E               	decf	(_TransferLength+1)& (0+255),f,b
 37081                           
 37082                           ; BSR set to: 1
 37083                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 37084  00E92E  0E02               	movlw	2
 37085  00E930  6F56               	movwf	_MSDReadState& (0+255),b
 37086  00E932                     
 37087                           ; BSR set to: 1
 37088                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 37089                           
 37090                           ; BSR set to: 1
 37091  00E932  513F               	movf	_USBMSDInHandle& (0+255),w,b
 37092  00E934  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37093  00E936  B4D8               	btfsc	status,2,c
 37094  00E938  D006               	goto	l688
 37095                           
 37096                           ; BSR set to: 1
 37097  00E93A  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 37098  00E93E  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37099  00E942  BEDF               	btfsc	indf2,7,c
 37100  00E944  D0AF               	goto	l684
 37101  00E946                     l688:
 37102                           
 37103                           ; BSR set to: 1
 37104                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 37105                           
 37106                           ; BSR set to: 1
 37107  00E946  C2B2  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 37108  00E94A  C2B3  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 37109  00E94E  C123  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 37110  00E952  C124  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 37111  00E956  C125  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 37112  00E95A  C126  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 37113  00E95E  0E00               	movlw	0
 37114  00E960  0100               	movlb	0	; () banked
 37115  00E962  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 37116  00E964  0E06               	movlw	6
 37117  00E966  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 37118  00E968  EE22  F0A9         	lfsr	2,_LUN+12
 37119  00E96C  D801               	call	u11248
 37120  00E96E  D00A               	goto	u11249
 37121  00E970                     u11248:
 37122  00E970  0005               	push	
 37123  00E972  6EFA               	movwf	pclath,c
 37124  00E974  50DE               	movf	postinc2,w,c
 37125  00E976  6EFD               	movwf	tosl,c
 37126  00E978  50DE               	movf	postinc2,w,c
 37127  00E97A  6EFE               	movwf	tosh,c
 37128  00E97C  50DE               	movf	postinc2,w,c
 37129  00E97E  6EFF               	movwf	tosu,c
 37130  00E980  50FA               	movf	pclath,w,c
 37131  00E982  0012               	return		;indir
 37132  00E984                     u11249:
 37133  00E984  06E8               	decf	wreg,f,c
 37134  00E986  B4D8               	btfsc	status,2,c
 37135  00E988  D01B               	goto	l691
 37136                           
 37137                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 37138  00E98A  0E64               	movlw	100
 37139  00E98C  0101               	movlb	1	; () banked
 37140  00E98E  6154               	cpfslt	_MSDRetryAttempt& (0+255),b
 37141  00E990  D002               	goto	l690
 37142                           
 37143                           ; BSR set to: 1
 37144                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 37145  00E992  2B54               	incf	_MSDRetryAttempt& (0+255),f,b
 37146                           
 37147                           ;usb_device_msd.c: 1088: break;
 37148  00E994  D087               	goto	l684
 37149  00E996                     l690:
 37150                           
 37151                           ; BSR set to: 1
 37152                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 37153                           
 37154                           ; BSR set to: 1
 37155  00E996  0E02               	movlw	2
 37156  00E998  010D               	movlb	13	; () banked
 37157  00E99A  6F8C               	movwf	140,b	;volatile
 37158                           
 37159                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 37160  00E99C  0102               	movlb	2	; () banked
 37161  00E99E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37162  00E9A0  0BF0               	andlw	-16
 37163  00E9A2  0903               	iorlw	3
 37164  00E9A4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37165                           
 37166                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 37167  00E9A6  0E00               	movlw	0
 37168  00E9A8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37169                           
 37170                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 37171  00E9AA  0E00               	movlw	0
 37172  00E9AC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37173                           
 37174                           ; BSR set to: 2
 37175                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 37176  00E9AE  0E01               	movlw	1
 37177  00E9B0  0100               	movlb	0	; () banked
 37178  00E9B2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37179  00E9B4  0E02               	movlw	2
 37180  00E9B6  ECB8  F089         	call	_USBStallEndpoint
 37181  00E9BA  D05F               	goto	l13164
 37182  00E9BC                     L54:
 37183  00E9BC  6F56               	movwf	_MSDReadState& (0+255),b
 37184                           
 37185                           ;usb_device_msd.c: 1109: break;
 37186  00E9BE  D072               	goto	l684
 37187  00E9C0                     l691:
 37188                           
 37189                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 37190                           
 37191                           ; BSR set to: 1
 37192                           
 37193                           ; BSR set to: 1
 37194  00E9C0  0E01               	movlw	1
 37195  00E9C2  0101               	movlb	1	; () banked
 37196  00E9C4  2723               	addwf	_LBA& (0+255),f,b
 37197  00E9C6  0E00               	movlw	0
 37198  00E9C8  2324               	addwfc	(_LBA+1)& (0+255),f,b
 37199  00E9CA  2325               	addwfc	(_LBA+2)& (0+255),f,b
 37200  00E9CC  2326               	addwfc	(_LBA+3)& (0+255),f,b
 37201                           
 37202                           ; BSR set to: 1
 37203                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 37204  00E9CE  0E00               	movlw	0
 37205  00E9D0  010D               	movlb	13	; () banked
 37206  00E9D2  6F88               	movwf	136,b	;volatile
 37207  00E9D4  0E02               	movlw	2
 37208  00E9D6  6F89               	movwf	137,b	;volatile
 37209  00E9D8  0E00               	movlw	0
 37210  00E9DA  6F8A               	movwf	138,b	;volatile
 37211  00E9DC  0E00               	movlw	0
 37212  00E9DE  6F8B               	movwf	139,b	;volatile
 37213                           
 37214                           ; BSR set to: 13
 37215                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 37216  00E9E0  0E00               	movlw	0
 37217  00E9E2  0101               	movlb	1	; () banked
 37218  00E9E4  6F43               	movwf	_ptrNextData& (0+255),b
 37219  00E9E6  0E06               	movlw	6
 37220  00E9E8  6F44               	movwf	(_ptrNextData+1)& (0+255),b
 37221                           
 37222                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 37223  00E9EA  0E03               	movlw	3
 37224  00E9EC  6F56               	movwf	_MSDReadState& (0+255),b
 37225  00E9EE                     
 37226                           ; BSR set to: 1
 37227                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 37228                           
 37229                           ; BSR set to: 1
 37230  00E9EE  010D               	movlb	13	; () banked
 37231  00E9F0  5188               	movf	136,w,b	;volatile
 37232  00E9F2  1189               	iorwf	137,w,b	;volatile
 37233  00E9F4  118A               	iorwf	138,w,b	;volatile
 37234  00E9F6  118B               	iorwf	139,w,b	;volatile
 37235  00E9F8  A4D8               	btfss	status,2,c
 37236  00E9FA  D002               	goto	l693
 37237                           
 37238                           ; BSR set to: 13
 37239                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 37240  00E9FC  0E01               	movlw	1
 37241  00E9FE  D03E               	goto	L56
 37242  00EA00                     l693:
 37243                           
 37244                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 37245                           
 37246                           ; BSR set to: 1
 37247  00EA00  0E04               	movlw	4
 37248  00EA02  0101               	movlb	1	; () banked
 37249  00EA04  6F56               	movwf	_MSDReadState& (0+255),b
 37250  00EA06                     
 37251                           ; BSR set to: 1
 37252                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 37253                           
 37254                           ; BSR set to: 1
 37255  00EA06  513F               	movf	_USBMSDInHandle& (0+255),w,b
 37256  00EA08  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37257  00EA0A  B4D8               	btfsc	status,2,c
 37258  00EA0C  D006               	goto	l695
 37259                           
 37260                           ; BSR set to: 1
 37261  00EA0E  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 37262  00EA12  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37263  00EA16  BEDF               	btfsc	indf2,7,c
 37264  00EA18  D045               	goto	l684
 37265  00EA1A                     l695:
 37266                           
 37267                           ; BSR set to: 1
 37268                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 37269                           
 37270                           ; BSR set to: 1
 37271  00EA1A  0E01               	movlw	1
 37272  00EA1C  0100               	movlb	0	; () banked
 37273  00EA1E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37274  00EA20  C143  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 37275  00EA24  C144  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 37276  00EA28  0E40               	movlw	64
 37277  00EA2A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37278  00EA2C  0E02               	movlw	2
 37279  00EA2E  EC3D  F08A         	call	_USBTransferOnePacket
 37280  00EA32  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 37281  00EA36  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 37282                           
 37283                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 37284  00EA3A  0E03               	movlw	3
 37285  00EA3C  0101               	movlb	1	; () banked
 37286  00EA3E  6F56               	movwf	_MSDReadState& (0+255),b
 37287                           
 37288                           ; BSR set to: 1
 37289                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 37290  00EA40  0E40               	movlw	64
 37291  00EA42  0102               	movlb	2	; () banked
 37292  00EA44  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 37293  00EA46  0E00               	movlw	0
 37294  00EA48  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 37295  00EA4A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 37296  00EA4C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37297                           
 37298                           ; BSR set to: 2
 37299                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 37300  00EA4E  0E40               	movlw	64
 37301  00EA50  010D               	movlb	13	; () banked
 37302  00EA52  5F88               	subwf	136,f,b	;volatile
 37303  00EA54  0E00               	movlw	0
 37304  00EA56  5B89               	subwfb	137,f,b	;volatile
 37305  00EA58  5B8A               	subwfb	138,f,b	;volatile
 37306  00EA5A  5B8B               	subwfb	139,f,b	;volatile
 37307                           
 37308                           ; BSR set to: 13
 37309                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 37310  00EA5C  0E40               	movlw	64
 37311  00EA5E  0101               	movlb	1	; () banked
 37312  00EA60  2743               	addwf	_ptrNextData& (0+255),f,b
 37313  00EA62  0E00               	movlw	0
 37314  00EA64  2344               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37315                           
 37316                           ;usb_device_msd.c: 1149: break;
 37317  00EA66  D01E               	goto	l684
 37318  00EA68                     
 37319                           ; BSR set to: 1
 37320                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 37321                           
 37322                           ; BSR set to: 1
 37323  00EA68  0E02               	movlw	2
 37324  00EA6A  010D               	movlb	13	; () banked
 37325  00EA6C  6F8C               	movwf	140,b	;volatile
 37326                           
 37327                           ; BSR set to: 13
 37328                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 37329  00EA6E  0E01               	movlw	1
 37330  00EA70  0100               	movlb	0	; () banked
 37331  00EA72  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37332  00EA74  0E02               	movlw	2
 37333  00EA76  ECB8  F089         	call	_USBStallEndpoint
 37334  00EA7A                     l13164:
 37335                           
 37336                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 37337  00EA7A  0E00               	movlw	0
 37338  00EA7C                     L56:
 37339  00EA7C  0101               	movlb	1	; () banked
 37340  00EA7E  D79E               	goto	L54
 37341  00EA80                     l681:
 37342                           
 37343                           ; BSR set to: 1
 37344  00EA80  0101               	movlb	1	; () banked
 37345  00EA82  5156               	movf	_MSDReadState& (0+255),w,b
 37346                           
 37347                           ; Switch size 1, requested type "space"
 37348                           ; Number of cases is 5, Range of values is 0 to 4
 37349                           ; switch strategies available:
 37350                           ; Name         Instructions Cycles
 37351                           ; simple_byte           16     9 (average)
 37352                           ;	Chosen strategy is simple_byte
 37353  00EA84  0A00               	xorlw	0	; case 0
 37354  00EA86  B4D8               	btfsc	status,2,c
 37355  00EA88  D71C               	goto	l682
 37356  00EA8A  0A01               	xorlw	1	; case 1
 37357  00EA8C  B4D8               	btfsc	status,2,c
 37358  00EA8E  D746               	goto	l685
 37359  00EA90  0A03               	xorlw	3	; case 2
 37360  00EA92  B4D8               	btfsc	status,2,c
 37361  00EA94  D74E               	goto	l687
 37362  00EA96  0A01               	xorlw	1	; case 3
 37363  00EA98  B4D8               	btfsc	status,2,c
 37364  00EA9A  D7A9               	goto	l692
 37365  00EA9C  0A07               	xorlw	7	; case 4
 37366  00EA9E  B4D8               	btfsc	status,2,c
 37367  00EAA0  D7B2               	goto	l694
 37368  00EAA2  D7E2               	goto	l696
 37369  00EAA4                     l684:
 37370                           
 37371                           ;usb_device_msd.c: 1161: return MSDReadState;
 37372                           
 37373                           ; BSR set to: 1
 37374  00EAA4  0101               	movlb	1	; () banked
 37375  00EAA6  5156               	movf	_MSDReadState& (0+255),w,b
 37376  00EAA8  0012               	return	
 37377  00EAAA                     __end_of_MSDReadHandler:
 37378                           	opt stack 0
 37379                           tosu	equ	0xFFF
 37380                           tosh	equ	0xFFE
 37381                           tosl	equ	0xFFD
 37382                           pclath	equ	0xFFA
 37383                           tblptru	equ	0xFF8
 37384                           tblptrh	equ	0xFF7
 37385                           tblptrl	equ	0xFF6
 37386                           tablat	equ	0xFF5
 37387                           prodh	equ	0xFF4
 37388                           prodl	equ	0xFF3
 37389                           intcon	equ	0xFF2
 37390                           postinc0	equ	0xFEE
 37391                           wreg	equ	0xFE8
 37392                           indf1	equ	0xFE7
 37393                           postinc1	equ	0xFE6
 37394                           postdec1	equ	0xFE5
 37395                           plusw1	equ	0xFE3
 37396                           fsr1h	equ	0xFE2
 37397                           fsr1l	equ	0xFE1
 37398                           indf2	equ	0xFDF
 37399                           postinc2	equ	0xFDE
 37400                           postdec2	equ	0xFDD
 37401                           plusw2	equ	0xFDB
 37402                           fsr2h	equ	0xFDA
 37403                           fsr2l	equ	0xFD9
 37404                           status	equ	0xFD8
 37405                           
 37406 ;; *************** function _MSDCheckForErrorCases *****************
 37407 ;; Defined at:
 37408 ;;		line 1434 in file "usb_device_msd.c"
 37409 ;; Parameters:    Size  Location     Type
 37410 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 37411 ;; Auto vars:     Size  Location     Type
 37412 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 37413 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 37414 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 37415 ;; Return value:  Size  Location     Type
 37416 ;;                  1    wreg      unsigned char 
 37417 ;; Registers used:
 37418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37419 ;; Tracked objects:
 37420 ;;		On entry : 0/0
 37421 ;;		On exit  : 0/0
 37422 ;;		Unchanged: 0/0
 37423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37424 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37425 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37427 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37428 ;;Total ram usage:        7 bytes
 37429 ;; Hardware stack levels used:    1
 37430 ;; Hardware stack levels required when called:   12
 37431 ;; This function calls:
 37432 ;;		_MSDErrorHandler
 37433 ;; This function is called by:
 37434 ;;		_MSDProcessCommandMediaPresent
 37435 ;;		_MSDReadHandler
 37436 ;;		_MSDWriteHandler
 37437 ;; This function uses a non-reentrant model
 37438 ;;
 37439                           
 37440                           	psect	text140
 37441  010F30                     __ptext140:
 37442                           	opt stack 0
 37443  010F30                     _MSDCheckForErrorCases:
 37444                           	opt stack 13
 37445                           
 37446                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 37447                           
 37448                           ; BSR set to: 1
 37449                           ;incstack = 0
 37450  010F30  0100               	movlb	0	; () banked
 37451  010F32  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37452  010F34  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37453  010F36  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37454  010F38  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37455  010F3A  A4D8               	btfss	status,2,c
 37456  010F3C  D002               	goto	l726
 37457                           
 37458                           ; BSR set to: 0
 37459                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 37460  010F3E  0E01               	movlw	1
 37461  010F40  D001               	goto	L57
 37462  010F42                     l726:
 37463                           
 37464                           ; BSR set to: 0
 37465                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 37466                           
 37467                           ; BSR set to: 0
 37468  010F42  0E00               	movlw	0
 37469  010F44                     L57:
 37470  010F44  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 37471                           
 37472                           ; BSR set to: 0
 37473                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 37474                           
 37475                           ; BSR set to: 0
 37476  010F46  0101               	movlb	1	; () banked
 37477  010F48  0551               	decf	_MSDHostNoData& (0+255),w,b
 37478  010F4A  A4D8               	btfss	status,2,c
 37479  010F4C  D006               	goto	l728
 37480                           
 37481                           ; BSR set to: 1
 37482  010F4E  0100               	movlb	0	; () banked
 37483  010F50  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37484  010F52  A4D8               	btfss	status,2,c
 37485  010F54  D002               	goto	l728
 37486                           
 37487                           ; BSR set to: 0
 37488                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 37489  010F56  0E00               	movlw	0
 37490                           
 37491                           ; BSR set to: 0
 37492  010F58  0012               	return	
 37493  010F5A                     l728:
 37494                           
 37495                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 37496                           
 37497                           ; BSR set to: 0
 37498  010F5A  0100               	movlb	0	; () banked
 37499  010F5C  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37500  010F5E  0102               	movlb	2	; () banked
 37501  010F60  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 37502  010F62  E120               	bnz	l12756
 37503  010F64  0100               	movlb	0	; () banked
 37504  010F66  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37505  010F68  0102               	movlb	2	; () banked
 37506  010F6A  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 37507  010F6C  E11B               	bnz	l12756
 37508  010F6E  0100               	movlb	0	; () banked
 37509  010F70  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37510  010F72  0102               	movlb	2	; () banked
 37511  010F74  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 37512  010F76  E116               	bnz	l12756
 37513  010F78  0100               	movlb	0	; () banked
 37514  010F7A  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37515  010F7C  0102               	movlb	2	; () banked
 37516  010F7E  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 37517  010F80  A4D8               	btfss	status,2,c
 37518  010F82  D010               	goto	l734
 37519                           
 37520                           ; BSR set to: 2
 37521                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 37522  010F84  0101               	movlb	1	; () banked
 37523  010F86  0558               	decf	_MSD_State& (0+255),w,b
 37524  010F88  A4D8               	btfss	status,2,c
 37525  010F8A  D006               	goto	l731
 37526                           
 37527                           ; BSR set to: 1
 37528                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 37529  010F8C  0E2A               	movlw	42
 37530  010F8E  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37531  010F90  B4D8               	btfsc	status,2,c
 37532  010F92  D008               	goto	l734
 37533                           
 37534                           ; BSR set to: 1
 37535                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 37536  010F94  0E00               	movlw	0
 37537                           
 37538                           ; BSR set to: 1
 37539  010F96  0012               	return	
 37540  010F98                     l731:
 37541                           
 37542                           ; BSR set to: 1
 37543                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 37544                           
 37545                           ; BSR set to: 1
 37546  010F98  0E2A               	movlw	42
 37547  010F9A  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37548  010F9C  A4D8               	btfss	status,2,c
 37549  010F9E  D002               	goto	l734
 37550                           
 37551                           ; BSR set to: 1
 37552                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 37553  010FA0  0E00               	movlw	0
 37554                           
 37555                           ; BSR set to: 1
 37556  010FA2  0012               	return	
 37557  010FA4                     l734:
 37558  010FA4                     l12756:
 37559                           
 37560                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 37561  010FA4  0102               	movlb	2	; () banked
 37562  010FA6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37563  010FA8  0100               	movlb	0	; () banked
 37564  010FAA  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37565  010FAC  0102               	movlb	2	; () banked
 37566  010FAE  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37567  010FB0  0100               	movlb	0	; () banked
 37568  010FB2  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37569  010FB4  0102               	movlb	2	; () banked
 37570  010FB6  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37571  010FB8  0100               	movlb	0	; () banked
 37572  010FBA  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37573  010FBC  0102               	movlb	2	; () banked
 37574  010FBE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37575  010FC0  0100               	movlb	0	; () banked
 37576  010FC2  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37577  010FC4  B0D8               	btfsc	status,0,c
 37578  010FC6  D002               	goto	l735
 37579                           
 37580                           ; BSR set to: 0
 37581                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 37582  010FC8  0E01               	movlw	1
 37583  010FCA  D001               	goto	L58
 37584  010FCC                     l735:
 37585                           
 37586                           ; BSR set to: 0
 37587                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 37588                           
 37589                           ; BSR set to: 0
 37590  010FCC  0E00               	movlw	0
 37591  010FCE                     L58:
 37592  010FCE  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 37593                           
 37594                           ; BSR set to: 0
 37595                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 37596                           
 37597                           ; BSR set to: 0
 37598  010FD0  0E02               	movlw	2
 37599  010FD2  0101               	movlb	1	; () banked
 37600  010FD4  1958               	xorwf	_MSD_State& (0+255),w,b
 37601  010FD6  A4D8               	btfss	status,2,c
 37602  010FD8  D017               	goto	l737
 37603                           
 37604                           ; BSR set to: 1
 37605                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 37606  010FDA  0E2A               	movlw	42
 37607  010FDC  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37608  010FDE  B4D8               	btfsc	status,2,c
 37609  010FE0  D006               	goto	l738
 37610                           
 37611                           ; BSR set to: 1
 37612  010FE2  0100               	movlb	0	; () banked
 37613  010FE4  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37614  010FE6  A4D8               	btfss	status,2,c
 37615  010FE8  D002               	goto	l738
 37616  010FEA                     u10760:
 37617                           
 37618                           ; BSR set to: 0
 37619                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 37620  010FEA  0E05               	movlw	5
 37621  010FEC  D025               	goto	L63
 37622  010FEE                     l738:
 37623                           
 37624                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 37625                           
 37626                           ; BSR set to: 0
 37627  010FEE  0101               	movlb	1	; () banked
 37628  010FF0  0551               	decf	_MSDHostNoData& (0+255),w,b
 37629  010FF2  B4D8               	btfsc	status,2,c
 37630  010FF4  D014               	goto	u10810
 37631                           
 37632                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 37633                           
 37634                           ; BSR set to: 0
 37635                           
 37636                           ; BSR set to: 1
 37637                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 37638  010FF6  0100               	movlb	0	; () banked
 37639  010FF8  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37640  010FFA  B4D8               	btfsc	status,2,c
 37641  010FFC  D003               	goto	u10790
 37642                           
 37643                           ; BSR set to: 0
 37644                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 37645                           
 37646                           ; BSR set to: 0
 37647                           
 37648                           ; BSR set to: 0
 37649                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 37650  010FFE  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 37651  011000  A4D8               	btfss	status,2,c
 37652  011002  D7F3               	goto	u10760
 37653  011004                     u10790:
 37654                           
 37655                           ; BSR set to: 0
 37656                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 37657  011004  0E04               	movlw	4
 37658  011006  D018               	goto	L63
 37659  011008                     l737:
 37660                           
 37661                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 37662                           
 37663                           ; BSR set to: 0
 37664  011008  0E2A               	movlw	42
 37665  01100A  0101               	movlb	1	; () banked
 37666  01100C  1957               	xorwf	_MSDCommandState& (0+255),w,b
 37667  01100E  A4D8               	btfss	status,2,c
 37668  011010  D002               	goto	l747
 37669                           
 37670                           ; BSR set to: 1
 37671                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 37672  011012  0E03               	movlw	3
 37673  011014  D005               	goto	L62
 37674  011016                     l747:
 37675                           
 37676                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 37677                           
 37678                           ; BSR set to: 0
 37679  011016  0101               	movlb	1	; () banked
 37680  011018  0551               	decf	_MSDHostNoData& (0+255),w,b
 37681  01101A  A4D8               	btfss	status,2,c
 37682  01101C  D003               	goto	l749
 37683  01101E                     u10810:
 37684                           
 37685                           ; BSR set to: 1
 37686                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 37687  01101E  0E01               	movlw	1
 37688  011020                     L62:
 37689  011020  0100               	movlb	0	; () banked
 37690  011022  D00A               	goto	L63
 37691  011024                     l749:
 37692                           
 37693                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 37694                           
 37695                           ; BSR set to: 0
 37696  011024  0100               	movlb	0	; () banked
 37697  011026  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37698  011028  B4D8               	btfsc	status,2,c
 37699  01102A  D003               	goto	u10830
 37700                           
 37701                           ; BSR set to: 0
 37702                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 37703                           
 37704                           ; BSR set to: 0
 37705                           
 37706                           ; BSR set to: 0
 37707                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 37708  01102C  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 37709  01102E  A4D8               	btfss	status,2,c
 37710  011030  D002               	goto	l753
 37711  011032                     u10830:
 37712                           
 37713                           ; BSR set to: 0
 37714                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 37715  011032  0E02               	movlw	2
 37716  011034  D001               	goto	L63
 37717  011036                     l753:
 37718                           
 37719                           ; BSR set to: 0
 37720                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 37721                           
 37722                           ; BSR set to: 0
 37723  011036  0E03               	movlw	3
 37724  011038                     L63:
 37725  011038  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 37726                           
 37727                           ; BSR set to: 0
 37728                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 37729                           
 37730                           ; BSR set to: 0
 37731                           
 37732                           ; BSR set to: 0
 37733                           
 37734                           ; BSR set to: 0
 37735                           
 37736                           ; BSR set to: 0
 37737                           
 37738                           ; BSR set to: 0
 37739  01103A  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 37740  01103C  EC0B  F087         	call	_MSDErrorHandler
 37741                           
 37742                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 37743  011040  0100               	movlb	0	; () banked
 37744  011042  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 37745  011044  0012               	return	
 37746  011046                     __end_of_MSDCheckForErrorCases:
 37747                           	opt stack 0
 37748                           tosu	equ	0xFFF
 37749                           tosh	equ	0xFFE
 37750                           tosl	equ	0xFFD
 37751                           pclath	equ	0xFFA
 37752                           tblptru	equ	0xFF8
 37753                           tblptrh	equ	0xFF7
 37754                           tblptrl	equ	0xFF6
 37755                           tablat	equ	0xFF5
 37756                           prodh	equ	0xFF4
 37757                           prodl	equ	0xFF3
 37758                           intcon	equ	0xFF2
 37759                           postinc0	equ	0xFEE
 37760                           wreg	equ	0xFE8
 37761                           indf1	equ	0xFE7
 37762                           postinc1	equ	0xFE6
 37763                           postdec1	equ	0xFE5
 37764                           plusw1	equ	0xFE3
 37765                           fsr1h	equ	0xFE2
 37766                           fsr1l	equ	0xFE1
 37767                           indf2	equ	0xFDF
 37768                           postinc2	equ	0xFDE
 37769                           postdec2	equ	0xFDD
 37770                           plusw2	equ	0xFDB
 37771                           fsr2h	equ	0xFDA
 37772                           fsr2l	equ	0xFD9
 37773                           status	equ	0xFD8
 37774                           
 37775 ;; *************** function _MSDErrorHandler *****************
 37776 ;; Defined at:
 37777 ;;		line 1577 in file "usb_device_msd.c"
 37778 ;; Parameters:    Size  Location     Type
 37779 ;;  ErrorCase       1    wreg     unsigned char 
 37780 ;; Auto vars:     Size  Location     Type
 37781 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 37782 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 37783 ;; Return value:  Size  Location     Type
 37784 ;;                  1    wreg      void 
 37785 ;; Registers used:
 37786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37787 ;; Tracked objects:
 37788 ;;		On entry : 0/0
 37789 ;;		On exit  : 0/0
 37790 ;;		Unchanged: 0/0
 37791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37795 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37796 ;;Total ram usage:        2 bytes
 37797 ;; Hardware stack levels used:    1
 37798 ;; Hardware stack levels required when called:   11
 37799 ;; This function calls:
 37800 ;;		_ResetSenseData
 37801 ;;		_USBStallEndpoint
 37802 ;; This function is called by:
 37803 ;;		_MSDProcessCommandMediaAbsent
 37804 ;;		_MSDProcessCommandMediaPresent
 37805 ;;		_MSDCheckForErrorCases
 37806 ;; This function uses a non-reentrant model
 37807 ;;
 37808                           
 37809                           	psect	text141
 37810  010E16                     __ptext141:
 37811                           	opt stack 0
 37812  010E16                     _MSDErrorHandler:
 37813                           	opt stack 13
 37814                           
 37815                           ;incstack = 0
 37816                           ;MSDErrorHandler@ErrorCase stored from wreg
 37817  010E16  0100               	movlb	0	; () banked
 37818  010E18  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 37819                           
 37820                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 37821  010E1A  0101               	movlb	1	; () banked
 37822  010E1C  513F               	movf	_USBMSDInHandle& (0+255),w,b
 37823  010E1E  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37824  010E20  B4D8               	btfsc	status,2,c
 37825  010E22  D006               	goto	u10410
 37826                           
 37827                           ; BSR set to: 1
 37828  010E24  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 37829  010E28  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37830  010E2C  BEDF               	btfsc	indf2,7,c
 37831  010E2E  0012               	return	
 37832  010E30                     u10410:
 37833                           
 37834                           ; BSR set to: 1
 37835                           
 37836                           ; BSR set to: 1
 37837  010E30  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 37838  010E32  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 37839  010E34  B4D8               	btfsc	status,2,c
 37840  010E36  D006               	goto	l757
 37841                           
 37842                           ; BSR set to: 1
 37843  010E38  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 37844  010E3C  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 37845  010E40  BEDF               	btfsc	indf2,7,c
 37846  010E42  0012               	return	
 37847  010E44                     l757:
 37848                           
 37849                           ; BSR set to: 1
 37850                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 37851  010E44  C158  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 37852                           
 37853                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 37854  010E48  6957               	setf	_MSDCommandState& (0+255),b
 37855                           
 37856                           ; BSR set to: 1
 37857                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 37858  010E4A  0E00               	movlw	0
 37859  010E4C  6F56               	movwf	_MSDReadState& (0+255),b
 37860                           
 37861                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 37862  010E4E  0E00               	movlw	0
 37863  010E50  6F55               	movwf	_MSDWriteState& (0+255),b
 37864                           
 37865                           ; BSR set to: 1
 37866                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 37867  010E52  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 37868  010E56  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 37869  010E5A  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 37870  010E5E  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 37871                           
 37872                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 37873  010E62  0E01               	movlw	1
 37874  010E64  010D               	movlb	13	; () banked
 37875  010E66  6F8C               	movwf	140,b	;volatile
 37876                           
 37877                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 37878  010E68  0E03               	movlw	3
 37879  010E6A  0101               	movlb	1	; () banked
 37880  010E6C  6F58               	movwf	_MSD_State& (0+255),b
 37881                           
 37882                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 37883  010E6E  D04B               	goto	l763
 37884  010E70                     
 37885                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 37886                           
 37887                           ; BSR set to: 1
 37888  010E70  0E02               	movlw	2
 37889  010E72  010D               	movlb	13	; () banked
 37890  010E74  6F8C               	movwf	140,b	;volatile
 37891                           
 37892                           ;usb_device_msd.c: 1607: break;
 37893  010E76  0012               	return	
 37894  010E78                     
 37895                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 37896                           
 37897                           ; BSR set to: 13
 37898  010E78  0E01               	movlw	1
 37899  010E7A  0100               	movlb	0	; () banked
 37900  010E7C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37901  010E7E  0E02               	movlw	2
 37902  010E80  ECB8  F089         	call	_USBStallEndpoint
 37903                           
 37904                           ;usb_device_msd.c: 1611: break;
 37905  010E84  0012               	return	
 37906  010E86                     
 37907                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 37908  010E86  0E02               	movlw	2
 37909  010E88  010D               	movlb	13	; () banked
 37910  010E8A  6F8C               	movwf	140,b	;volatile
 37911                           
 37912                           ; BSR set to: 13
 37913                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 37914  010E8C  0E01               	movlw	1
 37915  010E8E  0100               	movlb	0	; () banked
 37916  010E90  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37917  010E92  0E02               	movlw	2
 37918  010E94  ECB8  F089         	call	_USBStallEndpoint
 37919                           
 37920                           ;usb_device_msd.c: 1616: break;
 37921  010E98  0012               	return	
 37922  010E9A                     
 37923                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 37924  010E9A  0E00               	movlw	0
 37925  010E9C  0100               	movlb	0	; () banked
 37926  010E9E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37927  010EA0  0E02               	movlw	2
 37928  010EA2  ECB8  F089         	call	_USBStallEndpoint
 37929                           
 37930                           ;usb_device_msd.c: 1620: break;
 37931  010EA6  0012               	return	
 37932  010EA8                     
 37933                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 37934  010EA8  0E02               	movlw	2
 37935  010EAA  010D               	movlb	13	; () banked
 37936  010EAC  6F8C               	movwf	140,b	;volatile
 37937                           
 37938                           ; BSR set to: 13
 37939                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 37940  010EAE  0E00               	movlw	0
 37941  010EB0  0100               	movlb	0	; () banked
 37942  010EB2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37943  010EB4  0E02               	movlw	2
 37944  010EB6  ECB8  F089         	call	_USBStallEndpoint
 37945                           
 37946                           ;usb_device_msd.c: 1625: break;
 37947  010EBA  0012               	return	
 37948  010EBC                     
 37949                           ;usb_device_msd.c: 1628: ResetSenseData();
 37950  010EBC  EC37  F0A5         	call	_ResetSenseData	;wreg free
 37951                           
 37952                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 37953  010EC0  0102               	movlb	2	; () banked
 37954  010EC2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37955  010EC4  0BF0               	andlw	-16
 37956  010EC6  0905               	iorlw	5
 37957  010EC8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37958                           
 37959                           ; BSR set to: 2
 37960                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 37961  010ECA  0E20               	movlw	32
 37962  010ECC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37963                           
 37964                           ; BSR set to: 2
 37965                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 37966  010ECE  0E00               	movlw	0
 37967  010ED0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37968                           
 37969                           ; BSR set to: 2
 37970                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 37971  010ED2  0E02               	movlw	2
 37972  010ED4  0100               	movlb	0	; () banked
 37973  010ED6  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 37974  010ED8  A4D8               	btfss	status,2,c
 37975  010EDA  D00E               	goto	l771
 37976                           
 37977                           ; BSR set to: 0
 37978  010EDC  0102               	movlb	2	; () banked
 37979  010EDE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37980  010EE0  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 37981  010EE2  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 37982  010EE4  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 37983  010EE6  B4D8               	btfsc	status,2,c
 37984  010EE8  D007               	goto	l771
 37985                           
 37986                           ; BSR set to: 2
 37987                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 37988  010EEA  0E00               	movlw	0
 37989  010EEC  0100               	movlb	0	; () banked
 37990  010EEE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37991  010EF0  0E02               	movlw	2
 37992  010EF2  ECB8  F089         	call	_USBStallEndpoint
 37993                           
 37994                           ;usb_device_msd.c: 1636: }
 37995  010EF6  0012               	return	
 37996  010EF8                     l771:
 37997                           
 37998                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 37999  010EF8  0E01               	movlw	1
 38000  010EFA  0100               	movlb	0	; () banked
 38001  010EFC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38002  010EFE  0E02               	movlw	2
 38003  010F00  ECB8  F089         	call	_USBStallEndpoint
 38004                           
 38005                           ;usb_device_msd.c: 1644: }
 38006                           
 38007                           ;usb_device_msd.c: 1643: break;
 38008                           
 38009                           ;usb_device_msd.c: 1642: default:
 38010                           
 38011                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 38012  010F04  0012               	return	
 38013  010F06                     l763:
 38014  010F06  0100               	movlb	0	; () banked
 38015  010F08  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 38016                           
 38017                           ; Switch size 1, requested type "space"
 38018                           ; Number of cases is 6, Range of values is 1 to 127
 38019                           ; switch strategies available:
 38020                           ; Name         Instructions Cycles
 38021                           ; simple_byte           19    10 (average)
 38022                           ;	Chosen strategy is simple_byte
 38023  010F0A  0A01               	xorlw	1	; case 1
 38024  010F0C  B4D8               	btfsc	status,2,c
 38025  010F0E  D7B0               	goto	l764
 38026  010F10  0A03               	xorlw	3	; case 2
 38027  010F12  B4D8               	btfsc	status,2,c
 38028  010F14  D7B1               	goto	l766
 38029  010F16  0A01               	xorlw	1	; case 3
 38030  010F18  B4D8               	btfsc	status,2,c
 38031  010F1A  D7B5               	goto	l767
 38032  010F1C  0A07               	xorlw	7	; case 4
 38033  010F1E  B4D8               	btfsc	status,2,c
 38034  010F20  D7BC               	goto	l768
 38035  010F22  0A01               	xorlw	1	; case 5
 38036  010F24  B4D8               	btfsc	status,2,c
 38037  010F26  D7C0               	goto	l769
 38038  010F28  0A7A               	xorlw	122	; case 127
 38039  010F2A  A4D8               	btfss	status,2,c
 38040  010F2C  0012               	return	
 38041  010F2E  D7C6               	goto	l770
 38042  010F30                     __end_of_MSDErrorHandler:
 38043                           	opt stack 0
 38044                           tosu	equ	0xFFF
 38045                           tosh	equ	0xFFE
 38046                           tosl	equ	0xFFD
 38047                           pclath	equ	0xFFA
 38048                           tblptru	equ	0xFF8
 38049                           tblptrh	equ	0xFF7
 38050                           tblptrl	equ	0xFF6
 38051                           tablat	equ	0xFF5
 38052                           prodh	equ	0xFF4
 38053                           prodl	equ	0xFF3
 38054                           intcon	equ	0xFF2
 38055                           postinc0	equ	0xFEE
 38056                           wreg	equ	0xFE8
 38057                           indf1	equ	0xFE7
 38058                           postinc1	equ	0xFE6
 38059                           postdec1	equ	0xFE5
 38060                           plusw1	equ	0xFE3
 38061                           fsr1h	equ	0xFE2
 38062                           fsr1l	equ	0xFE1
 38063                           indf2	equ	0xFDF
 38064                           postinc2	equ	0xFDE
 38065                           postdec2	equ	0xFDD
 38066                           plusw2	equ	0xFDB
 38067                           fsr2h	equ	0xFDA
 38068                           fsr2l	equ	0xFD9
 38069                           status	equ	0xFD8
 38070                           
 38071 ;; *************** function _USBStallEndpoint *****************
 38072 ;; Defined at:
 38073 ;;		line 1073 in file "usb_device.c"
 38074 ;; Parameters:    Size  Location     Type
 38075 ;;  ep              1    wreg     unsigned char 
 38076 ;;  dir             1    0[BANK0 ] unsigned char 
 38077 ;; Auto vars:     Size  Location     Type
 38078 ;;  ep              1    5[BANK0 ] unsigned char 
 38079 ;;  p               2    6[BANK0 ] PTR struct __BDT
 38080 ;;		 -> BDT(48), 
 38081 ;; Return value:  Size  Location     Type
 38082 ;;                  1    wreg      void 
 38083 ;; Registers used:
 38084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38085 ;; Tracked objects:
 38086 ;;		On entry : 0/0
 38087 ;;		On exit  : 0/0
 38088 ;;		Unchanged: 0/0
 38089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38090 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38091 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38092 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38093 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38094 ;;Total ram usage:        8 bytes
 38095 ;; Hardware stack levels used:    1
 38096 ;; Hardware stack levels required when called:   10
 38097 ;; This function calls:
 38098 ;;		Nothing
 38099 ;; This function is called by:
 38100 ;;		_MSDTasks
 38101 ;;		_MSDReadHandler
 38102 ;;		_MSDWriteHandler
 38103 ;;		_MSDErrorHandler
 38104 ;; This function uses a non-reentrant model
 38105 ;;
 38106                           
 38107                           	psect	text142
 38108  011370                     __ptext142:
 38109                           	opt stack 0
 38110  011370                     _USBStallEndpoint:
 38111                           	opt stack 18
 38112                           
 38113                           ;incstack = 0
 38114                           ;USBStallEndpoint@ep stored from wreg
 38115  011370  0100               	movlb	0	; () banked
 38116  011372  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 38117                           
 38118                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 38119  011374  0100               	movlb	0	; () banked
 38120  011376  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38121  011378  A4D8               	btfss	status,2,c
 38122  01137A  D02B               	goto	l192
 38123                           
 38124                           ; BSR set to: 0
 38125                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 38126  01137C  EE20 F001          	lfsr	2,1
 38127  011380  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38128  011382  26D9               	addwf	fsr2l,f,c
 38129  011384  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38130  011386  22DA               	addwfc	fsr2h,f,c
 38131  011388  0E08               	movlw	8
 38132  01138A  6EDF               	movwf	indf2,c
 38133                           
 38134                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 38135  01138C  EE20 F002          	lfsr	2,2
 38136  011390  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38137  011392  26D9               	addwf	fsr2l,f,c
 38138  011394  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38139  011396  22DA               	addwfc	fsr2h,f,c
 38140  011398  0E30               	movlw	48
 38141  01139A  6EDE               	movwf	postinc2,c
 38142  01139C  0E0D               	movlw	13
 38143  01139E  6EDD               	movwf	postdec2,c
 38144                           
 38145                           ; BSR set to: 0
 38146                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 38147  0113A0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38148  0113A4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38149  0113A8  0E0C               	movlw	12
 38150  0113AA  6EDF               	movwf	indf2,c
 38151                           
 38152                           ; BSR set to: 0
 38153                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 38154  0113AC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38155  0113B0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38156  0113B4  0E00               	movlw	0
 38157  0113B6  8EDB               	bsf	plusw2,7,c
 38158                           
 38159                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 38160  0113B8  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 38161  0113BC  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38162  0113C0  0E04               	movlw	4
 38163  0113C2  6EDF               	movwf	indf2,c
 38164                           
 38165                           ; BSR set to: 0
 38166                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 38167  0113C4  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 38168  0113C8  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38169  0113CC  0E00               	movlw	0
 38170  0113CE  8EDB               	bsf	plusw2,7,c
 38171                           
 38172                           ;usb_device.c: 1089: }
 38173  0113D0  0012               	return	
 38174  0113D2                     l192:
 38175                           
 38176                           ; BSR set to: 0
 38177                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 38178                           
 38179                           ; BSR set to: 0
 38180  0113D2  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38181  0113D4  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 38182  0113D6  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 38183  0113D8  90D8               	bcf	status,0,c
 38184  0113DA  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38185  0113DC  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38186  0113DE  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38187  0113E0  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 38188  0113E2  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 38189  0113E4  90D8               	bcf	status,0,c
 38190  0113E6  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38191  0113E8  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38192  0113EA  90D8               	bcf	status,0,c
 38193  0113EC  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38194  0113EE  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38195  0113F0  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 38196  0113F2  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 38197  0113F4  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 38198  0113F6  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 38199  0113F8  90D8               	bcf	status,0,c
 38200  0113FA  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38201  0113FC  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38202  0113FE  90D8               	bcf	status,0,c
 38203  011400  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38204  011402  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38205  011404  0E00               	movlw	0
 38206  011406  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 38207  011408  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38208  01140A  0E0D               	movlw	13
 38209  01140C  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 38210  01140E  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38211                           
 38212                           ; BSR set to: 0
 38213                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 38214  011410  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38215  011414  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38216  011418  0E00               	movlw	0
 38217  01141A  84DB               	bsf	plusw2,2,c
 38218                           
 38219                           ; BSR set to: 0
 38220                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 38221  01141C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38222  011420  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38223  011424  0E00               	movlw	0
 38224  011426  8EDB               	bsf	plusw2,7,c
 38225                           
 38226                           ; BSR set to: 0
 38227                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 38228  011428  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38229  01142A  0D04               	mullw	4
 38230  01142C  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 38231  011430  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 38232  011434  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38233  011436  0D02               	mullw	2
 38234  011438  50F3               	movf	prodl,w,c
 38235  01143A  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38236  01143C  50F4               	movf	prodh,w,c
 38237  01143E  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38238  011440  90D8               	bcf	status,0,c
 38239  011442  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38240  011444  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38241  011446  90D8               	bcf	status,0,c
 38242  011448  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38243  01144A  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38244  01144C  0E04               	movlw	4
 38245  01144E  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38246  011450  0E00               	movlw	0
 38247  011452  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38248  011454  0E00               	movlw	0
 38249  011456  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 38250  011458  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38251  01145A  0E0D               	movlw	13
 38252  01145C  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 38253  01145E  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38254                           
 38255                           ; BSR set to: 0
 38256                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 38257  011460  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38258  011464  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38259  011468  0E00               	movlw	0
 38260  01146A  84DB               	bsf	plusw2,2,c
 38261                           
 38262                           ; BSR set to: 0
 38263                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 38264  01146C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38265  011470  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38266  011474  0E00               	movlw	0
 38267  011476  8EDB               	bsf	plusw2,7,c
 38268  011478  0012               	return	
 38269  01147A                     __end_of_USBStallEndpoint:
 38270                           	opt stack 0
 38271                           tosu	equ	0xFFF
 38272                           tosh	equ	0xFFE
 38273                           tosl	equ	0xFFD
 38274                           pclath	equ	0xFFA
 38275                           tblptru	equ	0xFF8
 38276                           tblptrh	equ	0xFF7
 38277                           tblptrl	equ	0xFF6
 38278                           tablat	equ	0xFF5
 38279                           prodh	equ	0xFF4
 38280                           prodl	equ	0xFF3
 38281                           intcon	equ	0xFF2
 38282                           postinc0	equ	0xFEE
 38283                           wreg	equ	0xFE8
 38284                           indf1	equ	0xFE7
 38285                           postinc1	equ	0xFE6
 38286                           postdec1	equ	0xFE5
 38287                           plusw1	equ	0xFE3
 38288                           fsr1h	equ	0xFE2
 38289                           fsr1l	equ	0xFE1
 38290                           indf2	equ	0xFDF
 38291                           postinc2	equ	0xFDE
 38292                           postdec2	equ	0xFDD
 38293                           plusw2	equ	0xFDB
 38294                           fsr2h	equ	0xFDA
 38295                           fsr2l	equ	0xFD9
 38296                           status	equ	0xFD8
 38297                           
 38298 ;; *************** function _ResetSenseData *****************
 38299 ;; Defined at:
 38300 ;;		line 1373 in file "usb_device_msd.c"
 38301 ;; Parameters:    Size  Location     Type
 38302 ;;		None
 38303 ;; Auto vars:     Size  Location     Type
 38304 ;;		None
 38305 ;; Return value:  Size  Location     Type
 38306 ;;                  1    wreg      void 
 38307 ;; Registers used:
 38308 ;;		wreg, status,2
 38309 ;; Tracked objects:
 38310 ;;		On entry : 0/0
 38311 ;;		On exit  : 0/0
 38312 ;;		Unchanged: 0/0
 38313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38318 ;;Total ram usage:        0 bytes
 38319 ;; Hardware stack levels used:    1
 38320 ;; Hardware stack levels required when called:   10
 38321 ;; This function calls:
 38322 ;;		Nothing
 38323 ;; This function is called by:
 38324 ;;		_MSDProcessCommandMediaAbsent
 38325 ;;		_MSDProcessCommandMediaPresent
 38326 ;;		_MSDErrorHandler
 38327 ;; This function uses a non-reentrant model
 38328 ;;
 38329                           
 38330                           	psect	text143
 38331  014A6E                     __ptext143:
 38332                           	opt stack 0
 38333  014A6E                     _ResetSenseData:
 38334                           	opt stack 16
 38335                           
 38336                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38337                           
 38338                           ; BSR set to: 0
 38339                           ;incstack = 0
 38340  014A6E  0102               	movlb	2	; () banked
 38341  014A70  911F               	bcf	_gblSenseData& (0+255),0,b
 38342  014A72  931F               	bcf	_gblSenseData& (0+255),1,b
 38343  014A74  951F               	bcf	_gblSenseData& (0+255),2,b
 38344  014A76  971F               	bcf	_gblSenseData& (0+255),3,b
 38345  014A78  891F               	bsf	_gblSenseData& (0+255),4,b
 38346  014A7A  8B1F               	bsf	_gblSenseData& (0+255),5,b
 38347  014A7C  8D1F               	bsf	_gblSenseData& (0+255),6,b
 38348                           
 38349                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38350  014A7E  9F1F               	bcf	_gblSenseData& (0+255),7,b
 38351                           
 38352                           ; BSR set to: 2
 38353                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38354  014A80  0E00               	movlw	0
 38355  014A82  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 38356                           
 38357                           ; BSR set to: 2
 38358                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38359  014A84  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 38360  014A86  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 38361  014A88  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 38362  014A8A  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 38363                           
 38364                           ; BSR set to: 2
 38365                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38366  014A8C  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 38367                           
 38368                           ; BSR set to: 2
 38369                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38370  014A8E  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 38371                           
 38372                           ; BSR set to: 2
 38373                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38374  014A90  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 38375                           
 38376                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38377  014A92  0E00               	movlw	0
 38378  014A94  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 38379                           
 38380                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38381  014A96  0E00               	movlw	0
 38382  014A98  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 38383                           
 38384                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38385  014A9A  0E00               	movlw	0
 38386  014A9C  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 38387                           
 38388                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38389  014A9E  0E00               	movlw	0
 38390  014AA0  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 38391                           
 38392                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38393  014AA2  0E0A               	movlw	10
 38394  014AA4  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 38395                           
 38396                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38397  014AA6  0E00               	movlw	0
 38398  014AA8  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 38399  014AAA  0E00               	movlw	0
 38400  014AAC  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 38401  014AAE  0E00               	movlw	0
 38402  014AB0  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 38403  014AB2  0E00               	movlw	0
 38404  014AB4  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 38405                           
 38406                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 38407  014AB6  0E00               	movlw	0
 38408  014AB8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38409                           
 38410                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 38411  014ABA  0E00               	movlw	0
 38412  014ABC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38413                           
 38414                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 38415  014ABE  0E00               	movlw	0
 38416  014AC0  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 38417                           
 38418                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 38419  014AC2  0E00               	movlw	0
 38420  014AC4  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 38421                           
 38422                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 38423  014AC6  0E00               	movlw	0
 38424  014AC8  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 38425                           
 38426                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 38427  014ACA  0E00               	movlw	0
 38428  014ACC  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 38429                           
 38430                           ; BSR set to: 2
 38431  014ACE  0012               	return		;funcret
 38432  014AD0                     __end_of_ResetSenseData:
 38433                           	opt stack 0
 38434                           tosu	equ	0xFFF
 38435                           tosh	equ	0xFFE
 38436                           tosl	equ	0xFFD
 38437                           pclath	equ	0xFFA
 38438                           tblptru	equ	0xFF8
 38439                           tblptrh	equ	0xFF7
 38440                           tblptrl	equ	0xFF6
 38441                           tablat	equ	0xFF5
 38442                           prodh	equ	0xFF4
 38443                           prodl	equ	0xFF3
 38444                           intcon	equ	0xFF2
 38445                           postinc0	equ	0xFEE
 38446                           wreg	equ	0xFE8
 38447                           indf1	equ	0xFE7
 38448                           postinc1	equ	0xFE6
 38449                           postdec1	equ	0xFE5
 38450                           plusw1	equ	0xFE3
 38451                           fsr1h	equ	0xFE2
 38452                           fsr1l	equ	0xFE1
 38453                           indf2	equ	0xFDF
 38454                           postinc2	equ	0xFDE
 38455                           postdec2	equ	0xFDD
 38456                           plusw2	equ	0xFDB
 38457                           fsr2h	equ	0xFDA
 38458                           fsr2l	equ	0xFD9
 38459                           status	equ	0xFD8
 38460                           
 38461 ;; *************** function _ExternalFlash_SectorRead *****************
 38462 ;; Defined at:
 38463 ;;		line 40 in file "external_flash.c"
 38464 ;; Parameters:    Size  Location     Type
 38465 ;;  config          2   43[BANK0 ] PTR void 
 38466 ;;		 -> NULL(0), 
 38467 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 38468 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 38469 ;;		 -> msd_buffer(512), 
 38470 ;; Auto vars:     Size  Location     Type
 38471 ;;  page            2   51[BANK0 ] unsigned int 
 38472 ;; Return value:  Size  Location     Type
 38473 ;;                  1    wreg      unsigned char 
 38474 ;; Registers used:
 38475 ;;		wreg, status,2, status,0, cstack
 38476 ;; Tracked objects:
 38477 ;;		On entry : 0/0
 38478 ;;		On exit  : 0/0
 38479 ;;		Unchanged: 0/0
 38480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38481 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38482 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38484 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38485 ;;Total ram usage:       10 bytes
 38486 ;; Hardware stack levels used:    1
 38487 ;; Hardware stack levels required when called:   15
 38488 ;; This function calls:
 38489 ;;		_flash_sector_read
 38490 ;; This function is called by:
 38491 ;;		_MSDReadHandler
 38492 ;; This function uses a non-reentrant model
 38493 ;;
 38494                           
 38495                           	psect	text144
 38496  015A26                     __ptext144:
 38497                           	opt stack 0
 38498  015A26                     _ExternalFlash_SectorRead:
 38499                           	opt stack 10
 38500                           
 38501                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 38502                           
 38503                           ; BSR set to: 2
 38504                           ;incstack = 0
 38505  015A26  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 38506  015A2A  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 38507                           
 38508                           ;external_flash.c: 45: if(sector_addr >= 8192)
 38509  015A2E  0100               	movlb	0	; () banked
 38510  015A30  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 38511  015A32  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 38512  015A34  E104               	bnz	u10860
 38513  015A36  0E20               	movlw	32
 38514  015A38  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 38515  015A3A  A0D8               	btfss	status,0,c
 38516  015A3C  D002               	goto	l1699
 38517  015A3E                     u10860:
 38518                           
 38519                           ; BSR set to: 0
 38520                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 38521  015A3E  0E00               	movlw	0
 38522                           
 38523                           ; BSR set to: 0
 38524  015A40  0012               	return	
 38525  015A42                     l1699:
 38526                           
 38527                           ; BSR set to: 0
 38528                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 38529                           
 38530                           ; BSR set to: 0
 38531  015A42  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 38532  015A46  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 38533  015A4A  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 38534  015A4E  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 38535  015A52  ECC9  F0AE         	call	_flash_sector_read	;wreg free
 38536                           
 38537                           ;external_flash.c: 53: return 1;
 38538  015A56  0E01               	movlw	1
 38539  015A58  0012               	return	
 38540  015A5A                     __end_of_ExternalFlash_SectorRead:
 38541                           	opt stack 0
 38542                           tosu	equ	0xFFF
 38543                           tosh	equ	0xFFE
 38544                           tosl	equ	0xFFD
 38545                           pclath	equ	0xFFA
 38546                           tblptru	equ	0xFF8
 38547                           tblptrh	equ	0xFF7
 38548                           tblptrl	equ	0xFF6
 38549                           tablat	equ	0xFF5
 38550                           prodh	equ	0xFF4
 38551                           prodl	equ	0xFF3
 38552                           intcon	equ	0xFF2
 38553                           postinc0	equ	0xFEE
 38554                           wreg	equ	0xFE8
 38555                           indf1	equ	0xFE7
 38556                           postinc1	equ	0xFE6
 38557                           postdec1	equ	0xFE5
 38558                           plusw1	equ	0xFE3
 38559                           fsr1h	equ	0xFE2
 38560                           fsr1l	equ	0xFE1
 38561                           indf2	equ	0xFDF
 38562                           postinc2	equ	0xFDE
 38563                           postdec2	equ	0xFDD
 38564                           plusw2	equ	0xFDB
 38565                           fsr2h	equ	0xFDA
 38566                           fsr2l	equ	0xFD9
 38567                           status	equ	0xFD8
 38568                           
 38569 ;; *************** function _flash_sector_read *****************
 38570 ;; Defined at:
 38571 ;;		line 426 in file "flash.c"
 38572 ;; Parameters:    Size  Location     Type
 38573 ;;  page            2   39[BANK0 ] unsigned int 
 38574 ;;  data            2   41[BANK0 ] PTR unsigned char 
 38575 ;;		 -> buffer(512), msd_buffer(512), 
 38576 ;; Auto vars:     Size  Location     Type
 38577 ;;		None
 38578 ;; Return value:  Size  Location     Type
 38579 ;;                  1    wreg      void 
 38580 ;; Registers used:
 38581 ;;		wreg, status,2, status,0, cstack
 38582 ;; Tracked objects:
 38583 ;;		On entry : 0/0
 38584 ;;		On exit  : 0/0
 38585 ;;		Unchanged: 0/0
 38586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38587 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38590 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38591 ;;Total ram usage:        4 bytes
 38592 ;; Hardware stack levels used:    1
 38593 ;; Hardware stack levels required when called:   14
 38594 ;; This function calls:
 38595 ;;		__flash_partial_read
 38596 ;; This function is called by:
 38597 ;;		_ExternalFlash_SectorRead
 38598 ;;		__get_available_cluster
 38599 ;;		__find_nth_cluster
 38600 ;;		__make_cluster_chain
 38601 ;;		_fat_find_file
 38602 ;;		_fat_get_format_status
 38603 ;; This function uses a non-reentrant model
 38604 ;;
 38605                           
 38606                           	psect	text145
 38607  015D92                     __ptext145:
 38608                           	opt stack 0
 38609  015D92                     _flash_sector_read:
 38610                           	opt stack 13
 38611                           
 38612                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 38613                           
 38614                           ;incstack = 0
 38615  015D92  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 38616  015D96  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 38617  015D9A  0E00               	movlw	0
 38618  015D9C  0100               	movlb	0	; () banked
 38619  015D9E  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 38620  015DA0  0E00               	movlw	0
 38621  015DA2  6F75               	movwf	__flash_partial_read@start& (0+255),b
 38622  015DA4  0E02               	movlw	2
 38623  015DA6  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 38624  015DA8  0E00               	movlw	0
 38625  015DAA  6F77               	movwf	__flash_partial_read@length& (0+255),b
 38626  015DAC  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 38627  015DB0  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 38628  015DB4  EC6C  F0A2         	call	__flash_partial_read	;wreg free
 38629  015DB8  0012               	return		;funcret
 38630  015DBA                     __end_of_flash_sector_read:
 38631                           	opt stack 0
 38632                           tosu	equ	0xFFF
 38633                           tosh	equ	0xFFE
 38634                           tosl	equ	0xFFD
 38635                           pclath	equ	0xFFA
 38636                           tblptru	equ	0xFF8
 38637                           tblptrh	equ	0xFF7
 38638                           tblptrl	equ	0xFF6
 38639                           tablat	equ	0xFF5
 38640                           prodh	equ	0xFF4
 38641                           prodl	equ	0xFF3
 38642                           intcon	equ	0xFF2
 38643                           postinc0	equ	0xFEE
 38644                           wreg	equ	0xFE8
 38645                           indf1	equ	0xFE7
 38646                           postinc1	equ	0xFE6
 38647                           postdec1	equ	0xFE5
 38648                           plusw1	equ	0xFE3
 38649                           fsr1h	equ	0xFE2
 38650                           fsr1l	equ	0xFE1
 38651                           indf2	equ	0xFDF
 38652                           postinc2	equ	0xFDE
 38653                           postdec2	equ	0xFDD
 38654                           plusw2	equ	0xFDB
 38655                           fsr2h	equ	0xFDA
 38656                           fsr2l	equ	0xFD9
 38657                           status	equ	0xFD8
 38658                           
 38659 ;; *************** function __flash_partial_read *****************
 38660 ;; Defined at:
 38661 ;;		line 309 in file "flash.c"
 38662 ;; Parameters:    Size  Location     Type
 38663 ;;  page            2   19[BANK0 ] unsigned int 
 38664 ;;  start           2   21[BANK0 ] unsigned int 
 38665 ;;  length          2   23[BANK0 ] unsigned int 
 38666 ;;  data            2   25[BANK0 ] PTR unsigned char 
 38667 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 38668 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 38669 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 38670 ;; Auto vars:     Size  Location     Type
 38671 ;;  command         4   31[BANK0 ] unsigned char [4]
 38672 ;;  address         4   35[BANK0 ] unsigned long 
 38673 ;; Return value:  Size  Location     Type
 38674 ;;                  1    wreg      void 
 38675 ;; Registers used:
 38676 ;;		wreg, status,2, status,0, cstack
 38677 ;; Tracked objects:
 38678 ;;		On entry : 0/0
 38679 ;;		On exit  : 0/0
 38680 ;;		Unchanged: 0/0
 38681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38682 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38683 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38684 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38685 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38686 ;;Total ram usage:       20 bytes
 38687 ;; Hardware stack levels used:    1
 38688 ;; Hardware stack levels required when called:   13
 38689 ;; This function calls:
 38690 ;;		__flash_is_busy
 38691 ;;		_spi_tx_rx
 38692 ;; This function is called by:
 38693 ;;		_flash_sector_read
 38694 ;;		_flash_partial_read
 38695 ;; This function uses a non-reentrant model
 38696 ;;
 38697                           
 38698                           	psect	text146
 38699  0144D8                     __ptext146:
 38700                           	opt stack 0
 38701  0144D8                     __flash_partial_read:
 38702                           	opt stack 13
 38703                           
 38704                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 38705                           
 38706                           ;incstack = 0
 38707  0144D8  EC4D  F0AF         	call	__flash_is_busy	;wreg free
 38708  0144DC  0900               	iorlw	0
 38709  0144DE  A4D8               	btfss	status,2,c
 38710  0144E0  D7FB               	goto	__flash_partial_read
 38711                           
 38712                           ;flash.c: 318: address = page;
 38713  0144E2  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 38714  0144E6  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 38715  0144EA  0100               	movlb	0	; () banked
 38716  0144EC  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 38717  0144EE  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 38718                           
 38719                           ; BSR set to: 0
 38720                           ;flash.c: 319: address <<= 9;
 38721  0144F0  0E09               	movlw	9
 38722  0144F2                     u10285:
 38723  0144F2  90D8               	bcf	status,0,c
 38724  0144F4  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 38725  0144F6  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 38726  0144F8  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 38727  0144FA  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 38728  0144FC  2EE8               	decfsz	wreg,f,c
 38729  0144FE  D7F9               	goto	u10285
 38730                           
 38731                           ; BSR set to: 0
 38732                           ;flash.c: 320: address |= start;
 38733  014500  5175               	movf	__flash_partial_read@start& (0+255),w,b
 38734  014502  6F7B               	movwf	??__flash_partial_read& (0+255),b
 38735  014504  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 38736  014506  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 38737  014508  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 38738  01450A  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 38739  01450C  517B               	movf	??__flash_partial_read& (0+255),w,b
 38740  01450E  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 38741  014510  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 38742  014512  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 38743  014514  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 38744  014516  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 38745  014518  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 38746  01451A  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 38747                           
 38748                           ; BSR set to: 0
 38749                           ;flash.c: 323: command[0] = 0x03;
 38750  01451C  0E03               	movlw	3
 38751  01451E  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 38752                           
 38753                           ; BSR set to: 0
 38754                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 38755  014520  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 38756                           
 38757                           ; BSR set to: 0
 38758                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 38759  014524  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 38760  014526  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 38761                           
 38762                           ; BSR set to: 0
 38763                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 38764  014528  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 38765                           
 38766                           ; BSR set to: 0
 38767                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 38768  01452C  0E7F               	movlw	low __flash_partial_read@command
 38769  01452E  6F60               	movwf	spi_tx_rx@command& (0+255),b
 38770  014530  0E00               	movlw	high __flash_partial_read@command
 38771  014532  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 38772  014534  0E00               	movlw	0
 38773  014536  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 38774  014538  0E04               	movlw	4
 38775  01453A  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 38776  01453C  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 38777  014540  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 38778  014544  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 38779  014548  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 38780  01454C  EC09  F09D         	call	_spi_tx_rx	;wreg free
 38781  014550  0012               	return		;funcret
 38782  014552                     __end_of__flash_partial_read:
 38783                           	opt stack 0
 38784                           tosu	equ	0xFFF
 38785                           tosh	equ	0xFFE
 38786                           tosl	equ	0xFFD
 38787                           pclath	equ	0xFFA
 38788                           tblptru	equ	0xFF8
 38789                           tblptrh	equ	0xFF7
 38790                           tblptrl	equ	0xFF6
 38791                           tablat	equ	0xFF5
 38792                           prodh	equ	0xFF4
 38793                           prodl	equ	0xFF3
 38794                           intcon	equ	0xFF2
 38795                           postinc0	equ	0xFEE
 38796                           wreg	equ	0xFE8
 38797                           indf1	equ	0xFE7
 38798                           postinc1	equ	0xFE6
 38799                           postdec1	equ	0xFE5
 38800                           plusw1	equ	0xFE3
 38801                           fsr1h	equ	0xFE2
 38802                           fsr1l	equ	0xFE1
 38803                           indf2	equ	0xFDF
 38804                           postinc2	equ	0xFDE
 38805                           postdec2	equ	0xFDD
 38806                           plusw2	equ	0xFDB
 38807                           fsr2h	equ	0xFDA
 38808                           fsr2l	equ	0xFD9
 38809                           status	equ	0xFD8
 38810                           
 38811 ;; *************** function __flash_is_busy *****************
 38812 ;; Defined at:
 38813 ;;		line 281 in file "flash.c"
 38814 ;; Parameters:    Size  Location     Type
 38815 ;;		None
 38816 ;; Auto vars:     Size  Location     Type
 38817 ;;  status          2   17[BANK0 ] unsigned int 
 38818 ;; Return value:  Size  Location     Type
 38819 ;;                  1    wreg      unsigned char 
 38820 ;; Registers used:
 38821 ;;		wreg, status,2, status,0, cstack
 38822 ;; Tracked objects:
 38823 ;;		On entry : 0/0
 38824 ;;		On exit  : 0/0
 38825 ;;		Unchanged: 0/0
 38826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38830 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38831 ;;Total ram usage:        2 bytes
 38832 ;; Hardware stack levels used:    1
 38833 ;; Hardware stack levels required when called:   12
 38834 ;; This function calls:
 38835 ;;		__flash_get_status
 38836 ;;		__flash_wakeup
 38837 ;; This function is called by:
 38838 ;;		__flash_set_page_size
 38839 ;;		__flash_copy_page_to_buffer
 38840 ;;		__flash_compare_page_to_buffer
 38841 ;;		__flash_write_to_buffer
 38842 ;;		__flash_write_page_from_buffer
 38843 ;;		__flash_partial_read
 38844 ;;		_flash_partial_write
 38845 ;;		__flash_erase_page
 38846 ;;		__flash_buffer_read
 38847 ;;		_flash_is_busy
 38848 ;;		_flash_set_power_state
 38849 ;; This function uses a non-reentrant model
 38850 ;;
 38851                           
 38852                           	psect	text147
 38853  015E9A                     __ptext147:
 38854                           	opt stack 0
 38855  015E9A                     __flash_is_busy:
 38856                           	opt stack 15
 38857                           
 38858                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 38859                           
 38860                           ;incstack = 0
 38861  015E9A  0101               	movlb	1	; () banked
 38862  015E9C  514F               	movf	_power_state& (0+255),w,b
 38863  015E9E  A4D8               	btfss	status,2,c
 38864                           
 38865                           ; BSR set to: 1
 38866                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 38867  015EA0  EC90  F0A7         	call	__flash_wakeup	;wreg free
 38868                           
 38869                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 38870  015EA4  EC2D  F0AD         	call	__flash_get_status	;wreg free
 38871  015EA8  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 38872  015EAC  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 38873                           
 38874                           ;flash.c: 295: if(status & 0b0000000010000000)
 38875  015EB0  0100               	movlb	0	; () banked
 38876  015EB2  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 38877  015EB4  D002               	goto	l1603
 38878                           
 38879                           ; BSR set to: 0
 38880                           ;flash.c: 296: {;flash.c: 298: return 0;
 38881  015EB6  0E00               	movlw	0
 38882                           
 38883                           ; BSR set to: 0
 38884                           ;flash.c: 299: }
 38885                           
 38886                           ; BSR set to: 0
 38887  015EB8  0012               	return	
 38888  015EBA                     l1603:
 38889                           
 38890                           ; BSR set to: 0
 38891                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 38892                           
 38893                           ; BSR set to: 0
 38894  015EBA  0E01               	movlw	1
 38895                           
 38896                           ; BSR set to: 0
 38897  015EBC  0012               	return	
 38898  015EBE                     __end_of__flash_is_busy:
 38899                           	opt stack 0
 38900                           tosu	equ	0xFFF
 38901                           tosh	equ	0xFFE
 38902                           tosl	equ	0xFFD
 38903                           pclath	equ	0xFFA
 38904                           tblptru	equ	0xFF8
 38905                           tblptrh	equ	0xFF7
 38906                           tblptrl	equ	0xFF6
 38907                           tablat	equ	0xFF5
 38908                           prodh	equ	0xFF4
 38909                           prodl	equ	0xFF3
 38910                           intcon	equ	0xFF2
 38911                           postinc0	equ	0xFEE
 38912                           wreg	equ	0xFE8
 38913                           indf1	equ	0xFE7
 38914                           postinc1	equ	0xFE6
 38915                           postdec1	equ	0xFE5
 38916                           plusw1	equ	0xFE3
 38917                           fsr1h	equ	0xFE2
 38918                           fsr1l	equ	0xFE1
 38919                           indf2	equ	0xFDF
 38920                           postinc2	equ	0xFDE
 38921                           postdec2	equ	0xFDD
 38922                           plusw2	equ	0xFDB
 38923                           fsr2h	equ	0xFDA
 38924                           fsr2l	equ	0xFD9
 38925                           status	equ	0xFD8
 38926                           
 38927 ;; *************** function __flash_wakeup *****************
 38928 ;; Defined at:
 38929 ;;		line 128 in file "flash.c"
 38930 ;; Parameters:    Size  Location     Type
 38931 ;;		None
 38932 ;; Auto vars:     Size  Location     Type
 38933 ;;  command         1    8[BANK0 ] unsigned char 
 38934 ;; Return value:  Size  Location     Type
 38935 ;;                  1    wreg      void 
 38936 ;; Registers used:
 38937 ;;		wreg, status,2, status,0, cstack
 38938 ;; Tracked objects:
 38939 ;;		On entry : 0/0
 38940 ;;		On exit  : 0/0
 38941 ;;		Unchanged: 0/0
 38942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38946 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38947 ;;Total ram usage:        1 bytes
 38948 ;; Hardware stack levels used:    1
 38949 ;; Hardware stack levels required when called:   11
 38950 ;; This function calls:
 38951 ;;		_spi_tx
 38952 ;; This function is called by:
 38953 ;;		__flash_is_busy
 38954 ;;		_flash_set_power_state
 38955 ;; This function uses a non-reentrant model
 38956 ;;
 38957                           
 38958                           	psect	text148
 38959  014F20                     __ptext148:
 38960                           	opt stack 0
 38961  014F20                     __flash_wakeup:
 38962                           	opt stack 15
 38963                           
 38964                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 38965                           
 38966                           ; BSR set to: 0
 38967                           ;incstack = 0
 38968  014F20  D022               	goto	l1552
 38969  014F22                     
 38970                           ;flash.c: 135: command = 0xAB;
 38971  014F22  0EAB               	movlw	171
 38972  014F24  0100               	movlb	0	; () banked
 38973  014F26  6F68               	movwf	__flash_wakeup@command& (0+255),b
 38974                           
 38975                           ; BSR set to: 0
 38976                           ;flash.c: 136: spi_tx(&command, 1);
 38977  014F28  0E68               	movlw	low __flash_wakeup@command
 38978  014F2A  6F60               	movwf	spi_tx@data& (0+255),b
 38979  014F2C  0E00               	movlw	high __flash_wakeup@command
 38980  014F2E  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 38981  014F30  0E00               	movlw	0
 38982  014F32  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 38983  014F34  0E01               	movlw	1
 38984  014F36  6F62               	movwf	spi_tx@length& (0+255),b
 38985  014F38  EC0B  F0A7         	call	_spi_tx	;wreg free
 38986                           
 38987                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 38988  014F3C  0E17               	movlw	23
 38989  014F3E                     u20087:
 38990  014F3E  2EE8               	decfsz	wreg,f,c
 38991  014F40  D7FE               	bra	u20087
 38992  014F42  F000               	nop	
 38993                           
 38994                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 38995  014F44  0E00               	movlw	0
 38996  014F46  0101               	movlb	1	; () banked
 38997  014F48  6F4F               	movwf	_power_state& (0+255),b
 38998                           
 38999                           ;flash.c: 139: break;
 39000  014F4A  0012               	return	
 39001  014F4C                     l1555:
 39002                           
 39003                           ; BSR set to: 1
 39004                           ;flash.c: 144: LATDbits.LD7 = 0;
 39005  014F4C  9E8C               	bcf	3980,7,c	;volatile
 39006                           
 39007                           ; BSR set to: 1
 39008                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39009  014F4E  0E0D               	movlw	13
 39010  014F50                     u20097:
 39011  014F50  2EE8               	decfsz	wreg,f,c
 39012  014F52  D7FE               	bra	u20097
 39013  014F54  F000               	nop	
 39014                           
 39015                           ;flash.c: 146: LATDbits.LD7 = 1;
 39016  014F56  8E8C               	bsf	3980,7,c	;volatile
 39017                           
 39018                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39019  014F58  0E50               	movlw	80
 39020  014F5A                     u20107:
 39021  014F5A  2EE8               	decfsz	wreg,f,c
 39022  014F5C  D7FE               	bra	u20107
 39023                           
 39024                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 39025  014F5E  0E00               	movlw	0
 39026  014F60  0101               	movlb	1	; () banked
 39027  014F62  6F4F               	movwf	_power_state& (0+255),b
 39028                           
 39029                           ; BSR set to: 1
 39030                           ;flash.c: 150: }
 39031                           
 39032                           ;flash.c: 149: break;
 39033  014F64  0012               	return	
 39034  014F66                     l1552:
 39035                           
 39036                           ; BSR set to: 1
 39037  014F66  0101               	movlb	1	; () banked
 39038  014F68  514F               	movf	_power_state& (0+255),w,b
 39039                           
 39040                           ; Switch size 1, requested type "space"
 39041                           ; Number of cases is 2, Range of values is 1 to 2
 39042                           ; switch strategies available:
 39043                           ; Name         Instructions Cycles
 39044                           ; simple_byte            7     4 (average)
 39045                           ;	Chosen strategy is simple_byte
 39046  014F6A  0A01               	xorlw	1	; case 1
 39047  014F6C  B4D8               	btfsc	status,2,c
 39048  014F6E  D7D9               	goto	l1553
 39049  014F70  0A03               	xorlw	3	; case 2
 39050  014F72  A4D8               	btfss	status,2,c
 39051  014F74  0012               	return	
 39052  014F76  D7EA               	goto	l1555
 39053  014F78                     __end_of__flash_wakeup:
 39054                           	opt stack 0
 39055                           tosu	equ	0xFFF
 39056                           tosh	equ	0xFFE
 39057                           tosl	equ	0xFFD
 39058                           pclath	equ	0xFFA
 39059                           tblptru	equ	0xFF8
 39060                           tblptrh	equ	0xFF7
 39061                           tblptrl	equ	0xFF6
 39062                           tablat	equ	0xFF5
 39063                           prodh	equ	0xFF4
 39064                           prodl	equ	0xFF3
 39065                           intcon	equ	0xFF2
 39066                           postinc0	equ	0xFEE
 39067                           wreg	equ	0xFE8
 39068                           indf1	equ	0xFE7
 39069                           postinc1	equ	0xFE6
 39070                           postdec1	equ	0xFE5
 39071                           plusw1	equ	0xFE3
 39072                           fsr1h	equ	0xFE2
 39073                           fsr1l	equ	0xFE1
 39074                           indf2	equ	0xFDF
 39075                           postinc2	equ	0xFDE
 39076                           postdec2	equ	0xFDD
 39077                           plusw2	equ	0xFDB
 39078                           fsr2h	equ	0xFDA
 39079                           fsr2l	equ	0xFD9
 39080                           status	equ	0xFD8
 39081                           
 39082 ;; *************** function _spi_tx *****************
 39083 ;; Defined at:
 39084 ;;		line 108 in file "spi.c"
 39085 ;; Parameters:    Size  Location     Type
 39086 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39087 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39088 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39089 ;;  length          2    2[BANK0 ] unsigned int 
 39090 ;; Auto vars:     Size  Location     Type
 39091 ;;		None
 39092 ;; Return value:  Size  Location     Type
 39093 ;;                  1    wreg      void 
 39094 ;; Registers used:
 39095 ;;		wreg, status,2, status,0
 39096 ;; Tracked objects:
 39097 ;;		On entry : 0/0
 39098 ;;		On exit  : 0/0
 39099 ;;		Unchanged: 0/0
 39100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39101 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39103 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39104 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39105 ;;Total ram usage:        8 bytes
 39106 ;; Hardware stack levels used:    1
 39107 ;; Hardware stack levels required when called:   10
 39108 ;; This function calls:
 39109 ;;		Nothing
 39110 ;; This function is called by:
 39111 ;;		__flash_set_page_size
 39112 ;;		__flash_wakeup
 39113 ;;		__flash_copy_page_to_buffer
 39114 ;;		__flash_compare_page_to_buffer
 39115 ;;		__flash_write_page_from_buffer
 39116 ;;		__flash_erase_page
 39117 ;;		_flash_set_power_state
 39118 ;; This function uses a non-reentrant model
 39119 ;;
 39120                           
 39121                           	psect	text149
 39122  014E16                     __ptext149:
 39123                           	opt stack 0
 39124  014E16                     _spi_tx:
 39125                           	opt stack 17
 39126                           
 39127                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 39128                           
 39129                           ; BSR set to: 1
 39130                           ;incstack = 0
 39131  014E16  9E88               	bcf	3976,7,c	;volatile
 39132                           
 39133                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 39134  014E18  9C88               	bcf	3976,6,c	;volatile
 39135                           
 39136                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 39137  014E1A  8A88               	bsf	3976,5,c	;volatile
 39138                           
 39139                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 39140  014E1C  9888               	bcf	3976,4,c	;volatile
 39141                           
 39142                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 39143  014E1E  9688               	bcf	3976,3,c	;volatile
 39144                           
 39145                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 39146  014E20  8488               	bsf	3976,2,c	;volatile
 39147                           
 39148                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 39149  014E22  9288               	bcf	3976,1,c	;volatile
 39150                           
 39151                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 39152  014E24  9886               	bcf	3974,4,c	;volatile
 39153  014E26  9A86               	bcf	3974,5,c	;volatile
 39154  014E28  9C86               	bcf	3974,6,c	;volatile
 39155  014E2A  9E86               	bcf	3974,7,c	;volatile
 39156                           
 39157                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 39158  014E2C  9086               	bcf	3974,0,c	;volatile
 39159  014E2E  9286               	bcf	3974,1,c	;volatile
 39160  014E30  9486               	bcf	3974,2,c	;volatile
 39161  014E32  9686               	bcf	3974,3,c	;volatile
 39162                           
 39163                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39164  014E34  0100               	movlb	0	; () banked
 39165  014E36  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 39166  014E38  6E6A               	movwf	3946,c	;volatile
 39167                           
 39168                           ; BSR set to: 0
 39169                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39170  014E3A  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 39171                           
 39172                           ; BSR set to: 0
 39173                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39174  014E3E  0EFF               	movlw	255
 39175  014E40  6F64               	movwf	??_spi_tx& (0+255),b
 39176  014E42  0EFF               	movlw	255
 39177  014E44  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 39178  014E46  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 39179  014E4A  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 39180  014E4E  5164               	movf	??_spi_tx& (0+255),w,b
 39181  014E50  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 39182  014E52  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 39183  014E54  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 39184  014E56  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 39185  014E5A  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 39186  014E5C  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 39187  014E5E  6E66               	movwf	3942,c	;volatile
 39188                           
 39189                           ; BSR set to: 0
 39190                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39191  014E60  0562               	decf	spi_tx@length& (0+255),w,b
 39192  014E62  6E67               	movwf	3943,c	;volatile
 39193                           
 39194                           ; BSR set to: 0
 39195                           ;spi.c: 136: LATDbits.LD7 = 0;
 39196  014E64  9E8C               	bcf	3980,7,c	;volatile
 39197                           
 39198                           ; BSR set to: 0
 39199                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 39200  014E66  8088               	bsf	3976,0,c	;volatile
 39201  014E68                     
 39202                           ; BSR set to: 0
 39203  014E68  B088               	btfsc	3976,0,c	;volatile
 39204  014E6A  D7FE               	goto	l2199
 39205                           
 39206                           ;spi.c: 139: LATDbits.LD7 = 1;
 39207  014E6C  8E8C               	bsf	3980,7,c	;volatile
 39208  014E6E  0012               	return		;funcret
 39209  014E70                     __end_of_spi_tx:
 39210                           	opt stack 0
 39211                           tosu	equ	0xFFF
 39212                           tosh	equ	0xFFE
 39213                           tosl	equ	0xFFD
 39214                           pclath	equ	0xFFA
 39215                           tblptru	equ	0xFF8
 39216                           tblptrh	equ	0xFF7
 39217                           tblptrl	equ	0xFF6
 39218                           tablat	equ	0xFF5
 39219                           prodh	equ	0xFF4
 39220                           prodl	equ	0xFF3
 39221                           intcon	equ	0xFF2
 39222                           postinc0	equ	0xFEE
 39223                           wreg	equ	0xFE8
 39224                           indf1	equ	0xFE7
 39225                           postinc1	equ	0xFE6
 39226                           postdec1	equ	0xFE5
 39227                           plusw1	equ	0xFE3
 39228                           fsr1h	equ	0xFE2
 39229                           fsr1l	equ	0xFE1
 39230                           indf2	equ	0xFDF
 39231                           postinc2	equ	0xFDE
 39232                           postdec2	equ	0xFDD
 39233                           plusw2	equ	0xFDB
 39234                           fsr2h	equ	0xFDA
 39235                           fsr2l	equ	0xFD9
 39236                           status	equ	0xFD8
 39237                           
 39238 ;; *************** function __flash_get_status *****************
 39239 ;; Defined at:
 39240 ;;		line 117 in file "flash.c"
 39241 ;; Parameters:    Size  Location     Type
 39242 ;;		None
 39243 ;; Auto vars:     Size  Location     Type
 39244 ;;  status          2   15[BANK0 ] unsigned int 
 39245 ;;  command         1   14[BANK0 ] unsigned char 
 39246 ;; Return value:  Size  Location     Type
 39247 ;;                  2   12[BANK0 ] unsigned int 
 39248 ;; Registers used:
 39249 ;;		wreg, status,2, status,0, cstack
 39250 ;; Tracked objects:
 39251 ;;		On entry : 0/0
 39252 ;;		On exit  : 0/0
 39253 ;;		Unchanged: 0/0
 39254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39258 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39259 ;;Total ram usage:        5 bytes
 39260 ;; Hardware stack levels used:    1
 39261 ;; Hardware stack levels required when called:   11
 39262 ;; This function calls:
 39263 ;;		_spi_tx_rx
 39264 ;; This function is called by:
 39265 ;;		__flash_compare_page_to_buffer
 39266 ;;		__flash_is_busy
 39267 ;; This function uses a non-reentrant model
 39268 ;;
 39269                           
 39270                           	psect	text150
 39271  015A5A                     __ptext150:
 39272                           	opt stack 0
 39273  015A5A                     __flash_get_status:
 39274                           	opt stack 15
 39275                           
 39276                           ;flash.c: 121: uint8_t command = 0xD7;
 39277                           
 39278                           ;incstack = 0
 39279  015A5A  0ED7               	movlw	215
 39280  015A5C  0100               	movlb	0	; () banked
 39281  015A5E  6F6E               	movwf	__flash_get_status@command& (0+255),b
 39282                           
 39283                           ; BSR set to: 0
 39284                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39285  015A60  0E6E               	movlw	low __flash_get_status@command
 39286  015A62  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39287  015A64  0E00               	movlw	high __flash_get_status@command
 39288  015A66  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39289  015A68  0E00               	movlw	0
 39290  015A6A  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39291  015A6C  0E01               	movlw	1
 39292  015A6E  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39293  015A70  0E6F               	movlw	low __flash_get_status@status
 39294  015A72  6F64               	movwf	spi_tx_rx@data& (0+255),b
 39295  015A74  0E00               	movlw	high __flash_get_status@status
 39296  015A76  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 39297  015A78  0E00               	movlw	0
 39298  015A7A  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 39299  015A7C  0E02               	movlw	2
 39300  015A7E  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 39301  015A80  EC09  F09D         	call	_spi_tx_rx	;wreg free
 39302                           
 39303                           ;flash.c: 124: return status;
 39304  015A84  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 39305  015A88  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39306  015A8C  0012               	return	
 39307  015A8E                     __end_of__flash_get_status:
 39308                           	opt stack 0
 39309                           tosu	equ	0xFFF
 39310                           tosh	equ	0xFFE
 39311                           tosl	equ	0xFFD
 39312                           pclath	equ	0xFFA
 39313                           tblptru	equ	0xFF8
 39314                           tblptrh	equ	0xFF7
 39315                           tblptrl	equ	0xFF6
 39316                           tablat	equ	0xFF5
 39317                           prodh	equ	0xFF4
 39318                           prodl	equ	0xFF3
 39319                           intcon	equ	0xFF2
 39320                           postinc0	equ	0xFEE
 39321                           wreg	equ	0xFE8
 39322                           indf1	equ	0xFE7
 39323                           postinc1	equ	0xFE6
 39324                           postdec1	equ	0xFE5
 39325                           plusw1	equ	0xFE3
 39326                           fsr1h	equ	0xFE2
 39327                           fsr1l	equ	0xFE1
 39328                           indf2	equ	0xFDF
 39329                           postinc2	equ	0xFDE
 39330                           postdec2	equ	0xFDD
 39331                           plusw2	equ	0xFDB
 39332                           fsr2h	equ	0xFDA
 39333                           fsr2l	equ	0xFD9
 39334                           status	equ	0xFD8
 39335                           
 39336 ;; *************** function _spi_tx_rx *****************
 39337 ;; Defined at:
 39338 ;;		line 199 in file "spi.c"
 39339 ;; Parameters:    Size  Location     Type
 39340 ;;  command         2    0[BANK0 ] PTR unsigned char 
 39341 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 39342 ;;  command_leng    2    2[BANK0 ] unsigned int 
 39343 ;;  data            2    4[BANK0 ] PTR unsigned char 
 39344 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39345 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39346 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 39347 ;;  data_length     2    6[BANK0 ] unsigned int 
 39348 ;; Auto vars:     Size  Location     Type
 39349 ;;		None
 39350 ;; Return value:  Size  Location     Type
 39351 ;;                  1    wreg      void 
 39352 ;; Registers used:
 39353 ;;		wreg, status,2, status,0
 39354 ;; Tracked objects:
 39355 ;;		On entry : 0/0
 39356 ;;		On exit  : 0/0
 39357 ;;		Unchanged: 0/0
 39358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39359 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39361 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39362 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39363 ;;Total ram usage:       12 bytes
 39364 ;; Hardware stack levels used:    1
 39365 ;; Hardware stack levels required when called:   10
 39366 ;; This function calls:
 39367 ;;		Nothing
 39368 ;; This function is called by:
 39369 ;;		__flash_get_status
 39370 ;;		__flash_partial_read
 39371 ;;		__flash_buffer_read
 39372 ;; This function uses a non-reentrant model
 39373 ;;
 39374                           
 39375                           	psect	text151
 39376  013A12                     __ptext151:
 39377                           	opt stack 0
 39378  013A12                     _spi_tx_rx:
 39379                           	opt stack 15
 39380                           
 39381                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 39382                           
 39383                           ;incstack = 0
 39384  013A12  9E88               	bcf	3976,7,c	;volatile
 39385                           
 39386                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 39387  013A14  9C88               	bcf	3976,6,c	;volatile
 39388                           
 39389                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 39390  013A16  8A88               	bsf	3976,5,c	;volatile
 39391                           
 39392                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 39393  013A18  9888               	bcf	3976,4,c	;volatile
 39394                           
 39395                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 39396  013A1A  9688               	bcf	3976,3,c	;volatile
 39397                           
 39398                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 39399  013A1C  8488               	bsf	3976,2,c	;volatile
 39400                           
 39401                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 39402  013A1E  9288               	bcf	3976,1,c	;volatile
 39403                           
 39404                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 39405  013A20  9886               	bcf	3974,4,c	;volatile
 39406  013A22  9A86               	bcf	3974,5,c	;volatile
 39407  013A24  9C86               	bcf	3974,6,c	;volatile
 39408  013A26  9E86               	bcf	3974,7,c	;volatile
 39409                           
 39410                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 39411  013A28  9086               	bcf	3974,0,c	;volatile
 39412  013A2A  9286               	bcf	3974,1,c	;volatile
 39413  013A2C  9486               	bcf	3974,2,c	;volatile
 39414  013A2E  9686               	bcf	3974,3,c	;volatile
 39415                           
 39416                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39417  013A30  0100               	movlb	0	; () banked
 39418  013A32  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 39419  013A34  6E6A               	movwf	3946,c	;volatile
 39420                           
 39421                           ; BSR set to: 0
 39422                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39423  013A36  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39424                           
 39425                           ; BSR set to: 0
 39426                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39427  013A3A  0EFF               	movlw	255
 39428  013A3C  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39429  013A3E  0EFF               	movlw	255
 39430  013A40  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39431  013A42  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39432  013A46  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39433  013A4A  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39434  013A4C  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39435  013A4E  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39436  013A50  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39437  013A52  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39438  013A56  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39439  013A58  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39440  013A5A  6E66               	movwf	3942,c	;volatile
 39441                           
 39442                           ; BSR set to: 0
 39443                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39444  013A5C  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 39445  013A5E  6E67               	movwf	3943,c	;volatile
 39446                           
 39447                           ; BSR set to: 0
 39448                           ;spi.c: 227: LATDbits.LD7 = 0;
 39449  013A60  9E8C               	bcf	3980,7,c	;volatile
 39450                           
 39451                           ; BSR set to: 0
 39452                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 39453  013A62  8088               	bsf	3976,0,c	;volatile
 39454  013A64                     
 39455                           ; BSR set to: 0
 39456  013A64  B088               	btfsc	3976,0,c	;volatile
 39457  013A66  D7FE               	goto	l2214
 39458                           
 39459                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 39460  013A68  9A88               	bcf	3976,5,c	;volatile
 39461                           
 39462                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 39463  013A6A  8888               	bsf	3976,4,c	;volatile
 39464                           
 39465                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 39466  013A6C  9688               	bcf	3976,3,c	;volatile
 39467                           
 39468                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 39469  013A6E  9488               	bcf	3976,2,c	;volatile
 39470                           
 39471                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39472  013A70  0100               	movlb	0	; () banked
 39473  013A72  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 39474  013A74  6E68               	movwf	3944,c	;volatile
 39475                           
 39476                           ; BSR set to: 0
 39477                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39478  013A76  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 39479                           
 39480                           ; BSR set to: 0
 39481                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39482  013A7A  0EFF               	movlw	255
 39483  013A7C  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39484  013A7E  0EFF               	movlw	255
 39485  013A80  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39486  013A82  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 39487  013A86  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 39488  013A8A  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39489  013A8C  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39490  013A8E  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39491  013A90  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39492  013A92  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39493  013A96  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39494  013A98  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39495  013A9A  6E66               	movwf	3942,c	;volatile
 39496                           
 39497                           ; BSR set to: 0
 39498                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39499  013A9C  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 39500  013A9E  6E67               	movwf	3943,c	;volatile
 39501                           
 39502                           ; BSR set to: 0
 39503                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 39504  013AA0  8088               	bsf	3976,0,c	;volatile
 39505  013AA2                     
 39506                           ; BSR set to: 0
 39507  013AA2  B088               	btfsc	3976,0,c	;volatile
 39508  013AA4  D7FE               	goto	l2217
 39509                           
 39510                           ;spi.c: 254: LATDbits.LD7 = 1;
 39511  013AA6  8E8C               	bsf	3980,7,c	;volatile
 39512  013AA8  0012               	return		;funcret
 39513  013AAA                     __end_of_spi_tx_rx:
 39514                           	opt stack 0
 39515                           tosu	equ	0xFFF
 39516                           tosh	equ	0xFFE
 39517                           tosl	equ	0xFFD
 39518                           pclath	equ	0xFFA
 39519                           tblptru	equ	0xFF8
 39520                           tblptrh	equ	0xFF7
 39521                           tblptrl	equ	0xFF6
 39522                           tablat	equ	0xFF5
 39523                           prodh	equ	0xFF4
 39524                           prodl	equ	0xFF3
 39525                           intcon	equ	0xFF2
 39526                           postinc0	equ	0xFEE
 39527                           wreg	equ	0xFE8
 39528                           indf1	equ	0xFE7
 39529                           postinc1	equ	0xFE6
 39530                           postdec1	equ	0xFE5
 39531                           plusw1	equ	0xFE3
 39532                           fsr1h	equ	0xFE2
 39533                           fsr1l	equ	0xFE1
 39534                           indf2	equ	0xFDF
 39535                           postinc2	equ	0xFDE
 39536                           postdec2	equ	0xFDD
 39537                           plusw2	equ	0xFDB
 39538                           fsr2h	equ	0xFDA
 39539                           fsr2l	equ	0xFD9
 39540                           status	equ	0xFD8
 39541                           
 39542 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 39543 ;; Defined at:
 39544 ;;		line 993 in file "usb_device_msd.c"
 39545 ;; Parameters:    Size  Location     Type
 39546 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 39547 ;; Auto vars:     Size  Location     Type
 39548 ;;		None
 39549 ;; Return value:  Size  Location     Type
 39550 ;;                  1    wreg      void 
 39551 ;; Registers used:
 39552 ;;		wreg, status,2, status,0
 39553 ;; Tracked objects:
 39554 ;;		On entry : 0/0
 39555 ;;		On exit  : 0/0
 39556 ;;		Unchanged: 0/0
 39557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39560 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39561 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39562 ;;Total ram usage:        6 bytes
 39563 ;; Hardware stack levels used:    1
 39564 ;; Hardware stack levels required when called:   10
 39565 ;; This function calls:
 39566 ;;		Nothing
 39567 ;; This function is called by:
 39568 ;;		_MSDProcessCommandMediaPresent
 39569 ;; This function uses a non-reentrant model
 39570 ;;
 39571                           
 39572                           	psect	text152
 39573  012F66                     __ptext152:
 39574                           	opt stack 0
 39575  012F66                     _MSDComputeDeviceInAndResidue:
 39576                           	opt stack 16
 39577                           
 39578                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 39579                           
 39580                           ;incstack = 0
 39581  012F66  0100               	movlb	0	; () banked
 39582  012F68  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 39583  012F6A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 39584  012F6C  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 39585  012F6E  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 39586  012F70  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 39587  012F72  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 39588  012F74  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 39589  012F76  0102               	movlb	2	; () banked
 39590  012F78  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 39591  012F7A  0100               	movlb	0	; () banked
 39592  012F7C  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 39593  012F7E  0102               	movlb	2	; () banked
 39594  012F80  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 39595  012F82  0100               	movlb	0	; () banked
 39596  012F84  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 39597  012F86  0102               	movlb	2	; () banked
 39598  012F88  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 39599  012F8A  0100               	movlb	0	; () banked
 39600  012F8C  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 39601  012F8E  0102               	movlb	2	; () banked
 39602  012F90  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 39603  012F92  B0D8               	btfsc	status,0,c
 39604  012F94  D00E               	goto	l675
 39605                           
 39606                           ; BSR set to: 2
 39607                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 39608  012F96  0E00               	movlw	0
 39609  012F98  010D               	movlb	13	; () banked
 39610  012F9A  6F88               	movwf	136,b	;volatile
 39611  012F9C  0E00               	movlw	0
 39612  012F9E  6F89               	movwf	137,b	;volatile
 39613  012FA0  0E00               	movlw	0
 39614  012FA2  6F8A               	movwf	138,b	;volatile
 39615  012FA4  0E00               	movlw	0
 39616  012FA6  6F8B               	movwf	139,b	;volatile
 39617                           
 39618                           ; BSR set to: 13
 39619                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 39620  012FA8  C208  F13D         	movff	_gblCBW+8,_TransferLength
 39621  012FAC  C209  F13E         	movff	_gblCBW+9,_TransferLength+1
 39622                           
 39623                           ;usb_device_msd.c: 1002: }
 39624  012FB0  0012               	return	
 39625  012FB2                     l675:
 39626                           
 39627                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 39628                           
 39629                           ; BSR set to: 13
 39630  012FB2  0101               	movlb	1	; () banked
 39631  012FB4  513D               	movf	_TransferLength& (0+255),w,b
 39632  012FB6  0100               	movlb	0	; () banked
 39633  012FB8  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 39634  012FBA  0101               	movlb	1	; () banked
 39635  012FBC  513E               	movf	(_TransferLength+1)& (0+255),w,b
 39636  012FBE  0100               	movlb	0	; () banked
 39637  012FC0  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 39638  012FC2  B0D8               	btfsc	status,0,c
 39639  012FC4  D004               	goto	l677
 39640                           
 39641                           ; BSR set to: 0
 39642                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 39643  012FC6  C060  F13D         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 39644  012FCA  C061  F13E         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 39645  012FCE                     l677:
 39646                           
 39647                           ; BSR set to: 0
 39648                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 39649                           
 39650                           ; BSR set to: 0
 39651  012FCE  0101               	movlb	1	; () banked
 39652  012FD0  513D               	movf	_TransferLength& (0+255),w,b
 39653  012FD2  0100               	movlb	0	; () banked
 39654  012FD4  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 39655  012FD6  0101               	movlb	1	; () banked
 39656  012FD8  513E               	movf	(_TransferLength+1)& (0+255),w,b
 39657  012FDA  0100               	movlb	0	; () banked
 39658  012FDC  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 39659  012FDE  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 39660  012FE0  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 39661  012FE2  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 39662  012FE4  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 39663  012FE6  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 39664  012FE8  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 39665  012FEA  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 39666  012FEC  0E00               	movlw	0
 39667  012FEE  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 39668  012FF0  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 39669  012FF2  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 39670  012FF4  0102               	movlb	2	; () banked
 39671  012FF6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 39672  012FF8  0100               	movlb	0	; () banked
 39673  012FFA  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 39674  012FFC  010D               	movlb	13	; () banked
 39675  012FFE  6F88               	movwf	136,b	;volatile
 39676  013000  0102               	movlb	2	; () banked
 39677  013002  5109               	movf	(_gblCBW+9)& (0+255),w,b
 39678  013004  0100               	movlb	0	; () banked
 39679  013006  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 39680  013008  010D               	movlb	13	; () banked
 39681  01300A  6F89               	movwf	137,b	;volatile
 39682  01300C  0102               	movlb	2	; () banked
 39683  01300E  510A               	movf	(_gblCBW+10)& (0+255),w,b
 39684  013010  0100               	movlb	0	; () banked
 39685  013012  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 39686  013014  010D               	movlb	13	; () banked
 39687  013016  6F8A               	movwf	138,b	;volatile
 39688  013018  0102               	movlb	2	; () banked
 39689  01301A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 39690  01301C  0100               	movlb	0	; () banked
 39691  01301E  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 39692  013020  010D               	movlb	13	; () banked
 39693  013022  6F8B               	movwf	139,b	;volatile
 39694  013024  0012               	return	
 39695  013026                     __end_of_MSDComputeDeviceInAndResidue:
 39696                           	opt stack 0
 39697                           tosu	equ	0xFFF
 39698                           tosh	equ	0xFFE
 39699                           tosl	equ	0xFFD
 39700                           pclath	equ	0xFFA
 39701                           tblptru	equ	0xFF8
 39702                           tblptrh	equ	0xFF7
 39703                           tblptrl	equ	0xFF6
 39704                           tablat	equ	0xFF5
 39705                           prodh	equ	0xFF4
 39706                           prodl	equ	0xFF3
 39707                           intcon	equ	0xFF2
 39708                           postinc0	equ	0xFEE
 39709                           wreg	equ	0xFE8
 39710                           indf1	equ	0xFE7
 39711                           postinc1	equ	0xFE6
 39712                           postdec1	equ	0xFE5
 39713                           plusw1	equ	0xFE3
 39714                           fsr1h	equ	0xFE2
 39715                           fsr1l	equ	0xFE1
 39716                           indf2	equ	0xFDF
 39717                           postinc2	equ	0xFDE
 39718                           postdec2	equ	0xFDD
 39719                           plusw2	equ	0xFDB
 39720                           fsr2h	equ	0xFDA
 39721                           fsr2l	equ	0xFD9
 39722                           status	equ	0xFD8
 39723                           
 39724 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 39725 ;; Defined at:
 39726 ;;		line 18 in file "external_flash.c"
 39727 ;; Parameters:    Size  Location     Type
 39728 ;;  config          2    0[BANK0 ] PTR void 
 39729 ;;		 -> NULL(0), 
 39730 ;; Auto vars:     Size  Location     Type
 39731 ;;		None
 39732 ;; Return value:  Size  Location     Type
 39733 ;;                  2    0[BANK0 ] unsigned int 
 39734 ;; Registers used:
 39735 ;;		wreg, status,2
 39736 ;; Tracked objects:
 39737 ;;		On entry : 0/0
 39738 ;;		On exit  : 0/0
 39739 ;;		Unchanged: 0/0
 39740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39741 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39744 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39745 ;;Total ram usage:        2 bytes
 39746 ;; Hardware stack levels used:    1
 39747 ;; Hardware stack levels required when called:   10
 39748 ;; This function calls:
 39749 ;;		Nothing
 39750 ;; This function is called by:
 39751 ;;		_MSDProcessCommandMediaPresent
 39752 ;; This function uses a non-reentrant model
 39753 ;;
 39754                           
 39755                           	psect	text153
 39756  016098                     __ptext153:
 39757                           	opt stack 0
 39758  016098                     _ExternalFlash_SectorSizeRead:
 39759                           	opt stack 16
 39760                           
 39761                           ;external_flash.c: 20: return 512;
 39762                           
 39763                           ; BSR set to: 13
 39764                           ;incstack = 0
 39765  016098  0E02               	movlw	2
 39766  01609A  0100               	movlb	0	; () banked
 39767  01609C  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 39768  01609E  0E00               	movlw	0
 39769  0160A0  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 39770  0160A2  0012               	return	
 39771  0160A4                     __end_of_ExternalFlash_SectorSizeRead:
 39772                           	opt stack 0
 39773                           tosu	equ	0xFFF
 39774                           tosh	equ	0xFFE
 39775                           tosl	equ	0xFFD
 39776                           pclath	equ	0xFFA
 39777                           tblptru	equ	0xFF8
 39778                           tblptrh	equ	0xFF7
 39779                           tblptrl	equ	0xFF6
 39780                           tablat	equ	0xFF5
 39781                           prodh	equ	0xFF4
 39782                           prodl	equ	0xFF3
 39783                           intcon	equ	0xFF2
 39784                           postinc0	equ	0xFEE
 39785                           wreg	equ	0xFE8
 39786                           indf1	equ	0xFE7
 39787                           postinc1	equ	0xFE6
 39788                           postdec1	equ	0xFE5
 39789                           plusw1	equ	0xFE3
 39790                           fsr1h	equ	0xFE2
 39791                           fsr1l	equ	0xFE1
 39792                           indf2	equ	0xFDF
 39793                           postinc2	equ	0xFDE
 39794                           postdec2	equ	0xFDD
 39795                           plusw2	equ	0xFDB
 39796                           fsr2h	equ	0xFDA
 39797                           fsr2l	equ	0xFD9
 39798                           status	equ	0xFD8
 39799                           
 39800 ;; *************** function _ExternalFlash_CapacityRead *****************
 39801 ;; Defined at:
 39802 ;;		line 23 in file "external_flash.c"
 39803 ;; Parameters:    Size  Location     Type
 39804 ;;  config          2    0[BANK0 ] PTR void 
 39805 ;;		 -> NULL(0), 
 39806 ;; Auto vars:     Size  Location     Type
 39807 ;;		None
 39808 ;; Return value:  Size  Location     Type
 39809 ;;                  4    0[BANK0 ] unsigned long 
 39810 ;; Registers used:
 39811 ;;		wreg, status,2
 39812 ;; Tracked objects:
 39813 ;;		On entry : 0/0
 39814 ;;		On exit  : 0/0
 39815 ;;		Unchanged: 0/0
 39816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39820 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39821 ;;Total ram usage:        4 bytes
 39822 ;; Hardware stack levels used:    1
 39823 ;; Hardware stack levels required when called:   10
 39824 ;; This function calls:
 39825 ;;		Nothing
 39826 ;; This function is called by:
 39827 ;;		_MSDProcessCommandMediaPresent
 39828 ;; This function uses a non-reentrant model
 39829 ;;
 39830                           
 39831                           	psect	text154
 39832  01601C                     __ptext154:
 39833                           	opt stack 0
 39834  01601C                     _ExternalFlash_CapacityRead:
 39835                           	opt stack 16
 39836                           
 39837                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 39838                           
 39839                           ; BSR set to: 0
 39840                           ;incstack = 0
 39841  01601C  0EFF               	movlw	255
 39842  01601E  0100               	movlb	0	; () banked
 39843  016020  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 39844  016022  0E1F               	movlw	31
 39845  016024  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 39846  016026  0E00               	movlw	0
 39847  016028  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 39848  01602A  0E00               	movlw	0
 39849  01602C  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 39850  01602E  0012               	return	
 39851  016030                     __end_of_ExternalFlash_CapacityRead:
 39852                           	opt stack 0
 39853                           tosu	equ	0xFFF
 39854                           tosh	equ	0xFFE
 39855                           tosl	equ	0xFFD
 39856                           pclath	equ	0xFFA
 39857                           tblptru	equ	0xFF8
 39858                           tblptrh	equ	0xFF7
 39859                           tblptrl	equ	0xFF6
 39860                           tablat	equ	0xFF5
 39861                           prodh	equ	0xFF4
 39862                           prodl	equ	0xFF3
 39863                           intcon	equ	0xFF2
 39864                           postinc0	equ	0xFEE
 39865                           wreg	equ	0xFE8
 39866                           indf1	equ	0xFE7
 39867                           postinc1	equ	0xFE6
 39868                           postdec1	equ	0xFE5
 39869                           plusw1	equ	0xFE3
 39870                           fsr1h	equ	0xFE2
 39871                           fsr1l	equ	0xFE1
 39872                           indf2	equ	0xFDF
 39873                           postinc2	equ	0xFDE
 39874                           postdec2	equ	0xFDD
 39875                           plusw2	equ	0xFDB
 39876                           fsr2h	equ	0xFDA
 39877                           fsr2l	equ	0xFD9
 39878                           status	equ	0xFD8
 39879                           
 39880 ;; *************** function _ExternalFlash_MediaInitialize *****************
 39881 ;; Defined at:
 39882 ;;		line 10 in file "external_flash.c"
 39883 ;; Parameters:    Size  Location     Type
 39884 ;;  config          2    0[BANK0 ] PTR void 
 39885 ;;		 -> NULL(0), 
 39886 ;; Auto vars:     Size  Location     Type
 39887 ;;		None
 39888 ;; Return value:  Size  Location     Type
 39889 ;;                  2    0[BANK0 ] PTR struct .
 39890 ;; Registers used:
 39891 ;;		wreg, status,2, status,0
 39892 ;; Tracked objects:
 39893 ;;		On entry : 0/0
 39894 ;;		On exit  : 0/0
 39895 ;;		Unchanged: 0/0
 39896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39901 ;;Total ram usage:        2 bytes
 39902 ;; Hardware stack levels used:    1
 39903 ;; Hardware stack levels required when called:   10
 39904 ;; This function calls:
 39905 ;;		Nothing
 39906 ;; This function is called by:
 39907 ;;		_USBMSDInit
 39908 ;;		_MSDProcessCommand
 39909 ;; This function uses a non-reentrant model
 39910 ;;
 39911                           
 39912                           	psect	text155
 39913  015F24                     __ptext155:
 39914                           	opt stack 0
 39915  015F24                     _ExternalFlash_MediaInitialize:
 39916                           	opt stack 0
 39917                           
 39918                           ; BSR set to: 0
 39919                           ;Skip over the trampoline to the duplicate function for level 2
 39920  015F24  B25F               	btfsc	btemp,1,c
 39921  015F26  EFEA  F0AF         	goto	i2_ExternalFlash_MediaInitialize
 39922  015F2A                     _ExternalFlash_MediaInitialize$intlevel0:
 39923                           	opt stack 17
 39924                           
 39925                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 39926                           
 39927                           ;incstack = 0
 39928  015F2A  0102               	movlb	2	; () banked
 39929  015F2C  8199               	bsf	(_mediaInformation+1)& (0+255),0,b
 39930                           
 39931                           ; BSR set to: 2
 39932                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 39933  015F2E  0E02               	movlw	2
 39934  015F30  6F9B               	movwf	(_mediaInformation+3)& (0+255),b
 39935  015F32  0E00               	movlw	0
 39936  015F34  6F9A               	movwf	(_mediaInformation+2)& (0+255),b
 39937                           
 39938                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 39939  015F36  0E00               	movlw	0
 39940  015F38  6F98               	movwf	_mediaInformation& (0+255),b
 39941                           
 39942                           ; BSR set to: 2
 39943                           ;external_flash.c: 15: return &mediaInformation;
 39944  015F3A  0E98               	movlw	low _mediaInformation
 39945  015F3C  0100               	movlb	0	; () banked
 39946  015F3E  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 39947  015F40  0E02               	movlw	high _mediaInformation
 39948  015F42  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 39949  015F44  0012               	return	
 39950  015F46                     __end_of_ExternalFlash_MediaInitialize:
 39951                           	opt stack 0
 39952                           tosu	equ	0xFFF
 39953                           tosh	equ	0xFFE
 39954                           tosl	equ	0xFFD
 39955                           pclath	equ	0xFFA
 39956                           tblptru	equ	0xFF8
 39957                           tblptrh	equ	0xFF7
 39958                           tblptrl	equ	0xFF6
 39959                           tablat	equ	0xFF5
 39960                           prodh	equ	0xFF4
 39961                           prodl	equ	0xFF3
 39962                           intcon	equ	0xFF2
 39963                           postinc0	equ	0xFEE
 39964                           wreg	equ	0xFE8
 39965                           indf1	equ	0xFE7
 39966                           postinc1	equ	0xFE6
 39967                           postdec1	equ	0xFE5
 39968                           plusw1	equ	0xFE3
 39969                           fsr1h	equ	0xFE2
 39970                           fsr1l	equ	0xFE1
 39971                           indf2	equ	0xFDF
 39972                           postinc2	equ	0xFDE
 39973                           postdec2	equ	0xFDD
 39974                           plusw2	equ	0xFDB
 39975                           fsr2h	equ	0xFDA
 39976                           fsr2l	equ	0xFD9
 39977                           status	equ	0xFD8
 39978                           
 39979 ;; *************** function _ExternalFlash_MediaDetect *****************
 39980 ;; Defined at:
 39981 ;;		line 29 in file "external_flash.c"
 39982 ;; Parameters:    Size  Location     Type
 39983 ;;  config          2    0[BANK0 ] PTR void 
 39984 ;;		 -> NULL(0), 
 39985 ;; Auto vars:     Size  Location     Type
 39986 ;;		None
 39987 ;; Return value:  Size  Location     Type
 39988 ;;                  1    wreg      unsigned char 
 39989 ;; Registers used:
 39990 ;;		wreg
 39991 ;; Tracked objects:
 39992 ;;		On entry : 0/0
 39993 ;;		On exit  : 0/0
 39994 ;;		Unchanged: 0/0
 39995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39996 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40000 ;;Total ram usage:        2 bytes
 40001 ;; Hardware stack levels used:    1
 40002 ;; Hardware stack levels required when called:   10
 40003 ;; This function calls:
 40004 ;;		Nothing
 40005 ;; This function is called by:
 40006 ;;		_USBMSDInit
 40007 ;;		_MSDProcessCommand
 40008 ;; This function uses a non-reentrant model
 40009 ;;
 40010                           
 40011                           	psect	text156
 40012  0160DA                     __ptext156:
 40013                           	opt stack 0
 40014  0160DA                     _ExternalFlash_MediaDetect:
 40015                           	opt stack 0
 40016                           
 40017                           ; BSR set to: 0
 40018                           ;Skip over the trampoline to the duplicate function for level 2
 40019  0160DA  B25F               	btfsc	btemp,1,c
 40020  0160DC  EF94  F0B0         	goto	i2_ExternalFlash_MediaDetect
 40021  0160E0                     _ExternalFlash_MediaDetect$intlevel0:
 40022                           	opt stack 17
 40023                           
 40024                           ;external_flash.c: 31: return 1;
 40025                           
 40026                           ;incstack = 0
 40027  0160E0  0E01               	movlw	1
 40028  0160E2  0012               	return	
 40029  0160E4                     __end_of_ExternalFlash_MediaDetect:
 40030                           	opt stack 0
 40031                           tosu	equ	0xFFF
 40032                           tosh	equ	0xFFE
 40033                           tosl	equ	0xFFD
 40034                           pclath	equ	0xFFA
 40035                           tblptru	equ	0xFF8
 40036                           tblptrh	equ	0xFF7
 40037                           tblptrl	equ	0xFF6
 40038                           tablat	equ	0xFF5
 40039                           prodh	equ	0xFF4
 40040                           prodl	equ	0xFF3
 40041                           intcon	equ	0xFF2
 40042                           postinc0	equ	0xFEE
 40043                           wreg	equ	0xFE8
 40044                           indf1	equ	0xFE7
 40045                           postinc1	equ	0xFE6
 40046                           postdec1	equ	0xFE5
 40047                           plusw1	equ	0xFE3
 40048                           fsr1h	equ	0xFE2
 40049                           fsr1l	equ	0xFE1
 40050                           indf2	equ	0xFDF
 40051                           postinc2	equ	0xFDE
 40052                           postdec2	equ	0xFDD
 40053                           plusw2	equ	0xFDB
 40054                           fsr2h	equ	0xFDA
 40055                           fsr2l	equ	0xFD9
 40056                           status	equ	0xFD8
 40057                           
 40058 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 40059 ;; Defined at:
 40060 ;;		line 73 in file "app_device_custom_hid.c"
 40061 ;; Parameters:    Size  Location     Type
 40062 ;;		None
 40063 ;; Auto vars:     Size  Location     Type
 40064 ;;  idx             1    0        unsigned char 
 40065 ;; Return value:  Size  Location     Type
 40066 ;;                  1    wreg      void 
 40067 ;; Registers used:
 40068 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40069 ;; Tracked objects:
 40070 ;;		On entry : 0/0
 40071 ;;		On exit  : 0/0
 40072 ;;		Unchanged: 0/0
 40073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40078 ;;Total ram usage:        0 bytes
 40079 ;; Hardware stack levels used:    1
 40080 ;; Hardware stack levels required when called:   17
 40081 ;; This function calls:
 40082 ;;		_USBTransferOnePacket
 40083 ;;		_api_parse
 40084 ;;		_api_prepare
 40085 ;; This function is called by:
 40086 ;;		_main
 40087 ;; This function uses a non-reentrant model
 40088 ;;
 40089                           
 40090                           	psect	text157
 40091  013656                     __ptext157:
 40092                           	opt stack 0
 40093  013656                     _APP_DeviceCustomHIDTasks:
 40094                           	opt stack 13
 40095                           
 40096                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 40097                           
 40098                           ;incstack = 0
 40099  013656  0E20               	movlw	32
 40100  013658  605D               	cpfslt	_USBDeviceState,c	;volatile
 40101  01365A  D001               	goto	l944
 40102  01365C  0012               	return	
 40103  01365E                     l944:
 40104                           
 40105                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 40106  01365E  B265               	btfsc	3941,1,c	;volatile
 40107  013660  0012               	return	
 40108                           
 40109                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 40110                           
 40111                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 40112  013662  0101               	movlb	1	; () banked
 40113  013664  513B               	movf	_USBOutHandle& (0+255),w,b
 40114  013666  113C               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 40115  013668  B4D8               	btfsc	status,2,c
 40116  01366A  D006               	goto	u17830
 40117                           
 40118                           ; BSR set to: 1
 40119  01366C  C13B  FFD9         	movff	_USBOutHandle,fsr2l
 40120  013670  C13C  FFDA         	movff	_USBOutHandle+1,fsr2h
 40121  013674  BEDF               	btfsc	indf2,7,c
 40122  013676  0012               	return	
 40123  013678                     u17830:
 40124                           
 40125                           ; BSR set to: 1
 40126                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 40127                           
 40128                           ; BSR set to: 1
 40129  013678  5139               	movf	_USBInHandle& (0+255),w,b
 40130  01367A  113A               	iorwf	(_USBInHandle+1)& (0+255),w,b
 40131  01367C  B4D8               	btfsc	status,2,c
 40132  01367E  D006               	goto	u17850
 40133                           
 40134                           ; BSR set to: 1
 40135  013680  C139  FFD9         	movff	_USBInHandle,fsr2l
 40136  013684  C13A  FFDA         	movff	_USBInHandle+1,fsr2h
 40137  013688  BEDF               	btfsc	indf2,7,c
 40138  01368A  D01B               	goto	l950
 40139  01368C                     u17850:
 40140                           
 40141                           ; BSR set to: 1
 40142                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 40143                           
 40144                           ; BSR set to: 1
 40145  01368C  0E80               	movlw	low _ReceivedDataBuffer
 40146  01368E  0100               	movlb	0	; () banked
 40147  013690  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 40148  013692  0E03               	movlw	high _ReceivedDataBuffer
 40149  013694  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 40150  013696  0E40               	movlw	low _ToSendDataBuffer
 40151  013698  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 40152  01369A  0E03               	movlw	high _ToSendDataBuffer
 40153  01369C  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 40154  01369E  EC0E  F094         	call	_api_prepare	;wreg free
 40155                           
 40156                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 40157  0136A2  0E01               	movlw	1
 40158  0136A4  0100               	movlb	0	; () banked
 40159  0136A6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40160  0136A8  0E40               	movlw	low _ToSendDataBuffer
 40161  0136AA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40162  0136AC  0E03               	movlw	high _ToSendDataBuffer
 40163  0136AE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40164  0136B0  0E40               	movlw	64
 40165  0136B2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40166  0136B4  0E01               	movlw	1
 40167  0136B6  EC3D  F08A         	call	_USBTransferOnePacket
 40168  0136BA  C060  F139         	movff	?_USBTransferOnePacket,_USBInHandle
 40169  0136BE  C061  F13A         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 40170  0136C2                     l950:
 40171                           
 40172                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 40173  0136C2  0E80               	movlw	low _ReceivedDataBuffer
 40174  0136C4  0100               	movlb	0	; () banked
 40175  0136C6  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 40176  0136C8  0E03               	movlw	high _ReceivedDataBuffer
 40177  0136CA  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 40178  0136CC  0E40               	movlw	64
 40179  0136CE  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 40180  0136D0  0E40               	movlw	low _ToSendDataBuffer
 40181  0136D2  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 40182  0136D4  0E03               	movlw	high _ToSendDataBuffer
 40183  0136D6  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 40184  0136D8  EC58  F085         	call	_api_parse	;wreg free
 40185                           
 40186                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 40187  0136DC  0E00               	movlw	0
 40188  0136DE  0100               	movlb	0	; () banked
 40189  0136E0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40190  0136E2  0E80               	movlw	low _ReceivedDataBuffer
 40191  0136E4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40192  0136E6  0E03               	movlw	high _ReceivedDataBuffer
 40193  0136E8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40194  0136EA  0E40               	movlw	64
 40195  0136EC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40196  0136EE  0E01               	movlw	1
 40197  0136F0  EC3D  F08A         	call	_USBTransferOnePacket
 40198  0136F4  C060  F13B         	movff	?_USBTransferOnePacket,_USBOutHandle
 40199  0136F8  C061  F13C         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 40200  0136FC  0012               	return	
 40201  0136FE                     __end_of_APP_DeviceCustomHIDTasks:
 40202                           	opt stack 0
 40203                           tosu	equ	0xFFF
 40204                           tosh	equ	0xFFE
 40205                           tosl	equ	0xFFD
 40206                           pclath	equ	0xFFA
 40207                           tblptru	equ	0xFF8
 40208                           tblptrh	equ	0xFF7
 40209                           tblptrl	equ	0xFF6
 40210                           tablat	equ	0xFF5
 40211                           prodh	equ	0xFF4
 40212                           prodl	equ	0xFF3
 40213                           intcon	equ	0xFF2
 40214                           postinc0	equ	0xFEE
 40215                           wreg	equ	0xFE8
 40216                           indf1	equ	0xFE7
 40217                           postinc1	equ	0xFE6
 40218                           postdec1	equ	0xFE5
 40219                           plusw1	equ	0xFE3
 40220                           fsr1h	equ	0xFE2
 40221                           fsr1l	equ	0xFE1
 40222                           indf2	equ	0xFDF
 40223                           postinc2	equ	0xFDE
 40224                           postdec2	equ	0xFDD
 40225                           plusw2	equ	0xFDB
 40226                           fsr2h	equ	0xFDA
 40227                           fsr2l	equ	0xFD9
 40228                           status	equ	0xFD8
 40229                           
 40230 ;; *************** function _api_prepare *****************
 40231 ;; Defined at:
 40232 ;;		line 38 in file "api.c"
 40233 ;; Parameters:    Size  Location     Type
 40234 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 40235 ;;		 -> ReceivedDataBuffer(64), 
 40236 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 40237 ;;		 -> ToSendDataBuffer(64), 
 40238 ;; Auto vars:     Size  Location     Type
 40239 ;;  command         1   20[BANK0 ] enum E6715
 40240 ;; Return value:  Size  Location     Type
 40241 ;;                  1    wreg      void 
 40242 ;; Registers used:
 40243 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40244 ;; Tracked objects:
 40245 ;;		On entry : 0/0
 40246 ;;		On exit  : 0/0
 40247 ;;		Unchanged: 0/0
 40248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40252 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40253 ;;Total ram usage:        5 bytes
 40254 ;; Hardware stack levels used:    1
 40255 ;; Hardware stack levels required when called:   12
 40256 ;; This function calls:
 40257 ;;		__fill_buffer_get_display
 40258 ;;		__fill_buffer_get_mode_details
 40259 ;;		__fill_buffer_get_status
 40260 ;;		_memcpy
 40261 ;; This function is called by:
 40262 ;;		_APP_DeviceCustomHIDTasks
 40263 ;; This function uses a non-reentrant model
 40264 ;;
 40265                           
 40266                           	psect	text158
 40267  01281C                     __ptext158:
 40268                           	opt stack 0
 40269  01281C                     _api_prepare:
 40270                           	opt stack 17
 40271                           
 40272                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 40273                           
 40274                           ;incstack = 0
 40275  01281C  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 40276  012820  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 40277  012824  50DF               	movf	indf2,w,c
 40278  012826  0100               	movlb	0	; () banked
 40279  012828  6F74               	movwf	api_prepare@command& (0+255),b
 40280                           
 40281                           ; BSR set to: 0
 40282                           ;api.c: 42: if(command>0x7F)
 40283  01282A  0E7F               	movlw	127
 40284  01282C  6574               	cpfsgt	api_prepare@command& (0+255),b
 40285  01282E  D051               	goto	l2269
 40286                           
 40287                           ; BSR set to: 0
 40288                           ;api.c: 49: outBuffer[0] = 0x99;
 40289                           
 40290                           ; BSR set to: 0
 40291                           
 40292                           ;api.c: 45: {;api.c: 48: default:
 40293                           
 40294                           ; BSR set to: 0
 40295                           ;api.c: 43: {;api.c: 44: switch(command)
 40296  012830  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40297  012834  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40298  012838  0E99               	movlw	153
 40299  01283A  6EDF               	movwf	indf2,c
 40300                           
 40301                           ; BSR set to: 0
 40302                           ;api.c: 50: outBuffer[1] = 0x99;
 40303  01283C  EE20 F001          	lfsr	2,1
 40304  012840  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40305  012842  26D9               	addwf	fsr2l,f,c
 40306  012844  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40307  012846  22DA               	addwfc	fsr2h,f,c
 40308  012848  0E99               	movlw	153
 40309  01284A  6EDF               	movwf	indf2,c
 40310                           
 40311                           ;api.c: 51: }
 40312  01284C  0012               	return	
 40313  01284E                     
 40314                           ; BSR set to: 0
 40315                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 40316                           
 40317                           ; BSR set to: 0
 40318  01284E  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 40319  012852  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 40320  012856  EC4E  F073         	call	__fill_buffer_get_status	;wreg free
 40321                           
 40322                           ;api.c: 65: break;
 40323  01285A  0012               	return	
 40324  01285C                     
 40325                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 40326  01285C  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40327  012860  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40328  012864  0E00               	movlw	0
 40329  012866  0100               	movlb	0	; () banked
 40330  012868  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40331  01286A  EC6F  F098         	call	__fill_buffer_get_display	;wreg free
 40332                           
 40333                           ;api.c: 70: break;
 40334  01286E  0012               	return	
 40335  012870                     
 40336                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 40337  012870  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40338  012874  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40339  012878  0E01               	movlw	1
 40340  01287A  0100               	movlb	0	; () banked
 40341  01287C  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40342  01287E  EC6F  F098         	call	__fill_buffer_get_display	;wreg free
 40343                           
 40344                           ;api.c: 75: break;
 40345  012882  0012               	return	
 40346  012884                     
 40347                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 40348  012884  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 40349  012888  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 40350  01288C  ECF3  F078         	call	__fill_buffer_get_mode_details	;wreg free
 40351                           
 40352                           ;api.c: 80: break;
 40353  012890  0012               	return	
 40354  012892                     
 40355                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 40356  012892  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 40357  012896  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 40358  01289A  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 40359  01289E  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 40360  0128A2  0E00               	movlw	0
 40361  0128A4  0100               	movlb	0	; () banked
 40362  0128A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40363  0128A8  0E40               	movlw	64
 40364  0128AA  6F64               	movwf	memcpy@n& (0+255),b
 40365  0128AC  ECCA  F0A5         	call	_memcpy	;wreg free
 40366                           
 40367                           ;api.c: 85: break;
 40368  0128B0  0012               	return	
 40369  0128B2                     
 40370                           ;api.c: 88: outBuffer[0] = 0x99;
 40371  0128B2  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40372  0128B6  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40373  0128BA  0E99               	movlw	153
 40374  0128BC  6EDF               	movwf	indf2,c
 40375                           
 40376                           ;api.c: 89: outBuffer[1] = 0x99;
 40377  0128BE  0100               	movlb	0	; () banked
 40378  0128C0  EE20 F001          	lfsr	2,1
 40379  0128C4  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40380  0128C6  26D9               	addwf	fsr2l,f,c
 40381  0128C8  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40382  0128CA  22DA               	addwfc	fsr2h,f,c
 40383  0128CC  0E99               	movlw	153
 40384  0128CE  6EDF               	movwf	indf2,c
 40385                           
 40386                           ;api.c: 90: }
 40387  0128D0  0012               	return	
 40388  0128D2                     l2269:
 40389                           
 40390                           ; BSR set to: 0
 40391                           
 40392                           ; BSR set to: 0
 40393  0128D2  5174               	movf	api_prepare@command& (0+255),w,b
 40394                           
 40395                           ; Switch size 1, requested type "space"
 40396                           ; Number of cases is 6, Range of values is 0 to 32
 40397                           ; switch strategies available:
 40398                           ; Name         Instructions Cycles
 40399                           ; simple_byte           19    10 (average)
 40400                           ;	Chosen strategy is simple_byte
 40401  0128D4  0A00               	xorlw	0	; case 0
 40402  0128D6  B4D8               	btfsc	status,2,c
 40403  0128D8  0012               	return	
 40404  0128DA  0A10               	xorlw	16	; case 16
 40405  0128DC  B4D8               	btfsc	status,2,c
 40406  0128DE  D7B7               	goto	l2272
 40407  0128E0  0A01               	xorlw	1	; case 17
 40408  0128E2  B4D8               	btfsc	status,2,c
 40409  0128E4  D7BB               	goto	l2273
 40410  0128E6  0A03               	xorlw	3	; case 18
 40411  0128E8  B4D8               	btfsc	status,2,c
 40412  0128EA  D7C2               	goto	l2274
 40413  0128EC  0A01               	xorlw	1	; case 19
 40414  0128EE  B4D8               	btfsc	status,2,c
 40415  0128F0  D7C9               	goto	l2275
 40416  0128F2  0A33               	xorlw	51	; case 32
 40417  0128F4  B4D8               	btfsc	status,2,c
 40418  0128F6  D7CD               	goto	l2276
 40419  0128F8  D7DC               	goto	l2277
 40420  0128FA                     __end_of_api_prepare:
 40421                           	opt stack 0
 40422                           tosu	equ	0xFFF
 40423                           tosh	equ	0xFFE
 40424                           tosl	equ	0xFFD
 40425                           pclath	equ	0xFFA
 40426                           tblptru	equ	0xFF8
 40427                           tblptrh	equ	0xFF7
 40428                           tblptrl	equ	0xFF6
 40429                           tablat	equ	0xFF5
 40430                           prodh	equ	0xFF4
 40431                           prodl	equ	0xFF3
 40432                           intcon	equ	0xFF2
 40433                           postinc0	equ	0xFEE
 40434                           wreg	equ	0xFE8
 40435                           indf1	equ	0xFE7
 40436                           postinc1	equ	0xFE6
 40437                           postdec1	equ	0xFE5
 40438                           plusw1	equ	0xFE3
 40439                           fsr1h	equ	0xFE2
 40440                           fsr1l	equ	0xFE1
 40441                           indf2	equ	0xFDF
 40442                           postinc2	equ	0xFDE
 40443                           postdec2	equ	0xFDD
 40444                           plusw2	equ	0xFDB
 40445                           fsr2h	equ	0xFDA
 40446                           fsr2l	equ	0xFD9
 40447                           status	equ	0xFD8
 40448                           
 40449 ;; *************** function __fill_buffer_get_status *****************
 40450 ;; Defined at:
 40451 ;;		line 171 in file "api.c"
 40452 ;; Parameters:    Size  Location     Type
 40453 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 40454 ;;		 -> ToSendDataBuffer(64), 
 40455 ;; Auto vars:     Size  Location     Type
 40456 ;;		None
 40457 ;; Return value:  Size  Location     Type
 40458 ;;                  1    wreg      void 
 40459 ;; Registers used:
 40460 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40461 ;; Tracked objects:
 40462 ;;		On entry : 0/0
 40463 ;;		On exit  : 0/0
 40464 ;;		Unchanged: 0/0
 40465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40469 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40470 ;;Total ram usage:        2 bytes
 40471 ;; Hardware stack levels used:    1
 40472 ;; Hardware stack levels required when called:   11
 40473 ;; This function calls:
 40474 ;;		_memcpy
 40475 ;; This function is called by:
 40476 ;;		_api_prepare
 40477 ;; This function uses a non-reentrant model
 40478 ;;
 40479                           
 40480                           	psect	text159
 40481  00E69C                     __ptext159:
 40482                           	opt stack 0
 40483  00E69C                     __fill_buffer_get_status:
 40484                           	opt stack 17
 40485                           
 40486                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 40487                           
 40488                           ;incstack = 0
 40489  00E69C  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 40490  00E6A0  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 40491  00E6A4  0E10               	movlw	16
 40492  00E6A6  6EDF               	movwf	indf2,c
 40493                           
 40494                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 40495  00E6A8  0100               	movlb	0	; () banked
 40496  00E6AA  EE20 F001          	lfsr	2,1
 40497  00E6AE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40498  00E6B0  26D9               	addwf	fsr2l,f,c
 40499  00E6B2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40500  00E6B4  22DA               	addwfc	fsr2h,f,c
 40501  00E6B6  0EBC               	movlw	188
 40502  00E6B8  6EDF               	movwf	indf2,c
 40503                           
 40504                           ; BSR set to: 0
 40505                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 40506  00E6BA  EE20 F002          	lfsr	2,2
 40507  00E6BE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40508  00E6C0  26D9               	addwf	fsr2l,f,c
 40509  00E6C2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40510  00E6C4  22DA               	addwfc	fsr2h,f,c
 40511  00E6C6  0E26               	movlw	38
 40512  00E6C8  6EDF               	movwf	indf2,c
 40513                           
 40514                           ; BSR set to: 0
 40515                           ;api.c: 181: outBuffer[3] = 0x00;
 40516  00E6CA  EE20 F003          	lfsr	2,3
 40517  00E6CE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40518  00E6D0  26D9               	addwf	fsr2l,f,c
 40519  00E6D2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40520  00E6D4  22DA               	addwfc	fsr2h,f,c
 40521  00E6D6  0E00               	movlw	0
 40522  00E6D8  6EDF               	movwf	indf2,c
 40523                           
 40524                           ; BSR set to: 0
 40525                           ;api.c: 182: outBuffer[4] = 0x06;
 40526  00E6DA  EE20 F004          	lfsr	2,4
 40527  00E6DE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40528  00E6E0  26D9               	addwf	fsr2l,f,c
 40529  00E6E2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40530  00E6E4  22DA               	addwfc	fsr2h,f,c
 40531  00E6E6  0E06               	movlw	6
 40532  00E6E8  6EDF               	movwf	indf2,c
 40533                           
 40534                           ; BSR set to: 0
 40535                           ;api.c: 183: outBuffer[5] = 0x05;
 40536  00E6EA  EE20 F005          	lfsr	2,5
 40537  00E6EE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40538  00E6F0  26D9               	addwf	fsr2l,f,c
 40539  00E6F2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40540  00E6F4  22DA               	addwfc	fsr2h,f,c
 40541  00E6F6  0E05               	movlw	5
 40542  00E6F8  6EDF               	movwf	indf2,c
 40543                           
 40544                           ; BSR set to: 0
 40545                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 40546  00E6FA  EE20 F006          	lfsr	2,6
 40547  00E6FE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40548  00E700  26D9               	addwf	fsr2l,f,c
 40549  00E702  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40550  00E704  22DA               	addwfc	fsr2h,f,c
 40551  00E706  C165  FFDF         	movff	_os,indf2	;volatile
 40552                           
 40553                           ; BSR set to: 0
 40554                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 40555  00E70A  EE20 F007          	lfsr	2,7
 40556  00E70E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40557  00E710  26D9               	addwf	fsr2l,f,c
 40558  00E712  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40559  00E714  22DA               	addwfc	fsr2h,f,c
 40560  00E716  C166  FFDF         	movff	_os+1,indf2	;volatile
 40561                           
 40562                           ; BSR set to: 0
 40563                           ;api.c: 188: outBuffer[8] = os.done;
 40564  00E71A  EE20 F008          	lfsr	2,8
 40565  00E71E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40566  00E720  26D9               	addwf	fsr2l,f,c
 40567  00E722  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40568  00E724  22DA               	addwfc	fsr2h,f,c
 40569  00E726  C167  FFDF         	movff	_os+2,indf2	;volatile
 40570                           
 40571                           ; BSR set to: 0
 40572                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 40573  00E72A  EE20 F009          	lfsr	2,9
 40574  00E72E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40575  00E730  26D9               	addwf	fsr2l,f,c
 40576  00E732  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40577  00E734  22DA               	addwfc	fsr2h,f,c
 40578  00E736  C168  FFDF         	movff	_os+3,indf2	;volatile
 40579                           
 40580                           ; BSR set to: 0
 40581                           ;api.c: 190: outBuffer[10] = os.button1;
 40582  00E73A  EE20 F00A          	lfsr	2,10
 40583  00E73E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40584  00E740  26D9               	addwf	fsr2l,f,c
 40585  00E742  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40586  00E744  22DA               	addwfc	fsr2h,f,c
 40587  00E746  C169  FFDF         	movff	_os+4,indf2	;volatile
 40588                           
 40589                           ; BSR set to: 0
 40590                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 40591  00E74A  EE20 F00B          	lfsr	2,11
 40592  00E74E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40593  00E750  26D9               	addwf	fsr2l,f,c
 40594  00E752  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40595  00E754  22DA               	addwfc	fsr2h,f,c
 40596  00E756  C16A  FFDF         	movff	_os+5,indf2	;volatile
 40597                           
 40598                           ; BSR set to: 0
 40599                           ;api.c: 192: outBuffer[12] = os.button2;
 40600  00E75A  EE20 F00C          	lfsr	2,12
 40601  00E75E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40602  00E760  26D9               	addwf	fsr2l,f,c
 40603  00E762  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40604  00E764  22DA               	addwfc	fsr2h,f,c
 40605  00E766  C16B  FFDF         	movff	_os+6,indf2	;volatile
 40606                           
 40607                           ; BSR set to: 0
 40608                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 40609  00E76A  0E0D               	movlw	13
 40610  00E76C  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40611  00E76E  6F60               	movwf	memcpy@d1& (0+255),b
 40612  00E770  0E00               	movlw	0
 40613  00E772  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40614  00E774  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40615  00E776  0E6C               	movlw	low (_os+7)
 40616  00E778  6F62               	movwf	memcpy@s1& (0+255),b
 40617  00E77A  0E01               	movlw	high (_os+7)
 40618  00E77C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40619  00E77E  0E00               	movlw	0
 40620  00E780  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40621  00E782  0E04               	movlw	4
 40622  00E784  6F64               	movwf	memcpy@n& (0+255),b
 40623  00E786  ECCA  F0A5         	call	_memcpy	;wreg free
 40624                           
 40625                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 40626  00E78A  0E11               	movlw	17
 40627  00E78C  0100               	movlb	0	; () banked
 40628  00E78E  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40629  00E790  6F60               	movwf	memcpy@d1& (0+255),b
 40630  00E792  0E00               	movlw	0
 40631  00E794  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40632  00E796  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40633  00E798  0E72               	movlw	low (_os+13)
 40634  00E79A  6F62               	movwf	memcpy@s1& (0+255),b
 40635  00E79C  0E01               	movlw	high (_os+13)
 40636  00E79E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40637  00E7A0  0E00               	movlw	0
 40638  00E7A2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40639  00E7A4  0E04               	movlw	4
 40640  00E7A6  6F64               	movwf	memcpy@n& (0+255),b
 40641  00E7A8  ECCA  F0A5         	call	_memcpy	;wreg free
 40642                           
 40643                           ;api.c: 203: outBuffer[21] = os.displayState;
 40644  00E7AC  0100               	movlb	0	; () banked
 40645  00E7AE  EE20 F015          	lfsr	2,21
 40646  00E7B2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40647  00E7B4  26D9               	addwf	fsr2l,f,c
 40648  00E7B6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40649  00E7B8  22DA               	addwfc	fsr2h,f,c
 40650  00E7BA  C174  FFDF         	movff	_os+15,indf2	;volatile
 40651                           
 40652                           ; BSR set to: 0
 40653                           ;api.c: 204: outBuffer[22] = os.beep_count;
 40654  00E7BE  EE20 F016          	lfsr	2,22
 40655  00E7C2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40656  00E7C4  26D9               	addwf	fsr2l,f,c
 40657  00E7C6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40658  00E7C8  22DA               	addwfc	fsr2h,f,c
 40659  00E7CA  C18C  FFDF         	movff	_os+39,indf2	;volatile
 40660                           
 40661                           ; BSR set to: 0
 40662                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 40663  00E7CE  EE20 F017          	lfsr	2,23
 40664  00E7D2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40665  00E7D4  26D9               	addwf	fsr2l,f,c
 40666  00E7D6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40667  00E7D8  22DA               	addwfc	fsr2h,f,c
 40668  00E7DA  C18D  FFDF         	movff	_os+40,indf2	;volatile
 40669                           
 40670                           ; BSR set to: 0
 40671                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 40672  00E7DE  EE20 F018          	lfsr	2,24
 40673  00E7E2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40674  00E7E4  26D9               	addwf	fsr2l,f,c
 40675  00E7E6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40676  00E7E8  22DA               	addwfc	fsr2h,f,c
 40677  00E7EA  0101               	movlb	1	; () banked
 40678  00E7EC  518E               	movf	(_os+41)& (0+255),w,b	;volatile
 40679  00E7EE  6EDF               	movwf	indf2,c
 40680                           
 40681                           ; BSR set to: 1
 40682                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 40683  00E7F0  0100               	movlb	0	; () banked
 40684  00E7F2  EE20 F019          	lfsr	2,25
 40685  00E7F6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40686  00E7F8  26D9               	addwf	fsr2l,f,c
 40687  00E7FA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40688  00E7FC  22DA               	addwfc	fsr2h,f,c
 40689  00E7FE  C18F  FFDF         	movff	_os+42,indf2	;volatile
 40690                           
 40691                           ; BSR set to: 0
 40692                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 40693  00E802  EE20 F01A          	lfsr	2,26
 40694  00E806  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40695  00E808  26D9               	addwf	fsr2l,f,c
 40696  00E80A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40697  00E80C  22DA               	addwfc	fsr2h,f,c
 40698  00E80E  0101               	movlb	1	; () banked
 40699  00E810  5190               	movf	(_os+43)& (0+255),w,b	;volatile
 40700  00E812  6EDF               	movwf	indf2,c
 40701                           
 40702                           ; BSR set to: 1
 40703                           ;api.c: 209: outBuffer[27] = os.fan_on;
 40704  00E814  0100               	movlb	0	; () banked
 40705  00E816  EE20 F01B          	lfsr	2,27
 40706  00E81A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40707  00E81C  26D9               	addwf	fsr2l,f,c
 40708  00E81E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40709  00E820  22DA               	addwfc	fsr2h,f,c
 40710  00E822  C194  FFDF         	movff	_os+47,indf2	;volatile
 40711                           
 40712                           ; BSR set to: 0
 40713                           ;api.c: 210: outBuffer[28] = os.brake_on;
 40714  00E826  EE20 F01C          	lfsr	2,28
 40715  00E82A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40716  00E82C  26D9               	addwf	fsr2l,f,c
 40717  00E82E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40718  00E830  22DA               	addwfc	fsr2h,f,c
 40719  00E832  C195  FFDF         	movff	_os+48,indf2	;volatile
 40720                           
 40721                           ; BSR set to: 0
 40722                           ;api.c: 211: outBuffer[29] = os.busy;
 40723  00E836  EE20 F01D          	lfsr	2,29
 40724  00E83A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40725  00E83C  26D9               	addwf	fsr2l,f,c
 40726  00E83E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40727  00E840  22DA               	addwfc	fsr2h,f,c
 40728  00E842  C175  FFDF         	movff	_os+16,indf2	;volatile
 40729                           
 40730                           ; BSR set to: 0
 40731                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 40732  00E846  EE20 F01E          	lfsr	2,30
 40733  00E84A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40734  00E84C  26D9               	addwf	fsr2l,f,c
 40735  00E84E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40736  00E850  22DA               	addwfc	fsr2h,f,c
 40737  00E852  C189  FFDF         	movff	_os+36,indf2	;volatile
 40738                           
 40739                           ; BSR set to: 0
 40740                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 40741  00E856  EE20 F01F          	lfsr	2,31
 40742  00E85A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40743  00E85C  26D9               	addwf	fsr2l,f,c
 40744  00E85E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40745  00E860  22DA               	addwfc	fsr2h,f,c
 40746  00E862  0101               	movlb	1	; () banked
 40747  00E864  518A               	movf	(_os+37)& (0+255),w,b	;volatile
 40748  00E866  6EDF               	movwf	indf2,c
 40749                           
 40750                           ; BSR set to: 1
 40751                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 40752  00E868  0100               	movlb	0	; () banked
 40753  00E86A  EE20 F020          	lfsr	2,32
 40754  00E86E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40755  00E870  26D9               	addwf	fsr2l,f,c
 40756  00E872  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40757  00E874  22DA               	addwfc	fsr2h,f,c
 40758  00E876  C170  FFDF         	movff	_os+11,indf2	;volatile
 40759                           
 40760                           ; BSR set to: 0
 40761                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 40762  00E87A  EE20 F021          	lfsr	2,33
 40763  00E87E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40764  00E880  26D9               	addwf	fsr2l,f,c
 40765  00E882  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40766  00E884  22DA               	addwfc	fsr2h,f,c
 40767  00E886  0101               	movlb	1	; () banked
 40768  00E888  5171               	movf	(_os+12)& (0+255),w,b	;volatile
 40769  00E88A  6EDF               	movwf	indf2,c
 40770                           
 40771                           ; BSR set to: 1
 40772                           ;api.c: 218: outBuffer[34] = config.position_display_180;
 40773  00E88C  0100               	movlb	0	; () banked
 40774  00E88E  EE20 F022          	lfsr	2,34
 40775  00E892  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40776  00E894  26D9               	addwf	fsr2l,f,c
 40777  00E896  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40778  00E898  22DA               	addwfc	fsr2h,f,c
 40779  00E89A  C1BE  FFDF         	movff	_config+40,indf2
 40780                           
 40781                           ; BSR set to: 0
 40782                           ;api.c: 232: memcpy(&outBuffer[42], &config, 22);
 40783  00E89E  0E2A               	movlw	42
 40784  00E8A0  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40785  00E8A2  6F60               	movwf	memcpy@d1& (0+255),b
 40786  00E8A4  0E00               	movlw	0
 40787  00E8A6  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40788  00E8A8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40789  00E8AA  0E96               	movlw	low _config
 40790  00E8AC  6F62               	movwf	memcpy@s1& (0+255),b
 40791  00E8AE  0E01               	movlw	high _config
 40792  00E8B0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40793  00E8B2  0E00               	movlw	0
 40794  00E8B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40795  00E8B6  0E16               	movlw	22
 40796  00E8B8  6F64               	movwf	memcpy@n& (0+255),b
 40797  00E8BA  ECCA  F0A5         	call	_memcpy	;wreg free
 40798  00E8BE  0012               	return		;funcret
 40799  00E8C0                     __end_of__fill_buffer_get_status:
 40800                           	opt stack 0
 40801                           tosu	equ	0xFFF
 40802                           tosh	equ	0xFFE
 40803                           tosl	equ	0xFFD
 40804                           pclath	equ	0xFFA
 40805                           tblptru	equ	0xFF8
 40806                           tblptrh	equ	0xFF7
 40807                           tblptrl	equ	0xFF6
 40808                           tablat	equ	0xFF5
 40809                           prodh	equ	0xFF4
 40810                           prodl	equ	0xFF3
 40811                           intcon	equ	0xFF2
 40812                           postinc0	equ	0xFEE
 40813                           wreg	equ	0xFE8
 40814                           indf1	equ	0xFE7
 40815                           postinc1	equ	0xFE6
 40816                           postdec1	equ	0xFE5
 40817                           plusw1	equ	0xFE3
 40818                           fsr1h	equ	0xFE2
 40819                           fsr1l	equ	0xFE1
 40820                           indf2	equ	0xFDF
 40821                           postinc2	equ	0xFDE
 40822                           postdec2	equ	0xFDD
 40823                           plusw2	equ	0xFDB
 40824                           fsr2h	equ	0xFDA
 40825                           fsr2l	equ	0xFD9
 40826                           status	equ	0xFD8
 40827                           
 40828 ;; *************** function _memcpy *****************
 40829 ;; Defined at:
 40830 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 40831 ;; Parameters:    Size  Location     Type
 40832 ;;  d1              2    0[BANK0 ] PTR void 
 40833 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 40834 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 40835 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 40836 ;;  s1              2    2[BANK0 ] PTR const void 
 40837 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 40838 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 40839 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 40840 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 40841 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 40842 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.current_position_in_degrees(2), os.current_position_in_st
      +eps(4), 
 40843 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 40844 ;;  n               2    4[BANK0 ] unsigned int 
 40845 ;; Auto vars:     Size  Location     Type
 40846 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 40847 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 40848 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 40849 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 40850 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 40851 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 40852 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.current_position_in_degrees(2), os.current_position_in_st
      +eps(4), 
 40853 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 40854 ;;  d               2    6[BANK0 ] PTR unsigned char 
 40855 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 40856 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 40857 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 40858 ;;  tmp             1   10[BANK0 ] unsigned char 
 40859 ;; Return value:  Size  Location     Type
 40860 ;;                  2    0[BANK0 ] PTR void 
 40861 ;; Registers used:
 40862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 40863 ;; Tracked objects:
 40864 ;;		On entry : 0/0
 40865 ;;		On exit  : 0/0
 40866 ;;		Unchanged: 0/0
 40867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40868 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40869 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40871 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40872 ;;Total ram usage:       11 bytes
 40873 ;; Hardware stack levels used:    1
 40874 ;; Hardware stack levels required when called:   10
 40875 ;; This function calls:
 40876 ;;		Nothing
 40877 ;; This function is called by:
 40878 ;;		_MSDProcessCommandMediaPresent
 40879 ;;		_i2c_eeprom_recover_position
 40880 ;;		__display_start
 40881 ;;		_display_prepare
 40882 ;;		__flash_set_page_size
 40883 ;;		_fat_create_file
 40884 ;;		_api_prepare
 40885 ;;		__fill_buffer_get_status
 40886 ;; This function uses a non-reentrant model
 40887 ;;
 40888                           
 40889                           	psect	text160
 40890  014B94                     __ptext160:
 40891                           	opt stack 0
 40892  014B94                     _memcpy:
 40893                           	opt stack 18
 40894                           
 40895                           ;incstack = 0
 40896  014B94  C062  F068         	movff	memcpy@s1,memcpy@s
 40897  014B98  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 40898  014B9C  C060  F066         	movff	memcpy@d1,memcpy@d
 40899  014BA0  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 40900  014BA4  D01D               	goto	l3822
 40901  014BA6                     l13086:
 40902  014BA6  C068  FFF6         	movff	memcpy@s,tblptrl
 40903  014BAA  C069  FFF7         	movff	memcpy@s+1,tblptrh
 40904  014BAE  0E00               	movlw	low (__mediumconst shr (0+16))
 40905  014BB0  6EF8               	movwf	tblptru,c
 40906  014BB2  0E0E               	movlw	(high __ramtop+-1)
 40907  014BB4  64F7               	cpfsgt	tblptrh,c
 40908  014BB6  D003               	bra	u11177
 40909  014BB8  0008               	tblrd		*
 40910  014BBA  50F5               	movf	tablat,w,c
 40911  014BBC  D005               	bra	u11170
 40912  014BBE                     u11177:
 40913  014BBE  CFF6 FFE9          	movff	tblptrl,fsr0l
 40914  014BC2  CFF7 FFEA          	movff	tblptrh,fsr0h
 40915  014BC6  50EF               	movf	indf0,w,c
 40916  014BC8                     u11170:
 40917  014BC8  0100               	movlb	0	; () banked
 40918  014BCA  6F6A               	movwf	memcpy@tmp& (0+255),b
 40919                           
 40920                           ; BSR set to: 0
 40921  014BCC  4B68               	infsnz	memcpy@s& (0+255),f,b
 40922  014BCE  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 40923                           
 40924                           ; BSR set to: 0
 40925  014BD0  C066  FFD9         	movff	memcpy@d,fsr2l
 40926  014BD4  C067  FFDA         	movff	memcpy@d+1,fsr2h
 40927  014BD8  C06A  FFDF         	movff	memcpy@tmp,indf2
 40928                           
 40929                           ; BSR set to: 0
 40930  014BDC  4B66               	infsnz	memcpy@d& (0+255),f,b
 40931  014BDE  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 40932  014BE0                     l3822:
 40933                           
 40934                           ; BSR set to: 0
 40935  014BE0  0100               	movlb	0	; () banked
 40936  014BE2  0764               	decf	memcpy@n& (0+255),f,b
 40937  014BE4  A0D8               	btfss	status,0,c
 40938  014BE6  0765               	decf	(memcpy@n+1)& (0+255),f,b
 40939  014BE8  2964               	incf	memcpy@n& (0+255),w,b
 40940  014BEA  E1DD               	bnz	l13086
 40941  014BEC  2965               	incf	(memcpy@n+1)& (0+255),w,b
 40942  014BEE  B4D8               	btfsc	status,2,c
 40943  014BF0  0012               	return	
 40944  014BF2  D7D9               	goto	l3823
 40945  014BF4                     __end_of_memcpy:
 40946                           	opt stack 0
 40947                           tosu	equ	0xFFF
 40948                           tosh	equ	0xFFE
 40949                           tosl	equ	0xFFD
 40950                           pclath	equ	0xFFA
 40951                           tblptru	equ	0xFF8
 40952                           tblptrh	equ	0xFF7
 40953                           tblptrl	equ	0xFF6
 40954                           tablat	equ	0xFF5
 40955                           prodh	equ	0xFF4
 40956                           prodl	equ	0xFF3
 40957                           intcon	equ	0xFF2
 40958                           indf0	equ	0xFEF
 40959                           postinc0	equ	0xFEE
 40960                           fsr0h	equ	0xFEA
 40961                           fsr0l	equ	0xFE9
 40962                           wreg	equ	0xFE8
 40963                           indf1	equ	0xFE7
 40964                           postinc1	equ	0xFE6
 40965                           postdec1	equ	0xFE5
 40966                           plusw1	equ	0xFE3
 40967                           fsr1h	equ	0xFE2
 40968                           fsr1l	equ	0xFE1
 40969                           indf2	equ	0xFDF
 40970                           postinc2	equ	0xFDE
 40971                           postdec2	equ	0xFDD
 40972                           plusw2	equ	0xFDB
 40973                           fsr2h	equ	0xFDA
 40974                           fsr2l	equ	0xFD9
 40975                           status	equ	0xFD8
 40976                           
 40977 ;; *************** function __fill_buffer_get_mode_details *****************
 40978 ;; Defined at:
 40979 ;;		line 277 in file "api.c"
 40980 ;; Parameters:    Size  Location     Type
 40981 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 40982 ;;		 -> ToSendDataBuffer(64), 
 40983 ;; Auto vars:     Size  Location     Type
 40984 ;;		None
 40985 ;; Return value:  Size  Location     Type
 40986 ;;                  1    wreg      void 
 40987 ;; Registers used:
 40988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 40989 ;; Tracked objects:
 40990 ;;		On entry : 0/0
 40991 ;;		On exit  : 0/0
 40992 ;;		Unchanged: 0/0
 40993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40997 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40998 ;;Total ram usage:        4 bytes
 40999 ;; Hardware stack levels used:    1
 41000 ;; Hardware stack levels required when called:   10
 41001 ;; This function calls:
 41002 ;;		Nothing
 41003 ;; This function is called by:
 41004 ;;		_api_prepare
 41005 ;; This function uses a non-reentrant model
 41006 ;;
 41007                           
 41008                           	psect	text161
 41009  00F1E6                     __ptext161:
 41010                           	opt stack 0
 41011  00F1E6                     __fill_buffer_get_mode_details:
 41012                           	opt stack 18
 41013                           
 41014                           ;api.c: 280: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 41015                           
 41016                           ; BSR set to: 0
 41017                           ;incstack = 0
 41018  00F1E6  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 41019  00F1EA  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 41020  00F1EE  0E13               	movlw	19
 41021  00F1F0  6EDF               	movwf	indf2,c
 41022                           
 41023                           ;api.c: 283: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41024  00F1F2  0100               	movlb	0	; () banked
 41025  00F1F4  EE20 F001          	lfsr	2,1
 41026  00F1F8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41027  00F1FA  26D9               	addwf	fsr2l,f,c
 41028  00F1FC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41029  00F1FE  22DA               	addwfc	fsr2h,f,c
 41030  00F200  0EBC               	movlw	188
 41031  00F202  6EDF               	movwf	indf2,c
 41032                           
 41033                           ; BSR set to: 0
 41034                           ;api.c: 284: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41035  00F204  EE20 F002          	lfsr	2,2
 41036  00F208  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41037  00F20A  26D9               	addwf	fsr2l,f,c
 41038  00F20C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41039  00F20E  22DA               	addwfc	fsr2h,f,c
 41040  00F210  0E26               	movlw	38
 41041  00F212  6EDF               	movwf	indf2,c
 41042                           
 41043                           ; BSR set to: 0
 41044                           ;api.c: 287: outBuffer[3] = os.displayState;
 41045  00F214  EE20 F003          	lfsr	2,3
 41046  00F218  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41047  00F21A  26D9               	addwf	fsr2l,f,c
 41048  00F21C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41049  00F21E  22DA               	addwfc	fsr2h,f,c
 41050  00F220  C174  FFDF         	movff	_os+15,indf2	;volatile
 41051                           
 41052                           ;api.c: 289: switch(os.displayState & 0x0F)
 41053  00F224  D090               	goto	l2312
 41054  00F226                     
 41055                           ; BSR set to: 0
 41056                           ;api.c: 295: case DISPLAY_STATE_SETUP2:;api.c: 296: outBuffer[4] = os.setup_step_size;
 41057                           
 41058                           ; BSR set to: 0
 41059                           
 41060                           ; BSR set to: 0
 41061  00F226  EE20 F004          	lfsr	2,4
 41062  00F22A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41063  00F22C  26D9               	addwf	fsr2l,f,c
 41064  00F22E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41065  00F230  22DA               	addwfc	fsr2h,f,c
 41066  00F232  C176  FFDF         	movff	_os+17,indf2	;volatile
 41067                           
 41068                           ;api.c: 297: break;
 41069  00F236  0012               	return	
 41070  00F238                     
 41071                           ; BSR set to: 0
 41072                           ;api.c: 300: case DISPLAY_STATE_DIVIDE2:;api.c: 302: outBuffer[4] = os.divide_step_size;
 41073                           
 41074                           ; BSR set to: 0
 41075                           
 41076                           ; BSR set to: 0
 41077  00F238  EE20 F004          	lfsr	2,4
 41078  00F23C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41079  00F23E  26D9               	addwf	fsr2l,f,c
 41080  00F240  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41081  00F242  22DA               	addwfc	fsr2h,f,c
 41082  00F244  C17B  FFDF         	movff	_os+22,indf2	;volatile
 41083                           
 41084                           ;api.c: 303: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 41085  00F248  EE20 F005          	lfsr	2,5
 41086  00F24C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41087  00F24E  26D9               	addwf	fsr2l,f,c
 41088  00F250  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41089  00F252  22DA               	addwfc	fsr2h,f,c
 41090  00F254  0101               	movlb	1	; () banked
 41091  00F256  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 41092  00F258  6EDF               	movwf	indf2,c
 41093                           
 41094                           ;api.c: 304: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 41095  00F25A  0100               	movlb	0	; () banked
 41096  00F25C  EE20 F006          	lfsr	2,6
 41097  00F260  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41098  00F262  26D9               	addwf	fsr2l,f,c
 41099  00F264  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41100  00F266  22DA               	addwfc	fsr2h,f,c
 41101  00F268  C179  FFDF         	movff	_os+20,indf2	;volatile
 41102                           
 41103                           ;api.c: 305: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 41104  00F26C  EE20 F007          	lfsr	2,7
 41105  00F270  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41106  00F272  26D9               	addwf	fsr2l,f,c
 41107  00F274  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41108  00F276  22DA               	addwfc	fsr2h,f,c
 41109  00F278  0101               	movlb	1	; () banked
 41110  00F27A  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 41111  00F27C  6EDF               	movwf	indf2,c
 41112                           
 41113                           ;api.c: 306: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 41114  00F27E  0100               	movlb	0	; () banked
 41115  00F280  EE20 F008          	lfsr	2,8
 41116  00F284  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41117  00F286  26D9               	addwf	fsr2l,f,c
 41118  00F288  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41119  00F28A  22DA               	addwfc	fsr2h,f,c
 41120  00F28C  C17E  FFDF         	movff	_os+25,indf2	;volatile
 41121                           
 41122                           ;api.c: 307: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 41123  00F290  EE20 F009          	lfsr	2,9
 41124  00F294  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41125  00F296  26D9               	addwf	fsr2l,f,c
 41126  00F298  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41127  00F29A  22DA               	addwfc	fsr2h,f,c
 41128  00F29C  0101               	movlb	1	; () banked
 41129  00F29E  517D               	movf	(_os+24)& (0+255),w,b	;volatile
 41130  00F2A0  6EDF               	movwf	indf2,c
 41131                           
 41132                           ;api.c: 308: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 41133  00F2A2  0100               	movlb	0	; () banked
 41134  00F2A4  EE20 F00A          	lfsr	2,10
 41135  00F2A8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41136  00F2AA  26D9               	addwf	fsr2l,f,c
 41137  00F2AC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41138  00F2AE  22DA               	addwfc	fsr2h,f,c
 41139  00F2B0  C17C  FFDF         	movff	_os+23,indf2	;volatile
 41140                           
 41141                           ;api.c: 309: break;
 41142  00F2B4  0012               	return	
 41143  00F2B6                     
 41144                           ; BSR set to: 0
 41145                           ;api.c: 312: case DISPLAY_STATE_ARC2:;api.c: 313: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 41146                           
 41147                           ; BSR set to: 0
 41148                           
 41149                           ; BSR set to: 0
 41150  00F2B6  EE20 F004          	lfsr	2,4
 41151  00F2BA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41152  00F2BC  26D9               	addwf	fsr2l,f,c
 41153  00F2BE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41154  00F2C0  22DA               	addwfc	fsr2h,f,c
 41155  00F2C2  0101               	movlb	1	; () banked
 41156  00F2C4  5181               	movf	(_os+28)& (0+255),w,b	;volatile
 41157  00F2C6  6EDF               	movwf	indf2,c
 41158                           
 41159                           ;api.c: 314: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 41160  00F2C8  0100               	movlb	0	; () banked
 41161  00F2CA  EE20 F005          	lfsr	2,5
 41162  00F2CE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41163  00F2D0  26D9               	addwf	fsr2l,f,c
 41164  00F2D2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41165  00F2D4  22DA               	addwfc	fsr2h,f,c
 41166  00F2D6  C180  FFDF         	movff	_os+27,indf2	;volatile
 41167                           
 41168                           ;api.c: 315: outBuffer[6] = os.arc_direction;
 41169  00F2DA  EE20 F006          	lfsr	2,6
 41170  00F2DE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41171  00F2E0  26D9               	addwf	fsr2l,f,c
 41172  00F2E2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41173  00F2E4  22DA               	addwfc	fsr2h,f,c
 41174  00F2E6  C188  FFDF         	movff	_os+35,indf2	;volatile
 41175                           
 41176                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 41177  00F2EA  EE20 F007          	lfsr	2,7
 41178  00F2EE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41179  00F2F0  26D9               	addwf	fsr2l,f,c
 41180  00F2F2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41181  00F2F4  22DA               	addwfc	fsr2h,f,c
 41182  00F2F6  0101               	movlb	1	; () banked
 41183  00F2F8  5187               	movf	(_os+34)& (0+255),w,b	;volatile
 41184  00F2FA  6EDF               	movwf	indf2,c
 41185                           
 41186                           ;api.c: 317: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 41187  00F2FC  0100               	movlb	0	; () banked
 41188  00F2FE  EE20 F008          	lfsr	2,8
 41189  00F302  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41190  00F304  26D9               	addwf	fsr2l,f,c
 41191  00F306  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41192  00F308  22DA               	addwfc	fsr2h,f,c
 41193  00F30A  C186  FFDF         	movff	_os+33,indf2	;volatile
 41194                           
 41195                           ; BSR set to: 0
 41196                           ;api.c: 321: break;
 41197                           
 41198                           ;api.c: 320: case DISPLAY_STATE_ZERO:
 41199                           
 41200                           ;api.c: 318: break;
 41201  00F30E  0012               	return	
 41202  00F310                     
 41203                           ; BSR set to: 0
 41204                           ;api.c: 324: outBuffer[4] = os.manual_direction;
 41205                           
 41206                           ; BSR set to: 0
 41207  00F310  EE20 F004          	lfsr	2,4
 41208  00F314  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41209  00F316  26D9               	addwf	fsr2l,f,c
 41210  00F318  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41211  00F31A  22DA               	addwfc	fsr2h,f,c
 41212  00F31C  C18B  FFDF         	movff	_os+38,indf2	;volatile
 41213                           
 41214                           ;api.c: 325: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41215  00F320  EE20 F005          	lfsr	2,5
 41216  00F324  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41217  00F326  26D9               	addwf	fsr2l,f,c
 41218  00F328  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41219  00F32A  22DA               	addwfc	fsr2h,f,c
 41220  00F32C  0101               	movlb	1	; () banked
 41221  00F32E  518A               	movf	(_os+37)& (0+255),w,b	;volatile
 41222  00F330  6EDF               	movwf	indf2,c
 41223                           
 41224                           ;api.c: 326: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 41225  00F332  0100               	movlb	0	; () banked
 41226  00F334  EE20 F006          	lfsr	2,6
 41227  00F338  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41228  00F33A  26D9               	addwf	fsr2l,f,c
 41229  00F33C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41230  00F33E  22DA               	addwfc	fsr2h,f,c
 41231  00F340  C189  FFDF         	movff	_os+36,indf2	;volatile
 41232                           
 41233                           ; BSR set to: 0
 41234                           ;api.c: 328: }
 41235                           
 41236                           ;api.c: 327: break;
 41237  00F344  0012               	return	
 41238  00F346                     l2312:
 41239                           
 41240                           ; BSR set to: 0
 41241                           
 41242                           ; BSR set to: 0
 41243  00F346  0101               	movlb	1	; () banked
 41244  00F348  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 41245  00F34A  0B0F               	andlw	15
 41246  00F34C  0100               	movlb	0	; () banked
 41247  00F34E  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 41248  00F350  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 41249                           
 41250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41251                           ; Switch size 1, requested type "space"
 41252                           ; Number of cases is 1, Range of values is 0 to 0
 41253                           ; switch strategies available:
 41254                           ; Name         Instructions Cycles
 41255                           ; simple_byte            4     3 (average)
 41256                           ;	Chosen strategy is simple_byte
 41257  00F352  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 41258  00F354  0A00               	xorlw	0	; case 0
 41259  00F356  A4D8               	btfss	status,2,c
 41260  00F358  0012               	return	
 41261                           
 41262                           ; BSR set to: 0
 41263                           ; Switch size 1, requested type "space"
 41264                           ; Number of cases is 9, Range of values is 0 to 128
 41265                           ; switch strategies available:
 41266                           ; Name         Instructions Cycles
 41267                           ; simple_byte           28    15 (average)
 41268                           ;	Chosen strategy is simple_byte
 41269  00F35A  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 41270  00F35C  0A00               	xorlw	0	; case 0
 41271  00F35E  B4D8               	btfsc	status,2,c
 41272  00F360  0012               	return	
 41273  00F362  0A10               	xorlw	16	; case 16
 41274  00F364  B4D8               	btfsc	status,2,c
 41275  00F366  D75F               	goto	l2315
 41276  00F368  0A30               	xorlw	48	; case 32
 41277  00F36A  B4D8               	btfsc	status,2,c
 41278  00F36C  D75C               	goto	l2315
 41279  00F36E  0A10               	xorlw	16	; case 48
 41280  00F370  B4D8               	btfsc	status,2,c
 41281  00F372  D762               	goto	l2317
 41282  00F374  0A70               	xorlw	112	; case 64
 41283  00F376  B4D8               	btfsc	status,2,c
 41284  00F378  D75F               	goto	l2317
 41285  00F37A  0A10               	xorlw	16	; case 80
 41286  00F37C  B4D8               	btfsc	status,2,c
 41287  00F37E  D79B               	goto	l2319
 41288  00F380  0A30               	xorlw	48	; case 96
 41289  00F382  B4D8               	btfsc	status,2,c
 41290  00F384  D798               	goto	l2319
 41291  00F386  0A10               	xorlw	16	; case 112
 41292  00F388  B4D8               	btfsc	status,2,c
 41293  00F38A  0012               	return	
 41294  00F38C  0AF0               	xorlw	240	; case 128
 41295  00F38E  A4D8               	btfss	status,2,c
 41296  00F390  0012               	return	
 41297  00F392  D7BE               	goto	l2322
 41298  00F394                     __end_of__fill_buffer_get_mode_details:
 41299                           	opt stack 0
 41300                           tosu	equ	0xFFF
 41301                           tosh	equ	0xFFE
 41302                           tosl	equ	0xFFD
 41303                           pclath	equ	0xFFA
 41304                           tblptru	equ	0xFF8
 41305                           tblptrh	equ	0xFF7
 41306                           tblptrl	equ	0xFF6
 41307                           tablat	equ	0xFF5
 41308                           prodh	equ	0xFF4
 41309                           prodl	equ	0xFF3
 41310                           intcon	equ	0xFF2
 41311                           indf0	equ	0xFEF
 41312                           postinc0	equ	0xFEE
 41313                           fsr0h	equ	0xFEA
 41314                           fsr0l	equ	0xFE9
 41315                           wreg	equ	0xFE8
 41316                           indf1	equ	0xFE7
 41317                           postinc1	equ	0xFE6
 41318                           postdec1	equ	0xFE5
 41319                           plusw1	equ	0xFE3
 41320                           fsr1h	equ	0xFE2
 41321                           fsr1l	equ	0xFE1
 41322                           indf2	equ	0xFDF
 41323                           postinc2	equ	0xFDE
 41324                           postdec2	equ	0xFDD
 41325                           plusw2	equ	0xFDB
 41326                           fsr2h	equ	0xFDA
 41327                           fsr2l	equ	0xFD9
 41328                           status	equ	0xFD8
 41329                           
 41330 ;; *************** function __fill_buffer_get_display *****************
 41331 ;; Defined at:
 41332 ;;		line 236 in file "api.c"
 41333 ;; Parameters:    Size  Location     Type
 41334 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 41335 ;;		 -> ToSendDataBuffer(64), 
 41336 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 41337 ;; Auto vars:     Size  Location     Type
 41338 ;;  position        1   15[BANK0 ] unsigned char 
 41339 ;;  start_line      1   14[BANK0 ] unsigned char 
 41340 ;;  line            1   13[BANK0 ] unsigned char 
 41341 ;;  cntr            1   12[BANK0 ] unsigned char 
 41342 ;; Return value:  Size  Location     Type
 41343 ;;                  1    wreg      void 
 41344 ;; Registers used:
 41345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41346 ;; Tracked objects:
 41347 ;;		On entry : 0/0
 41348 ;;		On exit  : 0/0
 41349 ;;		Unchanged: 0/0
 41350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41351 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41352 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41353 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41354 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41355 ;;Total ram usage:       12 bytes
 41356 ;; Hardware stack levels used:    1
 41357 ;; Hardware stack levels required when called:   11
 41358 ;; This function calls:
 41359 ;;		_display_get_character
 41360 ;; This function is called by:
 41361 ;;		_api_prepare
 41362 ;; This function uses a non-reentrant model
 41363 ;;
 41364                           
 41365                           	psect	text162
 41366  0130DE                     __ptext162:
 41367                           	opt stack 0
 41368  0130DE                     __fill_buffer_get_display:
 41369                           	opt stack 17
 41370                           
 41371                           ;api.c: 238: uint8_t cntr;;api.c: 239: uint8_t line;;api.c: 240: uint8_t start_line;;api
      +                          .c: 241: uint8_t position;;api.c: 244: if(secondHalf)
 41372                           
 41373                           ; BSR set to: 0
 41374                           ;incstack = 0
 41375  0130DE  0100               	movlb	0	; () banked
 41376  0130E0  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41377  0130E2  B4D8               	btfsc	status,2,c
 41378  0130E4  D006               	goto	l2300
 41379                           
 41380                           ; BSR set to: 0
 41381                           ;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 41382  0130E6  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41383  0130EA  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41384  0130EE  0E12               	movlw	18
 41385  0130F0  D005               	goto	L64
 41386  0130F2                     l2300:
 41387                           
 41388                           ; BSR set to: 0
 41389                           ;api.c: 248: else;api.c: 249: {;api.c: 250: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 41390                           
 41391                           ; BSR set to: 0
 41392  0130F2  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41393  0130F6  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41394  0130FA  0E11               	movlw	17
 41395  0130FC                     L64:
 41396  0130FC  6EDF               	movwf	indf2,c
 41397                           
 41398                           ; BSR set to: 0
 41399                           ;api.c: 251: };api.c: 254: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41400                           
 41401                           ; BSR set to: 0
 41402  0130FE  EE20 F001          	lfsr	2,1
 41403  013102  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41404  013104  26D9               	addwf	fsr2l,f,c
 41405  013106  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41406  013108  22DA               	addwfc	fsr2h,f,c
 41407  01310A  0EBC               	movlw	188
 41408  01310C  6EDF               	movwf	indf2,c
 41409                           
 41410                           ; BSR set to: 0
 41411                           ;api.c: 255: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41412  01310E  EE20 F002          	lfsr	2,2
 41413  013112  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41414  013114  26D9               	addwf	fsr2l,f,c
 41415  013116  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41416  013118  22DA               	addwfc	fsr2h,f,c
 41417  01311A  0E26               	movlw	38
 41418  01311C  6EDF               	movwf	indf2,c
 41419                           
 41420                           ; BSR set to: 0
 41421                           ;api.c: 258: cntr = 3;
 41422  01311E  0E03               	movlw	3
 41423  013120  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 41424                           
 41425                           ; BSR set to: 0
 41426                           ;api.c: 259: if(secondHalf)
 41427  013122  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41428  013124  B4D8               	btfsc	status,2,c
 41429  013126  D002               	goto	l2302
 41430                           
 41431                           ; BSR set to: 0
 41432                           ;api.c: 260: {;api.c: 261: start_line = 2;
 41433  013128  0E02               	movlw	2
 41434  01312A  D001               	goto	L65
 41435  01312C                     l2302:
 41436                           
 41437                           ; BSR set to: 0
 41438                           ;api.c: 263: else;api.c: 264: {;api.c: 265: start_line = 0;
 41439                           
 41440                           ; BSR set to: 0
 41441  01312C  0E00               	movlw	0
 41442  01312E                     L65:
 41443  01312E  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 41444                           
 41445                           ; BSR set to: 0
 41446                           ;api.c: 266: };api.c: 267: for(line=start_line; line<start_line+2; ++line)
 41447                           
 41448                           ; BSR set to: 0
 41449  013130  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 41450  013134  D01B               	goto	l2304
 41451  013136                     
 41452                           ; BSR set to: 0
 41453                           ;api.c: 268: {;api.c: 269: for(position=0; position<20; ++position)
 41454                           
 41455                           ; BSR set to: 0
 41456  013136  0E00               	movlw	0
 41457  013138  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 41458  01313A                     l16610:
 41459                           
 41460                           ; BSR set to: 0
 41461  01313A  0E13               	movlw	19
 41462  01313C  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 41463  01313E  D001               	goto	l2306
 41464  013140  D014               	goto	u15780
 41465  013142                     l2306:
 41466                           
 41467                           ; BSR set to: 0
 41468                           ;api.c: 270: {;api.c: 271: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 41469                           
 41470                           ; BSR set to: 0
 41471  013142  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 41472  013146  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41473  013148  ECF1  F0AD         	call	_display_get_character
 41474  01314C  0100               	movlb	0	; () banked
 41475  01314E  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41476  013150  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 41477  013152  0D01               	mullw	1
 41478  013154  50F3               	movf	prodl,w,c
 41479  013156  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41480  013158  6ED9               	movwf	fsr2l,c
 41481  01315A  50F4               	movf	prodh,w,c
 41482  01315C  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41483  01315E  6EDA               	movwf	fsr2h,c
 41484  013160  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 41485                           
 41486                           ; BSR set to: 0
 41487                           ;api.c: 272: ++cntr;
 41488  013164  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 41489                           
 41490                           ; BSR set to: 0
 41491  013166  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 41492  013168  D7E8               	goto	l16610
 41493  01316A                     u15780:
 41494                           
 41495                           ; BSR set to: 0
 41496                           
 41497                           ; BSR set to: 0
 41498  01316A  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 41499  01316C                     l2304:
 41500                           
 41501                           ; BSR set to: 0
 41502                           
 41503                           ; BSR set to: 0
 41504  01316C  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 41505  01316E  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41506  013170  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 41507  013172  0E02               	movlw	2
 41508  013174  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 41509  013176  0E00               	movlw	0
 41510  013178  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 41511  01317A  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41512  01317C  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 41513  01317E  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 41514  013180  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 41515  013182  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 41516  013184  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 41517  013186  0A80               	xorlw	128
 41518  013188  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 41519  01318A  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 41520  01318C  0A80               	xorlw	128
 41521  01318E  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 41522  013190  B0D8               	btfsc	status,0,c
 41523  013192  0012               	return	
 41524  013194  D7D0               	goto	l2305
 41525  013196                     __end_of__fill_buffer_get_display:
 41526                           	opt stack 0
 41527                           tosu	equ	0xFFF
 41528                           tosh	equ	0xFFE
 41529                           tosl	equ	0xFFD
 41530                           pclath	equ	0xFFA
 41531                           tblptru	equ	0xFF8
 41532                           tblptrh	equ	0xFF7
 41533                           tblptrl	equ	0xFF6
 41534                           tablat	equ	0xFF5
 41535                           prodh	equ	0xFF4
 41536                           prodl	equ	0xFF3
 41537                           intcon	equ	0xFF2
 41538                           indf0	equ	0xFEF
 41539                           postinc0	equ	0xFEE
 41540                           fsr0h	equ	0xFEA
 41541                           fsr0l	equ	0xFE9
 41542                           wreg	equ	0xFE8
 41543                           indf1	equ	0xFE7
 41544                           postinc1	equ	0xFE6
 41545                           postdec1	equ	0xFE5
 41546                           plusw1	equ	0xFE3
 41547                           fsr1h	equ	0xFE2
 41548                           fsr1l	equ	0xFE1
 41549                           indf2	equ	0xFDF
 41550                           postinc2	equ	0xFDE
 41551                           postdec2	equ	0xFDD
 41552                           plusw2	equ	0xFDB
 41553                           fsr2h	equ	0xFDA
 41554                           fsr2l	equ	0xFD9
 41555                           status	equ	0xFD8
 41556                           
 41557 ;; *************** function _display_get_character *****************
 41558 ;; Defined at:
 41559 ;;		line 646 in file "display.c"
 41560 ;; Parameters:    Size  Location     Type
 41561 ;;  line            1    wreg     unsigned char 
 41562 ;;  position        1    0[BANK0 ] unsigned char 
 41563 ;; Auto vars:     Size  Location     Type
 41564 ;;  line            1    3[BANK0 ] unsigned char 
 41565 ;; Return value:  Size  Location     Type
 41566 ;;                  1    wreg      unsigned char 
 41567 ;; Registers used:
 41568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41569 ;; Tracked objects:
 41570 ;;		On entry : 0/0
 41571 ;;		On exit  : 0/0
 41572 ;;		Unchanged: 0/0
 41573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41574 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41577 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41578 ;;Total ram usage:        4 bytes
 41579 ;; Hardware stack levels used:    1
 41580 ;; Hardware stack levels required when called:   10
 41581 ;; This function calls:
 41582 ;;		Nothing
 41583 ;; This function is called by:
 41584 ;;		__fill_buffer_get_display
 41585 ;; This function uses a non-reentrant model
 41586 ;;
 41587                           
 41588                           	psect	text163
 41589  015BE2                     __ptext163:
 41590                           	opt stack 0
 41591  015BE2                     _display_get_character:
 41592                           	opt stack 17
 41593                           
 41594                           ; BSR set to: 0
 41595                           ;incstack = 0
 41596                           ;display_get_character@line stored from wreg
 41597  015BE2  0100               	movlb	0	; () banked
 41598  015BE4  6F63               	movwf	display_get_character@line& (0+255),b
 41599                           
 41600                           ;display.c: 648: return display_content[line][position];
 41601  015BE6  0100               	movlb	0	; () banked
 41602  015BE8  5163               	movf	display_get_character@line& (0+255),w,b
 41603  015BEA  0D14               	mullw	20
 41604  015BEC  0E48               	movlw	low _display_content
 41605  015BEE  6F61               	movwf	??_display_get_character& (0+255),b
 41606  015BF0  0E02               	movlw	high _display_content
 41607  015BF2  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 41608  015BF4  50F3               	movf	prodl,w,c
 41609  015BF6  2761               	addwf	??_display_get_character& (0+255),f,b
 41610  015BF8  50F4               	movf	prodh,w,c
 41611  015BFA  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 41612  015BFC  5160               	movf	display_get_character@position& (0+255),w,b
 41613  015BFE  0D01               	mullw	1
 41614  015C00  50F3               	movf	prodl,w,c
 41615  015C02  2561               	addwf	??_display_get_character& (0+255),w,b
 41616  015C04  6ED9               	movwf	fsr2l,c
 41617  015C06  50F4               	movf	prodh,w,c
 41618  015C08  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 41619  015C0A  6EDA               	movwf	fsr2h,c
 41620  015C0C  50DF               	movf	indf2,w,c
 41621  015C0E  0012               	return	
 41622  015C10                     __end_of_display_get_character:
 41623                           	opt stack 0
 41624                           tosu	equ	0xFFF
 41625                           tosh	equ	0xFFE
 41626                           tosl	equ	0xFFD
 41627                           pclath	equ	0xFFA
 41628                           tblptru	equ	0xFF8
 41629                           tblptrh	equ	0xFF7
 41630                           tblptrl	equ	0xFF6
 41631                           tablat	equ	0xFF5
 41632                           prodh	equ	0xFF4
 41633                           prodl	equ	0xFF3
 41634                           intcon	equ	0xFF2
 41635                           indf0	equ	0xFEF
 41636                           postinc0	equ	0xFEE
 41637                           fsr0h	equ	0xFEA
 41638                           fsr0l	equ	0xFE9
 41639                           wreg	equ	0xFE8
 41640                           indf1	equ	0xFE7
 41641                           postinc1	equ	0xFE6
 41642                           postdec1	equ	0xFE5
 41643                           plusw1	equ	0xFE3
 41644                           fsr1h	equ	0xFE2
 41645                           fsr1l	equ	0xFE1
 41646                           indf2	equ	0xFDF
 41647                           postinc2	equ	0xFDE
 41648                           postdec2	equ	0xFDD
 41649                           plusw2	equ	0xFDB
 41650                           fsr2h	equ	0xFDA
 41651                           fsr2l	equ	0xFD9
 41652                           status	equ	0xFD8
 41653                           
 41654 ;; *************** function _api_parse *****************
 41655 ;; Defined at:
 41656 ;;		line 94 in file "api.c"
 41657 ;; Parameters:    Size  Location     Type
 41658 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 41659 ;;		 -> ReceivedDataBuffer(64), 
 41660 ;;  receivedData    1   73[BANK0 ] unsigned char 
 41661 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 41662 ;;		 -> ToSendDataBuffer(64), 
 41663 ;; Auto vars:     Size  Location     Type
 41664 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 41665 ;;		 -> api_parse@out_idx(1), 
 41666 ;;  in_idx          1   81[BANK0 ] unsigned char 
 41667 ;;  out_idx         1   80[BANK0 ] unsigned char 
 41668 ;; Return value:  Size  Location     Type
 41669 ;;                  1    wreg      void 
 41670 ;; Registers used:
 41671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41672 ;; Tracked objects:
 41673 ;;		On entry : 0/0
 41674 ;;		On exit  : 0/0
 41675 ;;		Unchanged: 0/0
 41676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41677 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41678 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41680 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41681 ;;Total ram usage:       11 bytes
 41682 ;; Hardware stack levels used:    1
 41683 ;; Hardware stack levels required when called:   16
 41684 ;; This function calls:
 41685 ;;		__parse_command_long
 41686 ;;		__parse_command_short
 41687 ;; This function is called by:
 41688 ;;		_APP_DeviceCustomHIDTasks
 41689 ;; This function uses a non-reentrant model
 41690 ;;
 41691                           
 41692                           	psect	text164
 41693  010AB0                     __ptext164:
 41694                           	opt stack 0
 41695  010AB0                     _api_parse:
 41696                           	opt stack 13
 41697                           
 41698                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 41699                           
 41700                           ; BSR set to: 0
 41701                           ;incstack = 0
 41702  010AB0  0E00               	movlw	0
 41703  010AB2  0100               	movlb	0	; () banked
 41704  010AB4  6FB0               	movwf	api_parse@out_idx& (0+255),b
 41705                           
 41706                           ; BSR set to: 0
 41707                           ;api.c: 103: out_idx_ptr = &out_idx;
 41708  010AB6  0EB0               	movlw	low api_parse@out_idx
 41709  010AB8  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 41710  010ABA  0E00               	movlw	high api_parse@out_idx
 41711  010ABC  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 41712                           
 41713                           ; BSR set to: 0
 41714                           ;api.c: 105: if(inBuffer[0]>0x7F)
 41715  010ABE  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41716  010AC2  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41717  010AC6  0E7F               	movlw	127
 41718  010AC8  64DF               	cpfsgt	indf2,c
 41719  010ACA  D001               	goto	l2281
 41720  010ACC  0012               	return	
 41721  010ACE                     l2281:
 41722                           
 41723                           ; BSR set to: 0
 41724                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 41725                           
 41726                           ; BSR set to: 0
 41727  010ACE  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41728  010AD2  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41729  010AD6  0E20               	movlw	32
 41730  010AD8  18DE               	xorwf	postinc2,w,c
 41731  010ADA  B4D8               	btfsc	status,2,c
 41732  010ADC  0012               	return	
 41733                           
 41734                           ; BSR set to: 0
 41735                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 41736                           
 41737                           ; BSR set to: 0
 41738                           
 41739                           ; BSR set to: 0
 41740                           ;api.c: 113: {;api.c: 116: return;
 41741  010ADE  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41742  010AE2  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41743  010AE6  50DF               	movf	indf2,w,c
 41744  010AE8  A4D8               	btfss	status,2,c
 41745  010AEA  D018               	goto	l2284
 41746                           
 41747                           ; BSR set to: 0
 41748                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 41749  010AEC  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 41750  010AF0  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 41751  010AF4  0E00               	movlw	0
 41752  010AF6  6EDF               	movwf	indf2,c
 41753                           
 41754                           ; BSR set to: 0
 41755                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41756  010AF8  EE20 F001          	lfsr	2,1
 41757  010AFC  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 41758  010AFE  26D9               	addwf	fsr2l,f,c
 41759  010B00  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 41760  010B02  22DA               	addwfc	fsr2h,f,c
 41761  010B04  0EBC               	movlw	188
 41762  010B06  6EDF               	movwf	indf2,c
 41763                           
 41764                           ; BSR set to: 0
 41765                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41766  010B08  EE20 F002          	lfsr	2,2
 41767  010B0C  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 41768  010B0E  26D9               	addwf	fsr2l,f,c
 41769  010B10  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 41770  010B12  22DA               	addwfc	fsr2h,f,c
 41771  010B14  0E26               	movlw	38
 41772  010B16  6EDF               	movwf	indf2,c
 41773                           
 41774                           ; BSR set to: 0
 41775                           ;api.c: 129: out_idx = 3;
 41776  010B18  0E03               	movlw	3
 41777  010B1A  6FB0               	movwf	api_parse@out_idx& (0+255),b
 41778  010B1C                     l2284:
 41779                           
 41780                           ; BSR set to: 0
 41781                           ;api.c: 130: };api.c: 132: in_idx = 1;
 41782                           
 41783                           ; BSR set to: 0
 41784  010B1C  0E01               	movlw	1
 41785  010B1E  6FB1               	movwf	api_parse@in_idx& (0+255),b
 41786                           
 41787                           ;api.c: 133: while(in_idx<receivedDataLength)
 41788  010B20  D057               	goto	l2290
 41789  010B22                     
 41790                           ; BSR set to: 0
 41791                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 41792                           
 41793                           ; BSR set to: 0
 41794  010B22  51B1               	movf	api_parse@in_idx& (0+255),w,b
 41795  010B24  0D01               	mullw	1
 41796  010B26  50F3               	movf	prodl,w,c
 41797  010B28  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 41798  010B2A  6ED9               	movwf	fsr2l,c
 41799  010B2C  50F4               	movf	prodh,w,c
 41800  010B2E  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 41801  010B30  6EDA               	movwf	fsr2h,c
 41802  010B32  0E99               	movlw	153
 41803  010B34  18DE               	xorwf	postinc2,w,c
 41804  010B36  B4D8               	btfsc	status,2,c
 41805  010B38  0012               	return	
 41806  010B3A  D02F               	goto	l2288
 41807  010B3C                     
 41808                           ; BSR set to: 0
 41809                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 41810                           
 41811                           ; BSR set to: 0
 41812  010B3C  51B1               	movf	api_parse@in_idx& (0+255),w,b
 41813  010B3E  0D01               	mullw	1
 41814  010B40  50F3               	movf	prodl,w,c
 41815  010B42  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 41816  010B44  6ED9               	movwf	fsr2l,c
 41817  010B46  50F4               	movf	prodh,w,c
 41818  010B48  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 41819  010B4A  6EDA               	movwf	fsr2h,c
 41820  010B4C  50DF               	movf	indf2,w,c
 41821  010B4E  EC9C  F07A         	call	__parse_command_short
 41822  010B52  D00B               	goto	l17324
 41823  010B54                     
 41824                           ; BSR set to: 0
 41825                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 41826                           
 41827                           ; BSR set to: 0
 41828  010B54  51B1               	movf	api_parse@in_idx& (0+255),w,b
 41829  010B56  0D01               	mullw	1
 41830  010B58  50F3               	movf	prodl,w,c
 41831  010B5A  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 41832  010B5C  6ED9               	movwf	fsr2l,c
 41833  010B5E  50F4               	movf	prodh,w,c
 41834  010B60  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 41835  010B62  6EDA               	movwf	fsr2h,c
 41836  010B64  50DF               	movf	indf2,w,c
 41837  010B66  EC9C  F07A         	call	__parse_command_short
 41838  010B6A                     l17324:
 41839                           
 41840                           ;api.c: 150: ++in_idx;
 41841  010B6A  0100               	movlb	0	; () banked
 41842  010B6C  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 41843                           
 41844                           ;api.c: 151: break;
 41845  010B6E  D030               	goto	l2290
 41846  010B70                     
 41847                           ; BSR set to: 0
 41848                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 41849                           
 41850                           ; BSR set to: 0
 41851  010B70  51B1               	movf	api_parse@in_idx& (0+255),w,b
 41852  010B72  0D01               	mullw	1
 41853  010B74  50F3               	movf	prodl,w,c
 41854  010B76  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 41855  010B78  6FA0               	movwf	__parse_command_long@data& (0+255),b
 41856  010B7A  50F4               	movf	prodh,w,c
 41857  010B7C  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 41858  010B7E  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 41859  010B80  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 41860  010B84  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 41861  010B88  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 41862  010B8C  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 41863  010B90  ECEB  F09F         	call	__parse_command_long	;wreg free
 41864  010B94  0100               	movlb	0	; () banked
 41865  010B96  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 41866                           
 41867                           ;api.c: 155: break;
 41868  010B98  D01B               	goto	l2290
 41869  010B9A                     l2288:
 41870                           
 41871                           ; BSR set to: 0
 41872                           
 41873                           ; BSR set to: 0
 41874  010B9A  51B1               	movf	api_parse@in_idx& (0+255),w,b
 41875  010B9C  0D01               	mullw	1
 41876  010B9E  50F3               	movf	prodl,w,c
 41877  010BA0  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 41878  010BA2  6ED9               	movwf	fsr2l,c
 41879  010BA4  50F4               	movf	prodh,w,c
 41880  010BA6  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 41881  010BA8  6EDA               	movwf	fsr2h,c
 41882  010BAA  50DF               	movf	indf2,w,c
 41883  010BAC  0BF0               	andlw	240
 41884  010BAE  6FAC               	movwf	??_api_parse& (0+255),b
 41885  010BB0  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 41886                           
 41887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41888                           ; Switch size 1, requested type "space"
 41889                           ; Number of cases is 1, Range of values is 0 to 0
 41890                           ; switch strategies available:
 41891                           ; Name         Instructions Cycles
 41892                           ; simple_byte            4     3 (average)
 41893                           ;	Chosen strategy is simple_byte
 41894  010BB2  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 41895  010BB4  0A00               	xorlw	0	; case 0
 41896  010BB6  A4D8               	btfss	status,2,c
 41897  010BB8  0012               	return	
 41898                           
 41899                           ; BSR set to: 0
 41900                           ; Switch size 1, requested type "space"
 41901                           ; Number of cases is 3, Range of values is 32 to 144
 41902                           ; switch strategies available:
 41903                           ; Name         Instructions Cycles
 41904                           ; simple_byte           10     6 (average)
 41905                           ;	Chosen strategy is simple_byte
 41906  010BBA  51AC               	movf	??_api_parse& (0+255),w,b
 41907  010BBC  0A20               	xorlw	32	; case 32
 41908  010BBE  B4D8               	btfsc	status,2,c
 41909  010BC0  D7BD               	goto	l2289
 41910  010BC2  0A10               	xorlw	16	; case 48
 41911  010BC4  B4D8               	btfsc	status,2,c
 41912  010BC6  D7C6               	goto	l2291
 41913  010BC8  0AA0               	xorlw	160	; case 144
 41914  010BCA  A4D8               	btfss	status,2,c
 41915  010BCC  0012               	return	
 41916  010BCE  D7D0               	goto	l2292
 41917  010BD0                     l2290:
 41918                           
 41919                           ; BSR set to: 0
 41920                           
 41921                           ; BSR set to: 0
 41922                           
 41923                           ; BSR set to: 0
 41924  010BD0  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 41925  010BD2  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 41926  010BD4  B0D8               	btfsc	status,0,c
 41927  010BD6  0012               	return	
 41928  010BD8  D7A4               	goto	l2286
 41929  010BDA                     __end_of_api_parse:
 41930                           	opt stack 0
 41931                           tosu	equ	0xFFF
 41932                           tosh	equ	0xFFE
 41933                           tosl	equ	0xFFD
 41934                           pclath	equ	0xFFA
 41935                           tblptru	equ	0xFF8
 41936                           tblptrh	equ	0xFF7
 41937                           tblptrl	equ	0xFF6
 41938                           tablat	equ	0xFF5
 41939                           prodh	equ	0xFF4
 41940                           prodl	equ	0xFF3
 41941                           intcon	equ	0xFF2
 41942                           indf0	equ	0xFEF
 41943                           postinc0	equ	0xFEE
 41944                           fsr0h	equ	0xFEA
 41945                           fsr0l	equ	0xFE9
 41946                           wreg	equ	0xFE8
 41947                           indf1	equ	0xFE7
 41948                           postinc1	equ	0xFE6
 41949                           postdec1	equ	0xFE5
 41950                           plusw1	equ	0xFE3
 41951                           fsr1h	equ	0xFE2
 41952                           fsr1l	equ	0xFE1
 41953                           indf2	equ	0xFDF
 41954                           postinc2	equ	0xFDE
 41955                           postdec2	equ	0xFDD
 41956                           plusw2	equ	0xFDB
 41957                           fsr2h	equ	0xFDA
 41958                           fsr2l	equ	0xFD9
 41959                           status	equ	0xFD8
 41960                           
 41961 ;; *************** function __parse_command_short *****************
 41962 ;; Defined at:
 41963 ;;		line 331 in file "api.c"
 41964 ;; Parameters:    Size  Location     Type
 41965 ;;  cmd             1    wreg     unsigned char 
 41966 ;; Auto vars:     Size  Location     Type
 41967 ;;  cmd             1   62[BANK0 ] unsigned char 
 41968 ;; Return value:  Size  Location     Type
 41969 ;;                  1    wreg      void 
 41970 ;; Registers used:
 41971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41972 ;; Tracked objects:
 41973 ;;		On entry : 0/0
 41974 ;;		On exit  : 0/0
 41975 ;;		Unchanged: 0/0
 41976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41980 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41981 ;;Total ram usage:        1 bytes
 41982 ;; Hardware stack levels used:    1
 41983 ;; Hardware stack levels required when called:   14
 41984 ;; This function calls:
 41985 ;;		_i2c_eeprom_writeByte
 41986 ;;		_motor_clear_command_cue
 41987 ;;		_motor_goto_steps
 41988 ;;		_motor_move_endless
 41989 ;;		_motor_set_zero
 41990 ;;		_motor_stop
 41991 ;;		_reboot
 41992 ;; This function is called by:
 41993 ;;		_api_parse
 41994 ;; This function uses a non-reentrant model
 41995 ;;
 41996                           
 41997                           	psect	text165
 41998  00F538                     __ptext165:
 41999                           	opt stack 0
 42000  00F538                     __parse_command_short:
 42001                           	opt stack 14
 42002                           
 42003                           ; BSR set to: 0
 42004                           ;incstack = 0
 42005                           ;__parse_command_short@cmd stored from wreg
 42006  00F538  0100               	movlb	0	; () banked
 42007  00F53A  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 42008                           
 42009                           ;api.c: 333: switch(cmd)
 42010  00F53C  D08A               	goto	l2326
 42011  00F53E                     
 42012                           ;api.c: 341: i2c_eeprom_writeByte(0x100, 0x94);
 42013  00F53E  0E01               	movlw	1
 42014  00F540  0100               	movlb	0	; () banked
 42015  00F542  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 42016  00F544  0E00               	movlw	0
 42017  00F546  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 42018  00F548  0E94               	movlw	148
 42019  00F54A  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 42020  00F54C  EC0A  F0AB         	call	_i2c_eeprom_writeByte	;wreg free
 42021                           
 42022                           ;api.c: 342: reboot();
 42023  00F550  EC96  F0B0         	call	_reboot	;wreg free
 42024                           
 42025                           ;api.c: 343: break;
 42026  00F554  0012               	return	
 42027  00F556                     
 42028                           ;api.c: 346: i2c_eeprom_writeByte(0x100, 0x78);
 42029  00F556  0E01               	movlw	1
 42030  00F558  0100               	movlb	0	; () banked
 42031  00F55A  6F6B               	movwf	(i2c_eeprom_writeByte@address+1)& (0+255),b
 42032  00F55C  0E00               	movlw	0
 42033  00F55E  6F6A               	movwf	i2c_eeprom_writeByte@address& (0+255),b
 42034  00F560  0E78               	movlw	120
 42035  00F562  6F6C               	movwf	i2c_eeprom_writeByte@data& (0+255),b
 42036  00F564  EC0A  F0AB         	call	_i2c_eeprom_writeByte	;wreg free
 42037                           
 42038                           ;api.c: 347: reboot();
 42039  00F568  EC96  F0B0         	call	_reboot	;wreg free
 42040                           
 42041                           ;api.c: 348: break;
 42042  00F56C  0012               	return	
 42043  00F56E                     
 42044                           ;api.c: 351: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42045  00F56E  0E01               	movlw	1
 42046  00F570  0101               	movlb	1	; () banked
 42047  00F572  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42048                           
 42049                           ;api.c: 352: break;
 42050  00F574  0012               	return	
 42051  00F576                     
 42052                           ;api.c: 355: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 42053                           
 42054                           ; BSR set to: 1
 42055  00F576  0E11               	movlw	17
 42056  00F578  0101               	movlb	1	; () banked
 42057  00F57A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42058                           
 42059                           ;api.c: 356: break;
 42060  00F57C  0012               	return	
 42061  00F57E                     
 42062                           ;api.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 42063                           
 42064                           ; BSR set to: 1
 42065  00F57E  0E31               	movlw	49
 42066  00F580  0101               	movlb	1	; () banked
 42067  00F582  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42068                           
 42069                           ;api.c: 360: break;
 42070  00F584  0012               	return	
 42071  00F586                     
 42072                           ;api.c: 363: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 42073                           
 42074                           ; BSR set to: 1
 42075  00F586  0E51               	movlw	81
 42076  00F588  0101               	movlb	1	; () banked
 42077  00F58A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42078                           
 42079                           ;api.c: 364: break;
 42080  00F58C  0012               	return	
 42081  00F58E                     
 42082                           ;api.c: 367: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42083                           
 42084                           ; BSR set to: 1
 42085  00F58E  0E82               	movlw	130
 42086  00F590  0101               	movlb	1	; () banked
 42087  00F592  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42088                           
 42089                           ;api.c: 368: break;
 42090  00F594  0012               	return	
 42091  00F596                     
 42092                           ;api.c: 371: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 42093                           
 42094                           ; BSR set to: 1
 42095  00F596  0E71               	movlw	113
 42096  00F598  0101               	movlb	1	; () banked
 42097  00F59A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42098                           
 42099                           ;api.c: 372: break;
 42100  00F59C  0012               	return	
 42101  00F59E                     
 42102                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CCW);
 42103                           
 42104                           ; BSR set to: 1
 42105  00F59E  0EFF               	movlw	255
 42106  00F5A0  EC14  F0AC         	call	_motor_set_zero
 42107                           
 42108                           ;api.c: 376: break;
 42109  00F5A4  0012               	return	
 42110  00F5A6                     
 42111                           ;api.c: 379: motor_set_zero(MOTOR_DIRECTION_CW);
 42112  00F5A6  0E01               	movlw	1
 42113  00F5A8  EC14  F0AC         	call	_motor_set_zero
 42114                           
 42115                           ;api.c: 380: break;
 42116  00F5AC  0012               	return	
 42117  00F5AE                     
 42118                           ;api.c: 383: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 42119  00F5AE  0E00               	movlw	0
 42120  00F5B0  0100               	movlb	0	; () banked
 42121  00F5B2  6F92               	movwf	motor_goto_steps@position& (0+255),b
 42122  00F5B4  0E00               	movlw	0
 42123  00F5B6  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 42124  00F5B8  0E00               	movlw	0
 42125  00F5BA  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 42126  00F5BC  0E00               	movlw	0
 42127  00F5BE  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 42128  00F5C0  0EFF               	movlw	255
 42129  00F5C2  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 42130  00F5C4  6996               	setf	motor_goto_steps@speed& (0+255),b
 42131  00F5C6  0E00               	movlw	0
 42132  00F5C8  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 42133  00F5CA  0E00               	movlw	0
 42134  00F5CC  EC70  F09C         	call	_motor_goto_steps
 42135                           
 42136                           ;api.c: 385: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 42137  00F5D0  0E05               	movlw	5
 42138  00F5D2  0101               	movlb	1	; () banked
 42139  00F5D4  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42140                           
 42141                           ; BSR set to: 1
 42142                           ;api.c: 386: os.divide_position = 0;
 42143  00F5D6  0E00               	movlw	0
 42144  00F5D8  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 42145  00F5DA  0E00               	movlw	0
 42146  00F5DC  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 42147  00F5DE                     
 42148                           ;api.c: 389: --os.encoder2Count;
 42149                           
 42150                           ; BSR set to: 1
 42151  00F5DE  0101               	movlb	1	; () banked
 42152  00F5E0  076A               	decf	(_os+5)& (0+255),f,b	;volatile
 42153                           
 42154                           ;api.c: 390: break;
 42155  00F5E2  0012               	return	
 42156  00F5E4                     
 42157                           ;api.c: 393: ++os.encoder2Count;
 42158                           
 42159                           ; BSR set to: 1
 42160  00F5E4  0101               	movlb	1	; () banked
 42161  00F5E6  2B6A               	incf	(_os+5)& (0+255),f,b	;volatile
 42162                           
 42163                           ;api.c: 394: break;
 42164  00F5E8  0012               	return	
 42165  00F5EA                     
 42166                           ;api.c: 397: ++os.button2;
 42167                           
 42168                           ; BSR set to: 1
 42169  00F5EA  0101               	movlb	1	; () banked
 42170  00F5EC  2B6B               	incf	(_os+6)& (0+255),f,b	;volatile
 42171                           
 42172                           ;api.c: 398: break;
 42173  00F5EE  0012               	return	
 42174  00F5F0                     
 42175                           ;api.c: 401: --os.encoder1Count;
 42176                           
 42177                           ; BSR set to: 1
 42178  00F5F0  0101               	movlb	1	; () banked
 42179  00F5F2  0768               	decf	(_os+3)& (0+255),f,b	;volatile
 42180                           
 42181                           ;api.c: 402: break;
 42182  00F5F4  0012               	return	
 42183  00F5F6                     
 42184                           ;api.c: 405: ++os.encoder1Count;
 42185                           
 42186                           ; BSR set to: 1
 42187  00F5F6  0101               	movlb	1	; () banked
 42188  00F5F8  2B68               	incf	(_os+3)& (0+255),f,b	;volatile
 42189                           
 42190                           ;api.c: 406: break;
 42191  00F5FA  0012               	return	
 42192  00F5FC                     
 42193                           ;api.c: 409: ++os.button1;
 42194                           
 42195                           ; BSR set to: 1
 42196  00F5FC  0101               	movlb	1	; () banked
 42197  00F5FE  2B69               	incf	(_os+4)& (0+255),f,b	;volatile
 42198                           
 42199                           ;api.c: 410: break;
 42200  00F600  0012               	return	
 42201  00F602                     
 42202                           ;api.c: 413: if(!os.busy)
 42203                           
 42204                           ; BSR set to: 1
 42205  00F602  0101               	movlb	1	; () banked
 42206  00F604  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 42207  00F606  A4D8               	btfss	status,2,c
 42208  00F608  0012               	return	
 42209                           
 42210                           ; BSR set to: 1
 42211                           ;api.c: 414: {;api.c: 415: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42212  00F60A  0E84               	movlw	132
 42213  00F60C  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42214                           
 42215                           ; BSR set to: 1
 42216                           ;api.c: 416: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 42217  00F60E  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42218  00F612  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42219  00F616  0EFF               	movlw	255
 42220  00F618  EC08  F0AE         	call	_motor_move_endless
 42221                           
 42222                           ;api.c: 417: };api.c: 418: break;
 42223  00F61C  0012               	return	
 42224  00F61E                     
 42225                           ;api.c: 421: if(!os.busy)
 42226  00F61E  0101               	movlb	1	; () banked
 42227  00F620  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 42228  00F622  A4D8               	btfss	status,2,c
 42229  00F624  0012               	return	
 42230                           
 42231                           ; BSR set to: 1
 42232                           ;api.c: 422: {;api.c: 423: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42233  00F626  0E84               	movlw	132
 42234  00F628  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42235                           
 42236                           ; BSR set to: 1
 42237                           ;api.c: 424: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 42238  00F62A  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42239  00F62E  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42240  00F632  0E01               	movlw	1
 42241  00F634  EC08  F0AE         	call	_motor_move_endless
 42242                           
 42243                           ;api.c: 425: };api.c: 426: break;
 42244  00F638  0012               	return	
 42245  00F63A                     
 42246                           ;api.c: 429: if(os.busy)
 42247  00F63A  0101               	movlb	1	; () banked
 42248  00F63C  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 42249  00F63E  B4D8               	btfsc	status,2,c
 42250  00F640  0012               	return	
 42251                           
 42252                           ; BSR set to: 1
 42253                           ;api.c: 430: {;api.c: 431: motor_stop();
 42254  00F642  ECDB  F0A9         	call	_motor_stop	;wreg free
 42255                           
 42256                           ;api.c: 432: motor_clear_command_cue();
 42257  00F646  EC52  F0B0         	call	_motor_clear_command_cue	;wreg free
 42258                           
 42259                           ;api.c: 433: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42260  00F64A  0E82               	movlw	130
 42261  00F64C  0101               	movlb	1	; () banked
 42262  00F64E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42263                           
 42264                           ; BSR set to: 1
 42265                           ;api.c: 436: }
 42266                           
 42267                           ; BSR set to: 1
 42268                           ;api.c: 434: };api.c: 435: break;
 42269  00F650  0012               	return	
 42270  00F652                     l2326:
 42271                           
 42272                           ; BSR set to: 1
 42273  00F652  0100               	movlb	0	; () banked
 42274  00F654  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 42275                           
 42276                           ; Switch size 1, requested type "space"
 42277                           ; Number of cases is 20, Range of values is 32 to 56
 42278                           ; switch strategies available:
 42279                           ; Name         Instructions Cycles
 42280                           ; simple_byte           61    31 (average)
 42281                           ;	Chosen strategy is simple_byte
 42282  00F656  0A20               	xorlw	32	; case 32
 42283  00F658  B4D8               	btfsc	status,2,c
 42284  00F65A  D789               	goto	l2330
 42285  00F65C  0A01               	xorlw	1	; case 33
 42286  00F65E  B4D8               	btfsc	status,2,c
 42287  00F660  D78A               	goto	l2331
 42288  00F662  0A03               	xorlw	3	; case 34
 42289  00F664  B4D8               	btfsc	status,2,c
 42290  00F666  D78B               	goto	l2332
 42291  00F668  0A01               	xorlw	1	; case 35
 42292  00F66A  B4D8               	btfsc	status,2,c
 42293  00F66C  D78C               	goto	l2333
 42294  00F66E  0A07               	xorlw	7	; case 36
 42295  00F670  B4D8               	btfsc	status,2,c
 42296  00F672  D78D               	goto	l2334
 42297  00F674  0A01               	xorlw	1	; case 37
 42298  00F676  B4D8               	btfsc	status,2,c
 42299  00F678  D78E               	goto	l2335
 42300  00F67A  0A03               	xorlw	3	; case 38
 42301  00F67C  B4D8               	btfsc	status,2,c
 42302  00F67E  D78F               	goto	l2336
 42303  00F680  0A01               	xorlw	1	; case 39
 42304  00F682  B4D8               	btfsc	status,2,c
 42305  00F684  D790               	goto	l2337
 42306  00F686  0A0F               	xorlw	15	; case 40
 42307  00F688  B4D8               	btfsc	status,2,c
 42308  00F68A  D791               	goto	l2338
 42309  00F68C  0A01               	xorlw	1	; case 41
 42310  00F68E  B4D8               	btfsc	status,2,c
 42311  00F690  D756               	goto	l2327
 42312  00F692  0A03               	xorlw	3	; case 42
 42313  00F694  B4D8               	btfsc	status,2,c
 42314  00F696  D75F               	goto	l2329
 42315  00F698  0A1A               	xorlw	26	; case 48
 42316  00F69A  B4D8               	btfsc	status,2,c
 42317  00F69C  D7A0               	goto	l2339
 42318  00F69E  0A01               	xorlw	1	; case 49
 42319  00F6A0  B4D8               	btfsc	status,2,c
 42320  00F6A2  D7A0               	goto	l2340
 42321  00F6A4  0A03               	xorlw	3	; case 50
 42322  00F6A6  B4D8               	btfsc	status,2,c
 42323  00F6A8  D7A0               	goto	l2341
 42324  00F6AA  0A01               	xorlw	1	; case 51
 42325  00F6AC  B4D8               	btfsc	status,2,c
 42326  00F6AE  D7A0               	goto	l2342
 42327  00F6B0  0A07               	xorlw	7	; case 52
 42328  00F6B2  B4D8               	btfsc	status,2,c
 42329  00F6B4  D7A0               	goto	l2343
 42330  00F6B6  0A01               	xorlw	1	; case 53
 42331  00F6B8  B4D8               	btfsc	status,2,c
 42332  00F6BA  D7A0               	goto	l2344
 42333  00F6BC  0A03               	xorlw	3	; case 54
 42334  00F6BE  B4D8               	btfsc	status,2,c
 42335  00F6C0  D7A0               	goto	l2345
 42336  00F6C2  0A01               	xorlw	1	; case 55
 42337  00F6C4  B4D8               	btfsc	status,2,c
 42338  00F6C6  D7AB               	goto	l2347
 42339  00F6C8  0A0F               	xorlw	15	; case 56
 42340  00F6CA  A4D8               	btfss	status,2,c
 42341  00F6CC  0012               	return	
 42342  00F6CE  D7B5               	goto	l2349
 42343  00F6D0                     __end_of__parse_command_short:
 42344                           	opt stack 0
 42345                           tosu	equ	0xFFF
 42346                           tosh	equ	0xFFE
 42347                           tosl	equ	0xFFD
 42348                           pclath	equ	0xFFA
 42349                           tblptru	equ	0xFF8
 42350                           tblptrh	equ	0xFF7
 42351                           tblptrl	equ	0xFF6
 42352                           tablat	equ	0xFF5
 42353                           prodh	equ	0xFF4
 42354                           prodl	equ	0xFF3
 42355                           intcon	equ	0xFF2
 42356                           indf0	equ	0xFEF
 42357                           postinc0	equ	0xFEE
 42358                           fsr0h	equ	0xFEA
 42359                           fsr0l	equ	0xFE9
 42360                           wreg	equ	0xFE8
 42361                           indf1	equ	0xFE7
 42362                           postinc1	equ	0xFE6
 42363                           postdec1	equ	0xFE5
 42364                           plusw1	equ	0xFE3
 42365                           fsr1h	equ	0xFE2
 42366                           fsr1l	equ	0xFE1
 42367                           indf2	equ	0xFDF
 42368                           postinc2	equ	0xFDE
 42369                           postdec2	equ	0xFDD
 42370                           plusw2	equ	0xFDB
 42371                           fsr2h	equ	0xFDA
 42372                           fsr2l	equ	0xFD9
 42373                           status	equ	0xFD8
 42374                           
 42375 ;; *************** function _reboot *****************
 42376 ;; Defined at:
 42377 ;;		line 265 in file "os.c"
 42378 ;; Parameters:    Size  Location     Type
 42379 ;;		None
 42380 ;; Auto vars:     Size  Location     Type
 42381 ;;		None
 42382 ;; Return value:  Size  Location     Type
 42383 ;;                  1    wreg      void 
 42384 ;; Registers used:
 42385 ;;		None
 42386 ;; Tracked objects:
 42387 ;;		On entry : 0/0
 42388 ;;		On exit  : 0/0
 42389 ;;		Unchanged: 0/0
 42390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42395 ;;Total ram usage:        0 bytes
 42396 ;; Hardware stack levels used:    1
 42397 ;; Hardware stack levels required when called:   10
 42398 ;; This function calls:
 42399 ;;		Nothing
 42400 ;; This function is called by:
 42401 ;;		__parse_command_short
 42402 ;; This function uses a non-reentrant model
 42403 ;;
 42404                           
 42405                           	psect	text166
 42406  01612C                     __ptext166:
 42407                           	opt stack 0
 42408  01612C                     _reboot:
 42409                           	opt stack 17
 42410                           
 42411                           ;incstack = 0
 42412                           ;os.c: 268: while(1);
 42413  01612C  D7FF               	goto	_reboot
 42414  01612E                     __end_of_reboot:
 42415                           	opt stack 0
 42416                           tosu	equ	0xFFF
 42417                           tosh	equ	0xFFE
 42418                           tosl	equ	0xFFD
 42419                           pclath	equ	0xFFA
 42420                           tblptru	equ	0xFF8
 42421                           tblptrh	equ	0xFF7
 42422                           tblptrl	equ	0xFF6
 42423                           tablat	equ	0xFF5
 42424                           prodh	equ	0xFF4
 42425                           prodl	equ	0xFF3
 42426                           intcon	equ	0xFF2
 42427                           indf0	equ	0xFEF
 42428                           postinc0	equ	0xFEE
 42429                           fsr0h	equ	0xFEA
 42430                           fsr0l	equ	0xFE9
 42431                           wreg	equ	0xFE8
 42432                           indf1	equ	0xFE7
 42433                           postinc1	equ	0xFE6
 42434                           postdec1	equ	0xFE5
 42435                           plusw1	equ	0xFE3
 42436                           fsr1h	equ	0xFE2
 42437                           fsr1l	equ	0xFE1
 42438                           indf2	equ	0xFDF
 42439                           postinc2	equ	0xFDE
 42440                           postdec2	equ	0xFDD
 42441                           plusw2	equ	0xFDB
 42442                           fsr2h	equ	0xFDA
 42443                           fsr2l	equ	0xFD9
 42444                           status	equ	0xFD8
 42445                           
 42446 ;; *************** function _motor_stop *****************
 42447 ;; Defined at:
 42448 ;;		line 853 in file "motor.c"
 42449 ;; Parameters:    Size  Location     Type
 42450 ;;		None
 42451 ;; Auto vars:     Size  Location     Type
 42452 ;;		None
 42453 ;; Return value:  Size  Location     Type
 42454 ;;                  1    wreg      void 
 42455 ;; Registers used:
 42456 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 42457 ;; Tracked objects:
 42458 ;;		On entry : 0/0
 42459 ;;		On exit  : 0/0
 42460 ;;		Unchanged: 0/0
 42461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42464 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42465 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42466 ;;Total ram usage:        2 bytes
 42467 ;; Hardware stack levels used:    1
 42468 ;; Hardware stack levels required when called:   10
 42469 ;; This function calls:
 42470 ;;		Nothing
 42471 ;; This function is called by:
 42472 ;;		__parse_command_short
 42473 ;;		_encoder_statemachine
 42474 ;; This function uses a non-reentrant model
 42475 ;;
 42476                           
 42477                           	psect	text167
 42478  0153B6                     __ptext167:
 42479                           	opt stack 0
 42480  0153B6                     _motor_stop:
 42481                           	opt stack 19
 42482                           
 42483                           ;motor.c: 856: INTCONbits.GIE = 0;
 42484                           
 42485                           ;incstack = 0
 42486  0153B6  9EF2               	bcf	intcon,7,c	;volatile
 42487                           
 42488                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 42489  0153B8  0E00               	movlw	0
 42490  0153BA  0101               	movlb	1	; () banked
 42491  0153BC  6F4B               	movwf	_motor_move_type& (0+255),b
 42492                           
 42493                           ; BSR set to: 1
 42494                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 42495  0153BE  90D8               	bcf	status,0,c
 42496  0153C0  3457               	rlcf	_motor_current_speed,w,c	;volatile
 42497  0153C2  6EF6               	movwf	tblptrl,c
 42498  0153C4  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 42499  0153C6  6EF7               	movwf	tblptrh,c
 42500  0153C8  0E61               	movlw	low _motor_steps_lookup
 42501  0153CA  26F6               	addwf	tblptrl,f,c
 42502  0153CC  0E94               	movlw	high _motor_steps_lookup
 42503  0153CE  22F7               	addwfc	tblptrh,f,c
 42504  0153D0                     	if	1	;There are 3 active tblptr bytes
 42505  0153D0  6AF8               	clrf	tblptru,c
 42506  0153D2  0E00               	movlw	low (__mediumconst shr (0+16))
 42507  0153D4  22F8               	addwfc	tblptru,f,c
 42508  0153D6                     	endif
 42509  0153D6  0009               	tblrd		*+
 42510  0153D8  CFF5 F060          	movff	tablat,??_motor_stop
 42511  0153DC  0009               	tblrd		*+
 42512  0153DE  CFF5 F061          	movff	tablat,??_motor_stop+1
 42513  0153E2  0100               	movlb	0	; () banked
 42514  0153E4  5160               	movf	??_motor_stop& (0+255),w,b
 42515  0153E6  0101               	movlb	1	; () banked
 42516  0153E8  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 42517  0153EA  6F1B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42518  0153EC  0100               	movlb	0	; () banked
 42519  0153EE  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 42520  0153F0  0101               	movlb	1	; () banked
 42521  0153F2  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 42522  0153F4  6F1C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42523  0153F6  0E00               	movlw	0
 42524  0153F8  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 42525  0153FA  6F1D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42526  0153FC  0E00               	movlw	0
 42527  0153FE  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 42528  015400  6F1E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42529                           
 42530                           ; BSR set to: 1
 42531                           ;motor.c: 863: INTCONbits.GIE = 1;
 42532  015402  8EF2               	bsf	intcon,7,c	;volatile
 42533                           
 42534                           ; BSR set to: 1
 42535  015404  0012               	return		;funcret
 42536  015406                     __end_of_motor_stop:
 42537                           	opt stack 0
 42538                           tosu	equ	0xFFF
 42539                           tosh	equ	0xFFE
 42540                           tosl	equ	0xFFD
 42541                           pclath	equ	0xFFA
 42542                           tblptru	equ	0xFF8
 42543                           tblptrh	equ	0xFF7
 42544                           tblptrl	equ	0xFF6
 42545                           tablat	equ	0xFF5
 42546                           prodh	equ	0xFF4
 42547                           prodl	equ	0xFF3
 42548                           intcon	equ	0xFF2
 42549                           indf0	equ	0xFEF
 42550                           postinc0	equ	0xFEE
 42551                           fsr0h	equ	0xFEA
 42552                           fsr0l	equ	0xFE9
 42553                           wreg	equ	0xFE8
 42554                           indf1	equ	0xFE7
 42555                           postinc1	equ	0xFE6
 42556                           postdec1	equ	0xFE5
 42557                           plusw1	equ	0xFE3
 42558                           fsr1h	equ	0xFE2
 42559                           fsr1l	equ	0xFE1
 42560                           indf2	equ	0xFDF
 42561                           postinc2	equ	0xFDE
 42562                           postdec2	equ	0xFDD
 42563                           plusw2	equ	0xFDB
 42564                           fsr2h	equ	0xFDA
 42565                           fsr2l	equ	0xFD9
 42566                           status	equ	0xFD8
 42567                           
 42568 ;; *************** function _motor_set_zero *****************
 42569 ;; Defined at:
 42570 ;;		line 977 in file "motor.c"
 42571 ;; Parameters:    Size  Location     Type
 42572 ;;  direction       1    wreg     enum E6622
 42573 ;; Auto vars:     Size  Location     Type
 42574 ;;  direction       1   10[BANK0 ] enum E6622
 42575 ;; Return value:  Size  Location     Type
 42576 ;;                  1    wreg      void 
 42577 ;; Registers used:
 42578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42579 ;; Tracked objects:
 42580 ;;		On entry : 0/0
 42581 ;;		On exit  : 0/0
 42582 ;;		Unchanged: 0/0
 42583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42585 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42587 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42588 ;;Total ram usage:        1 bytes
 42589 ;; Hardware stack levels used:    1
 42590 ;; Hardware stack levels required when called:   13
 42591 ;; This function calls:
 42592 ;;		__motor_move_back_forth
 42593 ;; This function is called by:
 42594 ;;		__parse_command_short
 42595 ;;		_encoder_statemachine
 42596 ;; This function uses a non-reentrant model
 42597 ;;
 42598                           
 42599                           	psect	text168
 42600  015828                     __ptext168:
 42601                           	opt stack 0
 42602  015828                     _motor_set_zero:
 42603                           	opt stack 16
 42604                           
 42605                           ; BSR set to: 1
 42606                           ;incstack = 0
 42607                           ;motor_set_zero@direction stored from wreg
 42608  015828  0100               	movlb	0	; () banked
 42609  01582A  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 42610                           
 42611                           ;motor.c: 980: os.approach_direction = direction;
 42612  01582C  C06A  F178         	movff	motor_set_zero@direction,_os+19	;volatile
 42613                           
 42614                           ;motor.c: 981: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42615  015830  0E01               	movlw	1
 42616  015832  0101               	movlb	1	; () banked
 42617  015834  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42618                           
 42619                           ; BSR set to: 1
 42620                           ;motor.c: 982: os.current_position_in_steps = 0;
 42621  015836  0E00               	movlw	0
 42622  015838  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 42623  01583A  0E00               	movlw	0
 42624  01583C  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 42625  01583E  0E00               	movlw	0
 42626  015840  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 42627  015842  0E00               	movlw	0
 42628  015844  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 42629                           
 42630                           ; BSR set to: 1
 42631                           ;motor.c: 983: os.absolute_position = 0;
 42632  015846  0E00               	movlw	0
 42633  015848  6F71               	movwf	(_os+12)& (0+255),b	;volatile
 42634  01584A  0E00               	movlw	0
 42635  01584C  6F70               	movwf	(_os+11)& (0+255),b	;volatile
 42636                           
 42637                           ; BSR set to: 1
 42638                           ;motor.c: 984: os.current_position_in_degrees = 0;
 42639  01584E  0E00               	movlw	0
 42640  015850  6F73               	movwf	(_os+14)& (0+255),b	;volatile
 42641  015852  0E00               	movlw	0
 42642  015854  6F72               	movwf	(_os+13)& (0+255),b	;volatile
 42643                           
 42644                           ; BSR set to: 1
 42645                           ;motor.c: 985: os.divide_position = 0;
 42646  015856  0E00               	movlw	0
 42647  015858  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 42648  01585A  0E00               	movlw	0
 42649  01585C  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 42650                           
 42651                           ; BSR set to: 1
 42652                           ;motor.c: 988: _motor_move_back_forth();
 42653  01585E  EC81  F09A         	call	__motor_move_back_forth	;wreg free
 42654  015862  0012               	return		;funcret
 42655  015864                     __end_of_motor_set_zero:
 42656                           	opt stack 0
 42657                           tosu	equ	0xFFF
 42658                           tosh	equ	0xFFE
 42659                           tosl	equ	0xFFD
 42660                           pclath	equ	0xFFA
 42661                           tblptru	equ	0xFF8
 42662                           tblptrh	equ	0xFF7
 42663                           tblptrl	equ	0xFF6
 42664                           tablat	equ	0xFF5
 42665                           prodh	equ	0xFF4
 42666                           prodl	equ	0xFF3
 42667                           intcon	equ	0xFF2
 42668                           indf0	equ	0xFEF
 42669                           postinc0	equ	0xFEE
 42670                           fsr0h	equ	0xFEA
 42671                           fsr0l	equ	0xFE9
 42672                           wreg	equ	0xFE8
 42673                           indf1	equ	0xFE7
 42674                           postinc1	equ	0xFE6
 42675                           postdec1	equ	0xFE5
 42676                           plusw1	equ	0xFE3
 42677                           fsr1h	equ	0xFE2
 42678                           fsr1l	equ	0xFE1
 42679                           indf2	equ	0xFDF
 42680                           postinc2	equ	0xFDE
 42681                           postdec2	equ	0xFDD
 42682                           plusw2	equ	0xFDB
 42683                           fsr2h	equ	0xFDA
 42684                           fsr2l	equ	0xFD9
 42685                           status	equ	0xFD8
 42686                           
 42687 ;; *************** function __motor_move_back_forth *****************
 42688 ;; Defined at:
 42689 ;;		line 296 in file "motor.c"
 42690 ;; Parameters:    Size  Location     Type
 42691 ;;		None
 42692 ;; Auto vars:     Size  Location     Type
 42693 ;;  return_value    1    9[BANK0 ] enum E6639
 42694 ;;  return_value    1    8[BANK0 ] enum E6639
 42695 ;; Return value:  Size  Location     Type
 42696 ;;                  1    wreg      enum E6639
 42697 ;; Registers used:
 42698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42699 ;; Tracked objects:
 42700 ;;		On entry : 0/0
 42701 ;;		On exit  : 0/0
 42702 ;;		Unchanged: 0/0
 42703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42705 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42708 ;;Total ram usage:        2 bytes
 42709 ;; Hardware stack levels used:    1
 42710 ;; Hardware stack levels required when called:   12
 42711 ;; This function calls:
 42712 ;;		__motor_schedule_command
 42713 ;;		_motor_items_in_cue
 42714 ;; This function is called by:
 42715 ;;		_motor_set_zero
 42716 ;; This function uses a non-reentrant model
 42717 ;;
 42718                           
 42719                           	psect	text169
 42720  013502                     __ptext169:
 42721                           	opt stack 0
 42722  013502                     __motor_move_back_forth:
 42723                           	opt stack 16
 42724                           
 42725                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 42726                           
 42727                           ;incstack = 0
 42728  013502  0101               	movlb	1	; () banked
 42729  013504  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 42730  013506  A4D8               	btfss	status,2,c
 42731  013508  0012               	return	
 42732                           
 42733                           ; BSR set to: 1
 42734  01350A  EC58  F0B0         	call	_motor_items_in_cue	;wreg free
 42735  01350E  0900               	iorlw	0
 42736  013510  A4D8               	btfss	status,2,c
 42737  013512  0012               	return	
 42738                           
 42739                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 42740                           
 42741                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 42742  013514  0101               	movlb	1	; () banked
 42743  013516  519B               	movf	(_config+5)& (0+255),w,b
 42744  013518  119C               	iorwf	(_config+6)& (0+255),w,b
 42745  01351A  B4D8               	btfsc	status,2,c
 42746  01351C  0012               	return	
 42747                           
 42748                           ; BSR set to: 1
 42749                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 42750                           
 42751                           ; BSR set to: 1
 42752                           
 42753                           ; BSR set to: 1
 42754                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 42755  01351E  0578               	decf	(_os+19)& (0+255),w,b	;volatile
 42756  013520  A4D8               	btfss	status,2,c
 42757  013522  D022               	goto	l2501
 42758                           
 42759                           ; BSR set to: 1
 42760                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42761  013524  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42762  013528  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42763  01352C  0100               	movlb	0	; () banked
 42764  01352E  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42765  013530  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42766  013532  0EFF               	movlw	255
 42767  013534  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42768  013536  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42769  013538  0E00               	movlw	0
 42770  01353A  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42771  01353C  0EFF               	movlw	255
 42772  01353E  EC2E  F08F         	call	__motor_schedule_command
 42773  013542  0100               	movlb	0	; () banked
 42774  013544  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 42775                           
 42776                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42777  013546  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42778  01354A  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42779  01354E  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42780  013550  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42781  013552  0EFF               	movlw	255
 42782  013554  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42783  013556  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42784  013558  0E00               	movlw	0
 42785  01355A  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42786  01355C  0E01               	movlw	1
 42787  01355E  EC2E  F08F         	call	__motor_schedule_command
 42788  013562  0100               	movlb	0	; () banked
 42789  013564  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 42790                           
 42791                           ;motor.c: 317: }
 42792  013566  0012               	return	
 42793  013568                     l2501:
 42794                           
 42795                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42796                           
 42797                           ; BSR set to: 0
 42798  013568  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42799  01356C  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42800  013570  0100               	movlb	0	; () banked
 42801  013572  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42802  013574  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42803  013576  0EFF               	movlw	255
 42804  013578  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42805  01357A  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42806  01357C  0E00               	movlw	0
 42807  01357E  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42808  013580  0E01               	movlw	1
 42809  013582  EC2E  F08F         	call	__motor_schedule_command
 42810  013586  0100               	movlb	0	; () banked
 42811  013588  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 42812                           
 42813                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42814  01358A  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42815  01358E  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42816  013592  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42817  013594  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42818  013596  0EFF               	movlw	255
 42819  013598  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42820  01359A  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42821  01359C  0E00               	movlw	0
 42822  01359E  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42823  0135A0  0EFF               	movlw	255
 42824  0135A2  EC2E  F08F         	call	__motor_schedule_command
 42825  0135A6  0100               	movlb	0	; () banked
 42826  0135A8  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 42827                           
 42828                           ; BSR set to: 0
 42829                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 42830                           
 42831                           ; BSR set to: 0
 42832                           ;motor.c: 329: }
 42833                           
 42834                           ; BSR set to: 0
 42835                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 42836                           
 42837                           ; BSR set to: 0
 42838                           
 42839                           ; BSR set to: 0
 42840  0135AA  0012               	return	
 42841  0135AC                     __end_of__motor_move_back_forth:
 42842                           	opt stack 0
 42843                           tosu	equ	0xFFF
 42844                           tosh	equ	0xFFE
 42845                           tosl	equ	0xFFD
 42846                           pclath	equ	0xFFA
 42847                           tblptru	equ	0xFF8
 42848                           tblptrh	equ	0xFF7
 42849                           tblptrl	equ	0xFF6
 42850                           tablat	equ	0xFF5
 42851                           prodh	equ	0xFF4
 42852                           prodl	equ	0xFF3
 42853                           intcon	equ	0xFF2
 42854                           indf0	equ	0xFEF
 42855                           postinc0	equ	0xFEE
 42856                           fsr0h	equ	0xFEA
 42857                           fsr0l	equ	0xFE9
 42858                           wreg	equ	0xFE8
 42859                           indf1	equ	0xFE7
 42860                           postinc1	equ	0xFE6
 42861                           postdec1	equ	0xFE5
 42862                           plusw1	equ	0xFE3
 42863                           fsr1h	equ	0xFE2
 42864                           fsr1l	equ	0xFE1
 42865                           indf2	equ	0xFDF
 42866                           postinc2	equ	0xFDE
 42867                           postdec2	equ	0xFDD
 42868                           plusw2	equ	0xFDB
 42869                           fsr2h	equ	0xFDA
 42870                           fsr2l	equ	0xFD9
 42871                           status	equ	0xFD8
 42872                           
 42873 ;; *************** function _motor_move_endless *****************
 42874 ;; Defined at:
 42875 ;;		line 1109 in file "motor.c"
 42876 ;; Parameters:    Size  Location     Type
 42877 ;;  direction       1    wreg     enum E6622
 42878 ;;  speed           2   44[BANK0 ] unsigned int 
 42879 ;; Auto vars:     Size  Location     Type
 42880 ;;  direction       1   46[BANK0 ] enum E6622
 42881 ;; Return value:  Size  Location     Type
 42882 ;;                  1    wreg      enum E6782
 42883 ;; Registers used:
 42884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42885 ;; Tracked objects:
 42886 ;;		On entry : 0/0
 42887 ;;		On exit  : 0/0
 42888 ;;		Unchanged: 0/0
 42889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42893 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42894 ;;Total ram usage:        3 bytes
 42895 ;; Hardware stack levels used:    1
 42896 ;; Hardware stack levels required when called:   13
 42897 ;; This function calls:
 42898 ;;		__motor_move_steps
 42899 ;; This function is called by:
 42900 ;;		__parse_command_short
 42901 ;;		_encoder_statemachine
 42902 ;; This function uses a non-reentrant model
 42903 ;;
 42904                           
 42905                           	psect	text170
 42906  015C10                     __ptext170:
 42907                           	opt stack 0
 42908  015C10                     _motor_move_endless:
 42909                           	opt stack 16
 42910                           
 42911                           ;incstack = 0
 42912                           ;motor_move_endless@direction stored from wreg
 42913  015C10  0100               	movlb	0	; () banked
 42914  015C12  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 42915                           
 42916                           ;motor.c: 1111: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 42917  015C14  0EFF               	movlw	255
 42918  015C16  0100               	movlb	0	; () banked
 42919  015C18  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 42920  015C1A  0EFF               	movlw	255
 42921  015C1C  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 42922  015C1E  0EFF               	movlw	255
 42923  015C20  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 42924  015C22  0EFF               	movlw	255
 42925  015C24  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 42926  015C26  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 42927  015C2A  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 42928  015C2E  0E01               	movlw	1
 42929  015C30  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 42930  015C32  0E01               	movlw	1
 42931  015C34  6F84               	movwf	__motor_move_steps@type& (0+255),b
 42932  015C36  518E               	movf	motor_move_endless@direction& (0+255),w,b
 42933  015C38  EC2E  F077         	call	__motor_move_steps
 42934  015C3C  0012               	return	
 42935  015C3E                     __end_of_motor_move_endless:
 42936                           	opt stack 0
 42937                           tosu	equ	0xFFF
 42938                           tosh	equ	0xFFE
 42939                           tosl	equ	0xFFD
 42940                           pclath	equ	0xFFA
 42941                           tblptru	equ	0xFF8
 42942                           tblptrh	equ	0xFF7
 42943                           tblptrl	equ	0xFF6
 42944                           tablat	equ	0xFF5
 42945                           prodh	equ	0xFF4
 42946                           prodl	equ	0xFF3
 42947                           intcon	equ	0xFF2
 42948                           indf0	equ	0xFEF
 42949                           postinc0	equ	0xFEE
 42950                           fsr0h	equ	0xFEA
 42951                           fsr0l	equ	0xFE9
 42952                           wreg	equ	0xFE8
 42953                           indf1	equ	0xFE7
 42954                           postinc1	equ	0xFE6
 42955                           postdec1	equ	0xFE5
 42956                           plusw1	equ	0xFE3
 42957                           fsr1h	equ	0xFE2
 42958                           fsr1l	equ	0xFE1
 42959                           indf2	equ	0xFDF
 42960                           postinc2	equ	0xFDE
 42961                           postdec2	equ	0xFDD
 42962                           plusw2	equ	0xFDB
 42963                           fsr2h	equ	0xFDA
 42964                           fsr2l	equ	0xFD9
 42965                           status	equ	0xFD8
 42966                           
 42967 ;; *************** function _motor_goto_steps *****************
 42968 ;; Defined at:
 42969 ;;		line 1032 in file "motor.c"
 42970 ;; Parameters:    Size  Location     Type
 42971 ;;  direction       1    wreg     enum E6622
 42972 ;;  position        4   50[BANK0 ] unsigned long 
 42973 ;;  speed           2   54[BANK0 ] unsigned int 
 42974 ;;  overshoot       1   56[BANK0 ] enum E6635
 42975 ;; Auto vars:     Size  Location     Type
 42976 ;;  direction       1   61[BANK0 ] enum E6622
 42977 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 42978 ;; Return value:  Size  Location     Type
 42979 ;;                  1    wreg      enum E6782
 42980 ;; Registers used:
 42981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42982 ;; Tracked objects:
 42983 ;;		On entry : 0/0
 42984 ;;		On exit  : 0/0
 42985 ;;		Unchanged: 0/0
 42986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42987 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42988 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42990 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42991 ;;Total ram usage:       12 bytes
 42992 ;; Hardware stack levels used:    1
 42993 ;; Hardware stack levels required when called:   13
 42994 ;; This function calls:
 42995 ;;		__motor_calculate_distance
 42996 ;;		__motor_decide_direction
 42997 ;;		__motor_move_steps
 42998 ;; This function is called by:
 42999 ;;		__parse_command_short
 43000 ;;		_motor_divide_jump
 43001 ;;		_motor_divide_jump_to_nearest
 43002 ;;		_encoder_statemachine
 43003 ;; This function uses a non-reentrant model
 43004 ;;
 43005                           
 43006                           	psect	text171
 43007  0138E0                     __ptext171:
 43008                           	opt stack 0
 43009  0138E0                     _motor_goto_steps:
 43010                           	opt stack 16
 43011                           
 43012                           ;incstack = 0
 43013                           ;motor_goto_steps@direction stored from wreg
 43014  0138E0  0100               	movlb	0	; () banked
 43015  0138E2  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43016                           
 43017                           ;motor.c: 1034: uint32_t distance_in_steps;;motor.c: 1036: if(position>=config.full_circ
      +                          le_in_steps)
 43018  0138E4  0101               	movlb	1	; () banked
 43019  0138E6  5196               	movf	_config& (0+255),w,b
 43020  0138E8  0100               	movlb	0	; () banked
 43021  0138EA  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 43022  0138EC  0101               	movlb	1	; () banked
 43023  0138EE  5197               	movf	(_config+1)& (0+255),w,b
 43024  0138F0  0100               	movlb	0	; () banked
 43025  0138F2  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 43026  0138F4  0101               	movlb	1	; () banked
 43027  0138F6  5198               	movf	(_config+2)& (0+255),w,b
 43028  0138F8  0100               	movlb	0	; () banked
 43029  0138FA  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 43030  0138FC  0101               	movlb	1	; () banked
 43031  0138FE  5199               	movf	(_config+3)& (0+255),w,b
 43032  013900  0100               	movlb	0	; () banked
 43033  013902  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 43034  013904  B0D8               	btfsc	status,0,c
 43035  013906  0012               	return	
 43036                           
 43037                           ; BSR set to: 0
 43038                           ;motor.c: 1040: };motor.c: 1043: if(direction==MOTOR_DIRECTION_SHORTEST)
 43039                           
 43040                           ; BSR set to: 0
 43041                           
 43042                           ; BSR set to: 0
 43043                           ;motor.c: 1037: {;motor.c: 1039: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 43044  013908  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43045  01390A  A4D8               	btfss	status,2,c
 43046  01390C  D00E               	goto	l2660
 43047                           
 43048                           ; BSR set to: 0
 43049                           ;motor.c: 1044: {;motor.c: 1045: direction = _motor_decide_direction(position, overshoot
      +                          );
 43050  01390E  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 43051  013912  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 43052  013916  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 43053  01391A  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 43054  01391E  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 43055  013922  EC68  F07B         	call	__motor_decide_direction	;wreg free
 43056  013926  0100               	movlb	0	; () banked
 43057  013928  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43058  01392A                     l2660:
 43059                           
 43060                           ; BSR set to: 0
 43061                           ;motor.c: 1046: };motor.c: 1049: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 43062                           
 43063                           ; BSR set to: 0
 43064  01392A  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 43065  01392E  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 43066  013932  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 43067  013936  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 43068  01393A  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43069  01393C  EC50  F092         	call	__motor_calculate_distance
 43070  013940  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 43071  013944  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 43072  013948  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 43073  01394C  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 43074                           
 43075                           ;motor.c: 1052: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 43076  013950  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 43077  013954  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 43078  013958  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 43079  01395C  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 43080  013960  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 43081  013964  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 43082  013968  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 43083  01396C  0E00               	movlw	0
 43084  01396E  0100               	movlb	0	; () banked
 43085  013970  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43086  013972  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43087  013974  EC2E  F077         	call	__motor_move_steps
 43088  013978  0012               	return	
 43089  01397A                     __end_of_motor_goto_steps:
 43090                           	opt stack 0
 43091                           tosu	equ	0xFFF
 43092                           tosh	equ	0xFFE
 43093                           tosl	equ	0xFFD
 43094                           pclath	equ	0xFFA
 43095                           tblptru	equ	0xFF8
 43096                           tblptrh	equ	0xFF7
 43097                           tblptrl	equ	0xFF6
 43098                           tablat	equ	0xFF5
 43099                           prodh	equ	0xFF4
 43100                           prodl	equ	0xFF3
 43101                           intcon	equ	0xFF2
 43102                           indf0	equ	0xFEF
 43103                           postinc0	equ	0xFEE
 43104                           fsr0h	equ	0xFEA
 43105                           fsr0l	equ	0xFE9
 43106                           wreg	equ	0xFE8
 43107                           indf1	equ	0xFE7
 43108                           postinc1	equ	0xFE6
 43109                           postdec1	equ	0xFE5
 43110                           plusw1	equ	0xFE3
 43111                           fsr1h	equ	0xFE2
 43112                           fsr1l	equ	0xFE1
 43113                           indf2	equ	0xFDF
 43114                           postinc2	equ	0xFDE
 43115                           postdec2	equ	0xFDD
 43116                           plusw2	equ	0xFDB
 43117                           fsr2h	equ	0xFDA
 43118                           fsr2l	equ	0xFD9
 43119                           status	equ	0xFD8
 43120                           
 43121 ;; *************** function __motor_decide_direction *****************
 43122 ;; Defined at:
 43123 ;;		line 336 in file "motor.c"
 43124 ;; Parameters:    Size  Location     Type
 43125 ;;  target_posit    4   29[BANK0 ] unsigned long 
 43126 ;;  overshoot       1   33[BANK0 ] enum E6635
 43127 ;; Auto vars:     Size  Location     Type
 43128 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 43129 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 43130 ;;  distance_to_    4   38[BANK0 ] long 
 43131 ;;  distance_to_    4   34[BANK0 ] long 
 43132 ;; Return value:  Size  Location     Type
 43133 ;;                  1    wreg      enum E6622
 43134 ;; Registers used:
 43135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43136 ;; Tracked objects:
 43137 ;;		On entry : 0/0
 43138 ;;		On exit  : 0/0
 43139 ;;		Unchanged: 0/0
 43140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43141 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43142 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43144 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43145 ;;Total ram usage:       21 bytes
 43146 ;; Hardware stack levels used:    1
 43147 ;; Hardware stack levels required when called:   12
 43148 ;; This function calls:
 43149 ;;		__motor_calculate_distance
 43150 ;;		__motor_distance_to_limit
 43151 ;; This function is called by:
 43152 ;;		_motor_goto_steps
 43153 ;;		_motor_goto_degrees_float
 43154 ;;		_motor_goto_degrees_int
 43155 ;; This function uses a non-reentrant model
 43156 ;;
 43157                           
 43158                           	psect	text172
 43159  00F6D0                     __ptext172:
 43160                           	opt stack 0
 43161  00F6D0                     __motor_decide_direction:
 43162                           	opt stack 16
 43163                           
 43164                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 43165                           
 43166                           ;incstack = 0
 43167  00F6D0  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43168  00F6D4  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43169  00F6D8  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43170  00F6DC  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43171  00F6E0  0E01               	movlw	1
 43172  00F6E2  EC50  F092         	call	__motor_calculate_distance
 43173  00F6E6  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 43174  00F6EA  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 43175  00F6EE  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 43176  00F6F2  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 43177                           
 43178                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 43179  00F6F6  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43180  00F6FA  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43181  00F6FE  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43182  00F702  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43183  00F706  0EFF               	movlw	255
 43184  00F708  EC50  F092         	call	__motor_calculate_distance
 43185  00F70C  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 43186  00F710  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 43187  00F714  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 43188  00F718  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 43189                           
 43190                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 43191  00F71C  0E01               	movlw	1
 43192  00F71E  EC58  F080         	call	__motor_distance_to_limit
 43193  00F722  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 43194  00F726  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 43195  00F72A  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 43196  00F72E  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 43197                           
 43198                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 43199  00F732  0EFF               	movlw	255
 43200  00F734  EC58  F080         	call	__motor_distance_to_limit
 43201  00F738  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 43202  00F73C  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 43203  00F740  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 43204  00F744  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 43205                           
 43206                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 43207  00F748  0100               	movlb	0	; () banked
 43208  00F74A  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43209  00F74C  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43210  00F74E  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43211  00F750  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43212  00F752  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43213  00F754  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43214  00F756  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43215  00F758  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43216  00F75A  B0D8               	btfsc	status,0,c
 43217  00F75C  D00C               	goto	l2507
 43218                           
 43219                           ; BSR set to: 0
 43220  00F75E  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43221  00F760  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43222  00F762  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43223  00F764  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43224  00F766  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43225  00F768  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43226  00F76A  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43227  00F76C  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43228  00F76E  B0D8               	btfsc	status,0,c
 43229  00F770  D002               	goto	l2507
 43230                           
 43231                           ; BSR set to: 0
 43232                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 43233  00F772  0E00               	movlw	0
 43234                           
 43235                           ; BSR set to: 0
 43236  00F774  0012               	return	
 43237  00F776                     l2507:
 43238                           
 43239                           ; BSR set to: 0
 43240                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 43241                           
 43242                           ; BSR set to: 0
 43243  00F776  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43244  00F778  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43245  00F77A  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43246  00F77C  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43247  00F77E  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43248  00F780  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43249  00F782  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43250  00F784  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43251  00F786  B0D8               	btfsc	status,0,c
 43252  00F788  D002               	goto	l2509
 43253                           
 43254                           ; BSR set to: 0
 43255                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 43256  00F78A  0EFF               	movlw	255
 43257                           
 43258                           ; BSR set to: 0
 43259  00F78C  0012               	return	
 43260  00F78E                     l2509:
 43261                           
 43262                           ; BSR set to: 0
 43263                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 43264                           
 43265                           ; BSR set to: 0
 43266  00F78E  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43267  00F790  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43268  00F792  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43269  00F794  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43270  00F796  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43271  00F798  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43272  00F79A  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43273  00F79C  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43274  00F79E  B0D8               	btfsc	status,0,c
 43275  00F7A0  D002               	goto	l2510
 43276                           
 43277                           ; BSR set to: 0
 43278                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 43279  00F7A2  0E01               	movlw	1
 43280                           
 43281                           ; BSR set to: 0
 43282  00F7A4  0012               	return	
 43283  00F7A6                     l2510:
 43284                           
 43285                           ; BSR set to: 0
 43286                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 43287                           
 43288                           ; BSR set to: 0
 43289  00F7A6  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 43290  00F7A8  A4D8               	btfss	status,2,c
 43291  00F7AA  D04E               	goto	l2513
 43292                           
 43293                           ; BSR set to: 0
 43294                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43295  00F7AC  0101               	movlb	1	; () banked
 43296  00F7AE  0578               	decf	(_os+19)& (0+255),w,b	;volatile
 43297  00F7B0  A4D8               	btfss	status,2,c
 43298  00F7B2  D023               	goto	l2512
 43299                           
 43300                           ; BSR set to: 1
 43301                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 43302  00F7B4  519B               	movf	(_config+5)& (0+255),w,b
 43303  00F7B6  0100               	movlb	0	; () banked
 43304  00F7B8  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43305  00F7BA  0101               	movlb	1	; () banked
 43306  00F7BC  519C               	movf	(_config+6)& (0+255),w,b
 43307  00F7BE  0100               	movlb	0	; () banked
 43308  00F7C0  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43309  00F7C2  0E00               	movlw	0
 43310  00F7C4  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43311  00F7C6  0E00               	movlw	0
 43312  00F7C8  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43313                           
 43314                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 43315  00F7CA  0101               	movlb	1	; () banked
 43316  00F7CC  519B               	movf	(_config+5)& (0+255),w,b
 43317  00F7CE  0100               	movlb	0	; () banked
 43318  00F7D0  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43319  00F7D2  0101               	movlb	1	; () banked
 43320  00F7D4  519C               	movf	(_config+6)& (0+255),w,b
 43321  00F7D6  0100               	movlb	0	; () banked
 43322  00F7D8  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43323  00F7DA  0E00               	movlw	0
 43324  00F7DC  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43325  00F7DE  0E00               	movlw	0
 43326  00F7E0  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43327                           
 43328                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 43329  00F7E2  0101               	movlb	1	; () banked
 43330  00F7E4  519D               	movf	(_config+7)& (0+255),w,b
 43331  00F7E6  0100               	movlb	0	; () banked
 43332  00F7E8  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43333  00F7EA  0101               	movlb	1	; () banked
 43334  00F7EC  519E               	movf	(_config+8)& (0+255),w,b
 43335  00F7EE  0100               	movlb	0	; () banked
 43336  00F7F0  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43337  00F7F2  0E00               	movlw	0
 43338  00F7F4  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43339  00F7F6  0E00               	movlw	0
 43340  00F7F8  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43341  00F7FA                     l2512:
 43342                           
 43343                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 43344                           
 43345                           ; BSR set to: 0
 43346  00F7FA  0101               	movlb	1	; () banked
 43347  00F7FC  2978               	incf	(_os+19)& (0+255),w,b	;volatile
 43348  00F7FE  A4D8               	btfss	status,2,c
 43349  00F800  D023               	goto	l2513
 43350                           
 43351                           ; BSR set to: 1
 43352                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 43353  00F802  519B               	movf	(_config+5)& (0+255),w,b
 43354  00F804  0100               	movlb	0	; () banked
 43355  00F806  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43356  00F808  0101               	movlb	1	; () banked
 43357  00F80A  519C               	movf	(_config+6)& (0+255),w,b
 43358  00F80C  0100               	movlb	0	; () banked
 43359  00F80E  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43360  00F810  0E00               	movlw	0
 43361  00F812  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43362  00F814  0E00               	movlw	0
 43363  00F816  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43364                           
 43365                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 43366  00F818  0101               	movlb	1	; () banked
 43367  00F81A  519B               	movf	(_config+5)& (0+255),w,b
 43368  00F81C  0100               	movlb	0	; () banked
 43369  00F81E  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43370  00F820  0101               	movlb	1	; () banked
 43371  00F822  519C               	movf	(_config+6)& (0+255),w,b
 43372  00F824  0100               	movlb	0	; () banked
 43373  00F826  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43374  00F828  0E00               	movlw	0
 43375  00F82A  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43376  00F82C  0E00               	movlw	0
 43377  00F82E  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43378                           
 43379                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 43380  00F830  0101               	movlb	1	; () banked
 43381  00F832  519D               	movf	(_config+7)& (0+255),w,b
 43382  00F834  0100               	movlb	0	; () banked
 43383  00F836  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43384  00F838  0101               	movlb	1	; () banked
 43385  00F83A  519E               	movf	(_config+8)& (0+255),w,b
 43386  00F83C  0100               	movlb	0	; () banked
 43387  00F83E  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43388  00F840  0E00               	movlw	0
 43389  00F842  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43390  00F844  0E00               	movlw	0
 43391  00F846  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43392  00F848                     l2513:
 43393                           
 43394                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 43395                           
 43396                           ; BSR set to: 0
 43397                           
 43398                           ; BSR set to: 0
 43399  00F848  0100               	movlb	0	; () banked
 43400  00F84A  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43401  00F84C  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43402  00F84E  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43403  00F850  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43404  00F852  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43405  00F854  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43406  00F856  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43407  00F858  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43408  00F85A  B0D8               	btfsc	status,0,c
 43409  00F85C  D002               	goto	l2514
 43410                           
 43411                           ; BSR set to: 0
 43412                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 43413  00F85E  0EFF               	movlw	255
 43414                           
 43415                           ; BSR set to: 0
 43416                           ;motor.c: 396: }
 43417                           
 43418                           ; BSR set to: 0
 43419  00F860  0012               	return	
 43420  00F862                     l2514:
 43421                           
 43422                           ; BSR set to: 0
 43423                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 43424                           
 43425                           ; BSR set to: 0
 43426  00F862  0E01               	movlw	1
 43427                           
 43428                           ; BSR set to: 0
 43429  00F864  0012               	return	
 43430  00F866                     __end_of__motor_decide_direction:
 43431                           	opt stack 0
 43432                           tosu	equ	0xFFF
 43433                           tosh	equ	0xFFE
 43434                           tosl	equ	0xFFD
 43435                           pclath	equ	0xFFA
 43436                           tblptru	equ	0xFF8
 43437                           tblptrh	equ	0xFF7
 43438                           tblptrl	equ	0xFF6
 43439                           tablat	equ	0xFF5
 43440                           prodh	equ	0xFF4
 43441                           prodl	equ	0xFF3
 43442                           intcon	equ	0xFF2
 43443                           indf0	equ	0xFEF
 43444                           postinc0	equ	0xFEE
 43445                           fsr0h	equ	0xFEA
 43446                           fsr0l	equ	0xFE9
 43447                           wreg	equ	0xFE8
 43448                           indf1	equ	0xFE7
 43449                           postinc1	equ	0xFE6
 43450                           postdec1	equ	0xFE5
 43451                           plusw1	equ	0xFE3
 43452                           fsr1h	equ	0xFE2
 43453                           fsr1l	equ	0xFE1
 43454                           indf2	equ	0xFDF
 43455                           postinc2	equ	0xFDE
 43456                           postdec2	equ	0xFDD
 43457                           plusw2	equ	0xFDB
 43458                           fsr2h	equ	0xFDA
 43459                           fsr2l	equ	0xFD9
 43460                           status	equ	0xFD8
 43461                           
 43462 ;; *************** function __motor_calculate_distance *****************
 43463 ;; Defined at:
 43464 ;;		line 482 in file "motor.c"
 43465 ;; Parameters:    Size  Location     Type
 43466 ;;  direction       1    wreg     enum E6622
 43467 ;;  target_posit    4    0[BANK0 ] unsigned long 
 43468 ;; Auto vars:     Size  Location     Type
 43469 ;;  direction       1    8[BANK0 ] enum E6622
 43470 ;;  distance        4    9[BANK0 ] unsigned long 
 43471 ;; Return value:  Size  Location     Type
 43472 ;;                  4    0[BANK0 ] unsigned long 
 43473 ;; Registers used:
 43474 ;;		wreg, status,2, status,0
 43475 ;; Tracked objects:
 43476 ;;		On entry : 0/0
 43477 ;;		On exit  : 0/0
 43478 ;;		Unchanged: 0/0
 43479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43480 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43481 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43482 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43483 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43484 ;;Total ram usage:       13 bytes
 43485 ;; Hardware stack levels used:    1
 43486 ;; Hardware stack levels required when called:   10
 43487 ;; This function calls:
 43488 ;;		Nothing
 43489 ;; This function is called by:
 43490 ;;		__motor_decide_direction
 43491 ;;		_motor_goto_steps
 43492 ;;		_motor_goto_degrees_float
 43493 ;;		_motor_goto_degrees_int
 43494 ;; This function uses a non-reentrant model
 43495 ;;
 43496                           
 43497                           	psect	text173
 43498  0124A0                     __ptext173:
 43499                           	opt stack 0
 43500  0124A0                     __motor_calculate_distance:
 43501                           	opt stack 17
 43502                           
 43503                           ; BSR set to: 0
 43504                           ;incstack = 0
 43505                           ;__motor_calculate_distance@direction stored from wreg
 43506  0124A0  0100               	movlb	0	; () banked
 43507  0124A2  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 43508                           
 43509                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 43510  0124A4  0100               	movlb	0	; () banked
 43511  0124A6  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 43512  0124A8  A4D8               	btfss	status,2,c
 43513  0124AA  D01C               	goto	l2534
 43514                           
 43515                           ; BSR set to: 0
 43516                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 43517  0124AC  C16C  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 43518  0124B0  C16D  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 43519  0124B4  C16E  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 43520  0124B8  C16F  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 43521  0124BC  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43522  0124BE  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43523  0124C0  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43524  0124C2  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43525  0124C4  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43526  0124C6  0E00               	movlw	0
 43527  0124C8  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43528  0124CA  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43529  0124CC  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43530  0124CE  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 43531  0124D0  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43532  0124D2  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43533  0124D4  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 43534  0124D6  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43535  0124D8  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43536  0124DA  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 43537  0124DC  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43538  0124DE  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43539  0124E0  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 43540  0124E2  D023               	goto	L91
 43541  0124E4                     l2534:
 43542                           
 43543                           ; BSR set to: 0
 43544                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 43545                           
 43546                           ; BSR set to: 0
 43547  0124E4  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 43548  0124E8  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 43549  0124EC  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 43550  0124F0  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 43551  0124F4  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43552  0124F6  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43553  0124F8  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43554  0124FA  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43555  0124FC  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43556  0124FE  0E00               	movlw	0
 43557  012500  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43558  012502  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43559  012504  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43560  012506  0101               	movlb	1	; () banked
 43561  012508  516C               	movf	(_os+7)& (0+255),w,b	;volatile
 43562  01250A  0100               	movlb	0	; () banked
 43563  01250C  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43564  01250E  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43565  012510  0101               	movlb	1	; () banked
 43566  012512  516D               	movf	(_os+8)& (0+255),w,b	;volatile
 43567  012514  0100               	movlb	0	; () banked
 43568  012516  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43569  012518  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43570  01251A  0101               	movlb	1	; () banked
 43571  01251C  516E               	movf	(_os+9)& (0+255),w,b	;volatile
 43572  01251E  0100               	movlb	0	; () banked
 43573  012520  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43574  012522  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43575  012524  0101               	movlb	1	; () banked
 43576  012526  516F               	movf	(_os+10)& (0+255),w,b	;volatile
 43577  012528  0100               	movlb	0	; () banked
 43578  01252A                     L91:
 43579  01252A  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 43580  01252C  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 43581                           
 43582                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 43583  01252E  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 43584  012530  0101               	movlb	1	; () banked
 43585  012532  5D96               	subwf	_config& (0+255),w,b
 43586  012534  0100               	movlb	0	; () banked
 43587  012536  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 43588  012538  0101               	movlb	1	; () banked
 43589  01253A  5997               	subwfb	(_config+1)& (0+255),w,b
 43590  01253C  0100               	movlb	0	; () banked
 43591  01253E  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 43592  012540  0101               	movlb	1	; () banked
 43593  012542  5998               	subwfb	(_config+2)& (0+255),w,b
 43594  012544  0100               	movlb	0	; () banked
 43595  012546  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 43596  012548  0101               	movlb	1	; () banked
 43597  01254A  5999               	subwfb	(_config+3)& (0+255),w,b
 43598  01254C  B0D8               	btfsc	status,0,c
 43599  01254E  D00F               	goto	l2537
 43600                           
 43601                           ; BSR set to: 1
 43602                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 43603  012550  5196               	movf	_config& (0+255),w,b
 43604  012552  0100               	movlb	0	; () banked
 43605  012554  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 43606  012556  0101               	movlb	1	; () banked
 43607  012558  5197               	movf	(_config+1)& (0+255),w,b
 43608  01255A  0100               	movlb	0	; () banked
 43609  01255C  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 43610  01255E  0101               	movlb	1	; () banked
 43611  012560  5198               	movf	(_config+2)& (0+255),w,b
 43612  012562  0100               	movlb	0	; () banked
 43613  012564  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 43614  012566  0101               	movlb	1	; () banked
 43615  012568  5199               	movf	(_config+3)& (0+255),w,b
 43616  01256A  0100               	movlb	0	; () banked
 43617  01256C  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 43618  01256E                     l2537:
 43619                           
 43620                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 43621                           
 43622                           ; BSR set to: 0
 43623                           
 43624                           ; BSR set to: 0
 43625  01256E  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 43626  012572  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 43627  012576  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 43628  01257A  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 43629  01257E  0012               	return	
 43630  012580                     __end_of__motor_calculate_distance:
 43631                           	opt stack 0
 43632                           tosu	equ	0xFFF
 43633                           tosh	equ	0xFFE
 43634                           tosl	equ	0xFFD
 43635                           pclath	equ	0xFFA
 43636                           tblptru	equ	0xFF8
 43637                           tblptrh	equ	0xFF7
 43638                           tblptrl	equ	0xFF6
 43639                           tablat	equ	0xFF5
 43640                           prodh	equ	0xFF4
 43641                           prodl	equ	0xFF3
 43642                           intcon	equ	0xFF2
 43643                           indf0	equ	0xFEF
 43644                           postinc0	equ	0xFEE
 43645                           fsr0h	equ	0xFEA
 43646                           fsr0l	equ	0xFE9
 43647                           wreg	equ	0xFE8
 43648                           indf1	equ	0xFE7
 43649                           postinc1	equ	0xFE6
 43650                           postdec1	equ	0xFE5
 43651                           plusw1	equ	0xFE3
 43652                           fsr1h	equ	0xFE2
 43653                           fsr1l	equ	0xFE1
 43654                           indf2	equ	0xFDF
 43655                           postinc2	equ	0xFDE
 43656                           postdec2	equ	0xFDD
 43657                           plusw2	equ	0xFDB
 43658                           fsr2h	equ	0xFDA
 43659                           fsr2l	equ	0xFD9
 43660                           status	equ	0xFD8
 43661                           
 43662 ;; *************** function _motor_clear_command_cue *****************
 43663 ;; Defined at:
 43664 ;;		line 613 in file "motor.c"
 43665 ;; Parameters:    Size  Location     Type
 43666 ;;		None
 43667 ;; Auto vars:     Size  Location     Type
 43668 ;;		None
 43669 ;; Return value:  Size  Location     Type
 43670 ;;                  1    wreg      void 
 43671 ;; Registers used:
 43672 ;;		wreg, status,2
 43673 ;; Tracked objects:
 43674 ;;		On entry : 0/0
 43675 ;;		On exit  : 0/0
 43676 ;;		Unchanged: 0/0
 43677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43682 ;;Total ram usage:        0 bytes
 43683 ;; Hardware stack levels used:    1
 43684 ;; Hardware stack levels required when called:   10
 43685 ;; This function calls:
 43686 ;;		Nothing
 43687 ;; This function is called by:
 43688 ;;		__parse_command_short
 43689 ;; This function uses a non-reentrant model
 43690 ;;
 43691                           
 43692                           	psect	text174
 43693  0160A4                     __ptext174:
 43694                           	opt stack 0
 43695  0160A4                     _motor_clear_command_cue:
 43696                           	opt stack 17
 43697                           
 43698                           ;motor.c: 616: motor_cue_read_index = 0;
 43699                           
 43700                           ;incstack = 0
 43701  0160A4  0E00               	movlw	0
 43702  0160A6  0101               	movlb	1	; () banked
 43703  0160A8  6F4D               	movwf	_motor_cue_read_index& (0+255),b
 43704                           
 43705                           ;motor.c: 617: motor_cue_write_index = 0;
 43706  0160AA  0E00               	movlw	0
 43707  0160AC  6F4C               	movwf	_motor_cue_write_index& (0+255),b
 43708                           
 43709                           ; BSR set to: 1
 43710  0160AE  0012               	return		;funcret
 43711  0160B0                     __end_of_motor_clear_command_cue:
 43712                           	opt stack 0
 43713                           tosu	equ	0xFFF
 43714                           tosh	equ	0xFFE
 43715                           tosl	equ	0xFFD
 43716                           pclath	equ	0xFFA
 43717                           tblptru	equ	0xFF8
 43718                           tblptrh	equ	0xFF7
 43719                           tblptrl	equ	0xFF6
 43720                           tablat	equ	0xFF5
 43721                           prodh	equ	0xFF4
 43722                           prodl	equ	0xFF3
 43723                           intcon	equ	0xFF2
 43724                           indf0	equ	0xFEF
 43725                           postinc0	equ	0xFEE
 43726                           fsr0h	equ	0xFEA
 43727                           fsr0l	equ	0xFE9
 43728                           wreg	equ	0xFE8
 43729                           indf1	equ	0xFE7
 43730                           postinc1	equ	0xFE6
 43731                           postdec1	equ	0xFE5
 43732                           plusw1	equ	0xFE3
 43733                           fsr1h	equ	0xFE2
 43734                           fsr1l	equ	0xFE1
 43735                           indf2	equ	0xFDF
 43736                           postinc2	equ	0xFDE
 43737                           postdec2	equ	0xFDD
 43738                           plusw2	equ	0xFDB
 43739                           fsr2h	equ	0xFDA
 43740                           fsr2l	equ	0xFD9
 43741                           status	equ	0xFD8
 43742                           
 43743 ;; *************** function _i2c_eeprom_writeByte *****************
 43744 ;; Defined at:
 43745 ;;		line 190 in file "i2c.c"
 43746 ;; Parameters:    Size  Location     Type
 43747 ;;  address         2   10[BANK0 ] unsigned int 
 43748 ;;  data            1   12[BANK0 ] unsigned char 
 43749 ;; Auto vars:     Size  Location     Type
 43750 ;;  dat             2   17[BANK0 ] unsigned char [2]
 43751 ;;  slave_addres    1   16[BANK0 ] unsigned char 
 43752 ;; Return value:  Size  Location     Type
 43753 ;;                  1    wreg      void 
 43754 ;; Registers used:
 43755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43756 ;; Tracked objects:
 43757 ;;		On entry : 0/0
 43758 ;;		On exit  : 0/0
 43759 ;;		Unchanged: 0/0
 43760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43761 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43762 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43763 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43764 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43765 ;;Total ram usage:        9 bytes
 43766 ;; Hardware stack levels used:    1
 43767 ;; Hardware stack levels required when called:   12
 43768 ;; This function calls:
 43769 ;;		__i2c_eeprom_busy
 43770 ;;		__i2c_write
 43771 ;; This function is called by:
 43772 ;;		__parse_command_short
 43773 ;; This function uses a non-reentrant model
 43774 ;;
 43775                           
 43776                           	psect	text175
 43777  015614                     __ptext175:
 43778                           	opt stack 0
 43779  015614                     _i2c_eeprom_writeByte:
 43780                           	opt stack 15
 43781                           
 43782                           ;i2c.c: 192: uint8_t slave_address;;i2c.c: 193: uint8_t dat[2];;i2c.c: 196: while(_i2c_e
      +                          eprom_busy());
 43783                           
 43784                           ; BSR set to: 1
 43785                           ;incstack = 0
 43786  015614  ECDD  F0AE         	call	__i2c_eeprom_busy	;wreg free
 43787  015618  0900               	iorlw	0
 43788  01561A  A4D8               	btfss	status,2,c
 43789  01561C  D7FB               	goto	_i2c_eeprom_writeByte
 43790                           
 43791                           ;i2c.c: 198: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 43792  01561E  C06A  F06D         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 43793  015622  C06B  F06E         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 43794  015626  0E07               	movlw	7
 43795  015628  0100               	movlb	0	; () banked
 43796  01562A  6F6F               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),b
 43797  01562C                     u13905:
 43798  01562C  90D8               	bcf	status,0,c
 43799  01562E  336E               	rrcf	(??_i2c_eeprom_writeByte+1)& (0+255),f,b
 43800  015630  336D               	rrcf	??_i2c_eeprom_writeByte& (0+255),f,b
 43801  015632  2F6F               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,b
 43802  015634  D7FB               	goto	u13905
 43803  015636  516D               	movf	??_i2c_eeprom_writeByte& (0+255),w,b
 43804  015638  0B0E               	andlw	14
 43805  01563A  09A0               	iorlw	160
 43806  01563C  6F70               	movwf	i2c_eeprom_writeByte@slave_address& (0+255),b
 43807                           
 43808                           ; BSR set to: 0
 43809                           ;i2c.c: 199: dat[0] = address & 0xFF;
 43810  01563E  C06A  F071         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 43811                           
 43812                           ; BSR set to: 0
 43813                           ;i2c.c: 200: dat[1] = data;
 43814  015642  C06C  F072         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 43815                           
 43816                           ; BSR set to: 0
 43817                           ;i2c.c: 202: _i2c_write(slave_address, &dat[0], 2);
 43818  015646  0E71               	movlw	low i2c_eeprom_writeByte@dat
 43819  015648  6F65               	movwf	__i2c_write@data& (0+255),b
 43820  01564A  0E00               	movlw	high i2c_eeprom_writeByte@dat
 43821  01564C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 43822  01564E  0E02               	movlw	2
 43823  015650  6F67               	movwf	__i2c_write@length& (0+255),b
 43824  015652  5170               	movf	i2c_eeprom_writeByte@slave_address& (0+255),w,b
 43825  015654  EC03  F0AA         	call	__i2c_write
 43826  015658  0012               	return		;funcret
 43827  01565A                     __end_of_i2c_eeprom_writeByte:
 43828                           	opt stack 0
 43829                           tosu	equ	0xFFF
 43830                           tosh	equ	0xFFE
 43831                           tosl	equ	0xFFD
 43832                           pclath	equ	0xFFA
 43833                           tblptru	equ	0xFF8
 43834                           tblptrh	equ	0xFF7
 43835                           tblptrl	equ	0xFF6
 43836                           tablat	equ	0xFF5
 43837                           prodh	equ	0xFF4
 43838                           prodl	equ	0xFF3
 43839                           intcon	equ	0xFF2
 43840                           indf0	equ	0xFEF
 43841                           postinc0	equ	0xFEE
 43842                           fsr0h	equ	0xFEA
 43843                           fsr0l	equ	0xFE9
 43844                           wreg	equ	0xFE8
 43845                           indf1	equ	0xFE7
 43846                           postinc1	equ	0xFE6
 43847                           postdec1	equ	0xFE5
 43848                           plusw1	equ	0xFE3
 43849                           fsr1h	equ	0xFE2
 43850                           fsr1l	equ	0xFE1
 43851                           indf2	equ	0xFDF
 43852                           postinc2	equ	0xFDE
 43853                           postdec2	equ	0xFDD
 43854                           plusw2	equ	0xFDB
 43855                           fsr2h	equ	0xFDA
 43856                           fsr2l	equ	0xFD9
 43857                           status	equ	0xFD8
 43858                           
 43859 ;; *************** function __i2c_write *****************
 43860 ;; Defined at:
 43861 ;;		line 86 in file "i2c.c"
 43862 ;; Parameters:    Size  Location     Type
 43863 ;;  slave_addres    1    wreg     unsigned char 
 43864 ;;  data            2    5[BANK0 ] PTR unsigned char 
 43865 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 43866 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 43867 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 43868 ;;  length          1    7[BANK0 ] unsigned char 
 43869 ;; Auto vars:     Size  Location     Type
 43870 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 43871 ;;  cntr            1    9[BANK0 ] unsigned char 
 43872 ;; Return value:  Size  Location     Type
 43873 ;;                  1    wreg      void 
 43874 ;; Registers used:
 43875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43876 ;; Tracked objects:
 43877 ;;		On entry : 0/0
 43878 ;;		On exit  : 0/0
 43879 ;;		Unchanged: 0/0
 43880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43881 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43884 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43885 ;;Total ram usage:        5 bytes
 43886 ;; Hardware stack levels used:    1
 43887 ;; Hardware stack levels required when called:   11
 43888 ;; This function calls:
 43889 ;;		__i2c_send
 43890 ;;		__i2c_start
 43891 ;;		__i2c_stop
 43892 ;;		__i2c_wait_idle
 43893 ;; This function is called by:
 43894 ;;		_i2c_eeprom_writeByte
 43895 ;;		_i2c_eeprom_read
 43896 ;;		_i2c_display_init
 43897 ;;		__ic2_display_set_ddram_address
 43898 ;;		__ic2_display_set_cgram_address
 43899 ;;		_i2c_display_program_custom_character
 43900 ;;		_i2c_adc_start
 43901 ;;		_i2c_eeprom_readByte
 43902 ;;		__i2c_display_send_init_sequence
 43903 ;; This function uses a non-reentrant model
 43904 ;;
 43905                           
 43906                           	psect	text176
 43907  015406                     __ptext176:
 43908                           	opt stack 0
 43909  015406                     __i2c_write:
 43910                           	opt stack 16
 43911                           
 43912                           ;incstack = 0
 43913                           ;__i2c_write@slave_address stored from wreg
 43914  015406  0100               	movlb	0	; () banked
 43915  015408  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 43916                           
 43917                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 43918  01540A  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 43919                           
 43920                           ;i2c.c: 91: _i2c_start();
 43921  01540E  EC80  F0B0         	call	__i2c_start	;wreg free
 43922                           
 43923                           ;i2c.c: 92: _i2c_wait_idle();
 43924  015412  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 43925                           
 43926                           ;i2c.c: 93: _i2c_send(slave_address);
 43927  015416  0100               	movlb	0	; () banked
 43928  015418  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 43929  01541A  EC72  F0B0         	call	__i2c_send
 43930                           
 43931                           ;i2c.c: 94: _i2c_wait_idle();
 43932  01541E  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 43933                           
 43934                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 43935  015422  0E00               	movlw	0
 43936  015424  0100               	movlb	0	; () banked
 43937  015426  6F69               	movwf	__i2c_write@cntr& (0+255),b
 43938  015428  D00F               	goto	l1163
 43939  01542A                     
 43940                           ; BSR set to: 0
 43941                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 43942                           
 43943                           ; BSR set to: 0
 43944  01542A  5169               	movf	__i2c_write@cntr& (0+255),w,b
 43945  01542C  0D01               	mullw	1
 43946  01542E  50F3               	movf	prodl,w,c
 43947  015430  2565               	addwf	__i2c_write@data& (0+255),w,b
 43948  015432  6ED9               	movwf	fsr2l,c
 43949  015434  50F4               	movf	prodh,w,c
 43950  015436  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 43951  015438  6EDA               	movwf	fsr2h,c
 43952  01543A  50DF               	movf	indf2,w,c
 43953  01543C  EC72  F0B0         	call	__i2c_send
 43954                           
 43955                           ;i2c.c: 99: _i2c_wait_idle();
 43956  015440  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 43957  015444  0100               	movlb	0	; () banked
 43958  015446  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 43959  015448                     l1163:
 43960                           
 43961                           ; BSR set to: 0
 43962                           
 43963                           ; BSR set to: 0
 43964  015448  5167               	movf	__i2c_write@length& (0+255),w,b
 43965  01544A  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 43966  01544C  A0D8               	btfss	status,0,c
 43967  01544E  D7ED               	goto	l1164
 43968                           
 43969                           ; BSR set to: 0
 43970                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 43971                           
 43972                           ; BSR set to: 0
 43973  015450  EC7C  F0B0         	call	__i2c_stop	;wreg free
 43974  015454  0012               	return		;funcret
 43975  015456                     __end_of__i2c_write:
 43976                           	opt stack 0
 43977                           tosu	equ	0xFFF
 43978                           tosh	equ	0xFFE
 43979                           tosl	equ	0xFFD
 43980                           pclath	equ	0xFFA
 43981                           tblptru	equ	0xFF8
 43982                           tblptrh	equ	0xFF7
 43983                           tblptrl	equ	0xFF6
 43984                           tablat	equ	0xFF5
 43985                           prodh	equ	0xFF4
 43986                           prodl	equ	0xFF3
 43987                           intcon	equ	0xFF2
 43988                           indf0	equ	0xFEF
 43989                           postinc0	equ	0xFEE
 43990                           fsr0h	equ	0xFEA
 43991                           fsr0l	equ	0xFE9
 43992                           wreg	equ	0xFE8
 43993                           indf1	equ	0xFE7
 43994                           postinc1	equ	0xFE6
 43995                           postdec1	equ	0xFE5
 43996                           plusw1	equ	0xFE3
 43997                           fsr1h	equ	0xFE2
 43998                           fsr1l	equ	0xFE1
 43999                           indf2	equ	0xFDF
 44000                           postinc2	equ	0xFDE
 44001                           postdec2	equ	0xFDD
 44002                           plusw2	equ	0xFDB
 44003                           fsr2h	equ	0xFDA
 44004                           fsr2l	equ	0xFD9
 44005                           status	equ	0xFD8
 44006                           
 44007 ;; *************** function __i2c_eeprom_busy *****************
 44008 ;; Defined at:
 44009 ;;		line 171 in file "i2c.c"
 44010 ;; Parameters:    Size  Location     Type
 44011 ;;		None
 44012 ;; Auto vars:     Size  Location     Type
 44013 ;;  busy            1    5[BANK0 ] unsigned char 
 44014 ;; Return value:  Size  Location     Type
 44015 ;;                  1    wreg      unsigned char 
 44016 ;; Registers used:
 44017 ;;		wreg, status,2, status,0, cstack
 44018 ;; Tracked objects:
 44019 ;;		On entry : 0/0
 44020 ;;		On exit  : 0/0
 44021 ;;		Unchanged: 0/0
 44022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44026 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44027 ;;Total ram usage:        1 bytes
 44028 ;; Hardware stack levels used:    1
 44029 ;; Hardware stack levels required when called:   11
 44030 ;; This function calls:
 44031 ;;		__i2c_send
 44032 ;;		__i2c_start
 44033 ;;		__i2c_stop
 44034 ;;		__i2c_wait_idle
 44035 ;; This function is called by:
 44036 ;;		_i2c_eeprom_writeByte
 44037 ;;		_i2c_eeprom_read
 44038 ;;		_i2c_eeprom_readByte
 44039 ;; This function uses a non-reentrant model
 44040 ;;
 44041                           
 44042                           	psect	text177
 44043  015DBA                     __ptext177:
 44044                           	opt stack 0
 44045  015DBA                     __i2c_eeprom_busy:
 44046                           	opt stack 16
 44047                           
 44048                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 44049                           
 44050                           ;incstack = 0
 44051  015DBA  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 44052                           
 44053                           ;i2c.c: 175: _i2c_start();
 44054  015DBE  EC80  F0B0         	call	__i2c_start	;wreg free
 44055                           
 44056                           ;i2c.c: 176: _i2c_wait_idle();
 44057  015DC2  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 44058                           
 44059                           ;i2c.c: 177: _i2c_send(0b10100000);
 44060  015DC6  0EA0               	movlw	160
 44061  015DC8  EC72  F0B0         	call	__i2c_send
 44062                           
 44063                           ;i2c.c: 178: _i2c_wait_idle();
 44064  015DCC  ECD4  F0A4         	call	__i2c_wait_idle	;wreg free
 44065                           
 44066                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 44067  015DD0  0E00               	movlw	0
 44068  015DD2  BCC5               	btfsc	4037,6,c	;volatile
 44069  015DD4  0E01               	movlw	1
 44070  015DD6  0100               	movlb	0	; () banked
 44071  015DD8  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
 44072                           
 44073                           ; BSR set to: 0
 44074                           ;i2c.c: 183: _i2c_stop();
 44075  015DDA  EC7C  F0B0         	call	__i2c_stop	;wreg free
 44076                           
 44077                           ;i2c.c: 185: return 0;
 44078  015DDE  0E00               	movlw	0
 44079  015DE0  0012               	return	
 44080  015DE2                     __end_of__i2c_eeprom_busy:
 44081                           	opt stack 0
 44082                           tosu	equ	0xFFF
 44083                           tosh	equ	0xFFE
 44084                           tosl	equ	0xFFD
 44085                           pclath	equ	0xFFA
 44086                           tblptru	equ	0xFF8
 44087                           tblptrh	equ	0xFF7
 44088                           tblptrl	equ	0xFF6
 44089                           tablat	equ	0xFF5
 44090                           prodh	equ	0xFF4
 44091                           prodl	equ	0xFF3
 44092                           intcon	equ	0xFF2
 44093                           indf0	equ	0xFEF
 44094                           postinc0	equ	0xFEE
 44095                           fsr0h	equ	0xFEA
 44096                           fsr0l	equ	0xFE9
 44097                           wreg	equ	0xFE8
 44098                           indf1	equ	0xFE7
 44099                           postinc1	equ	0xFE6
 44100                           postdec1	equ	0xFE5
 44101                           plusw1	equ	0xFE3
 44102                           fsr1h	equ	0xFE2
 44103                           fsr1l	equ	0xFE1
 44104                           indf2	equ	0xFDF
 44105                           postinc2	equ	0xFDE
 44106                           postdec2	equ	0xFDD
 44107                           plusw2	equ	0xFDB
 44108                           fsr2h	equ	0xFDA
 44109                           fsr2l	equ	0xFD9
 44110                           status	equ	0xFD8
 44111                           
 44112 ;; *************** function __i2c_wait_idle *****************
 44113 ;; Defined at:
 44114 ;;		line 42 in file "i2c.c"
 44115 ;; Parameters:    Size  Location     Type
 44116 ;;		None
 44117 ;; Auto vars:     Size  Location     Type
 44118 ;;		None
 44119 ;; Return value:  Size  Location     Type
 44120 ;;                  1    wreg      void 
 44121 ;; Registers used:
 44122 ;;		wreg, status,2, status,0
 44123 ;; Tracked objects:
 44124 ;;		On entry : 0/0
 44125 ;;		On exit  : 0/0
 44126 ;;		Unchanged: 0/0
 44127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44130 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44131 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44132 ;;Total ram usage:        5 bytes
 44133 ;; Hardware stack levels used:    1
 44134 ;; Hardware stack levels required when called:   10
 44135 ;; This function calls:
 44136 ;;		Nothing
 44137 ;; This function is called by:
 44138 ;;		__i2c_write
 44139 ;;		__i2c_read
 44140 ;;		__i2c_eeprom_busy
 44141 ;;		_i2c_display_write_fixed
 44142 ;;		_i2c_adc_read
 44143 ;;		_i2c_display_write
 44144 ;; This function uses a non-reentrant model
 44145 ;;
 44146                           
 44147                           	psect	text178
 44148  0149A8                     __ptext178:
 44149                           	opt stack 0
 44150  0149A8                     __i2c_wait_idle:
 44151                           	opt stack 16
 44152                           
 44153                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 44154                           
 44155                           ;incstack = 0
 44156  0149A8  A4C7               	btfss	4039,2,c	;volatile
 44157  0149AA  D004               	goto	u11500
 44158  0149AC  0100               	movlb	0	; () banked
 44159  0149AE  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 44160  0149B0  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 44161  0149B2  D002               	goto	u11508
 44162  0149B4                     u11500:
 44163  0149B4  0100               	movlb	0	; () banked
 44164  0149B6  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 44165  0149B8                     u11508:
 44166  0149B8  A0C5               	btfss	4037,0,c	;volatile
 44167  0149BA  D003               	goto	u11510
 44168  0149BC  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 44169  0149BE  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 44170  0149C0  D002               	goto	u11518
 44171  0149C2                     u11510:
 44172  0149C2  0100               	movlb	0	; () banked
 44173  0149C4  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 44174  0149C6                     u11518:
 44175  0149C6  A2C5               	btfss	4037,1,c	;volatile
 44176  0149C8  D003               	goto	u11520
 44177  0149CA  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 44178  0149CC  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 44179  0149CE  D002               	goto	u11528
 44180  0149D0                     u11520:
 44181  0149D0  0100               	movlb	0	; () banked
 44182  0149D2  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 44183  0149D4                     u11528:
 44184  0149D4  A4C5               	btfss	4037,2,c	;volatile
 44185  0149D6  D003               	goto	u11530
 44186  0149D8  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 44187  0149DA  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 44188  0149DC  D002               	goto	u11538
 44189  0149DE                     u11530:
 44190  0149DE  0100               	movlb	0	; () banked
 44191  0149E0  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 44192  0149E2                     u11538:
 44193  0149E2  A6C5               	btfss	4037,3,c	;volatile
 44194  0149E4  D003               	goto	u11540
 44195  0149E6  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 44196  0149E8  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 44197  0149EA  D002               	goto	u11548
 44198  0149EC                     u11540:
 44199  0149EC  0100               	movlb	0	; () banked
 44200  0149EE  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 44201  0149F0                     u11548:
 44202  0149F0  A8C5               	btfss	4037,4,c	;volatile
 44203  0149F2  D002               	goto	u11550
 44204  0149F4  0E01               	movlw	1
 44205  0149F6  D001               	goto	u11556
 44206  0149F8                     u11550:
 44207  0149F8  0E00               	movlw	0
 44208  0149FA                     u11556:
 44209  0149FA  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 44210  0149FC  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 44211  0149FE  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 44212  014A00  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 44213  014A02  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 44214  014A04  0900               	iorlw	0
 44215  014A06  B4D8               	btfsc	status,2,c
 44216  014A08  0012               	return	
 44217  014A0A  D7CE               	goto	__i2c_wait_idle
 44218  014A0C                     __end_of__i2c_wait_idle:
 44219                           	opt stack 0
 44220                           tosu	equ	0xFFF
 44221                           tosh	equ	0xFFE
 44222                           tosl	equ	0xFFD
 44223                           pclath	equ	0xFFA
 44224                           tblptru	equ	0xFF8
 44225                           tblptrh	equ	0xFF7
 44226                           tblptrl	equ	0xFF6
 44227                           tablat	equ	0xFF5
 44228                           prodh	equ	0xFF4
 44229                           prodl	equ	0xFF3
 44230                           intcon	equ	0xFF2
 44231                           indf0	equ	0xFEF
 44232                           postinc0	equ	0xFEE
 44233                           fsr0h	equ	0xFEA
 44234                           fsr0l	equ	0xFE9
 44235                           wreg	equ	0xFE8
 44236                           indf1	equ	0xFE7
 44237                           postinc1	equ	0xFE6
 44238                           postdec1	equ	0xFE5
 44239                           plusw1	equ	0xFE3
 44240                           fsr1h	equ	0xFE2
 44241                           fsr1l	equ	0xFE1
 44242                           indf2	equ	0xFDF
 44243                           postinc2	equ	0xFDE
 44244                           postdec2	equ	0xFDD
 44245                           plusw2	equ	0xFDB
 44246                           fsr2h	equ	0xFDA
 44247                           fsr2l	equ	0xFD9
 44248                           status	equ	0xFD8
 44249                           
 44250 ;; *************** function __i2c_stop *****************
 44251 ;; Defined at:
 44252 ;;		line 65 in file "i2c.c"
 44253 ;; Parameters:    Size  Location     Type
 44254 ;;		None
 44255 ;; Auto vars:     Size  Location     Type
 44256 ;;		None
 44257 ;; Return value:  Size  Location     Type
 44258 ;;                  1    wreg      void 
 44259 ;; Registers used:
 44260 ;;		None
 44261 ;; Tracked objects:
 44262 ;;		On entry : 0/0
 44263 ;;		On exit  : 0/0
 44264 ;;		Unchanged: 0/0
 44265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44270 ;;Total ram usage:        0 bytes
 44271 ;; Hardware stack levels used:    1
 44272 ;; Hardware stack levels required when called:   10
 44273 ;; This function calls:
 44274 ;;		Nothing
 44275 ;; This function is called by:
 44276 ;;		__i2c_write
 44277 ;;		__i2c_read
 44278 ;;		__i2c_eeprom_busy
 44279 ;;		_i2c_display_write_fixed
 44280 ;;		_i2c_adc_read
 44281 ;;		_i2c_display_write
 44282 ;; This function uses a non-reentrant model
 44283 ;;
 44284                           
 44285                           	psect	text179
 44286  0160F8                     __ptext179:
 44287                           	opt stack 0
 44288  0160F8                     __i2c_stop:
 44289                           	opt stack 16
 44290                           
 44291                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 44292                           
 44293                           ; BSR set to: 0
 44294                           ;incstack = 0
 44295  0160F8  84C5               	bsf	4037,2,c	;volatile
 44296  0160FA  A4C5               	btfss	4037,2,c	;volatile
 44297  0160FC  0012               	return	
 44298  0160FE  D7FD               	goto	l1146
 44299  016100                     __end_of__i2c_stop:
 44300                           	opt stack 0
 44301                           tosu	equ	0xFFF
 44302                           tosh	equ	0xFFE
 44303                           tosl	equ	0xFFD
 44304                           pclath	equ	0xFFA
 44305                           tblptru	equ	0xFF8
 44306                           tblptrh	equ	0xFF7
 44307                           tblptrl	equ	0xFF6
 44308                           tablat	equ	0xFF5
 44309                           prodh	equ	0xFF4
 44310                           prodl	equ	0xFF3
 44311                           intcon	equ	0xFF2
 44312                           indf0	equ	0xFEF
 44313                           postinc0	equ	0xFEE
 44314                           fsr0h	equ	0xFEA
 44315                           fsr0l	equ	0xFE9
 44316                           wreg	equ	0xFE8
 44317                           indf1	equ	0xFE7
 44318                           postinc1	equ	0xFE6
 44319                           postdec1	equ	0xFE5
 44320                           plusw1	equ	0xFE3
 44321                           fsr1h	equ	0xFE2
 44322                           fsr1l	equ	0xFE1
 44323                           indf2	equ	0xFDF
 44324                           postinc2	equ	0xFDE
 44325                           postdec2	equ	0xFDD
 44326                           plusw2	equ	0xFDB
 44327                           fsr2h	equ	0xFDA
 44328                           fsr2l	equ	0xFD9
 44329                           status	equ	0xFD8
 44330                           
 44331 ;; *************** function __i2c_start *****************
 44332 ;; Defined at:
 44333 ;;		line 47 in file "i2c.c"
 44334 ;; Parameters:    Size  Location     Type
 44335 ;;		None
 44336 ;; Auto vars:     Size  Location     Type
 44337 ;;		None
 44338 ;; Return value:  Size  Location     Type
 44339 ;;                  1    wreg      void 
 44340 ;; Registers used:
 44341 ;;		None
 44342 ;; Tracked objects:
 44343 ;;		On entry : 0/0
 44344 ;;		On exit  : 0/0
 44345 ;;		Unchanged: 0/0
 44346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44351 ;;Total ram usage:        0 bytes
 44352 ;; Hardware stack levels used:    1
 44353 ;; Hardware stack levels required when called:   10
 44354 ;; This function calls:
 44355 ;;		Nothing
 44356 ;; This function is called by:
 44357 ;;		__i2c_write
 44358 ;;		__i2c_read
 44359 ;;		__i2c_eeprom_busy
 44360 ;;		_i2c_display_write_fixed
 44361 ;;		_i2c_adc_read
 44362 ;;		_i2c_display_write
 44363 ;; This function uses a non-reentrant model
 44364 ;;
 44365                           
 44366                           	psect	text180
 44367  016100                     __ptext180:
 44368                           	opt stack 0
 44369  016100                     __i2c_start:
 44370                           	opt stack 16
 44371                           
 44372                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 44373                           
 44374                           ;incstack = 0
 44375  016100  80C5               	bsf	4037,0,c	;volatile
 44376  016102  A0C5               	btfss	4037,0,c	;volatile
 44377  016104  0012               	return	
 44378  016106  D7FD               	goto	l1131
 44379  016108                     __end_of__i2c_start:
 44380                           	opt stack 0
 44381                           tosu	equ	0xFFF
 44382                           tosh	equ	0xFFE
 44383                           tosl	equ	0xFFD
 44384                           pclath	equ	0xFFA
 44385                           tblptru	equ	0xFF8
 44386                           tblptrh	equ	0xFF7
 44387                           tblptrl	equ	0xFF6
 44388                           tablat	equ	0xFF5
 44389                           prodh	equ	0xFF4
 44390                           prodl	equ	0xFF3
 44391                           intcon	equ	0xFF2
 44392                           indf0	equ	0xFEF
 44393                           postinc0	equ	0xFEE
 44394                           fsr0h	equ	0xFEA
 44395                           fsr0l	equ	0xFE9
 44396                           wreg	equ	0xFE8
 44397                           indf1	equ	0xFE7
 44398                           postinc1	equ	0xFE6
 44399                           postdec1	equ	0xFE5
 44400                           plusw1	equ	0xFE3
 44401                           fsr1h	equ	0xFE2
 44402                           fsr1l	equ	0xFE1
 44403                           indf2	equ	0xFDF
 44404                           postinc2	equ	0xFDE
 44405                           postdec2	equ	0xFDD
 44406                           plusw2	equ	0xFDB
 44407                           fsr2h	equ	0xFDA
 44408                           fsr2l	equ	0xFD9
 44409                           status	equ	0xFD8
 44410                           
 44411 ;; *************** function __i2c_send *****************
 44412 ;; Defined at:
 44413 ;;		line 53 in file "i2c.c"
 44414 ;; Parameters:    Size  Location     Type
 44415 ;;  dat             1    wreg     unsigned char 
 44416 ;; Auto vars:     Size  Location     Type
 44417 ;;  dat             1    0[BANK0 ] unsigned char 
 44418 ;; Return value:  Size  Location     Type
 44419 ;;                  1    wreg      void 
 44420 ;; Registers used:
 44421 ;;		wreg
 44422 ;; Tracked objects:
 44423 ;;		On entry : 0/0
 44424 ;;		On exit  : 0/0
 44425 ;;		Unchanged: 0/0
 44426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44430 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44431 ;;Total ram usage:        1 bytes
 44432 ;; Hardware stack levels used:    1
 44433 ;; Hardware stack levels required when called:   10
 44434 ;; This function calls:
 44435 ;;		Nothing
 44436 ;; This function is called by:
 44437 ;;		__i2c_write
 44438 ;;		__i2c_read
 44439 ;;		__i2c_eeprom_busy
 44440 ;;		_i2c_display_write_fixed
 44441 ;;		_i2c_adc_read
 44442 ;;		_i2c_display_write
 44443 ;; This function uses a non-reentrant model
 44444 ;;
 44445                           
 44446                           	psect	text181
 44447  0160E4                     __ptext181:
 44448                           	opt stack 0
 44449  0160E4                     __i2c_send:
 44450                           	opt stack 16
 44451                           
 44452                           ;incstack = 0
 44453                           ;__i2c_send@dat stored from wreg
 44454  0160E4  0100               	movlb	0	; () banked
 44455  0160E6  6F60               	movwf	__i2c_send@dat& (0+255),b
 44456                           
 44457                           ;i2c.c: 55: SSP1BUF = dat;
 44458  0160E8  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 44459  0160EC  0012               	return		;funcret
 44460  0160EE                     __end_of__i2c_send:
 44461                           	opt stack 0
 44462                           tosu	equ	0xFFF
 44463                           tosh	equ	0xFFE
 44464                           tosl	equ	0xFFD
 44465                           pclath	equ	0xFFA
 44466                           tblptru	equ	0xFF8
 44467                           tblptrh	equ	0xFF7
 44468                           tblptrl	equ	0xFF6
 44469                           tablat	equ	0xFF5
 44470                           prodh	equ	0xFF4
 44471                           prodl	equ	0xFF3
 44472                           intcon	equ	0xFF2
 44473                           indf0	equ	0xFEF
 44474                           postinc0	equ	0xFEE
 44475                           fsr0h	equ	0xFEA
 44476                           fsr0l	equ	0xFE9
 44477                           wreg	equ	0xFE8
 44478                           indf1	equ	0xFE7
 44479                           postinc1	equ	0xFE6
 44480                           postdec1	equ	0xFE5
 44481                           plusw1	equ	0xFE3
 44482                           fsr1h	equ	0xFE2
 44483                           fsr1l	equ	0xFE1
 44484                           indf2	equ	0xFDF
 44485                           postinc2	equ	0xFDE
 44486                           postdec2	equ	0xFDD
 44487                           plusw2	equ	0xFDB
 44488                           fsr2h	equ	0xFDA
 44489                           fsr2l	equ	0xFD9
 44490                           status	equ	0xFD8
 44491                           
 44492 ;; *************** function __parse_command_long *****************
 44493 ;; Defined at:
 44494 ;;		line 439 in file "api.c"
 44495 ;; Parameters:    Size  Location     Type
 44496 ;;  data            2   64[BANK0 ] PTR unsigned char 
 44497 ;;		 -> ReceivedDataBuffer(64), 
 44498 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 44499 ;;		 -> ToSendDataBuffer(64), 
 44500 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 44501 ;;		 -> api_parse@out_idx(1), 
 44502 ;; Auto vars:     Size  Location     Type
 44503 ;;  length          1   70[BANK0 ] unsigned char 
 44504 ;; Return value:  Size  Location     Type
 44505 ;;                  1    wreg      unsigned char 
 44506 ;; Registers used:
 44507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44508 ;; Tracked objects:
 44509 ;;		On entry : 0/0
 44510 ;;		On exit  : 0/0
 44511 ;;		Unchanged: 0/0
 44512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44513 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44516 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44517 ;;Total ram usage:        7 bytes
 44518 ;; Hardware stack levels used:    1
 44519 ;; Hardware stack levels required when called:   15
 44520 ;; This function calls:
 44521 ;;		__parse_jump_steps
 44522 ;;		__parse_jump_steps_with_overshoot
 44523 ;;		__parse_set_manual_speed
 44524 ;; This function is called by:
 44525 ;;		_api_parse
 44526 ;; This function uses a non-reentrant model
 44527 ;;
 44528                           
 44529                           	psect	text182
 44530  013FD6                     __ptext182:
 44531                           	opt stack 0
 44532  013FD6                     __parse_command_long:
 44533                           	opt stack 13
 44534                           
 44535                           ;api.c: 441: uint8_t length = 65;
 44536                           
 44537                           ;incstack = 0
 44538  013FD6  0E41               	movlw	65
 44539  013FD8  0100               	movlb	0	; () banked
 44540  013FDA  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44541                           
 44542                           ;api.c: 443: switch(data[0])
 44543  013FDC  D02F               	goto	l2354
 44544  013FDE                     
 44545                           ; BSR set to: 0
 44546                           ;api.c: 450: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 44547                           
 44548                           ; BSR set to: 0
 44549  013FDE  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 44550  013FE2  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 44551  013FE6  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 44552  013FEA  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 44553  013FEE  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 44554  013FF2  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 44555  013FF6  EC09  F07F         	call	__parse_jump_steps	;wreg free
 44556  013FFA  D01D               	goto	L67
 44557  013FFC                     
 44558                           ; BSR set to: 0
 44559                           ;api.c: 454: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 44560                           
 44561                           ; BSR set to: 0
 44562  013FFC  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 44563  014000  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 44564  014004  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 44565  014008  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 44566  01400C  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 44567  014010  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 44568  014014  EC60  F07E         	call	__parse_jump_steps_with_overshoot	;wreg free
 44569  014018  D00E               	goto	L67
 44570  01401A                     
 44571                           ; BSR set to: 0
 44572                           ;api.c: 458: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 44573                           
 44574                           ; BSR set to: 0
 44575  01401A  C0A0  F066         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 44576  01401E  C0A1  F067         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 44577  014022  C0A2  F068         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 44578  014026  C0A3  F069         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 44579  01402A  C0A4  F06A         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 44580  01402E  C0A5  F06B         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 44581  014032  ECB3  F0A0         	call	__parse_set_manual_speed	;wreg free
 44582  014036                     L67:
 44583  014036  0100               	movlb	0	; () banked
 44584  014038  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44585                           
 44586                           ; BSR set to: 0
 44587                           ;api.c: 460: }
 44588                           
 44589                           ;api.c: 459: break;
 44590  01403A  D00E               	goto	l2356
 44591  01403C                     l2354:
 44592                           
 44593                           ; BSR set to: 0
 44594                           
 44595                           ; BSR set to: 0
 44596  01403C  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 44597  014040  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 44598  014044  50DF               	movf	indf2,w,c
 44599                           
 44600                           ; Switch size 1, requested type "space"
 44601                           ; Number of cases is 3, Range of values is 144 to 146
 44602                           ; switch strategies available:
 44603                           ; Name         Instructions Cycles
 44604                           ; simple_byte           10     6 (average)
 44605                           ;	Chosen strategy is simple_byte
 44606  014046  0A90               	xorlw	144	; case 144
 44607  014048  B4D8               	btfsc	status,2,c
 44608  01404A  D7C9               	goto	l2355
 44609  01404C  0A01               	xorlw	1	; case 145
 44610  01404E  B4D8               	btfsc	status,2,c
 44611  014050  D7D5               	goto	l2357
 44612  014052  0A03               	xorlw	3	; case 146
 44613  014054  B4D8               	btfsc	status,2,c
 44614  014056  D7E1               	goto	l2358
 44615  014058                     l2356:
 44616                           
 44617                           ; BSR set to: 0
 44618                           ;api.c: 464: return length;
 44619                           
 44620                           ; BSR set to: 0
 44621  014058  51A6               	movf	__parse_command_long@length& (0+255),w,b
 44622  01405A  0012               	return	
 44623  01405C                     __end_of__parse_command_long:
 44624                           	opt stack 0
 44625                           tosu	equ	0xFFF
 44626                           tosh	equ	0xFFE
 44627                           tosl	equ	0xFFD
 44628                           pclath	equ	0xFFA
 44629                           tblptru	equ	0xFF8
 44630                           tblptrh	equ	0xFF7
 44631                           tblptrl	equ	0xFF6
 44632                           tablat	equ	0xFF5
 44633                           prodh	equ	0xFF4
 44634                           prodl	equ	0xFF3
 44635                           intcon	equ	0xFF2
 44636                           indf0	equ	0xFEF
 44637                           postinc0	equ	0xFEE
 44638                           fsr0h	equ	0xFEA
 44639                           fsr0l	equ	0xFE9
 44640                           wreg	equ	0xFE8
 44641                           indf1	equ	0xFE7
 44642                           postinc1	equ	0xFE6
 44643                           postdec1	equ	0xFE5
 44644                           plusw1	equ	0xFE3
 44645                           fsr1h	equ	0xFE2
 44646                           fsr1l	equ	0xFE1
 44647                           indf2	equ	0xFDF
 44648                           postinc2	equ	0xFDE
 44649                           postdec2	equ	0xFDD
 44650                           plusw2	equ	0xFDB
 44651                           fsr2h	equ	0xFDA
 44652                           fsr2l	equ	0xFD9
 44653                           status	equ	0xFD8
 44654                           
 44655 ;; *************** function __parse_set_manual_speed *****************
 44656 ;; Defined at:
 44657 ;;		line 559 in file "api.c"
 44658 ;; Parameters:    Size  Location     Type
 44659 ;;  data            2    6[BANK0 ] PTR unsigned char 
 44660 ;;		 -> ReceivedDataBuffer(64), 
 44661 ;;  out_buffer      2    8[BANK0 ] PTR unsigned char 
 44662 ;;		 -> ToSendDataBuffer(64), 
 44663 ;;  out_idx_ptr     2   10[BANK0 ] PTR unsigned char 
 44664 ;;		 -> api_parse@out_idx(1), 
 44665 ;; Auto vars:     Size  Location     Type
 44666 ;;  new_speed       2   13[BANK0 ] unsigned int 
 44667 ;; Return value:  Size  Location     Type
 44668 ;;                  1    wreg      unsigned char 
 44669 ;; Registers used:
 44670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44671 ;; Tracked objects:
 44672 ;;		On entry : 0/0
 44673 ;;		On exit  : 0/0
 44674 ;;		Unchanged: 0/0
 44675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44676 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44677 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44678 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44679 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44680 ;;Total ram usage:        9 bytes
 44681 ;; Hardware stack levels used:    1
 44682 ;; Hardware stack levels required when called:   12
 44683 ;; This function calls:
 44684 ;;		_motor_set_manual_speed
 44685 ;; This function is called by:
 44686 ;;		__parse_command_long
 44687 ;; This function uses a non-reentrant model
 44688 ;;
 44689                           
 44690                           	psect	text183
 44691  014166                     __ptext183:
 44692                           	opt stack 0
 44693  014166                     __parse_set_manual_speed:
 44694                           	opt stack 15
 44695                           
 44696                           ;api.c: 563: uint16_t new_speed;;api.c: 565: new_speed = data[1];
 44697                           
 44698                           ; BSR set to: 0
 44699                           ;incstack = 0
 44700  014166  0100               	movlb	0	; () banked
 44701  014168  EE20 F001          	lfsr	2,1
 44702  01416C  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44703  01416E  26D9               	addwf	fsr2l,f,c
 44704  014170  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44705  014172  22DA               	addwfc	fsr2h,f,c
 44706  014174  50DF               	movf	indf2,w,c
 44707  014176  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 44708  014178  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44709  01417A  6F6D               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 44710  01417C  6B6E               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44711                           
 44712                           ; BSR set to: 0
 44713                           ;api.c: 566: new_speed <<= 8;
 44714  01417E  516D               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 44715  014180  6F6E               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44716  014182  6B6D               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 44717                           
 44718                           ; BSR set to: 0
 44719                           ;api.c: 567: new_speed |= data[2];
 44720  014184  EE20 F002          	lfsr	2,2
 44721  014188  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44722  01418A  26D9               	addwf	fsr2l,f,c
 44723  01418C  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44724  01418E  22DA               	addwfc	fsr2h,f,c
 44725  014190  50DF               	movf	indf2,w,c
 44726  014192  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 44727  014194  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44728  014196  136D               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 44729                           
 44730                           ; BSR set to: 0
 44731                           ;api.c: 569: motor_set_manual_speed(new_speed);
 44732  014198  C06D  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 44733  01419C  C06E  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 44734  0141A0  ECE5  F0A2         	call	_motor_set_manual_speed	;wreg free
 44735                           
 44736                           ;api.c: 572: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 44737  0141A4  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44738  0141A8  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44739  0141AC  50DF               	movf	indf2,w,c
 44740  0141AE  B4D8               	btfsc	status,2,c
 44741  0141B0  D01A               	goto	l2374
 44742  0141B2  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44743  0141B6  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44744  0141BA  0E3F               	movlw	63
 44745  0141BC  60DF               	cpfslt	indf2,c
 44746  0141BE  D013               	goto	l2374
 44747                           
 44748                           ;api.c: 573: {;api.c: 574: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 44749  0141C0  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44750  0141C4  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44751  0141C8  CFDF F06C          	movff	indf2,??__parse_set_manual_speed
 44752  0141CC  0E01               	movlw	1
 44753  0141CE  26DF               	addwf	indf2,f,c
 44754  0141D0  0100               	movlb	0	; () banked
 44755  0141D2  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44756  0141D4  0D01               	mullw	1
 44757  0141D6  50F3               	movf	prodl,w,c
 44758  0141D8  2568               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 44759  0141DA  6ED9               	movwf	fsr2l,c
 44760  0141DC  50F4               	movf	prodh,w,c
 44761  0141DE  2169               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 44762  0141E0  6EDA               	movwf	fsr2h,c
 44763  0141E2  0E92               	movlw	146
 44764  0141E4  6EDF               	movwf	indf2,c
 44765  0141E6                     l2374:
 44766                           
 44767                           ;api.c: 575: };api.c: 577: return 3;
 44768                           
 44769                           ; BSR set to: 0
 44770  0141E6  0E03               	movlw	3
 44771  0141E8  0012               	return	
 44772  0141EA                     __end_of__parse_set_manual_speed:
 44773                           	opt stack 0
 44774                           tosu	equ	0xFFF
 44775                           tosh	equ	0xFFE
 44776                           tosl	equ	0xFFD
 44777                           pclath	equ	0xFFA
 44778                           tblptru	equ	0xFF8
 44779                           tblptrh	equ	0xFF7
 44780                           tblptrl	equ	0xFF6
 44781                           tablat	equ	0xFF5
 44782                           prodh	equ	0xFF4
 44783                           prodl	equ	0xFF3
 44784                           intcon	equ	0xFF2
 44785                           indf0	equ	0xFEF
 44786                           postinc0	equ	0xFEE
 44787                           fsr0h	equ	0xFEA
 44788                           fsr0l	equ	0xFE9
 44789                           wreg	equ	0xFE8
 44790                           indf1	equ	0xFE7
 44791                           postinc1	equ	0xFE6
 44792                           postdec1	equ	0xFE5
 44793                           plusw1	equ	0xFE3
 44794                           fsr1h	equ	0xFE2
 44795                           fsr1l	equ	0xFE1
 44796                           indf2	equ	0xFDF
 44797                           postinc2	equ	0xFDE
 44798                           postdec2	equ	0xFDD
 44799                           plusw2	equ	0xFDB
 44800                           fsr2h	equ	0xFDA
 44801                           fsr2l	equ	0xFD9
 44802                           status	equ	0xFD8
 44803                           
 44804 ;; *************** function _motor_set_manual_speed *****************
 44805 ;; Defined at:
 44806 ;;		line 882 in file "motor.c"
 44807 ;; Parameters:    Size  Location     Type
 44808 ;;  new_speed       2    2[BANK0 ] unsigned int 
 44809 ;; Auto vars:     Size  Location     Type
 44810 ;;  old_speed       2    4[BANK0 ] unsigned int 
 44811 ;; Return value:  Size  Location     Type
 44812 ;;                  1    wreg      void 
 44813 ;; Registers used:
 44814 ;;		wreg, status,2, status,0, cstack
 44815 ;; Tracked objects:
 44816 ;;		On entry : 0/0
 44817 ;;		On exit  : 0/0
 44818 ;;		Unchanged: 0/0
 44819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44820 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44823 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44824 ;;Total ram usage:        4 bytes
 44825 ;; Hardware stack levels used:    1
 44826 ;; Hardware stack levels required when called:   11
 44827 ;; This function calls:
 44828 ;;		_motor_change_speed
 44829 ;; This function is called by:
 44830 ;;		__parse_set_manual_speed
 44831 ;;		_motor_increase_manual_speed
 44832 ;;		_motor_decrease_manual_speed
 44833 ;; This function uses a non-reentrant model
 44834 ;;
 44835                           
 44836                           	psect	text184
 44837  0145CA                     __ptext184:
 44838                           	opt stack 0
 44839  0145CA                     _motor_set_manual_speed:
 44840                           	opt stack 17
 44841                           
 44842                           ;motor.c: 884: uint16_t old_speed;;motor.c: 885: old_speed = os.manual_speed;
 44843                           
 44844                           ;incstack = 0
 44845  0145CA  C189  F064         	movff	_os+36,motor_set_manual_speed@old_speed	;volatile
 44846  0145CE  C18A  F065         	movff	_os+37,motor_set_manual_speed@old_speed+1	;volatile
 44847                           
 44848                           ;motor.c: 887: if(new_speed>config.maximum_speed_manual)
 44849  0145D2  0100               	movlb	0	; () banked
 44850  0145D4  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 44851  0145D6  0101               	movlb	1	; () banked
 44852  0145D8  5DA9               	subwf	(_config+19)& (0+255),w,b
 44853  0145DA  0100               	movlb	0	; () banked
 44854  0145DC  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44855  0145DE  0101               	movlb	1	; () banked
 44856  0145E0  59AA               	subwfb	(_config+20)& (0+255),w,b
 44857  0145E2  B0D8               	btfsc	status,0,c
 44858  0145E4  D005               	goto	l2620
 44859                           
 44860                           ; BSR set to: 1
 44861                           ;motor.c: 888: {;motor.c: 889: os.manual_speed = config.maximum_speed_manual;
 44862  0145E6  C1A9  F189         	movff	_config+19,_os+36	;volatile
 44863  0145EA  C1AA  F18A         	movff	_config+20,_os+37	;volatile
 44864                           
 44865                           ;motor.c: 890: }
 44866  0145EE  D012               	goto	l2623
 44867  0145F0                     l2620:
 44868                           
 44869                           ; BSR set to: 1
 44870                           ;motor.c: 891: else if(new_speed<config.minimum_speed)
 44871                           
 44872                           ; BSR set to: 1
 44873  0145F0  519F               	movf	(_config+9)& (0+255),w,b
 44874  0145F2  0100               	movlb	0	; () banked
 44875  0145F4  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 44876  0145F6  0101               	movlb	1	; () banked
 44877  0145F8  51A0               	movf	(_config+10)& (0+255),w,b
 44878  0145FA  0100               	movlb	0	; () banked
 44879  0145FC  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44880  0145FE  B0D8               	btfsc	status,0,c
 44881  014600  D005               	goto	l2622
 44882                           
 44883                           ; BSR set to: 0
 44884                           ;motor.c: 892: {;motor.c: 893: os.manual_speed = config.minimum_speed;
 44885  014602  C19F  F189         	movff	_config+9,_os+36	;volatile
 44886  014606  C1A0  F18A         	movff	_config+10,_os+37	;volatile
 44887                           
 44888                           ;motor.c: 894: }
 44889  01460A  D004               	goto	l2623
 44890  01460C                     l2622:
 44891                           
 44892                           ; BSR set to: 0
 44893                           ;motor.c: 895: else;motor.c: 896: {;motor.c: 897: os.manual_speed = new_speed;
 44894  01460C  C062  F189         	movff	motor_set_manual_speed@new_speed,_os+36	;volatile
 44895  014610  C063  F18A         	movff	motor_set_manual_speed@new_speed+1,_os+37	;volatile
 44896  014614                     l2623:
 44897                           
 44898                           ;motor.c: 898: };motor.c: 902: if(os.busy && motor_maximum_speed==old_speed)
 44899                           
 44900                           ; BSR set to: 0
 44901                           
 44902                           ; BSR set to: 0
 44903  014614  0101               	movlb	1	; () banked
 44904  014616  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 44905  014618  B4D8               	btfsc	status,2,c
 44906  01461A  0012               	return	
 44907                           
 44908                           ; BSR set to: 1
 44909  01461C  0100               	movlb	0	; () banked
 44910  01461E  5164               	movf	motor_set_manual_speed@old_speed& (0+255),w,b
 44911  014620  0101               	movlb	1	; () banked
 44912  014622  1937               	xorwf	_motor_maximum_speed& (0+255),w,b
 44913  014624  E10D               	bnz	l2625
 44914  014626  0100               	movlb	0	; () banked
 44915  014628  5165               	movf	(motor_set_manual_speed@old_speed+1)& (0+255),w,b
 44916  01462A  0101               	movlb	1	; () banked
 44917  01462C  1938               	xorwf	(_motor_maximum_speed+1)& (0+255),w,b
 44918  01462E  A4D8               	btfss	status,2,c
 44919  014630  0012               	return	
 44920                           
 44921                           ; BSR set to: 1
 44922                           ;motor.c: 903: {;motor.c: 904: motor_change_speed(os.manual_speed);
 44923  014632  C189  F060         	movff	_os+36,motor_change_speed@new_speed	;volatile
 44924  014636  C18A  F061         	movff	_os+37,motor_change_speed@new_speed+1	;volatile
 44925  01463A  EC77  F0B0         	call	_motor_change_speed	;wreg free
 44926  01463E  0012               	return	
 44927  014640                     l2625:
 44928  014640  0012               	return		;funcret
 44929  014642                     __end_of_motor_set_manual_speed:
 44930                           	opt stack 0
 44931                           tosu	equ	0xFFF
 44932                           tosh	equ	0xFFE
 44933                           tosl	equ	0xFFD
 44934                           pclath	equ	0xFFA
 44935                           tblptru	equ	0xFF8
 44936                           tblptrh	equ	0xFF7
 44937                           tblptrl	equ	0xFF6
 44938                           tablat	equ	0xFF5
 44939                           prodh	equ	0xFF4
 44940                           prodl	equ	0xFF3
 44941                           intcon	equ	0xFF2
 44942                           indf0	equ	0xFEF
 44943                           postinc0	equ	0xFEE
 44944                           fsr0h	equ	0xFEA
 44945                           fsr0l	equ	0xFE9
 44946                           wreg	equ	0xFE8
 44947                           indf1	equ	0xFE7
 44948                           postinc1	equ	0xFE6
 44949                           postdec1	equ	0xFE5
 44950                           plusw1	equ	0xFE3
 44951                           fsr1h	equ	0xFE2
 44952                           fsr1l	equ	0xFE1
 44953                           indf2	equ	0xFDF
 44954                           postinc2	equ	0xFDE
 44955                           postdec2	equ	0xFDD
 44956                           plusw2	equ	0xFDB
 44957                           fsr2h	equ	0xFDA
 44958                           fsr2l	equ	0xFD9
 44959                           status	equ	0xFD8
 44960                           
 44961 ;; *************** function _motor_change_speed *****************
 44962 ;; Defined at:
 44963 ;;		line 908 in file "motor.c"
 44964 ;; Parameters:    Size  Location     Type
 44965 ;;  new_speed       2    0[BANK0 ] unsigned int 
 44966 ;; Auto vars:     Size  Location     Type
 44967 ;;		None
 44968 ;; Return value:  Size  Location     Type
 44969 ;;                  1    wreg      void 
 44970 ;; Registers used:
 44971 ;;		None
 44972 ;; Tracked objects:
 44973 ;;		On entry : 0/0
 44974 ;;		On exit  : 0/0
 44975 ;;		Unchanged: 0/0
 44976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44980 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44981 ;;Total ram usage:        2 bytes
 44982 ;; Hardware stack levels used:    1
 44983 ;; Hardware stack levels required when called:   10
 44984 ;; This function calls:
 44985 ;;		Nothing
 44986 ;; This function is called by:
 44987 ;;		_motor_set_manual_speed
 44988 ;;		_encoder_statemachine
 44989 ;; This function uses a non-reentrant model
 44990 ;;
 44991                           
 44992                           	psect	text185
 44993  0160EE                     __ptext185:
 44994                           	opt stack 0
 44995  0160EE                     _motor_change_speed:
 44996                           	opt stack 17
 44997                           
 44998                           ;motor.c: 910: motor_maximum_speed = new_speed;
 44999                           
 45000                           ;incstack = 0
 45001  0160EE  C060  F137         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 45002  0160F2  C061  F138         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 45003  0160F6  0012               	return		;funcret
 45004  0160F8                     __end_of_motor_change_speed:
 45005                           	opt stack 0
 45006                           tosu	equ	0xFFF
 45007                           tosh	equ	0xFFE
 45008                           tosl	equ	0xFFD
 45009                           pclath	equ	0xFFA
 45010                           tblptru	equ	0xFF8
 45011                           tblptrh	equ	0xFF7
 45012                           tblptrl	equ	0xFF6
 45013                           tablat	equ	0xFF5
 45014                           prodh	equ	0xFF4
 45015                           prodl	equ	0xFF3
 45016                           intcon	equ	0xFF2
 45017                           indf0	equ	0xFEF
 45018                           postinc0	equ	0xFEE
 45019                           fsr0h	equ	0xFEA
 45020                           fsr0l	equ	0xFE9
 45021                           wreg	equ	0xFE8
 45022                           indf1	equ	0xFE7
 45023                           postinc1	equ	0xFE6
 45024                           postdec1	equ	0xFE5
 45025                           plusw1	equ	0xFE3
 45026                           fsr1h	equ	0xFE2
 45027                           fsr1l	equ	0xFE1
 45028                           indf2	equ	0xFDF
 45029                           postinc2	equ	0xFDE
 45030                           postdec2	equ	0xFDD
 45031                           plusw2	equ	0xFDB
 45032                           fsr2h	equ	0xFDA
 45033                           fsr2l	equ	0xFD9
 45034                           status	equ	0xFD8
 45035                           
 45036 ;; *************** function __parse_jump_steps_with_overshoot *****************
 45037 ;; Defined at:
 45038 ;;		line 525 in file "api.c"
 45039 ;; Parameters:    Size  Location     Type
 45040 ;;  data            2   52[BANK0 ] PTR unsigned char 
 45041 ;;		 -> ReceivedDataBuffer(64), 
 45042 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 45043 ;;		 -> ToSendDataBuffer(64), 
 45044 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 45045 ;;		 -> api_parse@out_idx(1), 
 45046 ;; Auto vars:     Size  Location     Type
 45047 ;;  number_of_st    4   60[BANK0 ] long 
 45048 ;;  return_value    1   59[BANK0 ] unsigned char 
 45049 ;; Return value:  Size  Location     Type
 45050 ;;                  1    wreg      unsigned char 
 45051 ;; Registers used:
 45052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45053 ;; Tracked objects:
 45054 ;;		On entry : 0/0
 45055 ;;		On exit  : 0/0
 45056 ;;		Unchanged: 0/0
 45057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45058 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45059 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45061 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45062 ;;Total ram usage:       12 bytes
 45063 ;; Hardware stack levels used:    1
 45064 ;; Hardware stack levels required when called:   14
 45065 ;; This function calls:
 45066 ;;		_motor_move_steps
 45067 ;; This function is called by:
 45068 ;;		__parse_command_long
 45069 ;; This function uses a non-reentrant model
 45070 ;;
 45071                           
 45072                           	psect	text186
 45073  00FCC0                     __ptext186:
 45074                           	opt stack 0
 45075  00FCC0                     __parse_jump_steps_with_overshoot:
 45076                           	opt stack 13
 45077                           
 45078                           ;api.c: 528: uint8_t return_value;;api.c: 529: int32_t number_of_steps;;api.c: 531: numb
      +                          er_of_steps = data[1];
 45079                           
 45080                           ;incstack = 0
 45081  00FCC0  0100               	movlb	0	; () banked
 45082  00FCC2  EE20 F001          	lfsr	2,1
 45083  00FCC6  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 45084  00FCC8  26D9               	addwf	fsr2l,f,c
 45085  00FCCA  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 45086  00FCCC  22DA               	addwfc	fsr2h,f,c
 45087  00FCCE  50DF               	movf	indf2,w,c
 45088  00FCD0  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 45089  00FCD2  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 45090  00FCD4  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 45091  00FCD6  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 45092  00FCD8  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 45093  00FCDA  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 45094                           
 45095                           ; BSR set to: 0
 45096                           ;api.c: 532: number_of_steps <<= 8;
 45097  00FCDC  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 45098  00FCE0  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 45099  00FCE4  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 45100  00FCE8  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 45101                           
 45102                           ; BSR set to: 0
 45103                           ;api.c: 533: number_of_steps |= data[2];
 45104  00FCEA  EE20 F002          	lfsr	2,2
 45105  00FCEE  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 45106  00FCF0  26D9               	addwf	fsr2l,f,c
 45107  00FCF2  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 45108  00FCF4  22DA               	addwfc	fsr2h,f,c
 45109  00FCF6  50DF               	movf	indf2,w,c
 45110  00FCF8  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 45111  00FCFA  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 45112  00FCFC  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 45113                           
 45114                           ;api.c: 534: number_of_steps <<= 8;
 45115  00FCFE  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 45116  00FD02  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 45117  00FD06  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 45118  00FD0A  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 45119                           
 45120                           ; BSR set to: 0
 45121                           ;api.c: 535: number_of_steps |= data[3];
 45122  00FD0C  EE20 F003          	lfsr	2,3
 45123  00FD10  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 45124  00FD12  26D9               	addwf	fsr2l,f,c
 45125  00FD14  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 45126  00FD16  22DA               	addwfc	fsr2h,f,c
 45127  00FD18  50DF               	movf	indf2,w,c
 45128  00FD1A  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 45129  00FD1C  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 45130  00FD1E  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 45131                           
 45132                           ; BSR set to: 0
 45133                           ;api.c: 536: number_of_steps <<= 8;
 45134  00FD20  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 45135  00FD24  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 45136  00FD28  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 45137  00FD2C  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 45138                           
 45139                           ;api.c: 537: number_of_steps |= data[4];
 45140  00FD2E  EE20 F004          	lfsr	2,4
 45141  00FD32  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 45142  00FD34  26D9               	addwf	fsr2l,f,c
 45143  00FD36  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 45144  00FD38  22DA               	addwfc	fsr2h,f,c
 45145  00FD3A  50DF               	movf	indf2,w,c
 45146  00FD3C  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 45147  00FD3E  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 45148  00FD40  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 45149                           
 45150                           ; BSR set to: 0
 45151                           ;api.c: 539: if(number_of_steps>0)
 45152  00FD42  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 45153  00FD44  D018               	goto	l2368
 45154  00FD46  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 45155  00FD48  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 45156  00FD4A  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 45157  00FD4C  E103               	bnz	u14380
 45158  00FD4E  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 45159  00FD50  A0D8               	btfss	status,0,c
 45160  00FD52  D011               	goto	l2368
 45161  00FD54                     u14380:
 45162                           
 45163                           ; BSR set to: 0
 45164                           ;api.c: 540: {;api.c: 541: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 45165  00FD54  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 45166  00FD58  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 45167  00FD5C  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 45168  00FD60  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 45169  00FD64  0EFF               	movlw	255
 45170  00FD66  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45171  00FD68  6990               	setf	motor_move_steps@speed& (0+255),b
 45172  00FD6A  0E00               	movlw	0
 45173  00FD6C  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45174  00FD6E  0E01               	movlw	1
 45175  00FD70  EC1F  F0AE         	call	_motor_move_steps
 45176                           
 45177                           ;api.c: 542: }
 45178  00FD74  D019               	goto	l2369
 45179  00FD76                     l2368:
 45180                           
 45181                           ;api.c: 543: else;api.c: 544: {;api.c: 545: number_of_steps = -number_of_steps;
 45182  00FD76  0100               	movlb	0	; () banked
 45183  00FD78  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 45184  00FD7A  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 45185  00FD7C  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 45186  00FD7E  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 45187  00FD80  0E00               	movlw	0
 45188  00FD82  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 45189  00FD84  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 45190  00FD86  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 45191                           
 45192                           ; BSR set to: 0
 45193                           ;api.c: 546: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 45194  00FD88  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 45195  00FD8C  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 45196  00FD90  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 45197  00FD94  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 45198  00FD98  0EFF               	movlw	255
 45199  00FD9A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45200  00FD9C  6990               	setf	motor_move_steps@speed& (0+255),b
 45201  00FD9E  0E00               	movlw	0
 45202  00FDA0  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45203  00FDA2  0EFF               	movlw	255
 45204  00FDA4  EC1F  F0AE         	call	_motor_move_steps
 45205  00FDA8                     l2369:
 45206                           
 45207                           ;api.c: 547: };api.c: 550: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 45208  00FDA8  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 45209  00FDAC  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 45210  00FDB0  50DF               	movf	indf2,w,c
 45211  00FDB2  B4D8               	btfsc	status,2,c
 45212  00FDB4  D02C               	goto	l2370
 45213  00FDB6  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 45214  00FDBA  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 45215  00FDBE  0E3E               	movlw	62
 45216  00FDC0  60DF               	cpfslt	indf2,c
 45217  00FDC2  D025               	goto	l2370
 45218                           
 45219                           ;api.c: 551: {;api.c: 552: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 45220  00FDC4  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 45221  00FDC8  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 45222  00FDCC  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 45223  00FDD0  0E01               	movlw	1
 45224  00FDD2  26DF               	addwf	indf2,f,c
 45225  00FDD4  0100               	movlb	0	; () banked
 45226  00FDD6  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 45227  00FDD8  0D01               	mullw	1
 45228  00FDDA  50F3               	movf	prodl,w,c
 45229  00FDDC  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 45230  00FDDE  6ED9               	movwf	fsr2l,c
 45231  00FDE0  50F4               	movf	prodh,w,c
 45232  00FDE2  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 45233  00FDE4  6EDA               	movwf	fsr2h,c
 45234  00FDE6  0E91               	movlw	145
 45235  00FDE8  6EDF               	movwf	indf2,c
 45236                           
 45237                           ;api.c: 553: out_buffer[(*out_idx_ptr)++] = return_value;
 45238  00FDEA  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 45239  00FDEE  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 45240  00FDF2  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 45241  00FDF6  0E01               	movlw	1
 45242  00FDF8  26DF               	addwf	indf2,f,c
 45243  00FDFA  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 45244  00FDFC  0D01               	mullw	1
 45245  00FDFE  50F3               	movf	prodl,w,c
 45246  00FE00  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 45247  00FE02  6ED9               	movwf	fsr2l,c
 45248  00FE04  50F4               	movf	prodh,w,c
 45249  00FE06  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 45250  00FE08  6EDA               	movwf	fsr2h,c
 45251  00FE0A  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 45252  00FE0E                     l2370:
 45253                           
 45254                           ;api.c: 554: };api.c: 556: return 5;
 45255                           
 45256                           ; BSR set to: 0
 45257  00FE0E  0E05               	movlw	5
 45258  00FE10  0012               	return	
 45259  00FE12                     __end_of__parse_jump_steps_with_overshoot:
 45260                           	opt stack 0
 45261                           tosu	equ	0xFFF
 45262                           tosh	equ	0xFFE
 45263                           tosl	equ	0xFFD
 45264                           pclath	equ	0xFFA
 45265                           tblptru	equ	0xFF8
 45266                           tblptrh	equ	0xFF7
 45267                           tblptrl	equ	0xFF6
 45268                           tablat	equ	0xFF5
 45269                           prodh	equ	0xFF4
 45270                           prodl	equ	0xFF3
 45271                           intcon	equ	0xFF2
 45272                           indf0	equ	0xFEF
 45273                           postinc0	equ	0xFEE
 45274                           fsr0h	equ	0xFEA
 45275                           fsr0l	equ	0xFE9
 45276                           wreg	equ	0xFE8
 45277                           indf1	equ	0xFE7
 45278                           postinc1	equ	0xFE6
 45279                           postdec1	equ	0xFE5
 45280                           plusw1	equ	0xFE3
 45281                           fsr1h	equ	0xFE2
 45282                           fsr1l	equ	0xFE1
 45283                           indf2	equ	0xFDF
 45284                           postinc2	equ	0xFDE
 45285                           postdec2	equ	0xFDD
 45286                           plusw2	equ	0xFDB
 45287                           fsr2h	equ	0xFDA
 45288                           fsr2l	equ	0xFD9
 45289                           status	equ	0xFD8
 45290                           
 45291 ;; *************** function __parse_jump_steps *****************
 45292 ;; Defined at:
 45293 ;;		line 490 in file "api.c"
 45294 ;; Parameters:    Size  Location     Type
 45295 ;;  data            2   52[BANK0 ] PTR unsigned char 
 45296 ;;		 -> ReceivedDataBuffer(64), 
 45297 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 45298 ;;		 -> ToSendDataBuffer(64), 
 45299 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 45300 ;;		 -> api_parse@out_idx(1), 
 45301 ;; Auto vars:     Size  Location     Type
 45302 ;;  number_of_st    4   60[BANK0 ] long 
 45303 ;;  return_value    1   59[BANK0 ] unsigned char 
 45304 ;; Return value:  Size  Location     Type
 45305 ;;                  1    wreg      unsigned char 
 45306 ;; Registers used:
 45307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45308 ;; Tracked objects:
 45309 ;;		On entry : 0/0
 45310 ;;		On exit  : 0/0
 45311 ;;		Unchanged: 0/0
 45312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45313 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45314 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45315 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45316 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45317 ;;Total ram usage:       12 bytes
 45318 ;; Hardware stack levels used:    1
 45319 ;; Hardware stack levels required when called:   14
 45320 ;; This function calls:
 45321 ;;		_motor_move_steps
 45322 ;; This function is called by:
 45323 ;;		__parse_command_long
 45324 ;; This function uses a non-reentrant model
 45325 ;;
 45326                           
 45327                           	psect	text187
 45328  00FE12                     __ptext187:
 45329                           	opt stack 0
 45330  00FE12                     __parse_jump_steps:
 45331                           	opt stack 13
 45332                           
 45333                           ;api.c: 494: uint8_t return_value;;api.c: 495: int32_t number_of_steps;;api.c: 497: numb
      +                          er_of_steps = data[1];
 45334                           
 45335                           ;incstack = 0
 45336  00FE12  0100               	movlb	0	; () banked
 45337  00FE14  EE20 F001          	lfsr	2,1
 45338  00FE18  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45339  00FE1A  26D9               	addwf	fsr2l,f,c
 45340  00FE1C  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45341  00FE1E  22DA               	addwfc	fsr2h,f,c
 45342  00FE20  50DF               	movf	indf2,w,c
 45343  00FE22  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45344  00FE24  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45345  00FE26  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 45346  00FE28  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 45347  00FE2A  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 45348  00FE2C  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 45349                           
 45350                           ; BSR set to: 0
 45351                           ;api.c: 498: number_of_steps <<= 8;
 45352  00FE2E  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 45353  00FE32  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 45354  00FE36  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 45355  00FE3A  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 45356                           
 45357                           ; BSR set to: 0
 45358                           ;api.c: 499: number_of_steps |= data[2];
 45359  00FE3C  EE20 F002          	lfsr	2,2
 45360  00FE40  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45361  00FE42  26D9               	addwf	fsr2l,f,c
 45362  00FE44  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45363  00FE46  22DA               	addwfc	fsr2h,f,c
 45364  00FE48  50DF               	movf	indf2,w,c
 45365  00FE4A  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45366  00FE4C  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45367  00FE4E  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 45368                           
 45369                           ;api.c: 500: number_of_steps <<= 8;
 45370  00FE50  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 45371  00FE54  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 45372  00FE58  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 45373  00FE5C  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 45374                           
 45375                           ; BSR set to: 0
 45376                           ;api.c: 501: number_of_steps |= data[3];
 45377  00FE5E  EE20 F003          	lfsr	2,3
 45378  00FE62  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45379  00FE64  26D9               	addwf	fsr2l,f,c
 45380  00FE66  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45381  00FE68  22DA               	addwfc	fsr2h,f,c
 45382  00FE6A  50DF               	movf	indf2,w,c
 45383  00FE6C  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45384  00FE6E  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45385  00FE70  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 45386                           
 45387                           ; BSR set to: 0
 45388                           ;api.c: 502: number_of_steps <<= 8;
 45389  00FE72  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 45390  00FE76  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 45391  00FE7A  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 45392  00FE7E  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 45393                           
 45394                           ;api.c: 503: number_of_steps |= data[4];
 45395  00FE80  EE20 F004          	lfsr	2,4
 45396  00FE84  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45397  00FE86  26D9               	addwf	fsr2l,f,c
 45398  00FE88  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45399  00FE8A  22DA               	addwfc	fsr2h,f,c
 45400  00FE8C  50DF               	movf	indf2,w,c
 45401  00FE8E  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45402  00FE90  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45403  00FE92  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 45404                           
 45405                           ; BSR set to: 0
 45406                           ;api.c: 505: if(number_of_steps>0)
 45407  00FE94  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 45408  00FE96  D018               	goto	l2362
 45409  00FE98  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 45410  00FE9A  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 45411  00FE9C  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 45412  00FE9E  E103               	bnz	u14350
 45413  00FEA0  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 45414  00FEA2  A0D8               	btfss	status,0,c
 45415  00FEA4  D011               	goto	l2362
 45416  00FEA6                     u14350:
 45417                           
 45418                           ; BSR set to: 0
 45419                           ;api.c: 506: {;api.c: 507: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 45420  00FEA6  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 45421  00FEAA  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45422  00FEAE  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45423  00FEB2  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45424  00FEB6  0EFF               	movlw	255
 45425  00FEB8  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45426  00FEBA  6990               	setf	motor_move_steps@speed& (0+255),b
 45427  00FEBC  0E01               	movlw	1
 45428  00FEBE  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45429  00FEC0  0E01               	movlw	1
 45430  00FEC2  EC1F  F0AE         	call	_motor_move_steps
 45431  00FEC6  D018               	goto	L68
 45432  00FEC8                     l2362:
 45433                           
 45434                           ; BSR set to: 0
 45435                           ;api.c: 509: else;api.c: 510: {;api.c: 511: number_of_steps = -number_of_steps;
 45436                           
 45437                           ; BSR set to: 0
 45438  00FEC8  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45439  00FECA  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45440  00FECC  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45441  00FECE  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 45442  00FED0  0E00               	movlw	0
 45443  00FED2  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45444  00FED4  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45445  00FED6  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45446                           
 45447                           ; BSR set to: 0
 45448                           ;api.c: 512: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 45449  00FED8  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 45450  00FEDC  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45451  00FEE0  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45452  00FEE4  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45453  00FEE8  0EFF               	movlw	255
 45454  00FEEA  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45455  00FEEC  6990               	setf	motor_move_steps@speed& (0+255),b
 45456  00FEEE  0E01               	movlw	1
 45457  00FEF0  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45458  00FEF2  0EFF               	movlw	255
 45459  00FEF4  EC1F  F0AE         	call	_motor_move_steps
 45460  00FEF8                     L68:
 45461  00FEF8  0100               	movlb	0	; () banked
 45462  00FEFA  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 45463                           
 45464                           ; BSR set to: 0
 45465                           ;api.c: 513: };api.c: 516: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 45466                           
 45467                           ; BSR set to: 0
 45468  00FEFC  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45469  00FF00  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45470  00FF04  50DF               	movf	indf2,w,c
 45471  00FF06  B4D8               	btfsc	status,2,c
 45472  00FF08  D02B               	goto	l2364
 45473                           
 45474                           ; BSR set to: 0
 45475  00FF0A  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45476  00FF0E  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45477  00FF12  0E3E               	movlw	62
 45478  00FF14  60DF               	cpfslt	indf2,c
 45479  00FF16  D024               	goto	l2364
 45480                           
 45481                           ; BSR set to: 0
 45482                           ;api.c: 517: {;api.c: 518: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 45483  00FF18  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45484  00FF1C  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45485  00FF20  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45486  00FF24  0E01               	movlw	1
 45487  00FF26  26DF               	addwf	indf2,f,c
 45488  00FF28  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45489  00FF2A  0D01               	mullw	1
 45490  00FF2C  50F3               	movf	prodl,w,c
 45491  00FF2E  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45492  00FF30  6ED9               	movwf	fsr2l,c
 45493  00FF32  50F4               	movf	prodh,w,c
 45494  00FF34  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45495  00FF36  6EDA               	movwf	fsr2h,c
 45496  00FF38  0E90               	movlw	144
 45497  00FF3A  6EDF               	movwf	indf2,c
 45498                           
 45499                           ;api.c: 519: out_buffer[(*out_idx_ptr)++] = return_value;
 45500  00FF3C  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45501  00FF40  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45502  00FF44  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45503  00FF48  0E01               	movlw	1
 45504  00FF4A  26DF               	addwf	indf2,f,c
 45505  00FF4C  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45506  00FF4E  0D01               	mullw	1
 45507  00FF50  50F3               	movf	prodl,w,c
 45508  00FF52  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45509  00FF54  6ED9               	movwf	fsr2l,c
 45510  00FF56  50F4               	movf	prodh,w,c
 45511  00FF58  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45512  00FF5A  6EDA               	movwf	fsr2h,c
 45513  00FF5C  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 45514  00FF60                     l2364:
 45515                           
 45516                           ; BSR set to: 0
 45517                           ;api.c: 520: };api.c: 522: return 5;
 45518                           
 45519                           ; BSR set to: 0
 45520  00FF60  0E05               	movlw	5
 45521  00FF62  0012               	return	
 45522  00FF64                     __end_of__parse_jump_steps:
 45523                           	opt stack 0
 45524                           tosu	equ	0xFFF
 45525                           tosh	equ	0xFFE
 45526                           tosl	equ	0xFFD
 45527                           pclath	equ	0xFFA
 45528                           tblptru	equ	0xFF8
 45529                           tblptrh	equ	0xFF7
 45530                           tblptrl	equ	0xFF6
 45531                           tablat	equ	0xFF5
 45532                           prodh	equ	0xFF4
 45533                           prodl	equ	0xFF3
 45534                           intcon	equ	0xFF2
 45535                           indf0	equ	0xFEF
 45536                           postinc0	equ	0xFEE
 45537                           fsr0h	equ	0xFEA
 45538                           fsr0l	equ	0xFE9
 45539                           wreg	equ	0xFE8
 45540                           indf1	equ	0xFE7
 45541                           postinc1	equ	0xFE6
 45542                           postdec1	equ	0xFE5
 45543                           plusw1	equ	0xFE3
 45544                           fsr1h	equ	0xFE2
 45545                           fsr1l	equ	0xFE1
 45546                           indf2	equ	0xFDF
 45547                           postinc2	equ	0xFDE
 45548                           postdec2	equ	0xFDD
 45549                           plusw2	equ	0xFDB
 45550                           fsr2h	equ	0xFDA
 45551                           fsr2l	equ	0xFD9
 45552                           status	equ	0xFD8
 45553                           
 45554 ;; *************** function _motor_move_steps *****************
 45555 ;; Defined at:
 45556 ;;		line 995 in file "motor.c"
 45557 ;; Parameters:    Size  Location     Type
 45558 ;;  direction       1    wreg     enum E6622
 45559 ;;  distance        4   44[BANK0 ] unsigned long 
 45560 ;;  speed           2   48[BANK0 ] unsigned int 
 45561 ;;  overshoot       1   50[BANK0 ] enum E6635
 45562 ;; Auto vars:     Size  Location     Type
 45563 ;;  direction       1   51[BANK0 ] enum E6622
 45564 ;; Return value:  Size  Location     Type
 45565 ;;                  1    wreg      enum E6782
 45566 ;; Registers used:
 45567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45568 ;; Tracked objects:
 45569 ;;		On entry : 0/0
 45570 ;;		On exit  : 0/0
 45571 ;;		Unchanged: 0/0
 45572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45573 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45576 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45577 ;;Total ram usage:        8 bytes
 45578 ;; Hardware stack levels used:    1
 45579 ;; Hardware stack levels required when called:   13
 45580 ;; This function calls:
 45581 ;;		__motor_move_steps
 45582 ;; This function is called by:
 45583 ;;		__parse_jump_steps
 45584 ;;		__parse_jump_steps_with_overshoot
 45585 ;;		_motor_arc_move
 45586 ;; This function uses a non-reentrant model
 45587 ;;
 45588                           
 45589                           	psect	text188
 45590  015C3E                     __ptext188:
 45591                           	opt stack 0
 45592  015C3E                     _motor_move_steps:
 45593                           	opt stack 15
 45594                           
 45595                           ; BSR set to: 0
 45596                           ;incstack = 0
 45597                           ;motor_move_steps@direction stored from wreg
 45598  015C3E  0100               	movlb	0	; () banked
 45599  015C40  6F93               	movwf	motor_move_steps@direction& (0+255),b
 45600                           
 45601                           ;motor.c: 998: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 45602  015C42  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 45603  015C46  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 45604  015C4A  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 45605  015C4E  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 45606  015C52  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 45607  015C56  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 45608  015C5A  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 45609  015C5E  0E00               	movlw	0
 45610  015C60  0100               	movlb	0	; () banked
 45611  015C62  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45612  015C64  5193               	movf	motor_move_steps@direction& (0+255),w,b
 45613  015C66  EC2E  F077         	call	__motor_move_steps
 45614  015C6A  0012               	return	
 45615  015C6C                     __end_of_motor_move_steps:
 45616                           	opt stack 0
 45617                           tosu	equ	0xFFF
 45618                           tosh	equ	0xFFE
 45619                           tosl	equ	0xFFD
 45620                           pclath	equ	0xFFA
 45621                           tblptru	equ	0xFF8
 45622                           tblptrh	equ	0xFF7
 45623                           tblptrl	equ	0xFF6
 45624                           tablat	equ	0xFF5
 45625                           prodh	equ	0xFF4
 45626                           prodl	equ	0xFF3
 45627                           intcon	equ	0xFF2
 45628                           indf0	equ	0xFEF
 45629                           postinc0	equ	0xFEE
 45630                           fsr0h	equ	0xFEA
 45631                           fsr0l	equ	0xFE9
 45632                           wreg	equ	0xFE8
 45633                           indf1	equ	0xFE7
 45634                           postinc1	equ	0xFE6
 45635                           postdec1	equ	0xFE5
 45636                           plusw1	equ	0xFE3
 45637                           fsr1h	equ	0xFE2
 45638                           fsr1l	equ	0xFE1
 45639                           indf2	equ	0xFDF
 45640                           postinc2	equ	0xFDE
 45641                           postdec2	equ	0xFDD
 45642                           plusw2	equ	0xFDB
 45643                           fsr2h	equ	0xFDA
 45644                           fsr2l	equ	0xFD9
 45645                           status	equ	0xFD8
 45646                           
 45647 ;; *************** function __motor_move_steps *****************
 45648 ;; Defined at:
 45649 ;;		line 187 in file "motor.c"
 45650 ;; Parameters:    Size  Location     Type
 45651 ;;  direction       1    wreg     enum E6622
 45652 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 45653 ;;  speed           2   33[BANK0 ] unsigned int 
 45654 ;;  overshoot       1   35[BANK0 ] enum E6635
 45655 ;;  type            1   36[BANK0 ] enum E6631
 45656 ;; Auto vars:     Size  Location     Type
 45657 ;;  direction       1   43[BANK0 ] enum E6622
 45658 ;;  distance_to_    4   39[BANK0 ] long 
 45659 ;;  return_value    1   38[BANK0 ] enum E6639
 45660 ;;  return_value    1   37[BANK0 ] enum E6639
 45661 ;; Return value:  Size  Location     Type
 45662 ;;                  1    wreg      enum E6639
 45663 ;; Registers used:
 45664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45665 ;; Tracked objects:
 45666 ;;		On entry : 0/0
 45667 ;;		On exit  : 0/0
 45668 ;;		Unchanged: 0/0
 45669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45670 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45671 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45673 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45674 ;;Total ram usage:       15 bytes
 45675 ;; Hardware stack levels used:    1
 45676 ;; Hardware stack levels required when called:   12
 45677 ;; This function calls:
 45678 ;;		__motor_distance_to_limit
 45679 ;;		__motor_schedule_command
 45680 ;;		_motor_items_in_cue
 45681 ;; This function is called by:
 45682 ;;		_motor_move_steps
 45683 ;;		_motor_move_degrees_int
 45684 ;;		_motor_goto_steps
 45685 ;;		_motor_move_endless
 45686 ;;		_motor_move_degrees_float
 45687 ;;		_motor_goto_degrees_float
 45688 ;;		_motor_goto_degrees_int
 45689 ;; This function uses a non-reentrant model
 45690 ;;
 45691                           
 45692                           	psect	text189
 45693  00EE5C                     __ptext189:
 45694                           	opt stack 0
 45695  00EE5C                     __motor_move_steps:
 45696                           	opt stack 16
 45697                           
 45698                           ;incstack = 0
 45699                           ;__motor_move_steps@direction stored from wreg
 45700  00EE5C  0100               	movlb	0	; () banked
 45701  00EE5E  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 45702                           
 45703                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 45704  00EE60  0101               	movlb	1	; () banked
 45705  00EE62  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 45706  00EE64  A4D8               	btfss	status,2,c
 45707  00EE66  D005               	goto	u11690
 45708                           
 45709                           ; BSR set to: 1
 45710  00EE68  EC58  F0B0         	call	_motor_items_in_cue	;wreg free
 45711  00EE6C  0900               	iorlw	0
 45712  00EE6E  B4D8               	btfsc	status,2,c
 45713  00EE70  D002               	goto	l2477
 45714  00EE72                     u11690:
 45715                           
 45716                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 45717  00EE72  0E01               	movlw	1
 45718  00EE74  0012               	return	
 45719  00EE76                     l2477:
 45720                           
 45721                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45722  00EE76  0100               	movlb	0	; () banked
 45723  00EE78  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 45724  00EE7A  B4D8               	btfsc	status,2,c
 45725  00EE7C  D005               	goto	l2481
 45726                           
 45727                           ; BSR set to: 0
 45728  00EE7E  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 45729  00EE80  B4D8               	btfsc	status,2,c
 45730  00EE82  D002               	goto	l2481
 45731                           
 45732                           ; BSR set to: 0
 45733                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45734  00EE84  0E04               	movlw	4
 45735                           
 45736                           ; BSR set to: 0
 45737  00EE86  0012               	return	
 45738  00EE88                     l2481:
 45739                           
 45740                           ; BSR set to: 0
 45741                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 45742                           
 45743                           ; BSR set to: 0
 45744  00EE88  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45745  00EE8A  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45746  00EE8C  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45747  00EE8E  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45748  00EE90  A4D8               	btfss	status,2,c
 45749  00EE92  D002               	goto	l2482
 45750                           
 45751                           ; BSR set to: 0
 45752                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45753  00EE94  0E03               	movlw	3
 45754                           
 45755                           ; BSR set to: 0
 45756  00EE96  0012               	return	
 45757  00EE98                     l2482:
 45758                           
 45759                           ; BSR set to: 0
 45760                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 45761                           
 45762                           ; BSR set to: 0
 45763  00EE98  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 45764  00EE9A  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 45765  00EE9C  A4D8               	btfss	status,2,c
 45766  00EE9E  D002               	goto	l2483
 45767                           
 45768                           ; BSR set to: 0
 45769                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45770  00EEA0  0E02               	movlw	2
 45771                           
 45772                           ; BSR set to: 0
 45773  00EEA2  0012               	return	
 45774  00EEA4                     l2483:
 45775                           
 45776                           ; BSR set to: 0
 45777                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 45778                           
 45779                           ; BSR set to: 0
 45780  00EEA4  5184               	movf	__motor_move_steps@type& (0+255),w,b
 45781  00EEA6  B4D8               	btfsc	status,2,c
 45782  00EEA8  D005               	goto	l2484
 45783                           
 45784                           ; BSR set to: 0
 45785  00EEAA  0584               	decf	__motor_move_steps@type& (0+255),w,b
 45786  00EEAC  B4D8               	btfsc	status,2,c
 45787  00EEAE  D002               	goto	l2484
 45788                           
 45789                           ; BSR set to: 0
 45790                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45791  00EEB0  0E05               	movlw	5
 45792                           
 45793                           ; BSR set to: 0
 45794  00EEB2  0012               	return	
 45795  00EEB4                     l2484:
 45796                           
 45797                           ; BSR set to: 0
 45798                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 45799                           
 45800                           ; BSR set to: 0
 45801  00EEB4  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45802  00EEB6  B4D8               	btfsc	status,2,c
 45803  00EEB8  D005               	goto	l2485
 45804                           
 45805                           ; BSR set to: 0
 45806  00EEBA  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 45807  00EEBC  B4D8               	btfsc	status,2,c
 45808  00EEBE  D002               	goto	l2485
 45809                           
 45810                           ; BSR set to: 0
 45811                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 45812  00EEC0  0E06               	movlw	6
 45813                           
 45814                           ; BSR set to: 0
 45815  00EEC2  0012               	return	
 45816  00EEC4                     l2485:
 45817                           
 45818                           ; BSR set to: 0
 45819                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 45820                           
 45821                           ; BSR set to: 0
 45822  00EEC4  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45823  00EEC6  EC58  F080         	call	__motor_distance_to_limit
 45824  00EECA  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 45825  00EECE  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 45826  00EED2  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 45827  00EED6  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 45828                           
 45829                           ;motor.c: 236: if(distance_to_limit<=0)
 45830  00EEDA  0100               	movlb	0	; () banked
 45831  00EEDC  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 45832  00EEDE  D007               	goto	u11780
 45833  00EEE0  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45834  00EEE2  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45835  00EEE4  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45836  00EEE6  E105               	bnz	l13424
 45837  00EEE8  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45838  00EEEA  B0D8               	btfsc	status,0,c
 45839  00EEEC  D002               	goto	l2486
 45840  00EEEE                     u11780:
 45841                           
 45842                           ; BSR set to: 0
 45843                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 45844  00EEEE  0E07               	movlw	7
 45845                           
 45846                           ; BSR set to: 0
 45847  00EEF0  0012               	return	
 45848  00EEF2                     l2486:
 45849  00EEF2                     l13424:
 45850                           
 45851                           ; BSR set to: 0
 45852                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 45853  00EEF2  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45854  00EEF4  E108               	bnz	u11790
 45855  00EEF6  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45856  00EEF8  E106               	bnz	u11790
 45857  00EEFA  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45858  00EEFC  E104               	bnz	u11790
 45859  00EEFE  0E7F               	movlw	127
 45860  00EF00  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45861  00EF02  B4D8               	btfsc	status,2,c
 45862  00EF04  D002               	goto	l2487
 45863  00EF06                     u11790:
 45864                           
 45865                           ; BSR set to: 0
 45866                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 45867  00EF06  0E00               	movlw	0
 45868  00EF08  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45869  00EF0A                     l2487:
 45870                           
 45871                           ; BSR set to: 0
 45872                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 45873                           
 45874                           ; BSR set to: 0
 45875  00EF0A  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45876  00EF0C  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45877  00EF0E  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45878  00EF10  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45879  00EF12  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45880  00EF14  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45881  00EF16  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45882  00EF18  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45883  00EF1A  B0D8               	btfsc	status,0,c
 45884  00EF1C  D008               	goto	l2488
 45885                           
 45886                           ; BSR set to: 0
 45887                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 45888  00EF1E  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 45889  00EF22  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 45890  00EF26  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 45891  00EF2A  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 45892  00EF2E                     l2488:
 45893                           
 45894                           ; BSR set to: 0
 45895                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 45896                           
 45897                           ; BSR set to: 0
 45898  00EF2E  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45899  00EF30  A4D8               	btfss	status,2,c
 45900  00EF32  D012               	goto	l2489
 45901                           
 45902                           ; BSR set to: 0
 45903                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45904  00EF34  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45905  00EF38  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45906  00EF3C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45907  00EF40  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45908  00EF44  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45909  00EF48  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45910  00EF4C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45911  00EF50  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45912  00EF52  EC2E  F08F         	call	__motor_schedule_command
 45913  00EF56  0012               	return	
 45914  00EF58                     l2489:
 45915                           
 45916                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 45917  00EF58  0100               	movlb	0	; () banked
 45918  00EF5A  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45919  00EF5C  0101               	movlb	1	; () banked
 45920  00EF5E  1978               	xorwf	(_os+19)& (0+255),w,b	;volatile
 45921  00EF60  A4D8               	btfss	status,2,c
 45922  00EF62  D013               	goto	l2490
 45923                           
 45924                           ; BSR set to: 1
 45925                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45926  00EF64  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45927  00EF68  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45928  00EF6C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45929  00EF70  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45930  00EF74  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45931  00EF78  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45932  00EF7C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45933  00EF80  0100               	movlb	0	; () banked
 45934  00EF82  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45935  00EF84  EC2E  F08F         	call	__motor_schedule_command
 45936  00EF88  0012               	return	
 45937  00EF8A                     l2490:
 45938                           
 45939                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 45940  00EF8A  0101               	movlb	1	; () banked
 45941  00EF8C  519B               	movf	(_config+5)& (0+255),w,b
 45942  00EF8E  119C               	iorwf	(_config+6)& (0+255),w,b
 45943  00EF90  A4D8               	btfss	status,2,c
 45944  00EF92  D013               	goto	l2491
 45945                           
 45946                           ; BSR set to: 1
 45947                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45948  00EF94  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45949  00EF98  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45950  00EF9C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45951  00EFA0  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45952  00EFA4  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45953  00EFA8  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45954  00EFAC  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45955  00EFB0  0100               	movlb	0	; () banked
 45956  00EFB2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45957  00EFB4  EC2E  F08F         	call	__motor_schedule_command
 45958  00EFB8  0012               	return	
 45959  00EFBA                     l2491:
 45960                           
 45961                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 45962  00EFBA  0101               	movlb	1	; () banked
 45963  00EFBC  519B               	movf	(_config+5)& (0+255),w,b
 45964  00EFBE  0100               	movlb	0	; () banked
 45965  00EFC0  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 45966  00EFC2  0101               	movlb	1	; () banked
 45967  00EFC4  519C               	movf	(_config+6)& (0+255),w,b
 45968  00EFC6  0100               	movlb	0	; () banked
 45969  00EFC8  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 45970  00EFCA  0E00               	movlw	0
 45971  00EFCC  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 45972  00EFCE  0E00               	movlw	0
 45973  00EFD0  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 45974                           
 45975                           ; BSR set to: 0
 45976                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 45977  00EFD2  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45978  00EFD6  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45979  00EFDA  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45980  00EFDE  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45981  00EFE2  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45982  00EFE6  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45983  00EFEA  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45984  00EFEE  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45985  00EFF0  EC2E  F08F         	call	__motor_schedule_command
 45986  00EFF4  0100               	movlb	0	; () banked
 45987  00EFF6  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 45988                           
 45989                           ; BSR set to: 0
 45990                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 45991  00EFF8  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 45992  00EFFC  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 45993  00F000  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 45994  00F002  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 45995  00F004  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45996  00F008  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45997  00F00C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45998  00F010  0101               	movlb	1	; () banked
 45999  00F012  5178               	movf	(_os+19)& (0+255),w,b	;volatile
 46000  00F014  EC2E  F08F         	call	__motor_schedule_command
 46001  00F018  0100               	movlb	0	; () banked
 46002  00F01A  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 46003                           
 46004                           ; BSR set to: 0
 46005                           ;motor.c: 286: if(return_value_1 > return_value_2)
 46006  00F01C  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 46007  00F01E  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 46008  00F020  B0D8               	btfsc	status,0,c
 46009  00F022  D002               	goto	l2492
 46010                           
 46011                           ; BSR set to: 0
 46012                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 46013  00F024  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 46014                           
 46015                           ; BSR set to: 0
 46016                           ;motor.c: 289: }
 46017                           
 46018                           ; BSR set to: 0
 46019  00F026  0012               	return	
 46020  00F028                     l2492:
 46021                           
 46022                           ; BSR set to: 0
 46023                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 46024                           
 46025                           ; BSR set to: 0
 46026  00F028  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 46027                           
 46028                           ; BSR set to: 0
 46029  00F02A  0012               	return	
 46030  00F02C                     __end_of__motor_move_steps:
 46031                           	opt stack 0
 46032                           tosu	equ	0xFFF
 46033                           tosh	equ	0xFFE
 46034                           tosl	equ	0xFFD
 46035                           pclath	equ	0xFFA
 46036                           tblptru	equ	0xFF8
 46037                           tblptrh	equ	0xFF7
 46038                           tblptrl	equ	0xFF6
 46039                           tablat	equ	0xFF5
 46040                           prodh	equ	0xFF4
 46041                           prodl	equ	0xFF3
 46042                           intcon	equ	0xFF2
 46043                           indf0	equ	0xFEF
 46044                           postinc0	equ	0xFEE
 46045                           fsr0h	equ	0xFEA
 46046                           fsr0l	equ	0xFE9
 46047                           wreg	equ	0xFE8
 46048                           indf1	equ	0xFE7
 46049                           postinc1	equ	0xFE6
 46050                           postdec1	equ	0xFE5
 46051                           plusw1	equ	0xFE3
 46052                           fsr1h	equ	0xFE2
 46053                           fsr1l	equ	0xFE1
 46054                           indf2	equ	0xFDF
 46055                           postinc2	equ	0xFDE
 46056                           postdec2	equ	0xFDD
 46057                           plusw2	equ	0xFDB
 46058                           fsr2h	equ	0xFDA
 46059                           fsr2l	equ	0xFD9
 46060                           status	equ	0xFD8
 46061                           
 46062 ;; *************** function __motor_schedule_command *****************
 46063 ;; Defined at:
 46064 ;;		line 135 in file "motor.c"
 46065 ;; Parameters:    Size  Location     Type
 46066 ;;  direction       1    wreg     enum E6622
 46067 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 46068 ;;  speed           2    4[BANK0 ] unsigned int 
 46069 ;;  type            1    6[BANK0 ] enum E6631
 46070 ;; Auto vars:     Size  Location     Type
 46071 ;;  direction       1    7[BANK0 ] enum E6622
 46072 ;; Return value:  Size  Location     Type
 46073 ;;                  1    wreg      enum E6639
 46074 ;; Registers used:
 46075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46076 ;; Tracked objects:
 46077 ;;		On entry : 0/0
 46078 ;;		On exit  : 0/0
 46079 ;;		Unchanged: 0/0
 46080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46081 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46084 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46085 ;;Total ram usage:        8 bytes
 46086 ;; Hardware stack levels used:    1
 46087 ;; Hardware stack levels required when called:   11
 46088 ;; This function calls:
 46089 ;;		_motor_items_in_cue
 46090 ;; This function is called by:
 46091 ;;		__motor_move_steps
 46092 ;;		__motor_move_back_forth
 46093 ;; This function uses a non-reentrant model
 46094 ;;
 46095                           
 46096                           	psect	text190
 46097  011E5C                     __ptext190:
 46098                           	opt stack 0
 46099  011E5C                     __motor_schedule_command:
 46100                           	opt stack 16
 46101                           
 46102                           ;incstack = 0
 46103                           ;__motor_schedule_command@direction stored from wreg
 46104  011E5C  0100               	movlb	0	; () banked
 46105  011E5E  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 46106                           
 46107                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 46108  011E60  EC58  F0B0         	call	_motor_items_in_cue	;wreg free
 46109  011E64  0A07               	xorlw	7
 46110  011E66  A4D8               	btfss	status,2,c
 46111  011E68  D002               	goto	l2468
 46112                           
 46113                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 46114  011E6A  0E08               	movlw	8
 46115  011E6C  0012               	return	
 46116  011E6E                     l2468:
 46117                           
 46118                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 46119  011E6E  0100               	movlb	0	; () banked
 46120  011E70  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 46121  011E72  B4D8               	btfsc	status,2,c
 46122  011E74  D005               	goto	l2470
 46123                           
 46124                           ; BSR set to: 0
 46125  011E76  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 46126  011E78  B4D8               	btfsc	status,2,c
 46127  011E7A  D002               	goto	l2470
 46128                           
 46129                           ; BSR set to: 0
 46130                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 46131  011E7C  0E04               	movlw	4
 46132                           
 46133                           ; BSR set to: 0
 46134  011E7E  0012               	return	
 46135  011E80                     l2470:
 46136                           
 46137                           ; BSR set to: 0
 46138                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 46139                           
 46140                           ; BSR set to: 0
 46141  011E80  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 46142  011E82  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 46143  011E84  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 46144  011E86  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 46145  011E88  A4D8               	btfss	status,2,c
 46146  011E8A  D002               	goto	l2471
 46147                           
 46148                           ; BSR set to: 0
 46149                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 46150  011E8C  0E03               	movlw	3
 46151                           
 46152                           ; BSR set to: 0
 46153  011E8E  0012               	return	
 46154  011E90                     l2471:
 46155                           
 46156                           ; BSR set to: 0
 46157                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 46158                           
 46159                           ; BSR set to: 0
 46160  011E90  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 46161  011E92  B4D8               	btfsc	status,2,c
 46162  011E94  D005               	goto	l2472
 46163                           
 46164                           ; BSR set to: 0
 46165  011E96  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 46166  011E98  B4D8               	btfsc	status,2,c
 46167  011E9A  D002               	goto	l2472
 46168                           
 46169                           ; BSR set to: 0
 46170                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 46171  011E9C  0E05               	movlw	5
 46172                           
 46173                           ; BSR set to: 0
 46174  011E9E  0012               	return	
 46175  011EA0                     l2472:
 46176                           
 46177                           ; BSR set to: 0
 46178                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 46179                           
 46180                           ; BSR set to: 0
 46181  011EA0  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 46182  011EA2  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 46183  011EA4  A4D8               	btfss	status,2,c
 46184  011EA6  D002               	goto	l2473
 46185                           
 46186                           ; BSR set to: 0
 46187                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 46188  011EA8  0E02               	movlw	2
 46189                           
 46190                           ; BSR set to: 0
 46191  011EAA  0012               	return	
 46192  011EAC                     l2473:
 46193                           
 46194                           ; BSR set to: 0
 46195                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 46196                           
 46197                           ; BSR set to: 0
 46198  011EAC  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 46199  011EAE  0101               	movlb	1	; () banked
 46200  011EB0  5DA1               	subwf	(_config+11)& (0+255),w,b
 46201  011EB2  0100               	movlb	0	; () banked
 46202  011EB4  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 46203  011EB6  0101               	movlb	1	; () banked
 46204  011EB8  59A2               	subwfb	(_config+12)& (0+255),w,b
 46205  011EBA  B0D8               	btfsc	status,0,c
 46206  011EBC  D004               	goto	l2474
 46207                           
 46208                           ; BSR set to: 1
 46209                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 46210  011EBE  C1A1  F064         	movff	_config+11,__motor_schedule_command@speed
 46211  011EC2  C1A2  F065         	movff	_config+12,__motor_schedule_command@speed+1
 46212  011EC6                     l2474:
 46213                           
 46214                           ; BSR set to: 1
 46215                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 46216                           
 46217                           ; BSR set to: 1
 46218  011EC6  514C               	movf	_motor_cue_write_index& (0+255),w,b
 46219  011EC8  0D08               	mullw	8
 46220  011ECA  0E00               	movlw	low _motor_command_cue
 46221  011ECC  24F3               	addwf	prodl,w,c
 46222  011ECE  6ED9               	movwf	fsr2l,c
 46223  011ED0  0E03               	movlw	high _motor_command_cue
 46224  011ED2  20F4               	addwfc	prodh,w,c
 46225  011ED4  6EDA               	movwf	fsr2h,c
 46226  011ED6  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 46227                           
 46228                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 46229  011EDA  514C               	movf	_motor_cue_write_index& (0+255),w,b
 46230  011EDC  0D08               	mullw	8
 46231  011EDE  0E01               	movlw	1
 46232  011EE0  26F3               	addwf	prodl,f,c
 46233  011EE2  0E00               	movlw	0
 46234  011EE4  22F4               	addwfc	prodh,f,c
 46235  011EE6  0E00               	movlw	low _motor_command_cue
 46236  011EE8  24F3               	addwf	prodl,w,c
 46237  011EEA  6ED9               	movwf	fsr2l,c
 46238  011EEC  0E03               	movlw	high _motor_command_cue
 46239  011EEE  20F4               	addwfc	prodh,w,c
 46240  011EF0  6EDA               	movwf	fsr2h,c
 46241  011EF2  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 46242  011EF6  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 46243  011EFA  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 46244  011EFE  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 46245                           
 46246                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 46247  011F02  514C               	movf	_motor_cue_write_index& (0+255),w,b
 46248  011F04  0D08               	mullw	8
 46249  011F06  0E05               	movlw	5
 46250  011F08  26F3               	addwf	prodl,f,c
 46251  011F0A  0E00               	movlw	0
 46252  011F0C  22F4               	addwfc	prodh,f,c
 46253  011F0E  0E00               	movlw	low _motor_command_cue
 46254  011F10  24F3               	addwf	prodl,w,c
 46255  011F12  6ED9               	movwf	fsr2l,c
 46256  011F14  0E03               	movlw	high _motor_command_cue
 46257  011F16  20F4               	addwfc	prodh,w,c
 46258  011F18  6EDA               	movwf	fsr2h,c
 46259  011F1A  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 46260  011F1E  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 46261                           
 46262                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 46263  011F22  514C               	movf	_motor_cue_write_index& (0+255),w,b
 46264  011F24  0D08               	mullw	8
 46265  011F26  0E07               	movlw	7
 46266  011F28  26F3               	addwf	prodl,f,c
 46267  011F2A  0E00               	movlw	0
 46268  011F2C  22F4               	addwfc	prodh,f,c
 46269  011F2E  0E00               	movlw	low _motor_command_cue
 46270  011F30  24F3               	addwf	prodl,w,c
 46271  011F32  6ED9               	movwf	fsr2l,c
 46272  011F34  0E03               	movlw	high _motor_command_cue
 46273  011F36  20F4               	addwfc	prodh,w,c
 46274  011F38  6EDA               	movwf	fsr2h,c
 46275  011F3A  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 46276                           
 46277                           ; BSR set to: 1
 46278                           ;motor.c: 180: ++motor_cue_write_index;
 46279  011F3E  2B4C               	incf	_motor_cue_write_index& (0+255),f,b
 46280                           
 46281                           ; BSR set to: 1
 46282                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 46283  011F40  0E07               	movlw	7
 46284  011F42  174C               	andwf	_motor_cue_write_index& (0+255),f,b
 46285                           
 46286                           ; BSR set to: 1
 46287                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 46288  011F44  0E00               	movlw	0
 46289  011F46  0012               	return	
 46290  011F48                     __end_of__motor_schedule_command:
 46291                           	opt stack 0
 46292                           tosu	equ	0xFFF
 46293                           tosh	equ	0xFFE
 46294                           tosl	equ	0xFFD
 46295                           pclath	equ	0xFFA
 46296                           tblptru	equ	0xFF8
 46297                           tblptrh	equ	0xFF7
 46298                           tblptrl	equ	0xFF6
 46299                           tablat	equ	0xFF5
 46300                           prodh	equ	0xFF4
 46301                           prodl	equ	0xFF3
 46302                           intcon	equ	0xFF2
 46303                           indf0	equ	0xFEF
 46304                           postinc0	equ	0xFEE
 46305                           fsr0h	equ	0xFEA
 46306                           fsr0l	equ	0xFE9
 46307                           wreg	equ	0xFE8
 46308                           indf1	equ	0xFE7
 46309                           postinc1	equ	0xFE6
 46310                           postdec1	equ	0xFE5
 46311                           plusw1	equ	0xFE3
 46312                           fsr1h	equ	0xFE2
 46313                           fsr1l	equ	0xFE1
 46314                           indf2	equ	0xFDF
 46315                           postinc2	equ	0xFDE
 46316                           postdec2	equ	0xFDD
 46317                           plusw2	equ	0xFDB
 46318                           fsr2h	equ	0xFDA
 46319                           fsr2l	equ	0xFD9
 46320                           status	equ	0xFD8
 46321                           
 46322 ;; *************** function _motor_items_in_cue *****************
 46323 ;; Defined at:
 46324 ;;		line 608 in file "motor.c"
 46325 ;; Parameters:    Size  Location     Type
 46326 ;;		None
 46327 ;; Auto vars:     Size  Location     Type
 46328 ;;		None
 46329 ;; Return value:  Size  Location     Type
 46330 ;;                  1    wreg      unsigned char 
 46331 ;; Registers used:
 46332 ;;		wreg, status,2, status,0
 46333 ;; Tracked objects:
 46334 ;;		On entry : 0/0
 46335 ;;		On exit  : 0/0
 46336 ;;		Unchanged: 0/0
 46337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46342 ;;Total ram usage:        0 bytes
 46343 ;; Hardware stack levels used:    1
 46344 ;; Hardware stack levels required when called:   10
 46345 ;; This function calls:
 46346 ;;		Nothing
 46347 ;; This function is called by:
 46348 ;;		__motor_schedule_command
 46349 ;;		__motor_move_steps
 46350 ;;		__motor_move_back_forth
 46351 ;;		_motor_process_cue
 46352 ;; This function uses a non-reentrant model
 46353 ;;
 46354                           
 46355                           	psect	text191
 46356  0160B0                     __ptext191:
 46357                           	opt stack 0
 46358  0160B0                     _motor_items_in_cue:
 46359                           	opt stack 19
 46360                           
 46361                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 46362                           
 46363                           ;incstack = 0
 46364  0160B0  0101               	movlb	1	; () banked
 46365  0160B2  514D               	movf	_motor_cue_read_index& (0+255),w,b
 46366  0160B4  0800               	sublw	0
 46367  0160B6  254C               	addwf	_motor_cue_write_index& (0+255),w,b
 46368  0160B8  0B07               	andlw	7
 46369  0160BA  0012               	return	
 46370  0160BC                     __end_of_motor_items_in_cue:
 46371                           	opt stack 0
 46372                           tosu	equ	0xFFF
 46373                           tosh	equ	0xFFE
 46374                           tosl	equ	0xFFD
 46375                           pclath	equ	0xFFA
 46376                           tblptru	equ	0xFF8
 46377                           tblptrh	equ	0xFF7
 46378                           tblptrl	equ	0xFF6
 46379                           tablat	equ	0xFF5
 46380                           prodh	equ	0xFF4
 46381                           prodl	equ	0xFF3
 46382                           intcon	equ	0xFF2
 46383                           indf0	equ	0xFEF
 46384                           postinc0	equ	0xFEE
 46385                           fsr0h	equ	0xFEA
 46386                           fsr0l	equ	0xFE9
 46387                           wreg	equ	0xFE8
 46388                           indf1	equ	0xFE7
 46389                           postinc1	equ	0xFE6
 46390                           postdec1	equ	0xFE5
 46391                           plusw1	equ	0xFE3
 46392                           fsr1h	equ	0xFE2
 46393                           fsr1l	equ	0xFE1
 46394                           indf2	equ	0xFDF
 46395                           postinc2	equ	0xFDE
 46396                           postdec2	equ	0xFDD
 46397                           plusw2	equ	0xFDB
 46398                           fsr2h	equ	0xFDA
 46399                           fsr2l	equ	0xFD9
 46400                           status	equ	0xFD8
 46401                           
 46402 ;; *************** function __motor_distance_to_limit *****************
 46403 ;; Defined at:
 46404 ;;		line 448 in file "motor.c"
 46405 ;; Parameters:    Size  Location     Type
 46406 ;;  direction       1    wreg     enum E6622
 46407 ;; Auto vars:     Size  Location     Type
 46408 ;;  direction       1   24[BANK0 ] enum E6622
 46409 ;;  absolute_pos    4   25[BANK0 ] long 
 46410 ;;  distance_to_    4   20[BANK0 ] long 
 46411 ;; Return value:  Size  Location     Type
 46412 ;;                  4   12[BANK0 ] long 
 46413 ;; Registers used:
 46414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46415 ;; Tracked objects:
 46416 ;;		On entry : 0/0
 46417 ;;		On exit  : 0/0
 46418 ;;		Unchanged: 0/0
 46419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46420 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46421 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46422 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46423 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46424 ;;Total ram usage:       17 bytes
 46425 ;; Hardware stack levels used:    1
 46426 ;; Hardware stack levels required when called:   11
 46427 ;; This function calls:
 46428 ;;		___lmul
 46429 ;; This function is called by:
 46430 ;;		__motor_move_steps
 46431 ;;		__motor_decide_direction
 46432 ;; This function uses a non-reentrant model
 46433 ;;
 46434                           
 46435                           	psect	text192
 46436  0100B0                     __ptext192:
 46437                           	opt stack 0
 46438  0100B0                     __motor_distance_to_limit:
 46439                           	opt stack 16
 46440                           
 46441                           ; BSR set to: 1
 46442                           ;incstack = 0
 46443                           ;__motor_distance_to_limit@direction stored from wreg
 46444  0100B0  0100               	movlb	0	; () banked
 46445  0100B2  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 46446                           
 46447                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 46448  0100B4  0100               	movlb	0	; () banked
 46449  0100B6  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46450  0100B8  A4D8               	btfss	status,2,c
 46451  0100BA  D00E               	goto	l2527
 46452                           
 46453                           ; BSR set to: 0
 46454  0100BC  0101               	movlb	1	; () banked
 46455  0100BE  51B5               	movf	(_config+31)& (0+255),w,b
 46456  0100C0  A4D8               	btfss	status,2,c
 46457  0100C2  D00A               	goto	l2527
 46458                           
 46459                           ; BSR set to: 1
 46460                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 46461  0100C4  0EFF               	movlw	255
 46462  0100C6  0100               	movlb	0	; () banked
 46463  0100C8  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46464  0100CA  0EFF               	movlw	255
 46465  0100CC  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46466  0100CE  0EFF               	movlw	255
 46467  0100D0  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46468  0100D2  0E7F               	movlw	127
 46469  0100D4  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46470                           
 46471                           ; BSR set to: 0
 46472  0100D6  0012               	return	
 46473  0100D8                     l2527:
 46474                           
 46475                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 46476                           
 46477                           ; BSR set to: 0
 46478  0100D8  0100               	movlb	0	; () banked
 46479  0100DA  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 46480  0100DC  A4D8               	btfss	status,2,c
 46481  0100DE  D00E               	goto	l2529
 46482                           
 46483                           ; BSR set to: 0
 46484  0100E0  0101               	movlb	1	; () banked
 46485  0100E2  51AC               	movf	(_config+22)& (0+255),w,b
 46486  0100E4  A4D8               	btfss	status,2,c
 46487  0100E6  D00A               	goto	l2529
 46488                           
 46489                           ; BSR set to: 1
 46490                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 46491  0100E8  0EFF               	movlw	255
 46492  0100EA  0100               	movlb	0	; () banked
 46493  0100EC  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46494  0100EE  0EFF               	movlw	255
 46495  0100F0  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46496  0100F2  0EFF               	movlw	255
 46497  0100F4  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46498  0100F6  0E7F               	movlw	127
 46499  0100F8  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46500                           
 46501                           ; BSR set to: 0
 46502  0100FA  0012               	return	
 46503  0100FC                     l2529:
 46504                           
 46505                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 46506                           
 46507                           ; BSR set to: 0
 46508  0100FC  EE21  F070         	lfsr	2,_os+11	;volatile
 46509  010100  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 46510  010104  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 46511  010108  0100               	movlb	0	; () banked
 46512  01010A  0E00               	movlw	0
 46513  01010C  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 46514  01010E  0EFF               	movlw	-1
 46515  010110  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 46516  010112  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 46517                           
 46518                           ; BSR set to: 0
 46519                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 46520  010114  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 46521  010118  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 46522  01011C  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 46523  010120  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 46524  010124  C196  F064         	movff	_config,___lmul@multiplicand
 46525  010128  C197  F065         	movff	_config+1,___lmul@multiplicand+1
 46526  01012C  C198  F066         	movff	_config+2,___lmul@multiplicand+2
 46527  010130  C199  F067         	movff	_config+3,___lmul@multiplicand+3
 46528  010134  ECBC  F0A7         	call	___lmul	;wreg free
 46529  010138  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 46530  01013C  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 46531  010140  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 46532  010144  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 46533                           
 46534                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 46535  010148  EE21  F06C         	lfsr	2,_os+7	;volatile
 46536  01014C  50DE               	movf	postinc2,w,c
 46537  01014E  0100               	movlb	0	; () banked
 46538  010150  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 46539  010152  50DE               	movf	postinc2,w,c
 46540  010154  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 46541  010156  50DE               	movf	postinc2,w,c
 46542  010158  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 46543  01015A  50DD               	movf	postdec2,w,c
 46544  01015C  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 46545                           
 46546                           ; BSR set to: 0
 46547                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 46548  01015E  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46549  010160  A4D8               	btfss	status,2,c
 46550  010162  D01C               	goto	l2530
 46551                           
 46552                           ; BSR set to: 0
 46553                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 46554  010164  C1BA  F070         	movff	_config+36,??__motor_distance_to_limit
 46555  010168  C1BB  F071         	movff	_config+37,??__motor_distance_to_limit+1
 46556  01016C  C1BC  F072         	movff	_config+38,??__motor_distance_to_limit+2
 46557  010170  C1BD  F073         	movff	_config+39,??__motor_distance_to_limit+3
 46558  010174  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46559  010176  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46560  010178  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46561  01017A  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46562  01017C  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46563  01017E  0E00               	movlw	0
 46564  010180  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46565  010182  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46566  010184  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46567  010186  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 46568  010188  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46569  01018A  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46570  01018C  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 46571  01018E  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46572  010190  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46573  010192  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 46574  010194  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46575  010196  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46576  010198  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 46577  01019A  D023               	goto	L69
 46578  01019C                     l2530:
 46579                           
 46580                           ; BSR set to: 0
 46581                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 46582                           
 46583                           ; BSR set to: 0
 46584  01019C  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 46585  0101A0  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 46586  0101A4  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 46587  0101A8  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 46588  0101AC  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46589  0101AE  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46590  0101B0  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46591  0101B2  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46592  0101B4  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46593  0101B6  0E00               	movlw	0
 46594  0101B8  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46595  0101BA  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46596  0101BC  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46597  0101BE  0101               	movlb	1	; () banked
 46598  0101C0  51B1               	movf	(_config+27)& (0+255),w,b
 46599  0101C2  0100               	movlb	0	; () banked
 46600  0101C4  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46601  0101C6  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46602  0101C8  0101               	movlb	1	; () banked
 46603  0101CA  51B2               	movf	(_config+28)& (0+255),w,b
 46604  0101CC  0100               	movlb	0	; () banked
 46605  0101CE  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46606  0101D0  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46607  0101D2  0101               	movlb	1	; () banked
 46608  0101D4  51B3               	movf	(_config+29)& (0+255),w,b
 46609  0101D6  0100               	movlb	0	; () banked
 46610  0101D8  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46611  0101DA  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46612  0101DC  0101               	movlb	1	; () banked
 46613  0101DE  51B4               	movf	(_config+30)& (0+255),w,b
 46614  0101E0  0100               	movlb	0	; () banked
 46615  0101E2                     L69:
 46616  0101E2  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 46617  0101E4  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 46618                           
 46619                           ; BSR set to: 0
 46620                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 46621                           
 46622                           ; BSR set to: 0
 46623  0101E6  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 46624  0101EA  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 46625  0101EE  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 46626  0101F2  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 46627  0101F6  0012               	return	
 46628  0101F8                     __end_of__motor_distance_to_limit:
 46629                           	opt stack 0
 46630                           tosu	equ	0xFFF
 46631                           tosh	equ	0xFFE
 46632                           tosl	equ	0xFFD
 46633                           pclath	equ	0xFFA
 46634                           tblptru	equ	0xFF8
 46635                           tblptrh	equ	0xFF7
 46636                           tblptrl	equ	0xFF6
 46637                           tablat	equ	0xFF5
 46638                           prodh	equ	0xFF4
 46639                           prodl	equ	0xFF3
 46640                           intcon	equ	0xFF2
 46641                           indf0	equ	0xFEF
 46642                           postinc0	equ	0xFEE
 46643                           fsr0h	equ	0xFEA
 46644                           fsr0l	equ	0xFE9
 46645                           wreg	equ	0xFE8
 46646                           indf1	equ	0xFE7
 46647                           postinc1	equ	0xFE6
 46648                           postdec1	equ	0xFE5
 46649                           plusw1	equ	0xFE3
 46650                           fsr1h	equ	0xFE2
 46651                           fsr1l	equ	0xFE1
 46652                           indf2	equ	0xFDF
 46653                           postinc2	equ	0xFDE
 46654                           postdec2	equ	0xFDD
 46655                           plusw2	equ	0xFDB
 46656                           fsr2h	equ	0xFDA
 46657                           fsr2l	equ	0xFD9
 46658                           status	equ	0xFD8
 46659                           
 46660 ;; *************** function ___lmul *****************
 46661 ;; Defined at:
 46662 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 46663 ;; Parameters:    Size  Location     Type
 46664 ;;  multiplier      4    0[BANK0 ] unsigned long 
 46665 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 46666 ;; Auto vars:     Size  Location     Type
 46667 ;;  product         4    8[BANK0 ] unsigned long 
 46668 ;; Return value:  Size  Location     Type
 46669 ;;                  4    0[BANK0 ] unsigned long 
 46670 ;; Registers used:
 46671 ;;		wreg, status,2, status,0
 46672 ;; Tracked objects:
 46673 ;;		On entry : 0/0
 46674 ;;		On exit  : 0/0
 46675 ;;		Unchanged: 0/0
 46676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46677 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46678 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46680 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46681 ;;Total ram usage:       12 bytes
 46682 ;; Hardware stack levels used:    1
 46683 ;; Hardware stack levels required when called:   10
 46684 ;; This function calls:
 46685 ;;		Nothing
 46686 ;; This function is called by:
 46687 ;;		__motor_distance_to_limit
 46688 ;;		__motor_get_speed_in_degrees
 46689 ;;		_atol
 46690 ;; This function uses a non-reentrant model
 46691 ;;
 46692                           
 46693                           	psect	text193
 46694  014F78                     __ptext193:
 46695                           	opt stack 0
 46696  014F78                     ___lmul:
 46697                           	opt stack 16
 46698                           
 46699                           ; BSR set to: 0
 46700                           ;incstack = 0
 46701  014F78  0E00               	movlw	0
 46702  014F7A  0100               	movlb	0	; () banked
 46703  014F7C  6F68               	movwf	___lmul@product& (0+255),b
 46704  014F7E  0E00               	movlw	0
 46705  014F80  6F69               	movwf	(___lmul@product+1)& (0+255),b
 46706  014F82  0E00               	movlw	0
 46707  014F84  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 46708  014F86  0E00               	movlw	0
 46709  014F88  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 46710  014F8A                     
 46711                           ; BSR set to: 0
 46712                           
 46713                           ; BSR set to: 0
 46714  014F8A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 46715  014F8C  D008               	goto	l3108
 46716                           
 46717                           ; BSR set to: 0
 46718  014F8E  5164               	movf	___lmul@multiplicand& (0+255),w,b
 46719  014F90  2768               	addwf	___lmul@product& (0+255),f,b
 46720  014F92  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 46721  014F94  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 46722  014F96  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 46723  014F98  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 46724  014F9A  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 46725  014F9C  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 46726  014F9E                     l3108:
 46727                           
 46728                           ; BSR set to: 0
 46729                           
 46730                           ; BSR set to: 0
 46731  014F9E  90D8               	bcf	status,0,c
 46732  014FA0  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 46733  014FA2  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 46734  014FA4  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 46735  014FA6  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 46736                           
 46737                           ; BSR set to: 0
 46738  014FA8  90D8               	bcf	status,0,c
 46739  014FAA  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 46740  014FAC  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 46741  014FAE  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 46742  014FB0  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 46743  014FB2  5160               	movf	___lmul@multiplier& (0+255),w,b
 46744  014FB4  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 46745  014FB6  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 46746  014FB8  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 46747  014FBA  A4D8               	btfss	status,2,c
 46748  014FBC  D7E6               	goto	l3107
 46749                           
 46750                           ; BSR set to: 0
 46751  014FBE  C068  F060         	movff	___lmul@product,?___lmul
 46752  014FC2  C069  F061         	movff	___lmul@product+1,?___lmul+1
 46753  014FC6  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 46754  014FCA  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 46755                           
 46756                           ; BSR set to: 0
 46757  014FCE  0012               	return		;funcret
 46758  014FD0                     __end_of___lmul:
 46759                           	opt stack 0
 46760                           tosu	equ	0xFFF
 46761                           tosh	equ	0xFFE
 46762                           tosl	equ	0xFFD
 46763                           pclath	equ	0xFFA
 46764                           tblptru	equ	0xFF8
 46765                           tblptrh	equ	0xFF7
 46766                           tblptrl	equ	0xFF6
 46767                           tablat	equ	0xFF5
 46768                           prodh	equ	0xFF4
 46769                           prodl	equ	0xFF3
 46770                           intcon	equ	0xFF2
 46771                           indf0	equ	0xFEF
 46772                           postinc0	equ	0xFEE
 46773                           fsr0h	equ	0xFEA
 46774                           fsr0l	equ	0xFE9
 46775                           wreg	equ	0xFE8
 46776                           indf1	equ	0xFE7
 46777                           postinc1	equ	0xFE6
 46778                           postdec1	equ	0xFE5
 46779                           plusw1	equ	0xFE3
 46780                           fsr1h	equ	0xFE2
 46781                           fsr1l	equ	0xFE1
 46782                           indf2	equ	0xFDF
 46783                           postinc2	equ	0xFDE
 46784                           postdec2	equ	0xFDD
 46785                           plusw2	equ	0xFDB
 46786                           fsr2h	equ	0xFDA
 46787                           fsr2l	equ	0xFD9
 46788                           status	equ	0xFD8
 46789                           
 46790 ;; *************** function _USBTransferOnePacket *****************
 46791 ;; Defined at:
 46792 ;;		line 995 in file "usb_device.c"
 46793 ;; Parameters:    Size  Location     Type
 46794 ;;  ep              1    wreg     unsigned char 
 46795 ;;  dir             1    0[BANK0 ] unsigned char 
 46796 ;;  data            2    1[BANK0 ] PTR unsigned char 
 46797 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 46798 ;;		 -> msd_cbw(31), NULL(0), 
 46799 ;;  len             1    3[BANK0 ] unsigned char 
 46800 ;; Auto vars:     Size  Location     Type
 46801 ;;  ep              1    8[BANK0 ] unsigned char 
 46802 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 46803 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46804 ;; Return value:  Size  Location     Type
 46805 ;;                  2    0[BANK0 ] PTR void 
 46806 ;; Registers used:
 46807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46808 ;; Tracked objects:
 46809 ;;		On entry : 0/0
 46810 ;;		On exit  : 0/0
 46811 ;;		Unchanged: 0/0
 46812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46814 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46816 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46817 ;;Total ram usage:       11 bytes
 46818 ;; Hardware stack levels used:    1
 46819 ;; Hardware stack levels required when called:   10
 46820 ;; This function calls:
 46821 ;;		Nothing
 46822 ;; This function is called by:
 46823 ;;		_MSDTasks
 46824 ;;		_MSDProcessCommandMediaPresent
 46825 ;;		_MSDReadHandler
 46826 ;;		_MSDWriteHandler
 46827 ;;		_APP_DeviceCustomHIDTasks
 46828 ;; This function uses a non-reentrant model
 46829 ;;
 46830                           
 46831                           	psect	text194
 46832  01147A                     __ptext194:
 46833                           	opt stack 0
 46834  01147A                     _USBTransferOnePacket:
 46835                           	opt stack 18
 46836                           
 46837                           ; BSR set to: 0
 46838                           ;incstack = 0
 46839                           ;USBTransferOnePacket@ep stored from wreg
 46840  01147A  0100               	movlb	0	; () banked
 46841  01147C  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 46842                           
 46843                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 46844  01147E  0100               	movlb	0	; () banked
 46845  011480  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46846  011482  B4D8               	btfsc	status,2,c
 46847  011484  D007               	goto	l184
 46848                           
 46849                           ; BSR set to: 0
 46850                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 46851  011486  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46852  011488  0D02               	mullw	2
 46853  01148A  0E0F               	movlw	low _pBDTEntryIn
 46854  01148C  24F3               	addwf	prodl,w,c
 46855  01148E  6ED9               	movwf	fsr2l,c
 46856  011490  0E01               	movlw	high _pBDTEntryIn
 46857  011492  D006               	goto	L70
 46858  011494                     l184:
 46859                           
 46860                           ; BSR set to: 0
 46861                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 46862                           
 46863                           ; BSR set to: 0
 46864  011494  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46865  011496  0D02               	mullw	2
 46866  011498  0E15               	movlw	low _pBDTEntryOut
 46867  01149A  24F3               	addwf	prodl,w,c
 46868  01149C  6ED9               	movwf	fsr2l,c
 46869  01149E  0E01               	movlw	high _pBDTEntryOut
 46870  0114A0                     L70:
 46871  0114A0  20F4               	addwfc	prodh,w,c
 46872  0114A2  6EDA               	movwf	fsr2h,c
 46873  0114A4  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 46874  0114A8  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 46875                           
 46876                           ; BSR set to: 0
 46877                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 46878                           
 46879                           ; BSR set to: 0
 46880  0114AC  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46881  0114AE  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46882  0114B0  A4D8               	btfss	status,2,c
 46883  0114B2  D005               	goto	l186
 46884                           
 46885                           ; BSR set to: 0
 46886                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 46887  0114B4  0E00               	movlw	0
 46888  0114B6  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 46889  0114B8  0E00               	movlw	0
 46890  0114BA  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 46891                           
 46892                           ; BSR set to: 0
 46893  0114BC  0012               	return	
 46894  0114BE                     l186:
 46895                           
 46896                           ; BSR set to: 0
 46897                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 46898                           
 46899                           ; BSR set to: 0
 46900  0114BE  EE20 F002          	lfsr	2,2
 46901  0114C2  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46902  0114C4  26D9               	addwf	fsr2l,f,c
 46903  0114C6  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46904  0114C8  22DA               	addwfc	fsr2h,f,c
 46905  0114CA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 46906  0114CE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 46907                           
 46908                           ;usb_device.c: 1030: handle->CNT = len;
 46909  0114D2  EE20 F001          	lfsr	2,1
 46910  0114D6  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46911  0114D8  26D9               	addwf	fsr2l,f,c
 46912  0114DA  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46913  0114DC  22DA               	addwfc	fsr2h,f,c
 46914  0114DE  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 46915                           
 46916                           ; BSR set to: 0
 46917                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 46918  0114E2  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46919  0114E6  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46920  0114EA  0E40               	movlw	64
 46921  0114EC  16DF               	andwf	indf2,f,c
 46922                           
 46923                           ; BSR set to: 0
 46924                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 46925  0114EE  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46926  0114F2  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46927  0114F6  0E00               	movlw	0
 46928  0114F8  86DB               	bsf	plusw2,3,c
 46929                           
 46930                           ; BSR set to: 0
 46931                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 46932  0114FA  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46933  0114FE  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46934  011502  0E00               	movlw	0
 46935  011504  8EDB               	bsf	plusw2,7,c
 46936                           
 46937                           ; BSR set to: 0
 46938                           ;usb_device.c: 1036: if(dir != 0)
 46939  011506  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46940  011508  B4D8               	btfsc	status,2,c
 46941  01150A  D018               	goto	l188
 46942                           
 46943                           ; BSR set to: 0
 46944                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 46945  01150C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46946  01150E  0D02               	mullw	2
 46947  011510  0E0F               	movlw	low _pBDTEntryIn
 46948  011512  24F3               	addwf	prodl,w,c
 46949  011514  6ED9               	movwf	fsr2l,c
 46950  011516  0E01               	movlw	high _pBDTEntryIn
 46951  011518  20F4               	addwfc	prodh,w,c
 46952  01151A  6EDA               	movwf	fsr2h,c
 46953  01151C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46954  011520  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46955  011524  0E04               	movlw	4
 46956  011526  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46957  011528  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46958  01152A  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46959  01152C  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46960  01152E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46961  011530  0D02               	mullw	2
 46962  011532  0E0F               	movlw	low _pBDTEntryIn
 46963  011534  24F3               	addwf	prodl,w,c
 46964  011536  6ED9               	movwf	fsr2l,c
 46965  011538  0E01               	movlw	high _pBDTEntryIn
 46966  01153A  D017               	goto	L71
 46967  01153C                     l188:
 46968                           
 46969                           ; BSR set to: 0
 46970                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 46971                           
 46972                           ; BSR set to: 0
 46973  01153C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46974  01153E  0D02               	mullw	2
 46975  011540  0E15               	movlw	low _pBDTEntryOut
 46976  011542  24F3               	addwf	prodl,w,c
 46977  011544  6ED9               	movwf	fsr2l,c
 46978  011546  0E01               	movlw	high _pBDTEntryOut
 46979  011548  20F4               	addwfc	prodh,w,c
 46980  01154A  6EDA               	movwf	fsr2h,c
 46981  01154C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46982  011550  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46983  011554  0E04               	movlw	4
 46984  011556  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46985  011558  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46986  01155A  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46987  01155C  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46988  01155E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46989  011560  0D02               	mullw	2
 46990  011562  0E15               	movlw	low _pBDTEntryOut
 46991  011564  24F3               	addwf	prodl,w,c
 46992  011566  6ED9               	movwf	fsr2l,c
 46993  011568  0E01               	movlw	high _pBDTEntryOut
 46994  01156A                     L71:
 46995  01156A  20F4               	addwfc	prodh,w,c
 46996  01156C  6EDA               	movwf	fsr2h,c
 46997  01156E  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 46998  011572  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 46999                           
 47000                           ; BSR set to: 0
 47001                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 47002                           
 47003                           ; BSR set to: 0
 47004  011576  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 47005  01157A  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 47006  01157E  0012               	return	
 47007  011580                     __end_of_USBTransferOnePacket:
 47008                           	opt stack 0
 47009                           tosu	equ	0xFFF
 47010                           tosh	equ	0xFFE
 47011                           tosl	equ	0xFFD
 47012                           pclath	equ	0xFFA
 47013                           tblptru	equ	0xFF8
 47014                           tblptrh	equ	0xFF7
 47015                           tblptrl	equ	0xFF6
 47016                           tablat	equ	0xFF5
 47017                           prodh	equ	0xFF4
 47018                           prodl	equ	0xFF3
 47019                           intcon	equ	0xFF2
 47020                           indf0	equ	0xFEF
 47021                           postinc0	equ	0xFEE
 47022                           fsr0h	equ	0xFEA
 47023                           fsr0l	equ	0xFE9
 47024                           wreg	equ	0xFE8
 47025                           indf1	equ	0xFE7
 47026                           postinc1	equ	0xFE6
 47027                           postdec1	equ	0xFE5
 47028                           plusw1	equ	0xFE3
 47029                           fsr1h	equ	0xFE2
 47030                           fsr1l	equ	0xFE1
 47031                           indf2	equ	0xFDF
 47032                           postinc2	equ	0xFDE
 47033                           postdec2	equ	0xFDD
 47034                           plusw2	equ	0xFDB
 47035                           fsr2h	equ	0xFDA
 47036                           fsr2l	equ	0xFD9
 47037                           status	equ	0xFD8
 47038                           
 47039 ;; *************** function _SYS_InterruptHigh *****************
 47040 ;; Defined at:
 47041 ;;		line 162 in file "system.c"
 47042 ;; Parameters:    Size  Location     Type
 47043 ;;		None
 47044 ;; Auto vars:     Size  Location     Type
 47045 ;;		None
 47046 ;; Return value:  Size  Location     Type
 47047 ;;                  1    wreg      void 
 47048 ;; Registers used:
 47049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 47050 ;; Tracked objects:
 47051 ;;		On entry : 0/0
 47052 ;;		On exit  : 0/0
 47053 ;;		Unchanged: 0/0
 47054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47057 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47058 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47059 ;;Total ram usage:       14 bytes
 47060 ;; Hardware stack levels used:    1
 47061 ;; Hardware stack levels required when called:    9
 47062 ;; This function calls:
 47063 ;;		_USBDeviceTasks
 47064 ;;		_motor_isr
 47065 ;;		_tmr0_isr
 47066 ;; This function is called by:
 47067 ;;		Interrupt level 2
 47068 ;; This function uses a non-reentrant model
 47069 ;;
 47070                           
 47071                           	psect	intcode
 47072  009008                     __pintcode:
 47073                           	opt stack 0
 47074  009008                     _SYS_InterruptHigh:
 47075                           	opt stack 9
 47076                           
 47077                           ; BSR set to: 0
 47078                           ;incstack = 0
 47079  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 47080  00900A  CFFA F049          	movff	pclath,??_SYS_InterruptHigh
 47081  00900E  CFFB F04A          	movff	pclatu,??_SYS_InterruptHigh+1
 47082  009012  CFE9 F04B          	movff	fsr0l,??_SYS_InterruptHigh+2
 47083  009016  CFEA F04C          	movff	fsr0h,??_SYS_InterruptHigh+3
 47084  00901A  CFE1 F04D          	movff	fsr1l,??_SYS_InterruptHigh+4
 47085  00901E  CFE2 F04E          	movff	fsr1h,??_SYS_InterruptHigh+5
 47086  009022  CFD9 F04F          	movff	fsr2l,??_SYS_InterruptHigh+6
 47087  009026  CFDA F050          	movff	fsr2h,??_SYS_InterruptHigh+7
 47088  00902A  CFF3 F051          	movff	prodl,??_SYS_InterruptHigh+8
 47089  00902E  CFF4 F052          	movff	prodh,??_SYS_InterruptHigh+9
 47090  009032  CFF6 F053          	movff	tblptrl,??_SYS_InterruptHigh+10
 47091  009036  CFF7 F054          	movff	tblptrh,??_SYS_InterruptHigh+11
 47092  00903A  CFF8 F055          	movff	tblptru,??_SYS_InterruptHigh+12
 47093  00903E  CFF5 F056          	movff	tablat,??_SYS_InterruptHigh+13
 47094                           
 47095                           ;system.c: 165: USBDeviceTasks();
 47096  009042  ECFC  F080         	call	_USBDeviceTasks	;wreg free
 47097                           
 47098                           ;system.c: 169: if(PIR1bits.TMR2IF)
 47099  009046  B29E               	btfsc	3998,1,c	;volatile
 47100                           
 47101                           ;system.c: 170: {;system.c: 171: motor_isr();
 47102  009048  ECFB  F05B         	call	_motor_isr	;wreg free
 47103                           
 47104                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 47105  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 47106                           
 47107                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 47108  00904E  EC6D  F0AC         	call	_tmr0_isr	;wreg free
 47109  009052  C056  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 47110  009056  C055  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 47111  00905A  C054  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 47112  00905E  C053  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 47113  009062  C052  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 47114  009066  C051  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 47115  00906A  C050  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 47116  00906E  C04F  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 47117  009072  C04E  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 47118  009076  C04D  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 47119  00907A  C04C  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 47120  00907E  C04B  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 47121  009082  C04A  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 47122  009086  C049  FFFA         	movff	??_SYS_InterruptHigh,pclath
 47123  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 47124  00908C  0011               	retfie		f
 47125  00908E                     __end_of_SYS_InterruptHigh:
 47126                           	opt stack 0
 47127                           tosu	equ	0xFFF
 47128                           tosh	equ	0xFFE
 47129                           tosl	equ	0xFFD
 47130                           pclatu	equ	0xFFB
 47131                           pclath	equ	0xFFA
 47132                           tblptru	equ	0xFF8
 47133                           tblptrh	equ	0xFF7
 47134                           tblptrl	equ	0xFF6
 47135                           tablat	equ	0xFF5
 47136                           prodh	equ	0xFF4
 47137                           prodl	equ	0xFF3
 47138                           intcon	equ	0xFF2
 47139                           indf0	equ	0xFEF
 47140                           postinc0	equ	0xFEE
 47141                           fsr0h	equ	0xFEA
 47142                           fsr0l	equ	0xFE9
 47143                           wreg	equ	0xFE8
 47144                           indf1	equ	0xFE7
 47145                           postinc1	equ	0xFE6
 47146                           postdec1	equ	0xFE5
 47147                           plusw1	equ	0xFE3
 47148                           fsr1h	equ	0xFE2
 47149                           fsr1l	equ	0xFE1
 47150                           indf2	equ	0xFDF
 47151                           postinc2	equ	0xFDE
 47152                           postdec2	equ	0xFDD
 47153                           plusw2	equ	0xFDB
 47154                           fsr2h	equ	0xFDA
 47155                           fsr2l	equ	0xFD9
 47156                           status	equ	0xFD8
 47157                           
 47158 ;; *************** function _tmr0_isr *****************
 47159 ;; Defined at:
 47160 ;;		line 24 in file "os.c"
 47161 ;; Parameters:    Size  Location     Type
 47162 ;;		None
 47163 ;; Auto vars:     Size  Location     Type
 47164 ;;		None
 47165 ;; Return value:  Size  Location     Type
 47166 ;;                  1    wreg      void 
 47167 ;; Registers used:
 47168 ;;		wreg, status,2, status,0, cstack
 47169 ;; Tracked objects:
 47170 ;;		On entry : 0/0
 47171 ;;		On exit  : 0/0
 47172 ;;		Unchanged: 0/0
 47173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47178 ;;Total ram usage:        0 bytes
 47179 ;; Hardware stack levels used:    1
 47180 ;; Hardware stack levels required when called:    1
 47181 ;; This function calls:
 47182 ;;		_encoder_run
 47183 ;; This function is called by:
 47184 ;;		_SYS_InterruptHigh
 47185 ;; This function uses a non-reentrant model
 47186 ;;
 47187                           
 47188                           	psect	text196
 47189  0158DA                     __ptext196:
 47190                           	opt stack 0
 47191  0158DA                     _tmr0_isr:
 47192                           	opt stack 16
 47193                           
 47194                           ;os.c: 27: if(INTCONbits.T0IF)
 47195                           
 47196                           ;incstack = 0
 47197  0158DA  A4F2               	btfss	intcon,2,c	;volatile
 47198  0158DC  0012               	return	
 47199                           
 47200                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 47201  0158DE  0EFA               	movlw	250
 47202  0158E0  6ED7               	movwf	4055,c	;volatile
 47203                           
 47204                           ;os.c: 31: TMR0L = 0x24;
 47205  0158E2  0E24               	movlw	36
 47206  0158E4  6ED6               	movwf	4054,c	;volatile
 47207                           
 47208                           ;os.c: 34: INTCONbits.T0IF = 0;
 47209  0158E6  94F2               	bcf	intcon,2,c	;volatile
 47210                           
 47211                           ;os.c: 37: encoder_run();
 47212  0158E8  EC3E  F08E         	call	_encoder_run	;wreg free
 47213                           
 47214                           ;os.c: 40: ++os.subTimeSlot;
 47215  0158EC  0101               	movlb	1	; () banked
 47216  0158EE  2B65               	incf	_os& (0+255),f,b	;volatile
 47217                           
 47218                           ; BSR set to: 1
 47219                           ;os.c: 41: if(os.subTimeSlot>=10)
 47220  0158F0  0E09               	movlw	9
 47221  0158F2  6565               	cpfsgt	_os& (0+255),b	;volatile
 47222  0158F4  0012               	return	
 47223                           
 47224                           ; BSR set to: 1
 47225                           ;os.c: 42: {;os.c: 43: if(os.done)
 47226  0158F6  5167               	movf	(_os+2)& (0+255),w,b	;volatile
 47227  0158F8  B4D8               	btfsc	status,2,c
 47228  0158FA  0012               	return	
 47229                           
 47230                           ; BSR set to: 1
 47231                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 47232  0158FC  2B66               	incf	(_os+1)& (0+255),f,b	;volatile
 47233                           
 47234                           ; BSR set to: 1
 47235                           ;os.c: 46: if(os.timeSlot==16)
 47236  0158FE  0E10               	movlw	16
 47237  015900  1966               	xorwf	(_os+1)& (0+255),w,b	;volatile
 47238  015902  A4D8               	btfss	status,2,c
 47239  015904  D002               	goto	i2l1066
 47240                           
 47241                           ; BSR set to: 1
 47242                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 47243  015906  0E00               	movlw	0
 47244  015908  6F66               	movwf	(_os+1)& (0+255),b	;volatile
 47245  01590A                     i2l1066:
 47246                           
 47247                           ; BSR set to: 1
 47248                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 47249  01590A  0E00               	movlw	0
 47250  01590C  6F65               	movwf	_os& (0+255),b	;volatile
 47251                           
 47252                           ;os.c: 51: os.done = 0;
 47253  01590E  0E00               	movlw	0
 47254  015910  6F67               	movwf	(_os+2)& (0+255),b	;volatile
 47255                           
 47256                           ; BSR set to: 1
 47257                           
 47258                           ; BSR set to: 1
 47259  015912  0012               	return	
 47260  015914                     __end_of_tmr0_isr:
 47261                           	opt stack 0
 47262                           tosu	equ	0xFFF
 47263                           tosh	equ	0xFFE
 47264                           tosl	equ	0xFFD
 47265                           pclatu	equ	0xFFB
 47266                           pclath	equ	0xFFA
 47267                           tblptru	equ	0xFF8
 47268                           tblptrh	equ	0xFF7
 47269                           tblptrl	equ	0xFF6
 47270                           tablat	equ	0xFF5
 47271                           prodh	equ	0xFF4
 47272                           prodl	equ	0xFF3
 47273                           intcon	equ	0xFF2
 47274                           indf0	equ	0xFEF
 47275                           postinc0	equ	0xFEE
 47276                           fsr0h	equ	0xFEA
 47277                           fsr0l	equ	0xFE9
 47278                           wreg	equ	0xFE8
 47279                           indf1	equ	0xFE7
 47280                           postinc1	equ	0xFE6
 47281                           postdec1	equ	0xFE5
 47282                           plusw1	equ	0xFE3
 47283                           fsr1h	equ	0xFE2
 47284                           fsr1l	equ	0xFE1
 47285                           indf2	equ	0xFDF
 47286                           postinc2	equ	0xFDE
 47287                           postdec2	equ	0xFDD
 47288                           plusw2	equ	0xFDB
 47289                           fsr2h	equ	0xFDA
 47290                           fsr2l	equ	0xFD9
 47291                           status	equ	0xFD8
 47292                           
 47293 ;; *************** function _encoder_run *****************
 47294 ;; Defined at:
 47295 ;;		line 103 in file "encoder.c"
 47296 ;; Parameters:    Size  Location     Type
 47297 ;;		None
 47298 ;; Auto vars:     Size  Location     Type
 47299 ;;		None
 47300 ;; Return value:  Size  Location     Type
 47301 ;;                  1    wreg      void 
 47302 ;; Registers used:
 47303 ;;		wreg, status,2, status,0
 47304 ;; Tracked objects:
 47305 ;;		On entry : 0/0
 47306 ;;		On exit  : 0/0
 47307 ;;		Unchanged: 0/0
 47308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47313 ;;Total ram usage:        0 bytes
 47314 ;; Hardware stack levels used:    1
 47315 ;; This function calls:
 47316 ;;		Nothing
 47317 ;; This function is called by:
 47318 ;;		_tmr0_isr
 47319 ;; This function uses a non-reentrant model
 47320 ;;
 47321                           
 47322                           	psect	text197
 47323  011C7C                     __ptext197:
 47324                           	opt stack 0
 47325  011C7C                     _encoder_run:
 47326                           	opt stack 16
 47327                           
 47328                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 47329                           
 47330                           ;incstack = 0
 47331  011C7C  5084               	movf	3972,w,c	;volatile
 47332  011C7E  0B07               	andlw	7
 47333  011C80  0101               	movlb	1	; () banked
 47334  011C82  1948               	xorwf	_enc1& (0+255),w,b
 47335  011C84  B4D8               	btfsc	status,2,c
 47336  011C86  D033               	goto	i2l2760
 47337                           
 47338                           ; BSR set to: 1
 47339                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 47340  011C88  B084               	btfsc	3972,0,c	;volatile
 47341                           
 47342                           ; BSR set to: 1
 47343  011C8A  A484               	btfss	3972,2,c	;volatile
 47344  011C8C  D00D               	goto	i2l2763
 47345                           
 47346                           ; BSR set to: 1
 47347  011C8E  B148               	btfsc	_enc1& (0+255),0,b
 47348  011C90  D00B               	goto	i2l2763
 47349                           
 47350                           ; BSR set to: 1
 47351                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 47352  011C92  0E7F               	movlw	127
 47353  011C94  1968               	xorwf	(_os+3)& (0+255),w,b	;volatile
 47354  011C96  B4D8               	btfsc	status,2,c
 47355  011C98  D007               	goto	i2l2763
 47356                           
 47357                           ; BSR set to: 1
 47358                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 47359  011C9A  2B68               	incf	(_os+3)& (0+255),f,b	;volatile
 47360                           
 47361                           ; BSR set to: 1
 47362                           ;encoder.c: 113: if(config.beep_duration)
 47363  011C9C  51AB               	movf	(_config+21)& (0+255),w,b
 47364  011C9E  B4D8               	btfsc	status,2,c
 47365  011CA0  D003               	goto	i2l2763
 47366                           
 47367                           ; BSR set to: 1
 47368                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 47369  011CA2  8E8B               	bsf	3979,7,c	;volatile
 47370                           
 47371                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 47372  011CA4  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47373  011CA8                     i2l2763:
 47374                           
 47375                           ; BSR set to: 1
 47376                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 47377                           
 47378                           ; BSR set to: 1
 47379                           
 47380                           ; BSR set to: 1
 47381  011CA8  B484               	btfsc	3972,2,c	;volatile
 47382                           
 47383                           ; BSR set to: 1
 47384  011CAA  A084               	btfss	3972,0,c	;volatile
 47385  011CAC  D00E               	goto	i2l2766
 47386                           
 47387                           ; BSR set to: 1
 47388  011CAE  B548               	btfsc	_enc1& (0+255),2,b
 47389  011CB0  D00C               	goto	i2l2766
 47390                           
 47391                           ; BSR set to: 1
 47392                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 47393  011CB2  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 47394  011CB4  0A80               	xorlw	128
 47395  011CB6  0FFF               	addlw	255
 47396  011CB8  A0D8               	btfss	status,0,c
 47397  011CBA  D007               	goto	i2l2766
 47398                           
 47399                           ; BSR set to: 1
 47400                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 47401  011CBC  0768               	decf	(_os+3)& (0+255),f,b	;volatile
 47402                           
 47403                           ; BSR set to: 1
 47404                           ;encoder.c: 126: if(config.beep_duration)
 47405  011CBE  51AB               	movf	(_config+21)& (0+255),w,b
 47406  011CC0  B4D8               	btfsc	status,2,c
 47407  011CC2  D003               	goto	i2l2766
 47408                           
 47409                           ; BSR set to: 1
 47410                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 47411  011CC4  8E8B               	bsf	3979,7,c	;volatile
 47412                           
 47413                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 47414  011CC6  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47415  011CCA                     i2l2766:
 47416                           
 47417                           ; BSR set to: 1
 47418                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 47419                           
 47420                           ; BSR set to: 1
 47421                           
 47422                           ; BSR set to: 1
 47423  011CCA  B284               	btfsc	3972,1,c	;volatile
 47424                           
 47425                           ; BSR set to: 1
 47426  011CCC  B348               	btfsc	_enc1& (0+255),1,b
 47427  011CCE  D008               	goto	i2l2768
 47428                           
 47429                           ; BSR set to: 1
 47430                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 47431  011CD0  0E01               	movlw	1
 47432  011CD2  6F69               	movwf	(_os+4)& (0+255),b	;volatile
 47433                           
 47434                           ;encoder.c: 137: if(config.beep_duration)
 47435  011CD4  51AB               	movf	(_config+21)& (0+255),w,b
 47436  011CD6  B4D8               	btfsc	status,2,c
 47437  011CD8  D003               	goto	i2l2768
 47438                           
 47439                           ; BSR set to: 1
 47440                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 47441  011CDA  8E8B               	bsf	3979,7,c	;volatile
 47442                           
 47443                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 47444  011CDC  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47445  011CE0                     i2l2768:
 47446                           
 47447                           ; BSR set to: 1
 47448                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 47449                           
 47450                           ; BSR set to: 1
 47451  011CE0  A284               	btfss	3972,1,c	;volatile
 47452                           
 47453                           ; BSR set to: 1
 47454  011CE2  A348               	btfss	_enc1& (0+255),1,b
 47455  011CE4  D001               	goto	i2l2769
 47456                           
 47457                           ; BSR set to: 1
 47458                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 47459  011CE6  6969               	setf	(_os+4)& (0+255),b	;volatile
 47460  011CE8                     i2l2769:
 47461                           
 47462                           ; BSR set to: 1
 47463                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 47464                           
 47465                           ; BSR set to: 1
 47466  011CE8  5084               	movf	3972,w,c	;volatile
 47467  011CEA  0B07               	andlw	7
 47468  011CEC  6F48               	movwf	_enc1& (0+255),b
 47469  011CEE                     i2l2760:
 47470                           
 47471                           ; BSR set to: 1
 47472                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 47473  011CEE  5080               	movf	3968,w,c	;volatile
 47474  011CF0  0B07               	andlw	7
 47475  011CF2  1947               	xorwf	_enc2& (0+255),w,b
 47476  011CF4  B4D8               	btfsc	status,2,c
 47477  011CF6  D033               	goto	i2l2770
 47478                           
 47479                           ; BSR set to: 1
 47480                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 47481  011CF8  B480               	btfsc	3968,2,c	;volatile
 47482                           
 47483                           ; BSR set to: 1
 47484  011CFA  A080               	btfss	3968,0,c	;volatile
 47485  011CFC  D00D               	goto	i2l2773
 47486                           
 47487                           ; BSR set to: 1
 47488  011CFE  B547               	btfsc	_enc2& (0+255),2,b
 47489  011D00  D00B               	goto	i2l2773
 47490                           
 47491                           ; BSR set to: 1
 47492                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 47493  011D02  0E7F               	movlw	127
 47494  011D04  196A               	xorwf	(_os+5)& (0+255),w,b	;volatile
 47495  011D06  B4D8               	btfsc	status,2,c
 47496  011D08  D007               	goto	i2l2773
 47497                           
 47498                           ; BSR set to: 1
 47499                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 47500  011D0A  2B6A               	incf	(_os+5)& (0+255),f,b	;volatile
 47501                           
 47502                           ; BSR set to: 1
 47503                           ;encoder.c: 160: if(config.beep_duration)
 47504  011D0C  51AB               	movf	(_config+21)& (0+255),w,b
 47505  011D0E  B4D8               	btfsc	status,2,c
 47506  011D10  D003               	goto	i2l2773
 47507                           
 47508                           ; BSR set to: 1
 47509                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 47510  011D12  8E8B               	bsf	3979,7,c	;volatile
 47511                           
 47512                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 47513  011D14  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47514  011D18                     i2l2773:
 47515                           
 47516                           ; BSR set to: 1
 47517                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 47518                           
 47519                           ; BSR set to: 1
 47520                           
 47521                           ; BSR set to: 1
 47522  011D18  B080               	btfsc	3968,0,c	;volatile
 47523                           
 47524                           ; BSR set to: 1
 47525  011D1A  A480               	btfss	3968,2,c	;volatile
 47526  011D1C  D00E               	goto	i2l2776
 47527                           
 47528                           ; BSR set to: 1
 47529  011D1E  B147               	btfsc	_enc2& (0+255),0,b
 47530  011D20  D00C               	goto	i2l2776
 47531                           
 47532                           ; BSR set to: 1
 47533                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 47534  011D22  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 47535  011D24  0A80               	xorlw	128
 47536  011D26  0FFF               	addlw	255
 47537  011D28  A0D8               	btfss	status,0,c
 47538  011D2A  D007               	goto	i2l2776
 47539                           
 47540                           ; BSR set to: 1
 47541                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 47542  011D2C  076A               	decf	(_os+5)& (0+255),f,b	;volatile
 47543                           
 47544                           ; BSR set to: 1
 47545                           ;encoder.c: 173: if(config.beep_duration)
 47546  011D2E  51AB               	movf	(_config+21)& (0+255),w,b
 47547  011D30  B4D8               	btfsc	status,2,c
 47548  011D32  D003               	goto	i2l2776
 47549                           
 47550                           ; BSR set to: 1
 47551                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 47552  011D34  8E8B               	bsf	3979,7,c	;volatile
 47553                           
 47554                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 47555  011D36  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47556  011D3A                     i2l2776:
 47557                           
 47558                           ; BSR set to: 1
 47559                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 47560                           
 47561                           ; BSR set to: 1
 47562                           
 47563                           ; BSR set to: 1
 47564  011D3A  B280               	btfsc	3968,1,c	;volatile
 47565                           
 47566                           ; BSR set to: 1
 47567  011D3C  B347               	btfsc	_enc2& (0+255),1,b
 47568  011D3E  D008               	goto	i2l2778
 47569                           
 47570                           ; BSR set to: 1
 47571                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 47572  011D40  0E01               	movlw	1
 47573  011D42  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
 47574                           
 47575                           ;encoder.c: 184: if(config.beep_duration)
 47576  011D44  51AB               	movf	(_config+21)& (0+255),w,b
 47577  011D46  B4D8               	btfsc	status,2,c
 47578  011D48  D003               	goto	i2l2778
 47579                           
 47580                           ; BSR set to: 1
 47581                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 47582  011D4A  8E8B               	bsf	3979,7,c	;volatile
 47583                           
 47584                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 47585  011D4C  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47586  011D50                     i2l2778:
 47587                           
 47588                           ; BSR set to: 1
 47589                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 47590                           
 47591                           ; BSR set to: 1
 47592  011D50  A280               	btfss	3968,1,c	;volatile
 47593                           
 47594                           ; BSR set to: 1
 47595  011D52  A347               	btfss	_enc2& (0+255),1,b
 47596  011D54  D001               	goto	i2l2779
 47597                           
 47598                           ; BSR set to: 1
 47599                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 47600  011D56  696B               	setf	(_os+6)& (0+255),b	;volatile
 47601  011D58                     i2l2779:
 47602                           
 47603                           ; BSR set to: 1
 47604                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 47605                           
 47606                           ; BSR set to: 1
 47607  011D58  5080               	movf	3968,w,c	;volatile
 47608  011D5A  0B07               	andlw	7
 47609  011D5C  6F47               	movwf	_enc2& (0+255),b
 47610  011D5E                     i2l2770:
 47611                           
 47612                           ; BSR set to: 1
 47613                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 47614                           
 47615                           ; BSR set to: 1
 47616  011D5E  518C               	movf	(_os+39)& (0+255),w,b	;volatile
 47617  011D60  B4D8               	btfsc	status,2,c
 47618  011D62  0012               	return	
 47619                           
 47620                           ; BSR set to: 1
 47621                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 47622  011D64  078C               	decf	(_os+39)& (0+255),f,b	;volatile
 47623                           
 47624                           ; BSR set to: 1
 47625                           ;encoder.c: 203: if(!os.beep_count)
 47626  011D66  518C               	movf	(_os+39)& (0+255),w,b	;volatile
 47627  011D68  A4D8               	btfss	status,2,c
 47628  011D6A  0012               	return	
 47629                           
 47630                           ; BSR set to: 1
 47631                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 47632  011D6C  9E8B               	bcf	3979,7,c	;volatile
 47633                           
 47634                           ; BSR set to: 1
 47635  011D6E  0012               	return	
 47636  011D70                     __end_of_encoder_run:
 47637                           	opt stack 0
 47638                           tosu	equ	0xFFF
 47639                           tosh	equ	0xFFE
 47640                           tosl	equ	0xFFD
 47641                           pclatu	equ	0xFFB
 47642                           pclath	equ	0xFFA
 47643                           tblptru	equ	0xFF8
 47644                           tblptrh	equ	0xFF7
 47645                           tblptrl	equ	0xFF6
 47646                           tablat	equ	0xFF5
 47647                           prodh	equ	0xFF4
 47648                           prodl	equ	0xFF3
 47649                           intcon	equ	0xFF2
 47650                           indf0	equ	0xFEF
 47651                           postinc0	equ	0xFEE
 47652                           fsr0h	equ	0xFEA
 47653                           fsr0l	equ	0xFE9
 47654                           wreg	equ	0xFE8
 47655                           indf1	equ	0xFE7
 47656                           postinc1	equ	0xFE6
 47657                           postdec1	equ	0xFE5
 47658                           plusw1	equ	0xFE3
 47659                           fsr1h	equ	0xFE2
 47660                           fsr1l	equ	0xFE1
 47661                           indf2	equ	0xFDF
 47662                           postinc2	equ	0xFDE
 47663                           postdec2	equ	0xFDD
 47664                           plusw2	equ	0xFDB
 47665                           fsr2h	equ	0xFDA
 47666                           fsr2l	equ	0xFD9
 47667                           status	equ	0xFD8
 47668                           
 47669 ;; *************** function _motor_isr *****************
 47670 ;; Defined at:
 47671 ;;		line 672 in file "motor.c"
 47672 ;; Parameters:    Size  Location     Type
 47673 ;;		None
 47674 ;; Auto vars:     Size  Location     Type
 47675 ;;  steps_remain    4   68[COMRAM] unsigned long 
 47676 ;;  steps_until_    2   66[COMRAM] unsigned int 
 47677 ;;  steps_until_    2   64[COMRAM] unsigned int 
 47678 ;; Return value:  Size  Location     Type
 47679 ;;                  1    wreg      void 
 47680 ;; Registers used:
 47681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47682 ;; Tracked objects:
 47683 ;;		On entry : 0/0
 47684 ;;		On exit  : 0/0
 47685 ;;		Unchanged: 0/0
 47686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47688 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47689 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47690 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47691 ;;Total ram usage:       24 bytes
 47692 ;; Hardware stack levels used:    1
 47693 ;; Hardware stack levels required when called:    4
 47694 ;; This function calls:
 47695 ;;		_i2c_eeprom_save_position
 47696 ;; This function is called by:
 47697 ;;		_SYS_InterruptHigh
 47698 ;; This function uses a non-reentrant model
 47699 ;;
 47700                           
 47701                           	psect	text198
 47702  00B7F6                     __ptext198:
 47703                           	opt stack 0
 47704  00B7F6                     _motor_isr:
 47705                           	opt stack 13
 47706                           
 47707                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 47708                           
 47709                           ; BSR set to: 1
 47710                           ;incstack = 0
 47711  00B7F6  929E               	bcf	3998,1,c	;volatile
 47712                           
 47713                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 47714  00B7F8  0101               	movlb	1	; () banked
 47715  00B7FA  054B               	decf	_motor_move_type& (0+255),w,b
 47716  00B7FC  A4D8               	btfss	status,2,c
 47717  00B7FE  D004               	goto	i2l2585
 47718                           
 47719                           ; BSR set to: 1
 47720                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 47721  00B800  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 47722  00B802  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 47723  00B804  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 47724  00B806  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 47725  00B808                     i2l2585:
 47726                           
 47727                           ; BSR set to: 1
 47728                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 47729                           
 47730                           ; BSR set to: 1
 47731  00B808  5149               	movf	_motor_mode& (0+255),w,b	;volatile
 47732  00B80A  A4D8               	btfss	status,2,c
 47733  00B80C  D01A               	goto	i2l2590
 47734                           
 47735                           ; BSR set to: 1
 47736                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 47737  00B80E  A28A               	btfss	3978,1,c	;volatile
 47738  00B810  D017               	goto	i2l2587
 47739                           
 47740                           ; BSR set to: 1
 47741                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 47742  00B812  928A               	bcf	3978,1,c	;volatile
 47743                           
 47744                           ; BSR set to: 1
 47745                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 47746  00B814  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47747  00B816  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47748  00B818  E109               	bnz	i2u1919_41
 47749  00B81A  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47750  00B81C  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47751  00B81E  E106               	bnz	i2u1919_41
 47752  00B820  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47753  00B822  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47754  00B824  E103               	bnz	i2u1919_41
 47755  00B826  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47756  00B828  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47757  00B82A  A4D8               	btfss	status,2,c
 47758  00B82C                     i2u1919_41:
 47759  00B82C  0012               	return	
 47760                           
 47761                           ; BSR set to: 1
 47762                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 47763  00B82E  94CA               	bcf	4042,2,c	;volatile
 47764                           
 47765                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 47766  00B830  929E               	bcf	3998,1,c	;volatile
 47767                           
 47768                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 47769  00B832  929D               	bcf	3997,1,c	;volatile
 47770                           
 47771                           ; BSR set to: 1
 47772                           ;motor.c: 705: i2c_eeprom_save_position();
 47773  00B834  ECA4  F09F         	call	_i2c_eeprom_save_position	;wreg free
 47774                           
 47775                           ;motor.c: 707: os.busy = 0;
 47776  00B838  0E00               	movlw	0
 47777  00B83A  0101               	movlb	1	; () banked
 47778  00B83C  6F75               	movwf	(_os+16)& (0+255),b	;volatile
 47779                           
 47780                           ; BSR set to: 1
 47781                           ;motor.c: 708: };motor.c: 711: return;
 47782                           
 47783                           ; BSR set to: 1
 47784  00B83E  0012               	return	
 47785  00B840                     i2l2587:
 47786                           
 47787                           ; BSR set to: 1
 47788                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 47789  00B840  828A               	bsf	3978,1,c	;volatile
 47790  00B842                     i2l2590:
 47791                           
 47792                           ; BSR set to: 1
 47793                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 47794                           
 47795                           ; BSR set to: 1
 47796                           
 47797                           ; BSR set to: 1
 47798  00B842  0E01               	movlw	1
 47799  00B844  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 47800  00B846  0E00               	movlw	0
 47801  00B848  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 47802  00B84A  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 47803  00B84C  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 47804                           
 47805                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 47806  00B84E  514A               	movf	_motor_direction& (0+255),w,b
 47807  00B850  6E31               	movwf	??_motor_isr& (0+255),c
 47808  00B852  0E00               	movlw	0
 47809  00B854  BE31               	btfsc	??_motor_isr& (0+255),7,c
 47810  00B856  0EFF               	movlw	255
 47811  00B858  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 47812  00B85A  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 47813  00B85C  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 47814  00B85E  5031               	movf	??_motor_isr,w,c
 47815  00B860  276C               	addwf	(_os+7)& (0+255),f,b	;volatile
 47816  00B862  5032               	movf	??_motor_isr+1,w,c
 47817  00B864  236D               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47818  00B866  5033               	movf	??_motor_isr+2,w,c
 47819  00B868  236E               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47820  00B86A  5034               	movf	??_motor_isr+3,w,c
 47821  00B86C  236F               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47822                           
 47823                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 47824  00B86E  5196               	movf	_config& (0+255),w,b
 47825  00B870  196C               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47826  00B872  E114               	bnz	i2l19178
 47827  00B874  5197               	movf	(_config+1)& (0+255),w,b
 47828  00B876  196D               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47829  00B878  E111               	bnz	i2l19178
 47830  00B87A  5198               	movf	(_config+2)& (0+255),w,b
 47831  00B87C  196E               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47832  00B87E  E10E               	bnz	i2l19178
 47833  00B880  5199               	movf	(_config+3)& (0+255),w,b
 47834  00B882  196F               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47835  00B884  A4D8               	btfss	status,2,c
 47836  00B886  D00A               	goto	i2l2591
 47837                           
 47838                           ; BSR set to: 1
 47839                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 47840  00B888  0E00               	movlw	0
 47841  00B88A  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 47842  00B88C  0E00               	movlw	0
 47843  00B88E  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 47844  00B890  0E00               	movlw	0
 47845  00B892  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 47846  00B894  0E00               	movlw	0
 47847  00B896  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 47848                           
 47849                           ; BSR set to: 1
 47850                           ;motor.c: 727: ++os.absolute_position;
 47851  00B898  4B70               	infsnz	(_os+11)& (0+255),f,b	;volatile
 47852  00B89A  2B71               	incf	(_os+12)& (0+255),f,b	;volatile
 47853  00B89C                     i2l2591:
 47854  00B89C                     i2l19178:
 47855                           
 47856                           ; BSR set to: 1
 47857                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 47858  00B89C  296C               	incf	(_os+7)& (0+255),w,b	;volatile
 47859  00B89E  E116               	bnz	i2l19184
 47860  00B8A0  296D               	incf	(_os+8)& (0+255),w,b	;volatile
 47861  00B8A2  E114               	bnz	i2l19184
 47862  00B8A4  296E               	incf	(_os+9)& (0+255),w,b	;volatile
 47863  00B8A6  E112               	bnz	i2l19184
 47864  00B8A8  296F               	incf	(_os+10)& (0+255),w,b	;volatile
 47865  00B8AA  A4D8               	btfss	status,2,c
 47866  00B8AC  D00F               	goto	i2l2592
 47867                           
 47868                           ; BSR set to: 1
 47869                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 47870  00B8AE  0EFF               	movlw	255
 47871  00B8B0  2596               	addwf	_config& (0+255),w,b
 47872  00B8B2  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 47873  00B8B4  0EFF               	movlw	255
 47874  00B8B6  2197               	addwfc	(_config+1)& (0+255),w,b
 47875  00B8B8  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 47876  00B8BA  0EFF               	movlw	255
 47877  00B8BC  2198               	addwfc	(_config+2)& (0+255),w,b
 47878  00B8BE  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 47879  00B8C0  0EFF               	movlw	255
 47880  00B8C2  2199               	addwfc	(_config+3)& (0+255),w,b
 47881  00B8C4  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 47882                           
 47883                           ; BSR set to: 1
 47884                           ;motor.c: 732: --os.absolute_position;
 47885  00B8C6  0770               	decf	(_os+11)& (0+255),f,b	;volatile
 47886  00B8C8  A0D8               	btfss	status,0,c
 47887  00B8CA  0771               	decf	(_os+12)& (0+255),f,b	;volatile
 47888  00B8CC                     i2l2592:
 47889  00B8CC                     i2l19184:
 47890                           
 47891                           ; BSR set to: 1
 47892                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 47893  00B8CC  0102               	movlb	2	; () banked
 47894  00B8CE  5138               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 47895  00B8D0  0101               	movlb	1	; () banked
 47896  00B8D2  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47897  00B8D4  E10F               	bnz	i2u1922_41
 47898  00B8D6  0102               	movlb	2	; () banked
 47899  00B8D8  5139               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 47900  00B8DA  0101               	movlb	1	; () banked
 47901  00B8DC  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47902  00B8DE  E10A               	bnz	i2u1922_41
 47903  00B8E0  0102               	movlb	2	; () banked
 47904  00B8E2  513A               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 47905  00B8E4  0101               	movlb	1	; () banked
 47906  00B8E6  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47907  00B8E8  E105               	bnz	i2u1922_41
 47908  00B8EA  0102               	movlb	2	; () banked
 47909  00B8EC  513B               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 47910  00B8EE  0101               	movlb	1	; () banked
 47911  00B8F0  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47912  00B8F2  A4D8               	btfss	status,2,c
 47913  00B8F4                     i2u1922_41:
 47914  00B8F4  0012               	return	
 47915                           
 47916                           ; BSR set to: 1
 47917                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 47918  00B8F6  C11F  F031         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 47919  00B8FA  C120  F032         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 47920  00B8FE  C121  F033         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 47921  00B902  C122  F034         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 47922  00B906  1E31               	comf	??_motor_isr,f,c
 47923  00B908  1E32               	comf	??_motor_isr+1,f,c
 47924  00B90A  1E33               	comf	??_motor_isr+2,f,c
 47925  00B90C  1E34               	comf	??_motor_isr+3,f,c
 47926  00B90E  2A31               	incf	??_motor_isr,f,c
 47927  00B910  0E00               	movlw	0
 47928  00B912  2232               	addwfc	??_motor_isr+1,f,c
 47929  00B914  2233               	addwfc	??_motor_isr+2,f,c
 47930  00B916  2234               	addwfc	??_motor_isr+3,f,c
 47931  00B918  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47932  00B91A  2431               	addwf	??_motor_isr,w,c
 47933  00B91C  6E45               	movwf	motor_isr@steps_remaining,c
 47934  00B91E  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47935  00B920  2032               	addwfc	??_motor_isr+1,w,c
 47936  00B922  6E46               	movwf	motor_isr@steps_remaining+1,c
 47937  00B924  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47938  00B926  2033               	addwfc	??_motor_isr+2,w,c
 47939  00B928  6E47               	movwf	motor_isr@steps_remaining+2,c
 47940  00B92A  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47941  00B92C  2034               	addwfc	??_motor_isr+3,w,c
 47942  00B92E  6E48               	movwf	motor_isr@steps_remaining+3,c
 47943                           
 47944                           ; BSR set to: 1
 47945                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 47946  00B930  90D8               	bcf	status,0,c
 47947  00B932  3457               	rlcf	_motor_current_speed,w,c	;volatile
 47948  00B934  6EF6               	movwf	tblptrl,c
 47949  00B936  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 47950  00B938  6EF7               	movwf	tblptrh,c
 47951  00B93A  0E61               	movlw	low _motor_steps_lookup
 47952  00B93C  26F6               	addwf	tblptrl,f,c
 47953  00B93E  0E94               	movlw	high _motor_steps_lookup
 47954  00B940  22F7               	addwfc	tblptrh,f,c
 47955  00B942                     	if	1	;There are 3 active tblptr bytes
 47956  00B942  6AF8               	clrf	tblptru,c
 47957  00B944  0E00               	movlw	low (__mediumconst shr (0+16))
 47958  00B946  22F8               	addwfc	tblptru,f,c
 47959  00B948                     	endif
 47960  00B948  0009               	tblrd		*+
 47961  00B94A  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill
 47962  00B94E  000A               	tblrd		*-
 47963  00B950  CFF5 F042          	movff	tablat,motor_isr@steps_until_standstill+1
 47964                           
 47965                           ; BSR set to: 1
 47966                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 47967  00B954  C057  F031         	movff	_motor_current_speed,??_motor_isr	;volatile
 47968  00B958  C058  F032         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 47969  00B95C  90D8               	bcf	status,0,c
 47970  00B95E  3631               	rlcf	??_motor_isr,f,c
 47971  00B960  3632               	rlcf	??_motor_isr+1,f,c
 47972  00B962  0E04               	movlw	4
 47973  00B964  2631               	addwf	??_motor_isr,f,c
 47974  00B966  0E00               	movlw	0
 47975  00B968  2232               	addwfc	??_motor_isr+1,f,c
 47976  00B96A  0E61               	movlw	low _motor_steps_lookup
 47977  00B96C  2431               	addwf	??_motor_isr,w,c
 47978  00B96E  6EF6               	movwf	tblptrl,c
 47979  00B970  0E94               	movlw	high _motor_steps_lookup
 47980  00B972  2032               	addwfc	??_motor_isr+1,w,c
 47981  00B974  6EF7               	movwf	tblptrh,c
 47982  00B976                     	if	1	;There are 3 active tblptr bytes
 47983  00B976  6AF8               	clrf	tblptru,c
 47984  00B978  0E00               	movlw	low (__mediumconst shr (0+16))
 47985  00B97A  22F8               	addwfc	tblptru,f,c
 47986  00B97C                     	endif
 47987  00B97C  0009               	tblrd		*+
 47988  00B97E  CFF5 F043          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 47989  00B982  000A               	tblrd		*-
 47990  00B984  CFF5 F044          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 47991                           
 47992                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 47993  00B988  5057               	movf	_motor_current_speed,w,c	;volatile
 47994  00B98A  5D37               	subwf	_motor_maximum_speed& (0+255),w,b
 47995  00B98C  5058               	movf	_motor_current_speed+1,w,c	;volatile
 47996  00B98E  5938               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 47997  00B990  A0D8               	btfss	status,0,c
 47998  00B992  D010               	goto	i2u1924_40
 47999                           
 48000                           ; BSR set to: 1
 48001  00B994  5041               	movf	motor_isr@steps_until_standstill,w,c
 48002  00B996  6E31               	movwf	??_motor_isr& (0+255),c
 48003  00B998  5042               	movf	motor_isr@steps_until_standstill+1,w,c
 48004  00B99A  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 48005  00B99C  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 48006  00B99E  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 48007  00B9A0  5045               	movf	motor_isr@steps_remaining,w,c
 48008  00B9A2  5C31               	subwf	??_motor_isr,w,c
 48009  00B9A4  5046               	movf	motor_isr@steps_remaining+1,w,c
 48010  00B9A6  5832               	subwfb	??_motor_isr+1,w,c
 48011  00B9A8  5047               	movf	motor_isr@steps_remaining+2,w,c
 48012  00B9AA  5833               	subwfb	??_motor_isr+2,w,c
 48013  00B9AC  5048               	movf	motor_isr@steps_remaining+3,w,c
 48014  00B9AE  5834               	subwfb	??_motor_isr+3,w,c
 48015  00B9B0  A0D8               	btfss	status,0,c
 48016  00B9B2  D0ED               	goto	i2l2594
 48017  00B9B4                     i2u1924_40:
 48018                           
 48019                           ; BSR set to: 1
 48020                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 48021                           
 48022                           ; BSR set to: 1
 48023  00B9B4  5057               	movf	_motor_current_speed,w,c	;volatile
 48024  00B9B6  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 48025  00B9B8  B4D8               	btfsc	status,2,c
 48026  00B9BA  D003               	goto	i2l2597
 48027                           
 48028                           ; BSR set to: 1
 48029                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 48030  00B9BC  0657               	decf	_motor_current_speed,f,c	;volatile
 48031  00B9BE  A0D8               	btfss	status,0,c
 48032  00B9C0  0658               	decf	_motor_current_speed+1,f,c	;volatile
 48033  00B9C2                     i2l2597:
 48034                           
 48035                           ; BSR set to: 1
 48036                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 48037                           
 48038                           ; BSR set to: 1
 48039  00B9C2  0549               	decf	_motor_mode& (0+255),w,b	;volatile
 48040  00B9C4  A4D8               	btfss	status,2,c
 48041  00B9C6  D024               	goto	i2l2598
 48042                           
 48043                           ; BSR set to: 1
 48044  00B9C8  0E2F               	movlw	low _motor_postscaler_lookup
 48045  00B9CA  2457               	addwf	_motor_current_speed,w,c	;volatile
 48046  00B9CC  6EF6               	movwf	tblptrl,c
 48047  00B9CE  0E98               	movlw	high _motor_postscaler_lookup
 48048  00B9D0  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48049  00B9D2  6EF7               	movwf	tblptrh,c
 48050  00B9D4                     	if	1	;There are 3 active tblptr bytes
 48051  00B9D4  6AF8               	clrf	tblptru,c
 48052  00B9D6  0E00               	movlw	low (__mediumconst shr (0+16))
 48053  00B9D8  22F8               	addwfc	tblptru,f,c
 48054  00B9DA                     	endif
 48055  00B9DA  0008               	tblrd		*
 48056  00B9DC  50F5               	movf	tablat,w,c
 48057  00B9DE  0900               	iorlw	0
 48058  00B9E0  B4D8               	btfsc	status,2,c
 48059  00B9E2  D016               	goto	i2l2598
 48060                           
 48061                           ; BSR set to: 1
 48062                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 48063  00B9E4  0E00               	movlw	0
 48064  00B9E6  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 48065                           
 48066                           ; BSR set to: 1
 48067                           ;motor.c: 758: LATBbits.LB1 = 1;
 48068  00B9E8  828A               	bsf	3978,1,c	;volatile
 48069                           
 48070                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 48071  00B9EA  0E55               	movlw	85
 48072  00B9EC  6EA7               	movwf	4007,c	;volsfr
 48073  00B9EE  0EAA               	movlw	170
 48074  00B9F0  6EA7               	movwf	4007,c	;volsfr
 48075                           
 48076                           ; BSR set to: 1
 48077  00B9F2  010E               	movlb	14	; () banked
 48078  00B9F4  91BF               	bcf	191,0,b	;volatile
 48079                           
 48080                           ;motor.c: 760: RPOR4 = 0;
 48081  00B9F6  0E00               	movlw	0
 48082  00B9F8  6FC4               	movwf	196,b	;volatile
 48083                           
 48084                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 48085  00B9FA  0E55               	movlw	85
 48086  00B9FC  6EA7               	movwf	4007,c	;volsfr
 48087  00B9FE  0EAA               	movlw	170
 48088  00BA00  6EA7               	movwf	4007,c	;volsfr
 48089                           
 48090                           ; BSR set to: 14
 48091  00BA02  81BF               	bsf	191,0,b	;volatile
 48092                           
 48093                           ;motor.c: 764: TMR2 = 0;
 48094  00BA04  0E00               	movlw	0
 48095  00BA06  6ECC               	movwf	4044,c	;volatile
 48096                           
 48097                           ; BSR set to: 14
 48098                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 48099  00BA08  90BA               	bcf	4026,0,c	;volatile
 48100  00BA0A  92BA               	bcf	4026,1,c	;volatile
 48101  00BA0C  94BA               	bcf	4026,2,c	;volatile
 48102  00BA0E  96BA               	bcf	4026,3,c	;volatile
 48103  00BA10                     i2l2598:
 48104                           
 48105                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 48106                           
 48107                           ; BSR set to: 14
 48108  00BA10  0EFD               	movlw	low _motor_prescaler_lookup
 48109  00BA12  2457               	addwf	_motor_current_speed,w,c	;volatile
 48110  00BA14  6EF6               	movwf	tblptrl,c
 48111  00BA16  0E9B               	movlw	high _motor_prescaler_lookup
 48112  00BA18  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48113  00BA1A  6EF7               	movwf	tblptrh,c
 48114  00BA1C                     	if	1	;There are 3 active tblptr bytes
 48115  00BA1C  6AF8               	clrf	tblptru,c
 48116  00BA1E  0E00               	movlw	low (__mediumconst shr (0+16))
 48117  00BA20  22F8               	addwfc	tblptru,f,c
 48118  00BA22                     	endif
 48119  00BA22  0008               	tblrd		*
 48120  00BA24  CFF5 F031          	movff	tablat,??_motor_isr
 48121  00BA28  50CA               	movf	4042,w,c	;volatile
 48122  00BA2A  1831               	xorwf	??_motor_isr,w,c
 48123  00BA2C  0BFC               	andlw	-4
 48124  00BA2E  1831               	xorwf	??_motor_isr,w,c
 48125  00BA30  6ECA               	movwf	4042,c	;volatile
 48126                           
 48127                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 48128  00BA32  0E16               	movlw	low _motor_period_lookup
 48129  00BA34  2457               	addwf	_motor_current_speed,w,c	;volatile
 48130  00BA36  6EF6               	movwf	tblptrl,c
 48131  00BA38  0E9A               	movlw	high _motor_period_lookup
 48132  00BA3A  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48133  00BA3C  6EF7               	movwf	tblptrh,c
 48134  00BA3E                     	if	1	;There are 3 active tblptr bytes
 48135  00BA3E  6AF8               	clrf	tblptru,c
 48136  00BA40  0E00               	movlw	low (__mediumconst shr (0+16))
 48137  00BA42  22F8               	addwfc	tblptru,f,c
 48138  00BA44                     	endif
 48139  00BA44  0008               	tblrd		*
 48140  00BA46  CFF5 FFCB          	movff	tablat,4043	;volatile
 48141                           
 48142                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 48143  00BA4A  0E2F               	movlw	low _motor_postscaler_lookup
 48144  00BA4C  2457               	addwf	_motor_current_speed,w,c	;volatile
 48145  00BA4E  6EF6               	movwf	tblptrl,c
 48146  00BA50  0E98               	movlw	high _motor_postscaler_lookup
 48147  00BA52  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48148  00BA54  6EF7               	movwf	tblptrh,c
 48149  00BA56                     	if	1	;There are 3 active tblptr bytes
 48150  00BA56  6AF8               	clrf	tblptru,c
 48151  00BA58  0E00               	movlw	low (__mediumconst shr (0+16))
 48152  00BA5A  22F8               	addwfc	tblptru,f,c
 48153  00BA5C                     	endif
 48154  00BA5C  0008               	tblrd		*
 48155  00BA5E  CFF5 F031          	movff	tablat,??_motor_isr
 48156  00BA62  4631               	rlncf	??_motor_isr,f,c
 48157  00BA64  4631               	rlncf	??_motor_isr,f,c
 48158  00BA66  4631               	rlncf	??_motor_isr,f,c
 48159  00BA68  50CA               	movf	4042,w,c	;volatile
 48160  00BA6A  1831               	xorwf	??_motor_isr,w,c
 48161  00BA6C  0B87               	andlw	-121
 48162  00BA6E  1831               	xorwf	??_motor_isr,w,c
 48163  00BA70  6ECA               	movwf	4042,c	;volatile
 48164                           
 48165                           ;motor.c: 778: CCPR1L = PR2>>1;
 48166  00BA72  90D8               	bcf	status,0,c
 48167  00BA74  30CB               	rrcf	4043,w,c	;volatile
 48168  00BA76  6EBB               	movwf	4027,c	;volatile
 48169                           
 48170                           ;motor.c: 781: if(motor_current_speed>0)
 48171  00BA78  5057               	movf	_motor_current_speed,w,c	;volatile
 48172  00BA7A  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 48173  00BA7C  B4D8               	btfsc	status,2,c
 48174  00BA7E  D060               	goto	i2l2599
 48175                           
 48176                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 48177  00BA80  0EFE               	movlw	254
 48178  00BA82  6E31               	movwf	??_motor_isr& (0+255),c
 48179  00BA84  0EFF               	movlw	255
 48180  00BA86  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 48181  00BA88  C057  F033         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 48182  00BA8C  C058  F034         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 48183  00BA90  90D8               	bcf	status,0,c
 48184  00BA92  3633               	rlcf	??_motor_isr+2,f,c
 48185  00BA94  3634               	rlcf	??_motor_isr+3,f,c
 48186  00BA96  5031               	movf	??_motor_isr,w,c
 48187  00BA98  2633               	addwf	??_motor_isr+2,f,c
 48188  00BA9A  5032               	movf	??_motor_isr+1,w,c
 48189  00BA9C  2234               	addwfc	??_motor_isr+3,f,c
 48190  00BA9E  0E61               	movlw	low _motor_steps_lookup
 48191  00BAA0  2433               	addwf	??_motor_isr+2,w,c
 48192  00BAA2  6EF6               	movwf	tblptrl,c
 48193  00BAA4  0E94               	movlw	high _motor_steps_lookup
 48194  00BAA6  2034               	addwfc	??_motor_isr+3,w,c
 48195  00BAA8  6EF7               	movwf	tblptrh,c
 48196  00BAAA                     	if	1	;There are 3 active tblptr bytes
 48197  00BAAA  6AF8               	clrf	tblptru,c
 48198  00BAAC  0E00               	movlw	low (__mediumconst shr (0+16))
 48199  00BAAE  22F8               	addwfc	tblptru,f,c
 48200  00BAB0                     	endif
 48201  00BAB0  0009               	tblrd		*+
 48202  00BAB2  CFF5 F035          	movff	tablat,??_motor_isr+4
 48203  00BAB6  0009               	tblrd		*+
 48204  00BAB8  CFF5 F036          	movff	tablat,??_motor_isr+5
 48205  00BABC  5035               	movf	??_motor_isr+4,w,c
 48206  00BABE  6E37               	movwf	(??_motor_isr+6)& (0+255),c
 48207  00BAC0  5036               	movf	??_motor_isr+5,w,c
 48208  00BAC2  6E38               	movwf	(??_motor_isr+7)& (0+255),c
 48209  00BAC4  6A39               	clrf	(??_motor_isr+8)& (0+255),c
 48210  00BAC6  6A3A               	clrf	(??_motor_isr+9)& (0+255),c
 48211  00BAC8  1E37               	comf	??_motor_isr+6,f,c
 48212  00BACA  1E38               	comf	??_motor_isr+7,f,c
 48213  00BACC  1E39               	comf	??_motor_isr+8,f,c
 48214  00BACE  1E3A               	comf	??_motor_isr+9,f,c
 48215  00BAD0  2A37               	incf	??_motor_isr+6,f,c
 48216  00BAD2  0E00               	movlw	0
 48217  00BAD4  2238               	addwfc	??_motor_isr+7,f,c
 48218  00BAD6  2239               	addwfc	??_motor_isr+8,f,c
 48219  00BAD8  223A               	addwfc	??_motor_isr+9,f,c
 48220  00BADA  90D8               	bcf	status,0,c
 48221  00BADC  3457               	rlcf	_motor_current_speed,w,c	;volatile
 48222  00BADE  6EF6               	movwf	tblptrl,c
 48223  00BAE0  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 48224  00BAE2  6EF7               	movwf	tblptrh,c
 48225  00BAE4  0E61               	movlw	low _motor_steps_lookup
 48226  00BAE6  26F6               	addwf	tblptrl,f,c
 48227  00BAE8  0E94               	movlw	high _motor_steps_lookup
 48228  00BAEA  22F7               	addwfc	tblptrh,f,c
 48229  00BAEC                     	if	1	;There are 3 active tblptr bytes
 48230  00BAEC  6AF8               	clrf	tblptru,c
 48231  00BAEE  0E00               	movlw	low (__mediumconst shr (0+16))
 48232  00BAF0  22F8               	addwfc	tblptru,f,c
 48233  00BAF2                     	endif
 48234  00BAF2  0009               	tblrd		*+
 48235  00BAF4  CFF5 F03B          	movff	tablat,??_motor_isr+10
 48236  00BAF8  0009               	tblrd		*+
 48237  00BAFA  CFF5 F03C          	movff	tablat,??_motor_isr+11
 48238  00BAFE  503B               	movf	??_motor_isr+10,w,c
 48239  00BB00  2437               	addwf	??_motor_isr+6,w,c
 48240  00BB02  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 48241  00BB04  503C               	movf	??_motor_isr+11,w,c
 48242  00BB06  2038               	addwfc	??_motor_isr+7,w,c
 48243  00BB08  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 48244  00BB0A  0E00               	movlw	0
 48245  00BB0C  2039               	addwfc	??_motor_isr+8,w,c
 48246  00BB0E  6E3F               	movwf	(??_motor_isr+14)& (0+255),c
 48247  00BB10  0E00               	movlw	0
 48248  00BB12  203A               	addwfc	??_motor_isr+9,w,c
 48249  00BB14  6E40               	movwf	(??_motor_isr+15)& (0+255),c
 48250  00BB16  0101               	movlb	1	; () banked
 48251  00BB18  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48252  00BB1A  243D               	addwf	??_motor_isr+12,w,c
 48253  00BB1C  0102               	movlb	2	; () banked
 48254  00BB1E  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48255  00BB20  0101               	movlb	1	; () banked
 48256  00BB22  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48257  00BB24  203E               	addwfc	??_motor_isr+13,w,c
 48258  00BB26  0102               	movlb	2	; () banked
 48259  00BB28  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48260  00BB2A  0101               	movlb	1	; () banked
 48261  00BB2C  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48262  00BB2E  203F               	addwfc	??_motor_isr+14,w,c
 48263  00BB30  0102               	movlb	2	; () banked
 48264  00BB32  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48265  00BB34  0101               	movlb	1	; () banked
 48266  00BB36  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48267  00BB38  2040               	addwfc	??_motor_isr+15,w,c
 48268  00BB3A  0102               	movlb	2	; () banked
 48269  00BB3C  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48270                           
 48271                           ;motor.c: 784: }
 48272  00BB3E  0012               	return	
 48273  00BB40                     i2l2599:
 48274                           
 48275                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 48276                           
 48277                           ; BSR set to: 2
 48278  00BB40  90D8               	bcf	status,0,c
 48279  00BB42  3457               	rlcf	_motor_current_speed,w,c	;volatile
 48280  00BB44  6EF6               	movwf	tblptrl,c
 48281  00BB46  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 48282  00BB48  6EF7               	movwf	tblptrh,c
 48283  00BB4A  0E61               	movlw	low _motor_steps_lookup
 48284  00BB4C  26F6               	addwf	tblptrl,f,c
 48285  00BB4E  0E94               	movlw	high _motor_steps_lookup
 48286  00BB50  22F7               	addwfc	tblptrh,f,c
 48287  00BB52                     	if	1	;There are 3 active tblptr bytes
 48288  00BB52  6AF8               	clrf	tblptru,c
 48289  00BB54  0E00               	movlw	low (__mediumconst shr (0+16))
 48290  00BB56  22F8               	addwfc	tblptru,f,c
 48291  00BB58                     	endif
 48292  00BB58  0009               	tblrd		*+
 48293  00BB5A  CFF5 F031          	movff	tablat,??_motor_isr
 48294  00BB5E  0009               	tblrd		*+
 48295  00BB60  CFF5 F032          	movff	tablat,??_motor_isr+1
 48296  00BB64  5031               	movf	??_motor_isr,w,c
 48297  00BB66  0101               	movlb	1	; () banked
 48298  00BB68  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 48299  00BB6A  0102               	movlb	2	; () banked
 48300  00BB6C  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48301  00BB6E  5032               	movf	??_motor_isr+1,w,c
 48302  00BB70  0101               	movlb	1	; () banked
 48303  00BB72  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48304  00BB74  0102               	movlb	2	; () banked
 48305  00BB76  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48306  00BB78  0E00               	movlw	0
 48307  00BB7A  0101               	movlb	1	; () banked
 48308  00BB7C  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48309  00BB7E  0102               	movlb	2	; () banked
 48310  00BB80  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48311  00BB82  0E00               	movlw	0
 48312  00BB84  0101               	movlb	1	; () banked
 48313  00BB86  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48314  00BB88  0102               	movlb	2	; () banked
 48315  00BB8A  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48316                           
 48317                           ; BSR set to: 2
 48318                           ;motor.c: 788: };motor.c: 789: }
 48319  00BB8C  0012               	return	
 48320  00BB8E                     i2l2594:
 48321                           
 48322                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 48323                           
 48324                           ; BSR set to: 2
 48325  00BB8E  0101               	movlb	1	; () banked
 48326  00BB90  5137               	movf	_motor_maximum_speed& (0+255),w,b
 48327  00BB92  1857               	xorwf	_motor_current_speed,w,c	;volatile
 48328  00BB94  E104               	bnz	i2u1929_40
 48329  00BB96  5138               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 48330  00BB98  1858               	xorwf	_motor_current_speed+1,w,c	;volatile
 48331  00BB9A  B4D8               	btfsc	status,2,c
 48332  00BB9C  D010               	goto	i2u1930_40
 48333  00BB9E                     i2u1929_40:
 48334                           
 48335                           ; BSR set to: 1
 48336  00BB9E  5043               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 48337  00BBA0  6E31               	movwf	??_motor_isr& (0+255),c
 48338  00BBA2  5044               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 48339  00BBA4  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 48340  00BBA6  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 48341  00BBA8  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 48342  00BBAA  5045               	movf	motor_isr@steps_remaining,w,c
 48343  00BBAC  5C31               	subwf	??_motor_isr,w,c
 48344  00BBAE  5046               	movf	motor_isr@steps_remaining+1,w,c
 48345  00BBB0  5832               	subwfb	??_motor_isr+1,w,c
 48346  00BBB2  5047               	movf	motor_isr@steps_remaining+2,w,c
 48347  00BBB4  5833               	subwfb	??_motor_isr+2,w,c
 48348  00BBB6  5048               	movf	motor_isr@steps_remaining+3,w,c
 48349  00BBB8  5834               	subwfb	??_motor_isr+3,w,c
 48350  00BBBA  A0D8               	btfss	status,0,c
 48351  00BBBC  D05B               	goto	i2l2602
 48352  00BBBE                     i2u1930_40:
 48353                           
 48354                           ; BSR set to: 1
 48355                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 48356                           
 48357                           ; BSR set to: 1
 48358  00BBBE  90D8               	bcf	status,0,c
 48359  00BBC0  3457               	rlcf	_motor_current_speed,w,c	;volatile
 48360  00BBC2  6EF6               	movwf	tblptrl,c
 48361  00BBC4  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 48362  00BBC6  6EF7               	movwf	tblptrh,c
 48363  00BBC8  0E61               	movlw	low _motor_steps_lookup
 48364  00BBCA  26F6               	addwf	tblptrl,f,c
 48365  00BBCC  0E94               	movlw	high _motor_steps_lookup
 48366  00BBCE  22F7               	addwfc	tblptrh,f,c
 48367  00BBD0                     	if	1	;There are 3 active tblptr bytes
 48368  00BBD0  6AF8               	clrf	tblptru,c
 48369  00BBD2  0E00               	movlw	low (__mediumconst shr (0+16))
 48370  00BBD4  22F8               	addwfc	tblptru,f,c
 48371  00BBD6                     	endif
 48372  00BBD6  0009               	tblrd		*+
 48373  00BBD8  CFF5 F031          	movff	tablat,??_motor_isr
 48374  00BBDC  0009               	tblrd		*+
 48375  00BBDE  CFF5 F032          	movff	tablat,??_motor_isr+1
 48376  00BBE2  5031               	movf	??_motor_isr,w,c
 48377  00BBE4  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 48378  00BBE6  5032               	movf	??_motor_isr+1,w,c
 48379  00BBE8  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 48380  00BBEA  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 48381  00BBEC  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 48382  00BBEE  1E33               	comf	??_motor_isr+2,f,c
 48383  00BBF0  1E34               	comf	??_motor_isr+3,f,c
 48384  00BBF2  1E35               	comf	??_motor_isr+4,f,c
 48385  00BBF4  1E36               	comf	??_motor_isr+5,f,c
 48386  00BBF6  2A33               	incf	??_motor_isr+2,f,c
 48387  00BBF8  0E00               	movlw	0
 48388  00BBFA  2234               	addwfc	??_motor_isr+3,f,c
 48389  00BBFC  2235               	addwfc	??_motor_isr+4,f,c
 48390  00BBFE  2236               	addwfc	??_motor_isr+5,f,c
 48391  00BC00  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 48392  00BC04  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 48393  00BC08  90D8               	bcf	status,0,c
 48394  00BC0A  3637               	rlcf	??_motor_isr+6,f,c
 48395  00BC0C  3638               	rlcf	??_motor_isr+7,f,c
 48396  00BC0E  0E02               	movlw	2
 48397  00BC10  2637               	addwf	??_motor_isr+6,f,c
 48398  00BC12  0E00               	movlw	0
 48399  00BC14  2238               	addwfc	??_motor_isr+7,f,c
 48400  00BC16  0E61               	movlw	low _motor_steps_lookup
 48401  00BC18  2437               	addwf	??_motor_isr+6,w,c
 48402  00BC1A  6EF6               	movwf	tblptrl,c
 48403  00BC1C  0E94               	movlw	high _motor_steps_lookup
 48404  00BC1E  2038               	addwfc	??_motor_isr+7,w,c
 48405  00BC20  6EF7               	movwf	tblptrh,c
 48406  00BC22                     	if	1	;There are 3 active tblptr bytes
 48407  00BC22  6AF8               	clrf	tblptru,c
 48408  00BC24  0E00               	movlw	low (__mediumconst shr (0+16))
 48409  00BC26  22F8               	addwfc	tblptru,f,c
 48410  00BC28                     	endif
 48411  00BC28  0009               	tblrd		*+
 48412  00BC2A  CFF5 F039          	movff	tablat,??_motor_isr+8
 48413  00BC2E  0009               	tblrd		*+
 48414  00BC30  CFF5 F03A          	movff	tablat,??_motor_isr+9
 48415  00BC34  5039               	movf	??_motor_isr+8,w,c
 48416  00BC36  2433               	addwf	??_motor_isr+2,w,c
 48417  00BC38  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 48418  00BC3A  503A               	movf	??_motor_isr+9,w,c
 48419  00BC3C  2034               	addwfc	??_motor_isr+3,w,c
 48420  00BC3E  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 48421  00BC40  0E00               	movlw	0
 48422  00BC42  2035               	addwfc	??_motor_isr+4,w,c
 48423  00BC44  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 48424  00BC46  0E00               	movlw	0
 48425  00BC48  2036               	addwfc	??_motor_isr+5,w,c
 48426  00BC4A  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 48427  00BC4C  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48428  00BC4E  243B               	addwf	??_motor_isr+10,w,c
 48429  00BC50  0102               	movlb	2	; () banked
 48430  00BC52  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48431  00BC54  0101               	movlb	1	; () banked
 48432  00BC56  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48433  00BC58  203C               	addwfc	??_motor_isr+11,w,c
 48434  00BC5A  0102               	movlb	2	; () banked
 48435  00BC5C  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48436  00BC5E  0101               	movlb	1	; () banked
 48437  00BC60  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48438  00BC62  203D               	addwfc	??_motor_isr+12,w,c
 48439  00BC64  0102               	movlb	2	; () banked
 48440  00BC66  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48441  00BC68  0101               	movlb	1	; () banked
 48442  00BC6A  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48443  00BC6C  203E               	addwfc	??_motor_isr+13,w,c
 48444  00BC6E  0102               	movlb	2	; () banked
 48445  00BC70  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48446                           
 48447                           ;motor.c: 795: }
 48448  00BC72  0012               	return	
 48449  00BC74                     i2l2602:
 48450                           
 48451                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 48452                           
 48453                           ; BSR set to: 2
 48454  00BC74  4A57               	infsnz	_motor_current_speed,f,c	;volatile
 48455  00BC76  2A58               	incf	_motor_current_speed+1,f,c	;volatile
 48456                           
 48457                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 48458  00BC78  0EFD               	movlw	low _motor_prescaler_lookup
 48459  00BC7A  2457               	addwf	_motor_current_speed,w,c	;volatile
 48460  00BC7C  6EF6               	movwf	tblptrl,c
 48461  00BC7E  0E9B               	movlw	high _motor_prescaler_lookup
 48462  00BC80  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48463  00BC82  6EF7               	movwf	tblptrh,c
 48464  00BC84                     	if	1	;There are 3 active tblptr bytes
 48465  00BC84  6AF8               	clrf	tblptru,c
 48466  00BC86  0E00               	movlw	low (__mediumconst shr (0+16))
 48467  00BC88  22F8               	addwfc	tblptru,f,c
 48468  00BC8A                     	endif
 48469  00BC8A  0008               	tblrd		*
 48470  00BC8C  CFF5 F031          	movff	tablat,??_motor_isr
 48471  00BC90  50CA               	movf	4042,w,c	;volatile
 48472  00BC92  1831               	xorwf	??_motor_isr,w,c
 48473  00BC94  0BFC               	andlw	-4
 48474  00BC96  1831               	xorwf	??_motor_isr,w,c
 48475  00BC98  6ECA               	movwf	4042,c	;volatile
 48476                           
 48477                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 48478  00BC9A  0E16               	movlw	low _motor_period_lookup
 48479  00BC9C  2457               	addwf	_motor_current_speed,w,c	;volatile
 48480  00BC9E  6EF6               	movwf	tblptrl,c
 48481  00BCA0  0E9A               	movlw	high _motor_period_lookup
 48482  00BCA2  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48483  00BCA4  6EF7               	movwf	tblptrh,c
 48484  00BCA6                     	if	1	;There are 3 active tblptr bytes
 48485  00BCA6  6AF8               	clrf	tblptru,c
 48486  00BCA8  0E00               	movlw	low (__mediumconst shr (0+16))
 48487  00BCAA  22F8               	addwfc	tblptru,f,c
 48488  00BCAC                     	endif
 48489  00BCAC  0008               	tblrd		*
 48490  00BCAE  CFF5 FFCB          	movff	tablat,4043	;volatile
 48491                           
 48492                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 48493  00BCB2  0E2F               	movlw	low _motor_postscaler_lookup
 48494  00BCB4  2457               	addwf	_motor_current_speed,w,c	;volatile
 48495  00BCB6  6EF6               	movwf	tblptrl,c
 48496  00BCB8  0E98               	movlw	high _motor_postscaler_lookup
 48497  00BCBA  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48498  00BCBC  6EF7               	movwf	tblptrh,c
 48499  00BCBE                     	if	1	;There are 3 active tblptr bytes
 48500  00BCBE  6AF8               	clrf	tblptru,c
 48501  00BCC0  0E00               	movlw	low (__mediumconst shr (0+16))
 48502  00BCC2  22F8               	addwfc	tblptru,f,c
 48503  00BCC4                     	endif
 48504  00BCC4  0008               	tblrd		*
 48505  00BCC6  CFF5 F031          	movff	tablat,??_motor_isr
 48506  00BCCA  4631               	rlncf	??_motor_isr,f,c
 48507  00BCCC  4631               	rlncf	??_motor_isr,f,c
 48508  00BCCE  4631               	rlncf	??_motor_isr,f,c
 48509  00BCD0  50CA               	movf	4042,w,c	;volatile
 48510  00BCD2  1831               	xorwf	??_motor_isr,w,c
 48511  00BCD4  0B87               	andlw	-121
 48512  00BCD6  1831               	xorwf	??_motor_isr,w,c
 48513  00BCD8  6ECA               	movwf	4042,c	;volatile
 48514                           
 48515                           ;motor.c: 809: CCPR1L = PR2>>1;
 48516  00BCDA  90D8               	bcf	status,0,c
 48517  00BCDC  30CB               	rrcf	4043,w,c	;volatile
 48518  00BCDE  6EBB               	movwf	4027,c	;volatile
 48519                           
 48520                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 48521  00BCE0  0101               	movlb	1	; () banked
 48522  00BCE2  5149               	movf	_motor_mode& (0+255),w,b	;volatile
 48523  00BCE4  A4D8               	btfss	status,2,c
 48524  00BCE6  D021               	goto	i2l2606
 48525                           
 48526                           ; BSR set to: 1
 48527  00BCE8  0E2F               	movlw	low _motor_postscaler_lookup
 48528  00BCEA  2457               	addwf	_motor_current_speed,w,c	;volatile
 48529  00BCEC  6EF6               	movwf	tblptrl,c
 48530  00BCEE  0E98               	movlw	high _motor_postscaler_lookup
 48531  00BCF0  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48532  00BCF2  6EF7               	movwf	tblptrh,c
 48533  00BCF4                     	if	1	;There are 3 active tblptr bytes
 48534  00BCF4  6AF8               	clrf	tblptru,c
 48535  00BCF6  0E00               	movlw	low (__mediumconst shr (0+16))
 48536  00BCF8  22F8               	addwfc	tblptru,f,c
 48537  00BCFA                     	endif
 48538  00BCFA  0008               	tblrd		*
 48539  00BCFC  50F5               	movf	tablat,w,c
 48540  00BCFE  0900               	iorlw	0
 48541  00BD00  A4D8               	btfss	status,2,c
 48542  00BD02  D013               	goto	i2l2606
 48543                           
 48544                           ; BSR set to: 1
 48545                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 48546  00BD04  0E01               	movlw	1
 48547  00BD06  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 48548                           
 48549                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 48550  00BD08  50BA               	movf	4026,w,c	;volatile
 48551  00BD0A  0BF0               	andlw	-16
 48552  00BD0C  090C               	iorlw	12
 48553  00BD0E  6EBA               	movwf	4026,c	;volatile
 48554                           
 48555                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 48556  00BD10  0E55               	movlw	85
 48557  00BD12  6EA7               	movwf	4007,c	;volsfr
 48558  00BD14  0EAA               	movlw	170
 48559  00BD16  6EA7               	movwf	4007,c	;volsfr
 48560                           
 48561                           ; BSR set to: 1
 48562  00BD18  010E               	movlb	14	; () banked
 48563  00BD1A  91BF               	bcf	191,0,b	;volatile
 48564                           
 48565                           ;motor.c: 821: RPOR4 = 14;
 48566  00BD1C  0E0E               	movlw	14
 48567  00BD1E  6FC4               	movwf	196,b	;volatile
 48568                           
 48569                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 48570  00BD20  0E55               	movlw	85
 48571  00BD22  6EA7               	movwf	4007,c	;volsfr
 48572  00BD24  0EAA               	movlw	170
 48573  00BD26  6EA7               	movwf	4007,c	;volsfr
 48574                           
 48575                           ; BSR set to: 14
 48576  00BD28  81BF               	bsf	191,0,b	;volatile
 48577  00BD2A                     i2l2606:
 48578                           
 48579                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 48580                           
 48581                           ; BSR set to: 14
 48582  00BD2A  90D8               	bcf	status,0,c
 48583  00BD2C  3457               	rlcf	_motor_current_speed,w,c	;volatile
 48584  00BD2E  6EF6               	movwf	tblptrl,c
 48585  00BD30  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 48586  00BD32  6EF7               	movwf	tblptrh,c
 48587  00BD34  0E61               	movlw	low _motor_steps_lookup
 48588  00BD36  26F6               	addwf	tblptrl,f,c
 48589  00BD38  0E94               	movlw	high _motor_steps_lookup
 48590  00BD3A  22F7               	addwfc	tblptrh,f,c
 48591  00BD3C                     	if	1	;There are 3 active tblptr bytes
 48592  00BD3C  6AF8               	clrf	tblptru,c
 48593  00BD3E  0E00               	movlw	low (__mediumconst shr (0+16))
 48594  00BD40  22F8               	addwfc	tblptru,f,c
 48595  00BD42                     	endif
 48596  00BD42  0009               	tblrd		*+
 48597  00BD44  CFF5 F031          	movff	tablat,??_motor_isr
 48598  00BD48  0009               	tblrd		*+
 48599  00BD4A  CFF5 F032          	movff	tablat,??_motor_isr+1
 48600  00BD4E  5031               	movf	??_motor_isr,w,c
 48601  00BD50  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 48602  00BD52  5032               	movf	??_motor_isr+1,w,c
 48603  00BD54  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 48604  00BD56  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 48605  00BD58  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 48606  00BD5A  1E33               	comf	??_motor_isr+2,f,c
 48607  00BD5C  1E34               	comf	??_motor_isr+3,f,c
 48608  00BD5E  1E35               	comf	??_motor_isr+4,f,c
 48609  00BD60  1E36               	comf	??_motor_isr+5,f,c
 48610  00BD62  2A33               	incf	??_motor_isr+2,f,c
 48611  00BD64  0E00               	movlw	0
 48612  00BD66  2234               	addwfc	??_motor_isr+3,f,c
 48613  00BD68  2235               	addwfc	??_motor_isr+4,f,c
 48614  00BD6A  2236               	addwfc	??_motor_isr+5,f,c
 48615  00BD6C  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 48616  00BD70  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 48617  00BD74  90D8               	bcf	status,0,c
 48618  00BD76  3637               	rlcf	??_motor_isr+6,f,c
 48619  00BD78  3638               	rlcf	??_motor_isr+7,f,c
 48620  00BD7A  0E02               	movlw	2
 48621  00BD7C  2637               	addwf	??_motor_isr+6,f,c
 48622  00BD7E  0E00               	movlw	0
 48623  00BD80  2238               	addwfc	??_motor_isr+7,f,c
 48624  00BD82  0E61               	movlw	low _motor_steps_lookup
 48625  00BD84  2437               	addwf	??_motor_isr+6,w,c
 48626  00BD86  6EF6               	movwf	tblptrl,c
 48627  00BD88  0E94               	movlw	high _motor_steps_lookup
 48628  00BD8A  2038               	addwfc	??_motor_isr+7,w,c
 48629  00BD8C  6EF7               	movwf	tblptrh,c
 48630  00BD8E                     	if	1	;There are 3 active tblptr bytes
 48631  00BD8E  6AF8               	clrf	tblptru,c
 48632  00BD90  0E00               	movlw	low (__mediumconst shr (0+16))
 48633  00BD92  22F8               	addwfc	tblptru,f,c
 48634  00BD94                     	endif
 48635  00BD94  0009               	tblrd		*+
 48636  00BD96  CFF5 F039          	movff	tablat,??_motor_isr+8
 48637  00BD9A  0009               	tblrd		*+
 48638  00BD9C  CFF5 F03A          	movff	tablat,??_motor_isr+9
 48639  00BDA0  5039               	movf	??_motor_isr+8,w,c
 48640  00BDA2  2433               	addwf	??_motor_isr+2,w,c
 48641  00BDA4  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 48642  00BDA6  503A               	movf	??_motor_isr+9,w,c
 48643  00BDA8  2034               	addwfc	??_motor_isr+3,w,c
 48644  00BDAA  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 48645  00BDAC  0E00               	movlw	0
 48646  00BDAE  2035               	addwfc	??_motor_isr+4,w,c
 48647  00BDB0  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 48648  00BDB2  0E00               	movlw	0
 48649  00BDB4  2036               	addwfc	??_motor_isr+5,w,c
 48650  00BDB6  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 48651  00BDB8  0101               	movlb	1	; () banked
 48652  00BDBA  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48653  00BDBC  243B               	addwf	??_motor_isr+10,w,c
 48654  00BDBE  0102               	movlb	2	; () banked
 48655  00BDC0  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48656  00BDC2  0101               	movlb	1	; () banked
 48657  00BDC4  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48658  00BDC6  203C               	addwfc	??_motor_isr+11,w,c
 48659  00BDC8  0102               	movlb	2	; () banked
 48660  00BDCA  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48661  00BDCC  0101               	movlb	1	; () banked
 48662  00BDCE  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48663  00BDD0  203D               	addwfc	??_motor_isr+12,w,c
 48664  00BDD2  0102               	movlb	2	; () banked
 48665  00BDD4  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48666  00BDD6  0101               	movlb	1	; () banked
 48667  00BDD8  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48668  00BDDA  203E               	addwfc	??_motor_isr+13,w,c
 48669  00BDDC  0102               	movlb	2	; () banked
 48670  00BDDE  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48671                           
 48672                           ; BSR set to: 2
 48673                           
 48674                           ; BSR set to: 2
 48675  00BDE0  0012               	return	
 48676  00BDE2                     __end_of_motor_isr:
 48677                           	opt stack 0
 48678                           tosu	equ	0xFFF
 48679                           tosh	equ	0xFFE
 48680                           tosl	equ	0xFFD
 48681                           pclatu	equ	0xFFB
 48682                           pclath	equ	0xFFA
 48683                           tblptru	equ	0xFF8
 48684                           tblptrh	equ	0xFF7
 48685                           tblptrl	equ	0xFF6
 48686                           tablat	equ	0xFF5
 48687                           prodh	equ	0xFF4
 48688                           prodl	equ	0xFF3
 48689                           intcon	equ	0xFF2
 48690                           indf0	equ	0xFEF
 48691                           postinc0	equ	0xFEE
 48692                           fsr0h	equ	0xFEA
 48693                           fsr0l	equ	0xFE9
 48694                           wreg	equ	0xFE8
 48695                           indf1	equ	0xFE7
 48696                           postinc1	equ	0xFE6
 48697                           postdec1	equ	0xFE5
 48698                           plusw1	equ	0xFE3
 48699                           fsr1h	equ	0xFE2
 48700                           fsr1l	equ	0xFE1
 48701                           indf2	equ	0xFDF
 48702                           postinc2	equ	0xFDE
 48703                           postdec2	equ	0xFDD
 48704                           plusw2	equ	0xFDB
 48705                           fsr2h	equ	0xFDA
 48706                           fsr2l	equ	0xFD9
 48707                           status	equ	0xFD8
 48708                           
 48709 ;; *************** function _i2c_eeprom_save_position *****************
 48710 ;; Defined at:
 48711 ;;		line 293 in file "i2c.c"
 48712 ;; Parameters:    Size  Location     Type
 48713 ;;		None
 48714 ;; Auto vars:     Size  Location     Type
 48715 ;;  buffer         11   37[COMRAM] unsigned char [11]
 48716 ;; Return value:  Size  Location     Type
 48717 ;;                  1    wreg      void 
 48718 ;; Registers used:
 48719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48720 ;; Tracked objects:
 48721 ;;		On entry : 0/0
 48722 ;;		On exit  : 0/0
 48723 ;;		Unchanged: 0/0
 48724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48726 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48728 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48729 ;;Total ram usage:       11 bytes
 48730 ;; Hardware stack levels used:    1
 48731 ;; Hardware stack levels required when called:    3
 48732 ;; This function calls:
 48733 ;;		_i2c_eeprom_write
 48734 ;;		i2_memcpy
 48735 ;; This function is called by:
 48736 ;;		_motor_isr
 48737 ;; This function uses a non-reentrant model
 48738 ;;
 48739                           
 48740                           	psect	text199
 48741  013F48                     __ptext199:
 48742                           	opt stack 0
 48743  013F48                     _i2c_eeprom_save_position:
 48744                           	opt stack 13
 48745                           
 48746                           ;i2c.c: 295: uint8_t buffer[11];;i2c.c: 301: memcpy(&buffer[0], &os.current_position_in_
      +                          steps, 4);
 48747                           
 48748                           ;incstack = 0
 48749  013F48  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48750  013F4A  6E01               	movwf	i2memcpy@d1,c
 48751  013F4C  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48752  013F4E  6E02               	movwf	i2memcpy@d1+1,c
 48753  013F50  0E6C               	movlw	low (_os+7)
 48754  013F52  6E03               	movwf	i2memcpy@s1,c
 48755  013F54  0E01               	movlw	high (_os+7)
 48756  013F56  6E04               	movwf	i2memcpy@s1+1,c
 48757  013F58  0E00               	movlw	0
 48758  013F5A  6E06               	movwf	i2memcpy@n+1,c
 48759  013F5C  0E04               	movlw	4
 48760  013F5E  6E05               	movwf	i2memcpy@n,c
 48761  013F60  EC29  F0A6         	call	i2_memcpy	;wreg free
 48762                           
 48763                           ;i2c.c: 302: memcpy(&buffer[4], &os.absolute_position, 2);
 48764  013F64  0E2A               	movlw	low (i2c_eeprom_save_position@buffer+4)
 48765  013F66  6E01               	movwf	i2memcpy@d1,c
 48766  013F68  0E00               	movlw	high (i2c_eeprom_save_position@buffer+4)
 48767  013F6A  6E02               	movwf	i2memcpy@d1+1,c
 48768  013F6C  0E70               	movlw	low (_os+11)
 48769  013F6E  6E03               	movwf	i2memcpy@s1,c
 48770  013F70  0E01               	movlw	high (_os+11)
 48771  013F72  6E04               	movwf	i2memcpy@s1+1,c
 48772  013F74  0E00               	movlw	0
 48773  013F76  6E06               	movwf	i2memcpy@n+1,c
 48774  013F78  0E02               	movlw	2
 48775  013F7A  6E05               	movwf	i2memcpy@n,c
 48776  013F7C  EC29  F0A6         	call	i2_memcpy	;wreg free
 48777                           
 48778                           ;i2c.c: 303: buffer[6] = os.approach_direction;
 48779  013F80  C178  F02C         	movff	_os+19,i2c_eeprom_save_position@buffer+6	;volatile
 48780                           
 48781                           ;i2c.c: 304: memcpy(&buffer[7], &os.division, 2);
 48782  013F84  0E2D               	movlw	low (i2c_eeprom_save_position@buffer+7)
 48783  013F86  6E01               	movwf	i2memcpy@d1,c
 48784  013F88  0E00               	movlw	high (i2c_eeprom_save_position@buffer+7)
 48785  013F8A  6E02               	movwf	i2memcpy@d1+1,c
 48786  013F8C  0E79               	movlw	low (_os+20)
 48787  013F8E  6E03               	movwf	i2memcpy@s1,c
 48788  013F90  0E01               	movlw	high (_os+20)
 48789  013F92  6E04               	movwf	i2memcpy@s1+1,c
 48790  013F94  0E00               	movlw	0
 48791  013F96  6E06               	movwf	i2memcpy@n+1,c
 48792  013F98  0E02               	movlw	2
 48793  013F9A  6E05               	movwf	i2memcpy@n,c
 48794  013F9C  EC29  F0A6         	call	i2_memcpy	;wreg free
 48795                           
 48796                           ;i2c.c: 305: memcpy(&buffer[9], &os.divide_position, 2);
 48797  013FA0  0E2F               	movlw	low (i2c_eeprom_save_position@buffer+9)
 48798  013FA2  6E01               	movwf	i2memcpy@d1,c
 48799  013FA4  0E00               	movlw	high (i2c_eeprom_save_position@buffer+9)
 48800  013FA6  6E02               	movwf	i2memcpy@d1+1,c
 48801  013FA8  0E7C               	movlw	low (_os+23)
 48802  013FAA  6E03               	movwf	i2memcpy@s1,c
 48803  013FAC  0E01               	movlw	high (_os+23)
 48804  013FAE  6E04               	movwf	i2memcpy@s1+1,c
 48805  013FB0  0E00               	movlw	0
 48806  013FB2  6E06               	movwf	i2memcpy@n+1,c
 48807  013FB4  0E02               	movlw	2
 48808  013FB6  6E05               	movwf	i2memcpy@n,c
 48809  013FB8  EC29  F0A6         	call	i2_memcpy	;wreg free
 48810                           
 48811                           ;i2c.c: 308: i2c_eeprom_write(0x200, &buffer[0], 11);
 48812  013FBC  0E02               	movlw	2
 48813  013FBE  6E0C               	movwf	i2c_eeprom_write@address+1,c
 48814  013FC0  0E00               	movlw	0
 48815  013FC2  6E0B               	movwf	i2c_eeprom_write@address,c
 48816  013FC4  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48817  013FC6  6E0D               	movwf	i2c_eeprom_write@data,c
 48818  013FC8  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48819  013FCA  6E0E               	movwf	i2c_eeprom_write@data+1,c
 48820  013FCC  0E0B               	movlw	11
 48821  013FCE  6E0F               	movwf	i2c_eeprom_write@length,c
 48822  013FD0  ECF5  F0A0         	call	_i2c_eeprom_write	;wreg free
 48823  013FD4  0012               	return		;funcret
 48824  013FD6                     __end_of_i2c_eeprom_save_position:
 48825                           	opt stack 0
 48826                           tosu	equ	0xFFF
 48827                           tosh	equ	0xFFE
 48828                           tosl	equ	0xFFD
 48829                           pclatu	equ	0xFFB
 48830                           pclath	equ	0xFFA
 48831                           tblptru	equ	0xFF8
 48832                           tblptrh	equ	0xFF7
 48833                           tblptrl	equ	0xFF6
 48834                           tablat	equ	0xFF5
 48835                           prodh	equ	0xFF4
 48836                           prodl	equ	0xFF3
 48837                           intcon	equ	0xFF2
 48838                           indf0	equ	0xFEF
 48839                           postinc0	equ	0xFEE
 48840                           fsr0h	equ	0xFEA
 48841                           fsr0l	equ	0xFE9
 48842                           wreg	equ	0xFE8
 48843                           indf1	equ	0xFE7
 48844                           postinc1	equ	0xFE6
 48845                           postdec1	equ	0xFE5
 48846                           plusw1	equ	0xFE3
 48847                           fsr1h	equ	0xFE2
 48848                           fsr1l	equ	0xFE1
 48849                           indf2	equ	0xFDF
 48850                           postinc2	equ	0xFDE
 48851                           postdec2	equ	0xFDD
 48852                           plusw2	equ	0xFDB
 48853                           fsr2h	equ	0xFDA
 48854                           fsr2l	equ	0xFD9
 48855                           status	equ	0xFD8
 48856                           
 48857 ;; *************** function _i2c_eeprom_write *****************
 48858 ;; Defined at:
 48859 ;;		line 256 in file "i2c.c"
 48860 ;; Parameters:    Size  Location     Type
 48861 ;;  address         2   10[COMRAM] unsigned int 
 48862 ;;  data            2   12[COMRAM] PTR unsigned char 
 48863 ;;		 -> i2c_eeprom_save_position@buffer(11), i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_w
      +riteUint16@data(2), 
 48864 ;;  length          1   14[COMRAM] unsigned char 
 48865 ;; Auto vars:     Size  Location     Type
 48866 ;;  dat            17   18[COMRAM] unsigned char [17]
 48867 ;;  cntr            1   36[COMRAM] unsigned char 
 48868 ;;  slave_addres    1   35[COMRAM] unsigned char 
 48869 ;; Return value:  Size  Location     Type
 48870 ;;                  1    wreg      void 
 48871 ;; Registers used:
 48872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48873 ;; Tracked objects:
 48874 ;;		On entry : 0/0
 48875 ;;		On exit  : 0/0
 48876 ;;		Unchanged: 0/0
 48877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48878 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48879 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48880 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48881 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48882 ;;Total ram usage:       27 bytes
 48883 ;; Hardware stack levels used:    1
 48884 ;; Hardware stack levels required when called:    2
 48885 ;; This function calls:
 48886 ;;		i2__i2c_eeprom_busy
 48887 ;;		i2__i2c_write
 48888 ;; This function is called by:
 48889 ;;		_i2c_eeprom_save_position
 48890 ;;		_i2c_eeprom_writeUint16
 48891 ;;		_i2c_eeprom_writeUint32
 48892 ;;		_i2c_eeprom_writeInt16
 48893 ;; This function uses a non-reentrant model
 48894 ;;
 48895                           
 48896                           	psect	text200
 48897  0141EA                     __ptext200:
 48898                           	opt stack 0
 48899  0141EA                     _i2c_eeprom_write:
 48900                           	opt stack 13
 48901                           
 48902                           ;i2c.c: 258: uint8_t cntr;;i2c.c: 259: uint8_t slave_address;;i2c.c: 260: uint8_t dat[17
      +                          ];;i2c.c: 262: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 48903                           
 48904                           ;incstack = 0
 48905  0141EA  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 48906  0141EE  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 48907  0141F2  0E07               	movlw	7
 48908  0141F4  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 48909  0141F6                     i2u1518_45:
 48910  0141F6  90D8               	bcf	status,0,c
 48911  0141F8  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 48912  0141FA  3210               	rrcf	??_i2c_eeprom_write,f,c
 48913  0141FC  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 48914  0141FE  D7FB               	goto	i2u1518_45
 48915  014200  5010               	movf	??_i2c_eeprom_write,w,c
 48916  014202  0B0E               	andlw	14
 48917  014204  09A0               	iorlw	160
 48918  014206  6E24               	movwf	i2c_eeprom_write@slave_address,c
 48919                           
 48920                           ;i2c.c: 263: dat[0] = address & 0xFF;
 48921  014208  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 48922                           
 48923                           ;i2c.c: 265: length &= 0b00001111;
 48924  01420C  0E0F               	movlw	15
 48925  01420E  160F               	andwf	i2c_eeprom_write@length,f,c
 48926                           
 48927                           ;i2c.c: 266: for(cntr=0; cntr<length; ++cntr)
 48928  014210  0E00               	movlw	0
 48929  014212  6E25               	movwf	i2c_eeprom_write@cntr,c
 48930  014214  D018               	goto	i2l1214
 48931  014216                     
 48932                           ;i2c.c: 267: {;i2c.c: 268: dat[cntr+1] = data[cntr];
 48933  014216  5025               	movf	i2c_eeprom_write@cntr,w,c
 48934  014218  0D01               	mullw	1
 48935  01421A  50F3               	movf	prodl,w,c
 48936  01421C  240D               	addwf	i2c_eeprom_write@data,w,c
 48937  01421E  6ED9               	movwf	fsr2l,c
 48938  014220  50F4               	movf	prodh,w,c
 48939  014222  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 48940  014224  6EDA               	movwf	fsr2h,c
 48941  014226  5025               	movf	i2c_eeprom_write@cntr,w,c
 48942  014228  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 48943  01422A  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 48944  01422C  0E01               	movlw	1
 48945  01422E  2610               	addwf	??_i2c_eeprom_write,f,c
 48946  014230  0E00               	movlw	0
 48947  014232  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 48948  014234  0E13               	movlw	low i2c_eeprom_write@dat
 48949  014236  2410               	addwf	??_i2c_eeprom_write,w,c
 48950  014238  6EE1               	movwf	fsr1l,c
 48951  01423A  0E00               	movlw	high i2c_eeprom_write@dat
 48952  01423C  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 48953  01423E  6EE2               	movwf	fsr1h,c
 48954  014240  CFDF FFE7          	movff	indf2,indf1
 48955  014244  2A25               	incf	i2c_eeprom_write@cntr,f,c
 48956  014246                     i2l1214:
 48957  014246  500F               	movf	i2c_eeprom_write@length,w,c
 48958  014248  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 48959  01424A  A0D8               	btfss	status,0,c
 48960  01424C  D7E4               	goto	i2l1215
 48961  01424E                     i2u1519_40:
 48962                           
 48963                           ;i2c.c: 269: };i2c.c: 272: while(_i2c_eeprom_busy());
 48964  01424E  EC04  F0AF         	call	i2__i2c_eeprom_busy	;wreg free
 48965  014252  0900               	iorlw	0
 48966  014254  A4D8               	btfss	status,2,c
 48967  014256  D7FB               	goto	i2u1519_40
 48968                           
 48969                           ;i2c.c: 274: _i2c_write(slave_address, &dat[0], length+1);
 48970  014258  0E13               	movlw	low i2c_eeprom_write@dat
 48971  01425A  6E06               	movwf	i2__i2c_write@data,c
 48972  01425C  0E00               	movlw	high i2c_eeprom_write@dat
 48973  01425E  6E07               	movwf	i2__i2c_write@data+1,c
 48974  014260  280F               	incf	i2c_eeprom_write@length,w,c
 48975  014262  6E08               	movwf	i2__i2c_write@length,c
 48976  014264  5024               	movf	i2c_eeprom_write@slave_address,w,c
 48977  014266  ECE6  F0AA         	call	i2__i2c_write
 48978  01426A  0012               	return		;funcret
 48979  01426C                     __end_of_i2c_eeprom_write:
 48980                           	opt stack 0
 48981                           tosu	equ	0xFFF
 48982                           tosh	equ	0xFFE
 48983                           tosl	equ	0xFFD
 48984                           pclatu	equ	0xFFB
 48985                           pclath	equ	0xFFA
 48986                           tblptru	equ	0xFF8
 48987                           tblptrh	equ	0xFF7
 48988                           tblptrl	equ	0xFF6
 48989                           tablat	equ	0xFF5
 48990                           prodh	equ	0xFF4
 48991                           prodl	equ	0xFF3
 48992                           intcon	equ	0xFF2
 48993                           indf0	equ	0xFEF
 48994                           postinc0	equ	0xFEE
 48995                           fsr0h	equ	0xFEA
 48996                           fsr0l	equ	0xFE9
 48997                           wreg	equ	0xFE8
 48998                           indf1	equ	0xFE7
 48999                           postinc1	equ	0xFE6
 49000                           postdec1	equ	0xFE5
 49001                           plusw1	equ	0xFE3
 49002                           fsr1h	equ	0xFE2
 49003                           fsr1l	equ	0xFE1
 49004                           indf2	equ	0xFDF
 49005                           postinc2	equ	0xFDE
 49006                           postdec2	equ	0xFDD
 49007                           plusw2	equ	0xFDB
 49008                           fsr2h	equ	0xFDA
 49009                           fsr2l	equ	0xFD9
 49010                           status	equ	0xFD8
 49011                           
 49012 ;; *************** function i2__i2c_write *****************
 49013 ;; Defined at:
 49014 ;;		line 86 in file "i2c.c"
 49015 ;; Parameters:    Size  Location     Type
 49016 ;;  slave_addres    1    wreg     unsigned char 
 49017 ;;  data            2    5[COMRAM] PTR unsigned char 
 49018 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 49019 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 49020 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 49021 ;;  length          1    7[COMRAM] unsigned char 
 49022 ;; Auto vars:     Size  Location     Type
 49023 ;;  slave_addres    1    8[COMRAM] unsigned char 
 49024 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 49025 ;; Return value:  Size  Location     Type
 49026 ;;                  1    wreg      void 
 49027 ;; Registers used:
 49028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49029 ;; Tracked objects:
 49030 ;;		On entry : 0/0
 49031 ;;		On exit  : 0/0
 49032 ;;		Unchanged: 0/0
 49033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49034 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49037 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49038 ;;Total ram usage:        5 bytes
 49039 ;; Hardware stack levels used:    1
 49040 ;; Hardware stack levels required when called:    1
 49041 ;; This function calls:
 49042 ;;		i2__i2c_send
 49043 ;;		i2__i2c_start
 49044 ;;		i2__i2c_stop
 49045 ;;		i2__i2c_wait_idle
 49046 ;; This function is called by:
 49047 ;;		_i2c_eeprom_write
 49048 ;; This function uses a non-reentrant model
 49049 ;;
 49050                           
 49051                           	psect	text201
 49052  0155CC                     __ptext201:
 49053                           	opt stack 0
 49054  0155CC                     i2__i2c_write:
 49055                           	opt stack 13
 49056                           
 49057                           ;incstack = 0
 49058                           ;i2__i2c_write@slave_address stored from wreg
 49059  0155CC  6E09               	movwf	i2__i2c_write@slave_address,c
 49060                           
 49061                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 49062  0155CE  ECE8  F0A7         	call	i2__i2c_wait_idle	;wreg free
 49063                           
 49064                           ;i2c.c: 91: _i2c_start();
 49065  0155D2  EC88  F0B0         	call	i2__i2c_start	;wreg free
 49066                           
 49067                           ;i2c.c: 92: _i2c_wait_idle();
 49068  0155D6  ECE8  F0A7         	call	i2__i2c_wait_idle	;wreg free
 49069                           
 49070                           ;i2c.c: 93: _i2c_send(slave_address);
 49071  0155DA  5009               	movf	i2__i2c_write@slave_address,w,c
 49072  0155DC  EC8C  F0B0         	call	i2__i2c_send
 49073                           
 49074                           ;i2c.c: 94: _i2c_wait_idle();
 49075  0155E0  ECE8  F0A7         	call	i2__i2c_wait_idle	;wreg free
 49076                           
 49077                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 49078  0155E4  0E00               	movlw	0
 49079  0155E6  6E0A               	movwf	i2__i2c_write@cntr,c
 49080  0155E8  D00E               	goto	i2l1163
 49081  0155EA                     
 49082                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 49083  0155EA  500A               	movf	i2__i2c_write@cntr,w,c
 49084  0155EC  0D01               	mullw	1
 49085  0155EE  50F3               	movf	prodl,w,c
 49086  0155F0  2406               	addwf	i2__i2c_write@data,w,c
 49087  0155F2  6ED9               	movwf	fsr2l,c
 49088  0155F4  50F4               	movf	prodh,w,c
 49089  0155F6  2007               	addwfc	i2__i2c_write@data+1,w,c
 49090  0155F8  6EDA               	movwf	fsr2h,c
 49091  0155FA  50DF               	movf	indf2,w,c
 49092  0155FC  EC8C  F0B0         	call	i2__i2c_send
 49093                           
 49094                           ;i2c.c: 99: _i2c_wait_idle();
 49095  015600  ECE8  F0A7         	call	i2__i2c_wait_idle	;wreg free
 49096  015604  2A0A               	incf	i2__i2c_write@cntr,f,c
 49097  015606                     i2l1163:
 49098  015606  5008               	movf	i2__i2c_write@length,w,c
 49099  015608  5C0A               	subwf	i2__i2c_write@cntr,w,c
 49100  01560A  A0D8               	btfss	status,0,c
 49101  01560C  D7EE               	goto	i2l1164
 49102                           
 49103                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 49104  01560E  EC84  F0B0         	call	i2__i2c_stop	;wreg free
 49105  015612  0012               	return		;funcret
 49106  015614                     __end_ofi2__i2c_write:
 49107                           	opt stack 0
 49108                           tosu	equ	0xFFF
 49109                           tosh	equ	0xFFE
 49110                           tosl	equ	0xFFD
 49111                           pclatu	equ	0xFFB
 49112                           pclath	equ	0xFFA
 49113                           tblptru	equ	0xFF8
 49114                           tblptrh	equ	0xFF7
 49115                           tblptrl	equ	0xFF6
 49116                           tablat	equ	0xFF5
 49117                           prodh	equ	0xFF4
 49118                           prodl	equ	0xFF3
 49119                           intcon	equ	0xFF2
 49120                           indf0	equ	0xFEF
 49121                           postinc0	equ	0xFEE
 49122                           fsr0h	equ	0xFEA
 49123                           fsr0l	equ	0xFE9
 49124                           wreg	equ	0xFE8
 49125                           indf1	equ	0xFE7
 49126                           postinc1	equ	0xFE6
 49127                           postdec1	equ	0xFE5
 49128                           plusw1	equ	0xFE3
 49129                           fsr1h	equ	0xFE2
 49130                           fsr1l	equ	0xFE1
 49131                           indf2	equ	0xFDF
 49132                           postinc2	equ	0xFDE
 49133                           postdec2	equ	0xFDD
 49134                           plusw2	equ	0xFDB
 49135                           fsr2h	equ	0xFDA
 49136                           fsr2l	equ	0xFD9
 49137                           status	equ	0xFD8
 49138                           
 49139 ;; *************** function i2__i2c_eeprom_busy *****************
 49140 ;; Defined at:
 49141 ;;		line 171 in file "i2c.c"
 49142 ;; Parameters:    Size  Location     Type
 49143 ;;		None
 49144 ;; Auto vars:     Size  Location     Type
 49145 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 49146 ;; Return value:  Size  Location     Type
 49147 ;;                  1    wreg      unsigned char 
 49148 ;; Registers used:
 49149 ;;		wreg, status,2, status,0, cstack
 49150 ;; Tracked objects:
 49151 ;;		On entry : 0/0
 49152 ;;		On exit  : 0/0
 49153 ;;		Unchanged: 0/0
 49154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49159 ;;Total ram usage:        1 bytes
 49160 ;; Hardware stack levels used:    1
 49161 ;; Hardware stack levels required when called:    1
 49162 ;; This function calls:
 49163 ;;		i2__i2c_send
 49164 ;;		i2__i2c_start
 49165 ;;		i2__i2c_stop
 49166 ;;		i2__i2c_wait_idle
 49167 ;; This function is called by:
 49168 ;;		_i2c_eeprom_write
 49169 ;; This function uses a non-reentrant model
 49170 ;;
 49171                           
 49172                           	psect	text202
 49173  015E08                     __ptext202:
 49174                           	opt stack 0
 49175  015E08                     i2__i2c_eeprom_busy:
 49176                           	opt stack 13
 49177                           
 49178                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 49179                           
 49180                           ;incstack = 0
 49181  015E08  ECE8  F0A7         	call	i2__i2c_wait_idle	;wreg free
 49182                           
 49183                           ;i2c.c: 175: _i2c_start();
 49184  015E0C  EC88  F0B0         	call	i2__i2c_start	;wreg free
 49185                           
 49186                           ;i2c.c: 176: _i2c_wait_idle();
 49187  015E10  ECE8  F0A7         	call	i2__i2c_wait_idle	;wreg free
 49188                           
 49189                           ;i2c.c: 177: _i2c_send(0b10100000);
 49190  015E14  0EA0               	movlw	160
 49191  015E16  EC8C  F0B0         	call	i2__i2c_send
 49192                           
 49193                           ;i2c.c: 178: _i2c_wait_idle();
 49194  015E1A  ECE8  F0A7         	call	i2__i2c_wait_idle	;wreg free
 49195                           
 49196                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 49197  015E1E  0E00               	movlw	0
 49198  015E20  BCC5               	btfsc	4037,6,c	;volatile
 49199  015E22  0E01               	movlw	1
 49200  015E24  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 49201                           
 49202                           ;i2c.c: 183: _i2c_stop();
 49203  015E26  EC84  F0B0         	call	i2__i2c_stop	;wreg free
 49204                           
 49205                           ;i2c.c: 185: return 0;
 49206  015E2A  0E00               	movlw	0
 49207  015E2C  0012               	return	
 49208  015E2E                     __end_ofi2__i2c_eeprom_busy:
 49209                           	opt stack 0
 49210                           tosu	equ	0xFFF
 49211                           tosh	equ	0xFFE
 49212                           tosl	equ	0xFFD
 49213                           pclatu	equ	0xFFB
 49214                           pclath	equ	0xFFA
 49215                           tblptru	equ	0xFF8
 49216                           tblptrh	equ	0xFF7
 49217                           tblptrl	equ	0xFF6
 49218                           tablat	equ	0xFF5
 49219                           prodh	equ	0xFF4
 49220                           prodl	equ	0xFF3
 49221                           intcon	equ	0xFF2
 49222                           indf0	equ	0xFEF
 49223                           postinc0	equ	0xFEE
 49224                           fsr0h	equ	0xFEA
 49225                           fsr0l	equ	0xFE9
 49226                           wreg	equ	0xFE8
 49227                           indf1	equ	0xFE7
 49228                           postinc1	equ	0xFE6
 49229                           postdec1	equ	0xFE5
 49230                           plusw1	equ	0xFE3
 49231                           fsr1h	equ	0xFE2
 49232                           fsr1l	equ	0xFE1
 49233                           indf2	equ	0xFDF
 49234                           postinc2	equ	0xFDE
 49235                           postdec2	equ	0xFDD
 49236                           plusw2	equ	0xFDB
 49237                           fsr2h	equ	0xFDA
 49238                           fsr2l	equ	0xFD9
 49239                           status	equ	0xFD8
 49240                           
 49241 ;; *************** function i2__i2c_wait_idle *****************
 49242 ;; Defined at:
 49243 ;;		line 42 in file "i2c.c"
 49244 ;; Parameters:    Size  Location     Type
 49245 ;;		None
 49246 ;; Auto vars:     Size  Location     Type
 49247 ;;		None
 49248 ;; Return value:  Size  Location     Type
 49249 ;;                  1    wreg      void 
 49250 ;; Registers used:
 49251 ;;		wreg, status,2, status,0
 49252 ;; Tracked objects:
 49253 ;;		On entry : 0/0
 49254 ;;		On exit  : 0/0
 49255 ;;		Unchanged: 0/0
 49256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49259 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49260 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49261 ;;Total ram usage:        5 bytes
 49262 ;; Hardware stack levels used:    1
 49263 ;; This function calls:
 49264 ;;		Nothing
 49265 ;; This function is called by:
 49266 ;;		i2__i2c_write
 49267 ;;		i2__i2c_eeprom_busy
 49268 ;; This function uses a non-reentrant model
 49269 ;;
 49270                           
 49271                           	psect	text203
 49272  014FD0                     __ptext203:
 49273                           	opt stack 0
 49274  014FD0                     i2__i2c_wait_idle:
 49275                           	opt stack 13
 49276                           
 49277                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 49278                           
 49279                           ;incstack = 0
 49280  014FD0  A4C7               	btfss	4039,2,c	;volatile
 49281  014FD2  D003               	goto	i2u1366_40
 49282  014FD4  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 49283  014FD6  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 49284  014FD8  D001               	goto	i2u1366_48
 49285  014FDA                     i2u1366_40:
 49286  014FDA  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 49287  014FDC                     i2u1366_48:
 49288  014FDC  A0C5               	btfss	4037,0,c	;volatile
 49289  014FDE  D003               	goto	i2u1367_40
 49290  014FE0  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 49291  014FE2  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 49292  014FE4  D001               	goto	i2u1367_48
 49293  014FE6                     i2u1367_40:
 49294  014FE6  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 49295  014FE8                     i2u1367_48:
 49296  014FE8  A2C5               	btfss	4037,1,c	;volatile
 49297  014FEA  D003               	goto	i2u1368_40
 49298  014FEC  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 49299  014FEE  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 49300  014FF0  D001               	goto	i2u1368_48
 49301  014FF2                     i2u1368_40:
 49302  014FF2  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 49303  014FF4                     i2u1368_48:
 49304  014FF4  A4C5               	btfss	4037,2,c	;volatile
 49305  014FF6  D003               	goto	i2u1369_40
 49306  014FF8  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 49307  014FFA  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 49308  014FFC  D001               	goto	i2u1369_48
 49309  014FFE                     i2u1369_40:
 49310  014FFE  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 49311  015000                     i2u1369_48:
 49312  015000  A6C5               	btfss	4037,3,c	;volatile
 49313  015002  D003               	goto	i2u1370_40
 49314  015004  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 49315  015006  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 49316  015008  D001               	goto	i2u1370_48
 49317  01500A                     i2u1370_40:
 49318  01500A  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 49319  01500C                     i2u1370_48:
 49320  01500C  A8C5               	btfss	4037,4,c	;volatile
 49321  01500E  D002               	goto	i2u1371_40
 49322  015010  0E01               	movlw	1
 49323  015012  D001               	goto	i2u1371_46
 49324  015014                     i2u1371_40:
 49325  015014  0E00               	movlw	0
 49326  015016                     i2u1371_46:
 49327  015016  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 49328  015018  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 49329  01501A  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 49330  01501C  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 49331  01501E  1001               	iorwf	??i2__i2c_wait_idle,w,c
 49332  015020  0900               	iorlw	0
 49333  015022  B4D8               	btfsc	status,2,c
 49334  015024  0012               	return	
 49335  015026  D7D4               	goto	i2__i2c_wait_idle
 49336  015028                     __end_ofi2__i2c_wait_idle:
 49337                           	opt stack 0
 49338                           tosu	equ	0xFFF
 49339                           tosh	equ	0xFFE
 49340                           tosl	equ	0xFFD
 49341                           pclatu	equ	0xFFB
 49342                           pclath	equ	0xFFA
 49343                           tblptru	equ	0xFF8
 49344                           tblptrh	equ	0xFF7
 49345                           tblptrl	equ	0xFF6
 49346                           tablat	equ	0xFF5
 49347                           prodh	equ	0xFF4
 49348                           prodl	equ	0xFF3
 49349                           intcon	equ	0xFF2
 49350                           indf0	equ	0xFEF
 49351                           postinc0	equ	0xFEE
 49352                           fsr0h	equ	0xFEA
 49353                           fsr0l	equ	0xFE9
 49354                           wreg	equ	0xFE8
 49355                           indf1	equ	0xFE7
 49356                           postinc1	equ	0xFE6
 49357                           postdec1	equ	0xFE5
 49358                           plusw1	equ	0xFE3
 49359                           fsr1h	equ	0xFE2
 49360                           fsr1l	equ	0xFE1
 49361                           indf2	equ	0xFDF
 49362                           postinc2	equ	0xFDE
 49363                           postdec2	equ	0xFDD
 49364                           plusw2	equ	0xFDB
 49365                           fsr2h	equ	0xFDA
 49366                           fsr2l	equ	0xFD9
 49367                           status	equ	0xFD8
 49368                           
 49369 ;; *************** function i2__i2c_stop *****************
 49370 ;; Defined at:
 49371 ;;		line 65 in file "i2c.c"
 49372 ;; Parameters:    Size  Location     Type
 49373 ;;		None
 49374 ;; Auto vars:     Size  Location     Type
 49375 ;;		None
 49376 ;; Return value:  Size  Location     Type
 49377 ;;                  1    wreg      void 
 49378 ;; Registers used:
 49379 ;;		None
 49380 ;; Tracked objects:
 49381 ;;		On entry : 0/0
 49382 ;;		On exit  : 0/0
 49383 ;;		Unchanged: 0/0
 49384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49389 ;;Total ram usage:        0 bytes
 49390 ;; Hardware stack levels used:    1
 49391 ;; This function calls:
 49392 ;;		Nothing
 49393 ;; This function is called by:
 49394 ;;		i2__i2c_write
 49395 ;;		i2__i2c_eeprom_busy
 49396 ;; This function uses a non-reentrant model
 49397 ;;
 49398                           
 49399                           	psect	text204
 49400  016108                     __ptext204:
 49401                           	opt stack 0
 49402  016108                     i2__i2c_stop:
 49403                           	opt stack 13
 49404                           
 49405                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 49406                           
 49407                           ;incstack = 0
 49408  016108  84C5               	bsf	4037,2,c	;volatile
 49409  01610A  A4C5               	btfss	4037,2,c	;volatile
 49410  01610C  0012               	return	
 49411  01610E  D7FD               	goto	i2l1146
 49412  016110                     __end_ofi2__i2c_stop:
 49413                           	opt stack 0
 49414                           tosu	equ	0xFFF
 49415                           tosh	equ	0xFFE
 49416                           tosl	equ	0xFFD
 49417                           pclatu	equ	0xFFB
 49418                           pclath	equ	0xFFA
 49419                           tblptru	equ	0xFF8
 49420                           tblptrh	equ	0xFF7
 49421                           tblptrl	equ	0xFF6
 49422                           tablat	equ	0xFF5
 49423                           prodh	equ	0xFF4
 49424                           prodl	equ	0xFF3
 49425                           intcon	equ	0xFF2
 49426                           indf0	equ	0xFEF
 49427                           postinc0	equ	0xFEE
 49428                           fsr0h	equ	0xFEA
 49429                           fsr0l	equ	0xFE9
 49430                           wreg	equ	0xFE8
 49431                           indf1	equ	0xFE7
 49432                           postinc1	equ	0xFE6
 49433                           postdec1	equ	0xFE5
 49434                           plusw1	equ	0xFE3
 49435                           fsr1h	equ	0xFE2
 49436                           fsr1l	equ	0xFE1
 49437                           indf2	equ	0xFDF
 49438                           postinc2	equ	0xFDE
 49439                           postdec2	equ	0xFDD
 49440                           plusw2	equ	0xFDB
 49441                           fsr2h	equ	0xFDA
 49442                           fsr2l	equ	0xFD9
 49443                           status	equ	0xFD8
 49444                           
 49445 ;; *************** function i2__i2c_start *****************
 49446 ;; Defined at:
 49447 ;;		line 47 in file "i2c.c"
 49448 ;; Parameters:    Size  Location     Type
 49449 ;;		None
 49450 ;; Auto vars:     Size  Location     Type
 49451 ;;		None
 49452 ;; Return value:  Size  Location     Type
 49453 ;;                  1    wreg      void 
 49454 ;; Registers used:
 49455 ;;		None
 49456 ;; Tracked objects:
 49457 ;;		On entry : 0/0
 49458 ;;		On exit  : 0/0
 49459 ;;		Unchanged: 0/0
 49460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49465 ;;Total ram usage:        0 bytes
 49466 ;; Hardware stack levels used:    1
 49467 ;; This function calls:
 49468 ;;		Nothing
 49469 ;; This function is called by:
 49470 ;;		i2__i2c_write
 49471 ;;		i2__i2c_eeprom_busy
 49472 ;; This function uses a non-reentrant model
 49473 ;;
 49474                           
 49475                           	psect	text205
 49476  016110                     __ptext205:
 49477                           	opt stack 0
 49478  016110                     i2__i2c_start:
 49479                           	opt stack 13
 49480                           
 49481                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 49482                           
 49483                           ;incstack = 0
 49484  016110  80C5               	bsf	4037,0,c	;volatile
 49485  016112  A0C5               	btfss	4037,0,c	;volatile
 49486  016114  0012               	return	
 49487  016116  D7FD               	goto	i2l1131
 49488  016118                     __end_ofi2__i2c_start:
 49489                           	opt stack 0
 49490                           tosu	equ	0xFFF
 49491                           tosh	equ	0xFFE
 49492                           tosl	equ	0xFFD
 49493                           pclatu	equ	0xFFB
 49494                           pclath	equ	0xFFA
 49495                           tblptru	equ	0xFF8
 49496                           tblptrh	equ	0xFF7
 49497                           tblptrl	equ	0xFF6
 49498                           tablat	equ	0xFF5
 49499                           prodh	equ	0xFF4
 49500                           prodl	equ	0xFF3
 49501                           intcon	equ	0xFF2
 49502                           indf0	equ	0xFEF
 49503                           postinc0	equ	0xFEE
 49504                           fsr0h	equ	0xFEA
 49505                           fsr0l	equ	0xFE9
 49506                           wreg	equ	0xFE8
 49507                           indf1	equ	0xFE7
 49508                           postinc1	equ	0xFE6
 49509                           postdec1	equ	0xFE5
 49510                           plusw1	equ	0xFE3
 49511                           fsr1h	equ	0xFE2
 49512                           fsr1l	equ	0xFE1
 49513                           indf2	equ	0xFDF
 49514                           postinc2	equ	0xFDE
 49515                           postdec2	equ	0xFDD
 49516                           plusw2	equ	0xFDB
 49517                           fsr2h	equ	0xFDA
 49518                           fsr2l	equ	0xFD9
 49519                           status	equ	0xFD8
 49520                           
 49521 ;; *************** function i2__i2c_send *****************
 49522 ;; Defined at:
 49523 ;;		line 53 in file "i2c.c"
 49524 ;; Parameters:    Size  Location     Type
 49525 ;;  dat             1    wreg     unsigned char 
 49526 ;; Auto vars:     Size  Location     Type
 49527 ;;  dat             1    0[COMRAM] unsigned char 
 49528 ;; Return value:  Size  Location     Type
 49529 ;;                  1    wreg      void 
 49530 ;; Registers used:
 49531 ;;		wreg
 49532 ;; Tracked objects:
 49533 ;;		On entry : 0/0
 49534 ;;		On exit  : 0/0
 49535 ;;		Unchanged: 0/0
 49536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49541 ;;Total ram usage:        1 bytes
 49542 ;; Hardware stack levels used:    1
 49543 ;; This function calls:
 49544 ;;		Nothing
 49545 ;; This function is called by:
 49546 ;;		i2__i2c_write
 49547 ;;		i2__i2c_eeprom_busy
 49548 ;; This function uses a non-reentrant model
 49549 ;;
 49550                           
 49551                           	psect	text206
 49552  016118                     __ptext206:
 49553                           	opt stack 0
 49554  016118                     i2__i2c_send:
 49555                           	opt stack 13
 49556                           
 49557                           ;incstack = 0
 49558                           ;i2__i2c_send@dat stored from wreg
 49559  016118  6E01               	movwf	i2__i2c_send@dat,c
 49560                           
 49561                           ;i2c.c: 55: SSP1BUF = dat;
 49562  01611A  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 49563  01611E  0012               	return		;funcret
 49564  016120                     __end_ofi2__i2c_send:
 49565                           	opt stack 0
 49566                           tosu	equ	0xFFF
 49567                           tosh	equ	0xFFE
 49568                           tosl	equ	0xFFD
 49569                           pclatu	equ	0xFFB
 49570                           pclath	equ	0xFFA
 49571                           tblptru	equ	0xFF8
 49572                           tblptrh	equ	0xFF7
 49573                           tblptrl	equ	0xFF6
 49574                           tablat	equ	0xFF5
 49575                           prodh	equ	0xFF4
 49576                           prodl	equ	0xFF3
 49577                           intcon	equ	0xFF2
 49578                           indf0	equ	0xFEF
 49579                           postinc0	equ	0xFEE
 49580                           fsr0h	equ	0xFEA
 49581                           fsr0l	equ	0xFE9
 49582                           wreg	equ	0xFE8
 49583                           indf1	equ	0xFE7
 49584                           postinc1	equ	0xFE6
 49585                           postdec1	equ	0xFE5
 49586                           plusw1	equ	0xFE3
 49587                           fsr1h	equ	0xFE2
 49588                           fsr1l	equ	0xFE1
 49589                           indf2	equ	0xFDF
 49590                           postinc2	equ	0xFDE
 49591                           postdec2	equ	0xFDD
 49592                           plusw2	equ	0xFDB
 49593                           fsr2h	equ	0xFDA
 49594                           fsr2l	equ	0xFD9
 49595                           status	equ	0xFD8
 49596                           
 49597 ;; *************** function _USBDeviceTasks *****************
 49598 ;; Defined at:
 49599 ;;		line 477 in file "usb_device.c"
 49600 ;; Parameters:    Size  Location     Type
 49601 ;;		None
 49602 ;; Auto vars:     Size  Location     Type
 49603 ;;  i               1   30[COMRAM] unsigned char 
 49604 ;; Return value:  Size  Location     Type
 49605 ;;                  1    wreg      void 
 49606 ;; Registers used:
 49607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49608 ;; Tracked objects:
 49609 ;;		On entry : 0/0
 49610 ;;		On exit  : 0/0
 49611 ;;		Unchanged: 0/0
 49612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49614 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49617 ;;Total ram usage:        1 bytes
 49618 ;; Hardware stack levels used:    1
 49619 ;; Hardware stack levels required when called:    8
 49620 ;; This function calls:
 49621 ;;		_USBCtrlEPAllowStatusStage
 49622 ;;		_USBCtrlEPService
 49623 ;;		_USBIncrement1msInternalTimers
 49624 ;;		_USBStallHandler
 49625 ;;		_USBSuspend
 49626 ;;		_USBWakeFromSuspend
 49627 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49628 ;;		i2_USBDeviceInit
 49629 ;; This function is called by:
 49630 ;;		_SYS_InterruptHigh
 49631 ;; This function uses a non-reentrant model
 49632 ;;
 49633                           
 49634                           	psect	text207
 49635  0101F8                     __ptext207:
 49636                           	opt stack 0
 49637  0101F8                     _USBDeviceTasks:
 49638                           	opt stack 9
 49639                           
 49640                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 49641                           
 49642                           ;incstack = 0
 49643  0101F8  045D               	decf	_USBDeviceState,w,c	;volatile
 49644  0101FA  B4D8               	btfsc	status,2,c
 49645                           
 49646                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 49647  0101FC  BA65               	btfsc	3941,5,c	;volatile
 49648  0101FE  D007               	goto	i2l155
 49649                           
 49650                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 49651  010200  0E00               	movlw	0
 49652  010202  6E62               	movwf	3938,c	;volatile
 49653                           
 49654                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 49655  010204  010F               	movlb	15	; () banked
 49656  010206  8136               	bsf	54,0,b	;volatile
 49657                           
 49658                           ; BSR set to: 15
 49659                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 49660  010208  8936               	bsf	54,4,b	;volatile
 49661                           
 49662                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 49663  01020A  0E02               	movlw	2
 49664  01020C  6E5D               	movwf	_USBDeviceState,c	;volatile
 49665  01020E                     i2l155:
 49666                           
 49667                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 49668                           
 49669                           ; BSR set to: 15
 49670                           
 49671                           ; BSR set to: 15
 49672  01020E  A462               	btfss	3938,2,c	;volatile
 49673  010210  D006               	goto	i2l156
 49674  010212  010F               	movlb	15	; () banked
 49675  010214  A536               	btfss	54,2,b	;volatile
 49676  010216  D003               	goto	i2l156
 49677                           
 49678                           ; BSR set to: 15
 49679                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 49680  010218  9462               	bcf	3938,2,c	;volatile
 49681                           
 49682                           ; BSR set to: 15
 49683                           ;usb_device.c: 640: USBWakeFromSuspend();
 49684  01021A  ECC2  F0AC         	call	_USBWakeFromSuspend	;wreg free
 49685  01021E                     i2l156:
 49686                           
 49687                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 49688  01021E  A265               	btfss	3941,1,c	;volatile
 49689  010220  D002               	goto	i2l157
 49690                           
 49691                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 49692  010222  98A1               	bcf	4001,4,c	;volatile
 49693                           
 49694                           ;usb_device.c: 650: return;
 49695  010224  0012               	return	
 49696  010226                     i2l157:
 49697                           
 49698                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 49699  010226  A062               	btfss	3938,0,c	;volatile
 49700  010228  D009               	goto	i2l159
 49701  01022A  010F               	movlb	15	; () banked
 49702  01022C  A136               	btfss	54,0,b	;volatile
 49703  01022E  D006               	goto	i2l159
 49704                           
 49705                           ; BSR set to: 15
 49706                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 49707  010230  EC9F  F081         	call	i2_USBDeviceInit	;wreg free
 49708                           
 49709                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 49710  010234  88A0               	bsf	4000,4,c	;volatile
 49711                           
 49712                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 49713  010236  0E04               	movlw	4
 49714  010238  6E5D               	movwf	_USBDeviceState,c	;volatile
 49715                           
 49716                           ;usb_device.c: 681: (UIR &= 0xFE);
 49717  01023A  9062               	bcf	3938,0,c	;volatile
 49718  01023C                     i2l159:
 49719                           
 49720                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 49721  01023C  A862               	btfss	3938,4,c	;volatile
 49722  01023E  D004               	goto	i2l160
 49723  010240  010F               	movlb	15	; () banked
 49724  010242  B936               	btfsc	54,4,b	;volatile
 49725                           
 49726                           ; BSR set to: 15
 49727                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 49728  010244  ECC2  F0AD         	call	_USBSuspend	;wreg free
 49729  010248                     i2l160:
 49730                           
 49731                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 49732  010248  AC62               	btfss	3938,6,c	;volatile
 49733  01024A  D01C               	goto	i2l164
 49734                           
 49735                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 49736  01024C  010F               	movlb	15	; () banked
 49737  01024E  AD36               	btfss	54,6,b	;volatile
 49738  010250  D00E               	goto	i2l162
 49739                           
 49740                           ; BSR set to: 15
 49741                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 49742  010252  0E00               	movlw	0
 49743  010254  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49744  010256  0E73               	movlw	115
 49745  010258  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49746  01025A  0E00               	movlw	0
 49747  01025C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49748  01025E  0E00               	movlw	0
 49749  010260  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49750  010262  0E00               	movlw	0
 49751  010264  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49752  010266  0E01               	movlw	1
 49753  010268  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49754  01026A  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49755  01026E                     i2l162:
 49756                           
 49757                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 49758  01026E  9C62               	bcf	3938,6,c	;volatile
 49759                           
 49760                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 49761  010270  ECA3  F0AF         	call	_USBIncrement1msInternalTimers	;wreg free
 49762                           
 49763                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 49764  010274  0101               	movlb	1	; () banked
 49765  010276  515F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49766  010278  A4D8               	btfss	status,2,c
 49767                           
 49768                           ; BSR set to: 1
 49769                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 49770  01027A  075F               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 49771                           
 49772                           ; BSR set to: 1
 49773                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 49774                           
 49775                           ; BSR set to: 1
 49776  01027C  515F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49777  01027E  B4D8               	btfsc	status,2,c
 49778                           
 49779                           ; BSR set to: 1
 49780                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 49781  010280  EC87  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49782  010284                     i2l164:
 49783                           
 49784                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 49785  010284  AA62               	btfss	3938,5,c	;volatile
 49786  010286  D004               	goto	i2l165
 49787  010288  010F               	movlb	15	; () banked
 49788  01028A  BB36               	btfsc	54,5,b	;volatile
 49789                           
 49790                           ; BSR set to: 15
 49791                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 49792  01028C  EC93  F0AB         	call	_USBStallHandler	;wreg free
 49793  010290                     i2l165:
 49794                           
 49795                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 49796  010290  A262               	btfss	3938,1,c	;volatile
 49797  010292  D012               	goto	i2l166
 49798  010294  010F               	movlb	15	; () banked
 49799  010296  A336               	btfss	54,1,b	;volatile
 49800  010298  D00F               	goto	i2l166
 49801                           
 49802                           ; BSR set to: 15
 49803                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 49804  01029A  0E7F               	movlw	127
 49805  01029C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49806  01029E  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49807  0102A0  0E00               	movlw	0
 49808  0102A2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49809  0102A4  0E00               	movlw	0
 49810  0102A6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49811  0102A8  0E00               	movlw	0
 49812  0102AA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49813  0102AC  0E01               	movlw	1
 49814  0102AE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49815  0102B0  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49816                           
 49817                           ;usb_device.c: 759: {UEIR = 0;};
 49818  0102B4  0E00               	movlw	0
 49819  0102B6  6E63               	movwf	3939,c	;volatile
 49820  0102B8                     i2l166:
 49821                           
 49822                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 49823  0102B8  0E04               	movlw	4
 49824  0102BA  605D               	cpfslt	_USBDeviceState,c	;volatile
 49825  0102BC  D002               	goto	i2l167
 49826                           
 49827                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 49828  0102BE  98A1               	bcf	4001,4,c	;volatile
 49829                           
 49830                           ;usb_device.c: 777: return;
 49831  0102C0  0012               	return	
 49832  0102C2                     i2l167:
 49833                           
 49834                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 49835  0102C2  010F               	movlb	15	; () banked
 49836  0102C4  A736               	btfss	54,3,b	;volatile
 49837  0102C6  D039               	goto	i2u1770_40
 49838                           
 49839                           ; BSR set to: 15
 49840                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 49841  0102C8  0E00               	movlw	0
 49842  0102CA  6E1F               	movwf	USBDeviceTasks@i,c
 49843  0102CC                     i2l18168:
 49844                           
 49845                           ; BSR set to: 15
 49846  0102CC  0E03               	movlw	3
 49847  0102CE  641F               	cpfsgt	USBDeviceTasks@i,c
 49848  0102D0  D001               	goto	i2l169
 49849  0102D2  D033               	goto	i2u1770_40
 49850  0102D4                     i2l169:
 49851                           
 49852                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 49853  0102D4  A662               	btfss	3938,3,c	;volatile
 49854  0102D6  D031               	goto	i2u1770_40
 49855                           
 49856                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 49857  0102D8  CF64 F05E          	movff	3940,_USTATcopy	;volatile
 49858                           
 49859                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 49860  0102DC  305E               	rrcf	_USTATcopy,w,c	;volatile
 49861  0102DE  32E8               	rrcf	wreg,f,c
 49862  0102E0  32E8               	rrcf	wreg,f,c
 49863  0102E2  0B0F               	andlw	15
 49864  0102E4  0101               	movlb	1	; () banked
 49865  0102E6  6F61               	movwf	_endpoint_number& (0+255),b	;volatile
 49866                           
 49867                           ; BSR set to: 1
 49868                           ;usb_device.c: 793: (UIR &= 0xF7);
 49869  0102E8  9662               	bcf	3938,3,c	;volatile
 49870                           
 49871                           ; BSR set to: 1
 49872                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 49873  0102EA  B45E               	btfsc	_USTATcopy,2,c	;volatile
 49874  0102EC  D007               	goto	i2l172
 49875                           
 49876                           ; BSR set to: 1
 49877                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 49878  0102EE  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49879  0102F0  0D01               	mullw	1
 49880  0102F2  0E31               	movlw	low _ep_data_out
 49881  0102F4  24F3               	addwf	prodl,w,c
 49882  0102F6  6ED9               	movwf	fsr2l,c
 49883  0102F8  0E01               	movlw	high _ep_data_out
 49884  0102FA  D006               	goto	L72
 49885  0102FC                     i2l172:
 49886                           
 49887                           ; BSR set to: 1
 49888                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 49889                           
 49890                           ; BSR set to: 1
 49891  0102FC  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49892  0102FE  0D01               	mullw	1
 49893  010300  0E34               	movlw	low _ep_data_in
 49894  010302  24F3               	addwf	prodl,w,c
 49895  010304  6ED9               	movwf	fsr2l,c
 49896  010306  0E01               	movlw	high _ep_data_in
 49897  010308                     L72:
 49898  010308  20F4               	addwfc	prodh,w,c
 49899  01030A  6EDA               	movwf	fsr2h,c
 49900  01030C  70DF               	btg	indf2,0,c
 49901                           
 49902                           ; BSR set to: 1
 49903                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 49904                           
 49905                           ; BSR set to: 1
 49906  01030E  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49907  010310  A4D8               	btfss	status,2,c
 49908  010312  D003               	goto	i2l174
 49909                           
 49910                           ; BSR set to: 1
 49911                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 49912  010314  EC55  F09D         	call	_USBCtrlEPService	;wreg free
 49913                           
 49914                           ;usb_device.c: 813: }
 49915  010318  D00E               	goto	i2l176
 49916  01031A                     i2l174:
 49917                           
 49918                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 49919  01031A  0E00               	movlw	0
 49920  01031C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49921  01031E  0E72               	movlw	114
 49922  010320  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49923  010322  0E5E               	movlw	low _USTATcopy
 49924  010324  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49925  010326  0E00               	movlw	high _USTATcopy
 49926  010328  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49927  01032A  0E00               	movlw	0
 49928  01032C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49929  01032E  0E00               	movlw	0
 49930  010330  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49931  010332  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49932  010336                     i2l176:
 49933  010336  2A1F               	incf	USBDeviceTasks@i,f,c
 49934  010338  D7C9               	goto	i2l18168
 49935  01033A                     i2u1770_40:
 49936                           
 49937                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 49938  01033A  98A1               	bcf	4001,4,c	;volatile
 49939  01033C  0012               	return		;funcret
 49940  01033E                     __end_of_USBDeviceTasks:
 49941                           	opt stack 0
 49942                           tosu	equ	0xFFF
 49943                           tosh	equ	0xFFE
 49944                           tosl	equ	0xFFD
 49945                           pclatu	equ	0xFFB
 49946                           pclath	equ	0xFFA
 49947                           tblptru	equ	0xFF8
 49948                           tblptrh	equ	0xFF7
 49949                           tblptrl	equ	0xFF6
 49950                           tablat	equ	0xFF5
 49951                           prodh	equ	0xFF4
 49952                           prodl	equ	0xFF3
 49953                           intcon	equ	0xFF2
 49954                           indf0	equ	0xFEF
 49955                           postinc0	equ	0xFEE
 49956                           fsr0h	equ	0xFEA
 49957                           fsr0l	equ	0xFE9
 49958                           wreg	equ	0xFE8
 49959                           indf1	equ	0xFE7
 49960                           postinc1	equ	0xFE6
 49961                           postdec1	equ	0xFE5
 49962                           plusw1	equ	0xFE3
 49963                           fsr1h	equ	0xFE2
 49964                           fsr1l	equ	0xFE1
 49965                           indf2	equ	0xFDF
 49966                           postinc2	equ	0xFDE
 49967                           postdec2	equ	0xFDD
 49968                           plusw2	equ	0xFDB
 49969                           fsr2h	equ	0xFDA
 49970                           fsr2l	equ	0xFD9
 49971                           status	equ	0xFD8
 49972                           
 49973 ;; *************** function i2_USBDeviceInit *****************
 49974 ;; Defined at:
 49975 ;;		line 277 in file "usb_device.c"
 49976 ;; Parameters:    Size  Location     Type
 49977 ;;		None
 49978 ;; Auto vars:     Size  Location     Type
 49979 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 49980 ;; Return value:  Size  Location     Type
 49981 ;;                  1    wreg      void 
 49982 ;; Registers used:
 49983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49984 ;; Tracked objects:
 49985 ;;		On entry : 0/0
 49986 ;;		On exit  : 0/0
 49987 ;;		Unchanged: 0/0
 49988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49993 ;;Total ram usage:        1 bytes
 49994 ;; Hardware stack levels used:    1
 49995 ;; Hardware stack levels required when called:    1
 49996 ;; This function calls:
 49997 ;;		i2_memset
 49998 ;; This function is called by:
 49999 ;;		_USBDeviceTasks
 50000 ;; This function uses a non-reentrant model
 50001 ;;
 50002                           
 50003                           	psect	text208
 50004  01033E                     __ptext208:
 50005                           	opt stack 0
 50006  01033E                     i2_USBDeviceInit:
 50007                           	opt stack 15
 50008                           
 50009                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 50010                           
 50011                           ;incstack = 0
 50012  01033E  98A0               	bcf	4000,4,c	;volatile
 50013                           
 50014                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 50015  010340  0E00               	movlw	0
 50016  010342  6E63               	movwf	3939,c	;volatile
 50017                           
 50018                           ;usb_device.c: 291: {UIR = 0;};
 50019  010344  0E00               	movlw	0
 50020  010346  6E62               	movwf	3938,c	;volatile
 50021                           
 50022                           ;usb_device.c: 294: UEP0 = 0;
 50023  010348  0E00               	movlw	0
 50024  01034A  010F               	movlb	15	; () banked
 50025  01034C  6F26               	movwf	38,b	;volatile
 50026                           
 50027                           ; BSR set to: 15
 50028                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 50029  01034E  0E27               	movlw	39
 50030  010350  6E01               	movwf	i2memset@p1,c
 50031  010352  0E0F               	movlw	15
 50032  010354  6E02               	movwf	i2memset@p1+1,c
 50033  010356  0E00               	movlw	0
 50034  010358  6E04               	movwf	i2memset@c+1,c
 50035  01035A  0E00               	movlw	0
 50036  01035C  6E03               	movwf	i2memset@c,c
 50037  01035E  0E00               	movlw	0
 50038  010360  6E06               	movwf	i2memset@n+1,c
 50039  010362  0E02               	movlw	2
 50040  010364  6E05               	movwf	i2memset@n,c
 50041  010366  EC4C  F0AE         	call	i2_memset	;wreg free
 50042                           
 50043                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 50044  01036A  0E16               	movlw	22
 50045  01036C  010F               	movlb	15	; () banked
 50046  01036E  6F39               	movwf	57,b	;volatile
 50047                           
 50048                           ; BSR set to: 15
 50049  010370  0E9F               	movlw	159
 50050  010372  6F37               	movwf	55,b	;volatile
 50051                           
 50052                           ; BSR set to: 15
 50053  010374  0E7B               	movlw	123
 50054  010376  6F36               	movwf	54,b	;volatile
 50055                           
 50056                           ; BSR set to: 15
 50057                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 50058  010378  0E00               	movlw	0
 50059  01037A  6E09               	movwf	i2USBDeviceInit@i,c
 50060  01037C                     i2l17962:
 50061                           
 50062                           ; BSR set to: 15
 50063  01037C  0E0B               	movlw	11
 50064  01037E  6409               	cpfsgt	i2USBDeviceInit@i,c
 50065  010380  D001               	goto	i2l145
 50066  010382  D00E               	goto	i2u1738_40
 50067  010384                     i2l145:
 50068                           
 50069                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 50070                           
 50071                           ; BSR set to: 15
 50072  010384  5009               	movf	i2USBDeviceInit@i,w,c
 50073  010386  0D04               	mullw	4
 50074  010388  0E00               	movlw	0
 50075  01038A  24F3               	addwf	prodl,w,c
 50076  01038C  6ED9               	movwf	fsr2l,c
 50077  01038E  0E0D               	movlw	13
 50078  010390  20F4               	addwfc	prodh,w,c
 50079  010392  6EDA               	movwf	fsr2h,c
 50080  010394  6ADE               	clrf	postinc2,c
 50081  010396  6ADE               	clrf	postinc2,c
 50082  010398  6ADE               	clrf	postinc2,c
 50083  01039A  6ADD               	clrf	postdec2,c
 50084  01039C  2A09               	incf	i2USBDeviceInit@i,f,c
 50085  01039E  D7EE               	goto	i2l17962
 50086  0103A0                     i2u1738_40:
 50087                           
 50088                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 50089  0103A0  8C65               	bsf	3941,6,c	;volatile
 50090                           
 50091                           ;usb_device.c: 316: UADDR = 0x00;
 50092  0103A2  0E00               	movlw	0
 50093  0103A4  010F               	movlb	15	; () banked
 50094  0103A6  6F38               	movwf	56,b	;volatile
 50095                           
 50096                           ; BSR set to: 15
 50097                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 50098  0103A8  9865               	bcf	3941,4,c	;volatile
 50099                           
 50100                           ; BSR set to: 15
 50101                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 50102  0103AA  9C65               	bcf	3941,6,c	;volatile
 50103  0103AC                     
 50104                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 50105                           
 50106                           ; BSR set to: 15
 50107  0103AC  9662               	bcf	3938,3,c	;volatile
 50108                           
 50109                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 50110  0103AE  0E00               	movlw	0
 50111  0103B0  0101               	movlb	1	; () banked
 50112  0103B2  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 50113                           
 50114                           ; BSR set to: 1
 50115                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 50116  0103B4  0E00               	movlw	0
 50117  0103B6  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 50118                           
 50119                           ; BSR set to: 1
 50120                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 50121  0103B8  0E00               	movlw	0
 50122  0103BA  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 50123  0103BC  0E00               	movlw	0
 50124  0103BE  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 50125                           
 50126                           ; BSR set to: 1
 50127                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 50128  0103C0  B662               	btfsc	3938,3,c	;volatile
 50129  0103C2  D7F4               	goto	i2l147
 50130                           
 50131                           ; BSR set to: 1
 50132                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 50133                           
 50134                           ; BSR set to: 1
 50135  0103C4  0E01               	movlw	1
 50136  0103C6  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50137                           
 50138                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 50139  0103C8  0E01               	movlw	1
 50140  0103CA  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50141                           
 50142                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 50143  0103CC  0E00               	movlw	0
 50144  0103CE  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50145                           
 50146                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 50147  0103D0  0E00               	movlw	0
 50148  0103D2  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50149                           
 50150                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 50151  0103D4  0E00               	movlw	0
 50152  0103D6  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 50153                           
 50154                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 50155  0103D8  0E00               	movlw	0
 50156  0103DA  6E09               	movwf	i2USBDeviceInit@i,c
 50157  0103DC                     i2l17990:
 50158                           
 50159                           ; BSR set to: 1
 50160  0103DC  0E02               	movlw	2
 50161  0103DE  6409               	cpfsgt	i2USBDeviceInit@i,c
 50162  0103E0  D001               	goto	i2l149
 50163  0103E2  D02E               	goto	i2u1741_40
 50164  0103E4                     i2l149:
 50165                           
 50166                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 50167                           
 50168                           ; BSR set to: 1
 50169  0103E4  5009               	movf	i2USBDeviceInit@i,w,c
 50170  0103E6  0D02               	mullw	2
 50171  0103E8  0E0F               	movlw	low _pBDTEntryIn
 50172  0103EA  24F3               	addwf	prodl,w,c
 50173  0103EC  6ED9               	movwf	fsr2l,c
 50174  0103EE  0E01               	movlw	high _pBDTEntryIn
 50175  0103F0  20F4               	addwfc	prodh,w,c
 50176  0103F2  6EDA               	movwf	fsr2h,c
 50177  0103F4  0E00               	movlw	0
 50178  0103F6  6EDE               	movwf	postinc2,c
 50179  0103F8  0E00               	movlw	0
 50180  0103FA  6EDD               	movwf	postdec2,c
 50181                           
 50182                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 50183  0103FC  5009               	movf	i2USBDeviceInit@i,w,c
 50184  0103FE  0D02               	mullw	2
 50185  010400  0E15               	movlw	low _pBDTEntryOut
 50186  010402  24F3               	addwf	prodl,w,c
 50187  010404  6ED9               	movwf	fsr2l,c
 50188  010406  0E01               	movlw	high _pBDTEntryOut
 50189  010408  20F4               	addwfc	prodh,w,c
 50190  01040A  6EDA               	movwf	fsr2h,c
 50191  01040C  0E00               	movlw	0
 50192  01040E  6EDE               	movwf	postinc2,c
 50193  010410  0E00               	movlw	0
 50194  010412  6EDD               	movwf	postdec2,c
 50195                           
 50196                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 50197  010414  5009               	movf	i2USBDeviceInit@i,w,c
 50198  010416  0D01               	mullw	1
 50199  010418  0E34               	movlw	low _ep_data_in
 50200  01041A  24F3               	addwf	prodl,w,c
 50201  01041C  6ED9               	movwf	fsr2l,c
 50202  01041E  0E01               	movlw	high _ep_data_in
 50203  010420  20F4               	addwfc	prodh,w,c
 50204  010422  6EDA               	movwf	fsr2h,c
 50205  010424  0E00               	movlw	0
 50206  010426  6EDF               	movwf	indf2,c
 50207                           
 50208                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 50209  010428  5009               	movf	i2USBDeviceInit@i,w,c
 50210  01042A  0D01               	mullw	1
 50211  01042C  0E31               	movlw	low _ep_data_out
 50212  01042E  24F3               	addwf	prodl,w,c
 50213  010430  6ED9               	movwf	fsr2l,c
 50214  010432  0E01               	movlw	high _ep_data_out
 50215  010434  20F4               	addwfc	prodh,w,c
 50216  010436  6EDA               	movwf	fsr2h,c
 50217  010438  0E00               	movlw	0
 50218  01043A  6EDF               	movwf	indf2,c
 50219  01043C  2A09               	incf	i2USBDeviceInit@i,f,c
 50220  01043E  D7CE               	goto	i2l17990
 50221  010440                     i2u1741_40:
 50222                           
 50223                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 50224  010440  0E08               	movlw	8
 50225  010442  0101               	movlb	1	; () banked
 50226  010444  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 50227  010446  0E0D               	movlw	13
 50228  010448  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50229                           
 50230                           ; BSR set to: 1
 50231                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 50232  01044A  0E16               	movlw	22
 50233  01044C  010F               	movlb	15	; () banked
 50234  01044E  6F26               	movwf	38,b	;volatile
 50235                           
 50236                           ; BSR set to: 15
 50237                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 50238  010450  0E0D               	movlw	13
 50239  010452  010D               	movlb	13	; () banked
 50240  010454  6F03               	movwf	3,b	;volatile
 50241  010456  0E30               	movlw	48
 50242  010458  6F02               	movwf	2,b	;volatile
 50243                           
 50244                           ; BSR set to: 13
 50245                           ;usb_device.c: 359: BDT[0].CNT = 8;
 50246  01045A  0E08               	movlw	8
 50247  01045C  6F01               	movwf	1,b	;volatile
 50248                           
 50249                           ; BSR set to: 13
 50250                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 50251  01045E  0E04               	movlw	4
 50252  010460  6F00               	movwf	0,b	;volatile
 50253                           
 50254                           ; BSR set to: 13
 50255                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 50256  010462  8F00               	bsf	0,7,b	;volatile
 50257                           
 50258                           ; BSR set to: 13
 50259                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 50260  010464  0E00               	movlw	0
 50261  010466  0101               	movlb	1	; () banked
 50262  010468  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 50263                           
 50264                           ; BSR set to: 1
 50265                           ;usb_device.c: 366: USB1msTickCount = 0;
 50266  01046A  0E00               	movlw	0
 50267  01046C  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 50268  01046E  0E00               	movlw	0
 50269  010470  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 50270  010472  0E00               	movlw	0
 50271  010474  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 50272  010476  0E00               	movlw	0
 50273  010478  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 50274                           
 50275                           ; BSR set to: 1
 50276                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 50277  01047A  0E00               	movlw	0
 50278  01047C  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50279                           
 50280                           ; BSR set to: 1
 50281                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 50282  01047E  0E00               	movlw	0
 50283  010480  6E5D               	movwf	_USBDeviceState,c	;volatile
 50284                           
 50285                           ; BSR set to: 1
 50286  010482  0012               	return		;funcret
 50287  010484                     __end_ofi2_USBDeviceInit:
 50288                           	opt stack 0
 50289                           tosu	equ	0xFFF
 50290                           tosh	equ	0xFFE
 50291                           tosl	equ	0xFFD
 50292                           pclatu	equ	0xFFB
 50293                           pclath	equ	0xFFA
 50294                           tblptru	equ	0xFF8
 50295                           tblptrh	equ	0xFF7
 50296                           tblptrl	equ	0xFF6
 50297                           tablat	equ	0xFF5
 50298                           prodh	equ	0xFF4
 50299                           prodl	equ	0xFF3
 50300                           intcon	equ	0xFF2
 50301                           indf0	equ	0xFEF
 50302                           postinc0	equ	0xFEE
 50303                           fsr0h	equ	0xFEA
 50304                           fsr0l	equ	0xFE9
 50305                           wreg	equ	0xFE8
 50306                           indf1	equ	0xFE7
 50307                           postinc1	equ	0xFE6
 50308                           postdec1	equ	0xFE5
 50309                           plusw1	equ	0xFE3
 50310                           fsr1h	equ	0xFE2
 50311                           fsr1l	equ	0xFE1
 50312                           indf2	equ	0xFDF
 50313                           postinc2	equ	0xFDE
 50314                           postdec2	equ	0xFDD
 50315                           plusw2	equ	0xFDB
 50316                           fsr2h	equ	0xFDA
 50317                           fsr2l	equ	0xFD9
 50318                           status	equ	0xFD8
 50319                           
 50320 ;; *************** function _USBWakeFromSuspend *****************
 50321 ;; Defined at:
 50322 ;;		line 2305 in file "usb_device.c"
 50323 ;; Parameters:    Size  Location     Type
 50324 ;;		None
 50325 ;; Auto vars:     Size  Location     Type
 50326 ;;		None
 50327 ;; Return value:  Size  Location     Type
 50328 ;;                  1    wreg      void 
 50329 ;; Registers used:
 50330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50331 ;; Tracked objects:
 50332 ;;		On entry : 0/0
 50333 ;;		On exit  : 0/0
 50334 ;;		Unchanged: 0/0
 50335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50340 ;;Total ram usage:        0 bytes
 50341 ;; Hardware stack levels used:    1
 50342 ;; Hardware stack levels required when called:    4
 50343 ;; This function calls:
 50344 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50345 ;; This function is called by:
 50346 ;;		_USBDeviceTasks
 50347 ;; This function uses a non-reentrant model
 50348 ;;
 50349                           
 50350                           	psect	text209
 50351  015984                     __ptext209:
 50352                           	opt stack 0
 50353  015984                     _USBWakeFromSuspend:
 50354                           	opt stack 12
 50355                           
 50356                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 50357                           
 50358                           ; BSR set to: 1
 50359                           ;incstack = 0
 50360  015984  0E00               	movlw	0
 50361  015986  0101               	movlb	1	; () banked
 50362  015988  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 50363                           
 50364                           ; BSR set to: 1
 50365                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 50366  01598A  0E00               	movlw	0
 50367  01598C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50368  01598E  0E74               	movlw	116
 50369  015990  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50370  015992  0E00               	movlw	0
 50371  015994  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50372  015996  0E00               	movlw	0
 50373  015998  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50374  01599A  0E00               	movlw	0
 50375  01599C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50376  01599E  0E00               	movlw	0
 50377  0159A0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50378  0159A2  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50379                           
 50380                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 50381  0159A6  9265               	bcf	3941,1,c	;volatile
 50382                           
 50383                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 50384  0159A8  010F               	movlb	15	; () banked
 50385  0159AA  9536               	bcf	54,2,b	;volatile
 50386                           
 50387                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 50388  0159AC  D001               	goto	i2l315
 50389  0159AE                     
 50390                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 50391                           
 50392                           ; BSR set to: 15
 50393  0159AE  9462               	bcf	3938,2,c	;volatile
 50394  0159B0                     i2l315:
 50395  0159B0  B462               	btfsc	3938,2,c	;volatile
 50396  0159B2  D7FD               	goto	i2l316
 50397                           
 50398                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 50399  0159B4  0E00               	movlw	0
 50400  0159B6  0101               	movlb	1	; () banked
 50401  0159B8  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50402                           
 50403                           ; BSR set to: 1
 50404  0159BA  0012               	return		;funcret
 50405  0159BC                     __end_of_USBWakeFromSuspend:
 50406                           	opt stack 0
 50407                           tosu	equ	0xFFF
 50408                           tosh	equ	0xFFE
 50409                           tosl	equ	0xFFD
 50410                           pclatu	equ	0xFFB
 50411                           pclath	equ	0xFFA
 50412                           tblptru	equ	0xFF8
 50413                           tblptrh	equ	0xFF7
 50414                           tblptrl	equ	0xFF6
 50415                           tablat	equ	0xFF5
 50416                           prodh	equ	0xFF4
 50417                           prodl	equ	0xFF3
 50418                           intcon	equ	0xFF2
 50419                           indf0	equ	0xFEF
 50420                           postinc0	equ	0xFEE
 50421                           fsr0h	equ	0xFEA
 50422                           fsr0l	equ	0xFE9
 50423                           wreg	equ	0xFE8
 50424                           indf1	equ	0xFE7
 50425                           postinc1	equ	0xFE6
 50426                           postdec1	equ	0xFE5
 50427                           plusw1	equ	0xFE3
 50428                           fsr1h	equ	0xFE2
 50429                           fsr1l	equ	0xFE1
 50430                           indf2	equ	0xFDF
 50431                           postinc2	equ	0xFDE
 50432                           postdec2	equ	0xFDD
 50433                           plusw2	equ	0xFDB
 50434                           fsr2h	equ	0xFDA
 50435                           fsr2l	equ	0xFD9
 50436                           status	equ	0xFD8
 50437                           
 50438 ;; *************** function _USBSuspend *****************
 50439 ;; Defined at:
 50440 ;;		line 2247 in file "usb_device.c"
 50441 ;; Parameters:    Size  Location     Type
 50442 ;;		None
 50443 ;; Auto vars:     Size  Location     Type
 50444 ;;		None
 50445 ;; Return value:  Size  Location     Type
 50446 ;;                  1    wreg      void 
 50447 ;; Registers used:
 50448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50449 ;; Tracked objects:
 50450 ;;		On entry : 0/0
 50451 ;;		On exit  : 0/0
 50452 ;;		Unchanged: 0/0
 50453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50458 ;;Total ram usage:        0 bytes
 50459 ;; Hardware stack levels used:    1
 50460 ;; Hardware stack levels required when called:    4
 50461 ;; This function calls:
 50462 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50463 ;; This function is called by:
 50464 ;;		_USBDeviceTasks
 50465 ;; This function uses a non-reentrant model
 50466 ;;
 50467                           
 50468                           	psect	text210
 50469  015B84                     __ptext210:
 50470                           	opt stack 0
 50471  015B84                     _USBSuspend:
 50472                           	opt stack 12
 50473                           
 50474                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 50475                           
 50476                           ; BSR set to: 1
 50477                           ;incstack = 0
 50478  015B84  010F               	movlb	15	; () banked
 50479  015B86  8536               	bsf	54,2,b	;volatile
 50480                           
 50481                           ; BSR set to: 15
 50482                           ;usb_device.c: 2273: (UIR &= 0xEF);
 50483  015B88  9862               	bcf	3938,4,c	;volatile
 50484                           
 50485                           ; BSR set to: 15
 50486                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 50487  015B8A  8265               	bsf	3941,1,c	;volatile
 50488                           
 50489                           ; BSR set to: 15
 50490                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 50491  015B8C  0E01               	movlw	1
 50492  015B8E  0101               	movlb	1	; () banked
 50493  015B90  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 50494                           
 50495                           ; BSR set to: 1
 50496                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 50497  015B92  0E00               	movlw	0
 50498  015B94  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50499                           
 50500                           ; BSR set to: 1
 50501                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 50502  015B96  0E00               	movlw	0
 50503  015B98  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50504  015B9A  0E75               	movlw	117
 50505  015B9C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50506  015B9E  0E00               	movlw	0
 50507  015BA0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50508  015BA2  0E00               	movlw	0
 50509  015BA4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50510  015BA6  0E00               	movlw	0
 50511  015BA8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50512  015BAA  0E00               	movlw	0
 50513  015BAC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50514  015BAE  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50515  015BB2  0012               	return		;funcret
 50516  015BB4                     __end_of_USBSuspend:
 50517                           	opt stack 0
 50518                           tosu	equ	0xFFF
 50519                           tosh	equ	0xFFE
 50520                           tosl	equ	0xFFD
 50521                           pclatu	equ	0xFFB
 50522                           pclath	equ	0xFFA
 50523                           tblptru	equ	0xFF8
 50524                           tblptrh	equ	0xFF7
 50525                           tblptrl	equ	0xFF6
 50526                           tablat	equ	0xFF5
 50527                           prodh	equ	0xFF4
 50528                           prodl	equ	0xFF3
 50529                           intcon	equ	0xFF2
 50530                           indf0	equ	0xFEF
 50531                           postinc0	equ	0xFEE
 50532                           fsr0h	equ	0xFEA
 50533                           fsr0l	equ	0xFE9
 50534                           wreg	equ	0xFE8
 50535                           indf1	equ	0xFE7
 50536                           postinc1	equ	0xFE6
 50537                           postdec1	equ	0xFE5
 50538                           plusw1	equ	0xFE3
 50539                           fsr1h	equ	0xFE2
 50540                           fsr1l	equ	0xFE1
 50541                           indf2	equ	0xFDF
 50542                           postinc2	equ	0xFDE
 50543                           postdec2	equ	0xFDD
 50544                           plusw2	equ	0xFDB
 50545                           fsr2h	equ	0xFDA
 50546                           fsr2l	equ	0xFD9
 50547                           status	equ	0xFD8
 50548                           
 50549 ;; *************** function _USBStallHandler *****************
 50550 ;; Defined at:
 50551 ;;		line 2204 in file "usb_device.c"
 50552 ;; Parameters:    Size  Location     Type
 50553 ;;		None
 50554 ;; Auto vars:     Size  Location     Type
 50555 ;;		None
 50556 ;; Return value:  Size  Location     Type
 50557 ;;                  1    wreg      void 
 50558 ;; Registers used:
 50559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50560 ;; Tracked objects:
 50561 ;;		On entry : 0/0
 50562 ;;		On exit  : 0/0
 50563 ;;		Unchanged: 0/0
 50564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50569 ;;Total ram usage:        1 bytes
 50570 ;; Hardware stack levels used:    1
 50571 ;; This function calls:
 50572 ;;		Nothing
 50573 ;; This function is called by:
 50574 ;;		_USBDeviceTasks
 50575 ;; This function uses a non-reentrant model
 50576 ;;
 50577                           
 50578                           	psect	text211
 50579  015726                     __ptext211:
 50580                           	opt stack 0
 50581  015726                     _USBStallHandler:
 50582                           	opt stack 16
 50583                           
 50584                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 50585                           
 50586                           ;incstack = 0
 50587  015726  010F               	movlb	15	; () banked
 50588  015728  A126               	btfss	38,0,b	;volatile
 50589  01572A  D01D               	goto	i2l307
 50590                           
 50591                           ; BSR set to: 15
 50592                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 50593  01572C  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50594  015730  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50595  015734  0E80               	movlw	128
 50596  015736  18DE               	xorwf	postinc2,w,c
 50597  015738  A4D8               	btfss	status,2,c
 50598  01573A  D014               	goto	i2l308
 50599                           
 50600                           ; BSR set to: 15
 50601  01573C  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 50602  015740  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50603  015744  0E84               	movlw	132
 50604  015746  18DE               	xorwf	postinc2,w,c
 50605  015748  A4D8               	btfss	status,2,c
 50606  01574A  D00C               	goto	i2l308
 50607                           
 50608                           ; BSR set to: 15
 50609                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 50610  01574C  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50611  015750  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50612  015754  0E0C               	movlw	12
 50613  015756  6EDF               	movwf	indf2,c
 50614                           
 50615                           ; BSR set to: 15
 50616                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 50617  015758  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50618  01575C  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50619  015760  0E00               	movlw	0
 50620  015762  8EDB               	bsf	plusw2,7,c
 50621  015764                     i2l308:
 50622                           
 50623                           ; BSR set to: 15
 50624                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 50625                           
 50626                           ; BSR set to: 15
 50627  015764  9126               	bcf	38,0,b	;volatile
 50628  015766                     i2l307:
 50629                           
 50630                           ; BSR set to: 15
 50631                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 50632  015766  9A62               	bcf	3938,5,c	;volatile
 50633                           
 50634                           ; BSR set to: 15
 50635  015768  0012               	return		;funcret
 50636  01576A                     __end_of_USBStallHandler:
 50637                           	opt stack 0
 50638                           tosu	equ	0xFFF
 50639                           tosh	equ	0xFFE
 50640                           tosl	equ	0xFFD
 50641                           pclatu	equ	0xFFB
 50642                           pclath	equ	0xFFA
 50643                           tblptru	equ	0xFF8
 50644                           tblptrh	equ	0xFF7
 50645                           tblptrl	equ	0xFF6
 50646                           tablat	equ	0xFF5
 50647                           prodh	equ	0xFF4
 50648                           prodl	equ	0xFF3
 50649                           intcon	equ	0xFF2
 50650                           indf0	equ	0xFEF
 50651                           postinc0	equ	0xFEE
 50652                           fsr0h	equ	0xFEA
 50653                           fsr0l	equ	0xFE9
 50654                           wreg	equ	0xFE8
 50655                           indf1	equ	0xFE7
 50656                           postinc1	equ	0xFE6
 50657                           postdec1	equ	0xFE5
 50658                           plusw1	equ	0xFE3
 50659                           fsr1h	equ	0xFE2
 50660                           fsr1l	equ	0xFE1
 50661                           indf2	equ	0xFDF
 50662                           postinc2	equ	0xFDE
 50663                           postdec2	equ	0xFDD
 50664                           plusw2	equ	0xFDB
 50665                           fsr2h	equ	0xFDA
 50666                           fsr2l	equ	0xFD9
 50667                           status	equ	0xFD8
 50668                           
 50669 ;; *************** function _USBIncrement1msInternalTimers *****************
 50670 ;; Defined at:
 50671 ;;		line 3027 in file "usb_device.c"
 50672 ;; Parameters:    Size  Location     Type
 50673 ;;		None
 50674 ;; Auto vars:     Size  Location     Type
 50675 ;;		None
 50676 ;; Return value:  Size  Location     Type
 50677 ;;                  1    wreg      void 
 50678 ;; Registers used:
 50679 ;;		wreg, status,2, status,0
 50680 ;; Tracked objects:
 50681 ;;		On entry : 0/0
 50682 ;;		On exit  : 0/0
 50683 ;;		Unchanged: 0/0
 50684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50689 ;;Total ram usage:        0 bytes
 50690 ;; Hardware stack levels used:    1
 50691 ;; This function calls:
 50692 ;;		Nothing
 50693 ;; This function is called by:
 50694 ;;		_USBDeviceTasks
 50695 ;; This function uses a non-reentrant model
 50696 ;;
 50697                           
 50698                           	psect	text212
 50699  015F46                     __ptext212:
 50700                           	opt stack 0
 50701  015F46                     _USBIncrement1msInternalTimers:
 50702                           	opt stack 16
 50703                           
 50704                           ;usb_device.c: 3035: USB1msTickCount++;
 50705                           
 50706                           ; BSR set to: 15
 50707                           ;incstack = 0
 50708  015F46  0E01               	movlw	1
 50709  015F48  0101               	movlb	1	; () banked
 50710  015F4A  2727               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 50711  015F4C  0E00               	movlw	0
 50712  015F4E  2328               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 50713  015F50  2329               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 50714  015F52  232A               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 50715                           
 50716                           ; BSR set to: 1
 50717                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 50718  015F54  5162               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 50719  015F56  A4D8               	btfss	status,2,c
 50720  015F58  0012               	return	
 50721                           
 50722                           ; BSR set to: 1
 50723                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 50724  015F5A  2B59               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 50725                           
 50726                           ; BSR set to: 1
 50727                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 50728  015F5C  5159               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 50729  015F5E  A4D8               	btfss	status,2,c
 50730  015F60  0012               	return	
 50731                           
 50732                           ; BSR set to: 1
 50733                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 50734  015F62  6959               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50735                           
 50736                           ; BSR set to: 1
 50737  015F64  0012               	return	
 50738  015F66                     __end_of_USBIncrement1msInternalTimers:
 50739                           	opt stack 0
 50740                           tosu	equ	0xFFF
 50741                           tosh	equ	0xFFE
 50742                           tosl	equ	0xFFD
 50743                           pclatu	equ	0xFFB
 50744                           pclath	equ	0xFFA
 50745                           tblptru	equ	0xFF8
 50746                           tblptrh	equ	0xFF7
 50747                           tblptrl	equ	0xFF6
 50748                           tablat	equ	0xFF5
 50749                           prodh	equ	0xFF4
 50750                           prodl	equ	0xFF3
 50751                           intcon	equ	0xFF2
 50752                           indf0	equ	0xFEF
 50753                           postinc0	equ	0xFEE
 50754                           fsr0h	equ	0xFEA
 50755                           fsr0l	equ	0xFE9
 50756                           wreg	equ	0xFE8
 50757                           indf1	equ	0xFE7
 50758                           postinc1	equ	0xFE6
 50759                           postdec1	equ	0xFE5
 50760                           plusw1	equ	0xFE3
 50761                           fsr1h	equ	0xFE2
 50762                           fsr1l	equ	0xFE1
 50763                           indf2	equ	0xFDF
 50764                           postinc2	equ	0xFDE
 50765                           postdec2	equ	0xFDD
 50766                           plusw2	equ	0xFDB
 50767                           fsr2h	equ	0xFDA
 50768                           fsr2l	equ	0xFD9
 50769                           status	equ	0xFD8
 50770                           
 50771 ;; *************** function _USBCtrlEPService *****************
 50772 ;; Defined at:
 50773 ;;		line 2374 in file "usb_device.c"
 50774 ;; Parameters:    Size  Location     Type
 50775 ;;		None
 50776 ;; Auto vars:     Size  Location     Type
 50777 ;;		None
 50778 ;; Return value:  Size  Location     Type
 50779 ;;                  1    wreg      void 
 50780 ;; Registers used:
 50781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50782 ;; Tracked objects:
 50783 ;;		On entry : 0/0
 50784 ;;		On exit  : 0/0
 50785 ;;		Unchanged: 0/0
 50786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50791 ;;Total ram usage:        1 bytes
 50792 ;; Hardware stack levels used:    1
 50793 ;; Hardware stack levels required when called:    7
 50794 ;; This function calls:
 50795 ;;		_USBCtrlTrfInHandler
 50796 ;;		_USBCtrlTrfOutHandler
 50797 ;;		_USBCtrlTrfSetupHandler
 50798 ;;		i2_memcpy
 50799 ;; This function is called by:
 50800 ;;		_USBDeviceTasks
 50801 ;; This function uses a non-reentrant model
 50802 ;;
 50803                           
 50804                           	psect	text213
 50805  013AAA                     __ptext213:
 50806                           	opt stack 0
 50807  013AAA                     _USBCtrlEPService:
 50808                           	opt stack 9
 50809                           
 50810                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 50811                           
 50812                           ; BSR set to: 1
 50813                           ;incstack = 0
 50814  013AAA  0E2D               	movlw	45
 50815  013AAC  0101               	movlb	1	; () banked
 50816  013AAE  6F5F               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 50817                           
 50818                           ; BSR set to: 1
 50819                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 50820  013AB0  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50821  013AB4  0EFD               	movlw	253
 50822  013AB6  161E               	andwf	??_USBCtrlEPService,f,c
 50823  013AB8  A4D8               	btfss	status,2,c
 50824  013ABA  D03B               	goto	i2l321
 50825                           
 50826                           ; BSR set to: 1
 50827                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 50828  013ABC  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50829  013AC0  90D8               	bcf	status,0,c
 50830  013AC2  321E               	rrcf	??_USBCtrlEPService,f,c
 50831  013AC4  0E3F               	movlw	63
 50832  013AC6  161E               	andwf	??_USBCtrlEPService,f,c
 50833  013AC8  501E               	movf	??_USBCtrlEPService,w,c
 50834  013ACA  0D04               	mullw	4
 50835  013ACC  0E00               	movlw	0
 50836  013ACE  24F3               	addwf	prodl,w,c
 50837  013AD0  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 50838  013AD2  0E0D               	movlw	13
 50839  013AD4  20F4               	addwfc	prodh,w,c
 50840  013AD6  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 50841                           
 50842                           ; BSR set to: 1
 50843                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50844  013AD8  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50845  013ADC  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50846                           
 50847                           ; BSR set to: 1
 50848                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 50849  013AE0  0E04               	movlw	4
 50850  013AE2  1859               	xorwf	_pBDTEntryEP0OutNext,w,c
 50851  013AE4  6E59               	movwf	_pBDTEntryEP0OutNext,c
 50852  013AE6  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50853  013AE8  6E5A               	movwf	_pBDTEntryEP0OutNext+1,c
 50854                           
 50855                           ; BSR set to: 1
 50856                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 50857  013AEA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50858  013AEE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50859  013AF2  30DF               	rrcf	indf2,w,c
 50860  013AF4  32E8               	rrcf	wreg,f,c
 50861  013AF6  0B0F               	andlw	15
 50862  013AF8  0A0D               	xorlw	13
 50863  013AFA  A4D8               	btfss	status,2,c
 50864  013AFC  D017               	goto	i2l322
 50865                           
 50866                           ; BSR set to: 1
 50867                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 50868  013AFE  0E30               	movlw	48
 50869  013B00  6E01               	movwf	i2memcpy@d1,c
 50870  013B02  0E0D               	movlw	13
 50871  013B04  6E02               	movwf	i2memcpy@d1+1,c
 50872  013B06  EE20 F002          	lfsr	2,2
 50873  013B0A  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 50874  013B0C  26D9               	addwf	fsr2l,f,c
 50875  013B0E  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50876  013B10  22DA               	addwfc	fsr2h,f,c
 50877  013B12  CFDE F003          	movff	postinc2,i2memcpy@s1
 50878  013B16  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 50879  013B1A  0E00               	movlw	0
 50880  013B1C  6E06               	movwf	i2memcpy@n+1,c
 50881  013B1E  0E08               	movlw	8
 50882  013B20  6E05               	movwf	i2memcpy@n,c
 50883  013B22  EC29  F0A6         	call	i2_memcpy	;wreg free
 50884                           
 50885                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 50886  013B26  EC36  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 50887                           
 50888                           ;usb_device.c: 2411: }
 50889  013B2A  0012               	return	
 50890  013B2C                     i2l322:
 50891                           
 50892                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 50893  013B2C  EC99  F0A5         	call	_USBCtrlTrfOutHandler	;wreg free
 50894                           
 50895                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 50896  013B30  0012               	return	
 50897  013B32                     i2l321:
 50898                           
 50899                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 50900  013B32  505E               	movf	_USTATcopy,w,c	;volatile
 50901  013B34  0BFD               	andlw	253
 50902  013B36  0A04               	xorlw	4
 50903  013B38  A4D8               	btfss	status,2,c
 50904  013B3A  0012               	return	
 50905                           
 50906                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 50907  013B3C  ECED  F096         	call	_USBCtrlTrfInHandler	;wreg free
 50908  013B40  0012               	return	
 50909  013B42                     __end_of_USBCtrlEPService:
 50910                           	opt stack 0
 50911                           tosu	equ	0xFFF
 50912                           tosh	equ	0xFFE
 50913                           tosl	equ	0xFFD
 50914                           pclatu	equ	0xFFB
 50915                           pclath	equ	0xFFA
 50916                           tblptru	equ	0xFF8
 50917                           tblptrh	equ	0xFF7
 50918                           tblptrl	equ	0xFF6
 50919                           tablat	equ	0xFF5
 50920                           prodh	equ	0xFF4
 50921                           prodl	equ	0xFF3
 50922                           intcon	equ	0xFF2
 50923                           indf0	equ	0xFEF
 50924                           postinc0	equ	0xFEE
 50925                           fsr0h	equ	0xFEA
 50926                           fsr0l	equ	0xFE9
 50927                           wreg	equ	0xFE8
 50928                           indf1	equ	0xFE7
 50929                           postinc1	equ	0xFE6
 50930                           postdec1	equ	0xFE5
 50931                           plusw1	equ	0xFE3
 50932                           fsr1h	equ	0xFE2
 50933                           fsr1l	equ	0xFE1
 50934                           indf2	equ	0xFDF
 50935                           postinc2	equ	0xFDE
 50936                           postdec2	equ	0xFDD
 50937                           plusw2	equ	0xFDB
 50938                           fsr2h	equ	0xFDA
 50939                           fsr2l	equ	0xFD9
 50940                           status	equ	0xFD8
 50941                           
 50942 ;; *************** function i2_memcpy *****************
 50943 ;; Defined at:
 50944 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 50945 ;; Parameters:    Size  Location     Type
 50946 ;;  d1              2    0[COMRAM] PTR void 
 50947 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 50948 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50949 ;;  s1              2    2[COMRAM] PTR const void 
 50950 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50951 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50952 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50953 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50954 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50955 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.divide_position(2), os.division(2), 
 50956 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), 
 50957 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 50958 ;;  n               2    4[COMRAM] unsigned int 
 50959 ;; Auto vars:     Size  Location     Type
 50960 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 50961 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50962 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50963 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50964 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50965 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50966 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.divide_position(2), os.division(2), 
 50967 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), 
 50968 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 50969 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 50970 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 50971 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50972 ;;  memcpy          1   10[COMRAM] unsigned char 
 50973 ;; Return value:  Size  Location     Type
 50974 ;;                  2    0[COMRAM] PTR void 
 50975 ;; Registers used:
 50976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 50977 ;; Tracked objects:
 50978 ;;		On entry : 0/0
 50979 ;;		On exit  : 0/0
 50980 ;;		Unchanged: 0/0
 50981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50982 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50983 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50985 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50986 ;;Total ram usage:       11 bytes
 50987 ;; Hardware stack levels used:    1
 50988 ;; This function calls:
 50989 ;;		Nothing
 50990 ;; This function is called by:
 50991 ;;		_USBCtrlEPService
 50992 ;;		_i2c_eeprom_save_position
 50993 ;; This function uses a non-reentrant model
 50994 ;;
 50995                           
 50996                           	psect	text214
 50997  014C52                     __ptext214:
 50998                           	opt stack 0
 50999  014C52                     i2_memcpy:
 51000                           	opt stack 15
 51001                           
 51002                           ;incstack = 0
 51003  014C52  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 51004  014C56  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 51005  014C5A  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 51006  014C5E  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 51007  014C62  D01C               	goto	i2l3822
 51008  014C64                     i2l17048:
 51009  014C64  C009  FFF6         	movff	i2memcpy@s,tblptrl
 51010  014C68  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 51011  014C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 51012  014C6E  6EF8               	movwf	tblptru,c
 51013  014C70  0E0E               	movlw	(high __ramtop+-1)
 51014  014C72  64F7               	cpfsgt	tblptrh,c
 51015  014C74  D003               	bra	i2u1627_47
 51016  014C76  0008               	tblrd		*
 51017  014C78  50F5               	movf	tablat,w,c
 51018  014C7A  D005               	bra	i2u1627_40
 51019  014C7C                     i2u1627_47:
 51020  014C7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 51021  014C80  CFF7 FFEA          	movff	tblptrh,fsr0h
 51022  014C84  50EF               	movf	indf0,w,c
 51023  014C86                     i2u1627_40:
 51024  014C86  6E0B               	movwf	i2memcpy@tmp,c
 51025  014C88  4A09               	infsnz	i2memcpy@s,f,c
 51026  014C8A  2A0A               	incf	i2memcpy@s+1,f,c
 51027  014C8C  C007  FFD9         	movff	i2memcpy@d,fsr2l
 51028  014C90  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 51029  014C94  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 51030  014C98  4A07               	infsnz	i2memcpy@d,f,c
 51031  014C9A  2A08               	incf	i2memcpy@d+1,f,c
 51032  014C9C                     i2l3822:
 51033  014C9C  0605               	decf	i2memcpy@n,f,c
 51034  014C9E  A0D8               	btfss	status,0,c
 51035  014CA0  0606               	decf	i2memcpy@n+1,f,c
 51036  014CA2  2805               	incf	i2memcpy@n,w,c
 51037  014CA4  E1DF               	bnz	i2l17048
 51038  014CA6  2806               	incf	i2memcpy@n+1,w,c
 51039  014CA8  B4D8               	btfsc	status,2,c
 51040  014CAA  0012               	return	
 51041  014CAC  D7DB               	goto	i2l3823
 51042  014CAE                     __end_ofi2_memcpy:
 51043                           	opt stack 0
 51044                           tosu	equ	0xFFF
 51045                           tosh	equ	0xFFE
 51046                           tosl	equ	0xFFD
 51047                           pclatu	equ	0xFFB
 51048                           pclath	equ	0xFFA
 51049                           tblptru	equ	0xFF8
 51050                           tblptrh	equ	0xFF7
 51051                           tblptrl	equ	0xFF6
 51052                           tablat	equ	0xFF5
 51053                           prodh	equ	0xFF4
 51054                           prodl	equ	0xFF3
 51055                           intcon	equ	0xFF2
 51056                           indf0	equ	0xFEF
 51057                           postinc0	equ	0xFEE
 51058                           fsr0h	equ	0xFEA
 51059                           fsr0l	equ	0xFE9
 51060                           wreg	equ	0xFE8
 51061                           indf1	equ	0xFE7
 51062                           postinc1	equ	0xFE6
 51063                           postdec1	equ	0xFE5
 51064                           plusw1	equ	0xFE3
 51065                           fsr1h	equ	0xFE2
 51066                           fsr1l	equ	0xFE1
 51067                           indf2	equ	0xFDF
 51068                           postinc2	equ	0xFDE
 51069                           postdec2	equ	0xFDD
 51070                           plusw2	equ	0xFDB
 51071                           fsr2h	equ	0xFDA
 51072                           fsr2l	equ	0xFD9
 51073                           status	equ	0xFD8
 51074                           
 51075 ;; *************** function _USBCtrlTrfSetupHandler *****************
 51076 ;; Defined at:
 51077 ;;		line 2467 in file "usb_device.c"
 51078 ;; Parameters:    Size  Location     Type
 51079 ;;		None
 51080 ;; Auto vars:     Size  Location     Type
 51081 ;;		None
 51082 ;; Return value:  Size  Location     Type
 51083 ;;                  1    wreg      void 
 51084 ;; Registers used:
 51085 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51086 ;; Tracked objects:
 51087 ;;		On entry : 0/0
 51088 ;;		On exit  : 0/0
 51089 ;;		Unchanged: 0/0
 51090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51095 ;;Total ram usage:        0 bytes
 51096 ;; Hardware stack levels used:    1
 51097 ;; Hardware stack levels required when called:    6
 51098 ;; This function calls:
 51099 ;;		_USBCheckStdRequest
 51100 ;;		_USBCtrlEPServiceComplete
 51101 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51102 ;; This function is called by:
 51103 ;;		_USBCtrlEPService
 51104 ;; This function uses a non-reentrant model
 51105 ;;
 51106                           
 51107                           	psect	text215
 51108  013C6C                     __ptext215:
 51109                           	opt stack 0
 51110  013C6C                     _USBCtrlTrfSetupHandler:
 51111                           	opt stack 9
 51112                           
 51113                           ;usb_device.c: 2472: shortPacketStatus = 0;
 51114                           
 51115                           ;incstack = 0
 51116  013C6C  0E00               	movlw	0
 51117  013C6E  0101               	movlb	1	; () banked
 51118  013C70  6F64               	movwf	_shortPacketStatus& (0+255),b	;volatile
 51119                           
 51120                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 51121  013C72  0E00               	movlw	0
 51122  013C74  6F5E               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 51123                           
 51124                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 51125  013C76  0E00               	movlw	0
 51126  013C78  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 51127                           
 51128                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 51129  013C7A  0E00               	movlw	0
 51130  013C7C  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 51131                           
 51132                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 51133  013C7E  0E00               	movlw	0
 51134  013C80  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 51135                           
 51136                           ;usb_device.c: 2477: controlTransferState = 0;
 51137  013C82  0E00               	movlw	0
 51138  013C84  0100               	movlb	0	; () banked
 51139  013C86  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 51140                           
 51141                           ; BSR set to: 0
 51142                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 51143  013C88  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51144  013C8C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51145  013C90  0E7F               	movlw	127
 51146  013C92  16DF               	andwf	indf2,f,c
 51147                           
 51148                           ; BSR set to: 0
 51149                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 51150  013C94  0E04               	movlw	4
 51151  013C96  0101               	movlb	1	; () banked
 51152  013C98  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 51153  013C9A  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 51154  013C9C  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 51155  013C9E  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51156                           
 51157                           ; BSR set to: 1
 51158                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 51159  013CA0  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51160  013CA4  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51161  013CA8  0E7F               	movlw	127
 51162  013CAA  16DF               	andwf	indf2,f,c
 51163                           
 51164                           ; BSR set to: 1
 51165                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 51166  013CAC  0E04               	movlw	4
 51167  013CAE  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 51168  013CB0  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 51169  013CB2  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 51170  013CB4  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51171                           
 51172                           ; BSR set to: 1
 51173                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 51174  013CB6  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51175  013CBA  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51176  013CBE  0E7F               	movlw	127
 51177  013CC0  16DF               	andwf	indf2,f,c
 51178                           
 51179                           ; BSR set to: 1
 51180                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 51181  013CC2  0E00               	movlw	0
 51182  013CC4  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 51183                           
 51184                           ; BSR set to: 1
 51185                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 51186  013CC6  0E00               	movlw	0
 51187  013CC8  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 51188  013CCA  0E00               	movlw	0
 51189  013CCC  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 51190                           
 51191                           ; BSR set to: 1
 51192                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 51193  013CCE  0E00               	movlw	0
 51194  013CD0  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 51195                           
 51196                           ; BSR set to: 1
 51197                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 51198  013CD2  0E00               	movlw	0
 51199  013CD4  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 51200  013CD6  0E00               	movlw	0
 51201  013CD8  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 51202                           
 51203                           ; BSR set to: 1
 51204                           ;usb_device.c: 2502: USBCheckStdRequest();
 51205  013CDA  EC6E  F091         	call	_USBCheckStdRequest	;wreg free
 51206                           
 51207                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 51208  013CDE  0E00               	movlw	0
 51209  013CE0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51210  013CE2  0E03               	movlw	3
 51211  013CE4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51212  013CE6  0E00               	movlw	0
 51213  013CE8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51214  013CEA  0E00               	movlw	0
 51215  013CEC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51216  013CEE  0E00               	movlw	0
 51217  013CF0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51218  013CF2  0E00               	movlw	0
 51219  013CF4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51220  013CF6  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51221                           
 51222                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 51223  013CFA  EC43  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 51224  013CFE  0012               	return		;funcret
 51225  013D00                     __end_of_USBCtrlTrfSetupHandler:
 51226                           	opt stack 0
 51227                           tosu	equ	0xFFF
 51228                           tosh	equ	0xFFE
 51229                           tosl	equ	0xFFD
 51230                           pclatu	equ	0xFFB
 51231                           pclath	equ	0xFFA
 51232                           tblptru	equ	0xFF8
 51233                           tblptrh	equ	0xFF7
 51234                           tblptrl	equ	0xFF6
 51235                           tablat	equ	0xFF5
 51236                           prodh	equ	0xFF4
 51237                           prodl	equ	0xFF3
 51238                           intcon	equ	0xFF2
 51239                           indf0	equ	0xFEF
 51240                           postinc0	equ	0xFEE
 51241                           fsr0h	equ	0xFEA
 51242                           fsr0l	equ	0xFE9
 51243                           wreg	equ	0xFE8
 51244                           indf1	equ	0xFE7
 51245                           postinc1	equ	0xFE6
 51246                           postdec1	equ	0xFE5
 51247                           plusw1	equ	0xFE3
 51248                           fsr1h	equ	0xFE2
 51249                           fsr1l	equ	0xFE1
 51250                           indf2	equ	0xFDF
 51251                           postinc2	equ	0xFDE
 51252                           postdec2	equ	0xFDD
 51253                           plusw2	equ	0xFDB
 51254                           fsr2h	equ	0xFDA
 51255                           fsr2l	equ	0xFD9
 51256                           status	equ	0xFD8
 51257                           
 51258 ;; *************** function _USBCtrlEPServiceComplete *****************
 51259 ;; Defined at:
 51260 ;;		line 1618 in file "usb_device.c"
 51261 ;; Parameters:    Size  Location     Type
 51262 ;;		None
 51263 ;; Auto vars:     Size  Location     Type
 51264 ;;		None
 51265 ;; Return value:  Size  Location     Type
 51266 ;;                  1    wreg      void 
 51267 ;; Registers used:
 51268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 51269 ;; Tracked objects:
 51270 ;;		On entry : 0/0
 51271 ;;		On exit  : 0/0
 51272 ;;		Unchanged: 0/0
 51273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51278 ;;Total ram usage:        0 bytes
 51279 ;; Hardware stack levels used:    1
 51280 ;; Hardware stack levels required when called:    2
 51281 ;; This function calls:
 51282 ;;		_USBCtrlEPAllowDataStage
 51283 ;;		_USBCtrlEPAllowStatusStage
 51284 ;; This function is called by:
 51285 ;;		_USBCtrlTrfSetupHandler
 51286 ;; This function uses a non-reentrant model
 51287 ;;
 51288                           
 51289                           	psect	text216
 51290  011686                     __ptext216:
 51291                           	opt stack 0
 51292  011686                     _USBCtrlEPServiceComplete:
 51293                           	opt stack 12
 51294                           
 51295                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 51296                           
 51297                           ;incstack = 0
 51298  011686  9865               	bcf	3941,4,c	;volatile
 51299                           
 51300                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 51301  011688  0101               	movlb	1	; () banked
 51302  01168A  BF0C               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 51303  01168C  D03B               	goto	i2l231
 51304                           
 51305                           ; BSR set to: 1
 51306                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 51307  01168E  AF03               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 51308  011690  D00E               	goto	i2l232
 51309                           
 51310                           ; BSR set to: 1
 51311                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 51312  011692  0E02               	movlw	2
 51313  011694  0100               	movlb	0	; () banked
 51314  011696  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 51315                           
 51316                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 51317  011698  0101               	movlb	1	; () banked
 51318  01169A  515A               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 51319  01169C  B4D8               	btfsc	status,2,c
 51320                           
 51321                           ; BSR set to: 1
 51322                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 51323  01169E  ECD2  F09B         	call	_USBCtrlEPAllowDataStage	;wreg free
 51324                           
 51325                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 51326  0116A2  0E00               	movlw	0
 51327  0116A4  0101               	movlb	1	; () banked
 51328  0116A6  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51329                           
 51330                           ; BSR set to: 1
 51331                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 51332  0116A8  0E00               	movlw	0
 51333  0116AA  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51334                           
 51335                           ;usb_device.c: 1654: }
 51336  0116AC  0012               	return	
 51337  0116AE                     i2l232:
 51338                           
 51339                           ; BSR set to: 1
 51340                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 51341                           
 51342                           ; BSR set to: 1
 51343  0116AE  EE20 F001          	lfsr	2,1
 51344  0116B2  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51345  0116B4  26D9               	addwf	fsr2l,f,c
 51346  0116B6  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51347  0116B8  22DA               	addwfc	fsr2h,f,c
 51348  0116BA  0E08               	movlw	8
 51349  0116BC  6EDF               	movwf	indf2,c
 51350                           
 51351                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51352  0116BE  EE20 F002          	lfsr	2,2
 51353  0116C2  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51354  0116C4  26D9               	addwf	fsr2l,f,c
 51355  0116C6  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51356  0116C8  22DA               	addwfc	fsr2h,f,c
 51357  0116CA  0E30               	movlw	48
 51358  0116CC  6EDE               	movwf	postinc2,c
 51359  0116CE  0E0D               	movlw	13
 51360  0116D0  6EDD               	movwf	postdec2,c
 51361                           
 51362                           ; BSR set to: 1
 51363                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 51364  0116D2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51365  0116D6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51366  0116DA  0E0C               	movlw	12
 51367  0116DC  6EDF               	movwf	indf2,c
 51368                           
 51369                           ; BSR set to: 1
 51370                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51371  0116DE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51372  0116E2  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51373  0116E6  0E00               	movlw	0
 51374  0116E8  8EDB               	bsf	plusw2,7,c
 51375                           
 51376                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 51377  0116EA  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51378  0116EE  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51379  0116F2  0E04               	movlw	4
 51380  0116F4  6EDF               	movwf	indf2,c
 51381                           
 51382                           ; BSR set to: 1
 51383                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51384  0116F6  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51385  0116FA  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51386  0116FE  0E00               	movlw	0
 51387  011700  8EDB               	bsf	plusw2,7,c
 51388                           
 51389                           ; BSR set to: 1
 51390                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 51391  011702  0012               	return	
 51392  011704                     i2l231:
 51393                           
 51394                           ; BSR set to: 1
 51395                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 51396  011704  010D               	movlb	13	; () banked
 51397  011706  AF30               	btfss	48,7,b	;volatile
 51398  011708  D013               	goto	i2l236
 51399                           
 51400                           ; BSR set to: 13
 51401                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 51402  01170A  0E01               	movlw	1
 51403  01170C  0100               	movlb	0	; () banked
 51404  01170E  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 51405                           
 51406                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 51407  011710  0101               	movlb	1	; () banked
 51408  011712  515B               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 51409  011714  B4D8               	btfsc	status,2,c
 51410                           
 51411                           ; BSR set to: 1
 51412                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 51413  011716  ECD2  F09B         	call	_USBCtrlEPAllowDataStage	;wreg free
 51414                           
 51415                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 51416  01171A  0E00               	movlw	0
 51417  01171C  0101               	movlb	1	; () banked
 51418  01171E  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51419                           
 51420                           ; BSR set to: 1
 51421                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 51422  011720  0E00               	movlw	0
 51423  011722  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51424                           
 51425                           ; BSR set to: 1
 51426                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 51427  011724  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 51428  011726  A4D8               	btfss	status,2,c
 51429  011728  0012               	return	
 51430                           
 51431                           ; BSR set to: 1
 51432                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 51433  01172A  EC87  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51434                           
 51435                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 51436  01172E  0012               	return	
 51437  011730                     i2l236:
 51438                           
 51439                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 51440  011730  0E02               	movlw	2
 51441  011732  0100               	movlb	0	; () banked
 51442  011734  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 51443                           
 51444                           ; BSR set to: 0
 51445                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 51446  011736  EE20 F001          	lfsr	2,1
 51447  01173A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51448  01173C  26D9               	addwf	fsr2l,f,c
 51449  01173E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51450  011740  22DA               	addwfc	fsr2h,f,c
 51451  011742  0E08               	movlw	8
 51452  011744  6EDF               	movwf	indf2,c
 51453                           
 51454                           ; BSR set to: 0
 51455                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51456  011746  EE20 F002          	lfsr	2,2
 51457  01174A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51458  01174C  26D9               	addwf	fsr2l,f,c
 51459  01174E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51460  011750  22DA               	addwfc	fsr2h,f,c
 51461  011752  0E30               	movlw	48
 51462  011754  6EDE               	movwf	postinc2,c
 51463  011756  0E0D               	movlw	13
 51464  011758  6EDD               	movwf	postdec2,c
 51465                           
 51466                           ; BSR set to: 0
 51467                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 51468  01175A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51469  01175E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51470  011762  0E04               	movlw	4
 51471  011764  6EDF               	movwf	indf2,c
 51472                           
 51473                           ; BSR set to: 0
 51474                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51475  011766  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51476  01176A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51477  01176E  0E00               	movlw	0
 51478  011770  8EDB               	bsf	plusw2,7,c
 51479                           
 51480                           ; BSR set to: 0
 51481                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 51482  011772  0E00               	movlw	0
 51483  011774  0101               	movlb	1	; () banked
 51484  011776  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51485                           
 51486                           ; BSR set to: 1
 51487                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 51488  011778  0E00               	movlw	0
 51489  01177A  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51490                           
 51491                           ; BSR set to: 1
 51492                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 51493  01177C  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 51494  01177E  A4D8               	btfss	status,2,c
 51495  011780  0012               	return	
 51496                           
 51497                           ; BSR set to: 1
 51498                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 51499  011782  EC87  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51500  011786  0012               	return	
 51501  011788                     __end_of_USBCtrlEPServiceComplete:
 51502                           	opt stack 0
 51503                           tosu	equ	0xFFF
 51504                           tosh	equ	0xFFE
 51505                           tosl	equ	0xFFD
 51506                           pclatu	equ	0xFFB
 51507                           pclath	equ	0xFFA
 51508                           tblptru	equ	0xFF8
 51509                           tblptrh	equ	0xFF7
 51510                           tblptrl	equ	0xFF6
 51511                           tablat	equ	0xFF5
 51512                           prodh	equ	0xFF4
 51513                           prodl	equ	0xFF3
 51514                           intcon	equ	0xFF2
 51515                           indf0	equ	0xFEF
 51516                           postinc0	equ	0xFEE
 51517                           fsr0h	equ	0xFEA
 51518                           fsr0l	equ	0xFE9
 51519                           wreg	equ	0xFE8
 51520                           indf1	equ	0xFE7
 51521                           postinc1	equ	0xFE6
 51522                           postdec1	equ	0xFE5
 51523                           plusw1	equ	0xFE3
 51524                           fsr1h	equ	0xFE2
 51525                           fsr1l	equ	0xFE1
 51526                           indf2	equ	0xFDF
 51527                           postinc2	equ	0xFDE
 51528                           postdec2	equ	0xFDD
 51529                           plusw2	equ	0xFDB
 51530                           fsr2h	equ	0xFDA
 51531                           fsr2l	equ	0xFD9
 51532                           status	equ	0xFD8
 51533                           
 51534 ;; *************** function _USBCtrlEPAllowDataStage *****************
 51535 ;; Defined at:
 51536 ;;		line 1490 in file "usb_device.c"
 51537 ;; Parameters:    Size  Location     Type
 51538 ;;		None
 51539 ;; Auto vars:     Size  Location     Type
 51540 ;;		None
 51541 ;; Return value:  Size  Location     Type
 51542 ;;                  1    wreg      void 
 51543 ;; Registers used:
 51544 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 51545 ;; Tracked objects:
 51546 ;;		On entry : 0/0
 51547 ;;		On exit  : 0/0
 51548 ;;		Unchanged: 0/0
 51549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51554 ;;Total ram usage:        0 bytes
 51555 ;; Hardware stack levels used:    1
 51556 ;; Hardware stack levels required when called:    1
 51557 ;; This function calls:
 51558 ;;		_USBCtrlTrfTxService
 51559 ;; This function is called by:
 51560 ;;		_USBCtrlEPServiceComplete
 51561 ;; This function uses a non-reentrant model
 51562 ;;
 51563                           
 51564                           	psect	text217
 51565  0137A4                     __ptext217:
 51566                           	opt stack 0
 51567  0137A4                     _USBCtrlEPAllowDataStage:
 51568                           	opt stack 12
 51569                           
 51570                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 51571                           
 51572                           ;incstack = 0
 51573  0137A4  0E00               	movlw	0
 51574  0137A6  0101               	movlb	1	; () banked
 51575  0137A8  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 51576                           
 51577                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 51578  0137AA  0E00               	movlw	0
 51579  0137AC  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 51580                           
 51581                           ; BSR set to: 1
 51582                           ;usb_device.c: 1495: if(controlTransferState == 2)
 51583  0137AE  0E02               	movlw	2
 51584  0137B0  0100               	movlb	0	; () banked
 51585  0137B2  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 51586  0137B4  A4D8               	btfss	status,2,c
 51587  0137B6  D01F               	goto	i2l220
 51588                           
 51589                           ; BSR set to: 0
 51590                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 51591  0137B8  EE20 F001          	lfsr	2,1
 51592  0137BC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51593  0137BE  26D9               	addwf	fsr2l,f,c
 51594  0137C0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51595  0137C2  22DA               	addwfc	fsr2h,f,c
 51596  0137C4  0E08               	movlw	8
 51597  0137C6  6EDF               	movwf	indf2,c
 51598                           
 51599                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 51600  0137C8  EE20 F002          	lfsr	2,2
 51601  0137CC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51602  0137CE  26D9               	addwf	fsr2l,f,c
 51603  0137D0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51604  0137D2  22DA               	addwfc	fsr2h,f,c
 51605  0137D4  0E38               	movlw	56
 51606  0137D6  6EDE               	movwf	postinc2,c
 51607  0137D8  0E0D               	movlw	13
 51608  0137DA  6EDD               	movwf	postdec2,c
 51609                           
 51610                           ; BSR set to: 0
 51611                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 51612  0137DC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51613  0137E0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51614  0137E4  0E48               	movlw	72
 51615  0137E6  6EDF               	movwf	indf2,c
 51616                           
 51617                           ; BSR set to: 0
 51618                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51619  0137E8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51620  0137EC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51621  0137F0  0E00               	movlw	0
 51622  0137F2  8EDB               	bsf	plusw2,7,c
 51623                           
 51624                           ;usb_device.c: 1502: }
 51625  0137F4  0012               	return	
 51626  0137F6                     i2l220:
 51627                           
 51628                           ; BSR set to: 0
 51629                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 51630                           
 51631                           ; BSR set to: 0
 51632  0137F6  0101               	movlb	1	; () banked
 51633  0137F8  510D               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 51634  0137FA  010D               	movlb	13	; () banked
 51635  0137FC  5D36               	subwf	54,w,b	;volatile
 51636  0137FE  0101               	movlb	1	; () banked
 51637  013800  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 51638  013802  010D               	movlb	13	; () banked
 51639  013804  5937               	subwfb	55,w,b	;volatile
 51640  013806  B0D8               	btfsc	status,0,c
 51641  013808  D004               	goto	i2l222
 51642                           
 51643                           ; BSR set to: 13
 51644                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 51645  01380A  CD36 F10D          	movff	3382,_inPipes+4	;volatile
 51646  01380E  CD37 F10E          	movff	3383,_inPipes+5	;volatile
 51647  013812                     i2l222:
 51648                           
 51649                           ; BSR set to: 13
 51650                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 51651                           
 51652                           ; BSR set to: 13
 51653  013812  EC51  F095         	call	_USBCtrlTrfTxService	;wreg free
 51654                           
 51655                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 51656  013816  0101               	movlb	1	; () banked
 51657  013818  EE20 F002          	lfsr	2,2
 51658  01381C  510F               	movf	_pBDTEntryIn& (0+255),w,b
 51659  01381E  26D9               	addwf	fsr2l,f,c
 51660  013820  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 51661  013822  22DA               	addwfc	fsr2h,f,c
 51662  013824  0E38               	movlw	56
 51663  013826  6EDE               	movwf	postinc2,c
 51664  013828  0E0D               	movlw	13
 51665  01382A  6EDD               	movwf	postdec2,c
 51666                           
 51667                           ; BSR set to: 1
 51668                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 51669  01382C  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51670  013830  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51671  013834  0E48               	movlw	72
 51672  013836  6EDF               	movwf	indf2,c
 51673                           
 51674                           ; BSR set to: 1
 51675                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51676  013838  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51677  01383C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51678  013840  0E00               	movlw	0
 51679  013842  8EDB               	bsf	plusw2,7,c
 51680  013844  0012               	return	
 51681  013846                     __end_of_USBCtrlEPAllowDataStage:
 51682                           	opt stack 0
 51683                           tosu	equ	0xFFF
 51684                           tosh	equ	0xFFE
 51685                           tosl	equ	0xFFD
 51686                           pclatu	equ	0xFFB
 51687                           pclath	equ	0xFFA
 51688                           tblptru	equ	0xFF8
 51689                           tblptrh	equ	0xFF7
 51690                           tblptrl	equ	0xFF6
 51691                           tablat	equ	0xFF5
 51692                           prodh	equ	0xFF4
 51693                           prodl	equ	0xFF3
 51694                           intcon	equ	0xFF2
 51695                           indf0	equ	0xFEF
 51696                           postinc0	equ	0xFEE
 51697                           fsr0h	equ	0xFEA
 51698                           fsr0l	equ	0xFE9
 51699                           wreg	equ	0xFE8
 51700                           indf1	equ	0xFE7
 51701                           postinc1	equ	0xFE6
 51702                           postdec1	equ	0xFE5
 51703                           plusw1	equ	0xFE3
 51704                           fsr1h	equ	0xFE2
 51705                           fsr1l	equ	0xFE1
 51706                           indf2	equ	0xFDF
 51707                           postinc2	equ	0xFDE
 51708                           postdec2	equ	0xFDD
 51709                           plusw2	equ	0xFDB
 51710                           fsr2h	equ	0xFDA
 51711                           fsr2l	equ	0xFD9
 51712                           status	equ	0xFD8
 51713                           
 51714 ;; *************** function _USBCheckStdRequest *****************
 51715 ;; Defined at:
 51716 ;;		line 2688 in file "usb_device.c"
 51717 ;; Parameters:    Size  Location     Type
 51718 ;;		None
 51719 ;; Auto vars:     Size  Location     Type
 51720 ;;		None
 51721 ;; Return value:  Size  Location     Type
 51722 ;;                  1    wreg      void 
 51723 ;; Registers used:
 51724 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51725 ;; Tracked objects:
 51726 ;;		On entry : 0/0
 51727 ;;		On exit  : 0/0
 51728 ;;		Unchanged: 0/0
 51729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51734 ;;Total ram usage:        0 bytes
 51735 ;; Hardware stack levels used:    1
 51736 ;; Hardware stack levels required when called:    5
 51737 ;; This function calls:
 51738 ;;		_USBStdFeatureReqHandler
 51739 ;;		_USBStdGetDscHandler
 51740 ;;		_USBStdGetStatusHandler
 51741 ;;		_USBStdSetCfgHandler
 51742 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51743 ;; This function is called by:
 51744 ;;		_USBCtrlTrfSetupHandler
 51745 ;; This function uses a non-reentrant model
 51746 ;;
 51747                           
 51748                           	psect	text218
 51749  0122DC                     __ptext218:
 51750                           	opt stack 0
 51751  0122DC                     _USBCheckStdRequest:
 51752                           	opt stack 9
 51753                           
 51754                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 51755                           
 51756                           ;incstack = 0
 51757  0122DC  010D               	movlb	13	; () banked
 51758  0122DE  3930               	swapf	48,w,b	;volatile
 51759  0122E0  32E8               	rrcf	wreg,f,c
 51760  0122E2  0B03               	andlw	3
 51761  0122E4  0900               	iorlw	0
 51762  0122E6  A4D8               	btfss	status,2,c
 51763  0122E8  0012               	return	
 51764  0122EA  D047               	goto	i2l355
 51765  0122EC                     i2l356:
 51766                           
 51767                           ; BSR set to: 13
 51768                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 51769  0122EC  0101               	movlb	1	; () banked
 51770  0122EE  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51771                           
 51772                           ; BSR set to: 1
 51773                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 51774  0122F0  0E08               	movlw	8
 51775  0122F2  6E5D               	movwf	_USBDeviceState,c	;volatile
 51776                           
 51777                           ;usb_device.c: 2698: break;
 51778  0122F4  0012               	return	
 51779  0122F6                     
 51780                           ;usb_device.c: 2700: USBStdGetDscHandler();
 51781                           
 51782                           ; BSR set to: 1
 51783  0122F6  ECE4  F082         	call	_USBStdGetDscHandler	;wreg free
 51784                           
 51785                           ;usb_device.c: 2701: break;
 51786  0122FA  0012               	return	
 51787  0122FC                     
 51788                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 51789  0122FC  ECC0  F092         	call	_USBStdSetCfgHandler	;wreg free
 51790                           
 51791                           ;usb_device.c: 2704: break;
 51792  012300  0012               	return	
 51793  012302                     
 51794                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 51795  012302  0EC3               	movlw	low _USBActiveConfiguration
 51796  012304  0101               	movlb	1	; () banked
 51797  012306  6F09               	movwf	_inPipes& (0+255),b	;volatile
 51798  012308  0E01               	movlw	high _USBActiveConfiguration
 51799  01230A  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 51800                           
 51801                           ; BSR set to: 1
 51802                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51803  01230C  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 51804                           
 51805                           ; BSR set to: 1
 51806                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 51807  01230E  0E01               	movlw	1
 51808  012310  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 51809                           
 51810                           ; BSR set to: 1
 51811                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 51812  012312  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51813                           
 51814                           ;usb_device.c: 2710: break;
 51815  012314  0012               	return	
 51816  012316                     
 51817                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 51818                           
 51819                           ; BSR set to: 1
 51820  012316  ECD6  F09A         	call	_USBStdGetStatusHandler	;wreg free
 51821                           
 51822                           ;usb_device.c: 2713: break;
 51823  01231A  0012               	return	
 51824  01231C                     
 51825                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 51826  01231C  EC60  F06C         	call	_USBStdFeatureReqHandler	;wreg free
 51827                           
 51828                           ;usb_device.c: 2717: break;
 51829  012320  0012               	return	
 51830  012322                     
 51831                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 51832  012322  010D               	movlb	13	; () banked
 51833  012324  5134               	movf	52,w,b	;volatile
 51834  012326  0D01               	mullw	1
 51835  012328  0EBF               	movlw	low _USBAlternateInterface
 51836  01232A  24F3               	addwf	prodl,w,c
 51837  01232C  0101               	movlb	1	; () banked
 51838  01232E  6F09               	movwf	_inPipes& (0+255),b	;volatile
 51839  012330  0E01               	movlw	high _USBAlternateInterface
 51840  012332  20F4               	addwfc	prodh,w,c
 51841  012334  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 51842                           
 51843                           ; BSR set to: 1
 51844                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51845  012336  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 51846                           
 51847                           ; BSR set to: 1
 51848                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 51849  012338  0E01               	movlw	1
 51850  01233A  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 51851                           
 51852                           ; BSR set to: 1
 51853                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 51854  01233C  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51855                           
 51856                           ;usb_device.c: 2723: break;
 51857  01233E  0012               	return	
 51858  012340                     i2l365:
 51859                           
 51860                           ; BSR set to: 13
 51861                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 51862  012340  0101               	movlb	1	; () banked
 51863  012342  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51864                           
 51865                           ; BSR set to: 1
 51866                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 51867  012344  010D               	movlb	13	; () banked
 51868  012346  5134               	movf	52,w,b	;volatile
 51869  012348  0D01               	mullw	1
 51870  01234A  0EBF               	movlw	low _USBAlternateInterface
 51871  01234C  24F3               	addwf	prodl,w,c
 51872  01234E  6ED9               	movwf	fsr2l,c
 51873  012350  0E01               	movlw	high _USBAlternateInterface
 51874  012352  20F4               	addwfc	prodh,w,c
 51875  012354  6EDA               	movwf	fsr2h,c
 51876  012356  CD32 FFDF          	movff	3378,indf2	;volatile
 51877                           
 51878                           ;usb_device.c: 2727: break;
 51879  01235A  0012               	return	
 51880  01235C                     
 51881                           ; BSR set to: 13
 51882                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 51883                           
 51884                           ; BSR set to: 13
 51885  01235C  0E00               	movlw	0
 51886  01235E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51887  012360  0E02               	movlw	2
 51888  012362  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51889  012364  0E00               	movlw	0
 51890  012366  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51891  012368  0E00               	movlw	0
 51892  01236A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51893  01236C  0E00               	movlw	0
 51894  01236E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51895  012370  0E00               	movlw	0
 51896  012372  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51897  012374  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51898                           
 51899                           ;usb_device.c: 2734: }
 51900                           
 51901                           ;usb_device.c: 2733: break;
 51902                           
 51903                           ;usb_device.c: 2732: default:
 51904                           
 51905                           ;usb_device.c: 2731: case 12:
 51906                           
 51907                           ;usb_device.c: 2730: break;
 51908  012378  0012               	return	
 51909  01237A                     i2l355:
 51910  01237A  010D               	movlb	13	; () banked
 51911  01237C  5131               	movf	49,w,b	;volatile
 51912                           
 51913                           ; Switch size 1, requested type "space"
 51914                           ; Number of cases is 11, Range of values is 0 to 12
 51915                           ; switch strategies available:
 51916                           ; Name         Instructions Cycles
 51917                           ; simple_byte           34    18 (average)
 51918                           ;	Chosen strategy is simple_byte
 51919  01237E  0A00               	xorlw	0	; case 0
 51920  012380  B4D8               	btfsc	status,2,c
 51921  012382  D7C9               	goto	i2l361
 51922  012384  0A01               	xorlw	1	; case 1
 51923  012386  B4D8               	btfsc	status,2,c
 51924  012388  D7C9               	goto	i2l362
 51925  01238A  0A02               	xorlw	2	; case 3
 51926  01238C  B4D8               	btfsc	status,2,c
 51927  01238E  D7C6               	goto	i2l362
 51928  012390  0A06               	xorlw	6	; case 5
 51929  012392  B4D8               	btfsc	status,2,c
 51930  012394  D7AB               	goto	i2l356
 51931  012396  0A03               	xorlw	3	; case 6
 51932  012398  B4D8               	btfsc	status,2,c
 51933  01239A  D7AD               	goto	i2l358
 51934  01239C  0A01               	xorlw	1	; case 7
 51935  01239E  B4D8               	btfsc	status,2,c
 51936  0123A0  D7DD               	goto	i2l366
 51937  0123A2  0A0F               	xorlw	15	; case 8
 51938  0123A4  B4D8               	btfsc	status,2,c
 51939  0123A6  D7AD               	goto	i2l360
 51940  0123A8  0A01               	xorlw	1	; case 9
 51941  0123AA  B4D8               	btfsc	status,2,c
 51942  0123AC  D7A7               	goto	i2l359
 51943  0123AE  0A03               	xorlw	3	; case 10
 51944  0123B0  B4D8               	btfsc	status,2,c
 51945  0123B2  D7B7               	goto	i2l364
 51946  0123B4  0A01               	xorlw	1	; case 11
 51947  0123B6  B4D8               	btfsc	status,2,c
 51948  0123B8  D7C3               	goto	i2l365
 51949  0123BA  0A07               	xorlw	7	; case 12
 51950  0123BC  0012               	return	
 51951  0123BE                     __end_of_USBCheckStdRequest:
 51952                           	opt stack 0
 51953                           tosu	equ	0xFFF
 51954                           tosh	equ	0xFFE
 51955                           tosl	equ	0xFFD
 51956                           pclatu	equ	0xFFB
 51957                           pclath	equ	0xFFA
 51958                           tblptru	equ	0xFF8
 51959                           tblptrh	equ	0xFF7
 51960                           tblptrl	equ	0xFF6
 51961                           tablat	equ	0xFF5
 51962                           prodh	equ	0xFF4
 51963                           prodl	equ	0xFF3
 51964                           intcon	equ	0xFF2
 51965                           indf0	equ	0xFEF
 51966                           postinc0	equ	0xFEE
 51967                           fsr0h	equ	0xFEA
 51968                           fsr0l	equ	0xFE9
 51969                           wreg	equ	0xFE8
 51970                           indf1	equ	0xFE7
 51971                           postinc1	equ	0xFE6
 51972                           postdec1	equ	0xFE5
 51973                           plusw1	equ	0xFE3
 51974                           fsr1h	equ	0xFE2
 51975                           fsr1l	equ	0xFE1
 51976                           indf2	equ	0xFDF
 51977                           postinc2	equ	0xFDE
 51978                           postdec2	equ	0xFDD
 51979                           plusw2	equ	0xFDB
 51980                           fsr2h	equ	0xFDA
 51981                           fsr2l	equ	0xFD9
 51982                           status	equ	0xFD8
 51983                           
 51984 ;; *************** function _USBStdSetCfgHandler *****************
 51985 ;; Defined at:
 51986 ;;		line 1970 in file "usb_device.c"
 51987 ;; Parameters:    Size  Location     Type
 51988 ;;		None
 51989 ;; Auto vars:     Size  Location     Type
 51990 ;;  i               1   23[COMRAM] unsigned char 
 51991 ;; Return value:  Size  Location     Type
 51992 ;;                  1    wreg      void 
 51993 ;; Registers used:
 51994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51995 ;; Tracked objects:
 51996 ;;		On entry : 0/0
 51997 ;;		On exit  : 0/0
 51998 ;;		Unchanged: 0/0
 51999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52004 ;;Total ram usage:        1 bytes
 52005 ;; Hardware stack levels used:    1
 52006 ;; Hardware stack levels required when called:    4
 52007 ;; This function calls:
 52008 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52009 ;;		i2_memset
 52010 ;; This function is called by:
 52011 ;;		_USBCheckStdRequest
 52012 ;; This function uses a non-reentrant model
 52013 ;;
 52014                           
 52015                           	psect	text219
 52016  012580                     __ptext219:
 52017                           	opt stack 0
 52018  012580                     _USBStdSetCfgHandler:
 52019                           	opt stack 9
 52020                           
 52021                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 52022                           
 52023                           ;incstack = 0
 52024  012580  0101               	movlb	1	; () banked
 52025  012582  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52026                           
 52027                           ; BSR set to: 1
 52028                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 52029  012584  0E27               	movlw	39
 52030  012586  6E01               	movwf	i2memset@p1,c
 52031  012588  0E0F               	movlw	15
 52032  01258A  6E02               	movwf	i2memset@p1+1,c
 52033  01258C  0E00               	movlw	0
 52034  01258E  6E04               	movwf	i2memset@c+1,c
 52035  012590  0E00               	movlw	0
 52036  012592  6E03               	movwf	i2memset@c,c
 52037  012594  0E00               	movlw	0
 52038  012596  6E06               	movwf	i2memset@n+1,c
 52039  012598  0E02               	movlw	2
 52040  01259A  6E05               	movwf	i2memset@n,c
 52041  01259C  EC4C  F0AE         	call	i2_memset	;wreg free
 52042                           
 52043                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 52044  0125A0  0E00               	movlw	0
 52045  0125A2  6E01               	movwf	i2memset@p1,c
 52046  0125A4  0E0D               	movlw	13
 52047  0125A6  6E02               	movwf	i2memset@p1+1,c
 52048  0125A8  0E00               	movlw	0
 52049  0125AA  6E04               	movwf	i2memset@c+1,c
 52050  0125AC  0E00               	movlw	0
 52051  0125AE  6E03               	movwf	i2memset@c,c
 52052  0125B0  0E00               	movlw	0
 52053  0125B2  6E06               	movwf	i2memset@n+1,c
 52054  0125B4  0E30               	movlw	48
 52055  0125B6  6E05               	movwf	i2memset@n,c
 52056  0125B8  EC4C  F0AE         	call	i2_memset	;wreg free
 52057                           
 52058                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 52059  0125BC  8C65               	bsf	3941,6,c	;volatile
 52060                           
 52061                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 52062  0125BE  0E00               	movlw	0
 52063  0125C0  6E18               	movwf	USBStdSetCfgHandler@i,c
 52064  0125C2                     i2l13624:
 52065  0125C2  0E02               	movlw	2
 52066  0125C4  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 52067  0125C6  D001               	goto	i2l272
 52068  0125C8  D016               	goto	i2u1205_40
 52069  0125CA                     i2l272:
 52070                           
 52071                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 52072  0125CA  5018               	movf	USBStdSetCfgHandler@i,w,c
 52073  0125CC  0D01               	mullw	1
 52074  0125CE  0E34               	movlw	low _ep_data_in
 52075  0125D0  24F3               	addwf	prodl,w,c
 52076  0125D2  6ED9               	movwf	fsr2l,c
 52077  0125D4  0E01               	movlw	high _ep_data_in
 52078  0125D6  20F4               	addwfc	prodh,w,c
 52079  0125D8  6EDA               	movwf	fsr2h,c
 52080  0125DA  0E00               	movlw	0
 52081  0125DC  6EDF               	movwf	indf2,c
 52082                           
 52083                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 52084  0125DE  5018               	movf	USBStdSetCfgHandler@i,w,c
 52085  0125E0  0D01               	mullw	1
 52086  0125E2  0E31               	movlw	low _ep_data_out
 52087  0125E4  24F3               	addwf	prodl,w,c
 52088  0125E6  6ED9               	movwf	fsr2l,c
 52089  0125E8  0E01               	movlw	high _ep_data_out
 52090  0125EA  20F4               	addwfc	prodh,w,c
 52091  0125EC  6EDA               	movwf	fsr2h,c
 52092  0125EE  0E00               	movlw	0
 52093  0125F0  6EDF               	movwf	indf2,c
 52094  0125F2  2A18               	incf	USBStdSetCfgHandler@i,f,c
 52095  0125F4  D7E6               	goto	i2l13624
 52096  0125F6                     i2u1205_40:
 52097                           
 52098                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 52099  0125F6  0EBF               	movlw	low _USBAlternateInterface
 52100  0125F8  6E01               	movwf	i2memset@p1,c
 52101  0125FA  0E01               	movlw	high _USBAlternateInterface
 52102  0125FC  6E02               	movwf	i2memset@p1+1,c
 52103  0125FE  0E00               	movlw	0
 52104  012600  6E04               	movwf	i2memset@c+1,c
 52105  012602  0E00               	movlw	0
 52106  012604  6E03               	movwf	i2memset@c,c
 52107  012606  0E00               	movlw	0
 52108  012608  6E06               	movwf	i2memset@n+1,c
 52109  01260A  0E02               	movlw	2
 52110  01260C  6E05               	movwf	i2memset@n,c
 52111  01260E  EC4C  F0AE         	call	i2_memset	;wreg free
 52112                           
 52113                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 52114  012612  9C65               	bcf	3941,6,c	;volatile
 52115                           
 52116                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 52117  012614  0E08               	movlw	8
 52118  012616  0101               	movlb	1	; () banked
 52119  012618  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 52120  01261A  0E0D               	movlw	13
 52121  01261C  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 52122                           
 52123                           ; BSR set to: 1
 52124                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 52125  01261E  0E00               	movlw	0
 52126  012620  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 52127  012622  0E0D               	movlw	13
 52128  012624  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 52129                           
 52130                           ; BSR set to: 1
 52131                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 52132  012626  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 52133  01262A  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 52134                           
 52135                           ; BSR set to: 1
 52136                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 52137  01262E  CD32 F1C3          	movff	3378,_USBActiveConfiguration	;volatile
 52138                           
 52139                           ; BSR set to: 1
 52140                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 52141  012632  51C3               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 52142  012634  A4D8               	btfss	status,2,c
 52143  012636  D003               	goto	i2l274
 52144                           
 52145                           ; BSR set to: 1
 52146                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 52147  012638  0E10               	movlw	16
 52148  01263A  6E5D               	movwf	_USBDeviceState,c	;volatile
 52149                           
 52150                           ;usb_device.c: 2015: }
 52151  01263C  0012               	return	
 52152  01263E                     i2l274:
 52153                           
 52154                           ; BSR set to: 1
 52155                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 52156                           
 52157                           ; BSR set to: 1
 52158  01263E  0E00               	movlw	0
 52159  012640  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52160  012642  0E01               	movlw	1
 52161  012644  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52162  012646  0EC3               	movlw	low _USBActiveConfiguration
 52163  012648  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 52164  01264A  0E01               	movlw	high _USBActiveConfiguration
 52165  01264C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 52166  01264E  0E00               	movlw	0
 52167  012650  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52168  012652  0E01               	movlw	1
 52169  012654  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52170  012656  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52171                           
 52172                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 52173  01265A  0E20               	movlw	32
 52174  01265C  6E5D               	movwf	_USBDeviceState,c	;volatile
 52175  01265E  0012               	return	
 52176  012660                     __end_of_USBStdSetCfgHandler:
 52177                           	opt stack 0
 52178                           tosu	equ	0xFFF
 52179                           tosh	equ	0xFFE
 52180                           tosl	equ	0xFFD
 52181                           pclatu	equ	0xFFB
 52182                           pclath	equ	0xFFA
 52183                           tblptru	equ	0xFF8
 52184                           tblptrh	equ	0xFF7
 52185                           tblptrl	equ	0xFF6
 52186                           tablat	equ	0xFF5
 52187                           prodh	equ	0xFF4
 52188                           prodl	equ	0xFF3
 52189                           intcon	equ	0xFF2
 52190                           indf0	equ	0xFEF
 52191                           postinc0	equ	0xFEE
 52192                           fsr0h	equ	0xFEA
 52193                           fsr0l	equ	0xFE9
 52194                           wreg	equ	0xFE8
 52195                           indf1	equ	0xFE7
 52196                           postinc1	equ	0xFE6
 52197                           postdec1	equ	0xFE5
 52198                           plusw1	equ	0xFE3
 52199                           fsr1h	equ	0xFE2
 52200                           fsr1l	equ	0xFE1
 52201                           indf2	equ	0xFDF
 52202                           postinc2	equ	0xFDE
 52203                           postdec2	equ	0xFDD
 52204                           plusw2	equ	0xFDB
 52205                           fsr2h	equ	0xFDA
 52206                           fsr2l	equ	0xFD9
 52207                           status	equ	0xFD8
 52208                           
 52209 ;; *************** function i2_memset *****************
 52210 ;; Defined at:
 52211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 52212 ;; Parameters:    Size  Location     Type
 52213 ;;  p1              2    0[COMRAM] PTR void 
 52214 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 52215 ;;  c               2    2[COMRAM] int 
 52216 ;;  n               2    4[COMRAM] unsigned int 
 52217 ;; Auto vars:     Size  Location     Type
 52218 ;;  memset          2    6[COMRAM] PTR unsigned char 
 52219 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 52220 ;; Return value:  Size  Location     Type
 52221 ;;                  2    0[COMRAM] PTR void 
 52222 ;; Registers used:
 52223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 52224 ;; Tracked objects:
 52225 ;;		On entry : 0/0
 52226 ;;		On exit  : 0/0
 52227 ;;		Unchanged: 0/0
 52228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52229 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52233 ;;Total ram usage:        8 bytes
 52234 ;; Hardware stack levels used:    1
 52235 ;; This function calls:
 52236 ;;		Nothing
 52237 ;; This function is called by:
 52238 ;;		_USBStdSetCfgHandler
 52239 ;;		i2_USBDeviceInit
 52240 ;; This function uses a non-reentrant model
 52241 ;;
 52242                           
 52243                           	psect	text220
 52244  015C98                     __ptext220:
 52245                           	opt stack 0
 52246  015C98                     i2_memset:
 52247                           	opt stack 15
 52248                           
 52249                           ;incstack = 0
 52250  015C98  C001  F007         	movff	i2memset@p1,i2memset@p
 52251  015C9C  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 52252  015CA0  D008               	goto	i2l3828
 52253  015CA2                     i2l13554:
 52254  015CA2  C007  FFD9         	movff	i2memset@p,fsr2l
 52255  015CA6  C008  FFDA         	movff	i2memset@p+1,fsr2h
 52256  015CAA  C003  FFDF         	movff	i2memset@c,indf2
 52257  015CAE  4A07               	infsnz	i2memset@p,f,c
 52258  015CB0  2A08               	incf	i2memset@p+1,f,c
 52259  015CB2                     i2l3828:
 52260  015CB2  0605               	decf	i2memset@n,f,c
 52261  015CB4  A0D8               	btfss	status,0,c
 52262  015CB6  0606               	decf	i2memset@n+1,f,c
 52263  015CB8  2805               	incf	i2memset@n,w,c
 52264  015CBA  E1F3               	bnz	i2l13554
 52265  015CBC  2806               	incf	i2memset@n+1,w,c
 52266  015CBE  B4D8               	btfsc	status,2,c
 52267  015CC0  0012               	return	
 52268  015CC2  D7EF               	goto	i2l3829
 52269  015CC4                     __end_ofi2_memset:
 52270                           	opt stack 0
 52271                           tosu	equ	0xFFF
 52272                           tosh	equ	0xFFE
 52273                           tosl	equ	0xFFD
 52274                           pclatu	equ	0xFFB
 52275                           pclath	equ	0xFFA
 52276                           tblptru	equ	0xFF8
 52277                           tblptrh	equ	0xFF7
 52278                           tblptrl	equ	0xFF6
 52279                           tablat	equ	0xFF5
 52280                           prodh	equ	0xFF4
 52281                           prodl	equ	0xFF3
 52282                           intcon	equ	0xFF2
 52283                           indf0	equ	0xFEF
 52284                           postinc0	equ	0xFEE
 52285                           fsr0h	equ	0xFEA
 52286                           fsr0l	equ	0xFE9
 52287                           wreg	equ	0xFE8
 52288                           indf1	equ	0xFE7
 52289                           postinc1	equ	0xFE6
 52290                           postdec1	equ	0xFE5
 52291                           plusw1	equ	0xFE3
 52292                           fsr1h	equ	0xFE2
 52293                           fsr1l	equ	0xFE1
 52294                           indf2	equ	0xFDF
 52295                           postinc2	equ	0xFDE
 52296                           postdec2	equ	0xFDD
 52297                           plusw2	equ	0xFDB
 52298                           fsr2h	equ	0xFDA
 52299                           fsr2l	equ	0xFD9
 52300                           status	equ	0xFD8
 52301                           
 52302 ;; *************** function _USBStdGetStatusHandler *****************
 52303 ;; Defined at:
 52304 ;;		line 2131 in file "usb_device.c"
 52305 ;; Parameters:    Size  Location     Type
 52306 ;;		None
 52307 ;; Auto vars:     Size  Location     Type
 52308 ;;  p               2    1[COMRAM] PTR struct __BDT
 52309 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52310 ;; Return value:  Size  Location     Type
 52311 ;;                  1    wreg      void 
 52312 ;; Registers used:
 52313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52314 ;; Tracked objects:
 52315 ;;		On entry : 0/0
 52316 ;;		On exit  : 0/0
 52317 ;;		Unchanged: 0/0
 52318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52322 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52323 ;;Total ram usage:        3 bytes
 52324 ;; Hardware stack levels used:    1
 52325 ;; This function calls:
 52326 ;;		Nothing
 52327 ;; This function is called by:
 52328 ;;		_USBCheckStdRequest
 52329 ;; This function uses a non-reentrant model
 52330 ;;
 52331                           
 52332                           	psect	text221
 52333  0135AC                     __ptext221:
 52334                           	opt stack 0
 52335  0135AC                     _USBStdGetStatusHandler:
 52336                           	opt stack 13
 52337                           
 52338                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 52339                           
 52340                           ;incstack = 0
 52341  0135AC  0E00               	movlw	0
 52342  0135AE  010D               	movlb	13	; () banked
 52343  0135B0  6F38               	movwf	56,b	;volatile
 52344                           
 52345                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 52346  0135B2  0E00               	movlw	0
 52347  0135B4  6F39               	movwf	57,b	;volatile
 52348                           
 52349                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 52350  0135B6  D039               	goto	i2l293
 52351  0135B8                     i2l294:
 52352                           
 52353                           ; BSR set to: 13
 52354                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 52355  0135B8  0101               	movlb	1	; () banked
 52356  0135BA  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52357                           
 52358                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 52359                           
 52360                           ; BSR set to: 13
 52361                           
 52362                           ; BSR set to: 1
 52363                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 52364                           
 52365                           ;usb_device.c: 2144: if(0 == 1)
 52366  0135BC  0101               	movlb	1	; () banked
 52367  0135BE  0563               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 52368  0135C0  A4D8               	btfss	status,2,c
 52369  0135C2  D03E               	goto	i2l297
 52370                           
 52371                           ; BSR set to: 1
 52372                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 52373  0135C4  010D               	movlb	13	; () banked
 52374  0135C6  8338               	bsf	56,1,b	;volatile
 52375                           
 52376                           ; BSR set to: 13
 52377                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 52378  0135C8  D03B               	goto	i2l297
 52379  0135CA                     i2l298:
 52380                           
 52381                           ; BSR set to: 13
 52382                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 52383  0135CA  0101               	movlb	1	; () banked
 52384  0135CC  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52385                           
 52386                           ;usb_device.c: 2156: break;
 52387  0135CE  D038               	goto	i2l297
 52388  0135D0                     i2l299:
 52389                           
 52390                           ; BSR set to: 13
 52391                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 52392  0135D0  0101               	movlb	1	; () banked
 52393  0135D2  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52394                           
 52395                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 52396  0135D4  010D               	movlb	13	; () banked
 52397  0135D6  BF34               	btfsc	52,7,b	;volatile
 52398  0135D8  D00A               	goto	i2l300
 52399                           
 52400                           ; BSR set to: 13
 52401                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52402  0135DA  5134               	movf	52,w,b	;volatile
 52403  0135DC  0B0F               	andlw	15
 52404  0135DE  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 52405  0135E0  5001               	movf	??_USBStdGetStatusHandler,w,c
 52406  0135E2  0D02               	mullw	2
 52407  0135E4  0E15               	movlw	low _pBDTEntryOut
 52408  0135E6  24F3               	addwf	prodl,w,c
 52409  0135E8  6ED9               	movwf	fsr2l,c
 52410  0135EA  0E01               	movlw	high _pBDTEntryOut
 52411  0135EC  D009               	goto	L73
 52412  0135EE                     i2l300:
 52413                           
 52414                           ; BSR set to: 13
 52415                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 52416                           
 52417                           ; BSR set to: 13
 52418  0135EE  5134               	movf	52,w,b	;volatile
 52419  0135F0  0B0F               	andlw	15
 52420  0135F2  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 52421  0135F4  5001               	movf	??_USBStdGetStatusHandler,w,c
 52422  0135F6  0D02               	mullw	2
 52423  0135F8  0E0F               	movlw	low _pBDTEntryIn
 52424  0135FA  24F3               	addwf	prodl,w,c
 52425  0135FC  6ED9               	movwf	fsr2l,c
 52426  0135FE  0E01               	movlw	high _pBDTEntryIn
 52427  013600                     L73:
 52428  013600  20F4               	addwfc	prodh,w,c
 52429  013602  6EDA               	movwf	fsr2h,c
 52430  013604  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 52431  013608  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 52432                           
 52433                           ; BSR set to: 13
 52434                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 52435                           
 52436                           ; BSR set to: 13
 52437  01360C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 52438  013610  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 52439  013614  AEDF               	btfss	indf2,7,c
 52440  013616  D014               	goto	i2l297
 52441                           
 52442                           ; BSR set to: 13
 52443  013618  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 52444  01361C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 52445  013620  A4DF               	btfss	indf2,2,c
 52446  013622  D00E               	goto	i2l297
 52447                           
 52448                           ; BSR set to: 13
 52449                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 52450  013624  0E01               	movlw	1
 52451  013626  6F38               	movwf	56,b	;volatile
 52452                           
 52453                           ; BSR set to: 13
 52454                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 52455                           
 52456                           ; BSR set to: 13
 52457                           ;usb_device.c: 2176: break;
 52458  013628  D00B               	goto	i2l297
 52459  01362A                     i2l293:
 52460                           
 52461                           ; BSR set to: 13
 52462                           
 52463                           ; BSR set to: 13
 52464  01362A  5130               	movf	48,w,b	;volatile
 52465  01362C  0B1F               	andlw	31
 52466                           
 52467                           ; Switch size 1, requested type "space"
 52468                           ; Number of cases is 3, Range of values is 0 to 2
 52469                           ; switch strategies available:
 52470                           ; Name         Instructions Cycles
 52471                           ; simple_byte           10     6 (average)
 52472                           ;	Chosen strategy is simple_byte
 52473  01362E  0A00               	xorlw	0	; case 0
 52474  013630  B4D8               	btfsc	status,2,c
 52475  013632  D7C2               	goto	i2l294
 52476  013634  0A01               	xorlw	1	; case 1
 52477  013636  B4D8               	btfsc	status,2,c
 52478  013638  D7C8               	goto	i2l298
 52479  01363A  0A03               	xorlw	3	; case 2
 52480  01363C  B4D8               	btfsc	status,2,c
 52481  01363E  D7C8               	goto	i2l299
 52482  013640                     i2l297:
 52483                           
 52484                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 52485  013640  0101               	movlb	1	; () banked
 52486  013642  AF0C               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 52487  013644  0012               	return	
 52488                           
 52489                           ; BSR set to: 1
 52490                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 52491  013646  0E38               	movlw	56
 52492  013648  6F09               	movwf	_inPipes& (0+255),b	;volatile
 52493  01364A  0E0D               	movlw	13
 52494  01364C  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 52495                           
 52496                           ; BSR set to: 1
 52497                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 52498  01364E  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 52499                           
 52500                           ; BSR set to: 1
 52501                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 52502  013650  0E02               	movlw	2
 52503  013652  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52504  013654  0012               	return	
 52505  013656                     __end_of_USBStdGetStatusHandler:
 52506                           	opt stack 0
 52507                           tosu	equ	0xFFF
 52508                           tosh	equ	0xFFE
 52509                           tosl	equ	0xFFD
 52510                           pclatu	equ	0xFFB
 52511                           pclath	equ	0xFFA
 52512                           tblptru	equ	0xFF8
 52513                           tblptrh	equ	0xFF7
 52514                           tblptrl	equ	0xFF6
 52515                           tablat	equ	0xFF5
 52516                           prodh	equ	0xFF4
 52517                           prodl	equ	0xFF3
 52518                           intcon	equ	0xFF2
 52519                           indf0	equ	0xFEF
 52520                           postinc0	equ	0xFEE
 52521                           fsr0h	equ	0xFEA
 52522                           fsr0l	equ	0xFE9
 52523                           wreg	equ	0xFE8
 52524                           indf1	equ	0xFE7
 52525                           postinc1	equ	0xFE6
 52526                           postdec1	equ	0xFE5
 52527                           plusw1	equ	0xFE3
 52528                           fsr1h	equ	0xFE2
 52529                           fsr1l	equ	0xFE1
 52530                           indf2	equ	0xFDF
 52531                           postinc2	equ	0xFDE
 52532                           postdec2	equ	0xFDD
 52533                           plusw2	equ	0xFDB
 52534                           fsr2h	equ	0xFDA
 52535                           fsr2l	equ	0xFD9
 52536                           status	equ	0xFD8
 52537                           
 52538 ;; *************** function _USBStdGetDscHandler *****************
 52539 ;; Defined at:
 52540 ;;		line 2045 in file "usb_device.c"
 52541 ;; Parameters:    Size  Location     Type
 52542 ;;		None
 52543 ;; Auto vars:     Size  Location     Type
 52544 ;;		None
 52545 ;; Return value:  Size  Location     Type
 52546 ;;                  1    wreg      void 
 52547 ;; Registers used:
 52548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 52549 ;; Tracked objects:
 52550 ;;		On entry : 0/0
 52551 ;;		On exit  : 0/0
 52552 ;;		Unchanged: 0/0
 52553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52556 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52558 ;;Total ram usage:        2 bytes
 52559 ;; Hardware stack levels used:    1
 52560 ;; This function calls:
 52561 ;;		Nothing
 52562 ;; This function is called by:
 52563 ;;		_USBCheckStdRequest
 52564 ;; This function uses a non-reentrant model
 52565 ;;
 52566                           
 52567                           	psect	text222
 52568  0105C8                     __ptext222:
 52569                           	opt stack 0
 52570  0105C8                     _USBStdGetDscHandler:
 52571                           	opt stack 13
 52572                           
 52573                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 52574                           
 52575                           ; BSR set to: 1
 52576                           ;incstack = 0
 52577  0105C8  0E80               	movlw	128
 52578  0105CA  010D               	movlb	13	; () banked
 52579  0105CC  1930               	xorwf	48,w,b	;volatile
 52580  0105CE  A4D8               	btfss	status,2,c
 52581  0105D0  0012               	return	
 52582                           
 52583                           ; BSR set to: 13
 52584                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 52585  0105D2  0EC0               	movlw	192
 52586  0105D4  0101               	movlb	1	; () banked
 52587  0105D6  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52588                           
 52589                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 52590  0105D8  D08B               	goto	i2l280
 52591  0105DA                     
 52592                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 52593                           
 52594                           ; BSR set to: 1
 52595  0105DA  0E70               	movlw	low _device_dsc
 52596  0105DC  0101               	movlb	1	; () banked
 52597  0105DE  6F09               	movwf	_inPipes& (0+255),b	;volatile
 52598  0105E0  0EA2               	movlw	high _device_dsc
 52599  0105E2  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 52600                           
 52601                           ; BSR set to: 1
 52602                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 52603  0105E4  0E00               	movlw	0
 52604  0105E6  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 52605  0105E8  0E12               	movlw	18
 52606  0105EA  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52607                           
 52608                           ;usb_device.c: 2060: break;
 52609  0105EC  0012               	return	
 52610  0105EE                     
 52611                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 52612                           
 52613                           ; BSR set to: 1
 52614  0105EE  010D               	movlb	13	; () banked
 52615  0105F0  5132               	movf	50,w,b	;volatile
 52616  0105F2  A4D8               	btfss	status,2,c
 52617  0105F4  D045               	goto	i2l284
 52618                           
 52619                           ; BSR set to: 13
 52620                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 52621  0105F6  5132               	movf	50,w,b	;volatile
 52622  0105F8  0D02               	mullw	2
 52623  0105FA  0EEC               	movlw	low _USB_CD_Ptr
 52624  0105FC  24F3               	addwf	prodl,w,c
 52625  0105FE  6EF6               	movwf	tblptrl,c
 52626  010600  0E9D               	movlw	high _USB_CD_Ptr
 52627  010602  20F4               	addwfc	prodh,w,c
 52628  010604  6EF7               	movwf	tblptrh,c
 52629  010606                     	if	1	;There are 3 active tblptr bytes
 52630  010606  6AF8               	clrf	tblptru,c
 52631  010608  0E00               	movlw	low (__mediumconst shr (0+16))
 52632  01060A  22F8               	addwfc	tblptru,f,c
 52633  01060C                     	endif
 52634  01060C  0009               	tblrd		*+
 52635  01060E  CFF5 F109          	movff	tablat,_inPipes	;volatile
 52636  010612  000A               	tblrd		*-
 52637  010614  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 52638                           
 52639                           ; BSR set to: 13
 52640                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 52641  010618  0E02               	movlw	2
 52642  01061A  0101               	movlb	1	; () banked
 52643  01061C  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 52644  01061E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52645  010620  0E00               	movlw	0
 52646  010622  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 52647  010624  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52648  010626  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52649  01062A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52650  01062E  0E00               	movlw	low (__mediumconst shr (0+16))
 52651  010630  6EF8               	movwf	tblptru,c
 52652  010632  0E0E               	movlw	(high __ramtop+-1)
 52653  010634  64F7               	cpfsgt	tblptrh,c
 52654  010636  D003               	bra	i2u1209_47
 52655  010638  0008               	tblrd		*
 52656  01063A  50F5               	movf	tablat,w,c
 52657  01063C  D005               	bra	i2u1209_40
 52658  01063E                     i2u1209_47:
 52659  01063E  CFF6 FFE9          	movff	tblptrl,fsr0l
 52660  010642  CFF7 FFEA          	movff	tblptrh,fsr0h
 52661  010646  50EF               	movf	indf0,w,c
 52662  010648                     i2u1209_40:
 52663  010648  0101               	movlb	1	; () banked
 52664  01064A  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52665                           
 52666                           ; BSR set to: 1
 52667                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 52668  01064C  0E03               	movlw	3
 52669  01064E  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 52670  010650  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52671  010652  0E00               	movlw	0
 52672  010654  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 52673  010656  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52674  010658  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52675  01065C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52676  010660  0E00               	movlw	low (__mediumconst shr (0+16))
 52677  010662  6EF8               	movwf	tblptru,c
 52678  010664  0E0E               	movlw	(high __ramtop+-1)
 52679  010666  64F7               	cpfsgt	tblptrh,c
 52680  010668  D003               	bra	i2u1210_47
 52681  01066A  0008               	tblrd		*
 52682  01066C  50F5               	movf	tablat,w,c
 52683  01066E  D005               	bra	i2u1210_40
 52684  010670                     i2u1210_47:
 52685  010670  CFF6 FFE9          	movff	tblptrl,fsr0l
 52686  010674  CFF7 FFEA          	movff	tblptrh,fsr0h
 52687  010678  50EF               	movf	indf0,w,c
 52688  01067A                     i2u1210_40:
 52689  01067A  0101               	movlb	1	; () banked
 52690  01067C  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 52691                           
 52692                           ;usb_device.c: 2078: }
 52693  01067E  0012               	return	
 52694  010680                     i2l284:
 52695                           
 52696                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 52697                           
 52698                           ; BSR set to: 1
 52699  010680  0E00               	movlw	0
 52700  010682  0101               	movlb	1	; () banked
 52701  010684  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52702                           
 52703                           ; BSR set to: 1
 52704                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 52705  010686  0012               	return	
 52706  010688                     
 52707                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 52708                           
 52709                           ; BSR set to: 1
 52710  010688  0E04               	movlw	4
 52711  01068A  010D               	movlb	13	; () banked
 52712  01068C  6132               	cpfslt	50,b	;volatile
 52713  01068E  D028               	goto	i2l287
 52714                           
 52715                           ; BSR set to: 13
 52716                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 52717  010690  5132               	movf	50,w,b	;volatile
 52718  010692  0D02               	mullw	2
 52719  010694  0EE4               	movlw	low _USB_SD_Ptr
 52720  010696  24F3               	addwf	prodl,w,c
 52721  010698  6EF6               	movwf	tblptrl,c
 52722  01069A  0E9D               	movlw	high _USB_SD_Ptr
 52723  01069C  20F4               	addwfc	prodh,w,c
 52724  01069E  6EF7               	movwf	tblptrh,c
 52725  0106A0                     	if	1	;There are 3 active tblptr bytes
 52726  0106A0  6AF8               	clrf	tblptru,c
 52727  0106A2  0E00               	movlw	low (__mediumconst shr (0+16))
 52728  0106A4  22F8               	addwfc	tblptru,f,c
 52729  0106A6                     	endif
 52730  0106A6  0009               	tblrd		*+
 52731  0106A8  CFF5 F109          	movff	tablat,_inPipes	;volatile
 52732  0106AC  000A               	tblrd		*-
 52733  0106AE  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 52734                           
 52735                           ; BSR set to: 13
 52736                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 52737  0106B2  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 52738  0106B6  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52739  0106BA  0E00               	movlw	low (__mediumconst shr (0+16))
 52740  0106BC  6EF8               	movwf	tblptru,c
 52741  0106BE  0E0E               	movlw	(high __ramtop+-1)
 52742  0106C0  64F7               	cpfsgt	tblptrh,c
 52743  0106C2  D003               	bra	i2u1212_47
 52744  0106C4  0008               	tblrd		*
 52745  0106C6  50F5               	movf	tablat,w,c
 52746  0106C8  D005               	bra	i2u1212_40
 52747  0106CA                     i2u1212_47:
 52748  0106CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 52749  0106CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 52750  0106D2  50EF               	movf	indf0,w,c
 52751  0106D4                     i2u1212_40:
 52752  0106D4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52753  0106D6  5001               	movf	??_USBStdGetDscHandler,w,c
 52754  0106D8  0101               	movlb	1	; () banked
 52755  0106DA  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52756  0106DC  6B0E               	clrf	(_inPipes+5)& (0+255),b	;volatile
 52757                           
 52758                           ;usb_device.c: 2094: }
 52759  0106DE  0012               	return	
 52760  0106E0                     i2l287:
 52761                           
 52762                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 52763                           
 52764                           ; BSR set to: 1
 52765  0106E0  0E00               	movlw	0
 52766  0106E2  0101               	movlb	1	; () banked
 52767  0106E4  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52768                           
 52769                           ; BSR set to: 1
 52770                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 52771  0106E6  0012               	return	
 52772  0106E8                     
 52773                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 52774                           
 52775                           ; BSR set to: 1
 52776  0106E8  0E00               	movlw	0
 52777  0106EA  0101               	movlb	1	; () banked
 52778  0106EC  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52779                           
 52780                           ; BSR set to: 1
 52781                           ;usb_device.c: 2112: }
 52782                           
 52783                           ;usb_device.c: 2111: break;
 52784  0106EE  0012               	return	
 52785  0106F0                     i2l280:
 52786                           
 52787                           ; BSR set to: 1
 52788                           
 52789                           ; BSR set to: 1
 52790  0106F0  010D               	movlb	13	; () banked
 52791  0106F2  5133               	movf	51,w,b	;volatile
 52792                           
 52793                           ; Switch size 1, requested type "space"
 52794                           ; Number of cases is 3, Range of values is 1 to 3
 52795                           ; switch strategies available:
 52796                           ; Name         Instructions Cycles
 52797                           ; simple_byte           10     6 (average)
 52798                           ;	Chosen strategy is simple_byte
 52799  0106F4  0A01               	xorlw	1	; case 1
 52800  0106F6  B4D8               	btfsc	status,2,c
 52801  0106F8  D770               	goto	i2l281
 52802  0106FA  0A03               	xorlw	3	; case 2
 52803  0106FC  B4D8               	btfsc	status,2,c
 52804  0106FE  D777               	goto	i2l283
 52805  010700  0A01               	xorlw	1	; case 3
 52806  010702  B4D8               	btfsc	status,2,c
 52807  010704  D7C1               	goto	i2l286
 52808  010706  D7F0               	goto	i2l289
 52809  010708                     __end_of_USBStdGetDscHandler:
 52810                           	opt stack 0
 52811                           tosu	equ	0xFFF
 52812                           tosh	equ	0xFFE
 52813                           tosl	equ	0xFFD
 52814                           pclatu	equ	0xFFB
 52815                           pclath	equ	0xFFA
 52816                           tblptru	equ	0xFF8
 52817                           tblptrh	equ	0xFF7
 52818                           tblptrl	equ	0xFF6
 52819                           tablat	equ	0xFF5
 52820                           prodh	equ	0xFF4
 52821                           prodl	equ	0xFF3
 52822                           intcon	equ	0xFF2
 52823                           indf0	equ	0xFEF
 52824                           postinc0	equ	0xFEE
 52825                           fsr0h	equ	0xFEA
 52826                           fsr0l	equ	0xFE9
 52827                           wreg	equ	0xFE8
 52828                           indf1	equ	0xFE7
 52829                           postinc1	equ	0xFE6
 52830                           postdec1	equ	0xFE5
 52831                           plusw1	equ	0xFE3
 52832                           fsr1h	equ	0xFE2
 52833                           fsr1l	equ	0xFE1
 52834                           indf2	equ	0xFDF
 52835                           postinc2	equ	0xFDE
 52836                           postdec2	equ	0xFDD
 52837                           plusw2	equ	0xFDB
 52838                           fsr2h	equ	0xFDA
 52839                           fsr2l	equ	0xFD9
 52840                           status	equ	0xFD8
 52841                           
 52842 ;; *************** function _USBStdFeatureReqHandler *****************
 52843 ;; Defined at:
 52844 ;;		line 2756 in file "usb_device.c"
 52845 ;; Parameters:    Size  Location     Type
 52846 ;;		None
 52847 ;; Auto vars:     Size  Location     Type
 52848 ;;  p               2   27[COMRAM] PTR struct __BDT
 52849 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52850 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 52851 ;;		 -> UEP0(1), 
 52852 ;;  current_ep_d    1   26[COMRAM] struct .
 52853 ;; Return value:  Size  Location     Type
 52854 ;;                  1    wreg      void 
 52855 ;; Registers used:
 52856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52857 ;; Tracked objects:
 52858 ;;		On entry : 0/0
 52859 ;;		On exit  : 0/0
 52860 ;;		Unchanged: 0/0
 52861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52863 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52866 ;;Total ram usage:        6 bytes
 52867 ;; Hardware stack levels used:    1
 52868 ;; Hardware stack levels required when called:    4
 52869 ;; This function calls:
 52870 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52871 ;; This function is called by:
 52872 ;;		_USBCheckStdRequest
 52873 ;; This function uses a non-reentrant model
 52874 ;;
 52875                           
 52876                           	psect	text223
 52877  00D8C0                     __ptext223:
 52878                           	opt stack 0
 52879  00D8C0                     _USBStdFeatureReqHandler:
 52880                           	opt stack 9
 52881                           
 52882                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 52883                           
 52884                           ;incstack = 0
 52885  00D8C0  010D               	movlb	13	; () banked
 52886  00D8C2  0532               	decf	50,w,b	;volatile
 52887  00D8C4  A4D8               	btfss	status,2,c
 52888  00D8C6  D011               	goto	i2l373
 52889                           
 52890                           ; BSR set to: 13
 52891  00D8C8  5130               	movf	48,w,b	;volatile
 52892  00D8CA  0B1F               	andlw	31
 52893  00D8CC  0900               	iorlw	0
 52894  00D8CE  A4D8               	btfss	status,2,c
 52895  00D8D0  D00C               	goto	i2l373
 52896                           
 52897                           ; BSR set to: 13
 52898                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 52899  00D8D2  0101               	movlb	1	; () banked
 52900  00D8D4  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52901                           
 52902                           ; BSR set to: 1
 52903                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 52904  00D8D6  0E03               	movlw	3
 52905  00D8D8  010D               	movlb	13	; () banked
 52906  00D8DA  1931               	xorwf	49,w,b	;volatile
 52907  00D8DC  A4D8               	btfss	status,2,c
 52908  00D8DE  D002               	goto	i2l372
 52909                           
 52910                           ; BSR set to: 13
 52911                           ;usb_device.c: 2806: RemoteWakeup = 1;
 52912  00D8E0  0E01               	movlw	1
 52913  00D8E2  D001               	goto	L74
 52914  00D8E4                     i2l372:
 52915                           
 52916                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 52917                           
 52918                           ; BSR set to: 1
 52919  00D8E4  0E00               	movlw	0
 52920  00D8E6                     L74:
 52921  00D8E6  0101               	movlb	1	; () banked
 52922  00D8E8  6F63               	movwf	_RemoteWakeup& (0+255),b	;volatile
 52923  00D8EA                     i2l373:
 52924                           
 52925                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 52926                           
 52927                           ; BSR set to: 1
 52928  00D8EA  010D               	movlb	13	; () banked
 52929  00D8EC  5132               	movf	50,w,b	;volatile
 52930  00D8EE  A4D8               	btfss	status,2,c
 52931  00D8F0  0012               	return	
 52932                           
 52933                           ; BSR set to: 13
 52934  00D8F2  5130               	movf	48,w,b	;volatile
 52935  00D8F4  0B1F               	andlw	31
 52936  00D8F6  0A02               	xorlw	2
 52937  00D8F8  A4D8               	btfss	status,2,c
 52938  00D8FA  0012               	return	
 52939                           
 52940                           ; BSR set to: 13
 52941  00D8FC  5134               	movf	52,w,b	;volatile
 52942  00D8FE  0B0F               	andlw	15
 52943  00D900  0900               	iorlw	0
 52944  00D902  B4D8               	btfsc	status,2,c
 52945  00D904  0012               	return	
 52946                           
 52947                           ; BSR set to: 13
 52948  00D906  5134               	movf	52,w,b	;volatile
 52949  00D908  0B0F               	andlw	15
 52950  00D90A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52951  00D90C  0E03               	movlw	3
 52952  00D90E  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 52953  00D910  0012               	return	
 52954                           
 52955                           ; BSR set to: 13
 52956  00D912  0E20               	movlw	32
 52957  00D914  185D               	xorwf	_USBDeviceState,w,c	;volatile
 52958  00D916  A4D8               	btfss	status,2,c
 52959  00D918  0012               	return	
 52960                           
 52961                           ; BSR set to: 13
 52962                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 52963  00D91A  0101               	movlb	1	; () banked
 52964  00D91C  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52965                           
 52966                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 52967  00D91E  010D               	movlb	13	; () banked
 52968  00D920  BF34               	btfsc	52,7,b	;volatile
 52969  00D922  D019               	goto	i2l375
 52970                           
 52971                           ; BSR set to: 13
 52972                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52973  00D924  5134               	movf	52,w,b	;volatile
 52974  00D926  0B0F               	andlw	15
 52975  00D928  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52976  00D92A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52977  00D92C  0D02               	mullw	2
 52978  00D92E  0E15               	movlw	low _pBDTEntryOut
 52979  00D930  24F3               	addwf	prodl,w,c
 52980  00D932  6ED9               	movwf	fsr2l,c
 52981  00D934  0E01               	movlw	high _pBDTEntryOut
 52982  00D936  20F4               	addwfc	prodh,w,c
 52983  00D938  6EDA               	movwf	fsr2h,c
 52984  00D93A  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52985  00D93E  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52986                           
 52987                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 52988  00D942  5134               	movf	52,w,b	;volatile
 52989  00D944  0B0F               	andlw	15
 52990  00D946  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52991  00D948  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52992  00D94A  0D01               	mullw	1
 52993  00D94C  0E31               	movlw	low _ep_data_out
 52994  00D94E  24F3               	addwf	prodl,w,c
 52995  00D950  6ED9               	movwf	fsr2l,c
 52996  00D952  0E01               	movlw	high _ep_data_out
 52997  00D954  D018               	goto	L75
 52998  00D956                     i2l375:
 52999                           
 53000                           ; BSR set to: 13
 53001                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 53002                           
 53003                           ; BSR set to: 13
 53004  00D956  5134               	movf	52,w,b	;volatile
 53005  00D958  0B0F               	andlw	15
 53006  00D95A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53007  00D95C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53008  00D95E  0D02               	mullw	2
 53009  00D960  0E0F               	movlw	low _pBDTEntryIn
 53010  00D962  24F3               	addwf	prodl,w,c
 53011  00D964  6ED9               	movwf	fsr2l,c
 53012  00D966  0E01               	movlw	high _pBDTEntryIn
 53013  00D968  20F4               	addwfc	prodh,w,c
 53014  00D96A  6EDA               	movwf	fsr2h,c
 53015  00D96C  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 53016  00D970  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 53017                           
 53018                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 53019  00D974  5134               	movf	52,w,b	;volatile
 53020  00D976  0B0F               	andlw	15
 53021  00D978  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53022  00D97A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53023  00D97C  0D01               	mullw	1
 53024  00D97E  0E34               	movlw	low _ep_data_in
 53025  00D980  24F3               	addwf	prodl,w,c
 53026  00D982  6ED9               	movwf	fsr2l,c
 53027  00D984  0E01               	movlw	high _ep_data_in
 53028  00D986                     L75:
 53029  00D986  20F4               	addwfc	prodh,w,c
 53030  00D988  6EDA               	movwf	fsr2h,c
 53031  00D98A  50DF               	movf	indf2,w,c
 53032  00D98C  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 53033                           
 53034                           ; BSR set to: 13
 53035                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 53036                           
 53037                           ; BSR set to: 13
 53038  00D98E  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 53039  00D990  D006               	goto	i2l377
 53040                           
 53041                           ; BSR set to: 13
 53042                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 53043  00D992  0EFB               	movlw	251
 53044  00D994  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 53045  00D996  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 53046  00D998  0EFF               	movlw	255
 53047  00D99A  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 53048  00D99C  D004               	goto	L76
 53049  00D99E                     i2l377:
 53050                           
 53051                           ; BSR set to: 13
 53052                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 53053                           
 53054                           ; BSR set to: 13
 53055  00D99E  0E04               	movlw	4
 53056  00D9A0  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 53057  00D9A2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 53058  00D9A4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 53059  00D9A6                     L76:
 53060  00D9A6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 53061                           
 53062                           ; BSR set to: 13
 53063                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 53064                           
 53065                           ; BSR set to: 13
 53066  00D9A8  BF34               	btfsc	52,7,b	;volatile
 53067  00D9AA  D00A               	goto	i2l379
 53068                           
 53069                           ; BSR set to: 13
 53070                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 53071  00D9AC  5134               	movf	52,w,b	;volatile
 53072  00D9AE  0B0F               	andlw	15
 53073  00D9B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53074  00D9B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53075  00D9B4  0D02               	mullw	2
 53076  00D9B6  0E15               	movlw	low _pBDTEntryOut
 53077  00D9B8  24F3               	addwf	prodl,w,c
 53078  00D9BA  6ED9               	movwf	fsr2l,c
 53079  00D9BC  0E01               	movlw	high _pBDTEntryOut
 53080  00D9BE  D009               	goto	L77
 53081  00D9C0                     i2l379:
 53082                           
 53083                           ; BSR set to: 13
 53084                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 53085                           
 53086                           ; BSR set to: 13
 53087  00D9C0  5134               	movf	52,w,b	;volatile
 53088  00D9C2  0B0F               	andlw	15
 53089  00D9C4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53090  00D9C6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53091  00D9C8  0D02               	mullw	2
 53092  00D9CA  0E0F               	movlw	low _pBDTEntryIn
 53093  00D9CC  24F3               	addwf	prodl,w,c
 53094  00D9CE  6ED9               	movwf	fsr2l,c
 53095  00D9D0  0E01               	movlw	high _pBDTEntryIn
 53096  00D9D2                     L77:
 53097  00D9D2  20F4               	addwfc	prodh,w,c
 53098  00D9D4  6EDA               	movwf	fsr2h,c
 53099  00D9D6  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 53100  00D9DA  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 53101                           
 53102                           ; BSR set to: 13
 53103                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 53104                           
 53105                           ; BSR set to: 13
 53106  00D9DE  0E03               	movlw	3
 53107  00D9E0  1931               	xorwf	49,w,b	;volatile
 53108  00D9E2  A4D8               	btfss	status,2,c
 53109  00D9E4  D02D               	goto	i2l381
 53110                           
 53111                           ; BSR set to: 13
 53112                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 53113  00D9E6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53114  00D9EA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53115  00D9EE  AEDF               	btfss	indf2,7,c
 53116  00D9F0  D01A               	goto	i2l384
 53117                           
 53118                           ; BSR set to: 13
 53119                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 53120  00D9F2  BF34               	btfsc	52,7,b	;volatile
 53121  00D9F4  D00A               	goto	i2l383
 53122                           
 53123                           ; BSR set to: 13
 53124                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 53125  00D9F6  5134               	movf	52,w,b	;volatile
 53126  00D9F8  0B0F               	andlw	15
 53127  00D9FA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53128  00D9FC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53129  00D9FE  0D01               	mullw	1
 53130  00DA00  0E31               	movlw	low _ep_data_out
 53131  00DA02  24F3               	addwf	prodl,w,c
 53132  00DA04  6ED9               	movwf	fsr2l,c
 53133  00DA06  0E01               	movlw	high _ep_data_out
 53134  00DA08  D00A               	goto	L78
 53135  00DA0A                     i2l383:
 53136                           
 53137                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 53138                           
 53139                           ; BSR set to: 1
 53140  00DA0A  010D               	movlb	13	; () banked
 53141  00DA0C  5134               	movf	52,w,b	;volatile
 53142  00DA0E  0B0F               	andlw	15
 53143  00DA10  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53144  00DA12  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53145  00DA14  0D01               	mullw	1
 53146  00DA16  0E34               	movlw	low _ep_data_in
 53147  00DA18  24F3               	addwf	prodl,w,c
 53148  00DA1A  6ED9               	movwf	fsr2l,c
 53149  00DA1C  0E01               	movlw	high _ep_data_in
 53150  00DA1E                     L78:
 53151  00DA1E  20F4               	addwfc	prodh,w,c
 53152  00DA20  6EDA               	movwf	fsr2h,c
 53153  00DA22  0101               	movlb	1	; () banked
 53154  00DA24  82DF               	bsf	indf2,1,c
 53155  00DA26                     i2l384:
 53156                           
 53157                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 53158                           
 53159                           ; BSR set to: 1
 53160                           
 53161                           ; BSR set to: 1
 53162  00DA26  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53163  00DA2A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53164  00DA2E  0E00               	movlw	0
 53165  00DA30  84DB               	bsf	plusw2,2,c
 53166                           
 53167                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 53168  00DA32  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53169  00DA36  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53170  00DA3A  0E00               	movlw	0
 53171  00DA3C  8EDB               	bsf	plusw2,7,c
 53172                           
 53173                           ;usb_device.c: 2878: }
 53174  00DA3E  0012               	return	
 53175  00DA40                     i2l381:
 53176                           
 53177                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 53178  00DA40  0E04               	movlw	4
 53179  00DA42  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 53180  00DA44  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 53181  00DA46  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 53182  00DA48  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 53183                           
 53184                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 53185  00DA4A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53186  00DA4E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53187  00DA52  AEDF               	btfss	indf2,7,c
 53188  00DA54  D01B               	goto	i2l386
 53189                           
 53190                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 53191  00DA56  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53192  00DA5A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53193  00DA5E  0E7F               	movlw	127
 53194  00DA60  16DF               	andwf	indf2,f,c
 53195                           
 53196                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 53197  00DA62  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53198  00DA66  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53199  00DA6A  0E00               	movlw	0
 53200  00DA6C  8CDB               	bsf	plusw2,6,c
 53201                           
 53202                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 53203  00DA6E  0E00               	movlw	0
 53204  00DA70  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 53205  00DA72  0E05               	movlw	5
 53206  00DA74  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 53207  00DA76  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 53208  00DA7A  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 53209  00DA7E  0E00               	movlw	0
 53210  00DA80  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 53211  00DA82  0E02               	movlw	2
 53212  00DA84  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 53213  00DA86  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 53214                           
 53215                           ;usb_device.c: 2893: }
 53216  00DA8A  D006               	goto	i2l387
 53217  00DA8C                     i2l386:
 53218                           
 53219                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 53220  00DA8C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53221  00DA90  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53222  00DA94  0E00               	movlw	0
 53223  00DA96  8CDB               	bsf	plusw2,6,c
 53224  00DA98                     i2l387:
 53225                           
 53226                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 53227  00DA98  0E04               	movlw	4
 53228  00DA9A  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 53229  00DA9C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 53230  00DA9E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 53231  00DAA0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 53232                           
 53233                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 53234  00DAA2  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 53235  00DAA4  D006               	goto	i2u1234_40
 53236  00DAA6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53237  00DAAA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53238  00DAAE  AEDF               	btfss	indf2,7,c
 53239  00DAB0  D030               	goto	i2l388
 53240  00DAB2                     i2u1234_40:
 53241                           
 53242                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 53243  00DAB2  010D               	movlb	13	; () banked
 53244  00DAB4  BF34               	btfsc	52,7,b	;volatile
 53245  00DAB6  D00A               	goto	i2l391
 53246                           
 53247                           ; BSR set to: 13
 53248                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 53249  00DAB8  5134               	movf	52,w,b	;volatile
 53250  00DABA  0B0F               	andlw	15
 53251  00DABC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53252  00DABE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53253  00DAC0  0D01               	mullw	1
 53254  00DAC2  0E31               	movlw	low _ep_data_out
 53255  00DAC4  24F3               	addwf	prodl,w,c
 53256  00DAC6  6ED9               	movwf	fsr2l,c
 53257  00DAC8  0E01               	movlw	high _ep_data_out
 53258  00DACA  D00A               	goto	L79
 53259  00DACC                     i2l391:
 53260                           
 53261                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 53262                           
 53263                           ; BSR set to: 1
 53264  00DACC  010D               	movlb	13	; () banked
 53265  00DACE  5134               	movf	52,w,b	;volatile
 53266  00DAD0  0B0F               	andlw	15
 53267  00DAD2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53268  00DAD4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53269  00DAD6  0D01               	mullw	1
 53270  00DAD8  0E34               	movlw	low _ep_data_in
 53271  00DADA  24F3               	addwf	prodl,w,c
 53272  00DADC  6ED9               	movwf	fsr2l,c
 53273  00DADE  0E01               	movlw	high _ep_data_in
 53274  00DAE0                     L79:
 53275  00DAE0  20F4               	addwfc	prodh,w,c
 53276  00DAE2  6EDA               	movwf	fsr2h,c
 53277  00DAE4  0101               	movlb	1	; () banked
 53278  00DAE6  92DF               	bcf	indf2,1,c
 53279                           
 53280                           ; BSR set to: 1
 53281                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 53282                           
 53283                           ; BSR set to: 1
 53284  00DAE8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53285  00DAEC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53286  00DAF0  0E3B               	movlw	59
 53287  00DAF2  16DF               	andwf	indf2,f,c
 53288                           
 53289                           ; BSR set to: 1
 53290                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 53291  00DAF4  0E00               	movlw	0
 53292  00DAF6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 53293  00DAF8  0E05               	movlw	5
 53294  00DAFA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 53295  00DAFC  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 53296  00DB00  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 53297  00DB04  0E00               	movlw	0
 53298  00DB06  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 53299  00DB08  0E02               	movlw	2
 53300  00DB0A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 53301  00DB0C  EC2E  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 53302                           
 53303                           ;usb_device.c: 2923: }
 53304  00DB10  D006               	goto	i2l393
 53305  00DB12                     i2l388:
 53306                           
 53307                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 53308  00DB12  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 53309  00DB16  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 53310  00DB1A  0E3B               	movlw	59
 53311  00DB1C  16DF               	andwf	indf2,f,c
 53312  00DB1E                     i2l393:
 53313                           
 53314                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 53315  00DB1E  010D               	movlb	13	; () banked
 53316  00DB20  5134               	movf	52,w,b	;volatile
 53317  00DB22  0B0F               	andlw	15
 53318  00DB24  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53319  00DB26  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53320  00DB28  0D01               	mullw	1
 53321  00DB2A  0E26               	movlw	38
 53322  00DB2C  24F3               	addwf	prodl,w,c
 53323  00DB2E  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 53324  00DB30  0E0F               	movlw	15
 53325  00DB32  20F4               	addwfc	prodh,w,c
 53326  00DB34  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 53327                           
 53328                           ; BSR set to: 13
 53329                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 53330  00DB36  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 53331  00DB3A  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 53332  00DB3E  0EFE               	movlw	254
 53333  00DB40  16DF               	andwf	indf2,f,c
 53334                           
 53335                           ; BSR set to: 13
 53336  00DB42  0012               	return	
 53337  00DB44                     __end_of_USBStdFeatureReqHandler:
 53338                           	opt stack 0
 53339                           tosu	equ	0xFFF
 53340                           tosh	equ	0xFFE
 53341                           tosl	equ	0xFFD
 53342                           pclatu	equ	0xFFB
 53343                           pclath	equ	0xFFA
 53344                           tblptru	equ	0xFF8
 53345                           tblptrh	equ	0xFF7
 53346                           tblptrl	equ	0xFF6
 53347                           tablat	equ	0xFF5
 53348                           prodh	equ	0xFF4
 53349                           prodl	equ	0xFF3
 53350                           intcon	equ	0xFF2
 53351                           indf0	equ	0xFEF
 53352                           postinc0	equ	0xFEE
 53353                           fsr0h	equ	0xFEA
 53354                           fsr0l	equ	0xFE9
 53355                           wreg	equ	0xFE8
 53356                           indf1	equ	0xFE7
 53357                           postinc1	equ	0xFE6
 53358                           postdec1	equ	0xFE5
 53359                           plusw1	equ	0xFE3
 53360                           fsr1h	equ	0xFE2
 53361                           fsr1l	equ	0xFE1
 53362                           indf2	equ	0xFDF
 53363                           postinc2	equ	0xFDE
 53364                           postdec2	equ	0xFDD
 53365                           plusw2	equ	0xFDB
 53366                           fsr2h	equ	0xFDA
 53367                           fsr2l	equ	0xFD9
 53368                           status	equ	0xFD8
 53369                           
 53370 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 53371 ;; Defined at:
 53372 ;;		line 54 in file "usb_events.c"
 53373 ;; Parameters:    Size  Location     Type
 53374 ;;  event           2   15[COMRAM] enum E6832
 53375 ;;  pdata           2   17[COMRAM] PTR void 
 53376 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 53377 ;;		 -> BDT(48), 
 53378 ;;  size            2   19[COMRAM] unsigned int 
 53379 ;; Auto vars:     Size  Location     Type
 53380 ;;		None
 53381 ;; Return value:  Size  Location     Type
 53382 ;;                  1    wreg      unsigned char 
 53383 ;; Registers used:
 53384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53385 ;; Tracked objects:
 53386 ;;		On entry : 0/0
 53387 ;;		On exit  : 0/0
 53388 ;;		Unchanged: 0/0
 53389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53390 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53394 ;;Total ram usage:        8 bytes
 53395 ;; Hardware stack levels used:    1
 53396 ;; Hardware stack levels required when called:    3
 53397 ;; This function calls:
 53398 ;;		_APP_DeviceCustomHIDInitialize
 53399 ;;		_APP_DeviceMSDInitialize
 53400 ;;		_MSDTransferTerminated
 53401 ;;		_USBCheckHIDRequest
 53402 ;;		_USBCheckMSDRequest
 53403 ;;		i2_SYSTEM_Initialize
 53404 ;; This function is called by:
 53405 ;;		_USBDeviceTasks
 53406 ;;		_USBStdSetCfgHandler
 53407 ;;		_USBSuspend
 53408 ;;		_USBWakeFromSuspend
 53409 ;;		_USBCtrlTrfSetupHandler
 53410 ;;		_USBCheckStdRequest
 53411 ;;		_USBStdFeatureReqHandler
 53412 ;; This function uses a non-reentrant model
 53413 ;;
 53414                           
 53415                           	psect	text224
 53416  01405C                     __ptext224:
 53417                           	opt stack 0
 53418  01405C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 53419                           	opt stack 13
 53420                           
 53421                           ;usb_events.c: 56: switch((int)event)
 53422                           
 53423                           ;incstack = 0
 53424  01405C  D019               	goto	i2l816
 53425  01405E                     
 53426                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 53427  01405E  0E01               	movlw	1
 53428  014060  ECE8  F0A8         	call	i2_SYSTEM_Initialize
 53429                           
 53430                           ;usb_events.c: 79: break;
 53431  014064  0012               	return	
 53432  014066                     
 53433                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 53434  014066  0E02               	movlw	2
 53435  014068  ECE8  F0A8         	call	i2_SYSTEM_Initialize
 53436                           
 53437                           ;usb_events.c: 90: break;
 53438  01406C  0012               	return	
 53439  01406E                     
 53440                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 53441  01406E  EC47  F0AD         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 53442                           
 53443                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 53444  014072  EC31  F0B0         	call	_APP_DeviceMSDInitialize	;wreg free
 53445                           
 53446                           ;usb_events.c: 100: break;
 53447                           
 53448                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 53449                           
 53450                           ;usb_events.c: 97: break;
 53451  014076  0012               	return	
 53452  014078                     
 53453                           ;usb_events.c: 105: USBCheckHIDRequest();
 53454  014078  ECDF  F091         	call	_USBCheckHIDRequest	;wreg free
 53455                           
 53456                           ;usb_events.c: 108: USBCheckMSDRequest();
 53457  01407C  EC52  F097         	call	_USBCheckMSDRequest	;wreg free
 53458                           
 53459                           ;usb_events.c: 112: break;
 53460                           
 53461                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 53462                           
 53463                           ;usb_events.c: 109: break;
 53464  014080  0012               	return	
 53465  014082                     
 53466                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 53467  014082  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 53468  014086  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 53469  01408A  EC3F  F0A8         	call	_MSDTransferTerminated	;wreg free
 53470                           
 53471                           ;usb_events.c: 129: }
 53472                           
 53473                           ;usb_events.c: 128: break;
 53474                           
 53475                           ;usb_events.c: 127: default:
 53476                           
 53477                           ;usb_events.c: 125: break;
 53478  01408E  0012               	return	
 53479  014090                     i2l816:
 53480  014090  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 53481  014094  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 53482                           
 53483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 53484                           ; Switch size 1, requested type "space"
 53485                           ; Number of cases is 2, Range of values is 0 to 127
 53486                           ; switch strategies available:
 53487                           ; Name         Instructions Cycles
 53488                           ; simple_byte            7     4 (average)
 53489                           ;	Chosen strategy is simple_byte
 53490  014098  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 53491  01409A  0A00               	xorlw	0	; case 0
 53492  01409C  B4D8               	btfsc	status,2,c
 53493  01409E  D004               	goto	i2l20162
 53494  0140A0  0A7F               	xorlw	127	; case 127
 53495  0140A2  A4D8               	btfss	status,2,c
 53496  0140A4  0012               	return	
 53497  0140A6  D01A               	goto	i2l20164
 53498  0140A8                     i2l20162:
 53499                           
 53500                           ; Switch size 1, requested type "space"
 53501                           ; Number of cases is 8, Range of values is 1 to 117
 53502                           ; switch strategies available:
 53503                           ; Name         Instructions Cycles
 53504                           ; simple_byte           25    13 (average)
 53505                           ;	Chosen strategy is simple_byte
 53506  0140A8  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53507  0140AA  0A01               	xorlw	1	; case 1
 53508  0140AC  B4D8               	btfsc	status,2,c
 53509  0140AE  D7DF               	goto	i2l822
 53510  0140B0  0A03               	xorlw	3	; case 2
 53511  0140B2  B4D8               	btfsc	status,2,c
 53512  0140B4  0012               	return	
 53513  0140B6  0A01               	xorlw	1	; case 3
 53514  0140B8  B4D8               	btfsc	status,2,c
 53515  0140BA  D7DE               	goto	i2l824
 53516  0140BC  0A06               	xorlw	6	; case 5
 53517  0140BE  B4D8               	btfsc	status,2,c
 53518  0140C0  D7E0               	goto	i2l826
 53519  0140C2  0A77               	xorlw	119	; case 114
 53520  0140C4  B4D8               	btfsc	status,2,c
 53521  0140C6  0012               	return	
 53522  0140C8  0A01               	xorlw	1	; case 115
 53523  0140CA  B4D8               	btfsc	status,2,c
 53524  0140CC  0012               	return	
 53525  0140CE  0A07               	xorlw	7	; case 116
 53526  0140D0  B4D8               	btfsc	status,2,c
 53527  0140D2  D7C9               	goto	i2l821
 53528  0140D4  0A01               	xorlw	1	; case 117
 53529  0140D6  A4D8               	btfss	status,2,c
 53530  0140D8  0012               	return	
 53531  0140DA  D7C1               	goto	i2l820
 53532  0140DC                     i2l20164:
 53533                           
 53534                           ; Switch size 1, requested type "space"
 53535                           ; Number of cases is 1, Range of values is 255 to 255
 53536                           ; switch strategies available:
 53537                           ; Name         Instructions Cycles
 53538                           ; simple_byte            4     3 (average)
 53539                           ;	Chosen strategy is simple_byte
 53540  0140DC  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53541  0140DE  0AFF               	xorlw	255	; case 255
 53542  0140E0  0012               	return	
 53543  0140E2                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 53544                           	opt stack 0
 53545                           tosu	equ	0xFFF
 53546                           tosh	equ	0xFFE
 53547                           tosl	equ	0xFFD
 53548                           pclatu	equ	0xFFB
 53549                           pclath	equ	0xFFA
 53550                           tblptru	equ	0xFF8
 53551                           tblptrh	equ	0xFF7
 53552                           tblptrl	equ	0xFF6
 53553                           tablat	equ	0xFF5
 53554                           prodh	equ	0xFF4
 53555                           prodl	equ	0xFF3
 53556                           intcon	equ	0xFF2
 53557                           indf0	equ	0xFEF
 53558                           postinc0	equ	0xFEE
 53559                           fsr0h	equ	0xFEA
 53560                           fsr0l	equ	0xFE9
 53561                           wreg	equ	0xFE8
 53562                           indf1	equ	0xFE7
 53563                           postinc1	equ	0xFE6
 53564                           postdec1	equ	0xFE5
 53565                           plusw1	equ	0xFE3
 53566                           fsr1h	equ	0xFE2
 53567                           fsr1l	equ	0xFE1
 53568                           indf2	equ	0xFDF
 53569                           postinc2	equ	0xFDE
 53570                           postdec2	equ	0xFDD
 53571                           plusw2	equ	0xFDB
 53572                           fsr2h	equ	0xFDA
 53573                           fsr2l	equ	0xFD9
 53574                           status	equ	0xFD8
 53575                           
 53576 ;; *************** function i2_SYSTEM_Initialize *****************
 53577 ;; Defined at:
 53578 ;;		line 39 in file "system.c"
 53579 ;; Parameters:    Size  Location     Type
 53580 ;;  state           1    wreg     enum E6623
 53581 ;; Auto vars:     Size  Location     Type
 53582 ;;  state           1    4[COMRAM] enum E6623
 53583 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 53584 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 53585 ;; Return value:  Size  Location     Type
 53586 ;;                  1    wreg      void 
 53587 ;; Registers used:
 53588 ;;		wreg, status,2, status,0
 53589 ;; Tracked objects:
 53590 ;;		On entry : 0/0
 53591 ;;		On exit  : 0/0
 53592 ;;		Unchanged: 0/0
 53593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53595 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53597 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53598 ;;Total ram usage:        5 bytes
 53599 ;; Hardware stack levels used:    1
 53600 ;; This function calls:
 53601 ;;		Nothing
 53602 ;; This function is called by:
 53603 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53604 ;; This function uses a non-reentrant model
 53605 ;;
 53606                           
 53607                           	psect	text225
 53608  0151D0                     __ptext225:
 53609                           	opt stack 0
 53610  0151D0                     i2_SYSTEM_Initialize:
 53611                           	opt stack 15
 53612                           
 53613                           ;incstack = 0
 53614                           ;i2SYSTEM_Initialize@state stored from wreg
 53615  0151D0  6E05               	movwf	i2SYSTEM_Initialize@state,c
 53616                           
 53617                           ;system.c: 41: switch(state)
 53618  0151D2  D01D               	goto	i2l897
 53619  0151D4                     
 53620                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 53621  0151D4  0E02               	movlw	2
 53622  0151D6  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 53623  0151D8  0E58               	movlw	88
 53624  0151DA  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 53625                           
 53626                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 53627  0151DC  8C9B               	bsf	3995,6,c	;volatile
 53628  0151DE                     i2l13002:
 53629  0151DE  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 53630  0151E0  A0D8               	btfss	status,0,c
 53631  0151E2  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 53632  0151E4  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 53633  0151E6  E1FB               	bnz	i2l13002
 53634  0151E8  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 53635  0151EA  B4D8               	btfsc	status,2,c
 53636  0151EC  0012               	return	
 53637  0151EE  D7F7               	goto	i2l900
 53638  0151F0                     
 53639                           ;system.c: 78: OSCCON = 0x70;
 53640  0151F0  0E70               	movlw	112
 53641  0151F2  6ED3               	movwf	4051,c	;volatile
 53642                           
 53643                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 53644  0151F4  0E03               	movlw	3
 53645  0151F6  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,c
 53646  0151F8  0E20               	movlw	32
 53647  0151FA  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143,c
 53648  0151FC                     i2l13006:
 53649  0151FC  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143,f,c
 53650  0151FE  A0D8               	btfss	status,0,c
 53651  015200  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,f,c
 53652  015202  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143,w,c
 53653  015204  E1FB               	bnz	i2l13006
 53654  015206  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,w,c
 53655  015208  B4D8               	btfsc	status,2,c
 53656  01520A  0012               	return	
 53657  01520C  D7F7               	goto	i2l906
 53658  01520E                     i2l897:
 53659  01520E  5005               	movf	i2SYSTEM_Initialize@state,w,c
 53660                           
 53661                           ; Switch size 1, requested type "space"
 53662                           ; Number of cases is 3, Range of values is 0 to 2
 53663                           ; switch strategies available:
 53664                           ; Name         Instructions Cycles
 53665                           ; simple_byte           10     6 (average)
 53666                           ;	Chosen strategy is simple_byte
 53667  015210  0A00               	xorlw	0	; case 0
 53668  015212  B4D8               	btfsc	status,2,c
 53669  015214  D7DF               	goto	i2l898
 53670  015216  0A01               	xorlw	1	; case 1
 53671  015218  B4D8               	btfsc	status,2,c
 53672  01521A  0012               	return	
 53673  01521C  0A03               	xorlw	3	; case 2
 53674  01521E  A4D8               	btfss	status,2,c
 53675  015220  0012               	return	
 53676  015222  D7E6               	goto	i2l904
 53677  015224                     __end_ofi2_SYSTEM_Initialize:
 53678                           	opt stack 0
 53679                           tosu	equ	0xFFF
 53680                           tosh	equ	0xFFE
 53681                           tosl	equ	0xFFD
 53682                           pclatu	equ	0xFFB
 53683                           pclath	equ	0xFFA
 53684                           tblptru	equ	0xFF8
 53685                           tblptrh	equ	0xFF7
 53686                           tblptrl	equ	0xFF6
 53687                           tablat	equ	0xFF5
 53688                           prodh	equ	0xFF4
 53689                           prodl	equ	0xFF3
 53690                           intcon	equ	0xFF2
 53691                           indf0	equ	0xFEF
 53692                           postinc0	equ	0xFEE
 53693                           fsr0h	equ	0xFEA
 53694                           fsr0l	equ	0xFE9
 53695                           wreg	equ	0xFE8
 53696                           indf1	equ	0xFE7
 53697                           postinc1	equ	0xFE6
 53698                           postdec1	equ	0xFE5
 53699                           plusw1	equ	0xFE3
 53700                           fsr1h	equ	0xFE2
 53701                           fsr1l	equ	0xFE1
 53702                           indf2	equ	0xFDF
 53703                           postinc2	equ	0xFDE
 53704                           postdec2	equ	0xFDD
 53705                           plusw2	equ	0xFDB
 53706                           fsr2h	equ	0xFDA
 53707                           fsr2l	equ	0xFD9
 53708                           status	equ	0xFD8
 53709                           
 53710 ;; *************** function _USBCheckMSDRequest *****************
 53711 ;; Defined at:
 53712 ;;		line 218 in file "usb_device_msd.c"
 53713 ;; Parameters:    Size  Location     Type
 53714 ;;		None
 53715 ;; Auto vars:     Size  Location     Type
 53716 ;;		None
 53717 ;; Return value:  Size  Location     Type
 53718 ;;                  1    wreg      void 
 53719 ;; Registers used:
 53720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53721 ;; Tracked objects:
 53722 ;;		On entry : 0/0
 53723 ;;		On exit  : 0/0
 53724 ;;		Unchanged: 0/0
 53725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53730 ;;Total ram usage:        4 bytes
 53731 ;; Hardware stack levels used:    1
 53732 ;; Hardware stack levels required when called:    1
 53733 ;; This function calls:
 53734 ;;		i2_USBTransferOnePacket
 53735 ;; This function is called by:
 53736 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53737 ;; This function uses a non-reentrant model
 53738 ;;
 53739                           
 53740                           	psect	text226
 53741  012EA4                     __ptext226:
 53742                           	opt stack 0
 53743  012EA4                     _USBCheckMSDRequest:
 53744                           	opt stack 14
 53745                           
 53746                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 53747                           
 53748                           ;incstack = 0
 53749  012EA4  010D               	movlb	13	; () banked
 53750  012EA6  5130               	movf	48,w,b	;volatile
 53751  012EA8  0B1F               	andlw	31
 53752  012EAA  06E8               	decf	wreg,f,c
 53753  012EAC  A4D8               	btfss	status,2,c
 53754  012EAE  0012               	return	
 53755                           
 53756                           ; BSR set to: 13
 53757                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 53758                           
 53759                           ; BSR set to: 13
 53760                           
 53761                           ; BSR set to: 13
 53762                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 53763  012EB0  5134               	movf	52,w,b	;volatile
 53764  012EB2  A4D8               	btfss	status,2,c
 53765  012EB4  0012               	return	
 53766  012EB6  D04E               	goto	i2l545
 53767  012EB8                     
 53768                           ; BSR set to: 13
 53769                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 53770                           
 53771                           ; BSR set to: 13
 53772  012EB8  5132               	movf	50,w,b	;volatile
 53773  012EBA  1133               	iorwf	51,w,b	;volatile
 53774  012EBC  A4D8               	btfss	status,2,c
 53775  012EBE  0012               	return	
 53776                           
 53777                           ; BSR set to: 13
 53778  012EC0  5136               	movf	54,w,b	;volatile
 53779  012EC2  1137               	iorwf	55,w,b	;volatile
 53780  012EC4  A4D8               	btfss	status,2,c
 53781  012EC6  0012               	return	
 53782                           
 53783                           ; BSR set to: 13
 53784                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 53785                           
 53786                           ; BSR set to: 13
 53787                           
 53788                           ; BSR set to: 13
 53789                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 53790  012EC8  0E00               	movlw	0
 53791  012ECA  0101               	movlb	1	; () banked
 53792  012ECC  6F58               	movwf	_MSD_State& (0+255),b
 53793                           
 53794                           ; BSR set to: 1
 53795                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 53796  012ECE  6957               	setf	_MSDCommandState& (0+255),b
 53797                           
 53798                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 53799  012ED0  0E00               	movlw	0
 53800  012ED2  6F56               	movwf	_MSDReadState& (0+255),b
 53801                           
 53802                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 53803  012ED4  0E00               	movlw	0
 53804  012ED6  6F55               	movwf	_MSDWriteState& (0+255),b
 53805                           
 53806                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 53807  012ED8  0E01               	movlw	1
 53808  012EDA  6F50               	movwf	_MSDCBWValid& (0+255),b
 53809                           
 53810                           ; BSR set to: 1
 53811                           
 53812                           ; BSR set to: 1
 53813                           
 53814                           ; BSR set to: 1
 53815                           
 53816                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 53817  012EDC  C119  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 53818  012EE0  C11A  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 53819                           
 53820                           ; BSR set to: 1
 53821  012EE4  500C               	movf	_USBCheckMSDRequest$2534,w,c
 53822  012EE6  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 53823  012EE8  B4D8               	btfsc	status,2,c
 53824  012EEA  D00A               	goto	i2u1063_40
 53825                           
 53826                           ; BSR set to: 1
 53827                           
 53828                           ; BSR set to: 1
 53829                           
 53830                           ; BSR set to: 1
 53831                           
 53832                           ; BSR set to: 1
 53833  012EEC  C119  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 53834  012EF0  C11A  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 53835                           
 53836                           ; BSR set to: 1
 53837                           
 53838                           ; BSR set to: 1
 53839  012EF4  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 53840  012EF8  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 53841  012EFC  BEDF               	btfsc	indf2,7,c
 53842  012EFE  D00F               	goto	i2l550
 53843  012F00                     i2u1063_40:
 53844                           
 53845                           ; BSR set to: 1
 53846                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 53847                           
 53848                           ; BSR set to: 1
 53849  012F00  0E00               	movlw	0
 53850  012F02  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53851  012F04  0E40               	movlw	64
 53852  012F06  6E02               	movwf	i2USBTransferOnePacket@data,c
 53853  012F08  0E0D               	movlw	13
 53854  012F0A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53855  012F0C  0E40               	movlw	64
 53856  012F0E  6E04               	movwf	i2USBTransferOnePacket@len,c
 53857  012F10  0E02               	movlw	2
 53858  012F12  ECC4  F08B         	call	i2_USBTransferOnePacket
 53859  012F16  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53860  012F1A  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53861  012F1E                     i2l550:
 53862                           
 53863                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 53864  012F1E  0E80               	movlw	128
 53865  012F20  0101               	movlb	1	; () banked
 53866  012F22  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53867                           
 53868                           ;usb_device_msd.c: 263: break;
 53869  012F24  0012               	return	
 53870  012F26                     
 53871                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 53872                           
 53873                           ; BSR set to: 1
 53874  012F26  010D               	movlb	13	; () banked
 53875  012F28  5132               	movf	50,w,b	;volatile
 53876  012F2A  1133               	iorwf	51,w,b	;volatile
 53877  012F2C  A4D8               	btfss	status,2,c
 53878  012F2E  0012               	return	
 53879                           
 53880                           ; BSR set to: 13
 53881  012F30  0536               	decf	54,w,b	;volatile
 53882  012F32  1137               	iorwf	55,w,b	;volatile
 53883  012F34  A4D8               	btfss	status,2,c
 53884  012F36  0012               	return	
 53885                           
 53886                           ; BSR set to: 13
 53887                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 53888                           
 53889                           ; BSR set to: 13
 53890                           
 53891                           ; BSR set to: 13
 53892                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 53893  012F38  0E00               	movlw	0
 53894  012F3A  6F38               	movwf	56,b	;volatile
 53895                           
 53896                           ; BSR set to: 13
 53897                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53898  012F3C  0E38               	movlw	56
 53899  012F3E  0101               	movlb	1	; () banked
 53900  012F40  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53901  012F42  0E0D               	movlw	13
 53902  012F44  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53903                           
 53904                           ; BSR set to: 1
 53905  012F46  0E00               	movlw	0
 53906  012F48  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53907  012F4A  0E01               	movlw	1
 53908  012F4C  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53909                           
 53910                           ; BSR set to: 1
 53911  012F4E  0EC1               	movlw	193
 53912  012F50  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53913                           
 53914                           ; BSR set to: 1
 53915                           ;usb_device_msd.c: 278: }
 53916                           
 53917                           ;usb_device_msd.c: 277: break;
 53918  012F52  0012               	return	
 53919  012F54                     i2l545:
 53920                           
 53921                           ; BSR set to: 1
 53922  012F54  010D               	movlb	13	; () banked
 53923  012F56  5131               	movf	49,w,b	;volatile
 53924                           
 53925                           ; Switch size 1, requested type "space"
 53926                           ; Number of cases is 2, Range of values is 254 to 255
 53927                           ; switch strategies available:
 53928                           ; Name         Instructions Cycles
 53929                           ; simple_byte            7     4 (average)
 53930                           ;	Chosen strategy is simple_byte
 53931  012F58  0AFE               	xorlw	254	; case 254
 53932  012F5A  B4D8               	btfsc	status,2,c
 53933  012F5C  D7E4               	goto	i2l562
 53934  012F5E  0A01               	xorlw	1	; case 255
 53935  012F60  A4D8               	btfss	status,2,c
 53936  012F62  0012               	return	
 53937  012F64  D7A9               	goto	i2l546
 53938  012F66                     __end_of_USBCheckMSDRequest:
 53939                           	opt stack 0
 53940                           tosu	equ	0xFFF
 53941                           tosh	equ	0xFFE
 53942                           tosl	equ	0xFFD
 53943                           pclatu	equ	0xFFB
 53944                           pclath	equ	0xFFA
 53945                           tblptru	equ	0xFF8
 53946                           tblptrh	equ	0xFF7
 53947                           tblptrl	equ	0xFF6
 53948                           tablat	equ	0xFF5
 53949                           prodh	equ	0xFF4
 53950                           prodl	equ	0xFF3
 53951                           intcon	equ	0xFF2
 53952                           indf0	equ	0xFEF
 53953                           postinc0	equ	0xFEE
 53954                           fsr0h	equ	0xFEA
 53955                           fsr0l	equ	0xFE9
 53956                           wreg	equ	0xFE8
 53957                           indf1	equ	0xFE7
 53958                           postinc1	equ	0xFE6
 53959                           postdec1	equ	0xFE5
 53960                           plusw1	equ	0xFE3
 53961                           fsr1h	equ	0xFE2
 53962                           fsr1l	equ	0xFE1
 53963                           indf2	equ	0xFDF
 53964                           postinc2	equ	0xFDE
 53965                           postdec2	equ	0xFDD
 53966                           plusw2	equ	0xFDB
 53967                           fsr2h	equ	0xFDA
 53968                           fsr2l	equ	0xFD9
 53969                           status	equ	0xFD8
 53970                           
 53971 ;; *************** function _USBCheckHIDRequest *****************
 53972 ;; Defined at:
 53973 ;;		line 153 in file "usb_device_hid.c"
 53974 ;; Parameters:    Size  Location     Type
 53975 ;;		None
 53976 ;; Auto vars:     Size  Location     Type
 53977 ;;		None
 53978 ;; Return value:  Size  Location     Type
 53979 ;;                  1    wreg      void 
 53980 ;; Registers used:
 53981 ;;		wreg, status,2, status,0
 53982 ;; Tracked objects:
 53983 ;;		On entry : 0/0
 53984 ;;		On exit  : 0/0
 53985 ;;		Unchanged: 0/0
 53986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53991 ;;Total ram usage:        0 bytes
 53992 ;; Hardware stack levels used:    1
 53993 ;; This function calls:
 53994 ;;		Nothing
 53995 ;; This function is called by:
 53996 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53997 ;; This function uses a non-reentrant model
 53998 ;;
 53999                           
 54000                           	psect	text227
 54001  0123BE                     __ptext227:
 54002                           	opt stack 0
 54003  0123BE                     _USBCheckHIDRequest:
 54004                           	opt stack 15
 54005                           
 54006                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 54007                           
 54008                           ;incstack = 0
 54009  0123BE  010D               	movlb	13	; () banked
 54010  0123C0  5130               	movf	48,w,b	;volatile
 54011  0123C2  0B1F               	andlw	31
 54012  0123C4  06E8               	decf	wreg,f,c
 54013  0123C6  A4D8               	btfss	status,2,c
 54014  0123C8  0012               	return	
 54015                           
 54016                           ; BSR set to: 13
 54017                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 54018                           
 54019                           ; BSR set to: 13
 54020                           
 54021                           ; BSR set to: 13
 54022  0123CA  5134               	movf	52,w,b	;volatile
 54023  0123CC  A4D8               	btfss	status,2,c
 54024  0123CE  0012               	return	
 54025                           
 54026                           ; BSR set to: 13
 54027                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 54028                           
 54029                           ; BSR set to: 13
 54030                           
 54031                           ; BSR set to: 13
 54032  0123D0  0E06               	movlw	6
 54033  0123D2  1931               	xorwf	49,w,b	;volatile
 54034  0123D4  B4D8               	btfsc	status,2,c
 54035  0123D6  D01A               	goto	i2l425
 54036  0123D8  D022               	goto	i2l428
 54037  0123DA                     
 54038                           ; BSR set to: 13
 54039                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 54040                           
 54041                           ; BSR set to: 13
 54042  0123DA  0101               	movlb	1	; () banked
 54043  0123DC  05C3               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 54044  0123DE  A4D8               	btfss	status,2,c
 54045  0123E0  D01E               	goto	i2l428
 54046                           
 54047                           ; BSR set to: 1
 54048                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 54049  0123E2  0ED0               	movlw	low (_configDescriptor1+18)
 54050  0123E4  6F09               	movwf	_inPipes& (0+255),b	;volatile
 54051  0123E6  0EA0               	movlw	high (_configDescriptor1+18)
 54052  0123E8  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 54053                           
 54054                           ; BSR set to: 1
 54055  0123EA  0E00               	movlw	0
 54056  0123EC  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 54057  0123EE  0E09               	movlw	9
 54058  0123F0  D00B               	goto	L80
 54059  0123F2                     i2l12638:
 54060                           
 54061                           ; BSR set to: 1
 54062  0123F2  0EC0               	movlw	192
 54063  0123F4  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54064                           
 54065                           ; BSR set to: 1
 54066                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 54067  0123F6  D013               	goto	i2l428
 54068  0123F8                     
 54069                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 54070                           
 54071                           ; BSR set to: 1
 54072  0123F8  0E84               	movlw	low _hid_rpt01
 54073  0123FA  0101               	movlb	1	; () banked
 54074  0123FC  6F09               	movwf	_inPipes& (0+255),b	;volatile
 54075  0123FE  0EA1               	movlw	high _hid_rpt01
 54076  012400  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 54077                           
 54078                           ; BSR set to: 1
 54079  012402  0E00               	movlw	0
 54080  012404  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 54081  012406  0E1D               	movlw	29
 54082  012408                     L80:
 54083  012408  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 54084  01240A  D7F3               	goto	i2l12638
 54085  01240C                     i2l425:
 54086                           
 54087                           ; BSR set to: 1
 54088  01240C  010D               	movlb	13	; () banked
 54089  01240E  5133               	movf	51,w,b	;volatile
 54090                           
 54091                           ; Switch size 1, requested type "space"
 54092                           ; Number of cases is 3, Range of values is 33 to 35
 54093                           ; switch strategies available:
 54094                           ; Name         Instructions Cycles
 54095                           ; simple_byte           10     6 (average)
 54096                           ;	Chosen strategy is simple_byte
 54097  012410  0A21               	xorlw	33	; case 33
 54098  012412  B4D8               	btfsc	status,2,c
 54099  012414  D7E2               	goto	i2l426
 54100  012416  0A03               	xorlw	3	; case 34
 54101  012418  B4D8               	btfsc	status,2,c
 54102  01241A  D7EE               	goto	i2l429
 54103  01241C  0A01               	xorlw	1	; case 35
 54104  01241E                     i2l428:
 54105                           
 54106                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 54107                           
 54108                           ; BSR set to: 13
 54109                           
 54110                           ; BSR set to: 13
 54111  01241E  010D               	movlb	13	; () banked
 54112  012420  3930               	swapf	48,w,b	;volatile
 54113  012422  32E8               	rrcf	wreg,f,c
 54114  012424  0B03               	andlw	3
 54115  012426  06E8               	decf	wreg,f,c
 54116  012428  A4D8               	btfss	status,2,c
 54117  01242A  0012               	return	
 54118  01242C  D024               	goto	i2l432
 54119  01242E                     
 54120                           ; BSR set to: 13
 54121                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 54122                           
 54123                           ; BSR set to: 13
 54124  01242E  0EC2               	movlw	low _idle_rate
 54125  012430  0101               	movlb	1	; () banked
 54126  012432  6F09               	movwf	_inPipes& (0+255),b	;volatile
 54127  012434  0E01               	movlw	high _idle_rate
 54128  012436  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 54129                           
 54130                           ; BSR set to: 1
 54131  012438  0E00               	movlw	0
 54132  01243A  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 54133  01243C  0E01               	movlw	1
 54134  01243E  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 54135                           
 54136                           ; BSR set to: 1
 54137  012440  0EC1               	movlw	193
 54138  012442  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54139                           
 54140                           ;usb_device_hid.c: 223: break;
 54141  012444  0012               	return	
 54142  012446                     
 54143                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 54144                           
 54145                           ; BSR set to: 1
 54146  012446  0E80               	movlw	128
 54147  012448  0101               	movlb	1	; () banked
 54148  01244A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54149                           
 54150                           ; BSR set to: 1
 54151                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 54152  01244C  CD33 F1C2          	movff	3379,_idle_rate	;volatile
 54153                           
 54154                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 54155  012450  0012               	return	
 54156  012452                     
 54157                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 54158                           
 54159                           ; BSR set to: 1
 54160  012452  0EC1               	movlw	low _active_protocol
 54161  012454  0101               	movlb	1	; () banked
 54162  012456  6F09               	movwf	_inPipes& (0+255),b	;volatile
 54163  012458  0E01               	movlw	high _active_protocol
 54164  01245A  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 54165                           
 54166                           ; BSR set to: 1
 54167  01245C  0E00               	movlw	0
 54168  01245E  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 54169  012460  0E01               	movlw	1
 54170  012462  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 54171                           
 54172                           ; BSR set to: 1
 54173  012464  0E81               	movlw	129
 54174  012466  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54175                           
 54176                           ;usb_device_hid.c: 234: break;
 54177  012468  0012               	return	
 54178  01246A                     
 54179                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 54180                           
 54181                           ; BSR set to: 1
 54182  01246A  0E80               	movlw	128
 54183  01246C  0101               	movlb	1	; () banked
 54184  01246E  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 54185                           
 54186                           ; BSR set to: 1
 54187                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 54188  012470  CD32 F1C1          	movff	3378,_active_protocol	;volatile
 54189                           
 54190                           ; BSR set to: 1
 54191                           ;usb_device_hid.c: 239: }
 54192                           
 54193                           ;usb_device_hid.c: 238: break;
 54194  012474  0012               	return	
 54195  012476                     i2l432:
 54196                           
 54197                           ; BSR set to: 1
 54198  012476  010D               	movlb	13	; () banked
 54199  012478  5131               	movf	49,w,b	;volatile
 54200                           
 54201                           ; Switch size 1, requested type "space"
 54202                           ; Number of cases is 6, Range of values is 1 to 11
 54203                           ; switch strategies available:
 54204                           ; Name         Instructions Cycles
 54205                           ; simple_byte           19    10 (average)
 54206                           ;	Chosen strategy is simple_byte
 54207  01247A  0A01               	xorlw	1	; case 1
 54208  01247C  B4D8               	btfsc	status,2,c
 54209  01247E  0012               	return	
 54210  012480  0A03               	xorlw	3	; case 2
 54211  012482  B4D8               	btfsc	status,2,c
 54212  012484  D7D4               	goto	i2l436
 54213  012486  0A01               	xorlw	1	; case 3
 54214  012488  B4D8               	btfsc	status,2,c
 54215  01248A  D7E3               	goto	i2l438
 54216  01248C  0A0A               	xorlw	10	; case 9
 54217  01248E  B4D8               	btfsc	status,2,c
 54218  012490  0012               	return	
 54219  012492  0A03               	xorlw	3	; case 10
 54220  012494  B4D8               	btfsc	status,2,c
 54221  012496  D7D7               	goto	i2l437
 54222  012498  0A01               	xorlw	1	; case 11
 54223  01249A  A4D8               	btfss	status,2,c
 54224  01249C  0012               	return	
 54225  01249E  D7E5               	goto	i2l439
 54226  0124A0                     __end_of_USBCheckHIDRequest:
 54227                           	opt stack 0
 54228                           tosu	equ	0xFFF
 54229                           tosh	equ	0xFFE
 54230                           tosl	equ	0xFFD
 54231                           pclatu	equ	0xFFB
 54232                           pclath	equ	0xFFA
 54233                           tblptru	equ	0xFF8
 54234                           tblptrh	equ	0xFF7
 54235                           tblptrl	equ	0xFF6
 54236                           tablat	equ	0xFF5
 54237                           prodh	equ	0xFF4
 54238                           prodl	equ	0xFF3
 54239                           intcon	equ	0xFF2
 54240                           indf0	equ	0xFEF
 54241                           postinc0	equ	0xFEE
 54242                           fsr0h	equ	0xFEA
 54243                           fsr0l	equ	0xFE9
 54244                           wreg	equ	0xFE8
 54245                           indf1	equ	0xFE7
 54246                           postinc1	equ	0xFE6
 54247                           postdec1	equ	0xFE5
 54248                           plusw1	equ	0xFE3
 54249                           fsr1h	equ	0xFE2
 54250                           fsr1l	equ	0xFE1
 54251                           indf2	equ	0xFDF
 54252                           postinc2	equ	0xFDE
 54253                           postdec2	equ	0xFDD
 54254                           plusw2	equ	0xFDB
 54255                           fsr2h	equ	0xFDA
 54256                           fsr2l	equ	0xFD9
 54257                           status	equ	0xFD8
 54258                           
 54259 ;; *************** function _MSDTransferTerminated *****************
 54260 ;; Defined at:
 54261 ;;		line 1674 in file "usb_device_msd.c"
 54262 ;; Parameters:    Size  Location     Type
 54263 ;;  handle          2   11[COMRAM] PTR void 
 54264 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 54265 ;;		 -> BDT(48), 
 54266 ;; Auto vars:     Size  Location     Type
 54267 ;;		None
 54268 ;; Return value:  Size  Location     Type
 54269 ;;                  1    wreg      void 
 54270 ;; Registers used:
 54271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54272 ;; Tracked objects:
 54273 ;;		On entry : 0/0
 54274 ;;		On exit  : 0/0
 54275 ;;		Unchanged: 0/0
 54276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54281 ;;Total ram usage:        4 bytes
 54282 ;; Hardware stack levels used:    1
 54283 ;; Hardware stack levels required when called:    1
 54284 ;; This function calls:
 54285 ;;		i2_USBStallEndpoint
 54286 ;;		i2_USBTransferOnePacket
 54287 ;; This function is called by:
 54288 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54289 ;; This function uses a non-reentrant model
 54290 ;;
 54291                           
 54292                           	psect	text228
 54293  01507E                     __ptext228:
 54294                           	opt stack 0
 54295  01507E                     _MSDTransferTerminated:
 54296                           	opt stack 14
 54297                           
 54298                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 54299                           
 54300                           ;incstack = 0
 54301  01507E  0101               	movlb	1	; () banked
 54302  015080  5150               	movf	_MSDCBWValid& (0+255),w,b
 54303  015082  A4D8               	btfss	status,2,c
 54304  015084  D00B               	goto	i2l780
 54305                           
 54306                           ; BSR set to: 1
 54307                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 54308  015086  0E01               	movlw	1
 54309  015088  6E01               	movwf	i2USBStallEndpoint@dir,c
 54310  01508A  0E02               	movlw	2
 54311  01508C  ECC0  F08A         	call	i2_USBStallEndpoint
 54312                           
 54313                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 54314  015090  0E00               	movlw	0
 54315  015092  6E01               	movwf	i2USBStallEndpoint@dir,c
 54316  015094  0E02               	movlw	2
 54317  015096  ECC0  F08A         	call	i2_USBStallEndpoint
 54318                           
 54319                           ;usb_device_msd.c: 1681: }
 54320  01509A  0012               	return	
 54321  01509C                     i2l780:
 54322  01509C  C119  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 54323  0150A0  C11A  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 54324  0150A4  500E               	movf	_MSDTransferTerminated$2623,w,c
 54325  0150A6  180C               	xorwf	MSDTransferTerminated@handle,w,c
 54326  0150A8  E114               	bnz	i2l783
 54327  0150AA  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 54328  0150AC  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 54329  0150AE  A4D8               	btfss	status,2,c
 54330  0150B0  0012               	return	
 54331                           
 54332                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 54333  0150B2  0E00               	movlw	0
 54334  0150B4  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54335  0150B6  0E40               	movlw	64
 54336  0150B8  6E02               	movwf	i2USBTransferOnePacket@data,c
 54337  0150BA  0E0D               	movlw	13
 54338  0150BC  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54339  0150BE  0E40               	movlw	64
 54340  0150C0  6E04               	movwf	i2USBTransferOnePacket@len,c
 54341  0150C2  0E02               	movlw	2
 54342  0150C4  ECC4  F08B         	call	i2_USBTransferOnePacket
 54343  0150C8  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 54344  0150CC  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 54345  0150D0  0012               	return	
 54346  0150D2                     i2l783:
 54347  0150D2  0012               	return		;funcret
 54348  0150D4                     __end_of_MSDTransferTerminated:
 54349                           	opt stack 0
 54350                           tosu	equ	0xFFF
 54351                           tosh	equ	0xFFE
 54352                           tosl	equ	0xFFD
 54353                           pclatu	equ	0xFFB
 54354                           pclath	equ	0xFFA
 54355                           tblptru	equ	0xFF8
 54356                           tblptrh	equ	0xFF7
 54357                           tblptrl	equ	0xFF6
 54358                           tablat	equ	0xFF5
 54359                           prodh	equ	0xFF4
 54360                           prodl	equ	0xFF3
 54361                           intcon	equ	0xFF2
 54362                           indf0	equ	0xFEF
 54363                           postinc0	equ	0xFEE
 54364                           fsr0h	equ	0xFEA
 54365                           fsr0l	equ	0xFE9
 54366                           wreg	equ	0xFE8
 54367                           indf1	equ	0xFE7
 54368                           postinc1	equ	0xFE6
 54369                           postdec1	equ	0xFE5
 54370                           plusw1	equ	0xFE3
 54371                           fsr1h	equ	0xFE2
 54372                           fsr1l	equ	0xFE1
 54373                           indf2	equ	0xFDF
 54374                           postinc2	equ	0xFDE
 54375                           postdec2	equ	0xFDD
 54376                           plusw2	equ	0xFDB
 54377                           fsr2h	equ	0xFDA
 54378                           fsr2l	equ	0xFD9
 54379                           status	equ	0xFD8
 54380                           
 54381 ;; *************** function i2_USBStallEndpoint *****************
 54382 ;; Defined at:
 54383 ;;		line 1073 in file "usb_device.c"
 54384 ;; Parameters:    Size  Location     Type
 54385 ;;  ep              1    wreg     unsigned char 
 54386 ;;  dir             1    0[COMRAM] unsigned char 
 54387 ;; Auto vars:     Size  Location     Type
 54388 ;;  ep              1    5[COMRAM] unsigned char 
 54389 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 54390 ;;		 -> BDT(48), 
 54391 ;; Return value:  Size  Location     Type
 54392 ;;                  1    wreg      void 
 54393 ;; Registers used:
 54394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54395 ;; Tracked objects:
 54396 ;;		On entry : 0/0
 54397 ;;		On exit  : 0/0
 54398 ;;		Unchanged: 0/0
 54399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54400 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54401 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54403 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54404 ;;Total ram usage:        8 bytes
 54405 ;; Hardware stack levels used:    1
 54406 ;; This function calls:
 54407 ;;		Nothing
 54408 ;; This function is called by:
 54409 ;;		_MSDTransferTerminated
 54410 ;; This function uses a non-reentrant model
 54411 ;;
 54412                           
 54413                           	psect	text229
 54414  011580                     __ptext229:
 54415                           	opt stack 0
 54416  011580                     i2_USBStallEndpoint:
 54417                           	opt stack 14
 54418                           
 54419                           ;incstack = 0
 54420                           ;i2USBStallEndpoint@ep stored from wreg
 54421  011580  6E06               	movwf	i2USBStallEndpoint@ep,c
 54422                           
 54423                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 54424  011582  5006               	movf	i2USBStallEndpoint@ep,w,c
 54425  011584  A4D8               	btfss	status,2,c
 54426  011586  D02B               	goto	i2l192
 54427                           
 54428                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 54429  011588  EE20 F001          	lfsr	2,1
 54430  01158C  5059               	movf	_pBDTEntryEP0OutNext,w,c
 54431  01158E  26D9               	addwf	fsr2l,f,c
 54432  011590  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 54433  011592  22DA               	addwfc	fsr2h,f,c
 54434  011594  0E08               	movlw	8
 54435  011596  6EDF               	movwf	indf2,c
 54436                           
 54437                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54438  011598  EE20 F002          	lfsr	2,2
 54439  01159C  5059               	movf	_pBDTEntryEP0OutNext,w,c
 54440  01159E  26D9               	addwf	fsr2l,f,c
 54441  0115A0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 54442  0115A2  22DA               	addwfc	fsr2h,f,c
 54443  0115A4  0E30               	movlw	48
 54444  0115A6  6EDE               	movwf	postinc2,c
 54445  0115A8  0E0D               	movlw	13
 54446  0115AA  6EDD               	movwf	postdec2,c
 54447                           
 54448                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 54449  0115AC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54450  0115B0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54451  0115B4  0E0C               	movlw	12
 54452  0115B6  6EDF               	movwf	indf2,c
 54453                           
 54454                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54455  0115B8  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54456  0115BC  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54457  0115C0  0E00               	movlw	0
 54458  0115C2  8EDB               	bsf	plusw2,7,c
 54459                           
 54460                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 54461  0115C4  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 54462  0115C8  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54463  0115CC  0E04               	movlw	4
 54464  0115CE  6EDF               	movwf	indf2,c
 54465                           
 54466                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54467  0115D0  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 54468  0115D4  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54469  0115D8  0E00               	movlw	0
 54470  0115DA  8EDB               	bsf	plusw2,7,c
 54471                           
 54472                           ;usb_device.c: 1089: }
 54473  0115DC  0012               	return	
 54474  0115DE                     i2l192:
 54475                           
 54476                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 54477  0115DE  5001               	movf	i2USBStallEndpoint@dir,w,c
 54478  0115E0  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 54479  0115E2  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 54480  0115E4  90D8               	bcf	status,0,c
 54481  0115E6  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54482  0115E8  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54483  0115EA  5006               	movf	i2USBStallEndpoint@ep,w,c
 54484  0115EC  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 54485  0115EE  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 54486  0115F0  90D8               	bcf	status,0,c
 54487  0115F2  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54488  0115F4  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54489  0115F6  90D8               	bcf	status,0,c
 54490  0115F8  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54491  0115FA  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54492  0115FC  5002               	movf	??i2_USBStallEndpoint,w,c
 54493  0115FE  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 54494  011600  5003               	movf	??i2_USBStallEndpoint+1,w,c
 54495  011602  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 54496  011604  90D8               	bcf	status,0,c
 54497  011606  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54498  011608  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54499  01160A  90D8               	bcf	status,0,c
 54500  01160C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54501  01160E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54502  011610  0E00               	movlw	0
 54503  011612  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 54504  011614  6E07               	movwf	i2USBStallEndpoint@p,c
 54505  011616  0E0D               	movlw	13
 54506  011618  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 54507  01161A  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54508                           
 54509                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 54510  01161C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54511  011620  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54512  011624  0E00               	movlw	0
 54513  011626  84DB               	bsf	plusw2,2,c
 54514                           
 54515                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 54516  011628  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54517  01162C  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54518  011630  0E00               	movlw	0
 54519  011632  8EDB               	bsf	plusw2,7,c
 54520                           
 54521                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 54522  011634  5006               	movf	i2USBStallEndpoint@ep,w,c
 54523  011636  0D04               	mullw	4
 54524  011638  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 54525  01163C  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 54526  011640  5001               	movf	i2USBStallEndpoint@dir,w,c
 54527  011642  0D02               	mullw	2
 54528  011644  50F3               	movf	prodl,w,c
 54529  011646  2602               	addwf	??i2_USBStallEndpoint,f,c
 54530  011648  50F4               	movf	prodh,w,c
 54531  01164A  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54532  01164C  90D8               	bcf	status,0,c
 54533  01164E  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54534  011650  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54535  011652  90D8               	bcf	status,0,c
 54536  011654  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54537  011656  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54538  011658  0E04               	movlw	4
 54539  01165A  2602               	addwf	??i2_USBStallEndpoint,f,c
 54540  01165C  0E00               	movlw	0
 54541  01165E  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54542  011660  0E00               	movlw	0
 54543  011662  2402               	addwf	??i2_USBStallEndpoint,w,c
 54544  011664  6E07               	movwf	i2USBStallEndpoint@p,c
 54545  011666  0E0D               	movlw	13
 54546  011668  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 54547  01166A  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54548                           
 54549                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 54550  01166C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54551  011670  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54552  011674  0E00               	movlw	0
 54553  011676  84DB               	bsf	plusw2,2,c
 54554                           
 54555                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 54556  011678  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54557  01167C  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54558  011680  0E00               	movlw	0
 54559  011682  8EDB               	bsf	plusw2,7,c
 54560  011684  0012               	return	
 54561  011686                     __end_ofi2_USBStallEndpoint:
 54562                           	opt stack 0
 54563                           tosu	equ	0xFFF
 54564                           tosh	equ	0xFFE
 54565                           tosl	equ	0xFFD
 54566                           pclatu	equ	0xFFB
 54567                           pclath	equ	0xFFA
 54568                           tblptru	equ	0xFF8
 54569                           tblptrh	equ	0xFF7
 54570                           tblptrl	equ	0xFF6
 54571                           tablat	equ	0xFF5
 54572                           prodh	equ	0xFF4
 54573                           prodl	equ	0xFF3
 54574                           intcon	equ	0xFF2
 54575                           indf0	equ	0xFEF
 54576                           postinc0	equ	0xFEE
 54577                           fsr0h	equ	0xFEA
 54578                           fsr0l	equ	0xFE9
 54579                           wreg	equ	0xFE8
 54580                           indf1	equ	0xFE7
 54581                           postinc1	equ	0xFE6
 54582                           postdec1	equ	0xFE5
 54583                           plusw1	equ	0xFE3
 54584                           fsr1h	equ	0xFE2
 54585                           fsr1l	equ	0xFE1
 54586                           indf2	equ	0xFDF
 54587                           postinc2	equ	0xFDE
 54588                           postdec2	equ	0xFDD
 54589                           plusw2	equ	0xFDB
 54590                           fsr2h	equ	0xFDA
 54591                           fsr2l	equ	0xFD9
 54592                           status	equ	0xFD8
 54593                           
 54594 ;; *************** function _APP_DeviceMSDInitialize *****************
 54595 ;; Defined at:
 54596 ;;		line 84 in file "app_device_msd.c"
 54597 ;; Parameters:    Size  Location     Type
 54598 ;;		None
 54599 ;; Auto vars:     Size  Location     Type
 54600 ;;		None
 54601 ;; Return value:  Size  Location     Type
 54602 ;;                  1    wreg      void 
 54603 ;; Registers used:
 54604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54605 ;; Tracked objects:
 54606 ;;		On entry : 0/0
 54607 ;;		On exit  : 0/0
 54608 ;;		Unchanged: 0/0
 54609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54614 ;;Total ram usage:        0 bytes
 54615 ;; Hardware stack levels used:    1
 54616 ;; Hardware stack levels required when called:    2
 54617 ;; This function calls:
 54618 ;;		_USBEnableEndpoint
 54619 ;;		_USBMSDInit
 54620 ;; This function is called by:
 54621 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54622 ;; This function uses a non-reentrant model
 54623 ;;
 54624                           
 54625                           	psect	text230
 54626  016062                     __ptext230:
 54627                           	opt stack 0
 54628  016062                     _APP_DeviceMSDInitialize:
 54629                           	opt stack 13
 54630                           
 54631                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 54632                           
 54633                           ;incstack = 0
 54634  016062  0E1E               	movlw	30
 54635  016064  6E09               	movwf	USBEnableEndpoint@options,c
 54636  016066  0E02               	movlw	2
 54637  016068  EC32  F0AC         	call	_USBEnableEndpoint
 54638                           
 54639                           ;app_device_msd.c: 93: USBMSDInit();
 54640  01606C  ECAA  F088         	call	_USBMSDInit	;wreg free
 54641  016070  0012               	return		;funcret
 54642  016072                     __end_of_APP_DeviceMSDInitialize:
 54643                           	opt stack 0
 54644                           tosu	equ	0xFFF
 54645                           tosh	equ	0xFFE
 54646                           tosl	equ	0xFFD
 54647                           pclatu	equ	0xFFB
 54648                           pclath	equ	0xFFA
 54649                           tblptru	equ	0xFF8
 54650                           tblptrh	equ	0xFF7
 54651                           tblptrl	equ	0xFF6
 54652                           tablat	equ	0xFF5
 54653                           prodh	equ	0xFF4
 54654                           prodl	equ	0xFF3
 54655                           intcon	equ	0xFF2
 54656                           indf0	equ	0xFEF
 54657                           postinc0	equ	0xFEE
 54658                           fsr0h	equ	0xFEA
 54659                           fsr0l	equ	0xFE9
 54660                           wreg	equ	0xFE8
 54661                           indf1	equ	0xFE7
 54662                           postinc1	equ	0xFE6
 54663                           postdec1	equ	0xFE5
 54664                           plusw1	equ	0xFE3
 54665                           fsr1h	equ	0xFE2
 54666                           fsr1l	equ	0xFE1
 54667                           indf2	equ	0xFDF
 54668                           postinc2	equ	0xFDE
 54669                           postdec2	equ	0xFDD
 54670                           plusw2	equ	0xFDB
 54671                           fsr2h	equ	0xFDA
 54672                           fsr2l	equ	0xFD9
 54673                           status	equ	0xFD8
 54674                           
 54675 ;; *************** function _USBMSDInit *****************
 54676 ;; Defined at:
 54677 ;;		line 142 in file "usb_device_msd.c"
 54678 ;; Parameters:    Size  Location     Type
 54679 ;;		None
 54680 ;; Auto vars:     Size  Location     Type
 54681 ;;		None
 54682 ;; Return value:  Size  Location     Type
 54683 ;;                  1    wreg      void 
 54684 ;; Registers used:
 54685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54686 ;; Tracked objects:
 54687 ;;		On entry : 0/0
 54688 ;;		On exit  : 0/0
 54689 ;;		Unchanged: 0/0
 54690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54693 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54694 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54695 ;;Total ram usage:        3 bytes
 54696 ;; Hardware stack levels used:    1
 54697 ;; Hardware stack levels required when called:    1
 54698 ;; This function calls:
 54699 ;;		i2_ExternalFlash_MediaDetect
 54700 ;;		i2_ExternalFlash_MediaInitialize
 54701 ;;		i2_ResetSenseData
 54702 ;;		i2_USBTransferOnePacket
 54703 ;; This function is called by:
 54704 ;;		_APP_DeviceMSDInitialize
 54705 ;; This function uses a non-reentrant model
 54706 ;;
 54707                           
 54708                           	psect	text231
 54709  011154                     __ptext231:
 54710                           	opt stack 0
 54711  011154                     _USBMSDInit:
 54712                           	opt stack 13
 54713                           
 54714                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 54715                           
 54716                           ;incstack = 0
 54717  011154  0E00               	movlw	0
 54718  011156  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54719  011158  0E40               	movlw	64
 54720  01115A  6E02               	movwf	i2USBTransferOnePacket@data,c
 54721  01115C  0E0D               	movlw	13
 54722  01115E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54723  011160  0E40               	movlw	64
 54724  011162  6E04               	movwf	i2USBTransferOnePacket@len,c
 54725  011164  0E02               	movlw	2
 54726  011166  ECC4  F08B         	call	i2_USBTransferOnePacket
 54727  01116A  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 54728  01116E  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 54729  011172  C113  F13F         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 54730  011176  C114  F140         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 54731                           
 54732                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 54733  01117A  0E00               	movlw	0
 54734  01117C  0101               	movlb	1	; () banked
 54735  01117E  6F58               	movwf	_MSD_State& (0+255),b
 54736                           
 54737                           ; BSR set to: 1
 54738                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 54739  011180  6957               	setf	_MSDCommandState& (0+255),b
 54740                           
 54741                           ; BSR set to: 1
 54742                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 54743  011182  0E00               	movlw	0
 54744  011184  6F56               	movwf	_MSDReadState& (0+255),b
 54745                           
 54746                           ; BSR set to: 1
 54747                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 54748  011186  0E00               	movlw	0
 54749  011188  6F55               	movwf	_MSDWriteState& (0+255),b
 54750                           
 54751                           ; BSR set to: 1
 54752                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 54753  01118A  0E00               	movlw	0
 54754  01118C  6F51               	movwf	_MSDHostNoData& (0+255),b
 54755                           
 54756                           ; BSR set to: 1
 54757                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 54758  01118E  0E00               	movlw	0
 54759  011190  0102               	movlb	2	; () banked
 54760  011192  6F40               	movwf	_gblNumBLKS& (0+255),b
 54761  011194  0E00               	movlw	0
 54762  011196  6F41               	movwf	(_gblNumBLKS+1)& (0+255),b
 54763  011198  0E00               	movlw	0
 54764  01119A  6F42               	movwf	(_gblNumBLKS+2)& (0+255),b
 54765  01119C  0E00               	movlw	0
 54766  01119E  6F43               	movwf	(_gblNumBLKS+3)& (0+255),b
 54767                           
 54768                           ; BSR set to: 2
 54769                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 54770  0111A0  0E00               	movlw	0
 54771  0111A2  6F3C               	movwf	_gblBLKLen& (0+255),b
 54772  0111A4  0E00               	movlw	0
 54773  0111A6  6F3D               	movwf	(_gblBLKLen+1)& (0+255),b
 54774  0111A8  0E00               	movlw	0
 54775  0111AA  6F3E               	movwf	(_gblBLKLen+2)& (0+255),b
 54776  0111AC  0E00               	movlw	0
 54777  0111AE  6F3F               	movwf	(_gblBLKLen+3)& (0+255),b
 54778                           
 54779                           ; BSR set to: 2
 54780                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 54781  0111B0  0E01               	movlw	1
 54782  0111B2  0101               	movlb	1	; () banked
 54783  0111B4  6F50               	movwf	_MSDCBWValid& (0+255),b
 54784                           
 54785                           ; BSR set to: 1
 54786                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 54787  0111B6  0E00               	movlw	0
 54788  0111B8  0102               	movlb	2	; () banked
 54789  0111BA  6F45               	movwf	(_gblMediaPresent+1)& (0+255),b
 54790  0111BC  0E00               	movlw	0
 54791  0111BE  6F44               	movwf	_gblMediaPresent& (0+255),b
 54792                           
 54793                           ; BSR set to: 2
 54794                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 54795  0111C0  0E00               	movlw	0
 54796  0111C2  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 54797  0111C4  D04A               	goto	i2l534
 54798  0111C6                     
 54799                           ; BSR set to: 2
 54800                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 54801                           
 54802                           ; BSR set to: 2
 54803  0111C6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54804  0111C8  0D01               	mullw	1
 54805  0111CA  0E52               	movlw	low _SoftDetach
 54806  0111CC  24F3               	addwf	prodl,w,c
 54807  0111CE  6ED9               	movwf	fsr2l,c
 54808  0111D0  0E01               	movlw	high _SoftDetach
 54809  0111D2  20F4               	addwfc	prodh,w,c
 54810  0111D4  6EDA               	movwf	fsr2h,c
 54811  0111D6  0E00               	movlw	0
 54812  0111D8  6EDF               	movwf	indf2,c
 54813                           
 54814                           ; BSR set to: 2
 54815                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 54816  0111DA  C2B2  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 54817  0111DE  C2B3  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 54818  0111E2  EE22  F0A6         	lfsr	2,_LUN+9
 54819  0111E6  D801               	call	i2u1034_48
 54820  0111E8  D00A               	goto	i2u1034_49
 54821  0111EA                     i2u1034_48:
 54822  0111EA  0005               	push	
 54823  0111EC  6EFA               	movwf	pclath,c
 54824  0111EE  50DE               	movf	postinc2,w,c
 54825  0111F0  6EFD               	movwf	tosl,c
 54826  0111F2  50DE               	movf	postinc2,w,c
 54827  0111F4  6EFE               	movwf	tosh,c
 54828  0111F6  50DE               	movf	postinc2,w,c
 54829  0111F8  6EFF               	movwf	tosu,c
 54830  0111FA  50FA               	movf	pclath,w,c
 54831  0111FC  0012               	return		;indir
 54832  0111FE                     i2u1034_49:
 54833  0111FE  0900               	iorlw	0
 54834  011200  B4D8               	btfsc	status,2,c
 54835  011202  D027               	goto	i2l537
 54836                           
 54837                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 54838  011204  C2B2  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 54839  011208  C2B3  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 54840  01120C  D801               	call	i2u1036_48
 54841  01120E  D00B               	goto	i2u1036_49
 54842  011210                     i2u1036_48:
 54843  011210  0005               	push	
 54844  011212  6EFA               	movwf	pclath,c
 54845  011214  0102               	movlb	2	; () banked
 54846  011216  519D               	movf	_LUN& (0+255),w,b
 54847  011218  6EFD               	movwf	tosl,c
 54848  01121A  519E               	movf	(_LUN+1)& (0+255),w,b
 54849  01121C  6EFE               	movwf	tosh,c
 54850  01121E  519F               	movf	(_LUN+2)& (0+255),w,b
 54851  011220  6EFF               	movwf	tosu,c
 54852  011222  50FA               	movf	pclath,w,c
 54853  011224  0012               	return		;indir
 54854  011226                     i2u1036_49:
 54855  011226  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 54856  011228  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 54857  01122A  B4D8               	btfsc	status,2,c
 54858  01122C  D012               	goto	i2l537
 54859                           
 54860                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 54861  01122E  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 54862  011232  0E01               	movlw	1
 54863  011234  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 54864  011236  0E00               	movlw	0
 54865  011238  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 54866  01123A  2A0C               	incf	??_USBMSDInit,f,c
 54867  01123C  D003               	goto	i2u1038_44
 54868  01123E                     i2u1038_45:
 54869  01123E  90D8               	bcf	status,0,c
 54870  011240  360D               	rlcf	??_USBMSDInit+1,f,c
 54871  011242  360E               	rlcf	??_USBMSDInit+2,f,c
 54872  011244                     i2u1038_44:
 54873  011244  2E0C               	decfsz	??_USBMSDInit,f,c
 54874  011246  D7FB               	goto	i2u1038_45
 54875  011248  500D               	movf	??_USBMSDInit+1,w,c
 54876  01124A  0102               	movlb	2	; () banked
 54877  01124C  1344               	iorwf	_gblMediaPresent& (0+255),f,b
 54878  01124E  500E               	movf	??_USBMSDInit+2,w,c
 54879  011250  1345               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 54880  011252                     i2l537:
 54881                           
 54882                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 54883                           
 54884                           ; BSR set to: 2
 54885                           
 54886                           ; BSR set to: 2
 54887  011252  EC68  F0A5         	call	i2_ResetSenseData	;wreg free
 54888  011256  0102               	movlb	2	; () banked
 54889  011258  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 54890  01125A                     i2l534:
 54891                           
 54892                           ; BSR set to: 2
 54893                           
 54894                           ; BSR set to: 2
 54895  01125A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54896  01125C  A4D8               	btfss	status,2,c
 54897  01125E  0012               	return	
 54898  011260  D7B2               	goto	i2l535
 54899  011262                     __end_of_USBMSDInit:
 54900                           	opt stack 0
 54901                           tosu	equ	0xFFF
 54902                           tosh	equ	0xFFE
 54903                           tosl	equ	0xFFD
 54904                           pclatu	equ	0xFFB
 54905                           pclath	equ	0xFFA
 54906                           tblptru	equ	0xFF8
 54907                           tblptrh	equ	0xFF7
 54908                           tblptrl	equ	0xFF6
 54909                           tablat	equ	0xFF5
 54910                           prodh	equ	0xFF4
 54911                           prodl	equ	0xFF3
 54912                           intcon	equ	0xFF2
 54913                           indf0	equ	0xFEF
 54914                           postinc0	equ	0xFEE
 54915                           fsr0h	equ	0xFEA
 54916                           fsr0l	equ	0xFE9
 54917                           wreg	equ	0xFE8
 54918                           indf1	equ	0xFE7
 54919                           postinc1	equ	0xFE6
 54920                           postdec1	equ	0xFE5
 54921                           plusw1	equ	0xFE3
 54922                           fsr1h	equ	0xFE2
 54923                           fsr1l	equ	0xFE1
 54924                           indf2	equ	0xFDF
 54925                           postinc2	equ	0xFDE
 54926                           postdec2	equ	0xFDD
 54927                           plusw2	equ	0xFDB
 54928                           fsr2h	equ	0xFDA
 54929                           fsr2l	equ	0xFD9
 54930                           status	equ	0xFD8
 54931                           
 54932 ;; *************** function i2_ResetSenseData *****************
 54933 ;; Defined at:
 54934 ;;		line 1373 in file "usb_device_msd.c"
 54935 ;; Parameters:    Size  Location     Type
 54936 ;;		None
 54937 ;; Auto vars:     Size  Location     Type
 54938 ;;		None
 54939 ;; Return value:  Size  Location     Type
 54940 ;;                  1    wreg      void 
 54941 ;; Registers used:
 54942 ;;		wreg, status,2
 54943 ;; Tracked objects:
 54944 ;;		On entry : 0/0
 54945 ;;		On exit  : 0/0
 54946 ;;		Unchanged: 0/0
 54947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54952 ;;Total ram usage:        0 bytes
 54953 ;; Hardware stack levels used:    1
 54954 ;; This function calls:
 54955 ;;		Nothing
 54956 ;; This function is called by:
 54957 ;;		_USBMSDInit
 54958 ;; This function uses a non-reentrant model
 54959 ;;
 54960                           
 54961                           	psect	text232
 54962  014AD0                     __ptext232:
 54963                           	opt stack 0
 54964  014AD0                     i2_ResetSenseData:
 54965                           	opt stack 13
 54966                           
 54967                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 54968                           
 54969                           ; BSR set to: 2
 54970                           ;incstack = 0
 54971  014AD0  0102               	movlb	2	; () banked
 54972  014AD2  911F               	bcf	_gblSenseData& (0+255),0,b
 54973  014AD4  931F               	bcf	_gblSenseData& (0+255),1,b
 54974  014AD6  951F               	bcf	_gblSenseData& (0+255),2,b
 54975  014AD8  971F               	bcf	_gblSenseData& (0+255),3,b
 54976  014ADA  891F               	bsf	_gblSenseData& (0+255),4,b
 54977  014ADC  8B1F               	bsf	_gblSenseData& (0+255),5,b
 54978  014ADE  8D1F               	bsf	_gblSenseData& (0+255),6,b
 54979                           
 54980                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 54981  014AE0  9F1F               	bcf	_gblSenseData& (0+255),7,b
 54982                           
 54983                           ; BSR set to: 2
 54984                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 54985  014AE2  0E00               	movlw	0
 54986  014AE4  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 54987                           
 54988                           ; BSR set to: 2
 54989                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 54990  014AE6  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 54991  014AE8  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 54992  014AEA  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 54993  014AEC  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 54994                           
 54995                           ; BSR set to: 2
 54996                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 54997  014AEE  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 54998                           
 54999                           ; BSR set to: 2
 55000                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 55001  014AF0  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 55002                           
 55003                           ; BSR set to: 2
 55004                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 55005  014AF2  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 55006                           
 55007                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 55008  014AF4  0E00               	movlw	0
 55009  014AF6  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 55010                           
 55011                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 55012  014AF8  0E00               	movlw	0
 55013  014AFA  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 55014                           
 55015                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 55016  014AFC  0E00               	movlw	0
 55017  014AFE  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 55018                           
 55019                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 55020  014B00  0E00               	movlw	0
 55021  014B02  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 55022                           
 55023                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 55024  014B04  0E0A               	movlw	10
 55025  014B06  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 55026                           
 55027                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 55028  014B08  0E00               	movlw	0
 55029  014B0A  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 55030  014B0C  0E00               	movlw	0
 55031  014B0E  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 55032  014B10  0E00               	movlw	0
 55033  014B12  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 55034  014B14  0E00               	movlw	0
 55035  014B16  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 55036                           
 55037                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 55038  014B18  0E00               	movlw	0
 55039  014B1A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 55040                           
 55041                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 55042  014B1C  0E00               	movlw	0
 55043  014B1E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 55044                           
 55045                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 55046  014B20  0E00               	movlw	0
 55047  014B22  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 55048                           
 55049                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 55050  014B24  0E00               	movlw	0
 55051  014B26  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 55052                           
 55053                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 55054  014B28  0E00               	movlw	0
 55055  014B2A  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 55056                           
 55057                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 55058  014B2C  0E00               	movlw	0
 55059  014B2E  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 55060                           
 55061                           ; BSR set to: 2
 55062  014B30  0012               	return		;funcret
 55063  014B32                     __end_ofi2_ResetSenseData:
 55064                           	opt stack 0
 55065                           tosu	equ	0xFFF
 55066                           tosh	equ	0xFFE
 55067                           tosl	equ	0xFFD
 55068                           pclatu	equ	0xFFB
 55069                           pclath	equ	0xFFA
 55070                           tblptru	equ	0xFF8
 55071                           tblptrh	equ	0xFF7
 55072                           tblptrl	equ	0xFF6
 55073                           tablat	equ	0xFF5
 55074                           prodh	equ	0xFF4
 55075                           prodl	equ	0xFF3
 55076                           intcon	equ	0xFF2
 55077                           indf0	equ	0xFEF
 55078                           postinc0	equ	0xFEE
 55079                           fsr0h	equ	0xFEA
 55080                           fsr0l	equ	0xFE9
 55081                           wreg	equ	0xFE8
 55082                           indf1	equ	0xFE7
 55083                           postinc1	equ	0xFE6
 55084                           postdec1	equ	0xFE5
 55085                           plusw1	equ	0xFE3
 55086                           fsr1h	equ	0xFE2
 55087                           fsr1l	equ	0xFE1
 55088                           indf2	equ	0xFDF
 55089                           postinc2	equ	0xFDE
 55090                           postdec2	equ	0xFDD
 55091                           plusw2	equ	0xFDB
 55092                           fsr2h	equ	0xFDA
 55093                           fsr2l	equ	0xFD9
 55094                           status	equ	0xFD8
 55095                           
 55096 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 55097 ;; Defined at:
 55098 ;;		line 10 in file "external_flash.c"
 55099 ;; Parameters:    Size  Location     Type
 55100 ;;  config          2    0[COMRAM] PTR void 
 55101 ;;		 -> NULL(0), 
 55102 ;; Auto vars:     Size  Location     Type
 55103 ;;		None
 55104 ;; Return value:  Size  Location     Type
 55105 ;;                  2    0[COMRAM] PTR struct .
 55106 ;; Registers used:
 55107 ;;		wreg, status,2, status,0
 55108 ;; Tracked objects:
 55109 ;;		On entry : 0/0
 55110 ;;		On exit  : 0/0
 55111 ;;		Unchanged: 0/0
 55112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55117 ;;Total ram usage:        2 bytes
 55118 ;; Hardware stack levels used:    1
 55119 ;; This function calls:
 55120 ;;		Nothing
 55121 ;; This function is called by:
 55122 ;;		_USBMSDInit
 55123 ;;		_MSDProcessCommand
 55124 ;; This function uses a non-reentrant model
 55125 ;;
 55126                           
 55127                           	psect	text233
 55128  015FD4                     __ptext233:
 55129                           	opt stack 0
 55130  015FD4                     i2_ExternalFlash_MediaInitialize:
 55131                           	opt stack 13
 55132                           
 55133                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 55134                           
 55135                           ; BSR set to: 2
 55136                           ;incstack = 0
 55137  015FD4  0102               	movlb	2	; () banked
 55138  015FD6  8199               	bsf	(_mediaInformation+1)& (0+255),0,b
 55139                           
 55140                           ; BSR set to: 2
 55141                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 55142  015FD8  0E02               	movlw	2
 55143  015FDA  6F9B               	movwf	(_mediaInformation+3)& (0+255),b
 55144  015FDC  0E00               	movlw	0
 55145  015FDE  6F9A               	movwf	(_mediaInformation+2)& (0+255),b
 55146                           
 55147                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 55148  015FE0  0E00               	movlw	0
 55149  015FE2  6F98               	movwf	_mediaInformation& (0+255),b
 55150                           
 55151                           ; BSR set to: 2
 55152                           ;external_flash.c: 15: return &mediaInformation;
 55153  015FE4  0E98               	movlw	low _mediaInformation
 55154  015FE6  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 55155  015FE8  0E02               	movlw	high _mediaInformation
 55156  015FEA  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 55157  015FEC  0012               	return	
 55158  015FEE                     __end_ofi2_ExternalFlash_MediaInitialize:
 55159                           	opt stack 0
 55160                           tosu	equ	0xFFF
 55161                           tosh	equ	0xFFE
 55162                           tosl	equ	0xFFD
 55163                           pclatu	equ	0xFFB
 55164                           pclath	equ	0xFFA
 55165                           tblptru	equ	0xFF8
 55166                           tblptrh	equ	0xFF7
 55167                           tblptrl	equ	0xFF6
 55168                           tablat	equ	0xFF5
 55169                           prodh	equ	0xFF4
 55170                           prodl	equ	0xFF3
 55171                           intcon	equ	0xFF2
 55172                           indf0	equ	0xFEF
 55173                           postinc0	equ	0xFEE
 55174                           fsr0h	equ	0xFEA
 55175                           fsr0l	equ	0xFE9
 55176                           wreg	equ	0xFE8
 55177                           indf1	equ	0xFE7
 55178                           postinc1	equ	0xFE6
 55179                           postdec1	equ	0xFE5
 55180                           plusw1	equ	0xFE3
 55181                           fsr1h	equ	0xFE2
 55182                           fsr1l	equ	0xFE1
 55183                           indf2	equ	0xFDF
 55184                           postinc2	equ	0xFDE
 55185                           postdec2	equ	0xFDD
 55186                           plusw2	equ	0xFDB
 55187                           fsr2h	equ	0xFDA
 55188                           fsr2l	equ	0xFD9
 55189                           status	equ	0xFD8
 55190                           
 55191 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 55192 ;; Defined at:
 55193 ;;		line 29 in file "external_flash.c"
 55194 ;; Parameters:    Size  Location     Type
 55195 ;;  config          2    0[COMRAM] PTR void 
 55196 ;;		 -> NULL(0), 
 55197 ;; Auto vars:     Size  Location     Type
 55198 ;;		None
 55199 ;; Return value:  Size  Location     Type
 55200 ;;                  1    wreg      unsigned char 
 55201 ;; Registers used:
 55202 ;;		wreg
 55203 ;; Tracked objects:
 55204 ;;		On entry : 0/0
 55205 ;;		On exit  : 0/0
 55206 ;;		Unchanged: 0/0
 55207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55212 ;;Total ram usage:        2 bytes
 55213 ;; Hardware stack levels used:    1
 55214 ;; This function calls:
 55215 ;;		Nothing
 55216 ;; This function is called by:
 55217 ;;		_USBMSDInit
 55218 ;;		_MSDProcessCommand
 55219 ;; This function uses a non-reentrant model
 55220 ;;
 55221                           
 55222                           	psect	text234
 55223  016128                     __ptext234:
 55224                           	opt stack 0
 55225  016128                     i2_ExternalFlash_MediaDetect:
 55226                           	opt stack 13
 55227                           
 55228                           ;external_flash.c: 31: return 1;
 55229                           
 55230                           ; BSR set to: 2
 55231                           ;incstack = 0
 55232  016128  0E01               	movlw	1
 55233  01612A  0012               	return	
 55234  01612C                     __end_ofi2_ExternalFlash_MediaDetect:
 55235                           	opt stack 0
 55236                           tosu	equ	0xFFF
 55237                           tosh	equ	0xFFE
 55238                           tosl	equ	0xFFD
 55239                           pclatu	equ	0xFFB
 55240                           pclath	equ	0xFFA
 55241                           tblptru	equ	0xFF8
 55242                           tblptrh	equ	0xFF7
 55243                           tblptrl	equ	0xFF6
 55244                           tablat	equ	0xFF5
 55245                           prodh	equ	0xFF4
 55246                           prodl	equ	0xFF3
 55247                           intcon	equ	0xFF2
 55248                           indf0	equ	0xFEF
 55249                           postinc0	equ	0xFEE
 55250                           fsr0h	equ	0xFEA
 55251                           fsr0l	equ	0xFE9
 55252                           wreg	equ	0xFE8
 55253                           indf1	equ	0xFE7
 55254                           postinc1	equ	0xFE6
 55255                           postdec1	equ	0xFE5
 55256                           plusw1	equ	0xFE3
 55257                           fsr1h	equ	0xFE2
 55258                           fsr1l	equ	0xFE1
 55259                           indf2	equ	0xFDF
 55260                           postinc2	equ	0xFDE
 55261                           postdec2	equ	0xFDD
 55262                           plusw2	equ	0xFDB
 55263                           fsr2h	equ	0xFDA
 55264                           fsr2l	equ	0xFD9
 55265                           status	equ	0xFD8
 55266                           
 55267 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 55268 ;; Defined at:
 55269 ;;		line 46 in file "app_device_custom_hid.c"
 55270 ;; Parameters:    Size  Location     Type
 55271 ;;		None
 55272 ;; Auto vars:     Size  Location     Type
 55273 ;;		None
 55274 ;; Return value:  Size  Location     Type
 55275 ;;                  1    wreg      void 
 55276 ;; Registers used:
 55277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55278 ;; Tracked objects:
 55279 ;;		On entry : 0/0
 55280 ;;		On exit  : 0/0
 55281 ;;		Unchanged: 0/0
 55282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55287 ;;Total ram usage:        0 bytes
 55288 ;; Hardware stack levels used:    1
 55289 ;; Hardware stack levels required when called:    2
 55290 ;; This function calls:
 55291 ;;		_USBEnableEndpoint
 55292 ;;		i2_USBTransferOnePacket
 55293 ;; This function is called by:
 55294 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 55295 ;; This function uses a non-reentrant model
 55296 ;;
 55297                           
 55298                           	psect	text235
 55299  015A8E                     __ptext235:
 55300                           	opt stack 0
 55301  015A8E                     _APP_DeviceCustomHIDInitialize:
 55302                           	opt stack 13
 55303                           
 55304                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 55305                           
 55306                           ;incstack = 0
 55307  015A8E  0E00               	movlw	0
 55308  015A90  0101               	movlb	1	; () banked
 55309  015A92  6F39               	movwf	_USBInHandle& (0+255),b
 55310  015A94  0E00               	movlw	0
 55311  015A96  6F3A               	movwf	(_USBInHandle+1)& (0+255),b
 55312                           
 55313                           ; BSR set to: 1
 55314                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 55315  015A98  0E1E               	movlw	30
 55316  015A9A  6E09               	movwf	USBEnableEndpoint@options,c
 55317  015A9C  0E01               	movlw	1
 55318  015A9E  EC32  F0AC         	call	_USBEnableEndpoint
 55319                           
 55320                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 55321  015AA2  0E00               	movlw	0
 55322  015AA4  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55323  015AA6  0E80               	movlw	low _ReceivedDataBuffer
 55324  015AA8  6E02               	movwf	i2USBTransferOnePacket@data,c
 55325  015AAA  0E03               	movlw	high _ReceivedDataBuffer
 55326  015AAC  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55327  015AAE  0E40               	movlw	64
 55328  015AB0  6E04               	movwf	i2USBTransferOnePacket@len,c
 55329  015AB2  0E01               	movlw	1
 55330  015AB4  ECC4  F08B         	call	i2_USBTransferOnePacket
 55331  015AB8  C001  F13B         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 55332  015ABC  C002  F13C         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 55333  015AC0  0012               	return		;funcret
 55334  015AC2                     __end_of_APP_DeviceCustomHIDInitialize:
 55335                           	opt stack 0
 55336                           tosu	equ	0xFFF
 55337                           tosh	equ	0xFFE
 55338                           tosl	equ	0xFFD
 55339                           pclatu	equ	0xFFB
 55340                           pclath	equ	0xFFA
 55341                           tblptru	equ	0xFF8
 55342                           tblptrh	equ	0xFF7
 55343                           tblptrl	equ	0xFF6
 55344                           tablat	equ	0xFF5
 55345                           prodh	equ	0xFF4
 55346                           prodl	equ	0xFF3
 55347                           intcon	equ	0xFF2
 55348                           indf0	equ	0xFEF
 55349                           postinc0	equ	0xFEE
 55350                           fsr0h	equ	0xFEA
 55351                           fsr0l	equ	0xFE9
 55352                           wreg	equ	0xFE8
 55353                           indf1	equ	0xFE7
 55354                           postinc1	equ	0xFE6
 55355                           postdec1	equ	0xFE5
 55356                           plusw1	equ	0xFE3
 55357                           fsr1h	equ	0xFE2
 55358                           fsr1l	equ	0xFE1
 55359                           indf2	equ	0xFDF
 55360                           postinc2	equ	0xFDE
 55361                           postdec2	equ	0xFDD
 55362                           plusw2	equ	0xFDB
 55363                           fsr2h	equ	0xFDA
 55364                           fsr2l	equ	0xFD9
 55365                           status	equ	0xFD8
 55366                           
 55367 ;; *************** function i2_USBTransferOnePacket *****************
 55368 ;; Defined at:
 55369 ;;		line 995 in file "usb_device.c"
 55370 ;; Parameters:    Size  Location     Type
 55371 ;;  ep              1    wreg     unsigned char 
 55372 ;;  dir             1    0[COMRAM] unsigned char 
 55373 ;;  data            2    1[COMRAM] PTR unsigned char 
 55374 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 55375 ;;		 -> msd_cbw(31), NULL(0), 
 55376 ;;  len             1    3[COMRAM] unsigned char 
 55377 ;; Auto vars:     Size  Location     Type
 55378 ;;  ep              1    8[COMRAM] unsigned char 
 55379 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 55380 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 55381 ;; Return value:  Size  Location     Type
 55382 ;;                  2    0[COMRAM] PTR void 
 55383 ;; Registers used:
 55384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55385 ;; Tracked objects:
 55386 ;;		On entry : 0/0
 55387 ;;		On exit  : 0/0
 55388 ;;		Unchanged: 0/0
 55389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55391 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55392 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55393 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55394 ;;Total ram usage:       11 bytes
 55395 ;; Hardware stack levels used:    1
 55396 ;; This function calls:
 55397 ;;		Nothing
 55398 ;; This function is called by:
 55399 ;;		_USBMSDInit
 55400 ;;		_USBCheckMSDRequest
 55401 ;;		_MSDTransferTerminated
 55402 ;;		_APP_DeviceCustomHIDInitialize
 55403 ;; This function uses a non-reentrant model
 55404 ;;
 55405                           
 55406                           	psect	text236
 55407  011788                     __ptext236:
 55408                           	opt stack 0
 55409  011788                     i2_USBTransferOnePacket:
 55410                           	opt stack 14
 55411                           
 55412                           ;incstack = 0
 55413                           ;i2USBTransferOnePacket@ep stored from wreg
 55414  011788  6E09               	movwf	i2USBTransferOnePacket@ep,c
 55415                           
 55416                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 55417  01178A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 55418  01178C  B4D8               	btfsc	status,2,c
 55419  01178E  D007               	goto	i2l184
 55420                           
 55421                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 55422  011790  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55423  011792  0D02               	mullw	2
 55424  011794  0E0F               	movlw	low _pBDTEntryIn
 55425  011796  24F3               	addwf	prodl,w,c
 55426  011798  6ED9               	movwf	fsr2l,c
 55427  01179A  0E01               	movlw	high _pBDTEntryIn
 55428  01179C  D006               	goto	L81
 55429  01179E                     i2l184:
 55430                           
 55431                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 55432  01179E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55433  0117A0  0D02               	mullw	2
 55434  0117A2  0E15               	movlw	low _pBDTEntryOut
 55435  0117A4  24F3               	addwf	prodl,w,c
 55436  0117A6  6ED9               	movwf	fsr2l,c
 55437  0117A8  0E01               	movlw	high _pBDTEntryOut
 55438  0117AA                     L81:
 55439  0117AA  20F4               	addwfc	prodh,w,c
 55440  0117AC  6EDA               	movwf	fsr2h,c
 55441  0117AE  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 55442  0117B2  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 55443                           
 55444                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 55445  0117B6  500A               	movf	i2USBTransferOnePacket@handle,w,c
 55446  0117B8  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 55447  0117BA  A4D8               	btfss	status,2,c
 55448  0117BC  D005               	goto	i2l186
 55449                           
 55450                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 55451  0117BE  0E00               	movlw	0
 55452  0117C0  6E01               	movwf	?i2_USBTransferOnePacket,c
 55453  0117C2  0E00               	movlw	0
 55454  0117C4  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 55455  0117C6  0012               	return	
 55456  0117C8                     i2l186:
 55457                           
 55458                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 55459  0117C8  EE20 F002          	lfsr	2,2
 55460  0117CC  500A               	movf	i2USBTransferOnePacket@handle,w,c
 55461  0117CE  26D9               	addwf	fsr2l,f,c
 55462  0117D0  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 55463  0117D2  22DA               	addwfc	fsr2h,f,c
 55464  0117D4  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 55465  0117D8  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 55466                           
 55467                           ;usb_device.c: 1030: handle->CNT = len;
 55468  0117DC  EE20 F001          	lfsr	2,1
 55469  0117E0  500A               	movf	i2USBTransferOnePacket@handle,w,c
 55470  0117E2  26D9               	addwf	fsr2l,f,c
 55471  0117E4  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 55472  0117E6  22DA               	addwfc	fsr2h,f,c
 55473  0117E8  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 55474                           
 55475                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 55476  0117EC  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55477  0117F0  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55478  0117F4  0E40               	movlw	64
 55479  0117F6  16DF               	andwf	indf2,f,c
 55480                           
 55481                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 55482  0117F8  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55483  0117FC  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55484  011800  0E00               	movlw	0
 55485  011802  86DB               	bsf	plusw2,3,c
 55486                           
 55487                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 55488  011804  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55489  011808  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55490  01180C  0E00               	movlw	0
 55491  01180E  8EDB               	bsf	plusw2,7,c
 55492                           
 55493                           ;usb_device.c: 1036: if(dir != 0)
 55494  011810  5001               	movf	i2USBTransferOnePacket@dir,w,c
 55495  011812  B4D8               	btfsc	status,2,c
 55496  011814  D018               	goto	i2l188
 55497                           
 55498                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 55499  011816  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55500  011818  0D02               	mullw	2
 55501  01181A  0E0F               	movlw	low _pBDTEntryIn
 55502  01181C  24F3               	addwf	prodl,w,c
 55503  01181E  6ED9               	movwf	fsr2l,c
 55504  011820  0E01               	movlw	high _pBDTEntryIn
 55505  011822  20F4               	addwfc	prodh,w,c
 55506  011824  6EDA               	movwf	fsr2h,c
 55507  011826  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55508  01182A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55509  01182E  0E04               	movlw	4
 55510  011830  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55511  011832  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55512  011834  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55513  011836  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55514  011838  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55515  01183A  0D02               	mullw	2
 55516  01183C  0E0F               	movlw	low _pBDTEntryIn
 55517  01183E  24F3               	addwf	prodl,w,c
 55518  011840  6ED9               	movwf	fsr2l,c
 55519  011842  0E01               	movlw	high _pBDTEntryIn
 55520  011844  D017               	goto	L82
 55521  011846                     i2l188:
 55522                           
 55523                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 55524  011846  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55525  011848  0D02               	mullw	2
 55526  01184A  0E15               	movlw	low _pBDTEntryOut
 55527  01184C  24F3               	addwf	prodl,w,c
 55528  01184E  6ED9               	movwf	fsr2l,c
 55529  011850  0E01               	movlw	high _pBDTEntryOut
 55530  011852  20F4               	addwfc	prodh,w,c
 55531  011854  6EDA               	movwf	fsr2h,c
 55532  011856  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55533  01185A  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55534  01185E  0E04               	movlw	4
 55535  011860  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55536  011862  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55537  011864  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55538  011866  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55539  011868  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55540  01186A  0D02               	mullw	2
 55541  01186C  0E15               	movlw	low _pBDTEntryOut
 55542  01186E  24F3               	addwf	prodl,w,c
 55543  011870  6ED9               	movwf	fsr2l,c
 55544  011872  0E01               	movlw	high _pBDTEntryOut
 55545  011874                     L82:
 55546  011874  20F4               	addwfc	prodh,w,c
 55547  011876  6EDA               	movwf	fsr2h,c
 55548  011878  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 55549  01187C  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 55550                           
 55551                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 55552  011880  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 55553  011884  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 55554  011888  0012               	return	
 55555  01188A                     __end_ofi2_USBTransferOnePacket:
 55556                           	opt stack 0
 55557                           tosu	equ	0xFFF
 55558                           tosh	equ	0xFFE
 55559                           tosl	equ	0xFFD
 55560                           pclatu	equ	0xFFB
 55561                           pclath	equ	0xFFA
 55562                           tblptru	equ	0xFF8
 55563                           tblptrh	equ	0xFF7
 55564                           tblptrl	equ	0xFF6
 55565                           tablat	equ	0xFF5
 55566                           prodh	equ	0xFF4
 55567                           prodl	equ	0xFF3
 55568                           intcon	equ	0xFF2
 55569                           indf0	equ	0xFEF
 55570                           postinc0	equ	0xFEE
 55571                           fsr0h	equ	0xFEA
 55572                           fsr0l	equ	0xFE9
 55573                           wreg	equ	0xFE8
 55574                           indf1	equ	0xFE7
 55575                           postinc1	equ	0xFE6
 55576                           postdec1	equ	0xFE5
 55577                           plusw1	equ	0xFE3
 55578                           fsr1h	equ	0xFE2
 55579                           fsr1l	equ	0xFE1
 55580                           indf2	equ	0xFDF
 55581                           postinc2	equ	0xFDE
 55582                           postdec2	equ	0xFDD
 55583                           plusw2	equ	0xFDB
 55584                           fsr2h	equ	0xFDA
 55585                           fsr2l	equ	0xFD9
 55586                           status	equ	0xFD8
 55587                           
 55588 ;; *************** function _USBEnableEndpoint *****************
 55589 ;; Defined at:
 55590 ;;		line 878 in file "usb_device.c"
 55591 ;; Parameters:    Size  Location     Type
 55592 ;;  ep              1    wreg     unsigned char 
 55593 ;;  options         1    8[COMRAM] unsigned char 
 55594 ;; Auto vars:     Size  Location     Type
 55595 ;;  ep              1   11[COMRAM] unsigned char 
 55596 ;;  p               2    9[COMRAM] PTR unsigned char 
 55597 ;;		 -> UEP0(1), 
 55598 ;; Return value:  Size  Location     Type
 55599 ;;                  1    wreg      void 
 55600 ;; Registers used:
 55601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55602 ;; Tracked objects:
 55603 ;;		On entry : 0/0
 55604 ;;		On exit  : 0/0
 55605 ;;		Unchanged: 0/0
 55606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55607 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55608 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55611 ;;Total ram usage:        4 bytes
 55612 ;; Hardware stack levels used:    1
 55613 ;; Hardware stack levels required when called:    1
 55614 ;; This function calls:
 55615 ;;		_USBConfigureEndpoint
 55616 ;; This function is called by:
 55617 ;;		_APP_DeviceCustomHIDInitialize
 55618 ;;		_APP_DeviceMSDInitialize
 55619 ;; This function uses a non-reentrant model
 55620 ;;
 55621                           
 55622                           	psect	text237
 55623  015864                     __ptext237:
 55624                           	opt stack 0
 55625  015864                     _USBEnableEndpoint:
 55626                           	opt stack 13
 55627                           
 55628                           ;incstack = 0
 55629                           ;USBEnableEndpoint@ep stored from wreg
 55630  015864  6E0C               	movwf	USBEnableEndpoint@ep,c
 55631                           
 55632                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 55633  015866  A409               	btfss	USBEnableEndpoint@options,2,c
 55634  015868  D005               	goto	i2l179
 55635                           
 55636                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 55637  01586A  0E00               	movlw	0
 55638  01586C  6E01               	movwf	USBConfigureEndpoint@direction,c
 55639  01586E  500C               	movf	USBEnableEndpoint@ep,w,c
 55640  015870  EC80  F09E         	call	_USBConfigureEndpoint
 55641  015874                     i2l179:
 55642                           
 55643                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 55644  015874  A209               	btfss	USBEnableEndpoint@options,1,c
 55645  015876  D005               	goto	i2l180
 55646                           
 55647                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 55648  015878  0E01               	movlw	1
 55649  01587A  6E01               	movwf	USBConfigureEndpoint@direction,c
 55650  01587C  500C               	movf	USBEnableEndpoint@ep,w,c
 55651  01587E  EC80  F09E         	call	_USBConfigureEndpoint
 55652  015882                     i2l180:
 55653                           
 55654                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 55655  015882  500C               	movf	USBEnableEndpoint@ep,w,c
 55656  015884  0D01               	mullw	1
 55657  015886  0E26               	movlw	38
 55658  015888  24F3               	addwf	prodl,w,c
 55659  01588A  6E0A               	movwf	USBEnableEndpoint@p,c
 55660  01588C  0E0F               	movlw	15
 55661  01588E  20F4               	addwfc	prodh,w,c
 55662  015890  6E0B               	movwf	USBEnableEndpoint@p+1,c
 55663                           
 55664                           ;usb_device.c: 901: *p = options;
 55665  015892  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 55666  015896  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 55667  01589A  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 55668  01589E  0012               	return		;funcret
 55669  0158A0                     __end_of_USBEnableEndpoint:
 55670                           	opt stack 0
 55671                           tosu	equ	0xFFF
 55672                           tosh	equ	0xFFE
 55673                           tosl	equ	0xFFD
 55674                           pclatu	equ	0xFFB
 55675                           pclath	equ	0xFFA
 55676                           tblptru	equ	0xFF8
 55677                           tblptrh	equ	0xFF7
 55678                           tblptrl	equ	0xFF6
 55679                           tablat	equ	0xFF5
 55680                           prodh	equ	0xFF4
 55681                           prodl	equ	0xFF3
 55682                           intcon	equ	0xFF2
 55683                           indf0	equ	0xFEF
 55684                           postinc0	equ	0xFEE
 55685                           fsr0h	equ	0xFEA
 55686                           fsr0l	equ	0xFE9
 55687                           wreg	equ	0xFE8
 55688                           indf1	equ	0xFE7
 55689                           postinc1	equ	0xFE6
 55690                           postdec1	equ	0xFE5
 55691                           plusw1	equ	0xFE3
 55692                           fsr1h	equ	0xFE2
 55693                           fsr1l	equ	0xFE1
 55694                           indf2	equ	0xFDF
 55695                           postinc2	equ	0xFDE
 55696                           postdec2	equ	0xFDD
 55697                           plusw2	equ	0xFDB
 55698                           fsr2h	equ	0xFDA
 55699                           fsr2l	equ	0xFD9
 55700                           status	equ	0xFD8
 55701                           
 55702 ;; *************** function _USBConfigureEndpoint *****************
 55703 ;; Defined at:
 55704 ;;		line 1545 in file "usb_device.c"
 55705 ;; Parameters:    Size  Location     Type
 55706 ;;  EPNum           1    wreg     unsigned char 
 55707 ;;  direction       1    0[COMRAM] unsigned char 
 55708 ;; Auto vars:     Size  Location     Type
 55709 ;;  EPNum           1    5[COMRAM] unsigned char 
 55710 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 55711 ;;		 -> BDT(48), 
 55712 ;; Return value:  Size  Location     Type
 55713 ;;                  1    wreg      void 
 55714 ;; Registers used:
 55715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55716 ;; Tracked objects:
 55717 ;;		On entry : 0/0
 55718 ;;		On exit  : 0/0
 55719 ;;		Unchanged: 0/0
 55720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55721 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55722 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55725 ;;Total ram usage:        8 bytes
 55726 ;; Hardware stack levels used:    1
 55727 ;; This function calls:
 55728 ;;		Nothing
 55729 ;; This function is called by:
 55730 ;;		_USBEnableEndpoint
 55731 ;; This function uses a non-reentrant model
 55732 ;;
 55733                           
 55734                           	psect	text238
 55735  013D00                     __ptext238:
 55736                           	opt stack 0
 55737  013D00                     _USBConfigureEndpoint:
 55738                           	opt stack 13
 55739                           
 55740                           ;incstack = 0
 55741                           ;USBConfigureEndpoint@EPNum stored from wreg
 55742  013D00  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 55743                           
 55744                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 55745  013D02  0E00               	movlw	0
 55746  013D04  6E07               	movwf	USBConfigureEndpoint@handle,c
 55747  013D06  0E0D               	movlw	13
 55748  013D08  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 55749                           
 55750                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 55751  013D0A  5001               	movf	USBConfigureEndpoint@direction,w,c
 55752  013D0C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 55753  013D0E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 55754  013D10  90D8               	bcf	status,0,c
 55755  013D12  3602               	rlcf	??_USBConfigureEndpoint,f,c
 55756  013D14  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 55757  013D16  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55758  013D18  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 55759  013D1A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 55760  013D1C  90D8               	bcf	status,0,c
 55761  013D1E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55762  013D20  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55763  013D22  90D8               	bcf	status,0,c
 55764  013D24  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55765  013D26  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55766  013D28  5002               	movf	??_USBConfigureEndpoint,w,c
 55767  013D2A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 55768  013D2C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 55769  013D2E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 55770  013D30  90D8               	bcf	status,0,c
 55771  013D32  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55772  013D34  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55773  013D36  90D8               	bcf	status,0,c
 55774  013D38  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55775  013D3A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55776  013D3C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 55777  013D3E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 55778  013D40  5005               	movf	??_USBConfigureEndpoint+3,w,c
 55779  013D42  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 55780                           
 55781                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 55782  013D44  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55783  013D48  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55784  013D4C  9EDF               	bcf	indf2,7,c
 55785                           
 55786                           ;usb_device.c: 1559: if(direction == 0)
 55787  013D4E  5001               	movf	USBConfigureEndpoint@direction,w,c
 55788  013D50  A4D8               	btfss	status,2,c
 55789  013D52  D007               	goto	i2l226
 55790                           
 55791                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 55792  013D54  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55793  013D56  0D02               	mullw	2
 55794  013D58  0E15               	movlw	low _pBDTEntryOut
 55795  013D5A  24F3               	addwf	prodl,w,c
 55796  013D5C  6ED9               	movwf	fsr2l,c
 55797  013D5E  0E01               	movlw	high _pBDTEntryOut
 55798  013D60  D006               	goto	L83
 55799  013D62                     i2l226:
 55800                           
 55801                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 55802  013D62  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55803  013D64  0D02               	mullw	2
 55804  013D66  0E0F               	movlw	low _pBDTEntryIn
 55805  013D68  24F3               	addwf	prodl,w,c
 55806  013D6A  6ED9               	movwf	fsr2l,c
 55807  013D6C  0E01               	movlw	high _pBDTEntryIn
 55808  013D6E                     L83:
 55809  013D6E  20F4               	addwfc	prodh,w,c
 55810  013D70  6EDA               	movwf	fsr2h,c
 55811  013D72  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 55812  013D76  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 55813                           
 55814                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 55815  013D7A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55816  013D7E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55817  013D82  9CDF               	bcf	indf2,6,c
 55818                           
 55819                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 55820  013D84  EE20 F004          	lfsr	2,4
 55821  013D88  5007               	movf	USBConfigureEndpoint@handle,w,c
 55822  013D8A  26D9               	addwf	fsr2l,f,c
 55823  013D8C  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 55824  013D8E  22DA               	addwfc	fsr2h,f,c
 55825  013D90  8CDF               	bsf	indf2,6,c
 55826  013D92  0012               	return		;funcret
 55827  013D94                     __end_of_USBConfigureEndpoint:
 55828                           	opt stack 0
 55829                           tosu	equ	0xFFF
 55830                           tosh	equ	0xFFE
 55831                           tosl	equ	0xFFD
 55832                           pclatu	equ	0xFFB
 55833                           pclath	equ	0xFFA
 55834                           tblptru	equ	0xFF8
 55835                           tblptrh	equ	0xFF7
 55836                           tblptrl	equ	0xFF6
 55837                           tablat	equ	0xFF5
 55838                           prodh	equ	0xFF4
 55839                           prodl	equ	0xFF3
 55840                           intcon	equ	0xFF2
 55841                           indf0	equ	0xFEF
 55842                           postinc0	equ	0xFEE
 55843                           fsr0h	equ	0xFEA
 55844                           fsr0l	equ	0xFE9
 55845                           wreg	equ	0xFE8
 55846                           indf1	equ	0xFE7
 55847                           postinc1	equ	0xFE6
 55848                           postdec1	equ	0xFE5
 55849                           plusw1	equ	0xFE3
 55850                           fsr1h	equ	0xFE2
 55851                           fsr1l	equ	0xFE1
 55852                           indf2	equ	0xFDF
 55853                           postinc2	equ	0xFDE
 55854                           postdec2	equ	0xFDD
 55855                           plusw2	equ	0xFDB
 55856                           fsr2h	equ	0xFDA
 55857                           fsr2l	equ	0xFD9
 55858                           status	equ	0xFD8
 55859                           
 55860 ;; *************** function _USBCtrlTrfOutHandler *****************
 55861 ;; Defined at:
 55862 ;;		line 2540 in file "usb_device.c"
 55863 ;; Parameters:    Size  Location     Type
 55864 ;;		None
 55865 ;; Auto vars:     Size  Location     Type
 55866 ;;		None
 55867 ;; Return value:  Size  Location     Type
 55868 ;;                  1    wreg      void 
 55869 ;; Registers used:
 55870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55871 ;; Tracked objects:
 55872 ;;		On entry : 0/0
 55873 ;;		On exit  : 0/0
 55874 ;;		Unchanged: 0/0
 55875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55880 ;;Total ram usage:        0 bytes
 55881 ;; Hardware stack levels used:    1
 55882 ;; Hardware stack levels required when called:    2
 55883 ;; This function calls:
 55884 ;;		_USBCtrlTrfRxService
 55885 ;; This function is called by:
 55886 ;;		_USBCtrlEPService
 55887 ;; This function uses a non-reentrant model
 55888 ;;
 55889                           
 55890                           	psect	text239
 55891  014B32                     __ptext239:
 55892                           	opt stack 0
 55893  014B32                     _USBCtrlTrfOutHandler:
 55894                           	opt stack 13
 55895                           
 55896                           ;usb_device.c: 2542: if(controlTransferState == 2)
 55897                           
 55898                           ;incstack = 0
 55899  014B32  0E02               	movlw	2
 55900  014B34  0100               	movlb	0	; () banked
 55901  014B36  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55902  014B38  A4D8               	btfss	status,2,c
 55903  014B3A  D003               	goto	i2l332
 55904                           
 55905                           ; BSR set to: 0
 55906                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 55907  014B3C  EC31  F089         	call	_USBCtrlTrfRxService	;wreg free
 55908                           
 55909                           ;usb_device.c: 2545: }
 55910  014B40  0012               	return	
 55911  014B42                     i2l332:
 55912                           
 55913                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 55914  014B42  0E00               	movlw	0
 55915  014B44  0100               	movlb	0	; () banked
 55916  014B46  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 55917                           
 55918                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 55919  014B48  0101               	movlb	1	; () banked
 55920  014B4A  5160               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 55921  014B4C  A4D8               	btfss	status,2,c
 55922  014B4E  D01F               	goto	i2l334
 55923                           
 55924                           ; BSR set to: 1
 55925                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 55926  014B50  EE20 F001          	lfsr	2,1
 55927  014B54  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55928  014B56  26D9               	addwf	fsr2l,f,c
 55929  014B58  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55930  014B5A  22DA               	addwfc	fsr2h,f,c
 55931  014B5C  0E08               	movlw	8
 55932  014B5E  6EDF               	movwf	indf2,c
 55933                           
 55934                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55935  014B60  EE20 F002          	lfsr	2,2
 55936  014B64  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55937  014B66  26D9               	addwf	fsr2l,f,c
 55938  014B68  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55939  014B6A  22DA               	addwfc	fsr2h,f,c
 55940  014B6C  0E30               	movlw	48
 55941  014B6E  6EDE               	movwf	postinc2,c
 55942  014B70  0E0D               	movlw	13
 55943  014B72  6EDD               	movwf	postdec2,c
 55944                           
 55945                           ; BSR set to: 1
 55946                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55947  014B74  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55948  014B78  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55949  014B7C  0E0C               	movlw	12
 55950  014B7E  6EDF               	movwf	indf2,c
 55951                           
 55952                           ; BSR set to: 1
 55953                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55954  014B80  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55955  014B84  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55956  014B88  0E00               	movlw	0
 55957  014B8A  8EDB               	bsf	plusw2,7,c
 55958                           
 55959                           ;usb_device.c: 2563: }
 55960  014B8C  0012               	return	
 55961  014B8E                     i2l334:
 55962                           
 55963                           ; BSR set to: 1
 55964                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 55965                           
 55966                           ; BSR set to: 1
 55967  014B8E  0E00               	movlw	0
 55968  014B90  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55969                           
 55970                           ; BSR set to: 1
 55971  014B92  0012               	return	
 55972  014B94                     __end_of_USBCtrlTrfOutHandler:
 55973                           	opt stack 0
 55974                           tosu	equ	0xFFF
 55975                           tosh	equ	0xFFE
 55976                           tosl	equ	0xFFD
 55977                           pclatu	equ	0xFFB
 55978                           pclath	equ	0xFFA
 55979                           tblptru	equ	0xFF8
 55980                           tblptrh	equ	0xFF7
 55981                           tblptrl	equ	0xFF6
 55982                           tablat	equ	0xFF5
 55983                           prodh	equ	0xFF4
 55984                           prodl	equ	0xFF3
 55985                           intcon	equ	0xFF2
 55986                           indf0	equ	0xFEF
 55987                           postinc0	equ	0xFEE
 55988                           fsr0h	equ	0xFEA
 55989                           fsr0l	equ	0xFE9
 55990                           wreg	equ	0xFE8
 55991                           indf1	equ	0xFE7
 55992                           postinc1	equ	0xFE6
 55993                           postdec1	equ	0xFE5
 55994                           plusw1	equ	0xFE3
 55995                           fsr1h	equ	0xFE2
 55996                           fsr1l	equ	0xFE1
 55997                           indf2	equ	0xFDF
 55998                           postinc2	equ	0xFDE
 55999                           postdec2	equ	0xFDD
 56000                           plusw2	equ	0xFDB
 56001                           fsr2h	equ	0xFDA
 56002                           fsr2l	equ	0xFD9
 56003                           status	equ	0xFD8
 56004                           
 56005 ;; *************** function _USBCtrlTrfRxService *****************
 56006 ;; Defined at:
 56007 ;;		line 1854 in file "usb_device.c"
 56008 ;; Parameters:    Size  Location     Type
 56009 ;;		None
 56010 ;; Auto vars:     Size  Location     Type
 56011 ;;  byteToRead      1    1[COMRAM] unsigned char 
 56012 ;;  i               1    0[COMRAM] unsigned char 
 56013 ;; Return value:  Size  Location     Type
 56014 ;;                  1    wreg      void 
 56015 ;; Registers used:
 56016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 56017 ;; Tracked objects:
 56018 ;;		On entry : 0/0
 56019 ;;		On exit  : 0/0
 56020 ;;		Unchanged: 0/0
 56021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56026 ;;Total ram usage:        2 bytes
 56027 ;; Hardware stack levels used:    1
 56028 ;; Hardware stack levels required when called:    1
 56029 ;; This function calls:
 56030 ;;		_USBCtrlEPAllowStatusStage
 56031 ;; This function is called by:
 56032 ;;		_USBCtrlTrfOutHandler
 56033 ;; This function uses a non-reentrant model
 56034 ;;
 56035                           
 56036                           	psect	text240
 56037  011262                     __ptext240:
 56038                           	opt stack 0
 56039  011262                     _USBCtrlTrfRxService:
 56040                           	opt stack 13
 56041                           
 56042                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 56043                           
 56044                           ;incstack = 0
 56045  011262  EE20 F001          	lfsr	2,1
 56046  011266  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 56047  011268  26D9               	addwf	fsr2l,f,c
 56048  01126A  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 56049  01126C  22DA               	addwfc	fsr2h,f,c
 56050  01126E  50DF               	movf	indf2,w,c
 56051  011270  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 56052                           
 56053                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 56054  011272  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 56055  011274  0101               	movlb	1	; () banked
 56056  011276  5D04               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 56057  011278  0E00               	movlw	0
 56058  01127A  5905               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 56059  01127C  A0D8               	btfss	status,0,c
 56060                           
 56061                           ; BSR set to: 1
 56062                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 56063  01127E  C104  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 56064                           
 56065                           ; BSR set to: 1
 56066                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 56067                           
 56068                           ; BSR set to: 1
 56069  011282  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 56070  011284  5F04               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 56071  011286  0E00               	movlw	0
 56072  011288  5B05               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 56073                           
 56074                           ; BSR set to: 1
 56075                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 56076  01128A  0E00               	movlw	0
 56077  01128C  6E01               	movwf	USBCtrlTrfRxService@i,c
 56078  01128E  D011               	goto	i2l260
 56079  011290                     
 56080                           ; BSR set to: 1
 56081                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 56082                           
 56083                           ; BSR set to: 1
 56084  011290  5001               	movf	USBCtrlTrfRxService@i,w,c
 56085  011292  0D01               	mullw	1
 56086  011294  0E38               	movlw	56
 56087  011296  24F3               	addwf	prodl,w,c
 56088  011298  6ED9               	movwf	fsr2l,c
 56089  01129A  0E0D               	movlw	13
 56090  01129C  20F4               	addwfc	prodh,w,c
 56091  01129E  6EDA               	movwf	fsr2h,c
 56092  0112A0  C100  FFE1         	movff	_outPipes,fsr1l	;volatile
 56093  0112A4  C101  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 56094  0112A8  CFDF FFE7          	movff	indf2,indf1
 56095                           
 56096                           ; BSR set to: 1
 56097  0112AC  4B00               	infsnz	_outPipes& (0+255),f,b	;volatile
 56098  0112AE  2B01               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 56099                           
 56100                           ; BSR set to: 1
 56101  0112B0  2A01               	incf	USBCtrlTrfRxService@i,f,c
 56102  0112B2                     i2l260:
 56103                           
 56104                           ; BSR set to: 1
 56105                           
 56106                           ; BSR set to: 1
 56107  0112B2  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 56108  0112B4  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 56109  0112B6  A0D8               	btfss	status,0,c
 56110  0112B8  D7EB               	goto	i2l261
 56111                           
 56112                           ; BSR set to: 1
 56113                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 56114                           
 56115                           ; BSR set to: 1
 56116  0112BA  5104               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 56117  0112BC  1105               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 56118  0112BE  B4D8               	btfsc	status,2,c
 56119  0112C0  D032               	goto	i2l263
 56120                           
 56121                           ; BSR set to: 1
 56122                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 56123  0112C2  EE20 F001          	lfsr	2,1
 56124  0112C6  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56125  0112C8  26D9               	addwf	fsr2l,f,c
 56126  0112CA  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56127  0112CC  22DA               	addwfc	fsr2h,f,c
 56128  0112CE  0E08               	movlw	8
 56129  0112D0  6EDF               	movwf	indf2,c
 56130                           
 56131                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 56132  0112D2  EE20 F002          	lfsr	2,2
 56133  0112D6  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56134  0112D8  26D9               	addwf	fsr2l,f,c
 56135  0112DA  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56136  0112DC  22DA               	addwfc	fsr2h,f,c
 56137  0112DE  0E38               	movlw	56
 56138  0112E0  6EDE               	movwf	postinc2,c
 56139  0112E2  0E0D               	movlw	13
 56140  0112E4  6EDD               	movwf	postdec2,c
 56141                           
 56142                           ; BSR set to: 1
 56143                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 56144  0112E6  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56145  0112EA  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56146  0112EE  BCDF               	btfsc	indf2,6,c
 56147  0112F0  D00D               	goto	i2l264
 56148                           
 56149                           ; BSR set to: 1
 56150                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 56151  0112F2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56152  0112F6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56153  0112FA  0E48               	movlw	72
 56154  0112FC  6EDF               	movwf	indf2,c
 56155                           
 56156                           ; BSR set to: 1
 56157                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 56158  0112FE  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56159  011302  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56160  011306  0E00               	movlw	0
 56161  011308  8EDB               	bsf	plusw2,7,c
 56162                           
 56163                           ;usb_device.c: 1891: }
 56164  01130A  0012               	return	
 56165  01130C                     i2l264:
 56166                           
 56167                           ; BSR set to: 1
 56168                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 56169                           
 56170                           ; BSR set to: 1
 56171  01130C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56172  011310  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56173  011314  0E08               	movlw	8
 56174  011316  6EDF               	movwf	indf2,c
 56175                           
 56176                           ; BSR set to: 1
 56177                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 56178  011318  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56179  01131C  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56180  011320  0E00               	movlw	0
 56181  011322  8EDB               	bsf	plusw2,7,c
 56182                           
 56183                           ; BSR set to: 1
 56184                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 56185  011324  0012               	return	
 56186  011326                     i2l263:
 56187                           
 56188                           ; BSR set to: 1
 56189                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 56190                           
 56191                           ; BSR set to: 1
 56192  011326  EE20 F001          	lfsr	2,1
 56193  01132A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56194  01132C  26D9               	addwf	fsr2l,f,c
 56195  01132E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56196  011330  22DA               	addwfc	fsr2h,f,c
 56197  011332  0E08               	movlw	8
 56198  011334  6EDF               	movwf	indf2,c
 56199                           
 56200                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 56201  011336  EE20 F002          	lfsr	2,2
 56202  01133A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56203  01133C  26D9               	addwf	fsr2l,f,c
 56204  01133E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56205  011340  22DA               	addwfc	fsr2h,f,c
 56206  011342  0E30               	movlw	48
 56207  011344  6EDE               	movwf	postinc2,c
 56208  011346  0E0D               	movlw	13
 56209  011348  6EDD               	movwf	postdec2,c
 56210                           
 56211                           ; BSR set to: 1
 56212                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 56213  01134A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56214  01134E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56215  011352  0E04               	movlw	4
 56216  011354  6EDF               	movwf	indf2,c
 56217                           
 56218                           ; BSR set to: 1
 56219                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 56220  011356  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56221  01135A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56222  01135E  0E00               	movlw	0
 56223  011360  8EDB               	bsf	plusw2,7,c
 56224                           
 56225                           ; BSR set to: 1
 56226                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 56227                           
 56228                           ; BSR set to: 1
 56229                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 56230  011362  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 56231                           
 56232                           ; BSR set to: 1
 56233                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 56234  011364  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 56235  011366  A4D8               	btfss	status,2,c
 56236  011368  0012               	return	
 56237                           
 56238                           ; BSR set to: 1
 56239                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 56240  01136A  EC87  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 56241  01136E  0012               	return	
 56242  011370                     __end_of_USBCtrlTrfRxService:
 56243                           	opt stack 0
 56244                           tosu	equ	0xFFF
 56245                           tosh	equ	0xFFE
 56246                           tosl	equ	0xFFD
 56247                           pclatu	equ	0xFFB
 56248                           pclath	equ	0xFFA
 56249                           tblptru	equ	0xFF8
 56250                           tblptrh	equ	0xFF7
 56251                           tblptrl	equ	0xFF6
 56252                           tablat	equ	0xFF5
 56253                           prodh	equ	0xFF4
 56254                           prodl	equ	0xFF3
 56255                           intcon	equ	0xFF2
 56256                           indf0	equ	0xFEF
 56257                           postinc0	equ	0xFEE
 56258                           fsr0h	equ	0xFEA
 56259                           fsr0l	equ	0xFE9
 56260                           wreg	equ	0xFE8
 56261                           indf1	equ	0xFE7
 56262                           postinc1	equ	0xFE6
 56263                           postdec1	equ	0xFE5
 56264                           plusw1	equ	0xFE3
 56265                           fsr1h	equ	0xFE2
 56266                           fsr1l	equ	0xFE1
 56267                           indf2	equ	0xFDF
 56268                           postinc2	equ	0xFDE
 56269                           postdec2	equ	0xFDD
 56270                           plusw2	equ	0xFDB
 56271                           fsr2h	equ	0xFDA
 56272                           fsr2l	equ	0xFD9
 56273                           status	equ	0xFD8
 56274                           
 56275 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 56276 ;; Defined at:
 56277 ;;		line 1418 in file "usb_device.c"
 56278 ;; Parameters:    Size  Location     Type
 56279 ;;		None
 56280 ;; Auto vars:     Size  Location     Type
 56281 ;;		None
 56282 ;; Return value:  Size  Location     Type
 56283 ;;                  1    wreg      void 
 56284 ;; Registers used:
 56285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 56286 ;; Tracked objects:
 56287 ;;		On entry : 0/0
 56288 ;;		On exit  : 0/0
 56289 ;;		Unchanged: 0/0
 56290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56295 ;;Total ram usage:        0 bytes
 56296 ;; Hardware stack levels used:    1
 56297 ;; This function calls:
 56298 ;;		Nothing
 56299 ;; This function is called by:
 56300 ;;		_USBDeviceTasks
 56301 ;;		_USBCtrlEPServiceComplete
 56302 ;;		_USBCtrlTrfRxService
 56303 ;; This function uses a non-reentrant model
 56304 ;;
 56305                           
 56306                           	psect	text241
 56307  012D0E                     __ptext241:
 56308                           	opt stack 0
 56309  012D0E                     _USBCtrlEPAllowStatusStage:
 56310                           	opt stack 13
 56311                           
 56312                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 56313                           
 56314                           ;incstack = 0
 56315  012D0E  0101               	movlb	1	; () banked
 56316  012D10  515D               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 56317  012D12  A4D8               	btfss	status,2,c
 56318  012D14  0012               	return	
 56319                           
 56320                           ; BSR set to: 1
 56321                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 56322  012D16  0E01               	movlw	1
 56323  012D18  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 56324                           
 56325                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 56326  012D1A  515C               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 56327  012D1C  A4D8               	btfss	status,2,c
 56328  012D1E  0012               	return	
 56329                           
 56330                           ; BSR set to: 1
 56331                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 56332  012D20  0E01               	movlw	1
 56333  012D22  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 56334                           
 56335                           ; BSR set to: 1
 56336                           ;usb_device.c: 1434: if(controlTransferState == 2)
 56337  012D24  0E02               	movlw	2
 56338  012D26  0100               	movlb	0	; () banked
 56339  012D28  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 56340  012D2A  A4D8               	btfss	status,2,c
 56341  012D2C  D016               	goto	i2l214
 56342                           
 56343                           ; BSR set to: 0
 56344                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 56345  012D2E  0101               	movlb	1	; () banked
 56346  012D30  EE20 F001          	lfsr	2,1
 56347  012D34  510F               	movf	_pBDTEntryIn& (0+255),w,b
 56348  012D36  26D9               	addwf	fsr2l,f,c
 56349  012D38  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56350  012D3A  22DA               	addwfc	fsr2h,f,c
 56351  012D3C  0E00               	movlw	0
 56352  012D3E  6EDF               	movwf	indf2,c
 56353                           
 56354                           ; BSR set to: 1
 56355                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 56356  012D40  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56357  012D44  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56358  012D48  0E48               	movlw	72
 56359  012D4A  6EDF               	movwf	indf2,c
 56360                           
 56361                           ; BSR set to: 1
 56362                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56363  012D4C  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56364  012D50  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56365  012D54  0E00               	movlw	0
 56366  012D56  8EDB               	bsf	plusw2,7,c
 56367                           
 56368                           ;usb_device.c: 1439: }
 56369  012D58  0012               	return	
 56370  012D5A                     i2l214:
 56371                           
 56372                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 56373                           
 56374                           ; BSR set to: 1
 56375  012D5A  0100               	movlb	0	; () banked
 56376  012D5C  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 56377  012D5E  A4D8               	btfss	status,2,c
 56378  012D60  0012               	return	
 56379                           
 56380                           ; BSR set to: 0
 56381                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 56382  012D62  0E00               	movlw	0
 56383  012D64  0101               	movlb	1	; () banked
 56384  012D66  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 56385                           
 56386                           ; BSR set to: 1
 56387                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 56388  012D68  EE20 F001          	lfsr	2,1
 56389  012D6C  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 56390  012D6E  26D9               	addwf	fsr2l,f,c
 56391  012D70  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 56392  012D72  22DA               	addwfc	fsr2h,f,c
 56393  012D74  0E08               	movlw	8
 56394  012D76  6EDF               	movwf	indf2,c
 56395                           
 56396                           ; BSR set to: 1
 56397                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 56398  012D78  EE20 F002          	lfsr	2,2
 56399  012D7C  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 56400  012D7E  26D9               	addwf	fsr2l,f,c
 56401  012D80  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 56402  012D82  22DA               	addwfc	fsr2h,f,c
 56403  012D84  0E30               	movlw	48
 56404  012D86  6EDE               	movwf	postinc2,c
 56405  012D88  0E0D               	movlw	13
 56406  012D8A  6EDD               	movwf	postdec2,c
 56407                           
 56408                           ; BSR set to: 1
 56409                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 56410  012D8C  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56411  012D90  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56412  012D94  0E04               	movlw	4
 56413  012D96  6EDF               	movwf	indf2,c
 56414                           
 56415                           ; BSR set to: 1
 56416                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 56417  012D98  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56418  012D9C  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56419  012DA0  0E00               	movlw	0
 56420  012DA2  8EDB               	bsf	plusw2,7,c
 56421                           
 56422                           ; BSR set to: 1
 56423                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 56424  012DA4  0E01               	movlw	1
 56425  012DA6  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 56426                           
 56427                           ; BSR set to: 1
 56428                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 56429  012DA8  EE20 F001          	lfsr	2,1
 56430  012DAC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56431  012DAE  26D9               	addwf	fsr2l,f,c
 56432  012DB0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56433  012DB2  22DA               	addwfc	fsr2h,f,c
 56434  012DB4  0E08               	movlw	8
 56435  012DB6  6EDF               	movwf	indf2,c
 56436                           
 56437                           ; BSR set to: 1
 56438                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 56439  012DB8  EE20 F002          	lfsr	2,2
 56440  012DBC  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56441  012DBE  26D9               	addwf	fsr2l,f,c
 56442  012DC0  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56443  012DC2  22DA               	addwfc	fsr2h,f,c
 56444  012DC4  0E30               	movlw	48
 56445  012DC6  6EDE               	movwf	postinc2,c
 56446  012DC8  0E0D               	movlw	13
 56447  012DCA  6EDD               	movwf	postdec2,c
 56448                           
 56449                           ; BSR set to: 1
 56450                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 56451  012DCC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56452  012DD0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56453  012DD4  0E80               	movlw	128
 56454  012DD6  6EDF               	movwf	indf2,c
 56455                           
 56456                           ; BSR set to: 1
 56457                           
 56458                           ; BSR set to: 1
 56459                           
 56460                           ; BSR set to: 1
 56461  012DD8  0012               	return	
 56462  012DDA                     __end_of_USBCtrlEPAllowStatusStage:
 56463                           	opt stack 0
 56464                           tosu	equ	0xFFF
 56465                           tosh	equ	0xFFE
 56466                           tosl	equ	0xFFD
 56467                           pclatu	equ	0xFFB
 56468                           pclath	equ	0xFFA
 56469                           tblptru	equ	0xFF8
 56470                           tblptrh	equ	0xFF7
 56471                           tblptrl	equ	0xFF6
 56472                           tablat	equ	0xFF5
 56473                           prodh	equ	0xFF4
 56474                           prodl	equ	0xFF3
 56475                           intcon	equ	0xFF2
 56476                           indf0	equ	0xFEF
 56477                           postinc0	equ	0xFEE
 56478                           fsr0h	equ	0xFEA
 56479                           fsr0l	equ	0xFE9
 56480                           wreg	equ	0xFE8
 56481                           indf1	equ	0xFE7
 56482                           postinc1	equ	0xFE6
 56483                           postdec1	equ	0xFE5
 56484                           plusw1	equ	0xFE3
 56485                           fsr1h	equ	0xFE2
 56486                           fsr1l	equ	0xFE1
 56487                           indf2	equ	0xFDF
 56488                           postinc2	equ	0xFDE
 56489                           postdec2	equ	0xFDD
 56490                           plusw2	equ	0xFDB
 56491                           fsr2h	equ	0xFDA
 56492                           fsr2l	equ	0xFD9
 56493                           status	equ	0xFD8
 56494                           
 56495 ;; *************** function _USBCtrlTrfInHandler *****************
 56496 ;; Defined at:
 56497 ;;		line 2594 in file "usb_device.c"
 56498 ;; Parameters:    Size  Location     Type
 56499 ;;		None
 56500 ;; Auto vars:     Size  Location     Type
 56501 ;;  lastDTS         1    1[COMRAM] unsigned char 
 56502 ;; Return value:  Size  Location     Type
 56503 ;;                  1    wreg      void 
 56504 ;; Registers used:
 56505 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 56506 ;; Tracked objects:
 56507 ;;		On entry : 0/0
 56508 ;;		On exit  : 0/0
 56509 ;;		Unchanged: 0/0
 56510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56514 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56515 ;;Total ram usage:        1 bytes
 56516 ;; Hardware stack levels used:    1
 56517 ;; Hardware stack levels required when called:    1
 56518 ;; This function calls:
 56519 ;;		_USBCtrlTrfTxService
 56520 ;; This function is called by:
 56521 ;;		_USBCtrlEPService
 56522 ;; This function uses a non-reentrant model
 56523 ;;
 56524                           
 56525                           	psect	text242
 56526  012DDA                     __ptext242:
 56527                           	opt stack 0
 56528  012DDA                     _USBCtrlTrfInHandler:
 56529                           	opt stack 14
 56530                           
 56531                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 56532                           
 56533                           ;incstack = 0
 56534  012DDA  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56535  012DDE  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56536  012DE2  0101               	movlb	1	; () banked
 56537  012DE4  0E00               	movlw	0
 56538  012DE6  BCDF               	btfsc	indf2,6,c
 56539  012DE8  0E01               	movlw	1
 56540  012DEA  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 56541                           
 56542                           ; BSR set to: 1
 56543                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 56544  012DEC  0E04               	movlw	4
 56545  012DEE  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 56546  012DF0  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 56547  012DF2  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56548  012DF4  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 56549                           
 56550                           ; BSR set to: 1
 56551                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 56552  012DF6  0E08               	movlw	8
 56553  012DF8  185D               	xorwf	_USBDeviceState,w,c	;volatile
 56554  012DFA  A4D8               	btfss	status,2,c
 56555  012DFC  D00C               	goto	i2l341
 56556                           
 56557                           ; BSR set to: 1
 56558                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 56559  012DFE  010D               	movlb	13	; () banked
 56560  012E00  5132               	movf	50,w,b	;volatile
 56561  012E02  0B7F               	andlw	127
 56562  012E04  010F               	movlb	15	; () banked
 56563  012E06  6F38               	movwf	56,b	;volatile
 56564                           
 56565                           ; BSR set to: 15
 56566                           ;usb_device.c: 2609: if(UADDR != 0u)
 56567  012E08  5138               	movf	56,w,b	;volatile
 56568  012E0A  B4D8               	btfsc	status,2,c
 56569  012E0C  D002               	goto	i2l340
 56570                           
 56571                           ; BSR set to: 15
 56572                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 56573  012E0E  0E10               	movlw	16
 56574  012E10  D001               	goto	L84
 56575  012E12                     i2l340:
 56576                           
 56577                           ; BSR set to: 15
 56578                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 56579                           
 56580                           ; BSR set to: 15
 56581  012E12  0E04               	movlw	4
 56582  012E14                     L84:
 56583  012E14  6E5D               	movwf	_USBDeviceState,c	;volatile
 56584  012E16                     i2l341:
 56585                           
 56586                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 56587                           
 56588                           ; BSR set to: 15
 56589                           
 56590                           ; BSR set to: 15
 56591  012E16  0100               	movlb	0	; () banked
 56592  012E18  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 56593  012E1A  A4D8               	btfss	status,2,c
 56594  012E1C  D03C               	goto	i2l342
 56595                           
 56596                           ; BSR set to: 0
 56597                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 56598  012E1E  0101               	movlb	1	; () banked
 56599  012E20  EE20 F002          	lfsr	2,2
 56600  012E24  510F               	movf	_pBDTEntryIn& (0+255),w,b
 56601  012E26  26D9               	addwf	fsr2l,f,c
 56602  012E28  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56603  012E2A  22DA               	addwfc	fsr2h,f,c
 56604  012E2C  0E38               	movlw	56
 56605  012E2E  6EDE               	movwf	postinc2,c
 56606  012E30  0E0D               	movlw	13
 56607  012E32  6EDD               	movwf	postdec2,c
 56608                           
 56609                           ; BSR set to: 1
 56610                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 56611  012E34  EC51  F095         	call	_USBCtrlTrfTxService	;wreg free
 56612                           
 56613                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 56614  012E38  0E02               	movlw	2
 56615  012E3A  0101               	movlb	1	; () banked
 56616  012E3C  1964               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 56617  012E3E  A4D8               	btfss	status,2,c
 56618  012E40  D00D               	goto	i2l343
 56619                           
 56620                           ; BSR set to: 1
 56621                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 56622  012E42  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56623  012E46  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56624  012E4A  0E04               	movlw	4
 56625  012E4C  6EDF               	movwf	indf2,c
 56626                           
 56627                           ; BSR set to: 1
 56628                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56629  012E4E  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56630  012E52  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56631  012E56  0E00               	movlw	0
 56632  012E58  8EDB               	bsf	plusw2,7,c
 56633                           
 56634                           ;usb_device.c: 2635: }
 56635  012E5A  0012               	return	
 56636  012E5C                     i2l343:
 56637                           
 56638                           ; BSR set to: 1
 56639                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 56640                           
 56641                           ; BSR set to: 1
 56642  012E5C  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 56643  012E5E  A4D8               	btfss	status,2,c
 56644  012E60  D00D               	goto	i2l345
 56645                           
 56646                           ; BSR set to: 1
 56647                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 56648  012E62  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56649  012E66  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56650  012E6A  0E48               	movlw	72
 56651  012E6C  6EDF               	movwf	indf2,c
 56652                           
 56653                           ; BSR set to: 1
 56654                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56655  012E6E  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56656  012E72  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56657  012E76  0E00               	movlw	0
 56658  012E78  8EDB               	bsf	plusw2,7,c
 56659                           
 56660                           ;usb_device.c: 2642: }
 56661  012E7A  0012               	return	
 56662  012E7C                     i2l345:
 56663                           
 56664                           ; BSR set to: 1
 56665                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 56666                           
 56667                           ; BSR set to: 1
 56668  012E7C  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56669  012E80  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56670  012E84  0E08               	movlw	8
 56671  012E86  6EDF               	movwf	indf2,c
 56672                           
 56673                           ; BSR set to: 1
 56674                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56675  012E88  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56676  012E8C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56677  012E90  0E00               	movlw	0
 56678  012E92  8EDB               	bsf	plusw2,7,c
 56679                           
 56680                           ; BSR set to: 1
 56681                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 56682                           
 56683                           ; BSR set to: 1
 56684  012E94  0012               	return	
 56685  012E96                     i2l342:
 56686                           
 56687                           ; BSR set to: 0
 56688                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 56689  012E96  0101               	movlb	1	; () banked
 56690  012E98  BF03               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 56691                           
 56692                           ; BSR set to: 1
 56693                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 56694                           
 56695                           ; BSR set to: 1
 56696                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 56697  012E9A  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 56698                           
 56699                           ; BSR set to: 1
 56700                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 56701                           
 56702                           ; BSR set to: 1
 56703  012E9C  0E00               	movlw	0
 56704  012E9E  0100               	movlb	0	; () banked
 56705  012EA0  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 56706  012EA2  0012               	return	
 56707  012EA4                     __end_of_USBCtrlTrfInHandler:
 56708                           	opt stack 0
 56709                           tosu	equ	0xFFF
 56710                           tosh	equ	0xFFE
 56711                           tosl	equ	0xFFD
 56712                           pclatu	equ	0xFFB
 56713                           pclath	equ	0xFFA
 56714                           tblptru	equ	0xFF8
 56715                           tblptrh	equ	0xFF7
 56716                           tblptrl	equ	0xFF6
 56717                           tablat	equ	0xFF5
 56718                           prodh	equ	0xFF4
 56719                           prodl	equ	0xFF3
 56720                           intcon	equ	0xFF2
 56721                           indf0	equ	0xFEF
 56722                           postinc0	equ	0xFEE
 56723                           fsr0h	equ	0xFEA
 56724                           fsr0l	equ	0xFE9
 56725                           wreg	equ	0xFE8
 56726                           indf1	equ	0xFE7
 56727                           postinc1	equ	0xFE6
 56728                           postdec1	equ	0xFE5
 56729                           plusw1	equ	0xFE3
 56730                           fsr1h	equ	0xFE2
 56731                           fsr1l	equ	0xFE1
 56732                           indf2	equ	0xFDF
 56733                           postinc2	equ	0xFDE
 56734                           postdec2	equ	0xFDD
 56735                           plusw2	equ	0xFDB
 56736                           fsr2h	equ	0xFDA
 56737                           fsr2l	equ	0xFD9
 56738                           status	equ	0xFD8
 56739                           
 56740 ;; *************** function _USBCtrlTrfTxService *****************
 56741 ;; Defined at:
 56742 ;;		line 1773 in file "usb_device.c"
 56743 ;; Parameters:    Size  Location     Type
 56744 ;;		None
 56745 ;; Auto vars:     Size  Location     Type
 56746 ;;  byteToSend      1    0[COMRAM] unsigned char 
 56747 ;; Return value:  Size  Location     Type
 56748 ;;                  1    wreg      void 
 56749 ;; Registers used:
 56750 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 56751 ;; Tracked objects:
 56752 ;;		On entry : 0/0
 56753 ;;		On exit  : 0/0
 56754 ;;		Unchanged: 0/0
 56755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56760 ;;Total ram usage:        1 bytes
 56761 ;; Hardware stack levels used:    1
 56762 ;; This function calls:
 56763 ;;		Nothing
 56764 ;; This function is called by:
 56765 ;;		_USBCtrlEPAllowDataStage
 56766 ;;		_USBCtrlTrfInHandler
 56767 ;; This function uses a non-reentrant model
 56768 ;;
 56769                           
 56770                           	psect	text243
 56771  012AA2                     __ptext243:
 56772                           	opt stack 0
 56773  012AA2                     _USBCtrlTrfTxService:
 56774                           	opt stack 12
 56775                           
 56776                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 56777                           
 56778                           ;incstack = 0
 56779  012AA2  0E08               	movlw	8
 56780  012AA4  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 56781                           
 56782                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 56783  012AA6  0101               	movlb	1	; () banked
 56784  012AA8  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 56785  012AAA  E110               	bnz	i2l13054
 56786  012AAC  0E08               	movlw	8
 56787  012AAE  5D0D               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 56788  012AB0  B0D8               	btfsc	status,0,c
 56789  012AB2  D00C               	goto	i2l247
 56790                           
 56791                           ; BSR set to: 1
 56792                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 56793  012AB4  C10D  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 56794                           
 56795                           ; BSR set to: 1
 56796                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 56797  012AB8  5164               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 56798  012ABA  A4D8               	btfss	status,2,c
 56799  012ABC  D002               	goto	i2l245
 56800                           
 56801                           ; BSR set to: 1
 56802                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 56803  012ABE  0E01               	movlw	1
 56804  012AC0  D004               	goto	L85
 56805  012AC2                     i2l245:
 56806                           
 56807                           ; BSR set to: 1
 56808                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 56809                           
 56810                           ; BSR set to: 1
 56811  012AC2  0564               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 56812  012AC4  A4D8               	btfss	status,2,c
 56813  012AC6  D002               	goto	i2l247
 56814                           
 56815                           ; BSR set to: 1
 56816                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 56817  012AC8  0E02               	movlw	2
 56818  012ACA                     L85:
 56819  012ACA  6F64               	movwf	_shortPacketStatus& (0+255),b	;volatile
 56820  012ACC                     i2l247:
 56821  012ACC                     i2l13054:
 56822                           
 56823                           ; BSR set to: 1
 56824                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 56825  012ACC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56826  012ACE  5F0D               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 56827  012AD0  0E00               	movlw	0
 56828  012AD2  5B0E               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 56829                           
 56830                           ; BSR set to: 1
 56831                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 56832  012AD4  EE20 F001          	lfsr	2,1
 56833  012AD8  510F               	movf	_pBDTEntryIn& (0+255),w,b
 56834  012ADA  26D9               	addwf	fsr2l,f,c
 56835  012ADC  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56836  012ADE  22DA               	addwfc	fsr2h,f,c
 56837  012AE0  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 56838                           
 56839                           ; BSR set to: 1
 56840                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 56841  012AE4  0E38               	movlw	56
 56842  012AE6  6F45               	movwf	_pDst& (0+255),b
 56843  012AE8  0E0D               	movlw	13
 56844  012AEA  6F46               	movwf	(_pDst+1)& (0+255),b
 56845                           
 56846                           ; BSR set to: 1
 56847                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 56848  012AEC  A10C               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 56849  012AEE  D01D               	goto	i2l249
 56850  012AF0  D03C               	goto	i2l253
 56851  012AF2                     
 56852                           ; BSR set to: 1
 56853                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 56854                           
 56855                           ; BSR set to: 1
 56856  012AF2  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 56857  012AF6  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56858  012AFA  0E00               	movlw	low (__mediumconst shr (0+16))
 56859  012AFC  6EF8               	movwf	tblptru,c
 56860  012AFE  C145  FFD9         	movff	_pDst,fsr2l
 56861  012B02  C146  FFDA         	movff	_pDst+1,fsr2h
 56862  012B06  0E0E               	movlw	(high __ramtop+-1)
 56863  012B08  64F7               	cpfsgt	tblptrh,c
 56864  012B0A  D003               	bra	i2u1113_47
 56865  012B0C  0008               	tblrd		*
 56866  012B0E  50F5               	movf	tablat,w,c
 56867  012B10  D005               	bra	i2u1113_40
 56868  012B12                     i2u1113_47:
 56869  012B12  CFF6 FFE9          	movff	tblptrl,fsr0l
 56870  012B16  CFF7 FFEA          	movff	tblptrh,fsr0h
 56871  012B1A  50EF               	movf	indf0,w,c
 56872  012B1C                     i2u1113_40:
 56873  012B1C  6EDF               	movwf	indf2,c
 56874  012B1E  0101               	movlb	1	; () banked
 56875  012B20  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 56876  012B22  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 56877                           
 56878                           ; BSR set to: 1
 56879  012B24  4B45               	infsnz	_pDst& (0+255),f,b
 56880  012B26  2B46               	incf	(_pDst+1)& (0+255),f,b
 56881                           
 56882                           ; BSR set to: 1
 56883                           ;usb_device.c: 1816: byteToSend--;
 56884  012B28  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56885  012B2A                     i2l249:
 56886                           
 56887                           ; BSR set to: 1
 56888                           
 56889                           ; BSR set to: 1
 56890  012B2A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56891  012B2C  B4D8               	btfsc	status,2,c
 56892  012B2E  0012               	return	
 56893  012B30  D7E0               	goto	i2l250
 56894  012B32                     
 56895                           ; BSR set to: 1
 56896                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 56897                           
 56898                           ; BSR set to: 1
 56899  012B32  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 56900  012B36  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56901  012B3A  0E00               	movlw	low (__mediumconst shr (0+16))
 56902  012B3C  6EF8               	movwf	tblptru,c
 56903  012B3E  C145  FFD9         	movff	_pDst,fsr2l
 56904  012B42  C146  FFDA         	movff	_pDst+1,fsr2h
 56905  012B46  0E0E               	movlw	(high __ramtop+-1)
 56906  012B48  64F7               	cpfsgt	tblptrh,c
 56907  012B4A  D003               	bra	i2u1115_47
 56908  012B4C  0008               	tblrd		*
 56909  012B4E  50F5               	movf	tablat,w,c
 56910  012B50  D005               	bra	i2u1115_40
 56911  012B52                     i2u1115_47:
 56912  012B52  CFF6 FFE9          	movff	tblptrl,fsr0l
 56913  012B56  CFF7 FFEA          	movff	tblptrh,fsr0h
 56914  012B5A  50EF               	movf	indf0,w,c
 56915  012B5C                     i2u1115_40:
 56916  012B5C  6EDF               	movwf	indf2,c
 56917  012B5E  0101               	movlb	1	; () banked
 56918  012B60  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 56919  012B62  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 56920                           
 56921                           ; BSR set to: 1
 56922  012B64  4B45               	infsnz	_pDst& (0+255),f,b
 56923  012B66  2B46               	incf	(_pDst+1)& (0+255),f,b
 56924                           
 56925                           ; BSR set to: 1
 56926                           ;usb_device.c: 1824: byteToSend--;
 56927  012B68  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56928  012B6A                     i2l253:
 56929                           
 56930                           ; BSR set to: 1
 56931                           
 56932                           ; BSR set to: 1
 56933  012B6A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56934  012B6C  B4D8               	btfsc	status,2,c
 56935  012B6E  0012               	return	
 56936  012B70  D7E0               	goto	i2l254
 56937  012B72                     __end_of_USBCtrlTrfTxService:
 56938                           	opt stack 0
 56939                           tosu	equ	0xFFF
 56940                           tosh	equ	0xFFE
 56941                           tosl	equ	0xFFD
 56942                           pclatu	equ	0xFFB
 56943                           pclath	equ	0xFFA
 56944                           tblptru	equ	0xFF8
 56945                           tblptrh	equ	0xFF7
 56946                           tblptrl	equ	0xFF6
 56947                           tablat	equ	0xFF5
 56948                           prodh	equ	0xFF4
 56949                           prodl	equ	0xFF3
 56950                           intcon	equ	0xFF2
 56951                           indf0	equ	0xFEF
 56952                           postinc0	equ	0xFEE
 56953                           fsr0h	equ	0xFEA
 56954                           fsr0l	equ	0xFE9
 56955                           wreg	equ	0xFE8
 56956                           indf1	equ	0xFE7
 56957                           postinc1	equ	0xFE6
 56958                           postdec1	equ	0xFE5
 56959                           plusw1	equ	0xFE3
 56960                           fsr1h	equ	0xFE2
 56961                           fsr1l	equ	0xFE1
 56962                           indf2	equ	0xFDF
 56963                           postinc2	equ	0xFDE
 56964                           postdec2	equ	0xFDD
 56965                           plusw2	equ	0xFDB
 56966                           fsr2h	equ	0xFDA
 56967                           fsr2l	equ	0xFD9
 56968                           status	equ	0xFD8
 56969                           tosu	equ	0xFFF
 56970                           tosh	equ	0xFFE
 56971                           tosl	equ	0xFFD
 56972                           pclatu	equ	0xFFB
 56973                           pclath	equ	0xFFA
 56974                           tblptru	equ	0xFF8
 56975                           tblptrh	equ	0xFF7
 56976                           tblptrl	equ	0xFF6
 56977                           tablat	equ	0xFF5
 56978                           prodh	equ	0xFF4
 56979                           prodl	equ	0xFF3
 56980                           intcon	equ	0xFF2
 56981                           indf0	equ	0xFEF
 56982                           postinc0	equ	0xFEE
 56983                           fsr0h	equ	0xFEA
 56984                           fsr0l	equ	0xFE9
 56985                           wreg	equ	0xFE8
 56986                           indf1	equ	0xFE7
 56987                           postinc1	equ	0xFE6
 56988                           postdec1	equ	0xFE5
 56989                           plusw1	equ	0xFE3
 56990                           fsr1h	equ	0xFE2
 56991                           fsr1l	equ	0xFE1
 56992                           indf2	equ	0xFDF
 56993                           postinc2	equ	0xFDE
 56994                           postdec2	equ	0xFDD
 56995                           plusw2	equ	0xFDB
 56996                           fsr2h	equ	0xFDA
 56997                           fsr2l	equ	0xFD9
 56998                           status	equ	0xFD8
 56999                           
 57000                           	psect	text244
 57001  000000                     __ptext244:
 57002                           	opt stack 0
 57003                           tosu	equ	0xFFF
 57004                           tosh	equ	0xFFE
 57005                           tosl	equ	0xFFD
 57006                           pclatu	equ	0xFFB
 57007                           pclath	equ	0xFFA
 57008                           tblptru	equ	0xFF8
 57009                           tblptrh	equ	0xFF7
 57010                           tblptrl	equ	0xFF6
 57011                           tablat	equ	0xFF5
 57012                           prodh	equ	0xFF4
 57013                           prodl	equ	0xFF3
 57014                           intcon	equ	0xFF2
 57015                           indf0	equ	0xFEF
 57016                           postinc0	equ	0xFEE
 57017                           fsr0h	equ	0xFEA
 57018                           fsr0l	equ	0xFE9
 57019                           wreg	equ	0xFE8
 57020                           indf1	equ	0xFE7
 57021                           postinc1	equ	0xFE6
 57022                           postdec1	equ	0xFE5
 57023                           plusw1	equ	0xFE3
 57024                           fsr1h	equ	0xFE2
 57025                           fsr1l	equ	0xFE1
 57026                           indf2	equ	0xFDF
 57027                           postinc2	equ	0xFDE
 57028                           postdec2	equ	0xFDD
 57029                           plusw2	equ	0xFDB
 57030                           fsr2h	equ	0xFDA
 57031                           fsr2l	equ	0xFD9
 57032                           status	equ	0xFD8
 57033                           
 57034                           	psect	rparam
 57035  0000                     tosu	equ	0xFFF
 57036                           tosh	equ	0xFFE
 57037                           tosl	equ	0xFFD
 57038                           pclatu	equ	0xFFB
 57039                           pclath	equ	0xFFA
 57040                           tblptru	equ	0xFF8
 57041                           tblptrh	equ	0xFF7
 57042                           tblptrl	equ	0xFF6
 57043                           tablat	equ	0xFF5
 57044                           prodh	equ	0xFF4
 57045                           prodl	equ	0xFF3
 57046                           intcon	equ	0xFF2
 57047                           indf0	equ	0xFEF
 57048                           postinc0	equ	0xFEE
 57049                           fsr0h	equ	0xFEA
 57050                           fsr0l	equ	0xFE9
 57051                           wreg	equ	0xFE8
 57052                           indf1	equ	0xFE7
 57053                           postinc1	equ	0xFE6
 57054                           postdec1	equ	0xFE5
 57055                           plusw1	equ	0xFE3
 57056                           fsr1h	equ	0xFE2
 57057                           fsr1l	equ	0xFE1
 57058                           indf2	equ	0xFDF
 57059                           postinc2	equ	0xFDE
 57060                           postdec2	equ	0xFDD
 57061                           plusw2	equ	0xFDB
 57062                           fsr2h	equ	0xFDA
 57063                           fsr2l	equ	0xFD9
 57064                           status	equ	0xFD8
 57065                           
 57066                           	psect	temp
 57067  00005F                     btemp:
 57068                           	opt stack 0
 57069  00005F                     	ds	1
 57070  0000                     int$flags	set	btemp
 57071  0000                     wtemp8	set	btemp+1
 57072  0000                     ttemp5	set	btemp+1
 57073  0000                     ttemp6	set	btemp+4
 57074  0000                     ttemp7	set	btemp+8
 57075                           tosu	equ	0xFFF
 57076                           tosh	equ	0xFFE
 57077                           tosl	equ	0xFFD
 57078                           pclatu	equ	0xFFB
 57079                           pclath	equ	0xFFA
 57080                           tblptru	equ	0xFF8
 57081                           tblptrh	equ	0xFF7
 57082                           tblptrl	equ	0xFF6
 57083                           tablat	equ	0xFF5
 57084                           prodh	equ	0xFF4
 57085                           prodl	equ	0xFF3
 57086                           intcon	equ	0xFF2
 57087                           indf0	equ	0xFEF
 57088                           postinc0	equ	0xFEE
 57089                           fsr0h	equ	0xFEA
 57090                           fsr0l	equ	0xFE9
 57091                           wreg	equ	0xFE8
 57092                           indf1	equ	0xFE7
 57093                           postinc1	equ	0xFE6
 57094                           postdec1	equ	0xFE5
 57095                           plusw1	equ	0xFE3
 57096                           fsr1h	equ	0xFE2
 57097                           fsr1l	equ	0xFE1
 57098                           indf2	equ	0xFDF
 57099                           postinc2	equ	0xFDE
 57100                           postdec2	equ	0xFDD
 57101                           plusw2	equ	0xFDB
 57102                           fsr2h	equ	0xFDA
 57103                           fsr2l	equ	0xFD9
 57104                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4715
    Data        157
    BSS         1578
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      94
    BANK0           160    159     160
    BANK1           256     60     256
    BANK2           256      0     234
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_save_position@buffer(COMRAM[11]), i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(BANK0[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_save_position
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_system_init
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  780705
                                            158 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          1     1      0  406223
                                            157 BANK0      1     1      0
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                         11    11      0   12617
                                             25 BANK0     11    11      0
                    _i2c_eeprom_read
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   13192
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12970
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   18268
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   12111
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  233644
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   85180
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6527
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91376
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   25127
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3184
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8416
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  118358
                                             72 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
                   _motor_goto_steps
        _motor_increase_manual_speed
             _motor_move_degrees_int
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (3) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   47164
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
       __display_position_in_degrees
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_position_in_degrees                         8     4      4      46
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
       __display_position_in_degrees (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  117124
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  117124
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  112324
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   56913
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   55207
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   67931
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   20232
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    9580
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    8831
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   44698
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   24116
                                             62 BANK0      1     1      0
               _i2c_eeprom_writeByte
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
                             _reboot
 ---------------------------------------------------------------------------------
 (4) _reboot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (3) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (2) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (4) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_eeprom_writeByte                                 9     6      3    2379
                                             10 BANK0      9     6      3
                   __i2c_eeprom_busy
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19830
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1069
                                              6 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               4     2      2     645
                                              2 BANK0      4     2      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (4) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   57225
                                             72 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    2291
                                             48 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                           11    11      0    2200
                                             37 COMRAM    11    11      0
                   _i2c_eeprom_write
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54934
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31817
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     533
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_eeprom_busy
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
         _reboot
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       __display_position_in_degrees (ARG)
       _strlen (ARG)
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_position_in_degrees
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       _motor_move_steps
         ___fltol (ARG)
         __motor_move_steps (ARG)
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_goto_steps
       __motor_calculate_distance
       __motor_decide_direction
         __motor_calculate_distance
         __motor_distance_to_limit
           ___lmul
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_move_degrees_int
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
       __motor_steps_from_degrees_int
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
     _motor_move_endless
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_set_zero
       __motor_move_back_forth
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _memcpy
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
       i2_memcpy
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EA       9       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F8      31        0.0%
DATA                 0      0     7F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 05 16:20:44 2020

                           __end_of_fat_read_from_file 2116  
                               _motor_next_speed_check 0238  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 5C6C  
                      __size_of_configFile_readDefault 0078  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 30DE  
                              configFile_read@position 01FC  
                                                   _os 0165  
                                        _USBDeviceInit FF64  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 23BE  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5BE2  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5BB4  
                                     __i2c_eeprom_busy 5DBA  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init FB64  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 188A  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 5AEA  
                                                  l207 5AE8  
                                                  l145 FFAE  
                                                  l147 FFD6  
                                                  l149 0010  
                          __end_of_USBStdGetDscHandler 0708  
                                                  l184 1494  
                                                  l192 13D2  
                                                  l186 14BE  
                                                  l602 DFDC  
                                                  l188 153C  
                                                  l700 D306  
                                                  l620 4A0E  
                                                  l612 0AA6  
                                                  l701 D046  
                                                  l613 0AA0  
                                                  l605 DFE4  
                                                  l710 D146  
                                                  l630 C96C  
                                                  l622 4A2A  
                                                  l703 D32A  
                                                  l711 D1B4  
                                                  l631 C5CA  
                                                  l615 0AAA  
                                                  l720 D2EC  
                                                  l712 D1B0  
                                                  l704 D0F2  
                                                  l640 C70E  
                                                  l624 4A36  
                                                  l608 09FA  
                                                  l641 C718  
                                                  l625 4A3C  
                                                  l714 D1C8  
                                                  l706 D0F8  
                                                  l650 C812  
                                                  l642 C73C  
                                                  l634 C5DA  
                                                  l626 4A42  
                                                  l570 DFFC  
                                                  l731 0F98  
                                                  l715 D24C  
                                                  l707 D104  
                                                  l619 4A4A  
                                                  l571 DDC4  
                                                  l708 D122  
                                                  l660 C8B8  
                                                  l652 C848  
                                                  l644 C76C  
                                                  l636 C5EA  
                                                  l580 DED2  
                                                  l900 4D74  
                                                  l709 D16E  
                                                  l661 C8CC  
                                                  l637 C5F4  
                                                  l734 0FA4  
                                                  l726 0F42  
                                                  l718 D2BC  
                                                  l670 C964  
                                                  l662 C8F4  
                                                  l654 C864  
                                                  l646 C7AC  
                                                  l582 DEEA  
                                                  l735 0FCC  
                                                  l719 D2D4  
                                                  l639 C648  
                                                  l591 DF5E  
                                                  l575 DDE8  
                                                  l728 0F5A  
                                                  l664 C928  
                                                  l656 C87C  
                                                  l592 DF62  
                                                  l904 4D86  
                                                  l753 1036  
                                                  l737 1008  
                                                  l681 EA80  
                                                  l665 C8FC  
                                                  l649 C7E4  
                                                  l593 DF88  
                                                  l577 DF10  
                                                  l770 0EBC  
                                                  l738 0FEE  
                                                  l690 E996  
                                                  l682 E8C2  
                                                  l666 C90E  
                                                  l578 DEF6  
                                                  l586 E01A  
                                                  l906 4D92  
                                                  l675 2FB2  
                                                  l763 0F06  
                                                  l771 0EF8  
                                                  l747 1016  
                                                  l691 E9C0  
                                                  l667 C924  
                                                  l587 DF30  
                                                  l579 DECA  
                                                  l764 0E70  
                                                  l684 EAA4  
                                                  l692 E9EE  
                                                  _BDT 000D00  
                                                  l677 2FCE  
                                                  l757 0E44  
                                                  l749 1024  
                                                  l693 EA00  
                                                  l685 E91C  
                                                  l589 DF3C  
                                                  l950 36C2  
                                                  l766 0E78  
                                                  l694 EA06  
                                                  l686 E928  
                                                  l862 3B5C  
                                                  l767 0E86  
                                                  l695 EA1A  
                                                  l687 E932  
                                                  l871 3B9E  
                                                  l863 3B76  
                                                  l944 365E  
                                                  l768 0E9A  
                                                  l696 EA68  
                                                  l688 E946  
                                                  l872 3BA2  
                                                  l769 0EA8  
                                                  l873 3BA8  
                                                  l867 3BAE  
                                                  l869 3BD0  
                                                  l897 4DA4  
                                                  l986 6038  
                                                  l898 4D68  
                                                  _LBA 0123  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 029D  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 5B84  
                               __end_of_display_update 5984  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 01F8  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005D  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 36FE  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 DC3E  
                                                 l2001 DC42  
                                                 l2010 DC62  
                                                 l2002 DC46  
                                                 l1131 6102  
                                                 l2011 DC66  
                                                 l2012 DC6A  
                                                 l2004 DC4A  
                                                 l1140 60C8  
                                                 l2013 DC6E  
                                                 l2005 DC4E  
                                                 l2014 DC72  
                                                 l2006 DC52  
                                                 l2007 DC56  
                                                 l1400 A386  
                                                 l2008 DC5A  
                                                 l1152 60D4  
                                                 l1224 504A  
                                                 l1401 A368  
                                                 l2105 43F4  
                                                 l2009 DC5E  
                                                 l1146 60FA  
                                                 l1170 3BFE  
                                                 l1082 FB1C  
                                                 l1163 5448  
                                                 l1411 A42C  
                                                 l1403 A372  
                                                 l2107 445A  
                                                 l1083 FB5E  
                                                 l1164 542A  
                                                 l2300 30F2  
                                                 l1420 A46A  
                                                 l1412 A3FC  
                                                 l1260 511A  
                                                 l2205 3F0A  
                                                 l1501 AF4C  
                                                 l1405 A37C  
                                                 l1261 50FC  
                                                 l2302 312C  
                                                 l2214 3A64  
                                                 l1334 2248  
                                                 l1422 A474  
                                                 l1158 60C0  
                                                 l1327 5548  
                                                 l1335 2232  
                                                 l1343 5674  
                                                 l1431 A556  
                                                 l1423 A492  
                                                 l1407 AFB0  
                                                 l2304 316C  
                                                 l2312 F346  
                                                 l2208 3F40  
                                                 l1360 E63A  
                                                 l1352 E52E  
                                                 l1432 A574  
                                                 l1424 A4D6  
                                                 l1408 A3A6  
                                                 l3032 1BC2  
                                                 l2072 33A0  
                                                 l2305 3136  
                                                 l2217 3AA2  
                                                 l1329 5554  
                                                 l1361 E5F4  
                                                 l1353 E54C  
                                                 l1337 22A6  
                                                 l1441 A78E  
                                                 l1433 A5E4  
                                                 l1409 A3F0  
                                                 l3041 F874  
                                                 l3033 1B8A  
                                                 l1169 3C1C  
                                                 l2330 F56E  
                                                 l2306 3142  
                                                 l2322 F310  
                                                 l1362 E638  
                                                 l1370 1096  
                                                 l1338 2276  
                                                 l1450 A88A  
                                                 l1442 A75E  
                                                 l1434 A5B4  
                                                 l1426 A524  
                                                 l1418 A44A  
                                                 l3130 4146  
                                                 l1266 430E  
                                                 l3107 4F8A  
                                                 l2331 F576  
                                                 l2315 F226  
                                                 l1603 5EBA  
                                                 l1355 E5E2  
                                                 l1451 A872  
                                                 l1419 A47E  
                                                 l3131 4154  
                                                 l3035 1C34  
                                                 l1507 595A  
                                                 l3108 4F9E  
                                                 l2340 F5E4  
                                                 l2332 F57E  
                                                 l1364 E674  
                                                 l1348 E556  
                                                 l1460 A9B2  
                                                 l1452 A8E4  
                                                 l1444 A834  
                                                 l1436 A668  
                                                 l1428 A560  
                                                 l3044 F8D6  
                                                 l3060 BEF8  
                                                 l3036 1C30  
                                                 l2068 334C  
                                                 l2501 3568  
                                                 l2341 F5EA  
                                                 l2333 F586  
                                                 l2317 F238  
                                                 l1365 E644  
                                                 l1461 AA1A  
                                                 l1453 A8B4  
                                                 l1445 A804  
                                                 l1429 A54C  
                                                 l3061 BF2E  
                                                 l1381 3216  
                                                 l2510 F7A6  
                                                 l2326 F652  
                                                 l2342 F5F0  
                                                 l2334 F58E  
                                                 l1358 E5C6  
                                                 l1462 A9D0  
                                                 l1438 A6F6  
                                                 l3070 C140  
                                                 l3062 BF64  
                                                 l3126 4112  
                                                 l2343 F5F6  
                                                 l2335 F596  
                                                 l2327 F53E  
                                                 l2319 F2B6  
                                                 l1703 5A0E  
                                                 l1359 E5DA  
                                                 l1471 ABA8  
                                                 l1463 AA2A  
                                                 l1455 A942  
                                                 l1447 A84C  
                                                 l1439 A6C6  
                                                 l3071 C1A2  
                                                 l3063 BF9A  
                                                 l3055 BE20  
                                                 l3127 4106  
                                                 l1383 3236  
                                                 l2191 5794  
                                                 l2512 F7FA  
                                                 l2344 F5FC  
                                                 l2336 F59E  
                                                 l2272 284E  
                                                 l1552 4F66  
                                                 l1480 AC86  
                                                 l1472 AB78  
                                                 l1464 A9DC  
                                                 l1448 A87A  
                                                 l3064 BFD0  
                                                 l1800 D44E  
                                                 l1376 31D6  
                                                 l1544 4754  
                                                 l2192 5770  
                                                 l2513 F848  
                                                 l2345 F602  
                                                 l2337 F5A6  
                                                 l2329 F556  
                                                 l2281 0ACE  
                                                 l2273 285C  
                                                 l1553 4F22  
                                                 l1481 AD24  
                                                 l1465 AA84  
                                                 l1457 A97E  
                                                 l1449 A86A  
                                                 l3065 C006  
                                                 l3057 BE56  
                                                 l1801 D3FA  
                                                 l1545 4778  
                                                 l2193 57A4  
                                                 l2530 019C  
                                                 l2362 FEC8  
                                                 l2370 FE0E  
                                                 l2354 403C  
                                                 l2514 F862  
                                                 l2338 F5AE  
                                                 l2290 0BD0  
                                                 l2274 2870  
                                                 l1570 437E  
                                                 l3170 2CA4  
                                                 l1490 AE86  
                                                 l1482 AC92  
                                                 l1474 ABC0  
                                                 l1466 AA54  
                                                 l1458 A94E  
                                                 l3066 C03C  
                                                 l3058 BE8C  
                                                 l1802 D516  
                                                 l1562 4CC4  
                                                 l2194 5782  
                                                 l2355 3FDE  
                                                 l2507 F776  
                                                 l2347 F61E  
                                                 l2339 F5DE  
                                                 l2291 0B54  
                                                 l2275 2884  
                                                 l1555 4F4C  
                                                 l1571 4388  
                                                 l3171 2C98  
                                                 l1491 AEB0  
                                                 l1483 ACD0  
                                                 l1475 AC3A  
                                                 l2523 0D18  
                                                 l3075 F04C  
                                                 l3067 C072  
                                                 l3059 BEC2  
                                                 l1811 D56E  
                                                 l1563 4CCE  
                                                 l1379 31F6  
                                                 l2364 FF60  
                                                 l2620 45F0  
                                                 l2356 4058  
                                                 l2292 0B70  
                                                 l2284 0B1C  
                                                 l2276 2892  
                                                 l3180 33C8  
                                                 l1388 5354  
                                                 l1484 ADA0  
                                                 l1476 AC0A  
                                                 l1468 AB34  
                                                 l3068 C0A8  
                                                 l1812 D566  
                           USBConfigureEndpoint@handle 0007  
                                                 l2357 3FFC  
                                                 l2509 F78E  
                                                 l2349 F63A  
                                                 l2269 28D2  
                                                 l2277 28B2  
                                                 l1573 43C0  
                                                 l3181 33DC  
                                                 l1493 AEBE  
                                                 l1485 AD68  
                                                 l1469 AAFC  
                                                 l2461 ED22  
                                                 l3077 F15A  
                                                 l3069 C10A  
                                                 l1813 D5AE  
                                                 l3093 C588  
                                                 l2470 1E80  
                                                 l2622 460C  
                                                 l2374 41E6  
                                                 l2358 401A  
                                                 l2534 24E4  
                                                 l2286 0B22  
                                                 l1590 5244  
                                                 l3174 2CD8  
                                                 l1398 AF54  
                                                 l1478 AC68  
                                                 l2462 ED24  
                                                 l3078 F1C0  
                                                 l1830 48D2  
                                                 l1902 E296  
                                                 l3086 F4EA  
                                                 l1806 D4E2  
                                                 l3094 C59E  
                                                 l2527 00D8  
                                                 l2471 1E90  
                                                 l2623 4614  
                                                 l2199 4E68  
                                                 l1575 43E0  
                                                 l3175 2CE6  
                                                 l3167 2C5E  
                                                 l3183 33FA  
                                                 l1495 AEE8  
                                                 l1487 AE14  
                                                 l1479 AD0E  
                                                 l1399 A348  
                                                 l2631 3072  
                                                 l2463 ED90  
                                                 l3087 F3DE  
                                                 l3511 4988  
                                                 l2472 1EA0  
                                                 l2368 FD76  
                                                 l2288 0B9A  
                                                 l3176 2CFC  
                                                 l3168 2C76  
                                                 l3184 33EE  
                                                 l1488 ADE4  
                                                 l2464 EDC0  
                                                 l2456 ECBC  
                                                 l1904 E460  
                                                 l3088 F474  
                                                 l3512 4996  
                                                 l1808 D4F0  
                                                 l2529 00FC  
                                                 l2473 1EAC  
                                                 l2481 EE88  
                                                 l2369 FDA8  
                                                 l2625 4640  
                                                 l2537 256E  
                                                 l2289 0B3C  
                                                 l1497 AF14  
                                                 l2721 4650  
                                                 l2801 B092  
                                                 l2457 ED16  
                                                 l1905 E34E  
                                                 l3089 F4A6  
                                                 l1817 D5E8  
                                                 l1809 D4F8  
                                                 l2553 273C  
                                                 l2474 1EC6  
                                                 l2490 EF8A  
                                                 l2482 EE98  
                                                 l2722 465A  
                                                 l2634 3096  
                                                 l2810 B130  
                                                 l1906 E376  
                                                 l1818 D5FC  
                                                 l1922 189A  
                                                 l2491 EFBA  
                                                 l2483 EEA4  
                                                 l3611 CDDE  
                                                 l3603 CD3A  
                                                 l3363 5B42  
                                                 l3187 3422  
                                                 l1499 AF22  
                                                 l2731 5BBE  
                                                 l2723 4664  
                                                 l2803 B0B8  
                                                 l1907 E41E  
                                                 l3507 4960  
                                                 l1763 4C02  
                                                 l2468 1E6E  
                                                 l2492 F028  
                                                 l2484 EEB4  
                                                 l2660 392A  
                                                 l3612 CDA2  
                                                 l3604 CD36  
                                                 l3700 CA38  
                                                 l3188 3430  
                                                 l2740 46C0  
                                                 l2732 5BC2  
                                                 l2724 466E  
                                                 l2900 B636  
                                                 l2804 B0C8  
                                                 l3356 0C10  
                                                 l1828 487A  
                                                 l3508 4954  
                                                 l1836 5CFC  
                                                 l1932 E098  
                                                 l1924 18AA  
                                                 l1940 2A20  
                                                 l2485 EEC4  
                                                 l2477 EE76  
                                                 l1597 4DD2  
                                                 l1589 523A  
                                                 l3621 CEB6  
                                                 l3701 CA56  
                                                 l3189 3446  
                                                 l2741 46CA  
                                                 l2733 5BC6  
                                                 l2813 B162  
                                                 l3357 0C44  
                                                 l1765 4C3C  
                                                 l1933 E230  
                                                 l1925 1966  
                                                 l1941 29D4  
                                                 l2486 EEF2  
                                                 l1598 4DDC  
                                                 l3622 CE7E  
                                                 l2742 46D4  
                                                 l2718 4678  
                                                 l2822 B7E2  
                                                 l2830 B24E  
                                                 l3358 0C82  
                                                 l1790 3726  
                                                 l1838 5D0E  
                                                 l1782 2C26  
                                                 l1934 E11E  
                                                 l1926 195E  
                                                 l1950 29F4  
                                                 l2487 EF0A  
                                                 l3631 CF4E  
                                                 l3615 CE5A  
                                                 l2743 46DE  
                                                 l2719 4644  
                                                 l2911 B6A0  
                                                 l2903 B644  
                                                 l2831 B258  
                                                 l2815 B188  
                                                 l2807 B0FA  
                                                 l3359 0CC0  
                                                 l1855 202C  
                                                 l1791 3772  
                                                 l1871 0726  
                                                 l1935 E146  
                                                 l1951 29F8  
                                                 l1943 29D8  
                                                 l2488 EF2E  
                                                 l3616 CE38  
                                                 l3608 CD82  
                                                 l3712 CC4E  
                                                 l3800 3460  
                                                 l2752 47A4  
                                                 l2728 5BCA  
                                                 l2912 B6D8  
                                                 l2904 B658  
                                                 l2840 B3C4  
                                                 l2824 B270  
                                                 l2832 B266  
                                                 l2816 B198  
                                                 l1864 2016  
                                                 l1784 2C30  
                                                 l1936 E1EE  
                                                 l1960 2A1C  
                                                 l1952 29FC  
                                                 l1944 29DC  
                                                 l2489 EF58  
                                                 l3625 CEA0  
                                                 l3617 CE46  
                                                 l3609 CD7E  
                                                 l3705 CC16  
                                                 l2737 46E8  
                                                 l2729 5BBA  
                                                 l2841 B2EE  
                                                 l2825 B216  
                                                 l2809 B120  
                                                 l1873 0738  
                                                 l1953 2A00  
                                                 l1945 29E0  
                                                 l3650 D01E  
                                                 l3634 CF72  
                                                 l3626 CEA4  
                                                 l3618 CE4A  
                                                 l3714 CC92  
                                                 l3706 CBF8  
                                                 l3394 27EE  
                                                 l3386 275E  
                                                 l3802 349C  
                                                 l2738 46B4  
                                                 l2922 B726  
                                                 l2914 B6E2  
                                                 l2906 B666  
                                                 l2842 B302  
                                                 l2834 B29A  
                                                 l2826 B238  
                                                 l1858 1F9E  
                                                 l3810 5156  
                                                 l1874 0796  
                                                 l1970 DB64  
                                                 l1954 2A04  
                                                 l1946 29E4  
                                                 l1699 5A42  
                                                 l3651 D026  
                                                 l3643 CFB2  
                                                 l3715 CCB0  
                                                 l3395 27E2  
                                                 l3803 34DE  
                                                 l2747 57C0  
                                                 l2923 B730  
                                                 l2827 B246  
                                                 l2819 B1CA  
                                                 l1867 447C  
                                                 l1779 2BCC  
                                                 l1971 DB76  
                                                 l1955 2A08  
                                                 l1947 29E8  
                                                 l3652 D028  
                                                 l3636 CF88  
                                                 l3388 27CA  
                                                 l3660 D638  
                                                 l2924 B73E  
                                                 l2908 B66E  
                                                 l2860 B42E  
                                                 l2852 B39E  
                                                 l2836 B2C6  
                                                 l1796 D39E  
                                                 l1964 DC76  
                                                 l1980 DBEE  
                                                 l1972 DB88  
                                                 l1956 2A0C  
                                                 l1948 29EC  
                                                 l3629 CF3E  
                                                 l3717 CCD4  
                                                 l3397 280A  
                                                 l3389 27BA  
                                                 l3741 04C6  
                                                 l3661 D634  
                                                 l2917 B77A  
                                                 l2909 B680  
                                                 l2861 B3FC  
                                                 l2845 B334  
                                                 l2829 B280  
                                                 l1789 3790  
                                                 l1981 DBF2  
                                                 l1973 DB9A  
                                                 l1965 DB46  
                                                 l1957 2A10  
                                                 l1949 29F0  
                                                 l3822 4BE0  
                                                 l3646 CFF8  
                                                 l3638 CF92  
                                                 l3718 CCF2  
                                                 l3742 04D6  
                                                 l3582 51BC  
                                                 l3670 D798  
                                                 l2926 B746  
                                                 l2918 B6FC  
                                                 l2870 B490  
                                                 l2862 B406  
                                                 l2790 AFE8  
                                                 l3814 1998  
                                                 l1990 DC16  
                                                 l1982 DBF6  
                                                 l1974 DBAC  
                                                 l1958 2A14  
                                                 l3823 4BA6  
                                                 l3751 0576  
                                                 l3743 04F4  
                                                 l3583 51C6  
                                                 l3671 D748  
                                                 l2927 B75E  
                                                 l2919 B718  
                                                 l2871 B49C  
                                                 l2855 B41E  
                                                 l2863 B414  
                                                 l2791 AFF8  
                                                 l1799 D3A8  
                                                 l1991 DC1A  
                                                 l1983 DBFA  
                                                 l1975 DBBE  
                                                 l1967 DB4A  
                                                 l1959 2A18  
                                                 l3752 056A  
                                                 l3592 5712  
                                                 l3672 D770  
                                                 l3664 D678  
                                                 l2856 B3D6  
                                                 l2848 B35A  
                                                 l3816 19F4  
                                                 l1992 DC1E  
                                                 l1984 DBFE  
                                                 l1976 DBD0  
                                                 l1968 DB4E  
                                                 l3745 0506  
                                                 l2953 EC3E  
                                                 l3593 571C  
                                                 l3665 D674  
                                                 l2929 B768  
                                                 l2881 B512  
                                                 l2865 B43E  
                                                 l2857 B3E6  
                                                 l2849 B36C  
                                                 l3817 1A62  
                                                 l1993 DC22  
                                                 l1985 DC02  
                                                 l1977 DBE2  
                                                 l1969 DB52  
                                                 l3746 04FA  
                                                 l3578 519C  
                                                 l3690 D8A4  
                                                 l3674 D796  
                                                 l2882 B4E0  
                                                 l2866 B450  
                                                 l2858 B3F4  
                                                 l2794 B02A  
                                                 l3762 2902  
                                                 l3850 42D0  
                                                 l1994 DC26  
                                                 l1986 DC06  
                                                 l1978 DBE6  
                                                 l3579 5194  
                                                 l3667 D6C2  
                                                 l2787 B798  
                                                 l2891 B5C8  
                                                 l2883 B4EA  
                                                 l3771 29C8  
                                                 l3763 28FC  
                                                 l3851 426E  
                                                 l1899 20C8  
                                                 l1995 DC2A  
                                                 l1987 DC0A  
                                                 l1979 DBEA  
                                                 l3828 5B70  
                                                 l3748 0544  
                                                 l2956 EC64  
                                                 l3588 56FA  
                                                 l3844 57FA  
                                                 l3684 D804  
                                                 l2876 B502  
                                                 l2884 B4F8  
                                                 l2868 B484  
                                                 l3836 4D14  
                                                 l3852 42C6  
                                                 l1996 DC2E  
                                                 l1988 DC0E  
                                                 l3829 5B5E  
                                                 l3757 05B6  
                                                 l3749 052C  
                                                 l3589 56F2  
                                                 l3845 57F4  
                                                 l3677 D7CC  
                                                 l3669 D6EA  
                                                 l2893 B5E4  
                                                 l2877 B4BE  
                                                 l2789 B1F0  
                                                 l2797 B050  
                                                 l3765 2944  
                                                 l3837 4D0A  
                                                 l1997 DC32  
                                                 l1989 DC12  
                            ?__offset_from_file_number 0060  
                                                 l3694 C9E8  
                                                 l3686 D848  
                                                 l3678 D7AE  
                                                 l2894 B5F6  
                                                 l2886 B52C  
                                                 l2878 B4CA  
                                                 l2798 B060  
                                                 l3790 5EFA  
                                                 l3782 1B2A  
                                                 l1998 DC36  
                                                 l3695 C9E4  
                                                 l2959 EC7A  
                                                 l3687 D86C  
                                                 l2879 B4D8  
                                                 l3783 1AD2  
                                                 l1999 DC3A  
                                                 l3696 C9F8  
                                                 l3688 D896  
                                                 l2896 B60E  
                                                 l2888 B570  
                                                 l3768 2994  
                                                 l3689 D8A2  
                                                 l3769 2956  
                                                 l3785 1B70  
                                                 l3698 CA28  
                                                 l2898 B688  
                                                 l3699 CA24  
                                                 l2899 B622  
                                                 l3779 1AC8  
                                                 l3859 6002  
                                                 l3796 56C4  
                  __end_of__encoder_next_arc_step_size 4722  
                          __encoder_next_arc_step_size 46B2  
                        __size_of_encoder_statemachine 082A  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A329  
                                                 STR_2 A332  
                                                 STR_3 A329  
                                                 STR_4 A332  
                                                 STR_5 A329  
                                                 STR_6 A339  
                                                 STR_7 A320  
                                                 STR_8 A320  
                                                 STR_9 A320  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E7  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 4A6E  
                          __end_of_fat_restore_mbr_fbr 3EB8  
                                                 _enc1 0148  
                                                 _enc2 0147  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0145  
                                                 _atoi 28FA  
                                                 _atol 1A86  
                                                 _main 3B42  
                              _bit_pattern_verticalbar A2EA  
                                                 _itoa 569E  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2BA  
                                                 _ltoa 5128  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AFCC  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5AC2  
                                                 btemp 005F  
                                                 _utoa 3458  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 60DA  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 6072  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 5BE2  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E252  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 23BE  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 013B  
                     __end_of__fat_sector_from_cluster 5FBA  
                               __get_available_cluster 2B72  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 5E2E  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 41EA  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 5A5A  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02D4  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                                                l20150 46A8  
                                                l12142 0CF8  
                                                l20142 DC90  
                                                l20152 4702  
                                                l20144 DDA8  
                                                l20154 4718  
                                                l20148 4692  
                                                l14110 426E  
                                                l14040 2B96  
                                                l13164 EA7A  
                                                l13086 4BA6  
                                                l13424 EEF2  
                                                l14064 2C36  
                                                l15116 202C  
                                                l15052 5CF4  
                                                l14342 D896  
                                                l15082 1F80  
                                                l12756 0FA4  
                                                l16214 E570  
                                                l16154 4306  
                                                l17060 5B5E  
                                                l16500 3E30  
                                                l16270 4726  
                                                l13856 C734  
                                                l16328 0796  
                                         spi_tx@length 0062  
                                                l16610 313A  
                                                l17146 DDE0  
                                                l18034 FFA6  
                                                l16194 E4C6  
                                                l16514 3E78  
                                                l17324 0B6A  
                                                l18214 4D74  
                                                l18062 0008  
                                                l17254 5952  
                                                l16462 331C  
                                                l16480 3370  
                                                l18218 4D92  
                                                l17620 5540  
                                                l15692 2990  
                                                l16808 F86C  
                                                l17626 554C  
                                                l17740 ED90  
                                                l16844 F960  
                                                l16828 F8CE  
                                                l17656 1096  
                                                l17746 EDC0  
                                                l18870 A4CE  
                                        ___fltol@sign1 0068  
                                motor_move_steps@speed 0090  
                                      __end_of___aldiv 2D0E  
                                                l18884 A51C  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 3458  
                                                ?_atol 006C  
                                      __end_of___fladd D044  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A212  
                          _initial_speed_manual_string A1FD  
                                      __end_of___fldiv D8C0  
                                                ?_itoa 0070  
                                      __end_of___flneg 5B54  
                                                STR_10 A320  
                                                ?_ltoa 007A  
                                                STR_11 A320  
                                                STR_12 A320  
                                                STR_13 A320  
                                                STR_14 A320  
                                                STR_15 A30B  
                                                STR_16 A317  
                                                STR_17 A33F  
                                                STR_18 A2FE  
                                      __end_of___flmul CD08  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2D1  
                    __size_of_USBCtrlEPServiceComplete 0102  
                                      __end_of___fltol 281C  
                                      __end_of___lldiv 4166  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u11020 51A0  
                                                u10410 0E30  
                                                u11050 56FE  
                                                u10175 4394  
                                                u10265 4DE8  
                                                u11305 D072  
                                                u11170 4BC8  
                                                u20107 4F5A  
                                                u11500 49B4  
                                                u10285 44F2  
                                                u11510 49C2  
                                                u11430 D288  
                                                u11520 49D0  
                                                u11248 E970  
                                                u11440 D28A  
                                                u11328 D0AA  
                                                u13120 D800  
                                                u11177 4BBE  
                                                u11249 E984  
                                                u11329 D0BE  
                                      __end_of___llmod 49A8  
                               __end_of_USBDeviceTasks 033E  
                                                u11530 49DE  
                                                u10810 101E  
                                                u14010 D45A  
                                                u11195 E8EE  
                                                u20067 52E2  
                                                u11540 49EC  
                                                u11508 49B8  
                                                u14100 D5CE  
                                                u14020 D484  
                                                u20077 52F6  
                                                u11550 49F8  
                                                u11518 49C6  
                                                u10830 1032  
                                                u12510 C890  
                                                u13310 CC4A  
                                                u13150 D856  
                                                u14030 D490  
                                                u20087 4F3E  
                                                u11528 49D4  
                                                u10760 0FEA  
                                                u12520 C8A2  
                                                u12440 C764  
                                                u12408 C658  
                                                u13160 D87A  
                                                u14040 D4BC  
                                                u20097 4F50  
                                                u12409 C66C  
                                                u11625 4CDA  
                                                u11538 49E2  
                                                u11458 D296  
                                                u12418 C68C  
                                                u13250 CA44  
                                                u11459 D2AA  
                                                u12419 C6A0  
                                                u11635 5D2E  
                                                u11556 49FA  
                                                u11548 49F0  
                                                u10860 5A3E  
                                                u11388 D17E  
                                                u13340 CCA0  
                                                u13260 CBBA  
                                                u14220 2022  
                                                u11389 D192  
                                                u10790 1004  
                                                u10870 5A0A  
                                                u12550 C930  
                                                u15110 09C0  
                                                u13350 CCBE  
                                                u13430 277C  
                                                u14230 202C  
                                                u12710 375E  
                                                u14150 5D14  
                                                u14070 D546  
                                                u11920 4964  
                                                u13265 CBB0  
                                                u11690 EE72  
                                                u12458 C788  
                                                u14090 D5C2  
                                                u12459 C79C  
                                                u13435 2772  
                                                u11780 EEEE  
                                                u15124 09D8  
                                                u14260 4456  
                                                u15125 09D2  
                                                u11790 EF06  
                                                u14350 FEA6  
                                                u15134 0A12  
                                                u13470 27F4  
                                                u13550 0580  
                                                u12750 48CE  
                                                u14270 E272  
                                                u12670 2BF6  
                                                u15135 0A0C  
                                                u15231 52D0  
                                                u15215 503A  
                                                u15320 E4DA  
                                                u15330 E550  
                                                u14450 4D56  
                                                u12770 4294  
                                                u11890 4116  
                                                u12690 2C36  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u14275 E266  
                                                u14380 FD54  
                                                u14700 CE0E  
                                                u15260 4354  
                                                u15174 0A70  
                                                u15158 0A3A  
                                                u14710 CE1E  
                                                u17110 5580  
                                                u15510 18E6  
                                                u15175 0A6A  
                                                u15159 0A50  
                                                u14295 E30A  
                                   ??_motor_move_steps 0093  
                                                u14720 CE20  
                                                u16240 33FE  
                                                u15360 E584  
                                                u18000 B0F4  
                                                u15520 1918  
                                                u13905 562C  
                                                u15098 098E  
                                                u16410 DDDA  
                                                u15370 E5DE  
                                                u15530 1932  
                                                u15099 09A2  
                                                u15515 18DC  
                                                u16180 2CA8  
                                                u13940 3202  
                                                u15700 33A6  
                                                u15525 190E  
                                                u16430 DE10  
                                                u14910 CFAE  
                                                u14750 CE62  
                                                u18030 B12C  
                                                u15470 075E  
                                                u13950 3222  
                                                u17071 F536  
                                                u16600 DFBC  
                                                u18040 B15C  
                                                u17240 ED1E  
                                                u15720 3E5A  
                                                u17170 5344  
                                                u15475 0754  
                                                u18220 B2FC  
                                                u15580 E0BE  
                                                u15740 3EA2  
                                                u17430 FFCA  
                                                u17270 5E82  
                                                u18230 B32E  
                                                u18070 B194  
                                                u13990 D3E0  
                                                u15670 3352  
                                                u14960 D004  
                                                u14880 CF96  
                                                u18080 B1C4  
                                                u15585 E0B4  
                                                u17290 3036  
                                                u15930 F94C  
                                                u15780 316A  
                                                u17460 006C  
                                                u18260 B366  
                                                u15845 0878  
                                                u18510 B560  
                                                u18270 B398  
                                                u18530 B5B6  
                                                u15890 F8B4  
                                      __end_of___lwdiv 51D0  
                                                u18531 B5B4  
                                                u17830 3678  
                                                u17910 AFF4  
                                                u17920 B024  
                                                u17760 FB32  
                                                u17850 368C  
                                                u17770 FB4C  
                         __flash_write_to_buffer@start 0073  
                                                u19460 3B7E  
                                                u17950 B05C  
                                                u18840 EC28  
                                                u18920 A4FE  
                                                u17960 B08C  
                                                u18850 EC38  
                                                u18860 EC4E  
                                                u18870 EC5E  
                                                u17990 B0C4  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 5726  
                                                i2l300 35EE  
                                                i2l220 37F6  
                                                i2l214 2D5A  
                                                i2l222 3812  
                                                i2l231 1704  
                                                i2l232 16AE  
                                                i2l160 0248  
                                                i2l321 3B32  
                                                i2l145 0384  
                                                i2l250 2AF2  
                                                i2l226 3D62  
                                                i2l322 3B2C  
                                                i2l162 026E  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 5766  
                                                i2l315 59B0  
                                                i2l147 03AC  
                                                i2l155 020E  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2E12  
                                                i2l260 12B2  
                                                i2l332 4B42  
                                                i2l180 5882  
                                                i2l236 1730  
                                                i2l308 5764  
                                                i2l316 59AE  
                                                i2l172 02FC  
                                                i2l164 0284  
                                                i2l156 021E  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2B6A  
                                                i2l245 2AC2  
                                                i2l341 2E16  
                                                i2l261 1290  
                                                i2l149 03E4  
                                                i2l165 0290  
                                                i2l157 0226  
                                                i2l254 2B32  
                                                i2l342 2E96  
                                                i2l334 4B8E  
                                                i2l174 031A  
                                                i2l166 02B8  
                                                i2l247 2ACC  
                                                i2l343 2E5C  
                                                i2l263 1326  
                                                i2l167 02C2  
                                                i2l159 023C  
                                                i2l264 130C  
                                                i2l184 179E  
                                                i2l192 15DE  
                                                i2l432 2476  
                                                i2l280 06F0  
                                                i2l272 25CA  
                                                i2l360 2302  
                                                i2l176 0336  
                                                i2l249 2B2A  
                                                i2l345 2E7C  
                                                i2l425 240C  
                                                i2l281 05DA  
                                                i2l361 2316  
                                                i2l169 02D4  
                                                i2l186 17C8  
                                                i2l426 23DA  
                                                i2l274 263E  
                                                i2l362 231C  
                                                i2l179 5874  
                                                i2l283 05EE  
                                                i2l355 237A  
                                                i2l188 1846  
                                                i2l436 242E  
                                                i2l428 241E  
                                                i2l372 D8E4  
                                                i2l284 0680  
                                                i2l364 2322  
                                                i2l356 22EC  
                                                i2l437 2446  
                                                i2l429 23F8  
                                                i2l381 DA40  
                                                i2l373 D8EA  
                                                i2l293 362A  
                                                i2l365 2340  
                                                i2l534 125A  
                                                i2l438 2452  
                                                i2l550 2F1E  
                                                i2l286 0688  
                                                i2l294 35B8  
                                                i2l366 235C  
                                                i2l358 22F6  
                                                i2l535 11C6  
                                                i2l439 246A  
                                                i2l391 DACC  
                                                i2l383 DA0A  
                                                i2l375 D956  
                                                i2l287 06E0  
                                                i2l359 22FC  
                                                i2l384 DA26  
                                                i2l537 1252  
                                                i2l545 2F54  
                                                i2l393 DB1E  
                                                i2l377 D99E  
                                                i2l289 06E8  
                                                i2l297 3640  
                                                i2l562 2F26  
                                                i2l546 2EB8  
                                                i2l386 DA8C  
                                                i2l298 35CA  
                                                i2l387 DA98  
                                                i2l379 D9C0  
                                                i2l299 35D0  
                                                i2l900 51DE  
                                                i2l820 405E  
                                                i2l388 DB12  
                                                i2l821 4066  
                                                i2l822 406E  
                                                i2l904 51F0  
                                                i2l816 4090  
                                                i2l824 4078  
                                                i2l906 51FC  
                                                i2l826 4082  
                                                i2l780 509C  
                                                i2l783 50D2  
                                                _UADDR 000F38  
                                                i2l897 520E  
                                                i2l898 51D4  
          __end_of_motor_calculate_position_in_degrees 273E  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 2660  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 1F48  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A290  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00CC  
                                      _i2c_eeprom_read 5028  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 3502  
                            __end_of__find_nth_cluster 37A4  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E01E  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2EA4  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 3846  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A2FA  
                               __write_value_to_offset 59BC  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7090 02C3  
                        __end_of_MSDTransferTerminated 50D4  
                                         _gblCBWLength 0153  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A282  
                               _configFile_readDefault 4552  
                                      __end_of_isdigit 5F02  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4AD0  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 6124  
                                      __motor_run@type 0066  
                                                _ultoa 1988  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 6052  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 1154  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0157  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 4B32  
                                      __end_of_stricmp 4D62  
                                      __end_of_strncmp 42EC  
                                      __end_of_toupper 6006  
                                     __end_ofi2_memcpy 4CAE  
                                     __end_ofi2_memset 5CC4  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 03F6  
                                       _MSDReadHandler E8C0  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees F02C  
                         __size_of_USBStdSetCfgHandler 00E0  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D606  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3D94  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 5A8E  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 5FEE  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5F46  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5FD4  
                        _ExternalFlash_MediaInitialize 5F24  
                 __offset_from_file_number@file_number 0062  
                                          _system_init F9F0  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 1988  
                                         __end_of_atoi 29D2  
                                         __end_of_atol 1B82  
                                         __end_of_main 3BD8  
                                         __end_of_itoa 56E2  
               __end_of__ic2_display_set_ddram_address 5E76  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5E52  
                                         __end_of_ltoa 517C  
                      __end_of_i2c_display_write_fixed 5128  
                                         __end_of_utoa 3502  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 5FA0  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 60DA  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature EAAA  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 0098  
                 __end_of_motor_divide_jump_to_nearest FCC0  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest FB64  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FE  
                                     __end_of__i2c_get 60D0  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 43E4  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 6128  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 6124  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 011B  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 60B0  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                                 _i2c_eeprom_writeByte 5614  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5AF4  
                               __flash_write_to_buffer 5224  
               __end_of__ic2_display_set_cgram_address 5CEE  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5CC4  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5FD4  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2C7  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 6100  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 5406  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 4F20  
                                               i2l1131 6112  
                                               i2l1214 4246  
                            fat_read_from_file@cluster 00D9  
                                               i2l1215 4216  
                                  ?_motor_items_in_cue 0001  
                                               i2l1146 610A  
                                               i2l1066 590A  
                                               i2l1163 5606  
                                               i2l1164 55EA  
                                               i2l2602 BC74  
                                               i2l2606 BD2A  
                                               i2l2590 B842  
                                               i2l2591 B89C  
                                               i2l2592 B8CC  
                                               i2l2760 1CEE  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2585 B808  
                                               i2l2594 BB8E  
                                               i2l2770 1D5E  
                                               i2l2587 B840  
                                               i2l2763 1CA8  
                                               i2l2597 B9C2  
                                               i2l2773 1D18  
                                               i2l3822 4C9C  
                                               i2l2598 BA10  
                                               i2l2766 1CCA  
                                               i2l3823 4C64  
                                               i2l2599 BB40  
                                               i2l2776 1D3A  
                                               i2l2768 1CE0  
                                               i2l2769 1CE8  
                                               i2l2778 1D50  
                                               i2l2779 1D58  
                                               i2l3828 5CB2  
                                               i2l3829 5CA2  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DDB8  
                                     __end_of__get_mbr 2AA2  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                       ??__display_position_in_degrees 0064  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler EAAA  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 05C8  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit 00B0  
                                     _configFile_write C1D8  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 6052  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0164  
                     __end_of_initial_speed_arc_string A25E  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 41EA  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 0057  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 3846  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 4790  
                                               ___flge 0BDA  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 4F78  
                              __end_of_cw_limit_string A2DA  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 445E  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                                               ___wmul 5D6A  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0066  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3143 0003  
            SYSTEM_Initialize@pll_startup_counter_3143 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0152  
                                            ??___lwmod 0064  
                                               _config 0196  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 5864  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00AA  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02E4  
                                               _memcpy 4B94  
                                   ?_fat_get_file_size 0095  
                                               _memset 5B54  
                     __end_of__sector_from_file_number 5B24  
                              __end_of_i2c_eeprom_read 507E  
                                               _params 0231  
                                               clear_0 3DDC  
                                               clear_1 3DEE  
                                               clear_2 3DFA  
                                               clear_3 3E06  
                                               clear_4 3E16  
                            _ExternalFlash_SectorWrite 59F2  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                               _reboot 612C  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 5E52  
                                               _spi_tx 4E16  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                              i2c_eeprom_writeByte@dat 0071  
                                   _flash_partial_read 5DE2  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02CC  
                                i2c_display_init@F7093 02BA  
                                               _strlen 57EA  
                              _motor_current_stepcount 011F  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 5914  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 0098  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                    i2c_eeprom_recover_position@buffer 0079  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 2030  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 0198  
                     __size_of__read_value_from_offset 0048  
                                ?_i2c_eeprom_writeByte 006A  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 57AA  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 014A  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 52C6  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 48D6  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 48D6  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 00FF  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 4D62  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 5DE2  
                                           __accesstop 0060  
                              __end_of__initialization 3E1C  
                       __end_of_motor_speed_from_index 601C  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 58DA  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 0043  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 60C6  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 38E0  
                          __end_of__parse_command_long 405C  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 44D8  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0137  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5E9A  
                          _motor_increase_manual_speed 5E76  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 58A0  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2FE  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 5456  
                                         __pidataBANK4 5276  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 5CEE  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2F2  
                     __size_of_USBCtrlEPAllowDataStage 00A2  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C1  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2EA4  
                                        __end_of_ultoa 1A86  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 021F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0E16  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 1788  
                       __end_of_motor_set_manual_speed 4642  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 014B  
                                   _motor_move_endless 5C10  
                                   _flash_sector_write 5366  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 2030  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C9B6  
               __size_of_MSDProcessCommandMediaPresent 03EE  
                        _MSDProcessCommandMediaPresent C5C8  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4940  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0159  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 4DBC  
                                    __end_of__i2c_read 3C6C  
                                    __end_of__i2c_send 60EE  
                               _USBStdGetStatusHandler 35AC  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 6100  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FF  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 1370  
                                           _gblNumBLKS 0240  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A227  
                                     _mediaInformation 0298  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 33AA  
                                        __flash_wakeup 4F20  
                             __fill_buffer_get_display 30DE  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 010F  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1788  
                __end_of_APP_DeviceCustomHIDInitialize 5AC2  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 5A8E  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7F6  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1C7C  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run EC88  
                                       ___lmul@product 0068  
                                           _device_dsc A270  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                              ?_reboot 0001  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3AAA  
                                    ??_configFile_read 01C4  
                                           _ep_data_in 0134  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 1370  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E478  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 22DC  
                                   __size_of_motor_isr 05EC  
                               ??_i2c_eeprom_writeByte 006D  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l13002 51DE  
                                              i2l13006 51FC  
                                              i2l20162 40A8  
                                              i2l20164 40DC  
                                              i2l13054 2ACC  
                                              i2l12638 23F2  
                                              i2l13624 25C2  
                                              i2l13554 5CA2  
                                              i2l17048 4C64  
                                              i2l18168 02CC  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l19184 B8CC  
                                              i2l19178 B89C  
                                              i2l17962 037C  
                                              i2l17990 03DC  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 5224  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 6072  
                             ?__parse_set_manual_speed 0066  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 2B72  
                                    __end_of__get_date 6098  
                                  _USBStdSetCfgHandler 2580  
                                    __end_of__get_item F9F0  
                                   i2__i2c_eeprom_busy 5E08  
                                    __end_of__get_time 608C  
                     __end_of_maximum_speed_arc_string A24C  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 22DC  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 1686  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 0140  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 4722  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0066  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 6042  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4EC8  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 43E4  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 4368  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2C40  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0BDA  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 097E  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4C52  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 4BF4  
                                    __end_of__spi_init 594C  
                          __size_of_USBCheckHIDRequest 00E2  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0F30  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A25E  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2C40  
                                      __size_of___flge 0122  
                                              ___almod 33AA  
                                            ?_spi_init 0001  
                                              ___fladd CD08  
                        __size_of_USBCtrlTrfOutHandler 0062  
                                   __display_itoa_long 1046  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D606  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 5B24  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 6062  
                                              ___flmul C9B6  
                                              ___fltol 273E  
                                              ___lldiv 40E2  
                             __end_of_ccw_limit_string A2D1  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4940  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 517C  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 56E2  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                       __end_of__motor_move_back_forth 35AC  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 60F8  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 3D94  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 59F2  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps EE5C  
                                      __size_of_reboot 0002  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3B42  
                                              __ptext1 F9F0  
                                              __ptext2 5F66  
                                              __ptext3 2660  
                                              __ptext4 5F84  
                                              __ptext5 397A  
                                              __ptext6 5028  
                                              __ptext7 3BD8  
                                              __ptext8 60BC  
                                              __ptext9 60C6  
                                       ?__display_itoa 009F  
                                              _inPipes 0109  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 015A  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 45CA  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 5C98  
                              __read_value_from_offset 5584  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast E252  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 1262  
                                              _isdigit 5EE0  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C5C8  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 6062  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 60BC  
                             __offset_from_file_number 5D18  
                             __end_of_i2c_eeprom_write 426C  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 033E  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006D  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0E16  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0CFC  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                             i2c_eeprom_writeByte@data 006C  
                                           _msd_buffer 000600  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0094  
                                  ??__motor_move_steps 0085  
                                              _stricmp 4D08  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 426C  
                                              _toupper 5FEE  
                                  _flash_partial_write 47FE  
                                 end_of_initialization 3E1C  
                  __end_of_maximum_speed_manual_string A1FD  
                          _maximum_speed_manual_string A1E8  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 507E  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2EA  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 0059  
                            __end_of_MSDProcessCommand 0AB0  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 5E2E  
                                      _USB1msTickCount 0127  
                                 ??__display_itoa_long 00BE  
                             __flash_partial_read@data 0079  
                                            i2u1113_40 2B1C  
                                            i2u1113_47 2B12  
                                            i2u1210_40 067A  
                                            i2u1210_47 0670  
                                            i2u1115_40 2B5C  
                                            i2u1034_48 11EA  
                                            i2u1034_49 11FE  
                                            i2u1115_47 2B52  
                                            i2u1212_40 06D4  
                                            i2u1212_47 06CA  
                                            i2u1036_48 1210  
                                            i2u1205_40 25F6  
                                            i2u1036_49 1226  
                                            i2u1038_44 1244  
                                            i2u1038_45 123E  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1063_40 2F00  
                             __flash_partial_read@page 0073  
                                            i2u1209_40 0648  
                                            i2u1209_47 063E  
                                            i2u1234_40 DAB2  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1370_40 500A  
                                            i2u1371_40 5014  
                                            i2u1370_48 500C  
                                            i2u1371_46 5016  
                                              ltoa@val 007C  
                                            i2u1366_40 4FDA  
                                            i2u1518_45 41F6  
                                            i2u1367_40 4FE6  
                                            i2u1366_48 4FDC  
                                            i2u1519_40 424E  
                                            i2u1368_40 4FF2  
                                            i2u1367_48 4FE8  
                                            i2u1369_40 4FFE  
                                            i2u1368_48 4FF4  
                                            i2u1369_48 5000  
                                            i2u1627_40 4C86  
                                    __end_of_motor_isr BDE2  
                                            i2u1627_47 4C7C  
                                            i2u1741_40 0440  
                                            i2u1738_40 03A0  
                                            i2u1770_40 033A  
                                            i2u1930_40 BBBE  
                          i2c_eeprom_writeByte@address 006A  
                                            i2u1922_41 B8F4  
                                            i2u1924_40 B9B4  
                            __motor_calculate_distance 24A0  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1919_41 B82C  
                                            i2u1929_40 BB9E  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5BB4  
                          __end_of_use_cw_limit_string A2C7  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 37A4  
                                    __end_of_spi_tx_rx 3AAA  
                                    __end_of_spi_tx_tx 3F48  
                             __end_of_i2c_display_init 5316  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 60A4  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 6098  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps F02C  
                     __size_of__fill_buffer_get_status 0224  
                                              utoa@buf 0067  
                                           _motor_init 5F66  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0149  
                             _USBCtrlEPServiceComplete 1686  
                                              utoa@val 0069  
                                            _MSD_State 0158  
                                           _motor_stop 53B6  
              __end_of__cluster_from_sector_and_offset 5D6A  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 5D42  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00C2  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015D  
                           _USBStatusStageEnabledFlag2 015C  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2DA  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 5276  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 58A0  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 0160  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                       i2c_eeprom_save_position@buffer 0026  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 50D4  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AFCC  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 005E  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 46B2  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 4642  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1580  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 612C  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 6128  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 569E  
                  __end_of__motor_get_speed_in_degrees 097E  
                          __motor_get_speed_in_degrees 0844  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short F6D0  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F6D0  
                  __end_of_position_display_180_string A1E8  
                          _position_display_180_string A1D3  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 486A  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 38E0  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item C1D8  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3C6C  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 21FA  
                               __end_of_bit_pattern_ae A2E2  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C88  
                                       __end_of___flge 0CFC  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit 00B0  
                __end_of_USBIncrement1msInternalTimers 5F66  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5F46  
                          __end_of__steps_from_degrees F1E6  
                                       __end_of___lmul 4FD0  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5D92  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 0266  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 147A  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 0484  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4BF4  
                 __end_of__display_position_in_degrees 5366  
                __size_of__display_position_in_degrees 0050  
                         __display_position_in_degrees 5316  
                                      _MSDRetryAttempt 0154  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 5B84  
                                       __end_of_reboot 612E  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0162  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 4E70  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 5828  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3D94  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 28FA  
                    __end_of__get_available_root_entry 5D18  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 0141  
                         __end_of_USBConfigureEndpoint 3D94  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler DB44  
                                  __flash_partial_read 44D8  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 5C3E  
                                        _MSDHostNoData 0151  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 54F0  
                    __end_of_USBCtrlEPAllowStatusStage 2DDA  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 008E  
                             __end_of_USBCtrlEPService 3B42  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 01D4  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3BD8  
                                            __i2c_send 60E4  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 60F8  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5F2A  
             __end_of__parse_jump_steps_with_overshoot FE12  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FCC0  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FB  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014C  
                                      _configFile_name 02DC  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F394  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 5F24  
                          _motor_decrease_manual_speed 5F02  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 005B  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 445E  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 188A  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 05C8  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1D70  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 029D  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0045  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 2116  
                    __end_of_overshoot_in_steps_string A23A  
                                 __size_of_system_init 0174  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                             ??_reboot 0060  
                                   __end_of__i2c_start 6108  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 5456  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 1B82  
                               _USBActiveConfiguration 01C3  
                       __end_of_USBStdGetStatusHandler 3656  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                        ?__display_position_in_degrees 0060  
                             __fat_sector_from_cluster 5FA0  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 0057  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C4  
                         __size_of_USBCtrlTrfInHandler 00CA  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 1046  
                     __end_of__motor_distance_to_limit 01F8  
                                  _fat_restore_mbr_fbr 3E26  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 023C  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2FA  
                           _flash_command_pagesize_512 A2F6  
                   __end_of_flash_command_pagesize_528 A2F6  
                           _flash_command_pagesize_528 A2F2  
                                       __flash_is_busy 5E9A  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8446 0061  
         __end_of_i2c_display_program_custom_character 4368  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 42EC  
                                            __get_date 608C  
                                    _flash_sector_read 5D92  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 55CC  
                                            __get_item F866  
                      __end_of_fat_read_from_file_fast E478  
                                       _motor_set_zero 5828  
                                            __get_time 6080  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 4FD0  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 54F0  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 59BC  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5EE0  
                                          __parse_item BDE2  
                  __end_of__divide_jump_size_decrement 47FE  
                          __divide_jump_size_decrement 4790  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 5726  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0115  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 4E70  
                          configFile_read@value_string 01EB  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 5A5A  
          __end_of__step_position_from_divide_position 1E5C  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1D70  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1580  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014D  
                                _fat_get_format_status 32FC  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 0AB0  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 21FA  
                              __fill_buffer_get_status E69C  
                                   _APP_DeviceMSDTasks 6030  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 6006  
                                            __ptext101 0844  
                                            __ptext110 3458  
                                            __ptext102 D606  
                                             ?___flneg 0078  
                                            __ptext111 56E2  
                                            __ptext103 565A  
                                            __ptext200 41EA  
                                            __ptext120 C9B6  
                                            __ptext112 517C  
                                            __ptext104 21FA  
                                            __ptext201 55CC  
                                            __ptext121 CD08  
                                            __ptext113 33AA  
                                            __ptext105 5316  
                                            __ptext210 5B84  
                                            __ptext202 5E08  
                                            __ptext130 C5C8  
                                            __ptext122 FF64  
                                            __ptext114 2C40  
                                            __ptext106 1046  
                                            __ptext211 5726  
                                            __ptext203 4FD0  
                                            __ptext131 D044  
                                            __ptext123 5B54  
                                            __ptext115 553A  
                                            __ptext107 E478  
                                            __ptext220 5C98  
                                            __ptext212 5F46  
                                            __ptext204 6108  
                                            __ptext140 0F30  
                                            __ptext132 6124  
                                            __ptext124 5AC2  
                                            __ptext116 EAAA  
                                            __ptext108 57EA  
                                            __ptext221 35AC  
                                            __ptext213 3AAA  
                                            __ptext205 6110  
                                            __ptext141 0E16  
                                            __ptext133 59F2  
                                            __ptext125 4D62  
                                            __ptext117 0484  
                                            __ptext109 569E  
                                            __ptext230 6062  
                                            __ptext222 05C8  
                                            __ptext214 4C52  
                                            __ptext206 6118  
                                            __ptext150 5A5A  
                                            __ptext142 1370  
                                            __ptext134 5366  
                                            __ptext126 6030  
                                            __ptext118 273E  
                                            __ptext231 1154  
                                            __ptext223 D8C0  
                                            __ptext215 3C6C  
                                            __ptext207 01F8  
                                            __ptext151 3A12  
                                            __ptext143 4A6E  
                                            __ptext135 5224  
                                            __ptext127 DDB8  
                                            __ptext119 5B24  
                                            __ptext240 1262  
                                            __ptext232 4AD0  
                                            __ptext224 405C  
                                            __ptext216 1686  
                                            __ptext208 033E  
                                            __ptext160 4B94  
                                            __ptext152 2F66  
                                            __ptext144 5A26  
                                            __ptext136 3EB8  
                                            __ptext128 097E  
                                            __ptext241 2D0E  
                                            __ptext233 5FD4  
                                            __ptext225 51D0  
                                            __ptext217 37A4  
                                            __ptext209 5984  
                                            __ptext161 F1E6  
                                            __ptext153 6098  
                                            __ptext145 5D92  
                                            __ptext137 4DBC  
                                            __ptext129 4A0C  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext242 2DDA  
                                            __ptext234 6128  
                                            __ptext226 2EA4  
                                            __ptext218 22DC  
                                            __ptext170 5C10  
                                            __ptext162 30DE  
                                            __ptext154 601C  
                                            __ptext146 44D8  
                                            __ptext138 4368  
                                            __ptext243 2AA2  
                                            __ptext235 5A8E  
                                            __ptext227 23BE  
                                            __ptext219 2580  
                                            __ptext171 38E0  
                                            __ptext163 5BE2  
                                            __ptext155 5F24  
                                            __ptext147 5E9A  
                                            __ptext139 E8C0  
                                            __ptext244 0000  
                                            __ptext236 1788  
                                            __ptext228 507E  
                                            __ptext180 6100  
                                            __ptext172 F6D0  
                                            __ptext164 0AB0  
                                            __ptext156 60DA  
                                            __ptext148 4F20  
                                            __ptext237 5864  
                                            __ptext229 1580  
                                            __ptext181 60E4  
                                            __ptext173 24A0  
                                            __ptext165 F538  
                                            __ptext157 3656  
                                            __ptext149 4E16  
                                            __ptext238 3D00  
                                            __ptext190 1E5C  
                                            __ptext182 3FD6  
                                            __ptext174 60A4  
                                            __ptext166 612C  
                                            __ptext158 281C  
                                            __ptext239 4B32  
                                            __ptext191 60B0  
                                            __ptext183 4166  
                                            __ptext175 5614  
                                            __ptext167 53B6  
                                            __ptext159 E69C  
                                            __ptext192 00B0  
                                            __ptext184 45CA  
                                            __ptext176 5406  
                                            __ptext168 5828  
                                            __ptext193 4F78  
                                            __ptext185 60EE  
                                            __ptext177 5DBA  
                                            __ptext169 3502  
                                            __ptext194 147A  
                                            __ptext186 FCC0  
                                            __ptext178 49A8  
                                            __ptext187 FE12  
                                            __ptext179 60F8  
                                            __ptext196 58DA  
                                            __ptext188 5C3E  
                                            __ptext197 1C7C  
                                            __ptext189 EE5C  
                                            __ptext198 B7F6  
                                            __ptext199 3F48  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 5914  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C2  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 281C  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 147A  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 565A  
                  __end_of__divide_jump_size_increment 57EA  
                          __divide_jump_size_increment 57AA  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 60A4  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F538  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5EBE  
                                        _fat_find_file 1F48  
                                    __display_itoa@len 00B4  
                        __size_of_i2c_eeprom_writeByte 0046  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 3196  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 4B94  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00A8  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 5DBA  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0131  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 5864  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 60EE  
                                        _MSDWriteState 0155  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 553A  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F538  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 012E  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 012B  
                                       __display_start 324A  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D0  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D330  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5C10  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 24A0  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 0041  
                           configFile_read@item_string 01CC  
                                          _encoder_run 1C7C  
                             __fat_offset_from_cluster 5FBA  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DDB8  
                                            _motor_isr B7F6  
                           _USBDeferINDataStagePackets 015B  
                                 _active_configuration 014E  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2E2  
                          __size_of_USBCheckStdRequest 00E2  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F394  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F1E6  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 6118  
                                 __end_ofi2__i2c_write 5614  
                                 _USBConfigureEndpoint 3D00  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 3A12  
                                            _spi_tx_tx 3EB8  
                          __size_ofi2__i2c_eeprom_busy 0026  
                      __end_of__motor_decide_direction F866  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 0284  
                                       _USBMSDInHandle 013F  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A24C  
                    __end_of__motor_calculate_distance 2580  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 60E0  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 324A  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0163  
                    __end_of_ExternalFlash_MediaDetect 60E4  
                                             i2_memcpy 4C52  
                                             i2_memset 5C98  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 3196  
                                          __write_root 54A4  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 397A  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 5584  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 576A  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 5AF4  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A2AC  
                               __end_of__display_start 32FC  
                         __end_of_minimum_speed_string A2BA  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 3DA8  
                                            copy_data1 3DC8  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 2660  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5F84  
                                  ??_SYS_InterruptHigh 0049  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0156  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run EE5C  
                                   __end_of_device_dsc A282  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 60C6  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 0708  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FE12  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 6080  
                                       _TransferLength 013D  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2F66  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 5A26  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 49A8  
                                      _MSDWriteHandler D044  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 5C6C  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 0150  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4EC8  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr DB44  
                                             __get_mbr 29D2  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 3FD6  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 6030  
                           _ExternalFlash_CapacityRead 601C  
                                             ___xxtofl 0484  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 6042  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 60D0  
                                             __ptext11 6072  
                                             __ptext20 5E2E  
                                             __ptext12 576A  
                                             __ptext21 594C  
                                             __ptext13 5914  
                                             __ptext30 3196  
                                             __ptext22 50D4  
                                             __ptext14 4722  
                                             __ptext31 C1D8  
                                             __ptext23 5EBE  
                                             __ptext15 6042  
                                             __ptext40 2B72  
                                             __ptext32 188A  
                                             __ptext24 5E52  
                                             __ptext16 3E26  
                                             __ptext41 4BF4  
                                             __ptext33 E01E  
                                             __ptext25 58A0  
                                             __ptext17 32FC  
                                             __ptext50 40E2  
                                             __ptext42 5D42  
                                             __ptext34 0708  
                                             __ptext26 42EC  
                                             __ptext18 29D2  
                                             __ptext51 4552  
                                             __ptext43 6080  
                                             __ptext35 54A4  
                                             __ptext27 5CC4  
                                             __ptext19 DB44  
                                             __ptext60 6052  
                                             __ptext52 F394  
                                             __ptext44 608C  
                                             __ptext36 47FE  
                                             __ptext28 52C6  
                                             __ptext61 43E4  
                                             __ptext53 2030  
                                             __ptext45 5CEE  
                                             __ptext37 4CAE  
                                             __ptext29 324A  
                                             __ptext70 4D08  
                                             __ptext62 445E  
                                             __ptext54 E252  
                                             __ptext46 1B82  
                                             __ptext38 D330  
                                             __ptext71 5FEE  
                                             __ptext63 486A  
                                             __ptext55 36FE  
                                             __ptext47 5128  
                                             __ptext39 59BC  
                                             __ptext80 5C6C  
                                             __ptext72 1A86  
                                             __ptext64 5DE2  
                                             __ptext56 5584  
                                             __ptext48 1988  
                                             __ptext81 48D6  
                                             __ptext73 28FA  
                                             __ptext65 5AF4  
                                             __ptext57 4E70  
                                             __ptext49 4940  
                                             __ptext90 3026  
                                             __ptext82 6120  
                                             __ptext74 5EE0  
                                             __ptext66 5D18  
                                             __ptext58 5FA0  
                                             __ptext91 1D70  
                                             __ptext83 3846  
                                             __ptext75 5D6A  
                                             __ptext67 1F48  
                                             __ptext59 5FBA  
                                             __ptext92 5F02  
                                             __ptext84 EC88  
                                             __ptext76 F02C  
                                             __ptext68 426C  
                                             __ptext93 2116  
                                             __ptext85 AFCC  
                                             __ptext77 0BDA  
                                             __ptext69 BDE2  
                                             __ptext94 4642  
                                             __ptext86 54F0  
                                             __ptext78 F866  
                                             __ptext95 5BB4  
                                             __ptext87 0CFC  
                                             __ptext79 4EC8  
                                             __ptext96 46B2  
                                             __ptext88 5E76  
                                             __ptext97 57AA  
                                             __ptext89 FB64  
                                             __ptext98 4790  
                                             __ptext99 A344  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4A6E  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4A0C  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A270  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 3FD6  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4D08  
                           __flash_copy_page_to_buffer 4CAE  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 36FE  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 4F78  
                              __parse_set_manual_speed 4166  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3D00  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 486A  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FF64  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 58DA  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 2DDA  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 006A  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 4A0C  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 6120  
                           __end_of_motor_items_in_cue 60BC  
                                             _outPipes 0100  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 6110  
                                             _spi_init 576A  
                              __motor_schedule_command 1E5C  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4B32  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5D42  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2D0E  
                      __size_of_motor_set_manual_speed 0078  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0066  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                    i2c_eeprom_writeByte@slave_address 0070  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 5028  
                                    main@startup_timer 00FE  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                __display_position_in_degrees@position 0064  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E69C  
                                     i2_ResetSenseData 4AD0  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015E  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E8C0  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 553A  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 3026  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2F66  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 60D0  
                              __end_of_fat_create_file 0844  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 60B0  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 40E2  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 405C  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 5F84  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A227  
                          _full_circle_in_steps_string A212  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 5A26  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 5406  
                __end_of__flash_write_page_from_buffer 4E16  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4DBC  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A23A  
                         __end_of_beep_duration_string A29E  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0248  
                           __end_of_flash_partial_read 5E08  
                              __end_of_MSDWriteHandler D330  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 3A12  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 397A  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0068  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A290  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 6006  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A344  
                                          ??_motor_isr 0031  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 1262  
                                   _USBWakeFromSuspend 5984  
                                ??__parse_command_long 00A6  
                      motor_set_manual_speed@old_speed 0064  
                                 _maximum_speed_string A29E  
                                   _i2c_display_cursor 5EBE  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A2AC  
                              _USBStdFeatureReqHandler D8C0  
                                      _fat_modify_file E01E  
                                  i2_SYSTEM_Initialize 51D0  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2AA2  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 3026  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0244  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F7  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BF  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 0143  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 0161  
                                       _display_update 594C  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 45CA  
                             _i2c_eeprom_save_position 3F48  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 0024  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature EC88  
                            ??__parse_set_manual_speed 006C  
                                _MSDCheckForErrorCases 0F30  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 6110  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 55CC  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0246  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 1154  
                         _USBStatusStageTimeoutCounter 015F  
                                          i2__i2c_send 6118  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 6108  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 4552  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 6120  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 03F0  
                         __end_of_i2c_eeprom_writeByte 565A  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 5C3E  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014F  
                                          _USBInHandle 0139  
                             _APP_DeviceCustomHIDTasks 3656  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 53B6  
