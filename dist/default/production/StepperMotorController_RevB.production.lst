

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 23 23:54:07 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   118                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   119                           	dabs	1,0x600,512,_msd_buffer
   120                           	dabs	1,0xD00,48,_BDT
   121                           	dabs	1,0xD40,31,_msd_cbw
   122                           	dabs	1,0xD80,13,_msd_csw
   123                           	dabs	1,0xD38,8,_CtrlTrfData
   124                           	dabs	1,0xD30,8,_SetupPkt
   125  0000                     
   126                           ; Version 2.00
   127                           ; Generated 27/05/2018 GMT
   128                           ; 
   129                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F47J53 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     
   161 ;; Function _ExternalFlash_SectorSizeRead is unused but had its address taken
   162  0000                     
   163 ;; Function _ExternalFlash_CapacityRead is unused but had its address taken
   164  0000                     
   165 ;; Function _ExternalFlash_WriteProtectStateGet is unused but had its address taken
   166  0000                     
   167 ;; Function _ExternalFlash_SectorRead is unused but had its address taken
   168  0000                     
   169 ;; Function _ExternalFlash_SectorWrite is unused but had its address taken
   170  0000                     
   171                           	psect	idataBANK1
   172  00EB7C                     __pidataBANK1:
   173                           	opt stack 0
   174                           
   175                           ;initializer for _LUN
   176  00EB7C  F0                 	db	low _ExternalFlash_MediaInitialize
   177  00EB7D  F5                 	db	high _ExternalFlash_MediaInitialize
   178  00EB7E  00                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   179  00EB7F  00                 	db	0
   180  00EB80  00                 	db	0
   181  00EB81  00                 	db	0
   182  00EB82  00                 	db	0
   183  00EB83  00                 	db	0
   184  00EB84  00                 	db	0
   185  00EB85  7A                 	db	low _ExternalFlash_MediaDetect
   186  00EB86  F6                 	db	high _ExternalFlash_MediaDetect
   187  00EB87  00                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   188  00EB88  00                 	db	0
   189  00EB89  00                 	db	0
   190  00EB8A  00                 	db	0
   191  00EB8B  00                 	db	0
   192  00EB8C  00                 	db	0
   193  00EB8D  00                 	db	0
   194  00EB8E  00                 	db	0
   195  00EB8F  00                 	db	0
   196  00EB90  00                 	db	0
   197  00EB91  00                 	db	0
   198  00EB92  00                 	db	0
   199  00EB93  00                 	db	0
   200  00EB94  00                 	db	0
   201  00EB95  00                 	db	0
   202  00EB96  00                 	db	0
   203  00EB97  00                 	db	0
   204  00EB98  00                 	db	0
   205                           
   206                           ;initializer for _display_content
   207  00EB99  2A                 	db	42
   208  00EB9A  20                 	db	32
   209  00EB9B  20                 	db	32
   210  00EB9C  53                 	db	83
   211  00EB9D  74                 	db	116
   212  00EB9E  65                 	db	101
   213  00EB9F  70                 	db	112
   214  00EBA0  70                 	db	112
   215  00EBA1  65                 	db	101
   216  00EBA2  72                 	db	114
   217  00EBA3  20                 	db	32
   218  00EBA4  4D                 	db	77
   219  00EBA5  6F                 	db	111
   220  00EBA6  74                 	db	116
   221  00EBA7  6F                 	db	111
   222  00EBA8  72                 	db	114
   223  00EBA9  20                 	db	32
   224  00EBAA  20                 	db	32
   225  00EBAB  20                 	db	32
   226  00EBAC  2A                 	db	42
   227  00EBAD  2A                 	db	42
   228  00EBAE  20                 	db	32
   229  00EBAF  20                 	db	32
   230  00EBB0  20                 	db	32
   231  00EBB1  20                 	db	32
   232  00EBB2  43                 	db	67
   233  00EBB3  6F                 	db	111
   234  00EBB4  6E                 	db	110
   235  00EBB5  74                 	db	116
   236  00EBB6  72                 	db	114
   237  00EBB7  6F                 	db	111
   238  00EBB8  6C                 	db	108
   239  00EBB9  6C                 	db	108
   240  00EBBA  65                 	db	101
   241  00EBBB  72                 	db	114
   242  00EBBC  20                 	db	32
   243  00EBBD  20                 	db	32
   244  00EBBE  20                 	db	32
   245  00EBBF  20                 	db	32
   246  00EBC0  2A                 	db	42
   247  00EBC1  2A                 	db	42
   248  00EBC2  20                 	db	32
   249  00EBC3  20                 	db	32
   250  00EBC4  20                 	db	32
   251  00EBC5  20                 	db	32
   252  00EBC6  20                 	db	32
   253  00EBC7  20                 	db	32
   254  00EBC8  20                 	db	32
   255  00EBC9  20                 	db	32
   256  00EBCA  20                 	db	32
   257  00EBCB  20                 	db	32
   258  00EBCC  20                 	db	32
   259  00EBCD  20                 	db	32
   260  00EBCE  20                 	db	32
   261  00EBCF  20                 	db	32
   262  00EBD0  20                 	db	32
   263  00EBD1  20                 	db	32
   264  00EBD2  20                 	db	32
   265  00EBD3  20                 	db	32
   266  00EBD4  2A                 	db	42
   267  00EBD5  2A                 	db	42
   268  00EBD6  20                 	db	32
   269  00EBD7  20                 	db	32
   270  00EBD8  73                 	db	115
   271  00EBD9  6F                 	db	111
   272  00EBDA  6C                 	db	108
   273  00EBDB  64                 	db	100
   274  00EBDC  65                 	db	101
   275  00EBDD  72                 	db	114
   276  00EBDE  6E                 	db	110
   277  00EBDF  65                 	db	101
   278  00EBE0  72                 	db	114
   279  00EBE1  64                 	db	100
   280  00EBE2  2E                 	db	46
   281  00EBE3  63                 	db	99
   282  00EBE4  6F                 	db	111
   283  00EBE5  6D                 	db	109
   284  00EBE6  20                 	db	32
   285  00EBE7  20                 	db	32
   286  00EBE8  2A                 	db	42
   287                           
   288                           	psect	idataBANK2
   289  00F5D6                     __pidataBANK2:
   290                           	opt stack 0
   291                           
   292                           ;initializer for i2c_display_init@F6892
   293  00F5D6  3A                 	db	58
   294  00F5D7  1E                 	db	30
   295  00F5D8  39                 	db	57
   296  00F5D9  0C                 	db	12
   297  00F5DA  74                 	db	116
   298  00F5DB  5C                 	db	92
   299  00F5DC  6D                 	db	109
   300  00F5DD  0C                 	db	12
   301  00F5DE  01                 	db	1
   302                           
   303                           ;initializer for __i2c_display_send_init_sequence@F6889
   304  00F5DF  3A                 	db	58
   305  00F5E0  1E                 	db	30
   306  00F5E1  39                 	db	57
   307  00F5E2  0C                 	db	12
   308  00F5E3  74                 	db	116
   309  00F5E4  5C                 	db	92
   310  00F5E5  6D                 	db	109
   311  00F5E6  0C                 	db	12
   312  00F5E7  01                 	db	1
   313                           
   314                           ;initializer for _tx_buf
   315  00F5E8  01                 	db	1
   316  00F5E9  02                 	db	2
   317  00F5EA  03                 	db	3
   318  00F5EB  04                 	db	4
   319  00F5EC  05                 	db	5
   320  00F5ED  06                 	db	6
   321  00F5EE  07                 	db	7
   322  00F5EF  08                 	db	8
   323                           
   324                           	psect	mediumconst
   325  00908A                     __pmediumconst:
   326                           	opt stack 0
   327  00908A  00                 	db	0
   328  00908B                     _motor_speed_lookup:
   329                           	opt stack 0
   330  00908B  0008               	dw	8
   331  00908D  000C               	dw	12
   332  00908F  0010               	dw	16
   333  009091  0013               	dw	19
   334  009093  0016               	dw	22
   335  009095  0019               	dw	25
   336  009097  001C               	dw	28
   337  009099  001E               	dw	30
   338  00909B  0021               	dw	33
   339  00909D  0023               	dw	35
   340  00909F  0026               	dw	38
   341  0090A1  0028               	dw	40
   342  0090A3  002A               	dw	42
   343  0090A5  002C               	dw	44
   344  0090A7  002E               	dw	46
   345  0090A9  0030               	dw	48
   346  0090AB  0032               	dw	50
   347  0090AD  0034               	dw	52
   348  0090AF  0036               	dw	54
   349  0090B1  0038               	dw	56
   350  0090B3  003A               	dw	58
   351  0090B5  003C               	dw	60
   352  0090B7  003D               	dw	61
   353  0090B9  003F               	dw	63
   354  0090BB  0041               	dw	65
   355  0090BD  0043               	dw	67
   356  0090BF  0045               	dw	69
   357  0090C1  0046               	dw	70
   358  0090C3  0048               	dw	72
   359  0090C5  0049               	dw	73
   360  0090C7  004B               	dw	75
   361  0090C9  004D               	dw	77
   362  0090CB  004E               	dw	78
   363  0090CD  0050               	dw	80
   364  0090CF  0051               	dw	81
   365  0090D1  0053               	dw	83
   366  0090D3  0054               	dw	84
   367  0090D5  0056               	dw	86
   368  0090D7  0057               	dw	87
   369  0090D9  0059               	dw	89
   370  0090DB  005A               	dw	90
   371  0090DD  005C               	dw	92
   372  0090DF  005D               	dw	93
   373  0090E1  005F               	dw	95
   374  0090E3  0060               	dw	96
   375  0090E5  0062               	dw	98
   376  0090E7  0063               	dw	99
   377  0090E9  0064               	dw	100
   378  0090EB  0066               	dw	102
   379  0090ED  0067               	dw	103
   380  0090EF  0069               	dw	105
   381  0090F1  006A               	dw	106
   382  0090F3  006C               	dw	108
   383  0090F5  006D               	dw	109
   384  0090F7  006E               	dw	110
   385  0090F9  0070               	dw	112
   386  0090FB  0071               	dw	113
   387  0090FD  0072               	dw	114
   388  0090FF  0073               	dw	115
   389  009101  0074               	dw	116
   390  009103  0076               	dw	118
   391  009105  0078               	dw	120
   392  009107  0079               	dw	121
   393  009109  007A               	dw	122
   394  00910B  007B               	dw	123
   395  00910D  007D               	dw	125
   396  00910F  007E               	dw	126
   397  009111  007F               	dw	127
   398  009113  0082               	dw	130
   399  009115  0085               	dw	133
   400  009117  0087               	dw	135
   401  009119  008A               	dw	138
   402  00911B  008C               	dw	140
   403  00911D  008F               	dw	143
   404  00911F  0091               	dw	145
   405  009121  0092               	dw	146
   406  009123  0094               	dw	148
   407  009125  0098               	dw	152
   408  009127  009A               	dw	154
   409  009129  009C               	dw	156
   410  00912B  009E               	dw	158
   411  00912D  00A1               	dw	161
   412  00912F  00A3               	dw	163
   413  009131  00A5               	dw	165
   414  009133  00A7               	dw	167
   415  009135  00AA               	dw	170
   416  009137  00AC               	dw	172
   417  009139  00AF               	dw	175
   418  00913B  00B2               	dw	178
   419  00913D  00B4               	dw	180
   420  00913F  00B7               	dw	183
   421  009141  00B8               	dw	184
   422  009143  00BA               	dw	186
   423  009145  00BC               	dw	188
   424  009147  00BE               	dw	190
   425  009149  00C0               	dw	192
   426  00914B  00C3               	dw	195
   427  00914D  00C4               	dw	196
   428  00914F  00C6               	dw	198
   429  009151  00C8               	dw	200
   430  009153  00CA               	dw	202
   431  009155  00CC               	dw	204
   432  009157  00CE               	dw	206
   433  009159  00D0               	dw	208
   434  00915B  00D2               	dw	210
   435  00915D  00D4               	dw	212
   436  00915F  00D6               	dw	214
   437  009161  00D8               	dw	216
   438  009163  00D9               	dw	217
   439  009165  00DB               	dw	219
   440  009167  00DD               	dw	221
   441  009169  00DF               	dw	223
   442  00916B  00E1               	dw	225
   443  00916D  00E2               	dw	226
   444  00916F  00E5               	dw	229
   445  009171  00E7               	dw	231
   446  009173  00E8               	dw	232
   447  009175  00EA               	dw	234
   448  009177  00EC               	dw	236
   449  009179  00EE               	dw	238
   450  00917B  00EF               	dw	239
   451  00917D  00F2               	dw	242
   452  00917F  00F3               	dw	243
   453  009181  00F5               	dw	245
   454  009183  00F7               	dw	247
   455  009185  00F8               	dw	248
   456  009187  00FB               	dw	251
   457  009189  00FD               	dw	253
   458  00918B  0100               	dw	256
   459  00918D  0103               	dw	259
   460  00918F  0104               	dw	260
   461  009191  0107               	dw	263
   462  009193  010A               	dw	266
   463  009195  010C               	dw	268
   464  009197  010F               	dw	271
   465  009199  0112               	dw	274
   466  00919B  0114               	dw	276
   467  00919D  0117               	dw	279
   468  00919F  0119               	dw	281
   469  0091A1  011C               	dw	284
   470  0091A3  011E               	dw	286
   471  0091A5  0121               	dw	289
   472  0091A7  0123               	dw	291
   473  0091A9  0125               	dw	293
   474  0091AB  0129               	dw	297
   475  0091AD  012B               	dw	299
   476  0091AF  012C               	dw	300
   477  0091B1  012E               	dw	302
   478  0091B3  0132               	dw	306
   479  0091B5  0134               	dw	308
   480  0091B7  0136               	dw	310
   481  0091B9  0138               	dw	312
   482  0091BB  013B               	dw	315
   483  0091BD  013D               	dw	317
   484  0091BF  013F               	dw	319
   485  0091C1  0143               	dw	323
   486  0091C3  0146               	dw	326
   487  0091C5  0148               	dw	328
   488  0091C7  014A               	dw	330
   489  0091C9  014C               	dw	332
   490  0091CB  014F               	dw	335
   491  0091CD  0151               	dw	337
   492  0091CF  0154               	dw	340
   493  0091D1  0156               	dw	342
   494  0091D3  0159               	dw	345
   495  0091D5  015B               	dw	347
   496  0091D7  015E               	dw	350
   497  0091D9  0160               	dw	352
   498  0091DB  0163               	dw	355
   499  0091DD  0166               	dw	358
   500  0091DF  0169               	dw	361
   501  0091E1  016B               	dw	363
   502  0091E3  016E               	dw	366
   503  0091E5  0171               	dw	369
   504  0091E7  0174               	dw	372
   505  0091E9  0177               	dw	375
   506  0091EB  017A               	dw	378
   507  0091ED  017D               	dw	381
   508  0091EF  0180               	dw	384
   509  0091F1  0183               	dw	387
   510  0091F3  0187               	dw	391
   511  0091F5  018A               	dw	394
   512  0091F7  018D               	dw	397
   513  0091F9  0191               	dw	401
   514  0091FB  0194               	dw	404
   515  0091FD  0198               	dw	408
   516  0091FF  019B               	dw	411
   517  009201  019F               	dw	415
   518  009203  01A3               	dw	419
   519  009205  01A6               	dw	422
   520  009207  01AA               	dw	426
   521  009209  01AE               	dw	430
   522  00920B  01B2               	dw	434
   523  00920D  01B6               	dw	438
   524  00920F  01BA               	dw	442
   525  009211  01BE               	dw	446
   526  009213  01C3               	dw	451
   527  009215  01C7               	dw	455
   528  009217  01CC               	dw	460
   529  009219  01D0               	dw	464
   530  00921B  01D5               	dw	469
   531  00921D  01D9               	dw	473
   532  00921F  01DE               	dw	478
   533  009221  01E3               	dw	483
   534  009223  01E8               	dw	488
   535  009225  01ED               	dw	493
   536  009227  01F3               	dw	499
   537  009229  01F8               	dw	504
   538  00922B  01FE               	dw	510
   539  00922D  0203               	dw	515
   540  00922F  0209               	dw	521
   541  009231  020F               	dw	527
   542  009233  0215               	dw	533
   543  009235  021B               	dw	539
   544  009237  0221               	dw	545
   545  009239  0227               	dw	551
   546  00923B  022E               	dw	558
   547  00923D  0235               	dw	565
   548  00923F  023C               	dw	572
   549  009241  0243               	dw	579
   550  009243  024A               	dw	586
   551  009245  0251               	dw	593
   552  009247  0259               	dw	601
   553  009249  0261               	dw	609
   554  00924B  0269               	dw	617
   555  00924D  0271               	dw	625
   556  00924F  0279               	dw	633
   557  009251  0282               	dw	642
   558  009253  028B               	dw	651
   559  009255  0294               	dw	660
   560  009257  029E               	dw	670
   561  009259  02A7               	dw	679
   562  00925B  02B1               	dw	689
   563  00925D  02BC               	dw	700
   564  00925F  02C6               	dw	710
   565  009261  02D1               	dw	721
   566  009263  02DC               	dw	732
   567  009265  02DC               	dw	732
   568  009267  02DF               	dw	735
   569  009269  02E2               	dw	738
   570  00926B  02E5               	dw	741
   571  00926D  02E8               	dw	744
   572  00926F  02EB               	dw	747
   573  009271  02EE               	dw	750
   574  009273  02F1               	dw	753
   575  009275  02F4               	dw	756
   576  009277  02F7               	dw	759
   577  009279  02FA               	dw	762
   578  00927B  02FD               	dw	765
   579  00927D  0300               	dw	768
   580  00927F  0304               	dw	772
   581  009281  0307               	dw	775
   582  009283  030A               	dw	778
   583  009285  030D               	dw	781
   584  009287  0311               	dw	785
   585  009289  0314               	dw	788
   586  00928B  0317               	dw	791
   587  00928D  031A               	dw	794
   588  00928F  031E               	dw	798
   589  009291  0321               	dw	801
   590  009293  0325               	dw	805
   591  009295  0328               	dw	808
   592  009297  032C               	dw	812
   593  009299  032F               	dw	815
   594  00929B  0333               	dw	819
   595  00929D  0336               	dw	822
   596  00929F  033A               	dw	826
   597  0092A1  033E               	dw	830
   598  0092A3  0341               	dw	833
   599  0092A5  0345               	dw	837
   600  0092A7  0349               	dw	841
   601  0092A9  034D               	dw	845
   602  0092AB  0350               	dw	848
   603  0092AD  0354               	dw	852
   604  0092AF  0358               	dw	856
   605  0092B1  035C               	dw	860
   606  0092B3  0360               	dw	864
   607  0092B5  0364               	dw	868
   608  0092B7  0368               	dw	872
   609  0092B9  036C               	dw	876
   610  0092BB  0370               	dw	880
   611  0092BD  0374               	dw	884
   612  0092BF  0379               	dw	889
   613  0092C1  037D               	dw	893
   614  0092C3  0381               	dw	897
   615  0092C5  0385               	dw	901
   616  0092C7  038A               	dw	906
   617  0092C9  038E               	dw	910
   618  0092CB  0393               	dw	915
   619  0092CD  0397               	dw	919
   620  0092CF  039C               	dw	924
   621  0092D1  03A0               	dw	928
   622  0092D3  03A5               	dw	933
   623  0092D5  03AA               	dw	938
   624  0092D7  03AE               	dw	942
   625  0092D9  03B3               	dw	947
   626  0092DB  03B8               	dw	952
   627  0092DD  03BD               	dw	957
   628  0092DF  03C2               	dw	962
   629  0092E1  03C6               	dw	966
   630  0092E3  03CC               	dw	972
   631  0092E5  03D1               	dw	977
   632  0092E7  03D6               	dw	982
   633  0092E9  03DB               	dw	987
   634  0092EB  03E0               	dw	992
   635  0092ED  03E5               	dw	997
   636  0092EF  03EB               	dw	1003
   637  0092F1  03F0               	dw	1008
   638  0092F3  03F6               	dw	1014
   639  0092F5  03FB               	dw	1019
   640  0092F7  0401               	dw	1025
   641  0092F9  0406               	dw	1030
   642  0092FB  040C               	dw	1036
   643  0092FD  0412               	dw	1042
   644  0092FF  0417               	dw	1047
   645  009301  041D               	dw	1053
   646  009303  0423               	dw	1059
   647  009305  0429               	dw	1065
   648  009307  042F               	dw	1071
   649  009309  0436               	dw	1078
   650  00930B  043C               	dw	1084
   651  00930D  0442               	dw	1090
   652  00930F  0448               	dw	1096
   653  009311  044F               	dw	1103
   654  009313  0455               	dw	1109
   655  009315  045C               	dw	1116
   656  009317  0463               	dw	1123
   657  009319  046A               	dw	1130
   658  00931B  0470               	dw	1136
   659  00931D  0477               	dw	1143
   660  00931F  047E               	dw	1150
   661  009321  0485               	dw	1157
   662  009323  048D               	dw	1165
   663  009325  0494               	dw	1172
   664  009327  049B               	dw	1179
   665  009329  04A3               	dw	1187
   666  00932B  04AA               	dw	1194
   667  00932D  04B2               	dw	1202
   668  00932F  04BA               	dw	1210
   669  009331  04C2               	dw	1218
   670  009333  04C9               	dw	1225
   671  009335  04D2               	dw	1234
   672  009337  04DA               	dw	1242
   673  009339  04E2               	dw	1250
   674  00933B  04EA               	dw	1258
   675  00933D  04F3               	dw	1267
   676  00933F  04FC               	dw	1276
   677  009341  0504               	dw	1284
   678  009343  050D               	dw	1293
   679  009345  0516               	dw	1302
   680  009347  051F               	dw	1311
   681  009349  0528               	dw	1320
   682  00934B  0532               	dw	1330
   683  00934D  053B               	dw	1339
   684  00934F  0545               	dw	1349
   685  009351  054F               	dw	1359
   686  009353  0559               	dw	1369
   687  009355  0563               	dw	1379
   688  009357  056D               	dw	1389
   689  009359  0577               	dw	1399
   690  00935B  0582               	dw	1410
   691  00935D  058C               	dw	1420
   692  00935F  0597               	dw	1431
   693  009361  05A2               	dw	1442
   694  009363  05AD               	dw	1453
   695  009365  05B9               	dw	1465
   696  009367  05C4               	dw	1476
   697  009369  05D0               	dw	1488
   698  00936B  05DC               	dw	1500
   699  00936D  05E8               	dw	1512
   700  00936F  05F4               	dw	1524
   701  009371  0601               	dw	1537
   702  009373  060E               	dw	1550
   703  009375  061A               	dw	1562
   704  009377  0628               	dw	1576
   705  009379  0635               	dw	1589
   706  00937B  0643               	dw	1603
   707  00937D  0650               	dw	1616
   708  00937F  065E               	dw	1630
   709  009381  066D               	dw	1645
   710  009383  067B               	dw	1659
   711  009385  068A               	dw	1674
   712  009387  0699               	dw	1689
   713  009389  06A9               	dw	1705
   714  00938B  06B8               	dw	1720
   715  00938D  06C8               	dw	1736
   716  00938F  06D8               	dw	1752
   717  009391  06E9               	dw	1769
   718  009393  06FA               	dw	1786
   719  009395  070B               	dw	1803
   720  009397  071C               	dw	1820
   721  009399  072E               	dw	1838
   722  00939B  0740               	dw	1856
   723  00939D  0753               	dw	1875
   724  00939F  0766               	dw	1894
   725  0093A1  0779               	dw	1913
   726  0093A3  078D               	dw	1933
   727  0093A5  07A1               	dw	1953
   728  0093A7  07B6               	dw	1974
   729  0093A9  07CB               	dw	1995
   730  0093AB  07E0               	dw	2016
   731  0093AD  07F6               	dw	2038
   732  0093AF  080C               	dw	2060
   733  0093B1  0823               	dw	2083
   734  0093B3  083B               	dw	2107
   735  0093B5  0853               	dw	2131
   736  0093B7  086B               	dw	2155
   737  0093B9  0884               	dw	2180
   738  0093BB  089E               	dw	2206
   739  0093BD  08B8               	dw	2232
   740  0093BF  08D3               	dw	2259
   741  0093C1  08EF               	dw	2287
   742  0093C3  090B               	dw	2315
   743  0093C5  0928               	dw	2344
   744  0093C7  0945               	dw	2373
   745  0093C9  0964               	dw	2404
   746  0093CB  0983               	dw	2435
   747  0093CD  09A3               	dw	2467
   748  0093CF  09C4               	dw	2500
   749  0093D1  09E6               	dw	2534
   750  0093D3  0A08               	dw	2568
   751  0093D5  0A2C               	dw	2604
   752  0093D7  0A51               	dw	2641
   753  0093D9  0A77               	dw	2679
   754  0093DB  0A9D               	dw	2717
   755  0093DD  0AC5               	dw	2757
   756  0093DF  0AEF               	dw	2799
   757  0093E1  0B19               	dw	2841
   758  0093E3  0B45               	dw	2885
   759  0093E5  0B72               	dw	2930
   760  0093E7  0B72               	dw	2930
   761  0093E9  0B7D               	dw	2941
   762  0093EB  0B89               	dw	2953
   763  0093ED  0B94               	dw	2964
   764  0093EF  0BA0               	dw	2976
   765  0093F1  0BAC               	dw	2988
   766  0093F3  0BB8               	dw	3000
   767  0093F5  0BC4               	dw	3012
   768  0093F7  0BD0               	dw	3024
   769  0093F9  0BDC               	dw	3036
   770  0093FB  0BE9               	dw	3049
   771  0093FD  0BF5               	dw	3061
   772  0093FF  0C02               	dw	3074
   773  009401  0C0E               	dw	3086
   774  009403  0C1B               	dw	3099
   775  009405  0C28               	dw	3112
   776  009407  0C35               	dw	3125
   777  009409  0C42               	dw	3138
   778  00940B  0C4F               	dw	3151
   779  00940D  0C5D               	dw	3165
   780  00940F  0C6A               	dw	3178
   781  009411  0C77               	dw	3191
   782  009413  0C85               	dw	3205
   783  009415  0C93               	dw	3219
   784  009417  0CA1               	dw	3233
   785  009419  0CAF               	dw	3247
   786  00941B  0CBD               	dw	3261
   787  00941D  0CCB               	dw	3275
   788  00941F  0CD9               	dw	3289
   789  009421  0CE8               	dw	3304
   790  009423  0CF7               	dw	3319
   791  009425  0D05               	dw	3333
   792  009427  0D14               	dw	3348
   793  009429  0D23               	dw	3363
   794  00942B  0D32               	dw	3378
   795  00942D  0D42               	dw	3394
   796  00942F  0D51               	dw	3409
   797  009431  0D61               	dw	3425
   798  009433  0D70               	dw	3440
   799  009435  0D80               	dw	3456
   800  009437  0D90               	dw	3472
   801  009439  0DA0               	dw	3488
   802  00943B  0DB1               	dw	3505
   803  00943D  0DC1               	dw	3521
   804  00943F  0DD2               	dw	3538
   805  009441  0DE3               	dw	3555
   806  009443  0DF3               	dw	3571
   807  009445  0E05               	dw	3589
   808  009447  0E16               	dw	3606
   809  009449  0E27               	dw	3623
   810  00944B  0E39               	dw	3641
   811  00944D  0E4B               	dw	3659
   812  00944F  0E5C               	dw	3676
   813  009451  0E6F               	dw	3695
   814  009453  0E81               	dw	3713
   815  009455  0E93               	dw	3731
   816  009457  0EA6               	dw	3750
   817  009459                     __end_of_motor_speed_lookup:
   818                           	opt stack 0
   819  009459                     _motor_steps_lookup:
   820                           	opt stack 0
   821  009459  0001               	dw	1
   822  00945B  0002               	dw	2
   823  00945D  0003               	dw	3
   824  00945F  0004               	dw	4
   825  009461  0005               	dw	5
   826  009463  0006               	dw	6
   827  009465  0007               	dw	7
   828  009467  0008               	dw	8
   829  009469  0009               	dw	9
   830  00946B  000A               	dw	10
   831  00946D  000B               	dw	11
   832  00946F  000C               	dw	12
   833  009471  000D               	dw	13
   834  009473  000E               	dw	14
   835  009475  000F               	dw	15
   836  009477  0010               	dw	16
   837  009479  0011               	dw	17
   838  00947B  0012               	dw	18
   839  00947D  0013               	dw	19
   840  00947F  0014               	dw	20
   841  009481  0015               	dw	21
   842  009483  0016               	dw	22
   843  009485  0017               	dw	23
   844  009487  0018               	dw	24
   845  009489  0019               	dw	25
   846  00948B  001A               	dw	26
   847  00948D  001B               	dw	27
   848  00948F  001C               	dw	28
   849  009491  001D               	dw	29
   850  009493  001E               	dw	30
   851  009495  001F               	dw	31
   852  009497  0020               	dw	32
   853  009499  0021               	dw	33
   854  00949B  0022               	dw	34
   855  00949D  0023               	dw	35
   856  00949F  0024               	dw	36
   857  0094A1  0025               	dw	37
   858  0094A3  0026               	dw	38
   859  0094A5  0027               	dw	39
   860  0094A7  0028               	dw	40
   861  0094A9  0029               	dw	41
   862  0094AB  002A               	dw	42
   863  0094AD  002B               	dw	43
   864  0094AF  002C               	dw	44
   865  0094B1  002D               	dw	45
   866  0094B3  002E               	dw	46
   867  0094B5  002F               	dw	47
   868  0094B7  0030               	dw	48
   869  0094B9  0031               	dw	49
   870  0094BB  0032               	dw	50
   871  0094BD  0033               	dw	51
   872  0094BF  0034               	dw	52
   873  0094C1  0035               	dw	53
   874  0094C3  0036               	dw	54
   875  0094C5  0037               	dw	55
   876  0094C7  0038               	dw	56
   877  0094C9  0039               	dw	57
   878  0094CB  003A               	dw	58
   879  0094CD  003B               	dw	59
   880  0094CF  003C               	dw	60
   881  0094D1  003D               	dw	61
   882  0094D3  003E               	dw	62
   883  0094D5  003F               	dw	63
   884  0094D7  0040               	dw	64
   885  0094D9  0041               	dw	65
   886  0094DB  0042               	dw	66
   887  0094DD  0043               	dw	67
   888  0094DF  0045               	dw	69
   889  0094E1  0047               	dw	71
   890  0094E3  0049               	dw	73
   891  0094E5  004B               	dw	75
   892  0094E7  004D               	dw	77
   893  0094E9  004F               	dw	79
   894  0094EB  0051               	dw	81
   895  0094ED  0053               	dw	83
   896  0094EF  0055               	dw	85
   897  0094F1  0057               	dw	87
   898  0094F3  0059               	dw	89
   899  0094F5  005B               	dw	91
   900  0094F7  005D               	dw	93
   901  0094F9  005F               	dw	95
   902  0094FB  0061               	dw	97
   903  0094FD  0063               	dw	99
   904  0094FF  0065               	dw	101
   905  009501  0067               	dw	103
   906  009503  0069               	dw	105
   907  009505  006B               	dw	107
   908  009507  006E               	dw	110
   909  009509  0070               	dw	112
   910  00950B  0073               	dw	115
   911  00950D  0075               	dw	117
   912  00950F  0077               	dw	119
   913  009511  0079               	dw	121
   914  009513  007B               	dw	123
   915  009515  007D               	dw	125
   916  009517  007F               	dw	127
   917  009519  0081               	dw	129
   918  00951B  0083               	dw	131
   919  00951D  0085               	dw	133
   920  00951F  0087               	dw	135
   921  009521  0089               	dw	137
   922  009523  008B               	dw	139
   923  009525  008D               	dw	141
   924  009527  008F               	dw	143
   925  009529  0091               	dw	145
   926  00952B  0093               	dw	147
   927  00952D  0095               	dw	149
   928  00952F  0097               	dw	151
   929  009531  0099               	dw	153
   930  009533  009B               	dw	155
   931  009535  009D               	dw	157
   932  009537  009F               	dw	159
   933  009539  00A1               	dw	161
   934  00953B  00A3               	dw	163
   935  00953D  00A5               	dw	165
   936  00953F  00A7               	dw	167
   937  009541  00A9               	dw	169
   938  009543  00AB               	dw	171
   939  009545  00AD               	dw	173
   940  009547  00AF               	dw	175
   941  009549  00B1               	dw	177
   942  00954B  00B3               	dw	179
   943  00954D  00B5               	dw	181
   944  00954F  00B7               	dw	183
   945  009551  00B9               	dw	185
   946  009553  00BB               	dw	187
   947  009555  00BD               	dw	189
   948  009557  00C0               	dw	192
   949  009559  00C3               	dw	195
   950  00955B  00C6               	dw	198
   951  00955D  00C9               	dw	201
   952  00955F  00CC               	dw	204
   953  009561  00CF               	dw	207
   954  009563  00D2               	dw	210
   955  009565  00D5               	dw	213
   956  009567  00D8               	dw	216
   957  009569  00DB               	dw	219
   958  00956B  00DE               	dw	222
   959  00956D  00E1               	dw	225
   960  00956F  00E4               	dw	228
   961  009571  00E7               	dw	231
   962  009573  00EA               	dw	234
   963  009575  00ED               	dw	237
   964  009577  00F0               	dw	240
   965  009579  00F3               	dw	243
   966  00957B  00F6               	dw	246
   967  00957D  00F9               	dw	249
   968  00957F  00FC               	dw	252
   969  009581  00FF               	dw	255
   970  009583  0102               	dw	258
   971  009585  0105               	dw	261
   972  009587  0108               	dw	264
   973  009589  010B               	dw	267
   974  00958B  010E               	dw	270
   975  00958D  0111               	dw	273
   976  00958F  0114               	dw	276
   977  009591  0117               	dw	279
   978  009593  011A               	dw	282
   979  009595  011D               	dw	285
   980  009597  0120               	dw	288
   981  009599  0123               	dw	291
   982  00959B  0126               	dw	294
   983  00959D  012A               	dw	298
   984  00959F  012D               	dw	301
   985  0095A1  0130               	dw	304
   986  0095A3  0133               	dw	307
   987  0095A5  0137               	dw	311
   988  0095A7  013A               	dw	314
   989  0095A9  013E               	dw	318
   990  0095AB  0142               	dw	322
   991  0095AD  0145               	dw	325
   992  0095AF  0149               	dw	329
   993  0095B1  014D               	dw	333
   994  0095B3  0151               	dw	337
   995  0095B5  0155               	dw	341
   996  0095B7  0159               	dw	345
   997  0095B9  015D               	dw	349
   998  0095BB  0161               	dw	353
   999  0095BD  0166               	dw	358
  1000  0095BF  016A               	dw	362
  1001  0095C1  016E               	dw	366
  1002  0095C3  0173               	dw	371
  1003  0095C5  0178               	dw	376
  1004  0095C7  017D               	dw	381
  1005  0095C9  0182               	dw	386
  1006  0095CB  0187               	dw	391
  1007  0095CD  018C               	dw	396
  1008  0095CF  0191               	dw	401
  1009  0095D1  0196               	dw	406
  1010  0095D3  019C               	dw	412
  1011  0095D5  01A1               	dw	417
  1012  0095D7  01A7               	dw	423
  1013  0095D9  01AD               	dw	429
  1014  0095DB  01B3               	dw	435
  1015  0095DD  01B9               	dw	441
  1016  0095DF  01BF               	dw	447
  1017  0095E1  01C6               	dw	454
  1018  0095E3  01CC               	dw	460
  1019  0095E5  01D3               	dw	467
  1020  0095E7  01DA               	dw	474
  1021  0095E9  01E1               	dw	481
  1022  0095EB  01E8               	dw	488
  1023  0095ED  01F0               	dw	496
  1024  0095EF  01F7               	dw	503
  1025  0095F1  01FF               	dw	511
  1026  0095F3  0207               	dw	519
  1027  0095F5  020F               	dw	527
  1028  0095F7  0218               	dw	536
  1029  0095F9  0221               	dw	545
  1030  0095FB  022A               	dw	554
  1031  0095FD  0233               	dw	563
  1032  0095FF  023D               	dw	573
  1033  009601  0247               	dw	583
  1034  009603  0251               	dw	593
  1035  009605  025C               	dw	604
  1036  009607  0267               	dw	615
  1037  009609  0272               	dw	626
  1038  00960B  027E               	dw	638
  1039  00960D  028A               	dw	650
  1040  00960F  0297               	dw	663
  1041  009611  02A4               	dw	676
  1042  009613  02B2               	dw	690
  1043  009615  02C0               	dw	704
  1044  009617  02CF               	dw	719
  1045  009619  02DF               	dw	735
  1046  00961B  02EF               	dw	751
  1047  00961D  02FF               	dw	767
  1048  00961F  0311               	dw	785
  1049  009621  0323               	dw	803
  1050  009623  0336               	dw	822
  1051  009625  0349               	dw	841
  1052  009627  035E               	dw	862
  1053  009629  0373               	dw	883
  1054  00962B  0389               	dw	905
  1055  00962D  03A1               	dw	929
  1056  00962F  03B9               	dw	953
  1057  009631  03D3               	dw	979
  1058  009633  03DD               	dw	989
  1059  009635  03E4               	dw	996
  1060  009637  03EA               	dw	1002
  1061  009639  03F1               	dw	1009
  1062  00963B  03F8               	dw	1016
  1063  00963D  03FF               	dw	1023
  1064  00963F  0406               	dw	1030
  1065  009641  040D               	dw	1037
  1066  009643  0415               	dw	1045
  1067  009645  041C               	dw	1052
  1068  009647  0424               	dw	1060
  1069  009649  042B               	dw	1067
  1070  00964B  0433               	dw	1075
  1071  00964D  043B               	dw	1083
  1072  00964F  0442               	dw	1090
  1073  009651  044A               	dw	1098
  1074  009653  0452               	dw	1106
  1075  009655  045A               	dw	1114
  1076  009657  0463               	dw	1123
  1077  009659  046B               	dw	1131
  1078  00965B  0474               	dw	1140
  1079  00965D  047C               	dw	1148
  1080  00965F  0485               	dw	1157
  1081  009661  048E               	dw	1166
  1082  009663  0496               	dw	1174
  1083  009665  049F               	dw	1183
  1084  009667  04A9               	dw	1193
  1085  009669  04B2               	dw	1202
  1086  00966B  04BB               	dw	1211
  1087  00966D  04C5               	dw	1221
  1088  00966F  04CE               	dw	1230
  1089  009671  04D8               	dw	1240
  1090  009673  04E2               	dw	1250
  1091  009675  04EC               	dw	1260
  1092  009677  04F6               	dw	1270
  1093  009679  0500               	dw	1280
  1094  00967B  050B               	dw	1291
  1095  00967D  0515               	dw	1301
  1096  00967F  0520               	dw	1312
  1097  009681  052B               	dw	1323
  1098  009683  0536               	dw	1334
  1099  009685  0541               	dw	1345
  1100  009687  054C               	dw	1356
  1101  009689  0558               	dw	1368
  1102  00968B  0564               	dw	1380
  1103  00968D  056F               	dw	1391
  1104  00968F  057B               	dw	1403
  1105  009691  0587               	dw	1415
  1106  009693  0594               	dw	1428
  1107  009695  05A0               	dw	1440
  1108  009697  05AD               	dw	1453
  1109  009699  05BA               	dw	1466
  1110  00969B  05C7               	dw	1479
  1111  00969D  05D4               	dw	1492
  1112  00969F  05E2               	dw	1506
  1113  0096A1  05EF               	dw	1519
  1114  0096A3  05FD               	dw	1533
  1115  0096A5  060B               	dw	1547
  1116  0096A7  0619               	dw	1561
  1117  0096A9  0628               	dw	1576
  1118  0096AB  0637               	dw	1591
  1119  0096AD  0646               	dw	1606
  1120  0096AF  0655               	dw	1621
  1121  0096B1  0664               	dw	1636
  1122  0096B3  0674               	dw	1652
  1123  0096B5  0684               	dw	1668
  1124  0096B7  0694               	dw	1684
  1125  0096B9  06A4               	dw	1700
  1126  0096BB  06B5               	dw	1717
  1127  0096BD  06C6               	dw	1734
  1128  0096BF  06D7               	dw	1751
  1129  0096C1  06E9               	dw	1769
  1130  0096C3  06FA               	dw	1786
  1131  0096C5  070C               	dw	1804
  1132  0096C7  071F               	dw	1823
  1133  0096C9  0731               	dw	1841
  1134  0096CB  0744               	dw	1860
  1135  0096CD  0758               	dw	1880
  1136  0096CF  076B               	dw	1899
  1137  0096D1  077F               	dw	1919
  1138  0096D3  0793               	dw	1939
  1139  0096D5  07A8               	dw	1960
  1140  0096D7  07BD               	dw	1981
  1141  0096D9  07D2               	dw	2002
  1142  0096DB  07E8               	dw	2024
  1143  0096DD  07FE               	dw	2046
  1144  0096DF  0815               	dw	2069
  1145  0096E1  082C               	dw	2092
  1146  0096E3  0843               	dw	2115
  1147  0096E5  085B               	dw	2139
  1148  0096E7  0873               	dw	2163
  1149  0096E9  088B               	dw	2187
  1150  0096EB  08A5               	dw	2213
  1151  0096ED  08BE               	dw	2238
  1152  0096EF  08D8               	dw	2264
  1153  0096F1  08F2               	dw	2290
  1154  0096F3  090D               	dw	2317
  1155  0096F5  0929               	dw	2345
  1156  0096F7  0945               	dw	2373
  1157  0096F9  0961               	dw	2401
  1158  0096FB  097E               	dw	2430
  1159  0096FD  099C               	dw	2460
  1160  0096FF  09BA               	dw	2490
  1161  009701  09D9               	dw	2521
  1162  009703  09F9               	dw	2553
  1163  009705  0A19               	dw	2585
  1164  009707  0A39               	dw	2617
  1165  009709  0A5B               	dw	2651
  1166  00970B  0A7D               	dw	2685
  1167  00970D  0A9F               	dw	2719
  1168  00970F  0AC3               	dw	2755
  1169  009711  0AE7               	dw	2791
  1170  009713  0B0C               	dw	2828
  1171  009715  0B31               	dw	2865
  1172  009717  0B58               	dw	2904
  1173  009719  0B7F               	dw	2943
  1174  00971B  0BA7               	dw	2983
  1175  00971D  0BD0               	dw	3024
  1176  00971F  0BFA               	dw	3066
  1177  009721  0C25               	dw	3109
  1178  009723  0C51               	dw	3153
  1179  009725  0C7E               	dw	3198
  1180  009727  0CAB               	dw	3243
  1181  009729  0CDA               	dw	3290
  1182  00972B  0D0A               	dw	3338
  1183  00972D  0D3B               	dw	3387
  1184  00972F  0D6D               	dw	3437
  1185  009731  0DA0               	dw	3488
  1186  009733  0DD4               	dw	3540
  1187  009735  0E0A               	dw	3594
  1188  009737  0E41               	dw	3649
  1189  009739  0E79               	dw	3705
  1190  00973B  0EB3               	dw	3763
  1191  00973D  0EEE               	dw	3822
  1192  00973F  0F2A               	dw	3882
  1193  009741  0F68               	dw	3944
  1194  009743  0FA8               	dw	4008
  1195  009745  0FE9               	dw	4073
  1196  009747  102C               	dw	4140
  1197  009749  1070               	dw	4208
  1198  00974B  10B6               	dw	4278
  1199  00974D  10FE               	dw	4350
  1200  00974F  1148               	dw	4424
  1201  009751  1194               	dw	4500
  1202  009753  11E2               	dw	4578
  1203  009755  1232               	dw	4658
  1204  009757  1285               	dw	4741
  1205  009759  12D9               	dw	4825
  1206  00975B  1330               	dw	4912
  1207  00975D  1389               	dw	5001
  1208  00975F  13E5               	dw	5093
  1209  009761  1444               	dw	5188
  1210  009763  14A5               	dw	5285
  1211  009765  1509               	dw	5385
  1212  009767  1570               	dw	5488
  1213  009769  15DA               	dw	5594
  1214  00976B  1647               	dw	5703
  1215  00976D  16B8               	dw	5816
  1216  00976F  172B               	dw	5931
  1217  009771  17A3               	dw	6051
  1218  009773  181E               	dw	6174
  1219  009775  189D               	dw	6301
  1220  009777  1921               	dw	6433
  1221  009779  19A8               	dw	6568
  1222  00977B  1A34               	dw	6708
  1223  00977D  1AC4               	dw	6852
  1224  00977F  1B5A               	dw	7002
  1225  009781  1BF4               	dw	7156
  1226  009783  1C94               	dw	7316
  1227  009785  1D39               	dw	7481
  1228  009787  1DE4               	dw	7652
  1229  009789  1E95               	dw	7829
  1230  00978B  1F4C               	dw	8012
  1231  00978D  200A               	dw	8202
  1232  00978F  20CE               	dw	8398
  1233  009791  219A               	dw	8602
  1234  009793  226E               	dw	8814
  1235  009795  234A               	dw	9034
  1236  009797  242E               	dw	9262
  1237  009799  251B               	dw	9499
  1238  00979B  2612               	dw	9746
  1239  00979D  2712               	dw	10002
  1240  00979F  281D               	dw	10269
  1241  0097A1  2932               	dw	10546
  1242  0097A3  2A53               	dw	10835
  1243  0097A5  2B81               	dw	11137
  1244  0097A7  2CBB               	dw	11451
  1245  0097A9  2E03               	dw	11779
  1246  0097AB  2F5A               	dw	12122
  1247  0097AD  30C0               	dw	12480
  1248  0097AF  3236               	dw	12854
  1249  0097B1  33BD               	dw	13245
  1250  0097B3  3557               	dw	13655
  1251  0097B5  35F5               	dw	13813
  1252  0097B7  3661               	dw	13921
  1253  0097B9  36CD               	dw	14029
  1254  0097BB  373B               	dw	14139
  1255  0097BD  37AA               	dw	14250
  1256  0097BF  381B               	dw	14363
  1257  0097C1  388C               	dw	14476
  1258  0097C3  3900               	dw	14592
  1259  0097C5  3974               	dw	14708
  1260  0097C7  39EA               	dw	14826
  1261  0097C9  3A62               	dw	14946
  1262  0097CB  3ADB               	dw	15067
  1263  0097CD  3B55               	dw	15189
  1264  0097CF  3BD1               	dw	15313
  1265  0097D1  3C4E               	dw	15438
  1266  0097D3  3CCD               	dw	15565
  1267  0097D5  3D4E               	dw	15694
  1268  0097D7  3DD0               	dw	15824
  1269  0097D9  3E54               	dw	15956
  1270  0097DB  3EDA               	dw	16090
  1271  0097DD  3F61               	dw	16225
  1272  0097DF  3FEA               	dw	16362
  1273  0097E1  4074               	dw	16500
  1274  0097E3  4101               	dw	16641
  1275  0097E5  418F               	dw	16783
  1276  0097E7  421F               	dw	16927
  1277  0097E9  42B1               	dw	17073
  1278  0097EB  4345               	dw	17221
  1279  0097ED  43DB               	dw	17371
  1280  0097EF  4473               	dw	17523
  1281  0097F1  450D               	dw	17677
  1282  0097F3  45A9               	dw	17833
  1283  0097F5  4647               	dw	17991
  1284  0097F7  46E7               	dw	18151
  1285  0097F9  4789               	dw	18313
  1286  0097FB  482E               	dw	18478
  1287  0097FD  48D5               	dw	18645
  1288  0097FF  497E               	dw	18814
  1289  009801  4A29               	dw	18985
  1290  009803  4AD7               	dw	19159
  1291  009805  4B87               	dw	19335
  1292  009807  4C3A               	dw	19514
  1293  009809  4CEF               	dw	19695
  1294  00980B  4DA6               	dw	19878
  1295  00980D  4E61               	dw	20065
  1296  00980F  4F1E               	dw	20254
  1297  009811  4FDD               	dw	20445
  1298  009813  50A0               	dw	20640
  1299  009815  5165               	dw	20837
  1300  009817  522D               	dw	21037
  1301  009819  52F8               	dw	21240
  1302  00981B  53C6               	dw	21446
  1303  00981D  5497               	dw	21655
  1304  00981F  556B               	dw	21867
  1305  009821  5642               	dw	22082
  1306  009823  571C               	dw	22300
  1307  009825  57FA               	dw	22522
  1308  009827                     __end_of_motor_steps_lookup:
  1309                           	opt stack 0
  1310  009827                     _motor_postscaler_lookup:
  1311                           	opt stack 0
  1312  009827  0C                 	db	12
  1313  009828  07                 	db	7
  1314  009829  05                 	db	5
  1315  00982A  04                 	db	4
  1316  00982B  04                 	db	4
  1317  00982C  03                 	db	3
  1318  00982D  03                 	db	3
  1319  00982E  03                 	db	3
  1320  00982F  02                 	db	2
  1321  009830  02                 	db	2
  1322  009831  02                 	db	2
  1323  009832  02                 	db	2
  1324  009833  02                 	db	2
  1325  009834  02                 	db	2
  1326  009835  01                 	db	1
  1327  009836  01                 	db	1
  1328  009837  01                 	db	1
  1329  009838  01                 	db	1
  1330  009839  01                 	db	1
  1331  00983A  01                 	db	1
  1332  00983B  01                 	db	1
  1333  00983C  01                 	db	1
  1334  00983D  01                 	db	1
  1335  00983E  01                 	db	1
  1336  00983F  01                 	db	1
  1337  009840  01                 	db	1
  1338  009841  01                 	db	1
  1339  009842  01                 	db	1
  1340  009843  01                 	db	1
  1341  009844  01                 	db	1
  1342  009845  01                 	db	1
  1343  009846  01                 	db	1
  1344  009847  01                 	db	1
  1345  009848  01                 	db	1
  1346  009849  01                 	db	1
  1347  00984A  01                 	db	1
  1348  00984B  01                 	db	1
  1349  00984C  01                 	db	1
  1350  00984D  01                 	db	1
  1351  00984E  01                 	db	1
  1352  00984F  01                 	db	1
  1353  009850  01                 	db	1
  1354  009851  01                 	db	1
  1355  009852  01                 	db	1
  1356  009853  01                 	db	1
  1357  009854  01                 	db	1
  1358  009855  01                 	db	1
  1359  009856  01                 	db	1
  1360  009857  01                 	db	1
  1361  009858  01                 	db	1
  1362  009859  01                 	db	1
  1363  00985A  01                 	db	1
  1364  00985B  01                 	db	1
  1365  00985C  01                 	db	1
  1366  00985D  01                 	db	1
  1367  00985E  01                 	db	1
  1368  00985F  01                 	db	1
  1369  009860  01                 	db	1
  1370  009861  01                 	db	1
  1371  009862  01                 	db	1
  1372  009863  01                 	db	1
  1373  009864  01                 	db	1
  1374  009865  01                 	db	1
  1375  009866  01                 	db	1
  1376  009867  01                 	db	1
  1377  009868  01                 	db	1
  1378  009869  01                 	db	1
  1379  00986A  01                 	db	1
  1380  00986B  01                 	db	1
  1381  00986C  01                 	db	1
  1382  00986D  01                 	db	1
  1383  00986E  01                 	db	1
  1384  00986F  01                 	db	1
  1385  009870  01                 	db	1
  1386  009871  01                 	db	1
  1387  009872  01                 	db	1
  1388  009873  01                 	db	1
  1389  009874  01                 	db	1
  1390  009875  01                 	db	1
  1391  009876  01                 	db	1
  1392  009877  01                 	db	1
  1393  009878  01                 	db	1
  1394  009879  01                 	db	1
  1395  00987A  01                 	db	1
  1396  00987B  01                 	db	1
  1397  00987C  01                 	db	1
  1398  00987D  01                 	db	1
  1399  00987E  01                 	db	1
  1400  00987F  01                 	db	1
  1401  009880  01                 	db	1
  1402  009881  01                 	db	1
  1403  009882  00                 	db	0
  1404  009883  00                 	db	0
  1405  009884  00                 	db	0
  1406  009885  00                 	db	0
  1407  009886  00                 	db	0
  1408  009887  00                 	db	0
  1409  009888  00                 	db	0
  1410  009889  00                 	db	0
  1411  00988A  00                 	db	0
  1412  00988B  00                 	db	0
  1413  00988C  00                 	db	0
  1414  00988D  00                 	db	0
  1415  00988E  00                 	db	0
  1416  00988F  00                 	db	0
  1417  009890  00                 	db	0
  1418  009891  00                 	db	0
  1419  009892  00                 	db	0
  1420  009893  00                 	db	0
  1421  009894  00                 	db	0
  1422  009895  00                 	db	0
  1423  009896  00                 	db	0
  1424  009897  00                 	db	0
  1425  009898  00                 	db	0
  1426  009899  00                 	db	0
  1427  00989A  00                 	db	0
  1428  00989B  00                 	db	0
  1429  00989C  00                 	db	0
  1430  00989D  00                 	db	0
  1431  00989E  00                 	db	0
  1432  00989F  00                 	db	0
  1433  0098A0  00                 	db	0
  1434  0098A1  00                 	db	0
  1435  0098A2  00                 	db	0
  1436  0098A3  00                 	db	0
  1437  0098A4  00                 	db	0
  1438  0098A5  00                 	db	0
  1439  0098A6  00                 	db	0
  1440  0098A7  00                 	db	0
  1441  0098A8  00                 	db	0
  1442  0098A9  00                 	db	0
  1443  0098AA  00                 	db	0
  1444  0098AB  00                 	db	0
  1445  0098AC  00                 	db	0
  1446  0098AD  00                 	db	0
  1447  0098AE  00                 	db	0
  1448  0098AF  00                 	db	0
  1449  0098B0  00                 	db	0
  1450  0098B1  00                 	db	0
  1451  0098B2  00                 	db	0
  1452  0098B3  00                 	db	0
  1453  0098B4  00                 	db	0
  1454  0098B5  00                 	db	0
  1455  0098B6  00                 	db	0
  1456  0098B7  00                 	db	0
  1457  0098B8  00                 	db	0
  1458  0098B9  00                 	db	0
  1459  0098BA  00                 	db	0
  1460  0098BB  00                 	db	0
  1461  0098BC  00                 	db	0
  1462  0098BD  00                 	db	0
  1463  0098BE  00                 	db	0
  1464  0098BF  00                 	db	0
  1465  0098C0  00                 	db	0
  1466  0098C1  00                 	db	0
  1467  0098C2  00                 	db	0
  1468  0098C3  00                 	db	0
  1469  0098C4  00                 	db	0
  1470  0098C5  00                 	db	0
  1471  0098C6  00                 	db	0
  1472  0098C7  00                 	db	0
  1473  0098C8  00                 	db	0
  1474  0098C9  00                 	db	0
  1475  0098CA  00                 	db	0
  1476  0098CB  00                 	db	0
  1477  0098CC  00                 	db	0
  1478  0098CD  00                 	db	0
  1479  0098CE  00                 	db	0
  1480  0098CF  00                 	db	0
  1481  0098D0  00                 	db	0
  1482  0098D1  00                 	db	0
  1483  0098D2  00                 	db	0
  1484  0098D3  00                 	db	0
  1485  0098D4  00                 	db	0
  1486  0098D5  00                 	db	0
  1487  0098D6  00                 	db	0
  1488  0098D7  00                 	db	0
  1489  0098D8  00                 	db	0
  1490  0098D9  00                 	db	0
  1491  0098DA  00                 	db	0
  1492  0098DB  00                 	db	0
  1493  0098DC  00                 	db	0
  1494  0098DD  00                 	db	0
  1495  0098DE  00                 	db	0
  1496  0098DF  00                 	db	0
  1497  0098E0  00                 	db	0
  1498  0098E1  00                 	db	0
  1499  0098E2  00                 	db	0
  1500  0098E3  00                 	db	0
  1501  0098E4  00                 	db	0
  1502  0098E5  00                 	db	0
  1503  0098E6  00                 	db	0
  1504  0098E7  00                 	db	0
  1505  0098E8  00                 	db	0
  1506  0098E9  00                 	db	0
  1507  0098EA  00                 	db	0
  1508  0098EB  00                 	db	0
  1509  0098EC  00                 	db	0
  1510  0098ED  00                 	db	0
  1511  0098EE  00                 	db	0
  1512  0098EF  00                 	db	0
  1513  0098F0  00                 	db	0
  1514  0098F1  00                 	db	0
  1515  0098F2  00                 	db	0
  1516  0098F3  00                 	db	0
  1517  0098F4  00                 	db	0
  1518  0098F5  00                 	db	0
  1519  0098F6  00                 	db	0
  1520  0098F7  00                 	db	0
  1521  0098F8  00                 	db	0
  1522  0098F9  00                 	db	0
  1523  0098FA  00                 	db	0
  1524  0098FB  00                 	db	0
  1525  0098FC  00                 	db	0
  1526  0098FD  00                 	db	0
  1527  0098FE  00                 	db	0
  1528  0098FF  00                 	db	0
  1529  009900  00                 	db	0
  1530  009901  00                 	db	0
  1531  009902  00                 	db	0
  1532  009903  00                 	db	0
  1533  009904  00                 	db	0
  1534  009905  00                 	db	0
  1535  009906  00                 	db	0
  1536  009907  00                 	db	0
  1537  009908  00                 	db	0
  1538  009909  00                 	db	0
  1539  00990A  00                 	db	0
  1540  00990B  00                 	db	0
  1541  00990C  00                 	db	0
  1542  00990D  00                 	db	0
  1543  00990E  00                 	db	0
  1544  00990F  00                 	db	0
  1545  009910  00                 	db	0
  1546  009911  00                 	db	0
  1547  009912  00                 	db	0
  1548  009913  00                 	db	0
  1549  009914  00                 	db	0
  1550  009915  00                 	db	0
  1551  009916  00                 	db	0
  1552  009917  00                 	db	0
  1553  009918  00                 	db	0
  1554  009919  00                 	db	0
  1555  00991A  00                 	db	0
  1556  00991B  00                 	db	0
  1557  00991C  00                 	db	0
  1558  00991D  00                 	db	0
  1559  00991E  00                 	db	0
  1560  00991F  00                 	db	0
  1561  009920  00                 	db	0
  1562  009921  00                 	db	0
  1563  009922  00                 	db	0
  1564  009923  00                 	db	0
  1565  009924  00                 	db	0
  1566  009925  00                 	db	0
  1567  009926  00                 	db	0
  1568  009927  00                 	db	0
  1569  009928  00                 	db	0
  1570  009929  00                 	db	0
  1571  00992A  00                 	db	0
  1572  00992B  00                 	db	0
  1573  00992C  00                 	db	0
  1574  00992D  00                 	db	0
  1575  00992E  00                 	db	0
  1576  00992F  00                 	db	0
  1577  009930  00                 	db	0
  1578  009931  00                 	db	0
  1579  009932  00                 	db	0
  1580  009933  00                 	db	0
  1581  009934  00                 	db	0
  1582  009935  00                 	db	0
  1583  009936  00                 	db	0
  1584  009937  00                 	db	0
  1585  009938  00                 	db	0
  1586  009939  00                 	db	0
  1587  00993A  00                 	db	0
  1588  00993B  00                 	db	0
  1589  00993C  00                 	db	0
  1590  00993D  00                 	db	0
  1591  00993E  00                 	db	0
  1592  00993F  00                 	db	0
  1593  009940  00                 	db	0
  1594  009941  00                 	db	0
  1595  009942  00                 	db	0
  1596  009943  00                 	db	0
  1597  009944  00                 	db	0
  1598  009945  00                 	db	0
  1599  009946  00                 	db	0
  1600  009947  00                 	db	0
  1601  009948  00                 	db	0
  1602  009949  00                 	db	0
  1603  00994A  00                 	db	0
  1604  00994B  00                 	db	0
  1605  00994C  00                 	db	0
  1606  00994D  00                 	db	0
  1607  00994E  00                 	db	0
  1608  00994F  00                 	db	0
  1609  009950  00                 	db	0
  1610  009951  00                 	db	0
  1611  009952  00                 	db	0
  1612  009953  00                 	db	0
  1613  009954  00                 	db	0
  1614  009955  00                 	db	0
  1615  009956  00                 	db	0
  1616  009957  00                 	db	0
  1617  009958  00                 	db	0
  1618  009959  00                 	db	0
  1619  00995A  00                 	db	0
  1620  00995B  00                 	db	0
  1621  00995C  00                 	db	0
  1622  00995D  00                 	db	0
  1623  00995E  00                 	db	0
  1624  00995F  00                 	db	0
  1625  009960  00                 	db	0
  1626  009961  00                 	db	0
  1627  009962  00                 	db	0
  1628  009963  00                 	db	0
  1629  009964  00                 	db	0
  1630  009965  00                 	db	0
  1631  009966  00                 	db	0
  1632  009967  00                 	db	0
  1633  009968  00                 	db	0
  1634  009969  00                 	db	0
  1635  00996A  00                 	db	0
  1636  00996B  00                 	db	0
  1637  00996C  00                 	db	0
  1638  00996D  00                 	db	0
  1639  00996E  00                 	db	0
  1640  00996F  00                 	db	0
  1641  009970  00                 	db	0
  1642  009971  00                 	db	0
  1643  009972  00                 	db	0
  1644  009973  00                 	db	0
  1645  009974  00                 	db	0
  1646  009975  00                 	db	0
  1647  009976  00                 	db	0
  1648  009977  00                 	db	0
  1649  009978  00                 	db	0
  1650  009979  00                 	db	0
  1651  00997A  00                 	db	0
  1652  00997B  00                 	db	0
  1653  00997C  00                 	db	0
  1654  00997D  00                 	db	0
  1655  00997E  00                 	db	0
  1656  00997F  00                 	db	0
  1657  009980  00                 	db	0
  1658  009981  00                 	db	0
  1659  009982  00                 	db	0
  1660  009983  00                 	db	0
  1661  009984  00                 	db	0
  1662  009985  00                 	db	0
  1663  009986  00                 	db	0
  1664  009987  00                 	db	0
  1665  009988  00                 	db	0
  1666  009989  00                 	db	0
  1667  00998A  00                 	db	0
  1668  00998B  00                 	db	0
  1669  00998C  00                 	db	0
  1670  00998D  00                 	db	0
  1671  00998E  00                 	db	0
  1672  00998F  00                 	db	0
  1673  009990  00                 	db	0
  1674  009991  00                 	db	0
  1675  009992  00                 	db	0
  1676  009993  00                 	db	0
  1677  009994  00                 	db	0
  1678  009995  00                 	db	0
  1679  009996  00                 	db	0
  1680  009997  00                 	db	0
  1681  009998  00                 	db	0
  1682  009999  00                 	db	0
  1683  00999A  00                 	db	0
  1684  00999B  00                 	db	0
  1685  00999C  00                 	db	0
  1686  00999D  00                 	db	0
  1687  00999E  00                 	db	0
  1688  00999F  00                 	db	0
  1689  0099A0  00                 	db	0
  1690  0099A1  00                 	db	0
  1691  0099A2  00                 	db	0
  1692  0099A3  00                 	db	0
  1693  0099A4  00                 	db	0
  1694  0099A5  00                 	db	0
  1695  0099A6  00                 	db	0
  1696  0099A7  00                 	db	0
  1697  0099A8  00                 	db	0
  1698  0099A9  00                 	db	0
  1699  0099AA  00                 	db	0
  1700  0099AB  00                 	db	0
  1701  0099AC  00                 	db	0
  1702  0099AD  00                 	db	0
  1703  0099AE  00                 	db	0
  1704  0099AF  00                 	db	0
  1705  0099B0  00                 	db	0
  1706  0099B1  00                 	db	0
  1707  0099B2  00                 	db	0
  1708  0099B3  00                 	db	0
  1709  0099B4  00                 	db	0
  1710  0099B5  00                 	db	0
  1711  0099B6  00                 	db	0
  1712  0099B7  00                 	db	0
  1713  0099B8  00                 	db	0
  1714  0099B9  00                 	db	0
  1715  0099BA  00                 	db	0
  1716  0099BB  00                 	db	0
  1717  0099BC  00                 	db	0
  1718  0099BD  00                 	db	0
  1719  0099BE  00                 	db	0
  1720  0099BF  00                 	db	0
  1721  0099C0  00                 	db	0
  1722  0099C1  00                 	db	0
  1723  0099C2  00                 	db	0
  1724  0099C3  00                 	db	0
  1725  0099C4  00                 	db	0
  1726  0099C5  00                 	db	0
  1727  0099C6  00                 	db	0
  1728  0099C7  00                 	db	0
  1729  0099C8  00                 	db	0
  1730  0099C9  00                 	db	0
  1731  0099CA  00                 	db	0
  1732  0099CB  00                 	db	0
  1733  0099CC  00                 	db	0
  1734  0099CD  00                 	db	0
  1735  0099CE  00                 	db	0
  1736  0099CF  00                 	db	0
  1737  0099D0  00                 	db	0
  1738  0099D1  00                 	db	0
  1739  0099D2  00                 	db	0
  1740  0099D3  00                 	db	0
  1741  0099D4  00                 	db	0
  1742  0099D5  00                 	db	0
  1743  0099D6  00                 	db	0
  1744  0099D7  00                 	db	0
  1745  0099D8  00                 	db	0
  1746  0099D9  00                 	db	0
  1747  0099DA  00                 	db	0
  1748  0099DB  00                 	db	0
  1749  0099DC  00                 	db	0
  1750  0099DD  00                 	db	0
  1751  0099DE  00                 	db	0
  1752  0099DF  00                 	db	0
  1753  0099E0  00                 	db	0
  1754  0099E1  00                 	db	0
  1755  0099E2  00                 	db	0
  1756  0099E3  00                 	db	0
  1757  0099E4  00                 	db	0
  1758  0099E5  00                 	db	0
  1759  0099E6  00                 	db	0
  1760  0099E7  00                 	db	0
  1761  0099E8  00                 	db	0
  1762  0099E9  00                 	db	0
  1763  0099EA  00                 	db	0
  1764  0099EB  00                 	db	0
  1765  0099EC  00                 	db	0
  1766  0099ED  00                 	db	0
  1767  0099EE  00                 	db	0
  1768  0099EF  00                 	db	0
  1769  0099F0  00                 	db	0
  1770  0099F1  00                 	db	0
  1771  0099F2  00                 	db	0
  1772  0099F3  00                 	db	0
  1773  0099F4  00                 	db	0
  1774  0099F5  00                 	db	0
  1775  0099F6  00                 	db	0
  1776  0099F7  00                 	db	0
  1777  0099F8  00                 	db	0
  1778  0099F9  00                 	db	0
  1779  0099FA  00                 	db	0
  1780  0099FB  00                 	db	0
  1781  0099FC  00                 	db	0
  1782  0099FD  00                 	db	0
  1783  0099FE  00                 	db	0
  1784  0099FF  00                 	db	0
  1785  009A00  00                 	db	0
  1786  009A01  00                 	db	0
  1787  009A02  00                 	db	0
  1788  009A03  00                 	db	0
  1789  009A04  00                 	db	0
  1790  009A05  00                 	db	0
  1791  009A06  00                 	db	0
  1792  009A07  00                 	db	0
  1793  009A08  00                 	db	0
  1794  009A09  00                 	db	0
  1795  009A0A  00                 	db	0
  1796  009A0B  00                 	db	0
  1797  009A0C  00                 	db	0
  1798  009A0D  00                 	db	0
  1799  009A0E                     __end_of_motor_postscaler_lookup:
  1800                           	opt stack 0
  1801  009A0E                     _motor_period_lookup:
  1802                           	opt stack 0
  1803  009A0E  EC                 	db	236
  1804  009A0F  F2                 	db	242
  1805  009A10  F6                 	db	246
  1806  009A11  F4                 	db	244
  1807  009A12  D2                 	db	210
  1808  009A13  E8                 	db	232
  1809  009A14  D2                 	db	210
  1810  009A15  C0                 	db	192
  1811  009A16  EC                 	db	236
  1812  009A17  DC                 	db	220
  1813  009A18  CF                 	db	207
  1814  009A19  C3                 	db	195
  1815  009A1A  B9                 	db	185
  1816  009A1B  B0                 	db	176
  1817  009A1C  FC                 	db	252
  1818  009A1D  F2                 	db	242
  1819  009A1E  E8                 	db	232
  1820  009A1F  DF                 	db	223
  1821  009A20  D7                 	db	215
  1822  009A21  D0                 	db	208
  1823  009A22  CA                 	db	202
  1824  009A23  C3                 	db	195
  1825  009A24  BE                 	db	190
  1826  009A25  B8                 	db	184
  1827  009A26  B3                 	db	179
  1828  009A27  AF                 	db	175
  1829  009A28  AA                 	db	170
  1830  009A29  A6                 	db	166
  1831  009A2A  A2                 	db	162
  1832  009A2B  9F                 	db	159
  1833  009A2C  9B                 	db	155
  1834  009A2D  98                 	db	152
  1835  009A2E  95                 	db	149
  1836  009A2F  92                 	db	146
  1837  009A30  8F                 	db	143
  1838  009A31  8C                 	db	140
  1839  009A32  8A                 	db	138
  1840  009A33  87                 	db	135
  1841  009A34  85                 	db	133
  1842  009A35  83                 	db	131
  1843  009A36  81                 	db	129
  1844  009A37  7F                 	db	127
  1845  009A38  7D                 	db	125
  1846  009A39  7B                 	db	123
  1847  009A3A  79                 	db	121
  1848  009A3B  77                 	db	119
  1849  009A3C  75                 	db	117
  1850  009A3D  74                 	db	116
  1851  009A3E  72                 	db	114
  1852  009A3F  71                 	db	113
  1853  009A40  6F                 	db	111
  1854  009A41  6E                 	db	110
  1855  009A42  6C                 	db	108
  1856  009A43  6B                 	db	107
  1857  009A44  6A                 	db	106
  1858  009A45  68                 	db	104
  1859  009A46  67                 	db	103
  1860  009A47  66                 	db	102
  1861  009A48  65                 	db	101
  1862  009A49  64                 	db	100
  1863  009A4A  62                 	db	98
  1864  009A4B  61                 	db	97
  1865  009A4C  60                 	db	96
  1866  009A4D  5F                 	db	95
  1867  009A4E  5E                 	db	94
  1868  009A4F  5D                 	db	93
  1869  009A50  5C                 	db	92
  1870  009A51  5B                 	db	91
  1871  009A52  59                 	db	89
  1872  009A53  57                 	db	87
  1873  009A54  56                 	db	86
  1874  009A55  54                 	db	84
  1875  009A56  53                 	db	83
  1876  009A57  51                 	db	81
  1877  009A58  50                 	db	80
  1878  009A59  4F                 	db	79
  1879  009A5A  4E                 	db	78
  1880  009A5B  4C                 	db	76
  1881  009A5C  4B                 	db	75
  1882  009A5D  4A                 	db	74
  1883  009A5E  49                 	db	73
  1884  009A5F  48                 	db	72
  1885  009A60  47                 	db	71
  1886  009A61  46                 	db	70
  1887  009A62  45                 	db	69
  1888  009A63  44                 	db	68
  1889  009A64  43                 	db	67
  1890  009A65  42                 	db	66
  1891  009A66  41                 	db	65
  1892  009A67  40                 	db	64
  1893  009A68  3F                 	db	63
  1894  009A69  FE                 	db	254
  1895  009A6A  FB                 	db	251
  1896  009A6B  F8                 	db	248
  1897  009A6C  F6                 	db	246
  1898  009A6D  F3                 	db	243
  1899  009A6E  F0                 	db	240
  1900  009A6F  EE                 	db	238
  1901  009A70  EC                 	db	236
  1902  009A71  E9                 	db	233
  1903  009A72  E7                 	db	231
  1904  009A73  E5                 	db	229
  1905  009A74  E3                 	db	227
  1906  009A75  E0                 	db	224
  1907  009A76  DE                 	db	222
  1908  009A77  DC                 	db	220
  1909  009A78  DA                 	db	218
  1910  009A79  D8                 	db	216
  1911  009A7A  D7                 	db	215
  1912  009A7B  D5                 	db	213
  1913  009A7C  D3                 	db	211
  1914  009A7D  D1                 	db	209
  1915  009A7E  CF                 	db	207
  1916  009A7F  CE                 	db	206
  1917  009A80  CC                 	db	204
  1918  009A81  CA                 	db	202
  1919  009A82  C9                 	db	201
  1920  009A83  C7                 	db	199
  1921  009A84  C6                 	db	198
  1922  009A85  C4                 	db	196
  1923  009A86  C3                 	db	195
  1924  009A87  C1                 	db	193
  1925  009A88  C0                 	db	192
  1926  009A89  BE                 	db	190
  1927  009A8A  BD                 	db	189
  1928  009A8B  BC                 	db	188
  1929  009A8C  BA                 	db	186
  1930  009A8D  B8                 	db	184
  1931  009A8E  B6                 	db	182
  1932  009A8F  B4                 	db	180
  1933  009A90  B3                 	db	179
  1934  009A91  B1                 	db	177
  1935  009A92  AF                 	db	175
  1936  009A93  AE                 	db	174
  1937  009A94  AC                 	db	172
  1938  009A95  AA                 	db	170
  1939  009A96  A9                 	db	169
  1940  009A97  A7                 	db	167
  1941  009A98  A6                 	db	166
  1942  009A99  A4                 	db	164
  1943  009A9A  A3                 	db	163
  1944  009A9B  A1                 	db	161
  1945  009A9C  A0                 	db	160
  1946  009A9D  9F                 	db	159
  1947  009A9E  9D                 	db	157
  1948  009A9F  9C                 	db	156
  1949  009AA0  9B                 	db	155
  1950  009AA1  9A                 	db	154
  1951  009AA2  98                 	db	152
  1952  009AA3  97                 	db	151
  1953  009AA4  96                 	db	150
  1954  009AA5  95                 	db	149
  1955  009AA6  94                 	db	148
  1956  009AA7  93                 	db	147
  1957  009AA8  92                 	db	146
  1958  009AA9  90                 	db	144
  1959  009AAA  8F                 	db	143
  1960  009AAB  8E                 	db	142
  1961  009AAC  8D                 	db	141
  1962  009AAD  8C                 	db	140
  1963  009AAE  8B                 	db	139
  1964  009AAF  8A                 	db	138
  1965  009AB0  89                 	db	137
  1966  009AB1  88                 	db	136
  1967  009AB2  87                 	db	135
  1968  009AB3  86                 	db	134
  1969  009AB4  85                 	db	133
  1970  009AB5  84                 	db	132
  1971  009AB6  83                 	db	131
  1972  009AB7  82                 	db	130
  1973  009AB8  81                 	db	129
  1974  009AB9  80                 	db	128
  1975  009ABA  7F                 	db	127
  1976  009ABB  7E                 	db	126
  1977  009ABC  7D                 	db	125
  1978  009ABD  7C                 	db	124
  1979  009ABE  7B                 	db	123
  1980  009ABF  7A                 	db	122
  1981  009AC0  79                 	db	121
  1982  009AC1  78                 	db	120
  1983  009AC2  77                 	db	119
  1984  009AC3  76                 	db	118
  1985  009AC4  75                 	db	117
  1986  009AC5  74                 	db	116
  1987  009AC6  73                 	db	115
  1988  009AC7  72                 	db	114
  1989  009AC8  71                 	db	113
  1990  009AC9  70                 	db	112
  1991  009ACA  6F                 	db	111
  1992  009ACB  6E                 	db	110
  1993  009ACC  6D                 	db	109
  1994  009ACD  6C                 	db	108
  1995  009ACE  6B                 	db	107
  1996  009ACF  6A                 	db	106
  1997  009AD0  69                 	db	105
  1998  009AD1  68                 	db	104
  1999  009AD2  67                 	db	103
  2000  009AD3  66                 	db	102
  2001  009AD4  65                 	db	101
  2002  009AD5  64                 	db	100
  2003  009AD6  63                 	db	99
  2004  009AD7  62                 	db	98
  2005  009AD8  61                 	db	97
  2006  009AD9  60                 	db	96
  2007  009ADA  5F                 	db	95
  2008  009ADB  5E                 	db	94
  2009  009ADC  5D                 	db	93
  2010  009ADD  5C                 	db	92
  2011  009ADE  5B                 	db	91
  2012  009ADF  5A                 	db	90
  2013  009AE0  59                 	db	89
  2014  009AE1  58                 	db	88
  2015  009AE2  57                 	db	87
  2016  009AE3  56                 	db	86
  2017  009AE4  55                 	db	85
  2018  009AE5  54                 	db	84
  2019  009AE6  53                 	db	83
  2020  009AE7  52                 	db	82
  2021  009AE8  51                 	db	81
  2022  009AE9  50                 	db	80
  2023  009AEA  4F                 	db	79
  2024  009AEB  4E                 	db	78
  2025  009AEC  4D                 	db	77
  2026  009AED  4C                 	db	76
  2027  009AEE  4B                 	db	75
  2028  009AEF  4A                 	db	74
  2029  009AF0  49                 	db	73
  2030  009AF1  48                 	db	72
  2031  009AF2  47                 	db	71
  2032  009AF3  46                 	db	70
  2033  009AF4  45                 	db	69
  2034  009AF5  44                 	db	68
  2035  009AF6  43                 	db	67
  2036  009AF7  42                 	db	66
  2037  009AF8  41                 	db	65
  2038  009AF9  40                 	db	64
  2039  009AFA  3F                 	db	63
  2040  009AFB  FF                 	db	255
  2041  009AFC  FE                 	db	254
  2042  009AFD  FD                 	db	253
  2043  009AFE  FC                 	db	252
  2044  009AFF  FB                 	db	251
  2045  009B00  FA                 	db	250
  2046  009B01  F9                 	db	249
  2047  009B02  F8                 	db	248
  2048  009B03  F7                 	db	247
  2049  009B04  F6                 	db	246
  2050  009B05  F5                 	db	245
  2051  009B06  F4                 	db	244
  2052  009B07  F3                 	db	243
  2053  009B08  F2                 	db	242
  2054  009B09  F1                 	db	241
  2055  009B0A  F0                 	db	240
  2056  009B0B  EF                 	db	239
  2057  009B0C  EE                 	db	238
  2058  009B0D  ED                 	db	237
  2059  009B0E  EC                 	db	236
  2060  009B0F  EB                 	db	235
  2061  009B10  EA                 	db	234
  2062  009B11  E9                 	db	233
  2063  009B12  E8                 	db	232
  2064  009B13  E7                 	db	231
  2065  009B14  E6                 	db	230
  2066  009B15  E5                 	db	229
  2067  009B16  E4                 	db	228
  2068  009B17  E3                 	db	227
  2069  009B18  E2                 	db	226
  2070  009B19  E1                 	db	225
  2071  009B1A  E0                 	db	224
  2072  009B1B  DF                 	db	223
  2073  009B1C  DE                 	db	222
  2074  009B1D  DD                 	db	221
  2075  009B1E  DC                 	db	220
  2076  009B1F  DB                 	db	219
  2077  009B20  DA                 	db	218
  2078  009B21  D9                 	db	217
  2079  009B22  D8                 	db	216
  2080  009B23  D7                 	db	215
  2081  009B24  D6                 	db	214
  2082  009B25  D5                 	db	213
  2083  009B26  D4                 	db	212
  2084  009B27  D3                 	db	211
  2085  009B28  D2                 	db	210
  2086  009B29  D1                 	db	209
  2087  009B2A  D0                 	db	208
  2088  009B2B  CF                 	db	207
  2089  009B2C  CE                 	db	206
  2090  009B2D  CD                 	db	205
  2091  009B2E  CC                 	db	204
  2092  009B2F  CB                 	db	203
  2093  009B30  CA                 	db	202
  2094  009B31  C9                 	db	201
  2095  009B32  C8                 	db	200
  2096  009B33  C7                 	db	199
  2097  009B34  C6                 	db	198
  2098  009B35  C5                 	db	197
  2099  009B36  C4                 	db	196
  2100  009B37  C3                 	db	195
  2101  009B38  C2                 	db	194
  2102  009B39  C1                 	db	193
  2103  009B3A  C0                 	db	192
  2104  009B3B  BF                 	db	191
  2105  009B3C  BE                 	db	190
  2106  009B3D  BD                 	db	189
  2107  009B3E  BC                 	db	188
  2108  009B3F  BB                 	db	187
  2109  009B40  BA                 	db	186
  2110  009B41  B9                 	db	185
  2111  009B42  B8                 	db	184
  2112  009B43  B7                 	db	183
  2113  009B44  B6                 	db	182
  2114  009B45  B5                 	db	181
  2115  009B46  B4                 	db	180
  2116  009B47  B3                 	db	179
  2117  009B48  B2                 	db	178
  2118  009B49  B1                 	db	177
  2119  009B4A  B0                 	db	176
  2120  009B4B  AF                 	db	175
  2121  009B4C  AE                 	db	174
  2122  009B4D  AD                 	db	173
  2123  009B4E  AC                 	db	172
  2124  009B4F  AB                 	db	171
  2125  009B50  AA                 	db	170
  2126  009B51  A9                 	db	169
  2127  009B52  A8                 	db	168
  2128  009B53  A7                 	db	167
  2129  009B54  A6                 	db	166
  2130  009B55  A5                 	db	165
  2131  009B56  A4                 	db	164
  2132  009B57  A3                 	db	163
  2133  009B58  A2                 	db	162
  2134  009B59  A1                 	db	161
  2135  009B5A  A0                 	db	160
  2136  009B5B  9F                 	db	159
  2137  009B5C  9E                 	db	158
  2138  009B5D  9D                 	db	157
  2139  009B5E  9C                 	db	156
  2140  009B5F  9B                 	db	155
  2141  009B60  9A                 	db	154
  2142  009B61  99                 	db	153
  2143  009B62  98                 	db	152
  2144  009B63  97                 	db	151
  2145  009B64  96                 	db	150
  2146  009B65  95                 	db	149
  2147  009B66  94                 	db	148
  2148  009B67  93                 	db	147
  2149  009B68  92                 	db	146
  2150  009B69  91                 	db	145
  2151  009B6A  90                 	db	144
  2152  009B6B  8F                 	db	143
  2153  009B6C  8E                 	db	142
  2154  009B6D  8D                 	db	141
  2155  009B6E  8C                 	db	140
  2156  009B6F  8B                 	db	139
  2157  009B70  8A                 	db	138
  2158  009B71  89                 	db	137
  2159  009B72  88                 	db	136
  2160  009B73  87                 	db	135
  2161  009B74  86                 	db	134
  2162  009B75  85                 	db	133
  2163  009B76  84                 	db	132
  2164  009B77  83                 	db	131
  2165  009B78  82                 	db	130
  2166  009B79  81                 	db	129
  2167  009B7A  80                 	db	128
  2168  009B7B  7F                 	db	127
  2169  009B7C  7E                 	db	126
  2170  009B7D  7D                 	db	125
  2171  009B7E  7C                 	db	124
  2172  009B7F  7B                 	db	123
  2173  009B80  7A                 	db	122
  2174  009B81  79                 	db	121
  2175  009B82  78                 	db	120
  2176  009B83  77                 	db	119
  2177  009B84  76                 	db	118
  2178  009B85  75                 	db	117
  2179  009B86  74                 	db	116
  2180  009B87  73                 	db	115
  2181  009B88  72                 	db	114
  2182  009B89  71                 	db	113
  2183  009B8A  70                 	db	112
  2184  009B8B  6F                 	db	111
  2185  009B8C  6E                 	db	110
  2186  009B8D  6D                 	db	109
  2187  009B8E  6C                 	db	108
  2188  009B8F  6B                 	db	107
  2189  009B90  6A                 	db	106
  2190  009B91  69                 	db	105
  2191  009B92  68                 	db	104
  2192  009B93  67                 	db	103
  2193  009B94  66                 	db	102
  2194  009B95  65                 	db	101
  2195  009B96  64                 	db	100
  2196  009B97  63                 	db	99
  2197  009B98  62                 	db	98
  2198  009B99  61                 	db	97
  2199  009B9A  60                 	db	96
  2200  009B9B  5F                 	db	95
  2201  009B9C  5E                 	db	94
  2202  009B9D  5D                 	db	93
  2203  009B9E  5C                 	db	92
  2204  009B9F  5B                 	db	91
  2205  009BA0  5A                 	db	90
  2206  009BA1  59                 	db	89
  2207  009BA2  58                 	db	88
  2208  009BA3  57                 	db	87
  2209  009BA4  56                 	db	86
  2210  009BA5  55                 	db	85
  2211  009BA6  54                 	db	84
  2212  009BA7  53                 	db	83
  2213  009BA8  52                 	db	82
  2214  009BA9  51                 	db	81
  2215  009BAA  50                 	db	80
  2216  009BAB  4F                 	db	79
  2217  009BAC  4E                 	db	78
  2218  009BAD  4D                 	db	77
  2219  009BAE  4C                 	db	76
  2220  009BAF  4B                 	db	75
  2221  009BB0  4A                 	db	74
  2222  009BB1  49                 	db	73
  2223  009BB2  48                 	db	72
  2224  009BB3  47                 	db	71
  2225  009BB4  46                 	db	70
  2226  009BB5  45                 	db	69
  2227  009BB6  44                 	db	68
  2228  009BB7  43                 	db	67
  2229  009BB8  42                 	db	66
  2230  009BB9  41                 	db	65
  2231  009BBA  40                 	db	64
  2232  009BBB  3F                 	db	63
  2233  009BBC  FF                 	db	255
  2234  009BBD  FE                 	db	254
  2235  009BBE  FD                 	db	253
  2236  009BBF  FC                 	db	252
  2237  009BC0  FB                 	db	251
  2238  009BC1  FA                 	db	250
  2239  009BC2  F9                 	db	249
  2240  009BC3  F8                 	db	248
  2241  009BC4  F7                 	db	247
  2242  009BC5  F6                 	db	246
  2243  009BC6  F5                 	db	245
  2244  009BC7  F4                 	db	244
  2245  009BC8  F3                 	db	243
  2246  009BC9  F2                 	db	242
  2247  009BCA  F1                 	db	241
  2248  009BCB  F0                 	db	240
  2249  009BCC  EF                 	db	239
  2250  009BCD  EE                 	db	238
  2251  009BCE  ED                 	db	237
  2252  009BCF  EC                 	db	236
  2253  009BD0  EB                 	db	235
  2254  009BD1  EA                 	db	234
  2255  009BD2  E9                 	db	233
  2256  009BD3  E8                 	db	232
  2257  009BD4  E7                 	db	231
  2258  009BD5  E6                 	db	230
  2259  009BD6  E5                 	db	229
  2260  009BD7  E4                 	db	228
  2261  009BD8  E3                 	db	227
  2262  009BD9  E2                 	db	226
  2263  009BDA  E1                 	db	225
  2264  009BDB  E0                 	db	224
  2265  009BDC  DF                 	db	223
  2266  009BDD  DE                 	db	222
  2267  009BDE  DD                 	db	221
  2268  009BDF  DC                 	db	220
  2269  009BE0  DB                 	db	219
  2270  009BE1  DA                 	db	218
  2271  009BE2  D9                 	db	217
  2272  009BE3  D8                 	db	216
  2273  009BE4  D7                 	db	215
  2274  009BE5  D6                 	db	214
  2275  009BE6  D5                 	db	213
  2276  009BE7  D4                 	db	212
  2277  009BE8  D3                 	db	211
  2278  009BE9  D2                 	db	210
  2279  009BEA  D1                 	db	209
  2280  009BEB  D0                 	db	208
  2281  009BEC  CF                 	db	207
  2282  009BED  CE                 	db	206
  2283  009BEE  CD                 	db	205
  2284  009BEF  CC                 	db	204
  2285  009BF0  CB                 	db	203
  2286  009BF1  CA                 	db	202
  2287  009BF2  C9                 	db	201
  2288  009BF3  C8                 	db	200
  2289  009BF4  C7                 	db	199
  2290  009BF5                     __end_of_motor_period_lookup:
  2291                           	opt stack 0
  2292  009BF5                     _motor_prescaler_lookup:
  2293                           	opt stack 0
  2294  009BF5  02                 	db	2
  2295  009BF6  02                 	db	2
  2296  009BF7  02                 	db	2
  2297  009BF8  02                 	db	2
  2298  009BF9  02                 	db	2
  2299  009BFA  02                 	db	2
  2300  009BFB  02                 	db	2
  2301  009BFC  02                 	db	2
  2302  009BFD  02                 	db	2
  2303  009BFE  02                 	db	2
  2304  009BFF  02                 	db	2
  2305  009C00  02                 	db	2
  2306  009C01  02                 	db	2
  2307  009C02  02                 	db	2
  2308  009C03  02                 	db	2
  2309  009C04  02                 	db	2
  2310  009C05  02                 	db	2
  2311  009C06  02                 	db	2
  2312  009C07  02                 	db	2
  2313  009C08  02                 	db	2
  2314  009C09  02                 	db	2
  2315  009C0A  02                 	db	2
  2316  009C0B  02                 	db	2
  2317  009C0C  02                 	db	2
  2318  009C0D  02                 	db	2
  2319  009C0E  02                 	db	2
  2320  009C0F  02                 	db	2
  2321  009C10  02                 	db	2
  2322  009C11  02                 	db	2
  2323  009C12  02                 	db	2
  2324  009C13  02                 	db	2
  2325  009C14  02                 	db	2
  2326  009C15  02                 	db	2
  2327  009C16  02                 	db	2
  2328  009C17  02                 	db	2
  2329  009C18  02                 	db	2
  2330  009C19  02                 	db	2
  2331  009C1A  02                 	db	2
  2332  009C1B  02                 	db	2
  2333  009C1C  02                 	db	2
  2334  009C1D  02                 	db	2
  2335  009C1E  02                 	db	2
  2336  009C1F  02                 	db	2
  2337  009C20  02                 	db	2
  2338  009C21  02                 	db	2
  2339  009C22  02                 	db	2
  2340  009C23  02                 	db	2
  2341  009C24  02                 	db	2
  2342  009C25  02                 	db	2
  2343  009C26  02                 	db	2
  2344  009C27  02                 	db	2
  2345  009C28  02                 	db	2
  2346  009C29  02                 	db	2
  2347  009C2A  02                 	db	2
  2348  009C2B  02                 	db	2
  2349  009C2C  02                 	db	2
  2350  009C2D  02                 	db	2
  2351  009C2E  02                 	db	2
  2352  009C2F  02                 	db	2
  2353  009C30  02                 	db	2
  2354  009C31  02                 	db	2
  2355  009C32  02                 	db	2
  2356  009C33  02                 	db	2
  2357  009C34  02                 	db	2
  2358  009C35  02                 	db	2
  2359  009C36  02                 	db	2
  2360  009C37  02                 	db	2
  2361  009C38  02                 	db	2
  2362  009C39  02                 	db	2
  2363  009C3A  02                 	db	2
  2364  009C3B  02                 	db	2
  2365  009C3C  02                 	db	2
  2366  009C3D  02                 	db	2
  2367  009C3E  02                 	db	2
  2368  009C3F  02                 	db	2
  2369  009C40  02                 	db	2
  2370  009C41  02                 	db	2
  2371  009C42  02                 	db	2
  2372  009C43  02                 	db	2
  2373  009C44  02                 	db	2
  2374  009C45  02                 	db	2
  2375  009C46  02                 	db	2
  2376  009C47  02                 	db	2
  2377  009C48  02                 	db	2
  2378  009C49  02                 	db	2
  2379  009C4A  02                 	db	2
  2380  009C4B  02                 	db	2
  2381  009C4C  02                 	db	2
  2382  009C4D  02                 	db	2
  2383  009C4E  02                 	db	2
  2384  009C4F  02                 	db	2
  2385  009C50  02                 	db	2
  2386  009C51  02                 	db	2
  2387  009C52  02                 	db	2
  2388  009C53  02                 	db	2
  2389  009C54  02                 	db	2
  2390  009C55  02                 	db	2
  2391  009C56  02                 	db	2
  2392  009C57  02                 	db	2
  2393  009C58  02                 	db	2
  2394  009C59  02                 	db	2
  2395  009C5A  02                 	db	2
  2396  009C5B  02                 	db	2
  2397  009C5C  02                 	db	2
  2398  009C5D  02                 	db	2
  2399  009C5E  02                 	db	2
  2400  009C5F  02                 	db	2
  2401  009C60  02                 	db	2
  2402  009C61  02                 	db	2
  2403  009C62  02                 	db	2
  2404  009C63  02                 	db	2
  2405  009C64  02                 	db	2
  2406  009C65  02                 	db	2
  2407  009C66  02                 	db	2
  2408  009C67  02                 	db	2
  2409  009C68  02                 	db	2
  2410  009C69  02                 	db	2
  2411  009C6A  02                 	db	2
  2412  009C6B  02                 	db	2
  2413  009C6C  02                 	db	2
  2414  009C6D  02                 	db	2
  2415  009C6E  02                 	db	2
  2416  009C6F  02                 	db	2
  2417  009C70  02                 	db	2
  2418  009C71  02                 	db	2
  2419  009C72  02                 	db	2
  2420  009C73  02                 	db	2
  2421  009C74  02                 	db	2
  2422  009C75  02                 	db	2
  2423  009C76  02                 	db	2
  2424  009C77  02                 	db	2
  2425  009C78  02                 	db	2
  2426  009C79  02                 	db	2
  2427  009C7A  02                 	db	2
  2428  009C7B  02                 	db	2
  2429  009C7C  02                 	db	2
  2430  009C7D  02                 	db	2
  2431  009C7E  02                 	db	2
  2432  009C7F  02                 	db	2
  2433  009C80  02                 	db	2
  2434  009C81  02                 	db	2
  2435  009C82  02                 	db	2
  2436  009C83  02                 	db	2
  2437  009C84  02                 	db	2
  2438  009C85  02                 	db	2
  2439  009C86  02                 	db	2
  2440  009C87  02                 	db	2
  2441  009C88  02                 	db	2
  2442  009C89  02                 	db	2
  2443  009C8A  02                 	db	2
  2444  009C8B  02                 	db	2
  2445  009C8C  02                 	db	2
  2446  009C8D  02                 	db	2
  2447  009C8E  02                 	db	2
  2448  009C8F  02                 	db	2
  2449  009C90  02                 	db	2
  2450  009C91  02                 	db	2
  2451  009C92  02                 	db	2
  2452  009C93  02                 	db	2
  2453  009C94  02                 	db	2
  2454  009C95  02                 	db	2
  2455  009C96  02                 	db	2
  2456  009C97  02                 	db	2
  2457  009C98  02                 	db	2
  2458  009C99  02                 	db	2
  2459  009C9A  02                 	db	2
  2460  009C9B  02                 	db	2
  2461  009C9C  02                 	db	2
  2462  009C9D  02                 	db	2
  2463  009C9E  02                 	db	2
  2464  009C9F  02                 	db	2
  2465  009CA0  02                 	db	2
  2466  009CA1  02                 	db	2
  2467  009CA2  02                 	db	2
  2468  009CA3  02                 	db	2
  2469  009CA4  02                 	db	2
  2470  009CA5  02                 	db	2
  2471  009CA6  02                 	db	2
  2472  009CA7  02                 	db	2
  2473  009CA8  02                 	db	2
  2474  009CA9  02                 	db	2
  2475  009CAA  02                 	db	2
  2476  009CAB  02                 	db	2
  2477  009CAC  02                 	db	2
  2478  009CAD  02                 	db	2
  2479  009CAE  02                 	db	2
  2480  009CAF  02                 	db	2
  2481  009CB0  02                 	db	2
  2482  009CB1  02                 	db	2
  2483  009CB2  02                 	db	2
  2484  009CB3  02                 	db	2
  2485  009CB4  02                 	db	2
  2486  009CB5  02                 	db	2
  2487  009CB6  02                 	db	2
  2488  009CB7  02                 	db	2
  2489  009CB8  02                 	db	2
  2490  009CB9  02                 	db	2
  2491  009CBA  02                 	db	2
  2492  009CBB  02                 	db	2
  2493  009CBC  02                 	db	2
  2494  009CBD  02                 	db	2
  2495  009CBE  02                 	db	2
  2496  009CBF  02                 	db	2
  2497  009CC0  02                 	db	2
  2498  009CC1  02                 	db	2
  2499  009CC2  02                 	db	2
  2500  009CC3  02                 	db	2
  2501  009CC4  02                 	db	2
  2502  009CC5  02                 	db	2
  2503  009CC6  02                 	db	2
  2504  009CC7  02                 	db	2
  2505  009CC8  02                 	db	2
  2506  009CC9  02                 	db	2
  2507  009CCA  02                 	db	2
  2508  009CCB  02                 	db	2
  2509  009CCC  02                 	db	2
  2510  009CCD  02                 	db	2
  2511  009CCE  02                 	db	2
  2512  009CCF  02                 	db	2
  2513  009CD0  02                 	db	2
  2514  009CD1  02                 	db	2
  2515  009CD2  02                 	db	2
  2516  009CD3  02                 	db	2
  2517  009CD4  02                 	db	2
  2518  009CD5  02                 	db	2
  2519  009CD6  02                 	db	2
  2520  009CD7  02                 	db	2
  2521  009CD8  02                 	db	2
  2522  009CD9  02                 	db	2
  2523  009CDA  02                 	db	2
  2524  009CDB  02                 	db	2
  2525  009CDC  02                 	db	2
  2526  009CDD  02                 	db	2
  2527  009CDE  02                 	db	2
  2528  009CDF  02                 	db	2
  2529  009CE0  02                 	db	2
  2530  009CE1  02                 	db	2
  2531  009CE2  01                 	db	1
  2532  009CE3  01                 	db	1
  2533  009CE4  01                 	db	1
  2534  009CE5  01                 	db	1
  2535  009CE6  01                 	db	1
  2536  009CE7  01                 	db	1
  2537  009CE8  01                 	db	1
  2538  009CE9  01                 	db	1
  2539  009CEA  01                 	db	1
  2540  009CEB  01                 	db	1
  2541  009CEC  01                 	db	1
  2542  009CED  01                 	db	1
  2543  009CEE  01                 	db	1
  2544  009CEF  01                 	db	1
  2545  009CF0  01                 	db	1
  2546  009CF1  01                 	db	1
  2547  009CF2  01                 	db	1
  2548  009CF3  01                 	db	1
  2549  009CF4  01                 	db	1
  2550  009CF5  01                 	db	1
  2551  009CF6  01                 	db	1
  2552  009CF7  01                 	db	1
  2553  009CF8  01                 	db	1
  2554  009CF9  01                 	db	1
  2555  009CFA  01                 	db	1
  2556  009CFB  01                 	db	1
  2557  009CFC  01                 	db	1
  2558  009CFD  01                 	db	1
  2559  009CFE  01                 	db	1
  2560  009CFF  01                 	db	1
  2561  009D00  01                 	db	1
  2562  009D01  01                 	db	1
  2563  009D02  01                 	db	1
  2564  009D03  01                 	db	1
  2565  009D04  01                 	db	1
  2566  009D05  01                 	db	1
  2567  009D06  01                 	db	1
  2568  009D07  01                 	db	1
  2569  009D08  01                 	db	1
  2570  009D09  01                 	db	1
  2571  009D0A  01                 	db	1
  2572  009D0B  01                 	db	1
  2573  009D0C  01                 	db	1
  2574  009D0D  01                 	db	1
  2575  009D0E  01                 	db	1
  2576  009D0F  01                 	db	1
  2577  009D10  01                 	db	1
  2578  009D11  01                 	db	1
  2579  009D12  01                 	db	1
  2580  009D13  01                 	db	1
  2581  009D14  01                 	db	1
  2582  009D15  01                 	db	1
  2583  009D16  01                 	db	1
  2584  009D17  01                 	db	1
  2585  009D18  01                 	db	1
  2586  009D19  01                 	db	1
  2587  009D1A  01                 	db	1
  2588  009D1B  01                 	db	1
  2589  009D1C  01                 	db	1
  2590  009D1D  01                 	db	1
  2591  009D1E  01                 	db	1
  2592  009D1F  01                 	db	1
  2593  009D20  01                 	db	1
  2594  009D21  01                 	db	1
  2595  009D22  01                 	db	1
  2596  009D23  01                 	db	1
  2597  009D24  01                 	db	1
  2598  009D25  01                 	db	1
  2599  009D26  01                 	db	1
  2600  009D27  01                 	db	1
  2601  009D28  01                 	db	1
  2602  009D29  01                 	db	1
  2603  009D2A  01                 	db	1
  2604  009D2B  01                 	db	1
  2605  009D2C  01                 	db	1
  2606  009D2D  01                 	db	1
  2607  009D2E  01                 	db	1
  2608  009D2F  01                 	db	1
  2609  009D30  01                 	db	1
  2610  009D31  01                 	db	1
  2611  009D32  01                 	db	1
  2612  009D33  01                 	db	1
  2613  009D34  01                 	db	1
  2614  009D35  01                 	db	1
  2615  009D36  01                 	db	1
  2616  009D37  01                 	db	1
  2617  009D38  01                 	db	1
  2618  009D39  01                 	db	1
  2619  009D3A  01                 	db	1
  2620  009D3B  01                 	db	1
  2621  009D3C  01                 	db	1
  2622  009D3D  01                 	db	1
  2623  009D3E  01                 	db	1
  2624  009D3F  01                 	db	1
  2625  009D40  01                 	db	1
  2626  009D41  01                 	db	1
  2627  009D42  01                 	db	1
  2628  009D43  01                 	db	1
  2629  009D44  01                 	db	1
  2630  009D45  01                 	db	1
  2631  009D46  01                 	db	1
  2632  009D47  01                 	db	1
  2633  009D48  01                 	db	1
  2634  009D49  01                 	db	1
  2635  009D4A  01                 	db	1
  2636  009D4B  01                 	db	1
  2637  009D4C  01                 	db	1
  2638  009D4D  01                 	db	1
  2639  009D4E  01                 	db	1
  2640  009D4F  01                 	db	1
  2641  009D50  01                 	db	1
  2642  009D51  01                 	db	1
  2643  009D52  01                 	db	1
  2644  009D53  01                 	db	1
  2645  009D54  01                 	db	1
  2646  009D55  01                 	db	1
  2647  009D56  01                 	db	1
  2648  009D57  01                 	db	1
  2649  009D58  01                 	db	1
  2650  009D59  01                 	db	1
  2651  009D5A  01                 	db	1
  2652  009D5B  01                 	db	1
  2653  009D5C  01                 	db	1
  2654  009D5D  01                 	db	1
  2655  009D5E  01                 	db	1
  2656  009D5F  01                 	db	1
  2657  009D60  01                 	db	1
  2658  009D61  01                 	db	1
  2659  009D62  01                 	db	1
  2660  009D63  01                 	db	1
  2661  009D64  01                 	db	1
  2662  009D65  01                 	db	1
  2663  009D66  01                 	db	1
  2664  009D67  01                 	db	1
  2665  009D68  01                 	db	1
  2666  009D69  01                 	db	1
  2667  009D6A  01                 	db	1
  2668  009D6B  01                 	db	1
  2669  009D6C  01                 	db	1
  2670  009D6D  01                 	db	1
  2671  009D6E  01                 	db	1
  2672  009D6F  01                 	db	1
  2673  009D70  01                 	db	1
  2674  009D71  01                 	db	1
  2675  009D72  01                 	db	1
  2676  009D73  01                 	db	1
  2677  009D74  01                 	db	1
  2678  009D75  01                 	db	1
  2679  009D76  01                 	db	1
  2680  009D77  01                 	db	1
  2681  009D78  01                 	db	1
  2682  009D79  01                 	db	1
  2683  009D7A  01                 	db	1
  2684  009D7B  01                 	db	1
  2685  009D7C  01                 	db	1
  2686  009D7D  01                 	db	1
  2687  009D7E  01                 	db	1
  2688  009D7F  01                 	db	1
  2689  009D80  01                 	db	1
  2690  009D81  01                 	db	1
  2691  009D82  01                 	db	1
  2692  009D83  01                 	db	1
  2693  009D84  01                 	db	1
  2694  009D85  01                 	db	1
  2695  009D86  01                 	db	1
  2696  009D87  01                 	db	1
  2697  009D88  01                 	db	1
  2698  009D89  01                 	db	1
  2699  009D8A  01                 	db	1
  2700  009D8B  01                 	db	1
  2701  009D8C  01                 	db	1
  2702  009D8D  01                 	db	1
  2703  009D8E  01                 	db	1
  2704  009D8F  01                 	db	1
  2705  009D90  01                 	db	1
  2706  009D91  01                 	db	1
  2707  009D92  01                 	db	1
  2708  009D93  01                 	db	1
  2709  009D94  01                 	db	1
  2710  009D95  01                 	db	1
  2711  009D96  01                 	db	1
  2712  009D97  01                 	db	1
  2713  009D98  01                 	db	1
  2714  009D99  01                 	db	1
  2715  009D9A  01                 	db	1
  2716  009D9B  01                 	db	1
  2717  009D9C  01                 	db	1
  2718  009D9D  01                 	db	1
  2719  009D9E  01                 	db	1
  2720  009D9F  01                 	db	1
  2721  009DA0  01                 	db	1
  2722  009DA1  01                 	db	1
  2723  009DA2  01                 	db	1
  2724  009DA3  00                 	db	0
  2725  009DA4  00                 	db	0
  2726  009DA5  00                 	db	0
  2727  009DA6  00                 	db	0
  2728  009DA7  00                 	db	0
  2729  009DA8  00                 	db	0
  2730  009DA9  00                 	db	0
  2731  009DAA  00                 	db	0
  2732  009DAB  00                 	db	0
  2733  009DAC  00                 	db	0
  2734  009DAD  00                 	db	0
  2735  009DAE  00                 	db	0
  2736  009DAF  00                 	db	0
  2737  009DB0  00                 	db	0
  2738  009DB1  00                 	db	0
  2739  009DB2  00                 	db	0
  2740  009DB3  00                 	db	0
  2741  009DB4  00                 	db	0
  2742  009DB5  00                 	db	0
  2743  009DB6  00                 	db	0
  2744  009DB7  00                 	db	0
  2745  009DB8  00                 	db	0
  2746  009DB9  00                 	db	0
  2747  009DBA  00                 	db	0
  2748  009DBB  00                 	db	0
  2749  009DBC  00                 	db	0
  2750  009DBD  00                 	db	0
  2751  009DBE  00                 	db	0
  2752  009DBF  00                 	db	0
  2753  009DC0  00                 	db	0
  2754  009DC1  00                 	db	0
  2755  009DC2  00                 	db	0
  2756  009DC3  00                 	db	0
  2757  009DC4  00                 	db	0
  2758  009DC5  00                 	db	0
  2759  009DC6  00                 	db	0
  2760  009DC7  00                 	db	0
  2761  009DC8  00                 	db	0
  2762  009DC9  00                 	db	0
  2763  009DCA  00                 	db	0
  2764  009DCB  00                 	db	0
  2765  009DCC  00                 	db	0
  2766  009DCD  00                 	db	0
  2767  009DCE  00                 	db	0
  2768  009DCF  00                 	db	0
  2769  009DD0  00                 	db	0
  2770  009DD1  00                 	db	0
  2771  009DD2  00                 	db	0
  2772  009DD3  00                 	db	0
  2773  009DD4  00                 	db	0
  2774  009DD5  00                 	db	0
  2775  009DD6  00                 	db	0
  2776  009DD7  00                 	db	0
  2777  009DD8  00                 	db	0
  2778  009DD9  00                 	db	0
  2779  009DDA  00                 	db	0
  2780  009DDB  00                 	db	0
  2781  009DDC                     __end_of_motor_prescaler_lookup:
  2782                           	opt stack 0
  2783  009DDC                     _USB_SD_Ptr:
  2784                           	opt stack 0
  2785  009DDC  E5                 	db	low _sd000
  2786  009DDD  A1                 	db	high _sd000
  2787  009DDE  F6                 	db	low _sd001
  2788  009DDF  A0                 	db	high _sd001
  2789  009DE0  2A                 	db	low _sd002
  2790  009DE1  A1                 	db	high _sd002
  2791  009DE2  99                 	db	low _sd003
  2792  009DE3  A1                 	db	high _sd003
  2793  009DE4                     __end_of_USB_SD_Ptr:
  2794                           	opt stack 0
  2795  009DE4                     _USB_CD_Ptr:
  2796                           	opt stack 0
  2797  009DE4  B6                 	db	low _configDescriptor1
  2798  009DE5  A0                 	db	high _configDescriptor1
  2799  009DE6                     __end_of_USB_CD_Ptr:
  2800                           	opt stack 0
  2801  009DE6                     _dc_manual:
  2802                           	opt stack 0
  2803  009DE6  4D                 	db	77
  2804  009DE7  61                 	db	97
  2805  009DE8  6E                 	db	110
  2806  009DE9  75                 	db	117
  2807  009DEA  61                 	db	97
  2808  009DEB  6C                 	db	108
  2809  009DEC  20                 	db	32
  2810  009DED  4D                 	db	77
  2811  009DEE  6F                 	db	111
  2812  009DEF  64                 	db	100
  2813  009DF0  65                 	db	101
  2814  009DF1  20                 	db	32
  2815  009DF2  20                 	db	32
  2816  009DF3  20                 	db	32
  2817  009DF4  20                 	db	32
  2818  009DF5  20                 	db	32
  2819  009DF6  20                 	db	32
  2820  009DF7  20                 	db	32
  2821  009DF8  20                 	db	32
  2822  009DF9  20                 	db	32
  2823  009DFA  43                 	db	67
  2824  009DFB  75                 	db	117
  2825  009DFC  72                 	db	114
  2826  009DFD  72                 	db	114
  2827  009DFE  65                 	db	101
  2828  009DFF  6E                 	db	110
  2829  009E00  74                 	db	116
  2830  009E01  20                 	db	32
  2831  009E02  70                 	db	112
  2832  009E03  6F                 	db	111
  2833  009E04  73                 	db	115
  2834  009E05  3A                 	db	58
  2835  009E06  20                 	db	32
  2836  009E07  20                 	db	32
  2837  009E08  20                 	db	32
  2838  009E09  20                 	db	32
  2839  009E0A  20                 	db	32
  2840  009E0B  20                 	db	32
  2841  009E0C  20                 	db	32
  2842  009E0D  01                 	db	1
  2843  009E0E  54                 	db	84
  2844  009E0F  75                 	db	117
  2845  009E10  72                 	db	114
  2846  009E11  6E                 	db	110
  2847  009E12  20                 	db	32
  2848  009E13  43                 	db	67
  2849  009E14  43                 	db	67
  2850  009E15  57                 	db	87
  2851  009E16  20                 	db	32
  2852  009E17  00                 	db	0
  2853  009E18  20                 	db	32
  2854  009E19  53                 	db	83
  2855  009E1A  70                 	db	112
  2856  009E1B  65                 	db	101
  2857  009E1C  65                 	db	101
  2858  009E1D  64                 	db	100
  2859  009E1E  20                 	db	32
  2860  009E1F  20                 	db	32
  2861  009E20  20                 	db	32
  2862  009E21  20                 	db	32
  2863  009E22  53                 	db	83
  2864  009E23  74                 	db	116
  2865  009E24  61                 	db	97
  2866  009E25  72                 	db	114
  2867  009E26  74                 	db	116
  2868  009E27  20                 	db	32
  2869  009E28  20                 	db	32
  2870  009E29  20                 	db	32
  2871  009E2A  20                 	db	32
  2872  009E2B  00                 	db	0
  2873  009E2C  20                 	db	32
  2874  009E2D  20                 	db	32
  2875  009E2E  20                 	db	32
  2876  009E2F  20                 	db	32
  2877  009E30  20                 	db	32
  2878  009E31  20                 	db	32
  2879  009E32  20                 	db	32
  2880  009E33  20                 	db	32
  2881  009E34  20                 	db	32
  2882  009E35  20                 	db	32
  2883  009E36                     __end_of_dc_manual:
  2884                           	opt stack 0
  2885  009E36                     _dc_zero:
  2886                           	opt stack 0
  2887  009E36  52                 	db	82
  2888  009E37  65                 	db	101
  2889  009E38  74                 	db	116
  2890  009E39  75                 	db	117
  2891  009E3A  72                 	db	114
  2892  009E3B  6E                 	db	110
  2893  009E3C  20                 	db	32
  2894  009E3D  74                 	db	116
  2895  009E3E  6F                 	db	111
  2896  009E3F  20                 	db	32
  2897  009E40  5A                 	db	90
  2898  009E41  65                 	db	101
  2899  009E42  72                 	db	114
  2900  009E43  6F                 	db	111
  2901  009E44  3F                 	db	63
  2902  009E45  20                 	db	32
  2903  009E46  20                 	db	32
  2904  009E47  20                 	db	32
  2905  009E48  20                 	db	32
  2906  009E49  20                 	db	32
  2907  009E4A  43                 	db	67
  2908  009E4B  75                 	db	117
  2909  009E4C  72                 	db	114
  2910  009E4D  72                 	db	114
  2911  009E4E  65                 	db	101
  2912  009E4F  6E                 	db	110
  2913  009E50  74                 	db	116
  2914  009E51  20                 	db	32
  2915  009E52  70                 	db	112
  2916  009E53  6F                 	db	111
  2917  009E54  73                 	db	115
  2918  009E55  3A                 	db	58
  2919  009E56  20                 	db	32
  2920  009E57  20                 	db	32
  2921  009E58  20                 	db	32
  2922  009E59  20                 	db	32
  2923  009E5A  20                 	db	32
  2924  009E5B  20                 	db	32
  2925  009E5C  20                 	db	32
  2926  009E5D  20                 	db	32
  2927  009E5E  20                 	db	32
  2928  009E5F  20                 	db	32
  2929  009E60  20                 	db	32
  2930  009E61  20                 	db	32
  2931  009E62  20                 	db	32
  2932  009E63  20                 	db	32
  2933  009E64  20                 	db	32
  2934  009E65  20                 	db	32
  2935  009E66  20                 	db	32
  2936  009E67  20                 	db	32
  2937  009E68  20                 	db	32
  2938  009E69  20                 	db	32
  2939  009E6A  20                 	db	32
  2940  009E6B  20                 	db	32
  2941  009E6C  20                 	db	32
  2942  009E6D  20                 	db	32
  2943  009E6E  20                 	db	32
  2944  009E6F  20                 	db	32
  2945  009E70  20                 	db	32
  2946  009E71  20                 	db	32
  2947  009E72  20                 	db	32
  2948  009E73  59                 	db	89
  2949  009E74  65                 	db	101
  2950  009E75  73                 	db	115
  2951  009E76  20                 	db	32
  2952  009E77  20                 	db	32
  2953  009E78  20                 	db	32
  2954  009E79  20                 	db	32
  2955  009E7A  20                 	db	32
  2956  009E7B  20                 	db	32
  2957  009E7C  20                 	db	32
  2958  009E7D  20                 	db	32
  2959  009E7E  20                 	db	32
  2960  009E7F  20                 	db	32
  2961  009E80  20                 	db	32
  2962  009E81  20                 	db	32
  2963  009E82  4E                 	db	78
  2964  009E83  6F                 	db	111
  2965  009E84  20                 	db	32
  2966  009E85  20                 	db	32
  2967  009E86                     __end_of_dc_zero:
  2968                           	opt stack 0
  2969  009E86                     _dc_arc2:
  2970                           	opt stack 0
  2971  009E86  41                 	db	65
  2972  009E87  72                 	db	114
  2973  009E88  63                 	db	99
  2974  009E89  3A                 	db	58
  2975  009E8A  20                 	db	32
  2976  009E8B  53                 	db	83
  2977  009E8C  69                 	db	105
  2978  009E8D  7A                 	db	122
  2979  009E8E  65                 	db	101
  2980  009E8F  3D                 	db	61
  2981  009E90  20                 	db	32
  2982  009E91  20                 	db	32
  2983  009E92  20                 	db	32
  2984  009E93  20                 	db	32
  2985  009E94  20                 	db	32
  2986  009E95  20                 	db	32
  2987  009E96  20                 	db	32
  2988  009E97  20                 	db	32
  2989  009E98  20                 	db	32
  2990  009E99  20                 	db	32
  2991  009E9A  43                 	db	67
  2992  009E9B  75                 	db	117
  2993  009E9C  72                 	db	114
  2994  009E9D  72                 	db	114
  2995  009E9E  65                 	db	101
  2996  009E9F  6E                 	db	110
  2997  009EA0  74                 	db	116
  2998  009EA1  20                 	db	32
  2999  009EA2  70                 	db	112
  3000  009EA3  6F                 	db	111
  3001  009EA4  73                 	db	115
  3002  009EA5  3A                 	db	58
  3003  009EA6  20                 	db	32
  3004  009EA7  20                 	db	32
  3005  009EA8  20                 	db	32
  3006  009EA9  20                 	db	32
  3007  009EAA  20                 	db	32
  3008  009EAB  20                 	db	32
  3009  009EAC  20                 	db	32
  3010  009EAD  01                 	db	1
  3011  009EAE  54                 	db	84
  3012  009EAF  75                 	db	117
  3013  009EB0  72                 	db	114
  3014  009EB1  6E                 	db	110
  3015  009EB2  20                 	db	32
  3016  009EB3  43                 	db	67
  3017  009EB4  43                 	db	67
  3018  009EB5  57                 	db	87
  3019  009EB6  20                 	db	32
  3020  009EB7  00                 	db	0
  3021  009EB8  20                 	db	32
  3022  009EB9  53                 	db	83
  3023  009EBA  70                 	db	112
  3024  009EBB  65                 	db	101
  3025  009EBC  65                 	db	101
  3026  009EBD  64                 	db	100
  3027  009EBE  20                 	db	32
  3028  009EBF  20                 	db	32
  3029  009EC0  20                 	db	32
  3030  009EC1  20                 	db	32
  3031  009EC2  53                 	db	83
  3032  009EC3  74                 	db	116
  3033  009EC4  61                 	db	97
  3034  009EC5  72                 	db	114
  3035  009EC6  74                 	db	116
  3036  009EC7  20                 	db	32
  3037  009EC8  20                 	db	32
  3038  009EC9  20                 	db	32
  3039  009ECA  20                 	db	32
  3040  009ECB  00                 	db	0
  3041  009ECC  20                 	db	32
  3042  009ECD  20                 	db	32
  3043  009ECE  20                 	db	32
  3044  009ECF  20                 	db	32
  3045  009ED0  20                 	db	32
  3046  009ED1  20                 	db	32
  3047  009ED2  20                 	db	32
  3048  009ED3  20                 	db	32
  3049  009ED4  20                 	db	32
  3050  009ED5  20                 	db	32
  3051  009ED6                     __end_of_dc_arc2:
  3052                           	opt stack 0
  3053  009ED6                     _dc_arc1:
  3054                           	opt stack 0
  3055  009ED6  41                 	db	65
  3056  009ED7  72                 	db	114
  3057  009ED8  63                 	db	99
  3058  009ED9  3A                 	db	58
  3059  009EDA  20                 	db	32
  3060  009EDB  53                 	db	83
  3061  009EDC  65                 	db	101
  3062  009EDD  74                 	db	116
  3063  009EDE  20                 	db	32
  3064  009EDF  61                 	db	97
  3065  009EE0  72                 	db	114
  3066  009EE1  63                 	db	99
  3067  009EE2  20                 	db	32
  3068  009EE3  73                 	db	115
  3069  009EE4  69                 	db	105
  3070  009EE5  7A                 	db	122
  3071  009EE6  65                 	db	101
  3072  009EE7  20                 	db	32
  3073  009EE8  20                 	db	32
  3074  009EE9  20                 	db	32
  3075  009EEA  41                 	db	65
  3076  009EEB  72                 	db	114
  3077  009EEC  63                 	db	99
  3078  009EED  20                 	db	32
  3079  009EEE  73                 	db	115
  3080  009EEF  69                 	db	105
  3081  009EF0  7A                 	db	122
  3082  009EF1  65                 	db	101
  3083  009EF2  3A                 	db	58
  3084  009EF3  20                 	db	32
  3085  009EF4  20                 	db	32
  3086  009EF5  20                 	db	32
  3087  009EF6  20                 	db	32
  3088  009EF7  20                 	db	32
  3089  009EF8  20                 	db	32
  3090  009EF9  20                 	db	32
  3091  009EFA  20                 	db	32
  3092  009EFB  20                 	db	32
  3093  009EFC  20                 	db	32
  3094  009EFD  20                 	db	32
  3095  009EFE  53                 	db	83
  3096  009EFF  74                 	db	116
  3097  009F00  65                 	db	101
  3098  009F01  70                 	db	112
  3099  009F02  20                 	db	32
  3100  009F03  73                 	db	115
  3101  009F04  69                 	db	105
  3102  009F05  7A                 	db	122
  3103  009F06  65                 	db	101
  3104  009F07  20                 	db	32
  3105  009F08  00                 	db	0
  3106  009F09  20                 	db	32
  3107  009F0A  20                 	db	32
  3108  009F0B  43                 	db	67
  3109  009F0C  6F                 	db	111
  3110  009F0D  6E                 	db	110
  3111  009F0E  66                 	db	102
  3112  009F0F  69                 	db	105
  3113  009F10  72                 	db	114
  3114  009F11  6D                 	db	109
  3115  009F12  20                 	db	32
  3116  009F13  20                 	db	32
  3117  009F14  20                 	db	32
  3118  009F15  20                 	db	32
  3119  009F16  20                 	db	32
  3120  009F17  20                 	db	32
  3121  009F18  20                 	db	32
  3122  009F19  20                 	db	32
  3123  009F1A  20                 	db	32
  3124  009F1B  20                 	db	32
  3125  009F1C  00                 	db	0
  3126  009F1D  20                 	db	32
  3127  009F1E  20                 	db	32
  3128  009F1F  43                 	db	67
  3129  009F20  61                 	db	97
  3130  009F21  6E                 	db	110
  3131  009F22  63                 	db	99
  3132  009F23  65                 	db	101
  3133  009F24  6C                 	db	108
  3134  009F25  20                 	db	32
  3135  009F26                     __end_of_dc_arc1:
  3136                           	opt stack 0
  3137  009F26                     _dc_divide2:
  3138                           	opt stack 0
  3139  009F26  44                 	db	68
  3140  009F27  69                 	db	105
  3141  009F28  76                 	db	118
  3142  009F29  69                 	db	105
  3143  009F2A  64                 	db	100
  3144  009F2B  65                 	db	101
  3145  009F2C  3A                 	db	58
  3146  009F2D  20                 	db	32
  3147  009F2E  20                 	db	32
  3148  009F2F  20                 	db	32
  3149  009F30  20                 	db	32
  3150  009F31  20                 	db	32
  3151  009F32  20                 	db	32
  3152  009F33  20                 	db	32
  3153  009F34  20                 	db	32
  3154  009F35  20                 	db	32
  3155  009F36  20                 	db	32
  3156  009F37  20                 	db	32
  3157  009F38  20                 	db	32
  3158  009F39  20                 	db	32
  3159  009F3A  50                 	db	80
  3160  009F3B  6F                 	db	111
  3161  009F3C  73                 	db	115
  3162  009F3D  3A                 	db	58
  3163  009F3E  20                 	db	32
  3164  009F3F  20                 	db	32
  3165  009F40  20                 	db	32
  3166  009F41  20                 	db	32
  3167  009F42  20                 	db	32
  3168  009F43  20                 	db	32
  3169  009F44  20                 	db	32
  3170  009F45  20                 	db	32
  3171  009F46  20                 	db	32
  3172  009F47  20                 	db	32
  3173  009F48  20                 	db	32
  3174  009F49  20                 	db	32
  3175  009F4A  20                 	db	32
  3176  009F4B  20                 	db	32
  3177  009F4C  20                 	db	32
  3178  009F4D  20                 	db	32
  3179  009F4E  4A                 	db	74
  3180  009F4F  75                 	db	117
  3181  009F50  6D                 	db	109
  3182  009F51  70                 	db	112
  3183  009F52  20                 	db	32
  3184  009F53  73                 	db	115
  3185  009F54  69                 	db	105
  3186  009F55  7A                 	db	122
  3187  009F56  65                 	db	101
  3188  009F57  3A                 	db	58
  3189  009F58  20                 	db	32
  3190  009F59  20                 	db	32
  3191  009F5A  20                 	db	32
  3192  009F5B  20                 	db	32
  3193  009F5C  20                 	db	32
  3194  009F5D  20                 	db	32
  3195  009F5E  20                 	db	32
  3196  009F5F  20                 	db	32
  3197  009F60  20                 	db	32
  3198  009F61  20                 	db	32
  3199  009F62  50                 	db	80
  3200  009F63  72                 	db	114
  3201  009F64  65                 	db	101
  3202  009F65  73                 	db	115
  3203  009F66  73                 	db	115
  3204  009F67  54                 	db	84
  3205  009F68  6F                 	db	111
  3206  009F69  4A                 	db	74
  3207  009F6A  75                 	db	117
  3208  009F6B  6D                 	db	109
  3209  009F6C  70                 	db	112
  3210  009F6D  20                 	db	32
  3211  009F6E  00                 	db	0
  3212  009F6F  20                 	db	32
  3213  009F70  43                 	db	67
  3214  009F71  61                 	db	97
  3215  009F72  6E                 	db	110
  3216  009F73  63                 	db	99
  3217  009F74  65                 	db	101
  3218  009F75  6C                 	db	108
  3219  009F76                     __end_of_dc_divide2:
  3220                           	opt stack 0
  3221  009F76                     _dc_divide1:
  3222                           	opt stack 0
  3223  009F76  44                 	db	68
  3224  009F77  69                 	db	105
  3225  009F78  76                 	db	118
  3226  009F79  69                 	db	105
  3227  009F7A  64                 	db	100
  3228  009F7B  65                 	db	101
  3229  009F7C  3A                 	db	58
  3230  009F7D  20                 	db	32
  3231  009F7E  53                 	db	83
  3232  009F7F  65                 	db	101
  3233  009F80  74                 	db	116
  3234  009F81  20                 	db	32
  3235  009F82  64                 	db	100
  3236  009F83  69                 	db	105
  3237  009F84  76                 	db	118
  3238  009F85  69                 	db	105
  3239  009F86  73                 	db	115
  3240  009F87  69                 	db	105
  3241  009F88  6F                 	db	111
  3242  009F89  6E                 	db	110
  3243  009F8A  20                 	db	32
  3244  009F8B  20                 	db	32
  3245  009F8C  20                 	db	32
  3246  009F8D  20                 	db	32
  3247  009F8E  20                 	db	32
  3248  009F8F  20                 	db	32
  3249  009F90  20                 	db	32
  3250  009F91  20                 	db	32
  3251  009F92  20                 	db	32
  3252  009F93  20                 	db	32
  3253  009F94  20                 	db	32
  3254  009F95  20                 	db	32
  3255  009F96  20                 	db	32
  3256  009F97  20                 	db	32
  3257  009F98  20                 	db	32
  3258  009F99  20                 	db	32
  3259  009F9A  20                 	db	32
  3260  009F9B  20                 	db	32
  3261  009F9C  20                 	db	32
  3262  009F9D  20                 	db	32
  3263  009F9E  20                 	db	32
  3264  009F9F  20                 	db	32
  3265  009FA0  20                 	db	32
  3266  009FA1  2F                 	db	47
  3267  009FA2  73                 	db	115
  3268  009FA3  74                 	db	116
  3269  009FA4  65                 	db	101
  3270  009FA5  70                 	db	112
  3271  009FA6  20                 	db	32
  3272  009FA7  20                 	db	32
  3273  009FA8  00                 	db	0
  3274  009FA9  20                 	db	32
  3275  009FAA  20                 	db	32
  3276  009FAB  43                 	db	67
  3277  009FAC  6F                 	db	111
  3278  009FAD  6E                 	db	110
  3279  009FAE  66                 	db	102
  3280  009FAF  69                 	db	105
  3281  009FB0  72                 	db	114
  3282  009FB1  6D                 	db	109
  3283  009FB2  31                 	db	49
  3284  009FB3  32                 	db	50
  3285  009FB4  33                 	db	51
  3286  009FB5  34                 	db	52
  3287  009FB6  20                 	db	32
  3288  009FB7  20                 	db	32
  3289  009FB8  20                 	db	32
  3290  009FB9  20                 	db	32
  3291  009FBA  20                 	db	32
  3292  009FBB  20                 	db	32
  3293  009FBC  00                 	db	0
  3294  009FBD  20                 	db	32
  3295  009FBE  20                 	db	32
  3296  009FBF  43                 	db	67
  3297  009FC0  61                 	db	97
  3298  009FC1  6E                 	db	110
  3299  009FC2  63                 	db	99
  3300  009FC3  65                 	db	101
  3301  009FC4  6C                 	db	108
  3302  009FC5  20                 	db	32
  3303  009FC6                     __end_of_dc_divide1:
  3304                           	opt stack 0
  3305  009FC6                     _dc_setup2:
  3306                           	opt stack 0
  3307  009FC6  53                 	db	83
  3308  009FC7  65                 	db	101
  3309  009FC8  74                 	db	116
  3310  009FC9  75                 	db	117
  3311  009FCA  70                 	db	112
  3312  009FCB  3A                 	db	58
  3313  009FCC  20                 	db	32
  3314  009FCD  53                 	db	83
  3315  009FCE  65                 	db	101
  3316  009FCF  74                 	db	116
  3317  009FD0  20                 	db	32
  3318  009FD1  64                 	db	100
  3319  009FD2  69                 	db	105
  3320  009FD3  72                 	db	114
  3321  009FD4  65                 	db	101
  3322  009FD5  63                 	db	99
  3323  009FD6  74                 	db	116
  3324  009FD7  69                 	db	105
  3325  009FD8  6F                 	db	111
  3326  009FD9  6E                 	db	110
  3327  009FDA  20                 	db	32
  3328  009FDB  20                 	db	32
  3329  009FDC  20                 	db	32
  3330  009FDD  20                 	db	32
  3331  009FDE  20                 	db	32
  3332  009FDF  20                 	db	32
  3333  009FE0  20                 	db	32
  3334  009FE1  20                 	db	32
  3335  009FE2  20                 	db	32
  3336  009FE3  20                 	db	32
  3337  009FE4  20                 	db	32
  3338  009FE5  20                 	db	32
  3339  009FE6  20                 	db	32
  3340  009FE7  20                 	db	32
  3341  009FE8  20                 	db	32
  3342  009FE9  20                 	db	32
  3343  009FEA  20                 	db	32
  3344  009FEB  20                 	db	32
  3345  009FEC  20                 	db	32
  3346  009FED  20                 	db	32
  3347  009FEE  20                 	db	32
  3348  009FEF  43                 	db	67
  3349  009FF0  6F                 	db	111
  3350  009FF1  75                 	db	117
  3351  009FF2  6E                 	db	110
  3352  009FF3  74                 	db	116
  3353  009FF4  65                 	db	101
  3354  009FF5  72                 	db	114
  3355  009FF6  43                 	db	67
  3356  009FF7  6C                 	db	108
  3357  009FF8  6F                 	db	111
  3358  009FF9  63                 	db	99
  3359  009FFA  6B                 	db	107
  3360  009FFB  77                 	db	119
  3361  009FFC  69                 	db	105
  3362  009FFD  73                 	db	115
  3363  009FFE  65                 	db	101
  3364  009FFF  20                 	db	32
  3365  00A000  20                 	db	32
  3366  00A001  20                 	db	32
  3367  00A002  20                 	db	32
  3368  00A003  43                 	db	67
  3369  00A004  6C                 	db	108
  3370  00A005  6F                 	db	111
  3371  00A006  63                 	db	99
  3372  00A007  6B                 	db	107
  3373  00A008  77                 	db	119
  3374  00A009  69                 	db	105
  3375  00A00A  73                 	db	115
  3376  00A00B  65                 	db	101
  3377  00A00C  20                 	db	32
  3378  00A00D  20                 	db	32
  3379  00A00E  20                 	db	32
  3380  00A00F  20                 	db	32
  3381  00A010  20                 	db	32
  3382  00A011  20                 	db	32
  3383  00A012  20                 	db	32
  3384  00A013  20                 	db	32
  3385  00A014  20                 	db	32
  3386  00A015  20                 	db	32
  3387  00A016                     __end_of_dc_setup2:
  3388                           	opt stack 0
  3389  00A016                     _dc_setup1:
  3390                           	opt stack 0
  3391  00A016  53                 	db	83
  3392  00A017  65                 	db	101
  3393  00A018  74                 	db	116
  3394  00A019  75                 	db	117
  3395  00A01A  70                 	db	112
  3396  00A01B  3A                 	db	58
  3397  00A01C  20                 	db	32
  3398  00A01D  53                 	db	83
  3399  00A01E  65                 	db	101
  3400  00A01F  74                 	db	116
  3401  00A020  20                 	db	32
  3402  00A021  7A                 	db	122
  3403  00A022  65                 	db	101
  3404  00A023  72                 	db	114
  3405  00A024  6F                 	db	111
  3406  00A025  20                 	db	32
  3407  00A026  70                 	db	112
  3408  00A027  6F                 	db	111
  3409  00A028  73                 	db	115
  3410  00A029  2E                 	db	46
  3411  00A02A  20                 	db	32
  3412  00A02B  20                 	db	32
  3413  00A02C  20                 	db	32
  3414  00A02D  20                 	db	32
  3415  00A02E  20                 	db	32
  3416  00A02F  20                 	db	32
  3417  00A030  20                 	db	32
  3418  00A031  20                 	db	32
  3419  00A032  20                 	db	32
  3420  00A033  20                 	db	32
  3421  00A034  20                 	db	32
  3422  00A035  20                 	db	32
  3423  00A036  20                 	db	32
  3424  00A037  20                 	db	32
  3425  00A038  20                 	db	32
  3426  00A039  20                 	db	32
  3427  00A03A  20                 	db	32
  3428  00A03B  20                 	db	32
  3429  00A03C  20                 	db	32
  3430  00A03D  20                 	db	32
  3431  00A03E  53                 	db	83
  3432  00A03F  74                 	db	116
  3433  00A040  65                 	db	101
  3434  00A041  70                 	db	112
  3435  00A042  20                 	db	32
  3436  00A043  73                 	db	115
  3437  00A044  69                 	db	105
  3438  00A045  7A                 	db	122
  3439  00A046  65                 	db	101
  3440  00A047  20                 	db	32
  3441  00A048  00                 	db	0
  3442  00A049  20                 	db	32
  3443  00A04A  20                 	db	32
  3444  00A04B  43                 	db	67
  3445  00A04C  6F                 	db	111
  3446  00A04D  6E                 	db	110
  3447  00A04E  66                 	db	102
  3448  00A04F  69                 	db	105
  3449  00A050  72                 	db	114
  3450  00A051  6D                 	db	109
  3451  00A052  20                 	db	32
  3452  00A053  78                 	db	120
  3453  00A054  2E                 	db	46
  3454  00A055  78                 	db	120
  3455  00A056  78                 	db	120
  3456  00A057  01                 	db	1
  3457  00A058  20                 	db	32
  3458  00A059  20                 	db	32
  3459  00A05A  20                 	db	32
  3460  00A05B  20                 	db	32
  3461  00A05C  00                 	db	0
  3462  00A05D  20                 	db	32
  3463  00A05E  20                 	db	32
  3464  00A05F  43                 	db	67
  3465  00A060  61                 	db	97
  3466  00A061  6E                 	db	110
  3467  00A062  63                 	db	99
  3468  00A063  65                 	db	101
  3469  00A064  6C                 	db	108
  3470  00A065  20                 	db	32
  3471  00A066                     __end_of_dc_setup1:
  3472                           	opt stack 0
  3473  00A066                     _dc_main:
  3474                           	opt stack 0
  3475  00A066  4D                 	db	77
  3476  00A067  61                 	db	97
  3477  00A068  69                 	db	105
  3478  00A069  6E                 	db	110
  3479  00A06A  20                 	db	32
  3480  00A06B  4D                 	db	77
  3481  00A06C  65                 	db	101
  3482  00A06D  6E                 	db	110
  3483  00A06E  75                 	db	117
  3484  00A06F  3A                 	db	58
  3485  00A070  20                 	db	32
  3486  00A071  20                 	db	32
  3487  00A072  20                 	db	32
  3488  00A073  20                 	db	32
  3489  00A074  20                 	db	32
  3490  00A075  20                 	db	32
  3491  00A076  20                 	db	32
  3492  00A077  20                 	db	32
  3493  00A078  20                 	db	32
  3494  00A079  20                 	db	32
  3495  00A07A  20                 	db	32
  3496  00A07B  53                 	db	83
  3497  00A07C  65                 	db	101
  3498  00A07D  74                 	db	116
  3499  00A07E  75                 	db	117
  3500  00A07F  70                 	db	112
  3501  00A080  20                 	db	32
  3502  00A081  20                 	db	32
  3503  00A082  20                 	db	32
  3504  00A083  20                 	db	32
  3505  00A084  44                 	db	68
  3506  00A085  69                 	db	105
  3507  00A086  76                 	db	118
  3508  00A087  69                 	db	105
  3509  00A088  64                 	db	100
  3510  00A089  65                 	db	101
  3511  00A08A  20                 	db	32
  3512  00A08B  20                 	db	32
  3513  00A08C  20                 	db	32
  3514  00A08D  20                 	db	32
  3515  00A08E  20                 	db	32
  3516  00A08F  41                 	db	65
  3517  00A090  72                 	db	114
  3518  00A091  63                 	db	99
  3519  00A092  20                 	db	32
  3520  00A093  20                 	db	32
  3521  00A094  20                 	db	32
  3522  00A095  20                 	db	32
  3523  00A096  20                 	db	32
  3524  00A097  20                 	db	32
  3525  00A098  4D                 	db	77
  3526  00A099  61                 	db	97
  3527  00A09A  6E                 	db	110
  3528  00A09B  75                 	db	117
  3529  00A09C  61                 	db	97
  3530  00A09D  6C                 	db	108
  3531  00A09E  20                 	db	32
  3532  00A09F  20                 	db	32
  3533  00A0A0  20                 	db	32
  3534  00A0A1  20                 	db	32
  3535  00A0A2  20                 	db	32
  3536  00A0A3  47                 	db	71
  3537  00A0A4  6F                 	db	111
  3538  00A0A5  32                 	db	50
  3539  00A0A6  5A                 	db	90
  3540  00A0A7  65                 	db	101
  3541  00A0A8  72                 	db	114
  3542  00A0A9  6F                 	db	111
  3543  00A0AA  20                 	db	32
  3544  00A0AB  20                 	db	32
  3545  00A0AC  20                 	db	32
  3546  00A0AD  20                 	db	32
  3547  00A0AE  20                 	db	32
  3548  00A0AF  20                 	db	32
  3549  00A0B0  20                 	db	32
  3550  00A0B1  20                 	db	32
  3551  00A0B2  20                 	db	32
  3552  00A0B3  20                 	db	32
  3553  00A0B4  20                 	db	32
  3554  00A0B5  20                 	db	32
  3555  00A0B6                     __end_of_dc_main:
  3556                           	opt stack 0
  3557  00A0B6                     _configDescriptor1:
  3558                           	opt stack 0
  3559  00A0B6  09                 	db	9
  3560  00A0B7  02                 	db	2
  3561  00A0B8  40                 	db	64
  3562  00A0B9  00                 	db	0
  3563  00A0BA  02                 	db	2
  3564  00A0BB  01                 	db	1
  3565  00A0BC  00                 	db	0
  3566  00A0BD  C0                 	db	192
  3567  00A0BE  32                 	db	50
  3568  00A0BF  09                 	db	9
  3569  00A0C0  04                 	db	4
  3570  00A0C1  00                 	db	0
  3571  00A0C2  00                 	db	0
  3572  00A0C3  02                 	db	2
  3573  00A0C4  03                 	db	3
  3574  00A0C5  00                 	db	0
  3575  00A0C6  00                 	db	0
  3576  00A0C7  00                 	db	0
  3577  00A0C8  09                 	db	9
  3578  00A0C9  21                 	db	33
  3579  00A0CA  11                 	db	17
  3580  00A0CB  01                 	db	1
  3581  00A0CC  00                 	db	0
  3582  00A0CD  01                 	db	1
  3583  00A0CE  22                 	db	34
  3584  00A0CF  1D                 	db	29
  3585  00A0D0  00                 	db	0
  3586  00A0D1  07                 	db	7
  3587  00A0D2  05                 	db	5
  3588  00A0D3  81                 	db	129
  3589  00A0D4  03                 	db	3
  3590  00A0D5  40                 	db	64
  3591  00A0D6  00                 	db	0
  3592  00A0D7  01                 	db	1
  3593  00A0D8  07                 	db	7
  3594  00A0D9  05                 	db	5
  3595  00A0DA  01                 	db	1
  3596  00A0DB  03                 	db	3
  3597  00A0DC  40                 	db	64
  3598  00A0DD  00                 	db	0
  3599  00A0DE  01                 	db	1
  3600  00A0DF  09                 	db	9
  3601  00A0E0  04                 	db	4
  3602  00A0E1  01                 	db	1
  3603  00A0E2  00                 	db	0
  3604  00A0E3  02                 	db	2
  3605  00A0E4  08                 	db	8
  3606  00A0E5  06                 	db	6
  3607  00A0E6  50                 	db	80
  3608  00A0E7  00                 	db	0
  3609  00A0E8  07                 	db	7
  3610  00A0E9  05                 	db	5
  3611  00A0EA  82                 	db	130
  3612  00A0EB  02                 	db	2
  3613  00A0EC  40                 	db	64
  3614  00A0ED  00                 	db	0
  3615  00A0EE  01                 	db	1
  3616  00A0EF  07                 	db	7
  3617  00A0F0  05                 	db	5
  3618  00A0F1  02                 	db	2
  3619  00A0F2  02                 	db	2
  3620  00A0F3  40                 	db	64
  3621  00A0F4  00                 	db	0
  3622  00A0F5  01                 	db	1
  3623  00A0F6                     __end_of_configDescriptor1:
  3624                           	opt stack 0
  3625  00A0F6                     _sd001:
  3626                           	opt stack 0
  3627  00A0F6  34                 	db	52
  3628  00A0F7  03                 	db	3
  3629  00A0F8  0053               	dw	83
  3630  00A0FA  006F               	dw	111
  3631  00A0FC  006C               	dw	108
  3632  00A0FE  0064               	dw	100
  3633  00A100  0065               	dw	101
  3634  00A102  0072               	dw	114
  3635  00A104  006E               	dw	110
  3636  00A106  0065               	dw	101
  3637  00A108  0072               	dw	114
  3638  00A10A  0064               	dw	100
  3639  00A10C  002E               	dw	46
  3640  00A10E  0063               	dw	99
  3641  00A110  006F               	dw	111
  3642  00A112  006D               	dw	109
  3643  00A114  0020               	dw	32
  3644  00A116  0020               	dw	32
  3645  00A118  0020               	dw	32
  3646  00A11A  0020               	dw	32
  3647  00A11C  0020               	dw	32
  3648  00A11E  0020               	dw	32
  3649  00A120  0020               	dw	32
  3650  00A122  0020               	dw	32
  3651  00A124  0020               	dw	32
  3652  00A126  0020               	dw	32
  3653  00A128  0020               	dw	32
  3654  00A12A                     __end_of_sd001:
  3655                           	opt stack 0
  3656  00A12A                     _sd002:
  3657                           	opt stack 0
  3658  00A12A  2E                 	db	46
  3659  00A12B  03                 	db	3
  3660  00A12C  0053               	dw	83
  3661  00A12E  0074               	dw	116
  3662  00A130  0065               	dw	101
  3663  00A132  0070               	dw	112
  3664  00A134  0070               	dw	112
  3665  00A136  0065               	dw	101
  3666  00A138  0072               	dw	114
  3667  00A13A  004D               	dw	77
  3668  00A13C  006F               	dw	111
  3669  00A13E  0074               	dw	116
  3670  00A140  006F               	dw	111
  3671  00A142  0072               	dw	114
  3672  00A144  0043               	dw	67
  3673  00A146  006F               	dw	111
  3674  00A148  006E               	dw	110
  3675  00A14A  0074               	dw	116
  3676  00A14C  0072               	dw	114
  3677  00A14E  006F               	dw	111
  3678  00A150  006C               	dw	108
  3679  00A152  006C               	dw	108
  3680  00A154  0065               	dw	101
  3681  00A156  0072               	dw	114
  3682  00A158                     __end_of_sd002:
  3683                           	opt stack 0
  3684  00A158                     _inq_resp:
  3685                           	opt stack 0
  3686  00A158  00                 	db	0
  3687  00A159  80                 	db	128
  3688  00A15A  04                 	db	4
  3689  00A15B  02                 	db	2
  3690  00A15C  20                 	db	32
  3691  00A15D  00                 	db	0
  3692  00A15E  00                 	db	0
  3693  00A15F  00                 	db	0
  3694  00A160  4D                 	db	77
  3695  00A161  69                 	db	105
  3696  00A162  63                 	db	99
  3697  00A163  72                 	db	114
  3698  00A164  6F                 	db	111
  3699  00A165  63                 	db	99
  3700  00A166  68                 	db	104
  3701  00A167  70                 	db	112
  3702  00A168  4D                 	db	77
  3703  00A169  61                 	db	97
  3704  00A16A  73                 	db	115
  3705  00A16B  73                 	db	115
  3706  00A16C  20                 	db	32
  3707  00A16D  53                 	db	83
  3708  00A16E  74                 	db	116
  3709  00A16F  6F                 	db	111
  3710  00A170  72                 	db	114
  3711  00A171  61                 	db	97
  3712  00A172  67                 	db	103
  3713  00A173  65                 	db	101
  3714  00A174  20                 	db	32
  3715  00A175  20                 	db	32
  3716  00A176  20                 	db	32
  3717  00A177  20                 	db	32
  3718  00A178  30                 	db	48
  3719  00A179  30                 	db	48
  3720  00A17A  30                 	db	48
  3721  00A17B  31                 	db	49
  3722  00A17C                     __end_of_inq_resp:
  3723                           	opt stack 0
  3724  00A17C                     _hid_rpt01:
  3725                           	opt stack 0
  3726  00A17C  06                 	db	6
  3727  00A17D  00                 	db	0
  3728  00A17E  FF                 	db	255
  3729  00A17F  09                 	db	9
  3730  00A180  01                 	db	1
  3731  00A181  A1                 	db	161
  3732  00A182  01                 	db	1
  3733  00A183  19                 	db	25
  3734  00A184  01                 	db	1
  3735  00A185  29                 	db	41
  3736  00A186  40                 	db	64
  3737  00A187  15                 	db	21
  3738  00A188  00                 	db	0
  3739  00A189  26                 	db	38
  3740  00A18A  FF                 	db	255
  3741  00A18B  00                 	db	0
  3742  00A18C  75                 	db	117
  3743  00A18D  08                 	db	8
  3744  00A18E  95                 	db	149
  3745  00A18F  40                 	db	64
  3746  00A190  81                 	db	129
  3747  00A191  00                 	db	0
  3748  00A192  19                 	db	25
  3749  00A193  01                 	db	1
  3750  00A194  29                 	db	41
  3751  00A195  40                 	db	64
  3752  00A196  91                 	db	145
  3753  00A197  00                 	db	0
  3754  00A198  C0                 	db	192
  3755  00A199                     __end_of_hid_rpt01:
  3756                           	opt stack 0
  3757  00A199                     _sd003:
  3758                           	opt stack 0
  3759  00A199  1A                 	db	26
  3760  00A19A  03                 	db	3
  3761  00A19B  0031               	dw	49
  3762  00A19D  0032               	dw	50
  3763  00A19F  0033               	dw	51
  3764  00A1A1  0034               	dw	52
  3765  00A1A3  0035               	dw	53
  3766  00A1A5  0036               	dw	54
  3767  00A1A7  0037               	dw	55
  3768  00A1A9  0038               	dw	56
  3769  00A1AB  0039               	dw	57
  3770  00A1AD  0030               	dw	48
  3771  00A1AF  0039               	dw	57
  3772  00A1B1  0039               	dw	57
  3773  00A1B3                     __end_of_sd003:
  3774                           	opt stack 0
  3775  00A1B3                     _device_dsc:
  3776                           	opt stack 0
  3777  00A1B3  12                 	db	18
  3778  00A1B4  01                 	db	1
  3779  00A1B5  0200               	dw	512
  3780  00A1B7  00                 	db	0
  3781  00A1B8  00                 	db	0
  3782  00A1B9  00                 	db	0
  3783  00A1BA  08                 	db	8
  3784  00A1BB  04D8               	dw	1240
  3785  00A1BD  EDCF               	dw	60879
  3786  00A1BF  0100               	dw	256
  3787  00A1C1  01                 	db	1
  3788  00A1C2  02                 	db	2
  3789  00A1C3  00                 	db	0
  3790  00A1C4  01                 	db	1
  3791  00A1C5                     __end_of_device_dsc:
  3792                           	opt stack 0
  3793  00A1C5                     _bit_pattern_ae:
  3794                           	opt stack 0
  3795  00A1C5  0A                 	db	10
  3796  00A1C6  00                 	db	0
  3797  00A1C7  0E                 	db	14
  3798  00A1C8  01                 	db	1
  3799  00A1C9  0F                 	db	15
  3800  00A1CA  11                 	db	17
  3801  00A1CB  0F                 	db	15
  3802  00A1CC  00                 	db	0
  3803  00A1CD                     __end_of_bit_pattern_ae:
  3804                           	opt stack 0
  3805  00A1CD                     _bit_pattern_degree:
  3806                           	opt stack 0
  3807  00A1CD  18                 	db	24
  3808  00A1CE  18                 	db	24
  3809  00A1CF  00                 	db	0
  3810  00A1D0  00                 	db	0
  3811  00A1D1  00                 	db	0
  3812  00A1D2  00                 	db	0
  3813  00A1D3  00                 	db	0
  3814  00A1D4  00                 	db	0
  3815  00A1D5                     __end_of_bit_pattern_degree:
  3816                           	opt stack 0
  3817  00A1D5                     _bit_pattern_verticalbar:
  3818                           	opt stack 0
  3819  00A1D5  04                 	db	4
  3820  00A1D6  04                 	db	4
  3821  00A1D7  04                 	db	4
  3822  00A1D8  04                 	db	4
  3823  00A1D9  04                 	db	4
  3824  00A1DA  04                 	db	4
  3825  00A1DB  04                 	db	4
  3826  00A1DC  04                 	db	4
  3827  00A1DD                     __end_of_bit_pattern_verticalbar:
  3828                           	opt stack 0
  3829  00A1DD                     _flash_command_pagesize_528:
  3830                           	opt stack 0
  3831  00A1DD  3D                 	db	61
  3832  00A1DE  2A                 	db	42
  3833  00A1DF  80                 	db	128
  3834  00A1E0  A7                 	db	167
  3835  00A1E1                     __end_of_flash_command_pagesize_528:
  3836                           	opt stack 0
  3837  00A1E1                     _flash_command_pagesize_512:
  3838                           	opt stack 0
  3839  00A1E1  3D                 	db	61
  3840  00A1E2  2A                 	db	42
  3841  00A1E3  80                 	db	128
  3842  00A1E4  A6                 	db	166
  3843  00A1E5                     __end_of_flash_command_pagesize_512:
  3844                           	opt stack 0
  3845  00A1E5                     _sd000:
  3846                           	opt stack 0
  3847  00A1E5  04                 	db	4
  3848  00A1E6  03                 	db	3
  3849  00A1E7  0409               	dw	1033
  3850  00A1E9                     __end_of_sd000:
  3851                           	opt stack 0
  3852  00A1E9                     
  3853                           ; BSR set to: 1
  3854  00A1E9  68                 	db	104	;'h'
  3855  00A1EA  65                 	db	101	;'e'
  3856  00A1EB  6C                 	db	108	;'l'
  3857  00A1EC  6C                 	db	108	;'l'
  3858  00A1ED  6F                 	db	111	;'o'
  3859  00A1EE  20                 	db	32
  3860  00A1EF  77                 	db	119	;'w'
  3861  00A1F0  6F                 	db	111	;'o'
  3862  00A1F1  72                 	db	114	;'r'
  3863  00A1F2  6C                 	db	108	;'l'
  3864  00A1F3  64                 	db	100	;'d'
  3865  00A1F4  21                 	db	33
  3866  00A1F5  00                 	db	0
  3867  00A1F6                     
  3868                           ; BSR set to: 1
  3869  00A1F6  53                 	db	83	;'S'
  3870  00A1F7  6F                 	db	111	;'o'
  3871  00A1F8  6C                 	db	108	;'l'
  3872  00A1F9  61                 	db	97	;'a'
  3873  00A1FA  72                 	db	114	;'r'
  3874  00A1FB  43                 	db	67	;'C'
  3875  00A1FC  68                 	db	104	;'h'
  3876  00A1FD  61                 	db	97	;'a'
  3877  00A1FE  72                 	db	114	;'r'
  3878  00A1FF  67                 	db	103	;'g'
  3879  00A200  72                 	db	114	;'r'
  3880  00A201  00                 	db	0
  3881  00A202                     
  3882                           ; BSR set to: 1
  3883  00A202  46                 	db	70	;'F'
  3884  00A203  49                 	db	73	;'I'
  3885  00A204  4C                 	db	76	;'L'
  3886  00A205  45                 	db	69	;'E'
  3887  00A206  20                 	db	32
  3888  00A207  20                 	db	32
  3889  00A208  20                 	db	32
  3890  00A209  20                 	db	32
  3891  00A20A  00                 	db	0
  3892  00A20B                     STR_7:
  3893                           
  3894                           ; BSR set to: 1
  3895  00A20B  4D                 	db	77	;'M'
  3896  00A20C  53                 	db	83	;'S'
  3897  00A20D  44                 	db	68	;'D'
  3898  00A20E  4F                 	db	79	;'O'
  3899  00A20F  53                 	db	83	;'S'
  3900  00A210  35                 	db	53	;'5'
  3901  00A211  2E                 	db	46
  3902  00A212  30                 	db	48	;'0'
  3903  00A213  00                 	db	0
  3904  00A214                     STR_1:
  3905                           
  3906                           ; BSR set to: 1
  3907  00A214  20                 	db	32
  3908  00A215  20                 	db	32
  3909  00A216  20                 	db	32
  3910  00A217  20                 	db	32
  3911  00A218  20                 	db	32
  3912  00A219  20                 	db	32
  3913  00A21A  20                 	db	32
  3914  00A21B  20                 	db	32
  3915  00A21C  00                 	db	0
  3916  00A21D                     STR_2:
  3917                           
  3918                           ; BSR set to: 1
  3919  00A21D  43                 	db	67	;'C'
  3920  00A21E  61                 	db	97	;'a'
  3921  00A21F  6E                 	db	110	;'n'
  3922  00A220  63                 	db	99	;'c'
  3923  00A221  65                 	db	101	;'e'
  3924  00A222  6C                 	db	108	;'l'
  3925  00A223  00                 	db	0
  3926  00A224                     STR_6:
  3927                           
  3928                           ; BSR set to: 1
  3929  00A224  53                 	db	83	;'S'
  3930  00A225  74                 	db	116	;'t'
  3931  00A226  6F                 	db	111	;'o'
  3932  00A227  70                 	db	112	;'p'
  3933  00A228  20                 	db	32
  3934  00A229  00                 	db	0
  3935  00A22A                     
  3936                           ; BSR set to: 1
  3937  00A22A  54                 	db	84	;'T'
  3938  00A22B  58                 	db	88	;'X'
  3939  00A22C  54                 	db	84	;'T'
  3940  00A22D  00                 	db	0
  3941  0000                     
  3942                           ; #config settings
  3943  00A22E  00                 	db	0	; dummy byte at the end
  3944  0000                     
  3945                           	psect	nvBANK1
  3946  0001FD                     __pnvBANK1:
  3947                           	opt stack 0
  3948  0001FD                     _enc2:
  3949                           	opt stack 0
  3950  0001FD                     	ds	1
  3951  0001FE                     _enc1:
  3952                           	opt stack 0
  3953  0001FE                     	ds	1
  3954  0000                     _RPINR22	set	3837
  3955  0000                     _RPOR23	set	3799
  3956  0000                     _RPOR21	set	3797
  3957  0000                     _RPINR21	set	3836
  3958  0000                     _RPOR4	set	3780
  3959  0000                     _PPSCONbits	set	3775
  3960  0000                     _ANCON0bits	set	3912
  3961  0000                     _ANCON1bits	set	3913
  3962  0000                     _UEP0bits	set	3878
  3963  0000                     _UIEbits	set	3894
  3964  0000                     _UADDR	set	3896
  3965  0000                     _UIE	set	3894
  3966  0000                     _UEIE	set	3895
  3967  0000                     _UCFG	set	3897
  3968  0000                     _UEP1	set	3879
  3969  0000                     _UEP0	set	3878
  3970  0000                     _PORTA	set	3968
  3971  0000                     _PORTE	set	3972
  3972  0000                     _TMR2	set	4044
  3973  0000                     _PIE1bits	set	3997
  3974  0000                     _PIR1bits	set	3998
  3975  0000                     _CCPR1L	set	4027
  3976  0000                     _PR2	set	4043
  3977  0000                     _T2CONbits	set	4042
  3978  0000                     _CCP1CONbits	set	4026
  3979  0000                     _RXADDRL	set	3945
  3980  0000                     _RXADDRH	set	3944
  3981  0000                     _DMABCL	set	3943
  3982  0000                     _DMABCH	set	3942
  3983  0000                     _TXADDRL	set	3947
  3984  0000                     _TXADDRH	set	3946
  3985  0000                     _DMACON2bits	set	3974
  3986  0000                     _DMACON1bits	set	3976
  3987  0000                     _SSP2CON1bits	set	3954
  3988  0000                     _SSP2STATbits	set	3955
  3989  0000                     _LATDbits	set	3980
  3990  0000                     _PORTDbits	set	3971
  3991  0000                     _PORTEbits	set	3972
  3992  0000                     _SSP1BUF	set	4041
  3993  0000                     _SSP1CON2bits	set	4037
  3994  0000                     _SSP1CON1bits	set	4038
  3995  0000                     _SSP1ADD	set	4040
  3996  0000                     _SSP1STATbits	set	4039
  3997  0000                     _PORTAbits	set	3968
  3998  0000                     _T0CONbits	set	4053
  3999  0000                     _TRISEbits	set	3990
  4000  0000                     _TRISDbits	set	3989
  4001  0000                     _EECON2	set	4007
  4002  0000                     _LATBbits	set	3978
  4003  0000                     _LATAbits	set	3977
  4004  0000                     _TRISAbits	set	3986
  4005  0000                     _TRISCbits	set	3988
  4006  0000                     _TRISBbits	set	3987
  4007  0000                     _TMR0L	set	4054
  4008  0000                     _TMR0H	set	4055
  4009  0000                     _OSCCON	set	4051
  4010  0000                     _OSCTUNEbits	set	3995
  4011  0000                     _LATCbits	set	3979
  4012  0000                     _INTCONbits	set	4082
  4013  0000                     _IPR2bits	set	4002
  4014  0000                     _RCONbits	set	4048
  4015  0000                     _UCON	set	3941
  4016  0000                     _USTAT	set	3940
  4017  0000                     _PIR2bits	set	4001
  4018  0000                     _UIRbits	set	3938
  4019  0000                     _UCONbits	set	3941
  4020  0000                     _UIR	set	3938
  4021  0000                     _UEIR	set	3939
  4022  0000                     _PIE2bits	set	4000
  4023                           
  4024                           	psect	cinit
  4025  00E896                     __pcinit:
  4026                           	opt stack 0
  4027  00E896                     start_initialization:
  4028                           	opt stack 0
  4029  00E896                     __initialization:
  4030                           	opt stack 0
  4031                           
  4032                           ; Initialize objects allocated to BANK2 (26 bytes)
  4033                           ; load TBLPTR registers with __pidataBANK2
  4034  00E896  0ED6               	movlw	low __pidataBANK2
  4035  00E898  6EF6               	movwf	tblptrl,c
  4036  00E89A  0EF5               	movlw	high __pidataBANK2
  4037  00E89C  6EF7               	movwf	tblptrh,c
  4038  00E89E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  4039  00E8A0  6EF8               	movwf	tblptru,c
  4040  00E8A2  EE02  F0B8         	lfsr	0,__pdataBANK2
  4041  00E8A6  EE10 F01A          	lfsr	1,26
  4042  00E8AA                     copy_data0:
  4043  00E8AA  0009               	tblrd		*+
  4044  00E8AC  CFF5 FFEE          	movff	tablat,postinc0
  4045  00E8B0  50E5               	movf	postdec1,w,c
  4046  00E8B2  50E1               	movf	fsr1l,w,c
  4047  00E8B4  E1FA               	bnz	copy_data0
  4048                           
  4049                           ; Initialize objects allocated to BANK1 (109 bytes)
  4050                           ; load TBLPTR registers with __pidataBANK1
  4051  00E8B6  0E7C               	movlw	low __pidataBANK1
  4052  00E8B8  6EF6               	movwf	tblptrl,c
  4053  00E8BA  0EEB               	movlw	high __pidataBANK1
  4054  00E8BC  6EF7               	movwf	tblptrh,c
  4055  00E8BE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4056  00E8C0  6EF8               	movwf	tblptru,c
  4057  00E8C2  EE01  F090         	lfsr	0,__pdataBANK1
  4058  00E8C6  EE10 F06D          	lfsr	1,109
  4059  00E8CA                     copy_data1:
  4060  00E8CA  0009               	tblrd		*+
  4061  00E8CC  CFF5 FFEE          	movff	tablat,postinc0
  4062  00E8D0  50E5               	movf	postdec1,w,c
  4063  00E8D2  50E1               	movf	fsr1l,w,c
  4064  00E8D4  E1FA               	bnz	copy_data1
  4065                           
  4066                           ; Clear objects allocated to BIGRAMll (512 bytes)
  4067  00E8D6  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4068  00E8DA  EE12 F000          	lfsr	1,512
  4069  00E8DE                     clear_0:
  4070  00E8DE  6AEE               	clrf	postinc0,c
  4071  00E8E0  50E5               	movf	postdec1,w,c
  4072  00E8E2  50E1               	movf	fsr1l,w,c
  4073  00E8E4  E1FC               	bnz	clear_0
  4074  00E8E6  50E2               	movf	fsr1h,w,c
  4075  00E8E8  E1FA               	bnz	clear_0
  4076                           
  4077                           ; Clear objects allocated to BANK2 (184 bytes)
  4078  00E8EA  EE02  F000         	lfsr	0,__pbssBANK2
  4079  00E8EE  0EB8               	movlw	184
  4080  00E8F0                     clear_1:
  4081  00E8F0  6AEE               	clrf	postinc0,c
  4082  00E8F2  06E8               	decf	wreg,f,c
  4083  00E8F4  E1FD               	bnz	clear_1
  4084                           
  4085                           ; Clear objects allocated to BANK1 (144 bytes)
  4086  00E8F6  EE01  F000         	lfsr	0,__pbssBANK1
  4087  00E8FA  0E90               	movlw	144
  4088  00E8FC                     clear_2:
  4089  00E8FC  6AEE               	clrf	postinc0,c
  4090  00E8FE  06E8               	decf	wreg,f,c
  4091  00E900  E1FD               	bnz	clear_2
  4092                           
  4093                           ; Clear objects allocated to BANK0 (52 bytes)
  4094  00E902  EE00  F0CC         	lfsr	0,__pbssBANK0
  4095  00E906  0E34               	movlw	52
  4096  00E908                     clear_3:
  4097  00E908  6AEE               	clrf	postinc0,c
  4098  00E90A  06E8               	decf	wreg,f,c
  4099  00E90C  E1FD               	bnz	clear_3
  4100                           
  4101                           ; Clear objects allocated to COMRAM (45 bytes)
  4102  00E90E  EE00  F001         	lfsr	0,__pbssCOMRAM
  4103  00E912  0E2D               	movlw	45
  4104  00E914                     clear_4:
  4105  00E914  6AEE               	clrf	postinc0,c
  4106  00E916  06E8               	decf	wreg,f,c
  4107  00E918  E1FD               	bnz	clear_4
  4108  00E91A                     end_of_initialization:
  4109                           	opt stack 0
  4110  00E91A                     __end_of__initialization:
  4111                           	opt stack 0
  4112  00E91A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4113  00E91C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4114  00E91E  0100               	movlb	0
  4115  00E920  EF27  F068         	goto	_main	;jump to C main() function
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           postinc0	equ	0xFEE
  4121                           wreg	equ	0xFE8
  4122                           postdec1	equ	0xFE5
  4123                           fsr1h	equ	0xFE2
  4124                           fsr1l	equ	0xFE1
  4125                           
  4126                           	psect	bssCOMRAM
  4127  000001                     __pbssCOMRAM:
  4128                           	opt stack 0
  4129  000001                     _inPipes:
  4130                           	opt stack 0
  4131  000001                     	ds	6
  4132  000007                     _pBDTEntryIn:
  4133                           	opt stack 0
  4134  000007                     	ds	6
  4135  00000D                     _motor_current_stepcount:
  4136                           	opt stack 0
  4137  00000D                     	ds	4
  4138  000011                     _TransferLength:
  4139                           	opt stack 0
  4140  000011                     	ds	2
  4141  000013                     _USBMSDInHandle:
  4142                           	opt stack 0
  4143  000013                     	ds	2
  4144  000015                     _USBMSDOutHandle:
  4145                           	opt stack 0
  4146  000015                     	ds	2
  4147  000017                     _pBDTEntryEP0OutNext:
  4148                           	opt stack 0
  4149  000017                     	ds	2
  4150  000019                     _pBDTEntryEP0OutCurrent:
  4151                           	opt stack 0
  4152  000019                     	ds	2
  4153  00001B                     _motor_mode:
  4154                           	opt stack 0
  4155  00001B                     	ds	1
  4156  00001C                     _power_state:
  4157                           	opt stack 0
  4158  00001C                     	ds	1
  4159  00001D                     _MSDHostNoData:
  4160                           	opt stack 0
  4161  00001D                     	ds	1
  4162  00001E                     _MSDWriteState:
  4163                           	opt stack 0
  4164  00001E                     	ds	1
  4165  00001F                     _MSDCommandState:
  4166                           	opt stack 0
  4167  00001F                     	ds	1
  4168  000020                     _MSD_State:
  4169                           	opt stack 0
  4170  000020                     	ds	1
  4171  000021                     _USBStatusStageEnabledFlag2:
  4172                           	opt stack 0
  4173  000021                     	ds	1
  4174  000022                     _USBStatusStageEnabledFlag1:
  4175                           	opt stack 0
  4176  000022                     	ds	1
  4177  000023                     _USBDeferStatusStagePacket:
  4178                           	opt stack 0
  4179  000023                     	ds	1
  4180  000024                     _USBStatusStageTimeoutCounter:
  4181                           	opt stack 0
  4182  000024                     	ds	1
  4183  000025                     _BothEP0OutUOWNsSet:
  4184                           	opt stack 0
  4185  000025                     	ds	1
  4186  000026                     _endpoint_number:
  4187                           	opt stack 0
  4188  000026                     	ds	1
  4189  000027                     _USBBusIsSuspended:
  4190                           	opt stack 0
  4191  000027                     	ds	1
  4192  000028                     _RemoteWakeup:
  4193                           	opt stack 0
  4194  000028                     	ds	1
  4195  000029                     _controlTransferState:
  4196                           	opt stack 0
  4197  000029                     	ds	1
  4198  00002A                     _shortPacketStatus:
  4199                           	opt stack 0
  4200  00002A                     	ds	1
  4201  00002B                     _USBDeviceState:
  4202                           	opt stack 0
  4203  00002B                     	ds	1
  4204  00002C                     _USTATcopy:
  4205                           	opt stack 0
  4206  00002C                     	ds	1
  4207  00002D                     _USBActiveConfiguration:
  4208                           	opt stack 0
  4209  00002D                     	ds	1
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           postdec1	equ	0xFE5
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           
  4220                           	psect	bssBANK0
  4221  0000CC                     __pbssBANK0:
  4222                           	opt stack 0
  4223  0000CC                     _os:
  4224                           	opt stack 0
  4225  0000CC                     	ds	39
  4226  0000F3                     _motor_current_speed:
  4227                           	opt stack 0
  4228  0000F3                     	ds	2
  4229  0000F5                     _motor_direction:
  4230                           	opt stack 0
  4231  0000F5                     	ds	1
  4232  0000F6                     _motor_cue_write_index:
  4233                           	opt stack 0
  4234  0000F6                     	ds	1
  4235  0000F7                     _motor_cue_read_index:
  4236                           	opt stack 0
  4237  0000F7                     	ds	1
  4238  0000F8                     _SoftDetach:
  4239                           	opt stack 0
  4240  0000F8                     	ds	1
  4241  0000F9                     _MSDRetryAttempt:
  4242                           	opt stack 0
  4243  0000F9                     	ds	1
  4244  0000FA                     _MSDReadState:
  4245                           	opt stack 0
  4246  0000FA                     	ds	1
  4247  0000FB                     _USBTicksSinceSuspendEnd:
  4248                           	opt stack 0
  4249  0000FB                     	ds	1
  4250  0000FC                     _USBDeferOUTDataStagePackets:
  4251                           	opt stack 0
  4252  0000FC                     	ds	1
  4253  0000FD                     _USBDeferINDataStagePackets:
  4254                           	opt stack 0
  4255  0000FD                     	ds	1
  4256  0000FE                     _active_protocol:
  4257                           	opt stack 0
  4258  0000FE                     	ds	1
  4259  0000FF                     _idle_rate:
  4260                           	opt stack 0
  4261  0000FF                     	ds	1
  4262                           tblptru	equ	0xFF8
  4263                           tblptrh	equ	0xFF7
  4264                           tblptrl	equ	0xFF6
  4265                           tablat	equ	0xFF5
  4266                           postinc0	equ	0xFEE
  4267                           wreg	equ	0xFE8
  4268                           postdec1	equ	0xFE5
  4269                           fsr1h	equ	0xFE2
  4270                           fsr1l	equ	0xFE1
  4271                           
  4272                           	psect	bssBANK1
  4273  000100                     __pbssBANK1:
  4274                           	opt stack 0
  4275  000100                     _gblCBW:
  4276                           	opt stack 0
  4277  000100                     	ds	31
  4278  00011F                     _config:
  4279                           	opt stack 0
  4280  00011F                     	ds	20
  4281  000133                     _gblSenseData:
  4282                           	opt stack 0
  4283  000133                     	ds	18
  4284  000145                     _outPipes:
  4285                           	opt stack 0
  4286  000145                     	ds	9
  4287  00014E                     _pBDTEntryOut:
  4288                           	opt stack 0
  4289  00014E                     	ds	6
  4290  000154                     _motor_next_speed_check:
  4291                           	opt stack 0
  4292  000154                     	ds	4
  4293  000158                     _motor_final_stepcount:
  4294                           	opt stack 0
  4295  000158                     	ds	4
  4296  00015C                     _gblBLKLen:
  4297                           	opt stack 0
  4298  00015C                     	ds	4
  4299  000160                     _gblNumBLKS:
  4300                           	opt stack 0
  4301  000160                     	ds	4
  4302  000164                     _LBA:
  4303                           	opt stack 0
  4304  000164                     	ds	4
  4305  000168                     _USB1msTickCount:
  4306                           	opt stack 0
  4307  000168                     	ds	4
  4308  00016C                     _config_external:
  4309                           	opt stack 0
  4310  00016C                     	ds	3
  4311  00016F                     _config_internal:
  4312                           	opt stack 0
  4313  00016F                     	ds	3
  4314  000172                     _ep_data_out:
  4315                           	opt stack 0
  4316  000172                     	ds	3
  4317  000175                     _ep_data_in:
  4318                           	opt stack 0
  4319  000175                     	ds	3
  4320  000178                     _motor_maximum_speed:
  4321                           	opt stack 0
  4322  000178                     	ds	2
  4323  00017A                     _USBInHandle:
  4324                           	opt stack 0
  4325  00017A                     	ds	2
  4326  00017C                     _USBOutHandle:
  4327                           	opt stack 0
  4328  00017C                     	ds	2
  4329  00017E                     _gblMediaPresent:
  4330                           	opt stack 0
  4331  00017E                     	ds	2
  4332  000180                     _MSBBufferIndex:
  4333                           	opt stack 0
  4334  000180                     	ds	2
  4335  000182                     _ptrNextData:
  4336                           	opt stack 0
  4337  000182                     	ds	2
  4338  000184                     _pDst:
  4339                           	opt stack 0
  4340  000184                     	ds	2
  4341  000186                     _active_configuration:
  4342                           	opt stack 0
  4343  000186                     	ds	1
  4344  000187                     _MSDCBWValid:
  4345                           	opt stack 0
  4346  000187                     	ds	1
  4347  000188                     _gblCBWLength:
  4348                           	opt stack 0
  4349  000188                     	ds	1
  4350  000189                     _mediaInformation:
  4351                           	opt stack 0
  4352  000189                     	ds	5
  4353  00018E                     _USBAlternateInterface:
  4354                           	opt stack 0
  4355  00018E                     	ds	2
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           postinc0	equ	0xFEE
  4361                           wreg	equ	0xFE8
  4362                           postdec1	equ	0xFE5
  4363                           fsr1h	equ	0xFE2
  4364                           fsr1l	equ	0xFE1
  4365                           
  4366                           	psect	dataBANK1
  4367  000190                     __pdataBANK1:
  4368                           	opt stack 0
  4369  000190                     _LUN:
  4370                           	opt stack 0
  4371  000190                     	ds	29
  4372  0001AD                     _display_content:
  4373                           	opt stack 0
  4374  0001AD                     	ds	80
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           postinc0	equ	0xFEE
  4380                           wreg	equ	0xFE8
  4381                           postdec1	equ	0xFE5
  4382                           fsr1h	equ	0xFE2
  4383                           fsr1l	equ	0xFE1
  4384                           
  4385                           	psect	bssBANK2
  4386  000200                     __pbssBANK2:
  4387                           	opt stack 0
  4388  000200                     _motor_command_cue:
  4389                           	opt stack 0
  4390  000200                     	ds	56
  4391  000238                     _ToSendDataBuffer:
  4392                           	opt stack 0
  4393  000238                     	ds	64
  4394  000278                     _ReceivedDataBuffer:
  4395                           	opt stack 0
  4396  000278                     	ds	64
  4397                           tblptru	equ	0xFF8
  4398                           tblptrh	equ	0xFF7
  4399                           tblptrl	equ	0xFF6
  4400                           tablat	equ	0xFF5
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           postdec1	equ	0xFE5
  4404                           fsr1h	equ	0xFE2
  4405                           fsr1l	equ	0xFE1
  4406                           
  4407                           	psect	dataBANK2
  4408  0002B8                     __pdataBANK2:
  4409                           	opt stack 0
  4410  0002B8                     i2c_display_init@F6892:
  4411                           	opt stack 0
  4412  0002B8                     	ds	9
  4413  0002C1                     __i2c_display_send_init_sequence@F6889:
  4414                           	opt stack 0
  4415  0002C1                     	ds	9
  4416  0002CA                     	ds	8
  4417                           tblptru	equ	0xFF8
  4418                           tblptrh	equ	0xFF7
  4419                           tblptrl	equ	0xFF6
  4420                           tablat	equ	0xFF5
  4421                           postinc0	equ	0xFEE
  4422                           wreg	equ	0xFE8
  4423                           postdec1	equ	0xFE5
  4424                           fsr1h	equ	0xFE2
  4425                           fsr1l	equ	0xFE1
  4426                           
  4427                           	psect	bssBIGRAMll
  4428  000800                     __pbssBIGRAMll:
  4429                           	opt stack 0
  4430  000800                     _buffer:
  4431                           	opt stack 0
  4432  000800                     	ds	512
  4433                           tblptru	equ	0xFF8
  4434                           tblptrh	equ	0xFF7
  4435                           tblptrl	equ	0xFF6
  4436                           tablat	equ	0xFF5
  4437                           postinc0	equ	0xFEE
  4438                           wreg	equ	0xFE8
  4439                           postdec1	equ	0xFE5
  4440                           fsr1h	equ	0xFE2
  4441                           fsr1l	equ	0xFE1
  4442                           
  4443                           	psect	cstackBANK2
  4444  0002D2                     __pcstackBANK2:
  4445                           	opt stack 0
  4446  0002D2                     main@tmp:
  4447                           	opt stack 0
  4448                           
  4449                           ; 4 bytes @ 0x0
  4450  0002D2                     	ds	4
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           postinc0	equ	0xFEE
  4456                           wreg	equ	0xFE8
  4457                           postdec1	equ	0xFE5
  4458                           fsr1h	equ	0xFE2
  4459                           fsr1l	equ	0xFE1
  4460                           
  4461                           	psect	cstackBANK0
  4462  000060                     __pcstackBANK0:
  4463                           	opt stack 0
  4464  000060                     ??__i2c_wait_idle:
  4465  000060                     ??__display_clear:
  4466  000060                     ??_motor_stop:
  4467  000060                     ?_strlen:
  4468                           	opt stack 0
  4469  000060                     ?_encoder_next_setup_stepsize:
  4470                           	opt stack 0
  4471  000060                     ?_encoder_next_arc_step_size:
  4472                           	opt stack 0
  4473  000060                     ?___lwdiv:
  4474                           	opt stack 0
  4475  000060                     ?___lwmod:
  4476                           	opt stack 0
  4477  000060                     ?___lmul:
  4478                           	opt stack 0
  4479  000060                     ?___aldiv:
  4480                           	opt stack 0
  4481  000060                     ?___almod:
  4482                           	opt stack 0
  4483  000060                     ?___fltol:
  4484                           	opt stack 0
  4485  000060                     ?___xxtofl:
  4486                           	opt stack 0
  4487  000060                     SYSTEM_Initialize@state:
  4488                           	opt stack 0
  4489  000060                     __i2c_send@dat:
  4490                           	opt stack 0
  4491  000060                     encoder_next_divide_step_size@old_stepsize:
  4492                           	opt stack 0
  4493  000060                     motor_change_speed@new_speed:
  4494                           	opt stack 0
  4495  000060                     encoder_next_setup_stepsize@old_stepsize:
  4496                           	opt stack 0
  4497  000060                     encoder_next_arc_step_size@old_stepsize:
  4498                           	opt stack 0
  4499  000060                     ___lwdiv@dividend:
  4500                           	opt stack 0
  4501  000060                     ___lwmod@dividend:
  4502                           	opt stack 0
  4503  000060                     memcpy@d1:
  4504                           	opt stack 0
  4505  000060                     strlen@s:
  4506                           	opt stack 0
  4507  000060                     __motor_run@distance_in_steps:
  4508                           	opt stack 0
  4509  000060                     ___lmul@multiplier:
  4510                           	opt stack 0
  4511  000060                     ___aldiv@dividend:
  4512                           	opt stack 0
  4513  000060                     ___almod@dividend:
  4514                           	opt stack 0
  4515  000060                     ___fltol@f1:
  4516                           	opt stack 0
  4517  000060                     ___xxtofl@val:
  4518                           	opt stack 0
  4519                           
  4520                           ; 4 bytes @ 0x0
  4521  000060                     	ds	1
  4522  000061                     SYSTEM_Initialize@pll_startup_counter:
  4523                           	opt stack 0
  4524                           
  4525                           ; 2 bytes @ 0x1
  4526  000061                     	ds	1
  4527  000062                     ??_strlen:
  4528  000062                     ??_encoder_next_setup_stepsize:
  4529  000062                     ??_encoder_next_arc_step_size:
  4530  000062                     __display_clear@row:
  4531                           	opt stack 0
  4532  000062                     ___lwdiv@divisor:
  4533                           	opt stack 0
  4534  000062                     ___lwmod@divisor:
  4535                           	opt stack 0
  4536  000062                     memcpy@s1:
  4537                           	opt stack 0
  4538                           
  4539                           ; 2 bytes @ 0x2
  4540  000062                     	ds	1
  4541  000063                     __display_clear@col:
  4542                           	opt stack 0
  4543  000063                     SYSTEM_Initialize@pll_startup_counter_3052:
  4544                           	opt stack 0
  4545                           
  4546                           ; 2 bytes @ 0x3
  4547  000063                     	ds	1
  4548  000064                     ??___fltol:
  4549  000064                     ??___xxtofl:
  4550  000064                     ___lwdiv@counter:
  4551                           	opt stack 0
  4552  000064                     ___lwmod@counter:
  4553                           	opt stack 0
  4554  000064                     __motor_run@speed:
  4555                           	opt stack 0
  4556  000064                     memcpy@n:
  4557                           	opt stack 0
  4558  000064                     strlen@cp:
  4559                           	opt stack 0
  4560  000064                     ___lmul@multiplicand:
  4561                           	opt stack 0
  4562  000064                     ___aldiv@divisor:
  4563                           	opt stack 0
  4564  000064                     ___almod@divisor:
  4565                           	opt stack 0
  4566                           
  4567                           ; 4 bytes @ 0x4
  4568  000064                     	ds	1
  4569  000065                     __i2c_write@data:
  4570                           	opt stack 0
  4571  000065                     i2c_display_write_fixed@data:
  4572                           	opt stack 0
  4573  000065                     ___lwdiv@quotient:
  4574                           	opt stack 0
  4575                           
  4576                           ; 2 bytes @ 0x5
  4577  000065                     	ds	1
  4578  000066                     ??__motor_run:
  4579  000066                     memcpy@tmp:
  4580                           	opt stack 0
  4581                           
  4582                           ; 1 bytes @ 0x6
  4583  000066                     	ds	1
  4584  000067                     __i2c_write@length:
  4585                           	opt stack 0
  4586  000067                     i2c_display_write_fixed@length:
  4587                           	opt stack 0
  4588  000067                     utoa@buf:
  4589                           	opt stack 0
  4590  000067                     memcpy@d:
  4591                           	opt stack 0
  4592                           
  4593                           ; 2 bytes @ 0x7
  4594  000067                     	ds	1
  4595  000068                     __i2c_write@slave_address:
  4596                           	opt stack 0
  4597  000068                     i2c_display_write_fixed@pos:
  4598                           	opt stack 0
  4599  000068                     ___aldiv@counter:
  4600                           	opt stack 0
  4601  000068                     ___almod@counter:
  4602                           	opt stack 0
  4603  000068                     ___fltol@sign1:
  4604                           	opt stack 0
  4605  000068                     ___xxtofl@sign:
  4606                           	opt stack 0
  4607  000068                     ___lmul@product:
  4608                           	opt stack 0
  4609                           
  4610                           ; 4 bytes @ 0x8
  4611  000068                     	ds	1
  4612  000069                     __i2c_write@cntr:
  4613                           	opt stack 0
  4614  000069                     ___aldiv@sign:
  4615                           	opt stack 0
  4616  000069                     ___almod@sign:
  4617                           	opt stack 0
  4618  000069                     ___fltol@exp1:
  4619                           	opt stack 0
  4620  000069                     ___xxtofl@exp:
  4621                           	opt stack 0
  4622  000069                     utoa@val:
  4623                           	opt stack 0
  4624  000069                     memcpy@s:
  4625                           	opt stack 0
  4626                           
  4627                           ; 2 bytes @ 0x9
  4628  000069                     	ds	1
  4629  00006A                     ??_i2c_display_init:
  4630  00006A                     __ic2_display_set_ddram_address@address:
  4631                           	opt stack 0
  4632  00006A                     __motor_run@direction:
  4633                           	opt stack 0
  4634  00006A                     __ic2_display_set_cgram_address@data_array:
  4635                           	opt stack 0
  4636  00006A                     ___aldiv@quotient:
  4637                           	opt stack 0
  4638  00006A                     ___xxtofl@arg:
  4639                           	opt stack 0
  4640                           
  4641                           ; 4 bytes @ 0xA
  4642  00006A                     	ds	1
  4643  00006B                     __ic2_display_set_ddram_address@data_array:
  4644                           	opt stack 0
  4645  00006B                     utoa@base:
  4646                           	opt stack 0
  4647  00006B                     i2c_display_init@init_sequence:
  4648                           	opt stack 0
  4649                           
  4650                           ; 9 bytes @ 0xB
  4651  00006B                     	ds	2
  4652  00006D                     __ic2_display_set_cgram_address@address:
  4653                           	opt stack 0
  4654  00006D                     i2c_display_cursor@position:
  4655                           	opt stack 0
  4656  00006D                     utoa@v:
  4657                           	opt stack 0
  4658                           
  4659                           ; 2 bytes @ 0xD
  4660  00006D                     	ds	1
  4661  00006E                     ?___fldiv:
  4662                           	opt stack 0
  4663  00006E                     ?___flmul:
  4664                           	opt stack 0
  4665  00006E                     i2c_display_cursor@line:
  4666                           	opt stack 0
  4667  00006E                     i2c_display_program_custom_character@bit_pattern:
  4668                           	opt stack 0
  4669  00006E                     ___fldiv@b:
  4670                           	opt stack 0
  4671  00006E                     ___flmul@b:
  4672                           	opt stack 0
  4673                           
  4674                           ; 4 bytes @ 0xE
  4675  00006E                     	ds	1
  4676  00006F                     i2c_display_cursor@address:
  4677                           	opt stack 0
  4678  00006F                     utoa@c:
  4679                           	opt stack 0
  4680                           
  4681                           ; 1 bytes @ 0xF
  4682  00006F                     	ds	1
  4683  000070                     ??_i2c_display_program_custom_character:
  4684  000070                     display_update@line:
  4685                           	opt stack 0
  4686  000070                     itoa@buf:
  4687                           	opt stack 0
  4688                           
  4689                           ; 2 bytes @ 0x10
  4690  000070                     	ds	2
  4691  000072                     itoa@val:
  4692                           	opt stack 0
  4693  000072                     ___fldiv@a:
  4694                           	opt stack 0
  4695  000072                     ___flmul@a:
  4696                           	opt stack 0
  4697                           
  4698                           ; 4 bytes @ 0x12
  4699  000072                     	ds	2
  4700  000074                     itoa@base:
  4701                           	opt stack 0
  4702  000074                     i2c_display_program_custom_character@data_array:
  4703                           	opt stack 0
  4704                           
  4705                           ; 11 bytes @ 0x14
  4706  000074                     	ds	2
  4707  000076                     ??___fldiv:
  4708  000076                     ??___flmul:
  4709  000076                     itoa@cp:
  4710                           	opt stack 0
  4711                           
  4712                           ; 2 bytes @ 0x16
  4713  000076                     	ds	2
  4714  000078                     __display_padded_itoa@value:
  4715                           	opt stack 0
  4716                           
  4717                           ; 2 bytes @ 0x18
  4718  000078                     	ds	2
  4719  00007A                     __display_padded_itoa@length:
  4720                           	opt stack 0
  4721  00007A                     ___flmul@sign:
  4722                           	opt stack 0
  4723  00007A                     ___fldiv@rem:
  4724                           	opt stack 0
  4725                           
  4726                           ; 4 bytes @ 0x1A
  4727  00007A                     	ds	1
  4728  00007B                     ___flmul@aexp:
  4729                           	opt stack 0
  4730  00007B                     __display_padded_itoa@text:
  4731                           	opt stack 0
  4732                           
  4733                           ; 2 bytes @ 0x1B
  4734  00007B                     	ds	1
  4735  00007C                     ___flmul@grs:
  4736                           	opt stack 0
  4737                           
  4738                           ; 4 bytes @ 0x1C
  4739  00007C                     	ds	1
  4740  00007D                     ??__display_padded_itoa:
  4741                           
  4742                           ; 1 bytes @ 0x1D
  4743  00007D                     	ds	1
  4744  00007E                     ___fldiv@sign:
  4745                           	opt stack 0
  4746                           
  4747                           ; 1 bytes @ 0x1E
  4748  00007E                     	ds	1
  4749  00007F                     i2c_display_program_custom_character@address:
  4750                           	opt stack 0
  4751  00007F                     ___fldiv@new_exp:
  4752                           	opt stack 0
  4753                           
  4754                           ; 2 bytes @ 0x1F
  4755  00007F                     	ds	1
  4756  000080                     i2c_display_program_custom_character@cntr:
  4757                           	opt stack 0
  4758  000080                     ___flmul@bexp:
  4759                           	opt stack 0
  4760                           
  4761                           ; 1 bytes @ 0x20
  4762  000080                     	ds	1
  4763  000081                     ___fldiv@grs:
  4764                           	opt stack 0
  4765  000081                     ___flmul@prod:
  4766                           	opt stack 0
  4767                           
  4768                           ; 4 bytes @ 0x21
  4769  000081                     	ds	1
  4770  000082                     __display_padded_itoa@tmp:
  4771                           	opt stack 0
  4772                           
  4773                           ; 10 bytes @ 0x22
  4774  000082                     	ds	3
  4775  000085                     ___fldiv@bexp:
  4776                           	opt stack 0
  4777  000085                     ___flmul@temp:
  4778                           	opt stack 0
  4779                           
  4780                           ; 2 bytes @ 0x25
  4781  000085                     	ds	1
  4782  000086                     ___fldiv@aexp:
  4783                           	opt stack 0
  4784                           
  4785                           ; 1 bytes @ 0x26
  4786  000086                     	ds	1
  4787  000087                     ?__motor_get_speed_in_degrees:
  4788                           	opt stack 0
  4789  000087                     ?_motor_steps_from_degrees:
  4790                           	opt stack 0
  4791  000087                     motor_steps_from_degrees@degrees:
  4792                           	opt stack 0
  4793  000087                     __motor_get_speed_in_degrees@speed_index:
  4794                           	opt stack 0
  4795                           
  4796                           ; 2 bytes @ 0x27
  4797  000087                     	ds	2
  4798  000089                     ??__motor_get_speed_in_degrees:
  4799                           
  4800                           ; 1 bytes @ 0x29
  4801  000089                     	ds	2
  4802  00008B                     motor_steps_from_degrees@steps:
  4803                           	opt stack 0
  4804  00008B                     __motor_get_speed_in_degrees@speed:
  4805                           	opt stack 0
  4806                           
  4807                           ; 4 bytes @ 0x2B
  4808  00008B                     	ds	1
  4809  00008C                     __display_padded_itoa@len:
  4810                           	opt stack 0
  4811                           
  4812                           ; 1 bytes @ 0x2C
  4813  00008C                     	ds	1
  4814  00008D                     __display_padded_itoa@pos:
  4815                           	opt stack 0
  4816                           
  4817                           ; 1 bytes @ 0x2D
  4818  00008D                     	ds	1
  4819  00008E                     __display_padded_itoa@padding:
  4820                           	opt stack 0
  4821                           
  4822                           ; 1 bytes @ 0x2E
  4823  00008E                     	ds	1
  4824  00008F                     ?_motor_nonzero_steps_from_degrees:
  4825                           	opt stack 0
  4826  00008F                     __display_signed_itoa@value:
  4827                           	opt stack 0
  4828  00008F                     motor_nonzero_steps_from_degrees@degrees:
  4829                           	opt stack 0
  4830  00008F                     __motor_get_speed_in_degrees@lookup:
  4831                           	opt stack 0
  4832                           
  4833                           ; 4 bytes @ 0x2F
  4834  00008F                     	ds	2
  4835  000091                     __display_signed_itoa@text:
  4836                           	opt stack 0
  4837                           
  4838                           ; 2 bytes @ 0x31
  4839  000091                     	ds	2
  4840  000093                     ?_motor_speed_from_index:
  4841                           	opt stack 0
  4842  000093                     motor_speed_from_index@speed_index:
  4843                           	opt stack 0
  4844  000093                     motor_nonzero_steps_from_degrees@steps:
  4845                           	opt stack 0
  4846                           
  4847                           ; 4 bytes @ 0x33
  4848  000093                     	ds	2
  4849  000095                     __display_itoa@value:
  4850                           	opt stack 0
  4851                           
  4852                           ; 2 bytes @ 0x35
  4853  000095                     	ds	2
  4854  000097                     __display_itoa@decimals:
  4855                           	opt stack 0
  4856  000097                     motor_schedule_command@distance_in_steps:
  4857                           	opt stack 0
  4858                           
  4859                           ; 4 bytes @ 0x37
  4860  000097                     	ds	1
  4861  000098                     __display_itoa@text:
  4862                           	opt stack 0
  4863                           
  4864                           ; 2 bytes @ 0x38
  4865  000098                     	ds	2
  4866  00009A                     ??__display_itoa:
  4867                           
  4868                           ; 1 bytes @ 0x3A
  4869  00009A                     	ds	1
  4870  00009B                     motor_schedule_command@speed:
  4871                           	opt stack 0
  4872                           
  4873                           ; 2 bytes @ 0x3B
  4874  00009B                     	ds	2
  4875  00009D                     motor_schedule_command@direction:
  4876                           	opt stack 0
  4877                           
  4878                           ; 1 bytes @ 0x3D
  4879  00009D                     	ds	1
  4880  00009E                     ??_encoder_statemachine:
  4881                           
  4882                           ; 1 bytes @ 0x3E
  4883  00009E                     	ds	2
  4884  0000A0                     __display_itoa@tmp:
  4885                           	opt stack 0
  4886                           
  4887                           ; 10 bytes @ 0x40
  4888  0000A0                     	ds	6
  4889  0000A6                     encoder_statemachine@target_position_in_steps:
  4890                           	opt stack 0
  4891                           
  4892                           ; 4 bytes @ 0x46
  4893  0000A6                     	ds	4
  4894  0000AA                     __display_itoa@len:
  4895                           	opt stack 0
  4896  0000AA                     encoder_statemachine@target_divide_position:
  4897                           	opt stack 0
  4898                           
  4899                           ; 2 bytes @ 0x4A
  4900  0000AA                     	ds	1
  4901  0000AB                     __display_itoa@missing:
  4902                           	opt stack 0
  4903                           
  4904                           ; 1 bytes @ 0x4B
  4905  0000AB                     	ds	1
  4906  0000AC                     __display_itoa@pos:
  4907                           	opt stack 0
  4908  0000AC                     encoder_statemachine@distance_to_target_in_steps:
  4909                           	opt stack 0
  4910                           
  4911                           ; 4 bytes @ 0x4C
  4912  0000AC                     	ds	1
  4913  0000AD                     __display_itoa_long@value:
  4914                           	opt stack 0
  4915                           
  4916                           ; 4 bytes @ 0x4D
  4917  0000AD                     	ds	3
  4918  0000B0                     encoder_statemachine@tmp:
  4919                           	opt stack 0
  4920                           
  4921                           ; 4 bytes @ 0x50
  4922  0000B0                     	ds	1
  4923  0000B1                     __display_itoa_long@decimals:
  4924                           	opt stack 0
  4925                           
  4926                           ; 1 bytes @ 0x51
  4927  0000B1                     	ds	1
  4928  0000B2                     __display_itoa_long@text:
  4929                           	opt stack 0
  4930                           
  4931                           ; 2 bytes @ 0x52
  4932  0000B2                     	ds	2
  4933  0000B4                     ??__display_itoa_long:
  4934                           
  4935                           ; 1 bytes @ 0x54
  4936  0000B4                     	ds	4
  4937  0000B8                     __display_itoa_long@length:
  4938                           	opt stack 0
  4939                           
  4940                           ; 1 bytes @ 0x58
  4941  0000B8                     	ds	1
  4942  0000B9                     __display_itoa_long@short_value:
  4943                           	opt stack 0
  4944                           
  4945                           ; 2 bytes @ 0x59
  4946  0000B9                     	ds	2
  4947  0000BB                     __display_itoa_long@last_digit:
  4948                           	opt stack 0
  4949                           
  4950                           ; 1 bytes @ 0x5B
  4951  0000BB                     	ds	1
  4952  0000BC                     ??_display_prepare:
  4953                           
  4954                           ; 1 bytes @ 0x5C
  4955  0000BC                     	ds	2
  4956  0000BE                     display_prepare@temp:
  4957                           	opt stack 0
  4958                           
  4959                           ; 10 bytes @ 0x5E
  4960  0000BE                     	ds	10
  4961  0000C8                     display_prepare@space:
  4962                           	opt stack 0
  4963                           
  4964                           ; 1 bytes @ 0x68
  4965  0000C8                     	ds	1
  4966  0000C9                     display_prepare@cntr:
  4967                           	opt stack 0
  4968                           
  4969                           ; 1 bytes @ 0x69
  4970  0000C9                     	ds	1
  4971  0000CA                     ??_main:
  4972                           
  4973                           ; 1 bytes @ 0x6A
  4974  0000CA                     	ds	2
  4975                           tblptru	equ	0xFF8
  4976                           tblptrh	equ	0xFF7
  4977                           tblptrl	equ	0xFF6
  4978                           tablat	equ	0xFF5
  4979                           postinc0	equ	0xFEE
  4980                           wreg	equ	0xFE8
  4981                           postdec1	equ	0xFE5
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           
  4985                           	psect	cstackCOMRAM
  4986  00002E                     __pcstackCOMRAM:
  4987                           	opt stack 0
  4988  00002E                     ??_USBStdGetDscHandler:
  4989  00002E                     ??_USBStdGetStatusHandler:
  4990  00002E                     ?_USBTransferOnePacket:
  4991                           	opt stack 0
  4992  00002E                     ?_ExternalFlash_MediaInitialize:
  4993                           	opt stack 0
  4994  00002E                     USBTransferOnePacket@dir:
  4995                           	opt stack 0
  4996  00002E                     USBStallEndpoint@dir:
  4997                           	opt stack 0
  4998  00002E                     USBConfigureEndpoint@direction:
  4999                           	opt stack 0
  5000  00002E                     USBCtrlTrfTxService@byteToSend:
  5001                           	opt stack 0
  5002  00002E                     USBCtrlTrfRxService@i:
  5003                           	opt stack 0
  5004  00002E                     ExternalFlash_MediaInitialize@config:
  5005                           	opt stack 0
  5006  00002E                     ExternalFlash_MediaDetect@config:
  5007                           	opt stack 0
  5008  00002E                     memset@p1:
  5009                           	opt stack 0
  5010  00002E                     i2SYSTEM_Initialize@pll_startup_counter:
  5011                           	opt stack 0
  5012  00002E                     i2memcpy@d1:
  5013                           	opt stack 0
  5014                           
  5015                           ; 2 bytes @ 0x0
  5016  00002E                     	ds	1
  5017  00002F                     ??_USBConfigureEndpoint:
  5018  00002F                     ??_USBStallEndpoint:
  5019  00002F                     USBCtrlTrfRxService@byteToRead:
  5020                           	opt stack 0
  5021  00002F                     USBCtrlTrfInHandler@lastDTS:
  5022                           	opt stack 0
  5023  00002F                     USBTransferOnePacket@data:
  5024                           	opt stack 0
  5025  00002F                     USBStdGetStatusHandler@p:
  5026                           	opt stack 0
  5027                           
  5028                           ; 2 bytes @ 0x1
  5029  00002F                     	ds	1
  5030  000030                     memset@c:
  5031                           	opt stack 0
  5032  000030                     i2SYSTEM_Initialize@pll_startup_counter_3052:
  5033                           	opt stack 0
  5034  000030                     i2memcpy@s1:
  5035                           	opt stack 0
  5036                           
  5037                           ; 2 bytes @ 0x2
  5038  000030                     	ds	1
  5039  000031                     USBTransferOnePacket@len:
  5040                           	opt stack 0
  5041                           
  5042                           ; 1 bytes @ 0x3
  5043  000031                     	ds	1
  5044  000032                     ??_USBTransferOnePacket:
  5045  000032                     i2SYSTEM_Initialize@state:
  5046                           	opt stack 0
  5047  000032                     memset@n:
  5048                           	opt stack 0
  5049  000032                     i2memcpy@n:
  5050                           	opt stack 0
  5051                           
  5052                           ; 2 bytes @ 0x4
  5053  000032                     	ds	1
  5054  000033                     USBStallEndpoint@ep:
  5055                           	opt stack 0
  5056  000033                     USBConfigureEndpoint@EPNum:
  5057                           	opt stack 0
  5058                           
  5059                           ; 1 bytes @ 0x5
  5060  000033                     	ds	1
  5061  000034                     USBStallEndpoint@p:
  5062                           	opt stack 0
  5063  000034                     USBConfigureEndpoint@handle:
  5064                           	opt stack 0
  5065  000034                     memset@p:
  5066                           	opt stack 0
  5067  000034                     i2memcpy@d:
  5068                           	opt stack 0
  5069                           
  5070                           ; 2 bytes @ 0x6
  5071  000034                     	ds	2
  5072  000036                     USBDeviceInit@i:
  5073                           	opt stack 0
  5074  000036                     USBEnableEndpoint@options:
  5075                           	opt stack 0
  5076  000036                     USBTransferOnePacket@ep:
  5077                           	opt stack 0
  5078  000036                     i2memcpy@s:
  5079                           	opt stack 0
  5080                           
  5081                           ; 2 bytes @ 0x8
  5082  000036                     	ds	1
  5083  000037                     USBEnableEndpoint@p:
  5084                           	opt stack 0
  5085  000037                     USBTransferOnePacket@handle:
  5086                           	opt stack 0
  5087                           
  5088                           ; 2 bytes @ 0x9
  5089  000037                     	ds	1
  5090  000038                     i2memcpy@tmp:
  5091                           	opt stack 0
  5092                           
  5093                           ; 1 bytes @ 0xA
  5094  000038                     	ds	1
  5095  000039                     ??_USBMSDInit:
  5096  000039                     USBEnableEndpoint@ep:
  5097                           	opt stack 0
  5098  000039                     _USBCheckMSDRequest$2534:
  5099                           	opt stack 0
  5100  000039                     MSDTransferTerminated@handle:
  5101                           	opt stack 0
  5102                           
  5103                           ; 2 bytes @ 0xB
  5104  000039                     	ds	1
  5105  00003A                     
  5106                           ; 1 bytes @ 0xC
  5107  00003A                     	ds	1
  5108  00003B                     _USBCheckMSDRequest$2535:
  5109                           	opt stack 0
  5110  00003B                     _MSDTransferTerminated$2623:
  5111                           	opt stack 0
  5112                           
  5113                           ; 2 bytes @ 0xD
  5114  00003B                     	ds	1
  5115  00003C                     
  5116                           ; 1 bytes @ 0xE
  5117  00003C                     	ds	1
  5118  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  5119                           	opt stack 0
  5120                           
  5121                           ; 2 bytes @ 0xF
  5122  00003D                     	ds	2
  5123  00003F                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  5124                           	opt stack 0
  5125                           
  5126                           ; 2 bytes @ 0x11
  5127  00003F                     	ds	2
  5128  000041                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  5129                           	opt stack 0
  5130                           
  5131                           ; 2 bytes @ 0x13
  5132  000041                     	ds	2
  5133  000043                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  5134                           
  5135                           ; 1 bytes @ 0x15
  5136  000043                     	ds	2
  5137  000045                     ??_USBStdFeatureReqHandler:
  5138  000045                     USBStdSetCfgHandler@i:
  5139                           	opt stack 0
  5140                           
  5141                           ; 1 bytes @ 0x17
  5142  000045                     	ds	1
  5143  000046                     USBStdFeatureReqHandler@pUEP:
  5144                           	opt stack 0
  5145                           
  5146                           ; 2 bytes @ 0x18
  5147  000046                     	ds	2
  5148  000048                     USBStdFeatureReqHandler@current_ep_data:
  5149                           	opt stack 0
  5150                           
  5151                           ; 1 bytes @ 0x1A
  5152  000048                     	ds	1
  5153  000049                     USBStdFeatureReqHandler@p:
  5154                           	opt stack 0
  5155                           
  5156                           ; 2 bytes @ 0x1B
  5157  000049                     	ds	2
  5158  00004B                     ??_USBCtrlEPService:
  5159  00004B                     
  5160                           ; 1 bytes @ 0x1D
  5161  00004B                     	ds	1
  5162  00004C                     USBDeviceTasks@i:
  5163                           	opt stack 0
  5164                           
  5165                           ; 1 bytes @ 0x1E
  5166  00004C                     	ds	1
  5167  00004D                     ??_SYS_InterruptHigh:
  5168                           
  5169                           ; 1 bytes @ 0x1F
  5170  00004D                     	ds	14
  5171                           tblptru	equ	0xFF8
  5172                           tblptrh	equ	0xFF7
  5173                           tblptrl	equ	0xFF6
  5174                           tablat	equ	0xFF5
  5175                           postinc0	equ	0xFEE
  5176                           wreg	equ	0xFE8
  5177                           postdec1	equ	0xFE5
  5178                           fsr1h	equ	0xFE2
  5179                           fsr1l	equ	0xFE1
  5180                           
  5181 ;;
  5182 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5183 ;;
  5184 ;; *************** function _main *****************
  5185 ;; Defined at:
  5186 ;;		line 52 in file "main.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  tmp             4    0[BANK2 ] float 
  5191 ;;  startup_time    1    0        unsigned char 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  1    wreg      void 
  5194 ;; Registers used:
  5195 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5202 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5204 ;;      Totals:         0       2       0       4       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;Total ram usage:        6 bytes
  5206 ;; Hardware stack levels required when called:   16
  5207 ;; This function calls:
  5208 ;;		_SYSTEM_Initialize
  5209 ;;		___fldiv
  5210 ;;		___flmul
  5211 ;;		___fltol
  5212 ;;		___xxtofl
  5213 ;;		_display_prepare
  5214 ;;		_display_update
  5215 ;;		_encoder_statemachine
  5216 ;;		_motor_process_cue
  5217 ;;		_system_init
  5218 ;; This function is called by:
  5219 ;;		Startup code after reset
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text0
  5224  00D04E                     __ptext0:
  5225                           	opt stack 0
  5226  00D04E                     _main:
  5227                           	opt stack 15
  5228                           
  5229                           ;main.c: 54: uint8_t startup_timer;;main.c: 55: float tmp;;main.c: 58: system_init();
  5230                           
  5231                           ;incstack = 0
  5232  00D04E  EC62  F06D         	call	_system_init	;wreg free
  5233                           
  5234                           ;main.c: 60: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  5235  00D052  0E00               	movlw	0
  5236  00D054  EC13  F077         	call	_SYSTEM_Initialize
  5237  00D058                     
  5238                           ;main.c: 66: {;main.c: 72: if(!os.done)
  5239  00D058  0100               	movlb	0	; () banked
  5240  00D05A  51CE               	movf	(_os+2)& (0+255),w,b	;volatile
  5241  00D05C  A4D8               	btfss	status,2,c
  5242  00D05E  D7FC               	goto	l851
  5243                           
  5244                           ; BSR set to: 0
  5245  00D060  0004               	clrwdt		;# 
  5246                           
  5247                           ;main.c: 82: encoder_statemachine();
  5248  00D062  EC18  F051         	call	_encoder_statemachine	;wreg free
  5249                           
  5250                           ;main.c: 85: tmp = (float) os.current_position_in_steps;
  5251  00D066  C0D3  F060         	movff	_os+7,___xxtofl@val	;volatile
  5252  00D06A  C0D4  F061         	movff	_os+8,___xxtofl@val+1	;volatile
  5253  00D06E  C0D5  F062         	movff	_os+9,___xxtofl@val+2	;volatile
  5254  00D072  C0D6  F063         	movff	_os+10,___xxtofl@val+3	;volatile
  5255  00D076  0E00               	movlw	0
  5256  00D078  EC46  F066         	call	___xxtofl
  5257  00D07C  C060  F2D2         	movff	?___xxtofl,main@tmp
  5258  00D080  C061  F2D3         	movff	?___xxtofl+1,main@tmp+1
  5259  00D084  C062  F2D4         	movff	?___xxtofl+2,main@tmp+2
  5260  00D088  C063  F2D5         	movff	?___xxtofl+3,main@tmp+3
  5261                           
  5262                           ;main.c: 86: tmp *= 36000;
  5263  00D08C  C2D2  F06E         	movff	main@tmp,___flmul@b
  5264  00D090  C2D3  F06F         	movff	main@tmp+1,___flmul@b+1
  5265  00D094  C2D4  F070         	movff	main@tmp+2,___flmul@b+2
  5266  00D098  C2D5  F071         	movff	main@tmp+3,___flmul@b+3
  5267  00D09C  0E00               	movlw	0
  5268  00D09E  0100               	movlb	0	; () banked
  5269  00D0A0  6F72               	movwf	___flmul@a& (0+255),b
  5270  00D0A2  0EA0               	movlw	160
  5271  00D0A4  6F73               	movwf	(___flmul@a+1)& (0+255),b
  5272  00D0A6  0E0C               	movlw	12
  5273  00D0A8  6F74               	movwf	(___flmul@a+2)& (0+255),b
  5274  00D0AA  0E47               	movlw	71
  5275  00D0AC  6F75               	movwf	(___flmul@a+3)& (0+255),b
  5276  00D0AE  EC51  F05F         	call	___flmul	;wreg free
  5277  00D0B2  C06E  F2D2         	movff	?___flmul,main@tmp
  5278  00D0B6  C06F  F2D3         	movff	?___flmul+1,main@tmp+1
  5279  00D0BA  C070  F2D4         	movff	?___flmul+2,main@tmp+2
  5280  00D0BE  C071  F2D5         	movff	?___flmul+3,main@tmp+3
  5281                           
  5282                           ;main.c: 87: tmp /= config.full_circle_in_steps;
  5283  00D0C2  C2D2  F06E         	movff	main@tmp,___fldiv@b
  5284  00D0C6  C2D3  F06F         	movff	main@tmp+1,___fldiv@b+1
  5285  00D0CA  C2D4  F070         	movff	main@tmp+2,___fldiv@b+2
  5286  00D0CE  C2D5  F071         	movff	main@tmp+3,___fldiv@b+3
  5287  00D0D2  C11F  F060         	movff	_config,___xxtofl@val
  5288  00D0D6  C120  F061         	movff	_config+1,___xxtofl@val+1
  5289  00D0DA  C121  F062         	movff	_config+2,___xxtofl@val+2
  5290  00D0DE  C122  F063         	movff	_config+3,___xxtofl@val+3
  5291  00D0E2  0E00               	movlw	0
  5292  00D0E4  EC46  F066         	call	___xxtofl
  5293  00D0E8  C060  F072         	movff	?___xxtofl,___fldiv@a
  5294  00D0EC  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  5295  00D0F0  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  5296  00D0F4  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  5297  00D0F8  ECFA  F060         	call	___fldiv	;wreg free
  5298  00D0FC  C06E  F2D2         	movff	?___fldiv,main@tmp
  5299  00D100  C06F  F2D3         	movff	?___fldiv+1,main@tmp+1
  5300  00D104  C070  F2D4         	movff	?___fldiv+2,main@tmp+2
  5301  00D108  C071  F2D5         	movff	?___fldiv+3,main@tmp+3
  5302                           
  5303                           ;main.c: 89: os.current_position_in_degrees = (uint16_t) tmp;
  5304  00D10C  C2D2  F060         	movff	main@tmp,___fltol@f1
  5305  00D110  C2D3  F061         	movff	main@tmp+1,___fltol@f1+1
  5306  00D114  C2D4  F062         	movff	main@tmp+2,___fltol@f1+2
  5307  00D118  C2D5  F063         	movff	main@tmp+3,___fltol@f1+3
  5308  00D11C  ECD1  F06D         	call	___fltol	;wreg free
  5309  00D120  C060  F0D7         	movff	?___fltol,_os+11	;volatile
  5310  00D124  C061  F0D8         	movff	?___fltol+1,_os+12	;volatile
  5311                           
  5312                           ;main.c: 90: if(os.current_position_in_degrees==36000)
  5313  00D128  0EA0               	movlw	160
  5314  00D12A  0100               	movlb	0	; () banked
  5315  00D12C  19D7               	xorwf	(_os+11)& (0+255),w,b	;volatile
  5316  00D12E  E108               	bnz	l18618
  5317  00D130  0E8C               	movlw	140
  5318  00D132  19D8               	xorwf	(_os+12)& (0+255),w,b	;volatile
  5319  00D134  A4D8               	btfss	status,2,c
  5320  00D136  D004               	goto	l853
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;main.c: 91: {;main.c: 93: os.current_position_in_degrees = 0;
  5324  00D138  0E00               	movlw	0
  5325  00D13A  6FD8               	movwf	(_os+12)& (0+255),b	;volatile
  5326  00D13C  0E00               	movlw	0
  5327  00D13E  6FD7               	movwf	(_os+11)& (0+255),b	;volatile
  5328  00D140                     l853:
  5329  00D140                     l18618:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;main.c: 94: };main.c: 97: display_prepare();
  5333  00D140  EC07  F059         	call	_display_prepare	;wreg free
  5334                           
  5335                           ;main.c: 98: display_update();
  5336  00D144  ECBA  F079         	call	_display_update	;wreg free
  5337                           
  5338                           ;main.c: 100: motor_process_cue();
  5339  00D148  EC13  F075         	call	_motor_process_cue	;wreg free
  5340                           
  5341                           ;main.c: 103: if(os.beep_count)
  5342  00D14C  0100               	movlb	0	; () banked
  5343  00D14E  51F2               	movf	(_os+38)& (0+255),w,b	;volatile
  5344  00D150  B4D8               	btfsc	status,2,c
  5345  00D152  D004               	goto	l856
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;main.c: 104: {;main.c: 105: --os.beep_count;
  5349  00D154  07F2               	decf	(_os+38)& (0+255),f,b	;volatile
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;main.c: 106: if(!os.beep_count)
  5353  00D156  51F2               	movf	(_os+38)& (0+255),w,b	;volatile
  5354  00D158  B4D8               	btfsc	status,2,c
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;main.c: 107: {;main.c: 108: LATCbits.LC6 = 0;
  5358  00D15A  9C8B               	bcf	3979,6,c	;volatile
  5359  00D15C                     l856:
  5360                           
  5361                           ; BSR set to: 0
  5362                           
  5363                           ; BSR set to: 0
  5364  00D15C  51CD               	movf	(_os+1)& (0+255),w,b	;volatile
  5365  00D15E  0B0F               	andlw	15
  5366  00D160  6FCA               	movwf	??_main& (0+255),b
  5367  00D162  6BCB               	clrf	(??_main+1)& (0+255),b
  5368                           
  5369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5370                           ; Switch size 1, requested type "space"
  5371                           ; Number of cases is 1, Range of values is 0 to 0
  5372                           ; switch strategies available:
  5373                           ; Name         Instructions Cycles
  5374                           ; simple_byte            4     3 (average)
  5375                           ;	Chosen strategy is simple_byte
  5376  00D164  51CB               	movf	(??_main+1)& (0+255),w,b
  5377  00D166  0A00               	xorlw	0	; case 0
  5378  00D168  A4D8               	btfss	status,2,c
  5379  00D16A  D004               	goto	l858
  5380                           
  5381                           ; BSR set to: 0
  5382                           ; Switch size 1, requested type "space"
  5383                           ; Number of cases is 2, Range of values is 0 to 8
  5384                           ; switch strategies available:
  5385                           ; Name         Instructions Cycles
  5386                           ; simple_byte            7     4 (average)
  5387                           ;	Chosen strategy is simple_byte
  5388  00D16C  51CA               	movf	??_main& (0+255),w,b
  5389  00D16E  0A00               	xorlw	0	; case 0
  5390  00D170  A4D8               	btfss	status,2,c
  5391  00D172  0A08               	xorlw	8	; case 8
  5392  00D174                     l858:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;main.c: 121: os.done = 1;
  5396                           
  5397                           ; BSR set to: 0
  5398  00D174  0E01               	movlw	1
  5399  00D176  6FCE               	movwf	(_os+2)& (0+255),b	;volatile
  5400                           
  5401                           ; BSR set to: 0
  5402                           
  5403                           ; BSR set to: 0
  5404  00D178  D76F               	goto	l851
  5405  00D17A                     __end_of_main:
  5406                           	opt stack 0
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           postinc0	equ	0xFEE
  5412                           wreg	equ	0xFE8
  5413                           postdec1	equ	0xFE5
  5414                           fsr1h	equ	0xFE2
  5415                           fsr1l	equ	0xFE1
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _system_init *****************
  5419 ;; Defined at:
  5420 ;;		line 188 in file "os.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;Total ram usage:        0 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:   15
  5441 ;; This function calls:
  5442 ;;		__backlight_init
  5443 ;;		__system_pin_setup
  5444 ;;		__system_timer0_init
  5445 ;;		_display_init
  5446 ;;		_display_update
  5447 ;;		_encoder_init
  5448 ;;		_i2c_init
  5449 ;;		_motor_init
  5450 ;; This function is called by:
  5451 ;;		_main
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text1
  5456  00DAC4                     __ptext1:
  5457                           	opt stack 0
  5458  00DAC4                     _system_init:
  5459                           	opt stack 15
  5460                           
  5461                           ;os.c: 191: _system_pin_setup();
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;incstack = 0
  5465  00DAC4  EC88  F076         	call	__system_pin_setup	;wreg free
  5466                           
  5467                           ;os.c: 197: encoder_init();
  5468  00DAC8  EC96  F07A         	call	_encoder_init	;wreg free
  5469                           
  5470                           ;os.c: 200: i2c_init();
  5471  00DACC  ECDD  F07A         	call	_i2c_init	;wreg free
  5472                           
  5473                           ;os.c: 203: display_init();
  5474  00DAD0  ECD6  F079         	call	_display_init	;wreg free
  5475                           
  5476                           ;os.c: 204: display_update();
  5477  00DAD4  ECBA  F079         	call	_display_update	;wreg free
  5478                           
  5479                           ;os.c: 205: _backlight_init();
  5480  00DAD8  EC3B  F07B         	call	__backlight_init	;wreg free
  5481                           
  5482                           ;os.c: 208: motor_init();
  5483  00DADC  EC05  F07B         	call	_motor_init	;wreg free
  5484                           
  5485                           ;os.c: 211: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  5486  00DAE0  0E01               	movlw	1
  5487  00DAE2  0100               	movlb	0	; () banked
  5488  00DAE4  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;os.c: 212: os.busy = 0;
  5492  00DAE6  0E00               	movlw	0
  5493  00DAE8  6FDA               	movwf	(_os+14)& (0+255),b	;volatile
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;os.c: 213: os.current_position_in_steps = 0;
  5497  00DAEA  0E00               	movlw	0
  5498  00DAEC  6FD3               	movwf	(_os+7)& (0+255),b	;volatile
  5499  00DAEE  0E00               	movlw	0
  5500  00DAF0  6FD4               	movwf	(_os+8)& (0+255),b	;volatile
  5501  00DAF2  0E00               	movlw	0
  5502  00DAF4  6FD5               	movwf	(_os+9)& (0+255),b	;volatile
  5503  00DAF6  0E00               	movlw	0
  5504  00DAF8  6FD6               	movwf	(_os+10)& (0+255),b	;volatile
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;os.c: 214: os.last_approach_direction = MOTOR_DIRECTION_CW;
  5508  00DAFA  0E01               	movlw	1
  5509  00DAFC  6FDB               	movwf	(_os+15)& (0+255),b	;volatile
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;os.c: 215: os.setup_step_size = 1000;
  5513  00DAFE  0E03               	movlw	3
  5514  00DB00  6FDD               	movwf	(_os+17)& (0+255),b	;volatile
  5515  00DB02  0EE8               	movlw	232
  5516  00DB04  6FDC               	movwf	(_os+16)& (0+255),b	;volatile
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;os.c: 216: os.approach_direction = MOTOR_DIRECTION_CW;
  5520  00DB06  0E01               	movlw	1
  5521  00DB08  6FDE               	movwf	(_os+18)& (0+255),b	;volatile
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;os.c: 217: os.division = 36;
  5525  00DB0A  0E00               	movlw	0
  5526  00DB0C  6FE0               	movwf	(_os+20)& (0+255),b	;volatile
  5527  00DB0E  0E24               	movlw	36
  5528  00DB10  6FDF               	movwf	(_os+19)& (0+255),b	;volatile
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;os.c: 218: os.divide_step_size = 10;
  5532  00DB12  0E0A               	movlw	10
  5533  00DB14  6FE1               	movwf	(_os+21)& (0+255),b	;volatile
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;os.c: 219: os.divide_position = 0;
  5537  00DB16  0E00               	movlw	0
  5538  00DB18  6FE3               	movwf	(_os+23)& (0+255),b	;volatile
  5539  00DB1A  0E00               	movlw	0
  5540  00DB1C  6FE2               	movwf	(_os+22)& (0+255),b	;volatile
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;os.c: 220: os.divide_jump_size = 1;
  5544  00DB1E  0E00               	movlw	0
  5545  00DB20  6FE5               	movwf	(_os+25)& (0+255),b	;volatile
  5546  00DB22  0E01               	movlw	1
  5547  00DB24  6FE4               	movwf	(_os+24)& (0+255),b	;volatile
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;os.c: 221: os.arc_step_size = 1000;
  5551  00DB26  0E03               	movlw	3
  5552  00DB28  6FE7               	movwf	(_os+27)& (0+255),b	;volatile
  5553  00DB2A  0EE8               	movlw	232
  5554  00DB2C  6FE6               	movwf	(_os+26)& (0+255),b	;volatile
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;os.c: 222: os.arc_size = 1000;
  5558  00DB2E  0EE8               	movlw	232
  5559  00DB30  6FE8               	movwf	(_os+28)& (0+255),b	;volatile
  5560  00DB32  0E03               	movlw	3
  5561  00DB34  6FE9               	movwf	(_os+29)& (0+255),b	;volatile
  5562  00DB36  0E00               	movlw	0
  5563  00DB38  6FEA               	movwf	(_os+30)& (0+255),b	;volatile
  5564  00DB3A  0E00               	movlw	0
  5565  00DB3C  6FEB               	movwf	(_os+31)& (0+255),b	;volatile
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;os.c: 223: os.arc_speed = 30;
  5569  00DB3E  0E00               	movlw	0
  5570  00DB40  6FED               	movwf	(_os+33)& (0+255),b	;volatile
  5571  00DB42  0E1E               	movlw	30
  5572  00DB44  6FEC               	movwf	(_os+32)& (0+255),b	;volatile
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;os.c: 224: os.arc_direction = MOTOR_DIRECTION_CW;
  5576  00DB46  0E01               	movlw	1
  5577  00DB48  6FEE               	movwf	(_os+34)& (0+255),b	;volatile
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;os.c: 225: os.manual_speed = 30;
  5581  00DB4A  0E00               	movlw	0
  5582  00DB4C  6FF0               	movwf	(_os+36)& (0+255),b	;volatile
  5583  00DB4E  0E1E               	movlw	30
  5584  00DB50  6FEF               	movwf	(_os+35)& (0+255),b	;volatile
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;os.c: 226: os.manual_direction = MOTOR_DIRECTION_CW;
  5588  00DB52  0E01               	movlw	1
  5589  00DB54  6FF1               	movwf	(_os+37)& (0+255),b	;volatile
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;os.c: 227: os.beep_count = 0;
  5593  00DB56  0E00               	movlw	0
  5594  00DB58  6FF2               	movwf	(_os+38)& (0+255),b	;volatile
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;os.c: 229: config.full_circle_in_steps = 576000;
  5598  00DB5A  0E00               	movlw	0
  5599  00DB5C  0101               	movlb	1	; () banked
  5600  00DB5E  6F1F               	movwf	_config& (0+255),b
  5601  00DB60  0ECA               	movlw	202
  5602  00DB62  6F20               	movwf	(_config+1)& (0+255),b
  5603  00DB64  0E08               	movlw	8
  5604  00DB66  6F21               	movwf	(_config+2)& (0+255),b
  5605  00DB68  0E00               	movlw	0
  5606  00DB6A  6F22               	movwf	(_config+3)& (0+255),b
  5607                           
  5608                           ; BSR set to: 1
  5609                           ;os.c: 230: config.inverse_direction = 1;
  5610  00DB6C  0E01               	movlw	1
  5611  00DB6E  6F23               	movwf	(_config+4)& (0+255),b
  5612                           
  5613                           ; BSR set to: 1
  5614                           ;os.c: 231: config.overshoot_in_steps = 6400;
  5615  00DB70  0E19               	movlw	25
  5616  00DB72  6F25               	movwf	(_config+6)& (0+255),b
  5617  00DB74  0E00               	movlw	0
  5618  00DB76  6F24               	movwf	(_config+5)& (0+255),b
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;os.c: 232: config.minimum_speed = 1;
  5622  00DB78  0E00               	movlw	0
  5623  00DB7A  6F27               	movwf	(_config+8)& (0+255),b
  5624  00DB7C  0E01               	movlw	1
  5625  00DB7E  6F26               	movwf	(_config+7)& (0+255),b
  5626                           
  5627                           ; BSR set to: 1
  5628                           ;os.c: 233: config.maximum_speed = 380;
  5629  00DB80  0E01               	movlw	1
  5630  00DB82  6F29               	movwf	(_config+10)& (0+255),b
  5631  00DB84  0E7C               	movlw	124
  5632  00DB86  6F28               	movwf	(_config+9)& (0+255),b
  5633                           
  5634                           ; BSR set to: 1
  5635                           ;os.c: 234: config.maximum_speed_arc = 305;
  5636  00DB88  0E01               	movlw	1
  5637  00DB8A  6F2D               	movwf	(_config+14)& (0+255),b
  5638  00DB8C  0E31               	movlw	49
  5639  00DB8E  6F2C               	movwf	(_config+13)& (0+255),b
  5640                           
  5641                           ; BSR set to: 1
  5642                           ;os.c: 235: config.maximum_speed_manual = 305;
  5643  00DB90  0E01               	movlw	1
  5644  00DB92  6F31               	movwf	(_config+18)& (0+255),b
  5645  00DB94  0E31               	movlw	49
  5646  00DB96  6F30               	movwf	(_config+17)& (0+255),b
  5647                           
  5648                           ; BSR set to: 1
  5649                           ;os.c: 236: config.beep_duration = 3;
  5650  00DB98  0E03               	movlw	3
  5651  00DB9A  6F32               	movwf	(_config+19)& (0+255),b
  5652                           
  5653                           ; BSR set to: 1
  5654                           ;os.c: 239: _system_timer0_init();
  5655  00DB9C  EC55  F07A         	call	__system_timer0_init	;wreg free
  5656  00DBA0  0012               	return		;funcret
  5657  00DBA2                     __end_of_system_init:
  5658                           	opt stack 0
  5659                           tblptru	equ	0xFF8
  5660                           tblptrh	equ	0xFF7
  5661                           tblptrl	equ	0xFF6
  5662                           tablat	equ	0xFF5
  5663                           postinc0	equ	0xFEE
  5664                           wreg	equ	0xFE8
  5665                           postdec1	equ	0xFE5
  5666                           fsr1h	equ	0xFE2
  5667                           fsr1l	equ	0xFE1
  5668                           status	equ	0xFD8
  5669                           
  5670 ;; *************** function _motor_init *****************
  5671 ;; Defined at:
  5672 ;;		line 141 in file "motor.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;		None
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5690 ;;Total ram usage:        0 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:   10
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_system_init
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text2
  5701  00F60A                     __ptext2:
  5702                           	opt stack 0
  5703  00F60A                     _motor_init:
  5704                           	opt stack 19
  5705                           
  5706                           ;motor.c: 144: motor_cue_read_index = 0;
  5707                           
  5708                           ;incstack = 0
  5709  00F60A  0E00               	movlw	0
  5710  00F60C  0100               	movlb	0	; () banked
  5711  00F60E  6FF7               	movwf	_motor_cue_read_index& (0+255),b
  5712                           
  5713                           ;motor.c: 145: motor_cue_write_index = 0;
  5714  00F610  0E00               	movlw	0
  5715  00F612  6FF6               	movwf	_motor_cue_write_index& (0+255),b
  5716                           
  5717                           ;motor.c: 155: CCP1CONbits.P1M = 0b00;
  5718  00F614  0E3F               	movlw	-193
  5719  00F616  16BA               	andwf	4026,f,c	;volatile
  5720                           
  5721                           ;motor.c: 158: CCP1CONbits.DC1B = 0b00;
  5722  00F618  0ECF               	movlw	-49
  5723  00F61A  16BA               	andwf	4026,f,c	;volatile
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;motor.c: 161: LATBbits.LB0 = 0;
  5727  00F61C  908A               	bcf	3978,0,c	;volatile
  5728                           
  5729                           ; BSR set to: 0
  5730  00F61E  0012               	return		;funcret
  5731  00F620                     __end_of_motor_init:
  5732                           	opt stack 0
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           postinc0	equ	0xFEE
  5738                           wreg	equ	0xFE8
  5739                           postdec1	equ	0xFE5
  5740                           fsr1h	equ	0xFE2
  5741                           fsr1l	equ	0xFE1
  5742                           status	equ	0xFD8
  5743                           
  5744 ;; *************** function _i2c_init *****************
  5745 ;; Defined at:
  5746 ;;		line 24 in file "i2c.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; Hardware stack levels required when called:   10
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_system_init
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text3
  5775  00F5BA                     __ptext3:
  5776                           	opt stack 0
  5777  00F5BA                     _i2c_init:
  5778                           	opt stack 19
  5779                           
  5780                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;incstack = 0
  5784  00F5BA  8A93               	bsf	3987,5,c	;volatile
  5785                           
  5786                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  5787  00F5BC  8893               	bsf	3987,4,c	;volatile
  5788                           
  5789                           ;i2c.c: 28: SSP1STATbits.SMP = 0;
  5790  00F5BE  9EC7               	bcf	4039,7,c	;volatile
  5791                           
  5792                           ;i2c.c: 29: SSP1STATbits.CKE = 0;
  5793  00F5C0  9CC7               	bcf	4039,6,c	;volatile
  5794                           
  5795                           ;i2c.c: 31: SSP1ADD = 119;
  5796  00F5C2  0E77               	movlw	119
  5797  00F5C4  6EC8               	movwf	4040,c	;volatile
  5798                           
  5799                           ;i2c.c: 33: SSP1CON1bits.WCOL = 0;
  5800  00F5C6  9EC6               	bcf	4038,7,c	;volatile
  5801                           
  5802                           ;i2c.c: 34: SSP1CON1bits.SSPOV = 0;
  5803  00F5C8  9CC6               	bcf	4038,6,c	;volatile
  5804                           
  5805                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b1000;
  5806  00F5CA  50C6               	movf	4038,w,c	;volatile
  5807  00F5CC  0BF0               	andlw	-16
  5808  00F5CE  0908               	iorlw	8
  5809  00F5D0  6EC6               	movwf	4038,c	;volatile
  5810                           
  5811                           ;i2c.c: 36: SSP1CON1bits.SSPEN = 1;
  5812  00F5D2  8AC6               	bsf	4038,5,c	;volatile
  5813  00F5D4  0012               	return		;funcret
  5814  00F5D6                     __end_of_i2c_init:
  5815                           	opt stack 0
  5816                           tblptru	equ	0xFF8
  5817                           tblptrh	equ	0xFF7
  5818                           tblptrl	equ	0xFF6
  5819                           tablat	equ	0xFF5
  5820                           postinc0	equ	0xFEE
  5821                           wreg	equ	0xFE8
  5822                           postdec1	equ	0xFE5
  5823                           fsr1h	equ	0xFE2
  5824                           fsr1l	equ	0xFE1
  5825                           status	equ	0xFD8
  5826                           
  5827 ;; *************** function _encoder_init *****************
  5828 ;; Defined at:
  5829 ;;		line 14 in file "encoder.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;		None
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;Total ram usage:        0 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:   10
  5850 ;; This function calls:
  5851 ;;		Nothing
  5852 ;; This function is called by:
  5853 ;;		_system_init
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text4
  5858  00F52C                     __ptext4:
  5859                           	opt stack 0
  5860  00F52C                     _encoder_init:
  5861                           	opt stack 19
  5862                           
  5863                           ;encoder.c: 16: enc1 = PORTE & 0b00000111;
  5864                           
  5865                           ;incstack = 0
  5866  00F52C  5084               	movf	3972,w,c	;volatile
  5867  00F52E  0B07               	andlw	7
  5868  00F530  0101               	movlb	1	; () banked
  5869  00F532  6FFE               	movwf	_enc1& (0+255),b
  5870                           
  5871                           ;encoder.c: 17: enc2 = PORTA & 0b00000111;
  5872  00F534  5080               	movf	3968,w,c	;volatile
  5873  00F536  0B07               	andlw	7
  5874  00F538  6FFD               	movwf	_enc2& (0+255),b
  5875                           
  5876                           ; BSR set to: 1
  5877                           ;encoder.c: 18: os.encoder1Count = 0;
  5878  00F53A  0E00               	movlw	0
  5879  00F53C  0100               	movlb	0	; () banked
  5880  00F53E  6FCF               	movwf	(_os+3)& (0+255),b	;volatile
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;encoder.c: 19: os.encoder2Count = 0;
  5884  00F540  0E00               	movlw	0
  5885  00F542  6FD1               	movwf	(_os+5)& (0+255),b	;volatile
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;encoder.c: 20: os.button1 = 0;
  5889  00F544  0E00               	movlw	0
  5890  00F546  6FD0               	movwf	(_os+4)& (0+255),b	;volatile
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;encoder.c: 21: os.button2 = 0;
  5894  00F548  0E00               	movlw	0
  5895  00F54A  6FD2               	movwf	(_os+6)& (0+255),b	;volatile
  5896                           
  5897                           ; BSR set to: 0
  5898                           ;encoder.c: 22: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  5899  00F54C  0E01               	movlw	1
  5900  00F54E  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  5901                           
  5902                           ; BSR set to: 0
  5903  00F550  0012               	return		;funcret
  5904  00F552                     __end_of_encoder_init:
  5905                           	opt stack 0
  5906                           tblptru	equ	0xFF8
  5907                           tblptrh	equ	0xFF7
  5908                           tblptrl	equ	0xFF6
  5909                           tablat	equ	0xFF5
  5910                           postinc0	equ	0xFEE
  5911                           wreg	equ	0xFE8
  5912                           postdec1	equ	0xFE5
  5913                           fsr1h	equ	0xFE2
  5914                           fsr1l	equ	0xFE1
  5915                           status	equ	0xFD8
  5916                           
  5917 ;; *************** function _display_update *****************
  5918 ;; Defined at:
  5919 ;;		line 570 in file "display.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  line            1   16[BANK0 ] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5936 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;Total ram usage:        1 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; Hardware stack levels required when called:   14
  5940 ;; This function calls:
  5941 ;;		_i2c_display_cursor
  5942 ;;		_i2c_display_write_fixed
  5943 ;; This function is called by:
  5944 ;;		_main
  5945 ;;		_system_init
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text5
  5950  00F374                     __ptext5:
  5951                           	opt stack 0
  5952  00F374                     _display_update:
  5953                           	opt stack 15
  5954                           
  5955                           ;display.c: 572: uint8_t line;;display.c: 573: for(line=0; line<4; ++line)
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;incstack = 0
  5959  00F374  0E00               	movlw	0
  5960  00F376  0100               	movlb	0	; () banked
  5961  00F378  6F70               	movwf	display_update@line& (0+255),b
  5962  00F37A                     l17130:
  5963                           
  5964                           ; BSR set to: 0
  5965  00F37A  0E03               	movlw	3
  5966  00F37C  6570               	cpfsgt	display_update@line& (0+255),b
  5967  00F37E  D001               	goto	l1423
  5968  00F380  0012               	return	
  5969  00F382                     l1423:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;display.c: 574: {;display.c: 575: i2c_display_cursor(line, 0);
  5973                           
  5974                           ; BSR set to: 0
  5975  00F382  0E00               	movlw	0
  5976  00F384  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  5977  00F386  5170               	movf	display_update@line& (0+255),w,b
  5978  00F388  ECBB  F07A         	call	_i2c_display_cursor
  5979                           
  5980                           ;display.c: 576: i2c_display_write_fixed(display_content[line], 20);
  5981  00F38C  0100               	movlb	0	; () banked
  5982  00F38E  5170               	movf	display_update@line& (0+255),w,b
  5983  00F390  0D14               	mullw	20
  5984  00F392  0EAD               	movlw	low _display_content
  5985  00F394  24F3               	addwf	prodl,w,c
  5986  00F396  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
  5987  00F398  0E01               	movlw	high _display_content
  5988  00F39A  20F4               	addwfc	prodh,w,c
  5989  00F39C  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
  5990  00F39E  0E14               	movlw	20
  5991  00F3A0  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
  5992  00F3A2  EC97  F077         	call	_i2c_display_write_fixed	;wreg free
  5993  00F3A6  0100               	movlb	0	; () banked
  5994  00F3A8  2B70               	incf	display_update@line& (0+255),f,b
  5995  00F3AA  D7E7               	goto	l17130
  5996  00F3AC                     __end_of_display_update:
  5997                           	opt stack 0
  5998                           tblptru	equ	0xFF8
  5999                           tblptrh	equ	0xFF7
  6000                           tblptrl	equ	0xFF6
  6001                           tablat	equ	0xFF5
  6002                           prodh	equ	0xFF4
  6003                           prodl	equ	0xFF3
  6004                           postinc0	equ	0xFEE
  6005                           wreg	equ	0xFE8
  6006                           postdec1	equ	0xFE5
  6007                           fsr1h	equ	0xFE2
  6008                           fsr1l	equ	0xFE1
  6009                           status	equ	0xFD8
  6010                           
  6011 ;; *************** function _i2c_display_write_fixed *****************
  6012 ;; Defined at:
  6013 ;;		line 395 in file "i2c.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  data            2    5[BANK0 ] PTR unsigned char 
  6016 ;;		 -> display_content(80), 
  6017 ;;  length          1    7[BANK0 ] unsigned char 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  pos             1    8[BANK0 ] unsigned char 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6029 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6032 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6033 ;;Total ram usage:        4 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:   11
  6036 ;; This function calls:
  6037 ;;		__i2c_send
  6038 ;;		__i2c_start
  6039 ;;		__i2c_stop
  6040 ;;		__i2c_wait_idle
  6041 ;; This function is called by:
  6042 ;;		_display_update
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text6
  6047  00EF2E                     __ptext6:
  6048                           	opt stack 0
  6049  00EF2E                     _i2c_display_write_fixed:
  6050                           	opt stack 17
  6051                           
  6052                           ;i2c.c: 397: uint8_t pos;;i2c.c: 402: _i2c_wait_idle();
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;incstack = 0
  6056  00EF2E  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6057                           
  6058                           ;i2c.c: 403: _i2c_start();
  6059  00EF32  EC37  F07B         	call	__i2c_start	;wreg free
  6060                           
  6061                           ;i2c.c: 404: _i2c_wait_idle();
  6062  00EF36  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6063                           
  6064                           ;i2c.c: 405: _i2c_send(0b01111000);
  6065  00EF3A  0E78               	movlw	120
  6066  00EF3C  EC29  F07B         	call	__i2c_send
  6067                           
  6068                           ;i2c.c: 406: _i2c_wait_idle();
  6069  00EF40  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6070                           
  6071                           ;i2c.c: 407: _i2c_send(0b01000000);
  6072  00EF44  0E40               	movlw	64
  6073  00EF46  EC29  F07B         	call	__i2c_send
  6074                           
  6075                           ;i2c.c: 408: _i2c_wait_idle();
  6076  00EF4A  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6077                           
  6078                           ;i2c.c: 411: for(pos=0; pos<length; ++pos)
  6079  00EF4E  0E00               	movlw	0
  6080  00EF50  0100               	movlb	0	; () banked
  6081  00EF52  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
  6082  00EF54  D00F               	goto	l1187
  6083  00EF56                     
  6084                           ; BSR set to: 0
  6085                           ;i2c.c: 412: {;i2c.c: 413: _i2c_send(data[pos]);
  6086                           
  6087                           ; BSR set to: 0
  6088  00EF56  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
  6089  00EF58  0D01               	mullw	1
  6090  00EF5A  50F3               	movf	prodl,w,c
  6091  00EF5C  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
  6092  00EF5E  6ED9               	movwf	fsr2l,c
  6093  00EF60  50F4               	movf	prodh,w,c
  6094  00EF62  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
  6095  00EF64  6EDA               	movwf	fsr2h,c
  6096  00EF66  50DF               	movf	indf2,w,c
  6097  00EF68  EC29  F07B         	call	__i2c_send
  6098                           
  6099                           ;i2c.c: 414: _i2c_wait_idle();
  6100  00EF6C  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6101  00EF70  0100               	movlb	0	; () banked
  6102  00EF72  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
  6103  00EF74                     l1187:
  6104                           
  6105                           ; BSR set to: 0
  6106                           
  6107                           ; BSR set to: 0
  6108  00EF74  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
  6109  00EF76  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
  6110  00EF78  A0D8               	btfss	status,0,c
  6111  00EF7A  D7ED               	goto	l1188
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;i2c.c: 415: };i2c.c: 417: _i2c_stop();
  6115                           
  6116                           ; BSR set to: 0
  6117  00EF7C  EC33  F07B         	call	__i2c_stop	;wreg free
  6118  00EF80  0012               	return		;funcret
  6119  00EF82                     __end_of_i2c_display_write_fixed:
  6120                           	opt stack 0
  6121                           tblptru	equ	0xFF8
  6122                           tblptrh	equ	0xFF7
  6123                           tblptrl	equ	0xFF6
  6124                           tablat	equ	0xFF5
  6125                           prodh	equ	0xFF4
  6126                           prodl	equ	0xFF3
  6127                           postinc0	equ	0xFEE
  6128                           wreg	equ	0xFE8
  6129                           postdec1	equ	0xFE5
  6130                           fsr1h	equ	0xFE2
  6131                           fsr1l	equ	0xFE1
  6132                           indf2	equ	0xFDF
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function _i2c_display_cursor *****************
  6138 ;; Defined at:
  6139 ;;		line 355 in file "i2c.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  line            1    wreg     unsigned char 
  6142 ;;  position        1   13[BANK0 ] unsigned char 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  line            1   14[BANK0 ] unsigned char 
  6145 ;;  address         1   15[BANK0 ] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  1    wreg      void 
  6148 ;; Registers used:
  6149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6155 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6159 ;;Total ram usage:        3 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:   13
  6162 ;; This function calls:
  6163 ;;		__ic2_display_set_ddram_address
  6164 ;; This function is called by:
  6165 ;;		_display_update
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text7
  6170  00F576                     __ptext7:
  6171                           	opt stack 0
  6172  00F576                     _i2c_display_cursor:
  6173                           	opt stack 15
  6174                           
  6175                           ;incstack = 0
  6176                           ;i2c_display_cursor@line stored from wreg
  6177  00F576  0100               	movlb	0	; () banked
  6178  00F578  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
  6179                           
  6180                           ;i2c.c: 357: uint8_t address;;i2c.c: 360: line &= 0b11;
  6181  00F57A  0E03               	movlw	3
  6182  00F57C  0100               	movlb	0	; () banked
  6183  00F57E  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
  6184                           
  6185                           ;i2c.c: 361: address = line<<5;
  6186  00F580  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
  6187  00F582  46E8               	rlncf	wreg,f,c
  6188  00F584  0BE0               	andlw	224
  6189  00F586  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
  6190                           
  6191                           ;i2c.c: 362: position &= 0b11111;
  6192  00F588  0E1F               	movlw	31
  6193  00F58A  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
  6194                           
  6195                           ;i2c.c: 363: address |= position;
  6196  00F58C  516D               	movf	i2c_display_cursor@position& (0+255),w,b
  6197  00F58E  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;i2c.c: 369: _ic2_display_set_ddram_address(address);
  6201  00F590  516F               	movf	i2c_display_cursor@address& (0+255),w,b
  6202  00F592  ECA9  F07A         	call	__ic2_display_set_ddram_address
  6203  00F596  0012               	return		;funcret
  6204  00F598                     __end_of_i2c_display_cursor:
  6205                           	opt stack 0
  6206                           tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           prodh	equ	0xFF4
  6211                           prodl	equ	0xFF3
  6212                           postinc0	equ	0xFEE
  6213                           wreg	equ	0xFE8
  6214                           postdec1	equ	0xFE5
  6215                           fsr1h	equ	0xFE2
  6216                           fsr1l	equ	0xFE1
  6217                           indf2	equ	0xFDF
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222 ;; *************** function __ic2_display_set_ddram_address *****************
  6223 ;; Defined at:
  6224 ;;		line 326 in file "i2c.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  address         1    wreg     unsigned char 
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;  address         1   10[BANK0 ] unsigned char 
  6229 ;;  data_array      2   11[BANK0 ] unsigned char [2]
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;Total ram usage:        3 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:   12
  6246 ;; This function calls:
  6247 ;;		__i2c_write
  6248 ;; This function is called by:
  6249 ;;		_i2c_display_cursor
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text8
  6254  00F552                     __ptext8:
  6255                           	opt stack 0
  6256  00F552                     __ic2_display_set_ddram_address:
  6257                           	opt stack 15
  6258                           
  6259                           ;incstack = 0
  6260                           ;__ic2_display_set_ddram_address@address stored from wreg
  6261  00F552  0100               	movlb	0	; () banked
  6262  00F554  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
  6263                           
  6264                           ;i2c.c: 328: uint8_t data_array[2];;i2c.c: 329: data_array[0] = 0b00000000;
  6265  00F556  0E00               	movlw	0
  6266  00F558  0100               	movlb	0	; () banked
  6267  00F55A  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;i2c.c: 330: data_array[1] = 0b10000000 | address;
  6271  00F55C  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
  6272  00F55E  0980               	iorlw	128
  6273  00F560  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;i2c.c: 336: _i2c_write(0b01111000, &data_array[0], 2);
  6277  00F562  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
  6278  00F564  6F65               	movwf	__i2c_write@data& (0+255),b
  6279  00F566  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
  6280  00F568  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  6281  00F56A  0E02               	movlw	2
  6282  00F56C  6F67               	movwf	__i2c_write@length& (0+255),b
  6283  00F56E  0E78               	movlw	120
  6284  00F570  EC3D  F078         	call	__i2c_write
  6285  00F574  0012               	return		;funcret
  6286  00F576                     __end_of__ic2_display_set_ddram_address:
  6287                           	opt stack 0
  6288                           tblptru	equ	0xFF8
  6289                           tblptrh	equ	0xFF7
  6290                           tblptrl	equ	0xFF6
  6291                           tablat	equ	0xFF5
  6292                           prodh	equ	0xFF4
  6293                           prodl	equ	0xFF3
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           postdec1	equ	0xFE5
  6297                           fsr1h	equ	0xFE2
  6298                           fsr1l	equ	0xFE1
  6299                           indf2	equ	0xFDF
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function _display_init *****************
  6305 ;; Defined at:
  6306 ;;		line 222 in file "display.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:   14
  6327 ;; This function calls:
  6328 ;;		_i2c_display_init
  6329 ;;		_i2c_display_program_custom_character
  6330 ;; This function is called by:
  6331 ;;		_system_init
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text9
  6336  00F3AC                     __ptext9:
  6337                           	opt stack 0
  6338  00F3AC                     _display_init:
  6339                           	opt stack 15
  6340                           
  6341                           ;display.c: 224: i2c_display_init();
  6342                           
  6343                           ;incstack = 0
  6344  00F3AC  EC15  F078         	call	_i2c_display_init	;wreg free
  6345                           
  6346                           ;display.c: 225: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
  6347  00F3B0  0ED5               	movlw	low _bit_pattern_verticalbar
  6348  00F3B2  0100               	movlb	0	; () banked
  6349  00F3B4  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
  6350  00F3B6  0EA1               	movlw	high _bit_pattern_verticalbar
  6351  00F3B8  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
  6352  00F3BA  0E00               	movlw	0
  6353  00F3BC  ECD5  F074         	call	_i2c_display_program_custom_character
  6354                           
  6355                           ;display.c: 226: i2c_display_program_custom_character(0x01, bit_pattern_degree);
  6356  00F3C0  0ECD               	movlw	low _bit_pattern_degree
  6357  00F3C2  0100               	movlb	0	; () banked
  6358  00F3C4  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
  6359  00F3C6  0EA1               	movlw	high _bit_pattern_degree
  6360  00F3C8  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
  6361  00F3CA  0E01               	movlw	1
  6362  00F3CC  ECD5  F074         	call	_i2c_display_program_custom_character
  6363                           
  6364                           ;display.c: 227: i2c_display_program_custom_character(0x02, bit_pattern_ae);
  6365  00F3D0  0EC5               	movlw	low _bit_pattern_ae
  6366  00F3D2  0100               	movlb	0	; () banked
  6367  00F3D4  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
  6368  00F3D6  0EA1               	movlw	high _bit_pattern_ae
  6369  00F3D8  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
  6370  00F3DA  0E02               	movlw	2
  6371  00F3DC  ECD5  F074         	call	_i2c_display_program_custom_character
  6372  00F3E0  0012               	return		;funcret
  6373  00F3E2                     __end_of_display_init:
  6374                           	opt stack 0
  6375                           tblptru	equ	0xFF8
  6376                           tblptrh	equ	0xFF7
  6377                           tblptrl	equ	0xFF6
  6378                           tablat	equ	0xFF5
  6379                           prodh	equ	0xFF4
  6380                           prodl	equ	0xFF3
  6381                           postinc0	equ	0xFEE
  6382                           wreg	equ	0xFE8
  6383                           postdec1	equ	0xFE5
  6384                           fsr1h	equ	0xFE2
  6385                           fsr1l	equ	0xFE1
  6386                           indf2	equ	0xFDF
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function _i2c_display_program_custom_character *****************
  6392 ;; Defined at:
  6393 ;;		line 420 in file "i2c.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  address         1    wreg     unsigned char 
  6396 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
  6397 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  address         1   31[BANK0 ] unsigned char 
  6400 ;;  data_array     11   20[BANK0 ] unsigned char [11]
  6401 ;;  cntr            1   32[BANK0 ] unsigned char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6412 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;Total ram usage:       19 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:   13
  6418 ;; This function calls:
  6419 ;;		__i2c_write
  6420 ;;		__ic2_display_set_cgram_address
  6421 ;; This function is called by:
  6422 ;;		_display_init
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text10
  6427  00E9AA                     __ptext10:
  6428                           	opt stack 0
  6429  00E9AA                     _i2c_display_program_custom_character:
  6430                           	opt stack 15
  6431                           
  6432                           ;incstack = 0
  6433                           ;i2c_display_program_custom_character@address stored from wreg
  6434  00E9AA  0100               	movlb	0	; () banked
  6435  00E9AC  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
  6436                           
  6437                           ;i2c.c: 422: uint8_t cntr;;i2c.c: 423: uint8_t data_array[11];;i2c.c: 426: _ic2_display_
      +                          set_cgram_address(address<<3);
  6438  00E9AE  0100               	movlb	0	; () banked
  6439  00E9B0  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
  6440  00E9B2  42E8               	rrncf	wreg,f,c
  6441  00E9B4  0BF8               	andlw	248
  6442  00E9B6  EC81  F07A         	call	__ic2_display_set_cgram_address
  6443                           
  6444                           ;i2c.c: 429: data_array[0] = 0b01000000;
  6445  00E9BA  0E40               	movlw	64
  6446  00E9BC  0100               	movlb	0	; () banked
  6447  00E9BE  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;i2c.c: 430: for(cntr=0; cntr<8; ++cntr)
  6451  00E9C0  0E00               	movlw	0
  6452  00E9C2  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
  6453  00E9C4                     l16806:
  6454                           
  6455                           ; BSR set to: 0
  6456  00E9C4  0E07               	movlw	7
  6457  00E9C6  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
  6458  00E9C8  D001               	goto	l1193
  6459  00E9CA  D023               	goto	u17020
  6460  00E9CC                     l1193:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;i2c.c: 431: {;i2c.c: 432: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
  6464                           
  6465                           ; BSR set to: 0
  6466  00E9CC  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
  6467  00E9CE  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
  6468  00E9D0  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
  6469  00E9D2  0E01               	movlw	1
  6470  00E9D4  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
  6471  00E9D6  0E00               	movlw	0
  6472  00E9D8  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
  6473  00E9DA  0E74               	movlw	low i2c_display_program_custom_character@data_array
  6474  00E9DC  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
  6475  00E9DE  6ED9               	movwf	fsr2l,c
  6476  00E9E0  0E00               	movlw	high i2c_display_program_custom_character@data_array
  6477  00E9E2  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
  6478  00E9E4  6EDA               	movwf	fsr2h,c
  6479  00E9E6  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
  6480  00E9E8  0D01               	mullw	1
  6481  00E9EA  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
  6482  00E9EE  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
  6483  00E9F2  50F3               	movf	prodl,w,c
  6484  00E9F4  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
  6485  00E9F6  50F4               	movf	prodh,w,c
  6486  00E9F8  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
  6487  00E9FA  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
  6488  00E9FE  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
  6489  00EA02                     	if	0	;tblptru may be non-zero
  6490  00EA02                     	endif
  6491  00EA02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6492  00EA02  0E00               	movlw	low (__mediumconst shr (0+16))
  6493  00EA04  6EF8               	movwf	tblptru,c
  6494  00EA06                     	endif
  6495  00EA06  0008               	tblrd		*
  6496  00EA08  50F5               	movf	tablat,w,c
  6497  00EA0A  0B1F               	andlw	31
  6498  00EA0C  6EDF               	movwf	indf2,c
  6499                           
  6500                           ; BSR set to: 0
  6501  00EA0E  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
  6502  00EA10  D7D9               	goto	l16806
  6503  00EA12                     u17020:
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;i2c.c: 433: };i2c.c: 434: _i2c_write(0b01111000, data_array, 9);
  6507                           
  6508                           ; BSR set to: 0
  6509  00EA12  0E74               	movlw	low i2c_display_program_custom_character@data_array
  6510  00EA14  6F65               	movwf	__i2c_write@data& (0+255),b
  6511  00EA16  0E00               	movlw	high i2c_display_program_custom_character@data_array
  6512  00EA18  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  6513  00EA1A  0E09               	movlw	9
  6514  00EA1C  6F67               	movwf	__i2c_write@length& (0+255),b
  6515  00EA1E  0E78               	movlw	120
  6516  00EA20  EC3D  F078         	call	__i2c_write
  6517  00EA24  0012               	return		;funcret
  6518  00EA26                     __end_of_i2c_display_program_custom_character:
  6519                           	opt stack 0
  6520                           tblptru	equ	0xFF8
  6521                           tblptrh	equ	0xFF7
  6522                           tblptrl	equ	0xFF6
  6523                           tablat	equ	0xFF5
  6524                           prodh	equ	0xFF4
  6525                           prodl	equ	0xFF3
  6526                           postinc0	equ	0xFEE
  6527                           wreg	equ	0xFE8
  6528                           postdec1	equ	0xFE5
  6529                           fsr1h	equ	0xFE2
  6530                           fsr1l	equ	0xFE1
  6531                           indf2	equ	0xFDF
  6532                           fsr2h	equ	0xFDA
  6533                           fsr2l	equ	0xFD9
  6534                           status	equ	0xFD8
  6535                           
  6536 ;; *************** function __ic2_display_set_cgram_address *****************
  6537 ;; Defined at:
  6538 ;;		line 339 in file "i2c.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;  address         1    wreg     unsigned char 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  address         1   13[BANK0 ] unsigned char 
  6543 ;;  data_array      3   10[BANK0 ] unsigned char [3]
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  1    wreg      void 
  6546 ;; Registers used:
  6547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;Total ram usage:        4 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:   12
  6560 ;; This function calls:
  6561 ;;		__i2c_write
  6562 ;; This function is called by:
  6563 ;;		_i2c_display_program_custom_character
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	text11
  6568  00F502                     __ptext11:
  6569                           	opt stack 0
  6570  00F502                     __ic2_display_set_cgram_address:
  6571                           	opt stack 15
  6572                           
  6573                           ;incstack = 0
  6574                           ;__ic2_display_set_cgram_address@address stored from wreg
  6575  00F502  0100               	movlb	0	; () banked
  6576  00F504  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
  6577                           
  6578                           ;i2c.c: 341: uint8_t data_array[3];;i2c.c: 346: address &= 0b001111111;
  6579  00F506  0100               	movlb	0	; () banked
  6580  00F508  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;i2c.c: 347: data_array[0] = 0b00000000;
  6584  00F50A  0E00               	movlw	0
  6585  00F50C  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;i2c.c: 348: data_array[1] = 0b00111000;
  6589  00F50E  0E38               	movlw	56
  6590  00F510  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
  6591                           
  6592                           ;i2c.c: 349: data_array[2] = 0b01000000 | address;
  6593  00F512  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
  6594  00F514  0940               	iorlw	64
  6595  00F516  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;i2c.c: 352: _i2c_write(0b01111000, data_array, 3);
  6599  00F518  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
  6600  00F51A  6F65               	movwf	__i2c_write@data& (0+255),b
  6601  00F51C  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
  6602  00F51E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  6603  00F520  0E03               	movlw	3
  6604  00F522  6F67               	movwf	__i2c_write@length& (0+255),b
  6605  00F524  0E78               	movlw	120
  6606  00F526  EC3D  F078         	call	__i2c_write
  6607  00F52A  0012               	return		;funcret
  6608  00F52C                     __end_of__ic2_display_set_cgram_address:
  6609                           	opt stack 0
  6610                           tblptru	equ	0xFF8
  6611                           tblptrh	equ	0xFF7
  6612                           tblptrl	equ	0xFF6
  6613                           tablat	equ	0xFF5
  6614                           prodh	equ	0xFF4
  6615                           prodl	equ	0xFF3
  6616                           postinc0	equ	0xFEE
  6617                           wreg	equ	0xFE8
  6618                           postdec1	equ	0xFE5
  6619                           fsr1h	equ	0xFE2
  6620                           fsr1l	equ	0xFE1
  6621                           indf2	equ	0xFDF
  6622                           fsr2h	equ	0xFDA
  6623                           fsr2l	equ	0xFD9
  6624                           status	equ	0xFD8
  6625                           
  6626 ;; *************** function _i2c_display_init *****************
  6627 ;; Defined at:
  6628 ;;		line 297 in file "i2c.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;Total ram usage:       10 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:   12
  6649 ;; This function calls:
  6650 ;;		__i2c_write
  6651 ;; This function is called by:
  6652 ;;		_display_init
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text12
  6657  00F02A                     __ptext12:
  6658                           	opt stack 0
  6659  00F02A                     _i2c_display_init:
  6660                           	opt stack 16
  6661                           
  6662                           ;i2c.c: 299: uint8_t init_sequence[9] = {;i2c.c: 300: 0x3A,;i2c.c: 302: 0b00011110,;i2c.
      +                          c: 303: 0x39,;i2c.c: 305: 0b00001100,;i2c.c: 306: 0x74,;i2c.c: 307: 0b1011100,;i2c.c: 30
      +                          8: 0x6d,;i2c.c: 309: 0x0c,;i2c.c: 310: 0x01;i2c.c: 311: };
  6663                           
  6664                           ;incstack = 0
  6665  00F02A  EE22  F0B8         	lfsr	2,i2c_display_init@F6892
  6666  00F02E  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
  6667  00F032  0E08               	movlw	8
  6668  00F034                     u16991:
  6669  00F034  CFDB FFE3          	movff	plusw2,plusw1
  6670  00F038  06E8               	decf	wreg,f,c
  6671  00F03A  E2FC               	bc	u16991
  6672                           
  6673                           ;i2c.c: 314: LATAbits.LA3 = 0;
  6674  00F03C  9689               	bcf	3977,3,c	;volatile
  6675                           
  6676                           ;i2c.c: 315: _delay((unsigned long)((10)*(8000000/4000.0)));
  6677  00F03E  0E1A               	movlw	26
  6678  00F040  0100               	movlb	0	; () banked
  6679  00F042  6F6A               	movwf	??_i2c_display_init& (0+255),b
  6680  00F044  0EF8               	movlw	248
  6681  00F046                     u19757:
  6682  00F046  2EE8               	decfsz	wreg,f,c
  6683  00F048  D7FE               	bra	u19757
  6684  00F04A  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
  6685  00F04C  D7FC               	bra	u19757
  6686  00F04E  F000               	nop	
  6687                           
  6688                           ;i2c.c: 316: LATAbits.LA3 = 1;
  6689  00F050  8689               	bsf	3977,3,c	;volatile
  6690                           
  6691                           ;i2c.c: 317: _delay((unsigned long)((50)*(8000000/4000.0)));
  6692  00F052  0E82               	movlw	130
  6693  00F054  0100               	movlb	0	; () banked
  6694  00F056  6F6A               	movwf	??_i2c_display_init& (0+255),b
  6695  00F058  0EDD               	movlw	221
  6696  00F05A                     u19767:
  6697  00F05A  2EE8               	decfsz	wreg,f,c
  6698  00F05C  D7FE               	bra	u19767
  6699  00F05E  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
  6700  00F060  D7FC               	bra	u19767
  6701  00F062  D000               	nop2	
  6702                           
  6703                           ;i2c.c: 323: _i2c_write(0b01111000, &init_sequence[0], 9);
  6704  00F064  0E6B               	movlw	low i2c_display_init@init_sequence
  6705  00F066  0100               	movlb	0	; () banked
  6706  00F068  6F65               	movwf	__i2c_write@data& (0+255),b
  6707  00F06A  0E00               	movlw	high i2c_display_init@init_sequence
  6708  00F06C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  6709  00F06E  0E09               	movlw	9
  6710  00F070  6F67               	movwf	__i2c_write@length& (0+255),b
  6711  00F072  0E78               	movlw	120
  6712  00F074  EC3D  F078         	call	__i2c_write
  6713  00F078  0012               	return		;funcret
  6714  00F07A                     __end_of_i2c_display_init:
  6715                           	opt stack 0
  6716                           tblptru	equ	0xFF8
  6717                           tblptrh	equ	0xFF7
  6718                           tblptrl	equ	0xFF6
  6719                           tablat	equ	0xFF5
  6720                           prodh	equ	0xFF4
  6721                           prodl	equ	0xFF3
  6722                           postinc0	equ	0xFEE
  6723                           wreg	equ	0xFE8
  6724                           postdec1	equ	0xFE5
  6725                           plusw1	equ	0xFE3
  6726                           fsr1h	equ	0xFE2
  6727                           fsr1l	equ	0xFE1
  6728                           indf2	equ	0xFDF
  6729                           plusw2	equ	0xFDB
  6730                           fsr2h	equ	0xFDA
  6731                           fsr2l	equ	0xFD9
  6732                           status	equ	0xFD8
  6733                           
  6734 ;; *************** function __i2c_write *****************
  6735 ;; Defined at:
  6736 ;;		line 83 in file "i2c.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  slave_addres    1    wreg     unsigned char 
  6739 ;;  data            2    5[BANK0 ] PTR unsigned char 
  6740 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
  6741 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
  6742 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
  6743 ;;  length          1    7[BANK0 ] unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  slave_addres    1    8[BANK0 ] unsigned char 
  6746 ;;  cntr            1    9[BANK0 ] unsigned char 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6756 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6760 ;;Total ram usage:        5 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:   11
  6763 ;; This function calls:
  6764 ;;		__i2c_send
  6765 ;;		__i2c_start
  6766 ;;		__i2c_stop
  6767 ;;		__i2c_wait_idle
  6768 ;; This function is called by:
  6769 ;;		_i2c_display_init
  6770 ;;		__ic2_display_set_ddram_address
  6771 ;;		__ic2_display_set_cgram_address
  6772 ;;		_i2c_display_program_custom_character
  6773 ;;		_i2c_adc_start
  6774 ;;		_i2c_eeprom_writeByte
  6775 ;;		_i2c_eeprom_readByte
  6776 ;;		_i2c_eeprom_write
  6777 ;;		_i2c_eeprom_read
  6778 ;;		__i2c_display_send_init_sequence
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text13
  6783  00F07A                     __ptext13:
  6784                           	opt stack 0
  6785  00F07A                     __i2c_write:
  6786                           	opt stack 15
  6787                           
  6788                           ;incstack = 0
  6789                           ;__i2c_write@slave_address stored from wreg
  6790  00F07A  0100               	movlb	0	; () banked
  6791  00F07C  6F68               	movwf	__i2c_write@slave_address& (0+255),b
  6792                           
  6793                           ;i2c.c: 85: uint8_t cntr;;i2c.c: 87: _i2c_wait_idle();
  6794  00F07E  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6795                           
  6796                           ;i2c.c: 88: _i2c_start();
  6797  00F082  EC37  F07B         	call	__i2c_start	;wreg free
  6798                           
  6799                           ;i2c.c: 89: _i2c_wait_idle();
  6800  00F086  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6801                           
  6802                           ;i2c.c: 90: _i2c_send(slave_address);
  6803  00F08A  0100               	movlb	0	; () banked
  6804  00F08C  5168               	movf	__i2c_write@slave_address& (0+255),w,b
  6805  00F08E  EC29  F07B         	call	__i2c_send
  6806                           
  6807                           ;i2c.c: 91: _i2c_wait_idle();
  6808  00F092  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6809                           
  6810                           ;i2c.c: 93: for(cntr=0; cntr<length; ++cntr)
  6811  00F096  0E00               	movlw	0
  6812  00F098  0100               	movlb	0	; () banked
  6813  00F09A  6F69               	movwf	__i2c_write@cntr& (0+255),b
  6814  00F09C  D00F               	goto	l1114
  6815  00F09E                     
  6816                           ; BSR set to: 0
  6817                           ;i2c.c: 94: {;i2c.c: 95: _i2c_send(data[cntr]);
  6818                           
  6819                           ; BSR set to: 0
  6820  00F09E  5169               	movf	__i2c_write@cntr& (0+255),w,b
  6821  00F0A0  0D01               	mullw	1
  6822  00F0A2  50F3               	movf	prodl,w,c
  6823  00F0A4  2565               	addwf	__i2c_write@data& (0+255),w,b
  6824  00F0A6  6ED9               	movwf	fsr2l,c
  6825  00F0A8  50F4               	movf	prodh,w,c
  6826  00F0AA  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
  6827  00F0AC  6EDA               	movwf	fsr2h,c
  6828  00F0AE  50DF               	movf	indf2,w,c
  6829  00F0B0  EC29  F07B         	call	__i2c_send
  6830                           
  6831                           ;i2c.c: 96: _i2c_wait_idle();
  6832  00F0B4  ECF5  F075         	call	__i2c_wait_idle	;wreg free
  6833  00F0B8  0100               	movlb	0	; () banked
  6834  00F0BA  2B69               	incf	__i2c_write@cntr& (0+255),f,b
  6835  00F0BC                     l1114:
  6836                           
  6837                           ; BSR set to: 0
  6838                           
  6839                           ; BSR set to: 0
  6840  00F0BC  5167               	movf	__i2c_write@length& (0+255),w,b
  6841  00F0BE  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
  6842  00F0C0  A0D8               	btfss	status,0,c
  6843  00F0C2  D7ED               	goto	l1115
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;i2c.c: 97: };i2c.c: 99: _i2c_stop();
  6847                           
  6848                           ; BSR set to: 0
  6849  00F0C4  EC33  F07B         	call	__i2c_stop	;wreg free
  6850  00F0C8  0012               	return		;funcret
  6851  00F0CA                     __end_of__i2c_write:
  6852                           	opt stack 0
  6853                           tblptru	equ	0xFF8
  6854                           tblptrh	equ	0xFF7
  6855                           tblptrl	equ	0xFF6
  6856                           tablat	equ	0xFF5
  6857                           prodh	equ	0xFF4
  6858                           prodl	equ	0xFF3
  6859                           postinc0	equ	0xFEE
  6860                           wreg	equ	0xFE8
  6861                           postdec1	equ	0xFE5
  6862                           plusw1	equ	0xFE3
  6863                           fsr1h	equ	0xFE2
  6864                           fsr1l	equ	0xFE1
  6865                           indf2	equ	0xFDF
  6866                           plusw2	equ	0xFDB
  6867                           fsr2h	equ	0xFDA
  6868                           fsr2l	equ	0xFD9
  6869                           status	equ	0xFD8
  6870                           
  6871 ;; *************** function __i2c_wait_idle *****************
  6872 ;; Defined at:
  6873 ;;		line 39 in file "i2c.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;		None
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2, status,0
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6889 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6890 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;Total ram usage:        5 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; Hardware stack levels required when called:   10
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		__i2c_write
  6898 ;;		_i2c_display_write_fixed
  6899 ;;		__i2c_read
  6900 ;;		_i2c_adc_read
  6901 ;;		__i2c_eeprom_busy
  6902 ;;		_i2c_display_write
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text14
  6907  00EBEA                     __ptext14:
  6908                           	opt stack 0
  6909  00EBEA                     __i2c_wait_idle:
  6910                           	opt stack 17
  6911                           
  6912                           ;i2c.c: 41: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
  6913                           
  6914                           ;incstack = 0
  6915  00EBEA  A4C7               	btfss	4039,2,c	;volatile
  6916  00EBEC  D004               	goto	u15960
  6917  00EBEE  0100               	movlb	0	; () banked
  6918  00EBF0  6B60               	clrf	??__i2c_wait_idle& (0+255),b
  6919  00EBF2  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
  6920  00EBF4  D002               	goto	u15968
  6921  00EBF6                     u15960:
  6922  00EBF6  0100               	movlb	0	; () banked
  6923  00EBF8  6B60               	clrf	??__i2c_wait_idle& (0+255),b
  6924  00EBFA                     u15968:
  6925  00EBFA  A0C5               	btfss	4037,0,c	;volatile
  6926  00EBFC  D003               	goto	u15970
  6927  00EBFE  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
  6928  00EC00  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
  6929  00EC02  D002               	goto	u15978
  6930  00EC04                     u15970:
  6931  00EC04  0100               	movlb	0	; () banked
  6932  00EC06  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
  6933  00EC08                     u15978:
  6934  00EC08  A2C5               	btfss	4037,1,c	;volatile
  6935  00EC0A  D003               	goto	u15980
  6936  00EC0C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
  6937  00EC0E  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
  6938  00EC10  D002               	goto	u15988
  6939  00EC12                     u15980:
  6940  00EC12  0100               	movlb	0	; () banked
  6941  00EC14  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
  6942  00EC16                     u15988:
  6943  00EC16  A4C5               	btfss	4037,2,c	;volatile
  6944  00EC18  D003               	goto	u15990
  6945  00EC1A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
  6946  00EC1C  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
  6947  00EC1E  D002               	goto	u15998
  6948  00EC20                     u15990:
  6949  00EC20  0100               	movlb	0	; () banked
  6950  00EC22  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
  6951  00EC24                     u15998:
  6952  00EC24  A6C5               	btfss	4037,3,c	;volatile
  6953  00EC26  D003               	goto	u16000
  6954  00EC28  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
  6955  00EC2A  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
  6956  00EC2C  D002               	goto	u16008
  6957  00EC2E                     u16000:
  6958  00EC2E  0100               	movlb	0	; () banked
  6959  00EC30  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
  6960  00EC32                     u16008:
  6961  00EC32  A8C5               	btfss	4037,4,c	;volatile
  6962  00EC34  D002               	goto	u16010
  6963  00EC36  0E01               	movlw	1
  6964  00EC38  D001               	goto	u16016
  6965  00EC3A                     u16010:
  6966  00EC3A  0E00               	movlw	0
  6967  00EC3C                     u16016:
  6968  00EC3C  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
  6969  00EC3E  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
  6970  00EC40  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
  6971  00EC42  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
  6972  00EC44  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
  6973  00EC46  0900               	iorlw	0
  6974  00EC48  B4D8               	btfsc	status,2,c
  6975  00EC4A  0012               	return	
  6976  00EC4C  D7CE               	goto	__i2c_wait_idle
  6977  00EC4E                     __end_of__i2c_wait_idle:
  6978                           	opt stack 0
  6979                           tblptru	equ	0xFF8
  6980                           tblptrh	equ	0xFF7
  6981                           tblptrl	equ	0xFF6
  6982                           tablat	equ	0xFF5
  6983                           prodh	equ	0xFF4
  6984                           prodl	equ	0xFF3
  6985                           postinc0	equ	0xFEE
  6986                           wreg	equ	0xFE8
  6987                           postdec1	equ	0xFE5
  6988                           plusw1	equ	0xFE3
  6989                           fsr1h	equ	0xFE2
  6990                           fsr1l	equ	0xFE1
  6991                           indf2	equ	0xFDF
  6992                           plusw2	equ	0xFDB
  6993                           fsr2h	equ	0xFDA
  6994                           fsr2l	equ	0xFD9
  6995                           status	equ	0xFD8
  6996                           
  6997 ;; *************** function __i2c_stop *****************
  6998 ;; Defined at:
  6999 ;;		line 62 in file "i2c.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		None
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;Total ram usage:        0 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:   10
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		__i2c_write
  7024 ;;		_i2c_display_write_fixed
  7025 ;;		__i2c_read
  7026 ;;		_i2c_adc_read
  7027 ;;		__i2c_eeprom_busy
  7028 ;;		_i2c_display_write
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text15
  7033  00F666                     __ptext15:
  7034                           	opt stack 0
  7035  00F666                     __i2c_stop:
  7036                           	opt stack 17
  7037                           
  7038                           ;i2c.c: 64: SSP1CON2bits.PEN = 1;
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;incstack = 0
  7042  00F666  84C5               	bsf	4037,2,c	;volatile
  7043  00F668  A4C5               	btfss	4037,2,c	;volatile
  7044  00F66A  0012               	return	
  7045  00F66C  D7FD               	goto	l1097
  7046  00F66E                     __end_of__i2c_stop:
  7047                           	opt stack 0
  7048                           tblptru	equ	0xFF8
  7049                           tblptrh	equ	0xFF7
  7050                           tblptrl	equ	0xFF6
  7051                           tablat	equ	0xFF5
  7052                           prodh	equ	0xFF4
  7053                           prodl	equ	0xFF3
  7054                           postinc0	equ	0xFEE
  7055                           wreg	equ	0xFE8
  7056                           postdec1	equ	0xFE5
  7057                           plusw1	equ	0xFE3
  7058                           fsr1h	equ	0xFE2
  7059                           fsr1l	equ	0xFE1
  7060                           indf2	equ	0xFDF
  7061                           plusw2	equ	0xFDB
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8
  7065                           
  7066 ;; *************** function __i2c_start *****************
  7067 ;; Defined at:
  7068 ;;		line 44 in file "i2c.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;		None
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		None
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;Total ram usage:        0 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:   10
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		__i2c_write
  7093 ;;		_i2c_display_write_fixed
  7094 ;;		__i2c_read
  7095 ;;		_i2c_adc_read
  7096 ;;		__i2c_eeprom_busy
  7097 ;;		_i2c_display_write
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           	psect	text16
  7102  00F66E                     __ptext16:
  7103                           	opt stack 0
  7104  00F66E                     __i2c_start:
  7105                           	opt stack 17
  7106                           
  7107                           ;i2c.c: 46: SSP1CON2bits.SEN=1;
  7108                           
  7109                           ;incstack = 0
  7110  00F66E  80C5               	bsf	4037,0,c	;volatile
  7111  00F670  A0C5               	btfss	4037,0,c	;volatile
  7112  00F672  0012               	return	
  7113  00F674  D7FD               	goto	l1082
  7114  00F676                     __end_of__i2c_start:
  7115                           	opt stack 0
  7116                           tblptru	equ	0xFF8
  7117                           tblptrh	equ	0xFF7
  7118                           tblptrl	equ	0xFF6
  7119                           tablat	equ	0xFF5
  7120                           prodh	equ	0xFF4
  7121                           prodl	equ	0xFF3
  7122                           postinc0	equ	0xFEE
  7123                           wreg	equ	0xFE8
  7124                           postdec1	equ	0xFE5
  7125                           plusw1	equ	0xFE3
  7126                           fsr1h	equ	0xFE2
  7127                           fsr1l	equ	0xFE1
  7128                           indf2	equ	0xFDF
  7129                           plusw2	equ	0xFDB
  7130                           fsr2h	equ	0xFDA
  7131                           fsr2l	equ	0xFD9
  7132                           status	equ	0xFD8
  7133                           
  7134 ;; *************** function __i2c_send *****************
  7135 ;; Defined at:
  7136 ;;		line 50 in file "i2c.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;  dat             1    wreg     unsigned char 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;  dat             1    0[BANK0 ] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7153 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;Total ram usage:        1 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:   10
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		__i2c_write
  7161 ;;		_i2c_display_write_fixed
  7162 ;;		__i2c_read
  7163 ;;		_i2c_adc_read
  7164 ;;		__i2c_eeprom_busy
  7165 ;;		_i2c_display_write
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text17
  7170  00F652                     __ptext17:
  7171                           	opt stack 0
  7172  00F652                     __i2c_send:
  7173                           	opt stack 17
  7174                           
  7175                           ;incstack = 0
  7176                           ;__i2c_send@dat stored from wreg
  7177  00F652  0100               	movlb	0	; () banked
  7178  00F654  6F60               	movwf	__i2c_send@dat& (0+255),b
  7179                           
  7180                           ;i2c.c: 52: SSP1BUF = dat;
  7181  00F656  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
  7182  00F65A  0012               	return		;funcret
  7183  00F65C                     __end_of__i2c_send:
  7184                           	opt stack 0
  7185                           tblptru	equ	0xFF8
  7186                           tblptrh	equ	0xFF7
  7187                           tblptrl	equ	0xFF6
  7188                           tablat	equ	0xFF5
  7189                           prodh	equ	0xFF4
  7190                           prodl	equ	0xFF3
  7191                           postinc0	equ	0xFEE
  7192                           wreg	equ	0xFE8
  7193                           postdec1	equ	0xFE5
  7194                           plusw1	equ	0xFE3
  7195                           fsr1h	equ	0xFE2
  7196                           fsr1l	equ	0xFE1
  7197                           indf2	equ	0xFDF
  7198                           plusw2	equ	0xFDB
  7199                           fsr2h	equ	0xFDA
  7200                           fsr2l	equ	0xFD9
  7201                           status	equ	0xFD8
  7202                           
  7203 ;; *************** function __system_timer0_init *****************
  7204 ;; Defined at:
  7205 ;;		line 120 in file "os.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:   10
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_system_init
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text18
  7234  00F4AA                     __ptext18:
  7235                           	opt stack 0
  7236  00F4AA                     __system_timer0_init:
  7237                           	opt stack 19
  7238                           
  7239                           ;os.c: 123: T0CONbits.T0CS = 0;
  7240                           
  7241                           ;incstack = 0
  7242  00F4AA  9AD5               	bcf	4053,5,c	;volatile
  7243                           
  7244                           ;os.c: 125: T0CONbits.T08BIT = 0;
  7245  00F4AC  9CD5               	bcf	4053,6,c	;volatile
  7246                           
  7247                           ;os.c: 127: T0CONbits.T0PS2 = 0;
  7248  00F4AE  94D5               	bcf	4053,2,c	;volatile
  7249                           
  7250                           ;os.c: 128: T0CONbits.T0PS1 = 1;
  7251  00F4B0  82D5               	bsf	4053,1,c	;volatile
  7252                           
  7253                           ;os.c: 129: T0CONbits.T0PS0 = 0;
  7254  00F4B2  90D5               	bcf	4053,0,c	;volatile
  7255                           
  7256                           ;os.c: 131: T0CONbits.PSA = 0;
  7257  00F4B4  96D5               	bcf	4053,3,c	;volatile
  7258                           
  7259                           ;os.c: 133: TMR0H = 0xFA;
  7260  00F4B6  0EFA               	movlw	250
  7261  00F4B8  6ED7               	movwf	4055,c	;volatile
  7262                           
  7263                           ;os.c: 134: TMR0L = 0x24;
  7264  00F4BA  0E24               	movlw	36
  7265  00F4BC  6ED6               	movwf	4054,c	;volatile
  7266                           
  7267                           ;os.c: 136: T0CONbits.TMR0ON = 1;
  7268  00F4BE  8ED5               	bsf	4053,7,c	;volatile
  7269                           
  7270                           ;os.c: 139: INTCONbits.TMR0IF = 0;
  7271  00F4C0  94F2               	bcf	intcon,2,c	;volatile
  7272                           
  7273                           ;os.c: 140: INTCONbits.TMR0IE = 1;
  7274  00F4C2  8AF2               	bsf	intcon,5,c	;volatile
  7275                           
  7276                           ;os.c: 141: INTCONbits.GIE = 1;
  7277  00F4C4  8EF2               	bsf	intcon,7,c	;volatile
  7278                           
  7279                           ;os.c: 144: os.subTimeSlot = 0;
  7280  00F4C6  0E00               	movlw	0
  7281  00F4C8  0100               	movlb	0	; () banked
  7282  00F4CA  6FCC               	movwf	_os& (0+255),b	;volatile
  7283                           
  7284                           ;os.c: 145: os.timeSlot = 0;
  7285  00F4CC  0E00               	movlw	0
  7286  00F4CE  6FCD               	movwf	(_os+1)& (0+255),b	;volatile
  7287                           
  7288                           ;os.c: 146: os.done = 0;
  7289  00F4D0  0E00               	movlw	0
  7290  00F4D2  6FCE               	movwf	(_os+2)& (0+255),b	;volatile
  7291                           
  7292                           ; BSR set to: 0
  7293  00F4D4  0012               	return		;funcret
  7294  00F4D6                     __end_of__system_timer0_init:
  7295                           	opt stack 0
  7296                           tblptru	equ	0xFF8
  7297                           tblptrh	equ	0xFF7
  7298                           tblptrl	equ	0xFF6
  7299                           tablat	equ	0xFF5
  7300                           prodh	equ	0xFF4
  7301                           prodl	equ	0xFF3
  7302                           intcon	equ	0xFF2
  7303                           postinc0	equ	0xFEE
  7304                           wreg	equ	0xFE8
  7305                           postdec1	equ	0xFE5
  7306                           plusw1	equ	0xFE3
  7307                           fsr1h	equ	0xFE2
  7308                           fsr1l	equ	0xFE1
  7309                           indf2	equ	0xFDF
  7310                           plusw2	equ	0xFDB
  7311                           fsr2h	equ	0xFDA
  7312                           fsr2l	equ	0xFD9
  7313                           status	equ	0xFD8
  7314                           
  7315 ;; *************** function __system_pin_setup *****************
  7316 ;; Defined at:
  7317 ;;		line 57 in file "os.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;		None
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;		None
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  1    wreg      void 
  7324 ;; Registers used:
  7325 ;;		wreg, status,2
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;Total ram usage:        0 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:   10
  7338 ;; This function calls:
  7339 ;;		Nothing
  7340 ;; This function is called by:
  7341 ;;		_system_init
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text19
  7346  00ED10                     __ptext19:
  7347                           	opt stack 0
  7348  00ED10                     __system_pin_setup:
  7349                           	opt stack 19
  7350                           
  7351                           ;os.c: 59: TRISBbits.TRISB3 = 1;
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;incstack = 0
  7355  00ED10  8693               	bsf	3987,3,c	;volatile
  7356                           
  7357                           ;os.c: 60: ANCON1bits.PCFG9 = 0;
  7358  00ED12  010F               	movlb	15	; () banked
  7359  00ED14  9349               	bcf	73,1,b	;volatile
  7360                           
  7361                           ;os.c: 62: TRISCbits.TRISC6 = 0;
  7362  00ED16  9C94               	bcf	3988,6,c	;volatile
  7363                           
  7364                           ;os.c: 63: LATCbits.LC6 = 0;
  7365  00ED18  9C8B               	bcf	3979,6,c	;volatile
  7366                           
  7367                           ;os.c: 65: TRISCbits.TRISC6 = 0;
  7368  00ED1A  9C94               	bcf	3988,6,c	;volatile
  7369                           
  7370                           ;os.c: 66: LATCbits.LC6 = 0;
  7371  00ED1C  9C8B               	bcf	3979,6,c	;volatile
  7372                           
  7373                           ;os.c: 68: TRISAbits.TRISA3 = 0;
  7374  00ED1E  9692               	bcf	3986,3,c	;volatile
  7375                           
  7376                           ;os.c: 69: LATAbits.LA3 = 0;
  7377  00ED20  9689               	bcf	3977,3,c	;volatile
  7378                           
  7379                           ;os.c: 71: TRISCbits.TRISC1 = 0;
  7380  00ED22  9294               	bcf	3988,1,c	;volatile
  7381                           
  7382                           ;os.c: 72: LATCbits.LC1 = 0;
  7383  00ED24  928B               	bcf	3979,1,c	;volatile
  7384                           
  7385                           ;os.c: 77: TRISBbits.TRISB5 = 1;
  7386  00ED26  8A93               	bsf	3987,5,c	;volatile
  7387                           
  7388                           ;os.c: 78: TRISBbits.TRISB4 = 1;
  7389  00ED28  8893               	bsf	3987,4,c	;volatile
  7390                           
  7391                           ;os.c: 80: TRISBbits.TRISB0 = 0;
  7392  00ED2A  9093               	bcf	3987,0,c	;volatile
  7393                           
  7394                           ;os.c: 81: LATBbits.LB0 = 1;
  7395  00ED2C  808A               	bsf	3978,0,c	;volatile
  7396                           
  7397                           ;os.c: 83: TRISBbits.TRISB2 = 0;
  7398  00ED2E  9493               	bcf	3987,2,c	;volatile
  7399                           
  7400                           ;os.c: 84: LATBbits.LB2 = 0;
  7401  00ED30  948A               	bcf	3978,2,c	;volatile
  7402                           
  7403                           ;os.c: 86: TRISBbits.TRISB1 = 0;
  7404  00ED32  9293               	bcf	3987,1,c	;volatile
  7405                           
  7406                           ;os.c: 87: LATBbits.LB1 = 0;
  7407  00ED34  928A               	bcf	3978,1,c	;volatile
  7408                           
  7409                           ; BSR set to: 15
  7410                           ;os.c: 88: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7411  00ED36  0E55               	movlw	85
  7412  00ED38  6EA7               	movwf	4007,c	;volsfr
  7413  00ED3A  0EAA               	movlw	170
  7414  00ED3C  6EA7               	movwf	4007,c	;volsfr
  7415                           
  7416                           ; BSR set to: 15
  7417  00ED3E  010E               	movlb	14	; () banked
  7418  00ED40  91BF               	bcf	191,0,b	;volatile
  7419                           
  7420                           ;os.c: 89: RPOR4 = 14;
  7421  00ED42  0E0E               	movlw	14
  7422  00ED44  6FC4               	movwf	196,b	;volatile
  7423                           
  7424                           ;os.c: 90: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  7425  00ED46  0E55               	movlw	85
  7426  00ED48  6EA7               	movwf	4007,c	;volsfr
  7427  00ED4A  0EAA               	movlw	170
  7428  00ED4C  6EA7               	movwf	4007,c	;volsfr
  7429                           
  7430                           ; BSR set to: 14
  7431  00ED4E  81BF               	bsf	191,0,b	;volatile
  7432                           
  7433                           ; BSR set to: 14
  7434                           ;os.c: 92: TRISDbits.TRISD2 = 1;
  7435  00ED50  8495               	bsf	3989,2,c	;volatile
  7436                           
  7437                           ; BSR set to: 14
  7438                           ;os.c: 95: TRISEbits.TRISE2 = 1;
  7439  00ED52  8496               	bsf	3990,2,c	;volatile
  7440                           
  7441                           ; BSR set to: 14
  7442                           ;os.c: 96: ANCON0bits.PCFG7 = 1;
  7443  00ED54  010F               	movlb	15	; () banked
  7444  00ED56  8F48               	bsf	72,7,b	;volatile
  7445                           
  7446                           ; BSR set to: 15
  7447                           ;os.c: 98: TRISEbits.TRISE0 = 1;
  7448  00ED58  8096               	bsf	3990,0,c	;volatile
  7449                           
  7450                           ; BSR set to: 15
  7451                           ;os.c: 99: ANCON0bits.PCFG5 = 1;
  7452  00ED5A  8B48               	bsf	72,5,b	;volatile
  7453                           
  7454                           ; BSR set to: 15
  7455                           ;os.c: 101: TRISEbits.TRISE1 = 1;
  7456  00ED5C  8296               	bsf	3990,1,c	;volatile
  7457                           
  7458                           ; BSR set to: 15
  7459                           ;os.c: 102: ANCON0bits.PCFG6 = 1;
  7460  00ED5E  8D48               	bsf	72,6,b	;volatile
  7461                           
  7462                           ; BSR set to: 15
  7463                           ;os.c: 104: TRISAbits.TRISA0 = 1;
  7464  00ED60  8092               	bsf	3986,0,c	;volatile
  7465                           
  7466                           ; BSR set to: 15
  7467                           ;os.c: 105: ANCON0bits.PCFG0 = 1;
  7468  00ED62  8148               	bsf	72,0,b	;volatile
  7469                           
  7470                           ; BSR set to: 15
  7471                           ;os.c: 107: TRISAbits.TRISA2 = 1;
  7472  00ED64  8492               	bsf	3986,2,c	;volatile
  7473                           
  7474                           ; BSR set to: 15
  7475                           ;os.c: 108: ANCON0bits.PCFG2 = 1;
  7476  00ED66  8548               	bsf	72,2,b	;volatile
  7477                           
  7478                           ; BSR set to: 15
  7479                           ;os.c: 110: TRISAbits.TRISA1 = 1;
  7480  00ED68  8292               	bsf	3986,1,c	;volatile
  7481                           
  7482                           ; BSR set to: 15
  7483                           ;os.c: 111: ANCON0bits.PCFG1 = 1;
  7484  00ED6A  8348               	bsf	72,1,b	;volatile
  7485                           
  7486                           ; BSR set to: 15
  7487  00ED6C  0012               	return		;funcret
  7488  00ED6E                     __end_of__system_pin_setup:
  7489                           	opt stack 0
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           prodh	equ	0xFF4
  7495                           prodl	equ	0xFF3
  7496                           intcon	equ	0xFF2
  7497                           postinc0	equ	0xFEE
  7498                           wreg	equ	0xFE8
  7499                           postdec1	equ	0xFE5
  7500                           plusw1	equ	0xFE3
  7501                           fsr1h	equ	0xFE2
  7502                           fsr1l	equ	0xFE1
  7503                           indf2	equ	0xFDF
  7504                           plusw2	equ	0xFDB
  7505                           fsr2h	equ	0xFDA
  7506                           fsr2l	equ	0xFD9
  7507                           status	equ	0xFD8
  7508                           
  7509 ;; *************** function __backlight_init *****************
  7510 ;; Defined at:
  7511 ;;		line 151 in file "os.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;		None
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		None
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;Total ram usage:        0 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:   10
  7532 ;; This function calls:
  7533 ;;		Nothing
  7534 ;; This function is called by:
  7535 ;;		_system_init
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text20
  7540  00F676                     __ptext20:
  7541                           	opt stack 0
  7542  00F676                     __backlight_init:
  7543                           	opt stack 19
  7544                           
  7545                           ;os.c: 153: LATCbits.LC1 = 1;
  7546                           
  7547                           ; BSR set to: 15
  7548                           ;incstack = 0
  7549  00F676  828B               	bsf	3979,1,c	;volatile
  7550  00F678  0012               	return		;funcret
  7551  00F67A                     __end_of__backlight_init:
  7552                           	opt stack 0
  7553                           tblptru	equ	0xFF8
  7554                           tblptrh	equ	0xFF7
  7555                           tblptrl	equ	0xFF6
  7556                           tablat	equ	0xFF5
  7557                           prodh	equ	0xFF4
  7558                           prodl	equ	0xFF3
  7559                           intcon	equ	0xFF2
  7560                           postinc0	equ	0xFEE
  7561                           wreg	equ	0xFE8
  7562                           postdec1	equ	0xFE5
  7563                           plusw1	equ	0xFE3
  7564                           fsr1h	equ	0xFE2
  7565                           fsr1l	equ	0xFE1
  7566                           indf2	equ	0xFDF
  7567                           plusw2	equ	0xFDB
  7568                           fsr2h	equ	0xFDA
  7569                           fsr2l	equ	0xFD9
  7570                           status	equ	0xFD8
  7571                           
  7572 ;; *************** function _motor_process_cue *****************
  7573 ;; Defined at:
  7574 ;;		line 116 in file "motor.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;		None
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;		None
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;Total ram usage:        0 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; Hardware stack levels required when called:   11
  7595 ;; This function calls:
  7596 ;;		__motor_run
  7597 ;;		_motor_items_in_cue
  7598 ;; This function is called by:
  7599 ;;		_main
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           	psect	text21
  7604  00EA26                     __ptext21:
  7605                           	opt stack 0
  7606  00EA26                     _motor_process_cue:
  7607                           	opt stack 19
  7608                           
  7609                           ;motor.c: 118: if(motor_items_in_cue()==0)
  7610                           
  7611                           ;incstack = 0
  7612  00EA26  EC23  F07B         	call	_motor_items_in_cue	;wreg free
  7613  00EA2A  0900               	iorlw	0
  7614  00EA2C  B4D8               	btfsc	status,2,c
  7615  00EA2E  0012               	return	
  7616                           
  7617                           ;motor.c: 123: else if(os.busy)
  7618                           
  7619                           ;motor.c: 122: }
  7620                           
  7621                           ;motor.c: 119: {;motor.c: 121: return;
  7622  00EA30  0100               	movlb	0	; () banked
  7623  00EA32  51DA               	movf	(_os+14)& (0+255),w,b	;volatile
  7624  00EA34  A4D8               	btfss	status,2,c
  7625  00EA36  0012               	return	
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;motor.c: 128: else;motor.c: 129: {;motor.c: 131: _motor_run(;motor.c: 132: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 133: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 134: motor_command_cue[motor_cue_read_index].speed;motor.c: 135:
      +                           );
  7629                           
  7630                           ; BSR set to: 0
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;motor.c: 127: }
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;motor.c: 124: {;motor.c: 126: return;
  7637  00EA38  51F7               	movf	_motor_cue_read_index& (0+255),w,b
  7638  00EA3A  0D07               	mullw	7
  7639  00EA3C  0E01               	movlw	1
  7640  00EA3E  26F3               	addwf	prodl,f,c
  7641  00EA40  0E00               	movlw	0
  7642  00EA42  22F4               	addwfc	prodh,f,c
  7643  00EA44  0E00               	movlw	low _motor_command_cue
  7644  00EA46  24F3               	addwf	prodl,w,c
  7645  00EA48  6ED9               	movwf	fsr2l,c
  7646  00EA4A  0E02               	movlw	high _motor_command_cue
  7647  00EA4C  20F4               	addwfc	prodh,w,c
  7648  00EA4E  6EDA               	movwf	fsr2h,c
  7649  00EA50  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
  7650  00EA54  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
  7651  00EA58  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
  7652  00EA5C  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
  7653  00EA60  51F7               	movf	_motor_cue_read_index& (0+255),w,b
  7654  00EA62  0D07               	mullw	7
  7655  00EA64  0E05               	movlw	5
  7656  00EA66  26F3               	addwf	prodl,f,c
  7657  00EA68  0E00               	movlw	0
  7658  00EA6A  22F4               	addwfc	prodh,f,c
  7659  00EA6C  0E00               	movlw	low _motor_command_cue
  7660  00EA6E  24F3               	addwf	prodl,w,c
  7661  00EA70  6ED9               	movwf	fsr2l,c
  7662  00EA72  0E02               	movlw	high _motor_command_cue
  7663  00EA74  20F4               	addwfc	prodh,w,c
  7664  00EA76  6EDA               	movwf	fsr2h,c
  7665  00EA78  CFDE F064          	movff	postinc2,__motor_run@speed
  7666  00EA7C  CFDD F065          	movff	postdec2,__motor_run@speed+1
  7667  00EA80  51F7               	movf	_motor_cue_read_index& (0+255),w,b
  7668  00EA82  0D07               	mullw	7
  7669  00EA84  0E00               	movlw	low _motor_command_cue
  7670  00EA86  24F3               	addwf	prodl,w,c
  7671  00EA88  6ED9               	movwf	fsr2l,c
  7672  00EA8A  0E02               	movlw	high _motor_command_cue
  7673  00EA8C  20F4               	addwfc	prodh,w,c
  7674  00EA8E  6EDA               	movwf	fsr2h,c
  7675  00EA90  50DF               	movf	indf2,w,c
  7676  00EA92  ECA5  F064         	call	__motor_run
  7677                           
  7678                           ;motor.c: 137: ++motor_cue_read_index;
  7679  00EA96  0100               	movlb	0	; () banked
  7680  00EA98  2BF7               	incf	_motor_cue_read_index& (0+255),f,b
  7681                           
  7682                           ; BSR set to: 0
  7683  00EA9A  0012               	return	
  7684  00EA9C                     __end_of_motor_process_cue:
  7685                           	opt stack 0
  7686                           tblptru	equ	0xFF8
  7687                           tblptrh	equ	0xFF7
  7688                           tblptrl	equ	0xFF6
  7689                           tablat	equ	0xFF5
  7690                           prodh	equ	0xFF4
  7691                           prodl	equ	0xFF3
  7692                           intcon	equ	0xFF2
  7693                           postinc0	equ	0xFEE
  7694                           wreg	equ	0xFE8
  7695                           postdec1	equ	0xFE5
  7696                           plusw1	equ	0xFE3
  7697                           fsr1h	equ	0xFE2
  7698                           fsr1l	equ	0xFE1
  7699                           indf2	equ	0xFDF
  7700                           postinc2	equ	0xFDE
  7701                           postdec2	equ	0xFDD
  7702                           plusw2	equ	0xFDB
  7703                           fsr2h	equ	0xFDA
  7704                           fsr2l	equ	0xFD9
  7705                           status	equ	0xFD8
  7706                           
  7707 ;; *************** function _encoder_statemachine *****************
  7708 ;; Defined at:
  7709 ;;		line 122 in file "encoder.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;  tmp             4   80[BANK0 ] float 
  7714 ;;  distance_to_    4   76[BANK0 ] long 
  7715 ;;  target_posit    4   70[BANK0 ] unsigned long 
  7716 ;;  target_divid    2   74[BANK0 ] unsigned int 
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7728 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7729 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7730 ;;Total ram usage:       22 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:   13
  7733 ;; This function calls:
  7734 ;;		___fldiv
  7735 ;;		___flmul
  7736 ;;		___fltol
  7737 ;;		___xxtofl
  7738 ;;		_encoder_next_arc_step_size
  7739 ;;		_encoder_next_divide_step_size
  7740 ;;		_encoder_next_setup_stepsize
  7741 ;;		_motor_change_speed
  7742 ;;		_motor_nonzero_steps_from_degrees
  7743 ;;		_motor_schedule_command
  7744 ;;		_motor_stop
  7745 ;; This function is called by:
  7746 ;;		_main
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text22
  7751  00A230                     __ptext22:
  7752                           	opt stack 0
  7753  00A230                     _encoder_statemachine:
  7754                           	opt stack 17
  7755                           
  7756                           ;encoder.c: 124: uint16_t target_divide_position;;encoder.c: 125: uint32_t target_positi
      +                          on_in_steps;;encoder.c: 126: int32_t distance_to_target_in_steps;;encoder.c: 127: float 
      +                          tmp;;encoder.c: 130: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && o
      +                          s.button2==0)
  7757                           
  7758                           ;incstack = 0
  7759  00A230  0100               	movlb	0	; () banked
  7760  00A232  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  7761  00A234  A4D8               	btfss	status,2,c
  7762  00A236  EFD4  F058         	goto	l2434
  7763                           
  7764                           ; BSR set to: 0
  7765  00A23A  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
  7766  00A23C  A4D8               	btfss	status,2,c
  7767  00A23E  EFD4  F058         	goto	l2434
  7768                           
  7769                           ; BSR set to: 0
  7770  00A242  51D0               	movf	(_os+4)& (0+255),w,b	;volatile
  7771  00A244  A4D8               	btfss	status,2,c
  7772  00A246  EFD4  F058         	goto	l2434
  7773                           
  7774                           ; BSR set to: 0
  7775  00A24A  51D2               	movf	(_os+6)& (0+255),w,b	;volatile
  7776  00A24C  B4D8               	btfsc	status,2,c
  7777  00A24E  0012               	return	
  7778  00A250  EFD4  F058         	goto	l2434
  7779  00A254                     
  7780                           ; BSR set to: 0
  7781                           ;encoder.c: 142: if(os.button1==1 || os.button2==1)
  7782                           
  7783                           ; BSR set to: 0
  7784  00A254  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  7785  00A256  B4D8               	btfsc	status,2,c
  7786  00A258  D003               	goto	u17900
  7787                           
  7788                           ; BSR set to: 0
  7789  00A25A  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  7790  00A25C  A4D8               	btfss	status,2,c
  7791  00A25E  D002               	goto	l2438
  7792  00A260                     u17900:
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;encoder.c: 143: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
  7796                           
  7797                           ; BSR set to: 0
  7798  00A260  0E11               	movlw	17
  7799  00A262  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  7800  00A264                     l2438:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;encoder.c: 144: if(os.encoder1Count+os.encoder2Count>0)
  7804                           
  7805                           ; BSR set to: 0
  7806  00A264  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  7807  00A268  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  7808  00A26A  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  7809  00A26C  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  7810  00A26E  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  7811  00A272  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  7812  00A274  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  7813  00A276  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  7814  00A278  519E               	movf	??_encoder_statemachine& (0+255),w,b
  7815  00A27A  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  7816  00A27C  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  7817  00A27E  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  7818  00A280  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  7819  00A282  D007               	goto	l2441
  7820  00A284  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  7821  00A286  E103               	bnz	u17910
  7822  00A288  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  7823  00A28A  A0D8               	btfss	status,0,c
  7824  00A28C  D002               	goto	l2441
  7825  00A28E                     u17910:
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;encoder.c: 145: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  7829  00A28E  0E02               	movlw	2
  7830  00A290  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  7831  00A292                     l2441:
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;encoder.c: 146: if(os.encoder1Count+os.encoder2Count<0)
  7835                           
  7836                           ; BSR set to: 0
  7837  00A292  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  7838  00A296  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  7839  00A298  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  7840  00A29A  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  7841  00A29C  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  7842  00A2A0  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  7843  00A2A2  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  7844  00A2A4  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  7845  00A2A6  519E               	movf	??_encoder_statemachine& (0+255),w,b
  7846  00A2A8  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  7847  00A2AA  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  7848  00A2AC  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  7849  00A2AE  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  7850  00A2B0  EFFD  F058         	goto	l2469
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;encoder.c: 147: os.displayState = DISPLAY_STATE_MAIN_ZERO;
  7854  00A2B4  0E05               	movlw	5
  7855  00A2B6  EFC3  F058         	goto	L17
  7856  00A2BA                     
  7857                           ; BSR set to: 0
  7858                           ;encoder.c: 150: if(os.button1==1 || os.button2==1)
  7859                           
  7860                           ; BSR set to: 0
  7861  00A2BA  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  7862  00A2BC  B4D8               	btfsc	status,2,c
  7863  00A2BE  D003               	goto	u17940
  7864                           
  7865                           ; BSR set to: 0
  7866  00A2C0  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  7867  00A2C2  A4D8               	btfss	status,2,c
  7868  00A2C4  D002               	goto	l2445
  7869  00A2C6                     u17940:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;encoder.c: 151: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
  7873                           
  7874                           ; BSR set to: 0
  7875  00A2C6  0E31               	movlw	49
  7876  00A2C8  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  7877  00A2CA                     l2445:
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;encoder.c: 152: if(os.encoder1Count+os.encoder2Count>0)
  7881                           
  7882                           ; BSR set to: 0
  7883  00A2CA  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  7884  00A2CE  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  7885  00A2D0  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  7886  00A2D2  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  7887  00A2D4  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  7888  00A2D8  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  7889  00A2DA  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  7890  00A2DC  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  7891  00A2DE  519E               	movf	??_encoder_statemachine& (0+255),w,b
  7892  00A2E0  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  7893  00A2E2  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  7894  00A2E4  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  7895  00A2E6  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  7896  00A2E8  D007               	goto	l2448
  7897  00A2EA  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  7898  00A2EC  E103               	bnz	u17950
  7899  00A2EE  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  7900  00A2F0  A0D8               	btfss	status,0,c
  7901  00A2F2  D002               	goto	l2448
  7902  00A2F4                     u17950:
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;encoder.c: 153: os.displayState = DISPLAY_STATE_MAIN_ARC;
  7906  00A2F4  0E03               	movlw	3
  7907  00A2F6  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  7908  00A2F8                     l2448:
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;encoder.c: 154: if(os.encoder1Count+os.encoder2Count<0)
  7912                           
  7913                           ; BSR set to: 0
  7914  00A2F8  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  7915  00A2FC  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  7916  00A2FE  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  7917  00A300  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  7918  00A302  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  7919  00A306  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  7920  00A308  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  7921  00A30A  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  7922  00A30C  519E               	movf	??_encoder_statemachine& (0+255),w,b
  7923  00A30E  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  7924  00A310  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  7925  00A312  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  7926  00A314  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  7927  00A316  EFFD  F058         	goto	l2469
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;encoder.c: 155: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7931  00A31A  0E01               	movlw	1
  7932  00A31C  EFC3  F058         	goto	L17
  7933  00A320                     
  7934                           ; BSR set to: 0
  7935                           ;encoder.c: 158: if(os.button1==1 || os.button2==1)
  7936                           
  7937                           ; BSR set to: 0
  7938  00A320  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  7939  00A322  B4D8               	btfsc	status,2,c
  7940  00A324  D003               	goto	u17980
  7941                           
  7942                           ; BSR set to: 0
  7943  00A326  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  7944  00A328  A4D8               	btfss	status,2,c
  7945  00A32A  D002               	goto	l2451
  7946  00A32C                     u17980:
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;encoder.c: 159: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
  7950                           
  7951                           ; BSR set to: 0
  7952  00A32C  0E51               	movlw	81
  7953  00A32E  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  7954  00A330                     l2451:
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;encoder.c: 160: if(os.encoder1Count+os.encoder2Count>0)
  7958                           
  7959                           ; BSR set to: 0
  7960  00A330  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  7961  00A334  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  7962  00A336  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  7963  00A338  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  7964  00A33A  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  7965  00A33E  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  7966  00A340  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  7967  00A342  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  7968  00A344  519E               	movf	??_encoder_statemachine& (0+255),w,b
  7969  00A346  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  7970  00A348  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  7971  00A34A  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  7972  00A34C  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  7973  00A34E  D007               	goto	l2454
  7974  00A350  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  7975  00A352  E103               	bnz	u17990
  7976  00A354  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  7977  00A356  A0D8               	btfss	status,0,c
  7978  00A358  D002               	goto	l2454
  7979  00A35A                     u17990:
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;encoder.c: 161: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
  7983  00A35A  0E04               	movlw	4
  7984  00A35C  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  7985  00A35E                     l2454:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;encoder.c: 162: if(os.encoder1Count+os.encoder2Count<0)
  7989                           
  7990                           ; BSR set to: 0
  7991  00A35E  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  7992  00A362  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  7993  00A364  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  7994  00A366  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  7995  00A368  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  7996  00A36C  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  7997  00A36E  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  7998  00A370  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  7999  00A372  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8000  00A374  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8001  00A376  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8002  00A378  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8003  00A37A  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8004  00A37C  EFFD  F058         	goto	l2469
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;encoder.c: 163: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  8008  00A380  0E02               	movlw	2
  8009  00A382  EFC3  F058         	goto	L17
  8010  00A386                     
  8011                           ; BSR set to: 0
  8012                           ;encoder.c: 166: if(os.button1==1 || os.button2==1)
  8013                           
  8014                           ; BSR set to: 0
  8015  00A386  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8016  00A388  B4D8               	btfsc	status,2,c
  8017  00A38A  D003               	goto	u18020
  8018                           
  8019                           ; BSR set to: 0
  8020  00A38C  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  8021  00A38E  A4D8               	btfss	status,2,c
  8022  00A390  D002               	goto	l2457
  8023  00A392                     u18020:
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;encoder.c: 167: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
  8027                           
  8028                           ; BSR set to: 0
  8029  00A392  0E82               	movlw	130
  8030  00A394  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8031  00A396                     l2457:
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;encoder.c: 168: if(os.encoder1Count+os.encoder2Count>0)
  8035                           
  8036                           ; BSR set to: 0
  8037  00A396  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8038  00A39A  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8039  00A39C  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8040  00A39E  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8041  00A3A0  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8042  00A3A4  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8043  00A3A6  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8044  00A3A8  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8045  00A3AA  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8046  00A3AC  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8047  00A3AE  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8048  00A3B0  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8049  00A3B2  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8050  00A3B4  D007               	goto	l2460
  8051  00A3B6  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8052  00A3B8  E103               	bnz	u18030
  8053  00A3BA  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8054  00A3BC  A0D8               	btfss	status,0,c
  8055  00A3BE  D002               	goto	l2460
  8056  00A3C0                     u18030:
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;encoder.c: 169: os.displayState = DISPLAY_STATE_MAIN_ZERO;
  8060  00A3C0  0E05               	movlw	5
  8061  00A3C2  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8062  00A3C4                     l2460:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;encoder.c: 170: if(os.encoder1Count+os.encoder2Count<0)
  8066                           
  8067                           ; BSR set to: 0
  8068  00A3C4  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8069  00A3C8  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8070  00A3CA  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8071  00A3CC  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8072  00A3CE  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8073  00A3D2  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8074  00A3D4  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8075  00A3D6  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8076  00A3D8  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8077  00A3DA  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8078  00A3DC  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8079  00A3DE  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8080  00A3E0  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8081  00A3E2  EFFD  F058         	goto	l2469
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;encoder.c: 171: os.displayState = DISPLAY_STATE_MAIN_ARC;
  8085  00A3E6  0E03               	movlw	3
  8086  00A3E8  EFC3  F058         	goto	L17
  8087  00A3EC                     
  8088                           ; BSR set to: 0
  8089                           ;encoder.c: 174: if(os.button1==1 || os.button2==1)
  8090                           
  8091                           ; BSR set to: 0
  8092  00A3EC  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8093  00A3EE  B4D8               	btfsc	status,2,c
  8094  00A3F0  D003               	goto	u18060
  8095                           
  8096                           ; BSR set to: 0
  8097  00A3F2  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  8098  00A3F4  A4D8               	btfss	status,2,c
  8099  00A3F6  D002               	goto	l2463
  8100  00A3F8                     u18060:
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;encoder.c: 175: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
  8104                           
  8105                           ; BSR set to: 0
  8106  00A3F8  0E71               	movlw	113
  8107  00A3FA  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8108  00A3FC                     l2463:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;encoder.c: 176: if(os.encoder1Count+os.encoder2Count>0)
  8112                           
  8113                           ; BSR set to: 0
  8114  00A3FC  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8115  00A400  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8116  00A402  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8117  00A404  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8118  00A406  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8119  00A40A  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8120  00A40C  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8121  00A40E  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8122  00A410  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8123  00A412  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8124  00A414  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8125  00A416  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8126  00A418  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8127  00A41A  D007               	goto	l2466
  8128  00A41C  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8129  00A41E  E103               	bnz	u18070
  8130  00A420  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8131  00A422  A0D8               	btfss	status,0,c
  8132  00A424  D002               	goto	l2466
  8133  00A426                     u18070:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;encoder.c: 177: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  8137  00A426  0E01               	movlw	1
  8138  00A428  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8139  00A42A                     l2466:
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;encoder.c: 178: if(os.encoder1Count+os.encoder2Count<0)
  8143                           
  8144                           ; BSR set to: 0
  8145  00A42A  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8146  00A42E  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8147  00A430  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8148  00A432  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8149  00A434  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8150  00A438  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8151  00A43A  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8152  00A43C  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8153  00A43E  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8154  00A440  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8155  00A442  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8156  00A444  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8157  00A446  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8158  00A448  EFFD  F058         	goto	l2469
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;encoder.c: 179: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
  8162  00A44C  0E04               	movlw	4
  8163  00A44E  EFC3  F058         	goto	L17
  8164  00A452                     
  8165                           ; BSR set to: 0
  8166                           
  8167                           ; BSR set to: 0
  8168  00A452  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
  8169                           
  8170                           ; Switch size 1, requested type "space"
  8171                           ; Number of cases is 6, Range of values is 1 to 240
  8172                           ; switch strategies available:
  8173                           ; Name         Instructions Cycles
  8174                           ; simple_byte           19    10 (average)
  8175                           ;	Chosen strategy is simple_byte
  8176  00A454  0A01               	xorlw	1	; case 1
  8177  00A456  B4D8               	btfsc	status,2,c
  8178  00A458  D6FD               	goto	l2437
  8179  00A45A  0A03               	xorlw	3	; case 2
  8180  00A45C  B4D8               	btfsc	status,2,c
  8181  00A45E  D72D               	goto	l2444
  8182  00A460  0A01               	xorlw	1	; case 3
  8183  00A462  B4D8               	btfsc	status,2,c
  8184  00A464  D75D               	goto	l2450
  8185  00A466  0A07               	xorlw	7	; case 4
  8186  00A468  B4D8               	btfsc	status,2,c
  8187  00A46A  D78D               	goto	l2456
  8188  00A46C  0A01               	xorlw	1	; case 5
  8189  00A46E  B4D8               	btfsc	status,2,c
  8190  00A470  D7BD               	goto	l2462
  8191  00A472  0AF5               	xorlw	245	; case 240
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;encoder.c: 185: break;
  8195  00A474  EFFD  F058         	goto	l2469
  8196  00A478                     
  8197                           ; BSR set to: 0
  8198                           ;encoder.c: 191: if(os.button1==1)
  8199                           
  8200                           ; BSR set to: 0
  8201  00A478  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8202  00A47A  A4D8               	btfss	status,2,c
  8203  00A47C  D00E               	goto	l2473
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;encoder.c: 192: {;encoder.c: 193: os.current_position_in_steps = 0;
  8207  00A47E  0E00               	movlw	0
  8208  00A480  6FD3               	movwf	(_os+7)& (0+255),b	;volatile
  8209  00A482  0E00               	movlw	0
  8210  00A484  6FD4               	movwf	(_os+8)& (0+255),b	;volatile
  8211  00A486  0E00               	movlw	0
  8212  00A488  6FD5               	movwf	(_os+9)& (0+255),b	;volatile
  8213  00A48A  0E00               	movlw	0
  8214  00A48C  6FD6               	movwf	(_os+10)& (0+255),b	;volatile
  8215                           
  8216                           ;encoder.c: 194: os.divide_position = 0;
  8217  00A48E  0E00               	movlw	0
  8218  00A490  6FE3               	movwf	(_os+23)& (0+255),b	;volatile
  8219  00A492  0E00               	movlw	0
  8220  00A494  6FE2               	movwf	(_os+22)& (0+255),b	;volatile
  8221                           
  8222                           ;encoder.c: 195: os.displayState = DISPLAY_STATE_SETUP2_CCW;
  8223  00A496  0E21               	movlw	33
  8224  00A498  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8225  00A49A                     l2473:
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;encoder.c: 196: };encoder.c: 197: if(os.encoder1Count>0)
  8229                           
  8230                           ; BSR set to: 0
  8231  00A49A  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  8232  00A49C  0A80               	xorlw	128
  8233  00A49E  0F7F               	addlw	-129
  8234  00A4A0  A0D8               	btfss	status,0,c
  8235  00A4A2  D002               	goto	l2474
  8236                           
  8237                           ; BSR set to: 0
  8238                           ;encoder.c: 198: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
  8239  00A4A4  0E12               	movlw	18
  8240  00A4A6  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8241  00A4A8                     l2474:
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;encoder.c: 199: if(os.encoder1Count<0)
  8245                           
  8246                           ; BSR set to: 0
  8247  00A4A8  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
  8248  00A4AA  D01A               	goto	l2476
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;encoder.c: 200: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
  8252  00A4AC  0E12               	movlw	18
  8253  00A4AE  D00F               	goto	L6
  8254  00A4B0                     
  8255                           ; BSR set to: 0
  8256                           ;encoder.c: 203: if(os.button1==1)
  8257                           
  8258                           ; BSR set to: 0
  8259  00A4B0  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8260  00A4B2  A4D8               	btfss	status,2,c
  8261  00A4B4  D002               	goto	l2478
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;encoder.c: 204: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  8265  00A4B6  0E01               	movlw	1
  8266  00A4B8  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8267  00A4BA                     l2478:
  8268                           
  8269                           ; BSR set to: 0
  8270                           ;encoder.c: 205: if(os.encoder1Count>0)
  8271                           
  8272                           ; BSR set to: 0
  8273  00A4BA  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  8274  00A4BC  0A80               	xorlw	128
  8275  00A4BE  0F7F               	addlw	-129
  8276  00A4C0  A0D8               	btfss	status,0,c
  8277  00A4C2  D002               	goto	l2479
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;encoder.c: 206: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
  8281  00A4C4  0E11               	movlw	17
  8282  00A4C6  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8283  00A4C8                     l2479:
  8284                           
  8285                           ; BSR set to: 0
  8286                           ;encoder.c: 207: if(os.encoder1Count<0)
  8287                           
  8288                           ; BSR set to: 0
  8289  00A4C8  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
  8290  00A4CA  D00A               	goto	l2476
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;encoder.c: 208: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
  8294  00A4CC  0E11               	movlw	17
  8295  00A4CE                     L6:
  8296  00A4CE  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;encoder.c: 210: }
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;encoder.c: 209: break;
  8303  00A4D0  D007               	goto	l2476
  8304  00A4D2                     
  8305                           ; BSR set to: 0
  8306                           
  8307                           ; BSR set to: 0
  8308  00A4D2  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
  8309                           
  8310                           ; Switch size 1, requested type "space"
  8311                           ; Number of cases is 2, Range of values is 17 to 18
  8312                           ; switch strategies available:
  8313                           ; Name         Instructions Cycles
  8314                           ; simple_byte            7     4 (average)
  8315                           ;	Chosen strategy is simple_byte
  8316  00A4D4  0A11               	xorlw	17	; case 17
  8317  00A4D6  B4D8               	btfsc	status,2,c
  8318  00A4D8  D7CF               	goto	l2472
  8319  00A4DA  0A03               	xorlw	3	; case 18
  8320  00A4DC  B4D8               	btfsc	status,2,c
  8321  00A4DE  D7E8               	goto	l2477
  8322  00A4E0                     l2476:
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;encoder.c: 211: if(os.button2==1)
  8326                           
  8327                           ; BSR set to: 0
  8328  00A4E0  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  8329  00A4E2  A4D8               	btfss	status,2,c
  8330  00A4E4  D00A               	goto	l2481
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;encoder.c: 212: {;encoder.c: 213: os.setup_step_size = encoder_next_setup_stepsize(os.s
      +                          etup_step_size);
  8334  00A4E6  C0DC  F060         	movff	_os+16,encoder_next_setup_stepsize@old_stepsize	;volatile
  8335  00A4EA  C0DD  F061         	movff	_os+17,encoder_next_setup_stepsize@old_stepsize+1	;volatile
  8336  00A4EE  EC4E  F075         	call	_encoder_next_setup_stepsize	;wreg free
  8337  00A4F2  C060  F0DC         	movff	?_encoder_next_setup_stepsize,_os+16	;volatile
  8338  00A4F6  C061  F0DD         	movff	?_encoder_next_setup_stepsize+1,_os+17	;volatile
  8339  00A4FA                     l2481:
  8340                           
  8341                           ;encoder.c: 214: };encoder.c: 215: if(os.encoder2Count>0)
  8342  00A4FA  0100               	movlb	0	; () banked
  8343  00A4FC  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
  8344  00A4FE  0A80               	xorlw	128
  8345  00A500  0F7F               	addlw	-129
  8346  00A502  A0D8               	btfss	status,0,c
  8347  00A504  D019               	goto	l2483
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;encoder.c: 216: {;encoder.c: 218: if(!os.busy)
  8351  00A506  51DA               	movf	(_os+14)& (0+255),w,b	;volatile
  8352  00A508  A4D8               	btfss	status,2,c
  8353  00A50A  D016               	goto	l2483
  8354                           
  8355                           ; BSR set to: 0
  8356                           ;encoder.c: 219: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
  8357  00A50C  C0DC  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
  8358  00A510  C0DD  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
  8359  00A514  EC65  F078         	call	_motor_nonzero_steps_from_degrees	;wreg free
  8360  00A518  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
  8361  00A51C  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
  8362  00A520  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
  8363  00A524  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
  8364  00A528  0E00               	movlw	0
  8365  00A52A  0100               	movlb	0	; () banked
  8366  00A52C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  8367  00A52E  0E00               	movlw	0
  8368  00A530  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  8369  00A532  0E01               	movlw	1
  8370  00A534  EC82  F072         	call	_motor_schedule_command
  8371  00A538                     l2483:
  8372                           
  8373                           ;encoder.c: 220: };encoder.c: 221: if(os.encoder2Count<0)
  8374  00A538  0100               	movlb	0	; () banked
  8375  00A53A  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
  8376  00A53C  EFFD  F058         	goto	l2469
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;encoder.c: 222: {;encoder.c: 224: if(!os.busy)
  8380  00A540  51DA               	movf	(_os+14)& (0+255),w,b	;volatile
  8381  00A542  A4D8               	btfss	status,2,c
  8382  00A544  EFFD  F058         	goto	l2469
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;encoder.c: 225: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
  8386  00A548  C0DC  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
  8387  00A54C  C0DD  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
  8388  00A550  EC65  F078         	call	_motor_nonzero_steps_from_degrees	;wreg free
  8389  00A554  C08F  F097         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
  8390  00A558  C090  F098         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
  8391  00A55C  C091  F099         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
  8392  00A560  C092  F09A         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
  8393  00A564  0E00               	movlw	0
  8394  00A566  0100               	movlb	0	; () banked
  8395  00A568  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  8396  00A56A  0E00               	movlw	0
  8397  00A56C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  8398  00A56E  0EFF               	movlw	255
  8399  00A570  EC82  F072         	call	_motor_schedule_command
  8400                           
  8401                           ;encoder.c: 226: };encoder.c: 227: break;
  8402  00A574  EFFD  F058         	goto	l2469
  8403  00A578                     
  8404                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
  8405  00A578  0100               	movlb	0	; () banked
  8406  00A57A  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8407  00A57C  B4D8               	btfsc	status,2,c
  8408  00A57E  D003               	goto	u18210
  8409                           
  8410                           ; BSR set to: 0
  8411  00A580  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  8412  00A582  A4D8               	btfss	status,2,c
  8413  00A584  D01F               	goto	l2489
  8414  00A586                     u18210:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;encoder.c: 234: {;encoder.c: 235: motor_schedule_command(MOTOR_DIRECTION_CW, config.ove
      +                          rshoot_in_steps, 0);
  8418                           
  8419                           ; BSR set to: 0
  8420  00A586  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  8421  00A58A  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  8422  00A58E  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  8423  00A590  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  8424  00A592  0E00               	movlw	0
  8425  00A594  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  8426  00A596  0E00               	movlw	0
  8427  00A598  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  8428  00A59A  0E01               	movlw	1
  8429  00A59C  EC82  F072         	call	_motor_schedule_command
  8430                           
  8431                           ;encoder.c: 236: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
  8432  00A5A0  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  8433  00A5A4  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  8434  00A5A8  0100               	movlb	0	; () banked
  8435  00A5AA  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  8436  00A5AC  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  8437  00A5AE  0E00               	movlw	0
  8438  00A5B0  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  8439  00A5B2  0E00               	movlw	0
  8440  00A5B4  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  8441  00A5B6  0EFF               	movlw	255
  8442  00A5B8  EC82  F072         	call	_motor_schedule_command
  8443                           
  8444                           ;encoder.c: 237: os.approach_direction = MOTOR_DIRECTION_CCW;
  8445  00A5BC  0100               	movlb	0	; () banked
  8446  00A5BE  69DE               	setf	(_os+18)& (0+255),b	;volatile
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  8450  00A5C0  0E01               	movlw	1
  8451  00A5C2  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8452  00A5C4                     l2489:
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;encoder.c: 239: };encoder.c: 240: if(os.encoder1Count+os.encoder2Count>0)
  8456                           
  8457                           ; BSR set to: 0
  8458  00A5C4  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8459  00A5C8  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8460  00A5CA  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8461  00A5CC  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8462  00A5CE  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8463  00A5D2  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8464  00A5D4  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8465  00A5D6  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8466  00A5D8  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8467  00A5DA  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8468  00A5DC  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8469  00A5DE  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8470  00A5E0  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8471  00A5E2  D007               	goto	l2492
  8472  00A5E4  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8473  00A5E6  E103               	bnz	u18220
  8474  00A5E8  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8475  00A5EA  A0D8               	btfss	status,0,c
  8476  00A5EC  D002               	goto	l2492
  8477  00A5EE                     u18220:
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;encoder.c: 241: os.displayState = DISPLAY_STATE_SETUP2_CW;
  8481  00A5EE  0E22               	movlw	34
  8482  00A5F0  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8483  00A5F2                     l2492:
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;encoder.c: 242: if(os.encoder1Count+os.encoder2Count<0)
  8487                           
  8488                           ; BSR set to: 0
  8489  00A5F2  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8490  00A5F6  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8491  00A5F8  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8492  00A5FA  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8493  00A5FC  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8494  00A600  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8495  00A602  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8496  00A604  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8497  00A606  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8498  00A608  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8499  00A60A  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8500  00A60C  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8501  00A60E  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8502  00A610  EFFD  F058         	goto	l2469
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;encoder.c: 243: os.displayState = DISPLAY_STATE_SETUP2_CW;
  8506  00A614  0E22               	movlw	34
  8507  00A616  EFC3  F058         	goto	L17
  8508  00A61A                     
  8509                           ; BSR set to: 0
  8510                           ;encoder.c: 246: if(os.button1==1 || os.button2==1)
  8511                           
  8512                           ; BSR set to: 0
  8513  00A61A  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8514  00A61C  B4D8               	btfsc	status,2,c
  8515  00A61E  D003               	goto	u18250
  8516                           
  8517                           ; BSR set to: 0
  8518  00A620  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  8519  00A622  A4D8               	btfss	status,2,c
  8520  00A624  D020               	goto	l2496
  8521  00A626                     u18250:
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;encoder.c: 247: {;encoder.c: 248: motor_schedule_command(MOTOR_DIRECTION_CCW, config.ov
      +                          ershoot_in_steps, 0);
  8525                           
  8526                           ; BSR set to: 0
  8527  00A626  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  8528  00A62A  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  8529  00A62E  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  8530  00A630  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  8531  00A632  0E00               	movlw	0
  8532  00A634  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  8533  00A636  0E00               	movlw	0
  8534  00A638  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  8535  00A63A  0EFF               	movlw	255
  8536  00A63C  EC82  F072         	call	_motor_schedule_command
  8537                           
  8538                           ;encoder.c: 249: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
  8539  00A640  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  8540  00A644  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  8541  00A648  0100               	movlb	0	; () banked
  8542  00A64A  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  8543  00A64C  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  8544  00A64E  0E00               	movlw	0
  8545  00A650  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  8546  00A652  0E00               	movlw	0
  8547  00A654  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  8548  00A656  0E01               	movlw	1
  8549  00A658  EC82  F072         	call	_motor_schedule_command
  8550                           
  8551                           ;encoder.c: 250: os.approach_direction = MOTOR_DIRECTION_CW;
  8552  00A65C  0E01               	movlw	1
  8553  00A65E  0100               	movlb	0	; () banked
  8554  00A660  6FDE               	movwf	(_os+18)& (0+255),b	;volatile
  8555                           
  8556                           ; BSR set to: 0
  8557                           ;encoder.c: 251: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  8558  00A662  0E01               	movlw	1
  8559  00A664  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8560  00A666                     l2496:
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;encoder.c: 252: };encoder.c: 253: if(os.encoder1Count+os.encoder2Count>0)
  8564                           
  8565                           ; BSR set to: 0
  8566  00A666  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8567  00A66A  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8568  00A66C  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8569  00A66E  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8570  00A670  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8571  00A674  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8572  00A676  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8573  00A678  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8574  00A67A  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8575  00A67C  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8576  00A67E  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8577  00A680  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8578  00A682  BFA1               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
  8579  00A684  D007               	goto	l2499
  8580  00A686  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  8581  00A688  E103               	bnz	u18260
  8582  00A68A  05A0               	decf	(??_encoder_statemachine+2)& (0+255),w,b
  8583  00A68C  A0D8               	btfss	status,0,c
  8584  00A68E  D002               	goto	l2499
  8585  00A690                     u18260:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_SETUP2_CCW;
  8589  00A690  0E21               	movlw	33
  8590  00A692  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8591  00A694                     l2499:
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;encoder.c: 255: if(os.encoder1Count+os.encoder2Count<0)
  8595                           
  8596                           ; BSR set to: 0
  8597  00A694  C0D1  F09E         	movff	_os+5,??_encoder_statemachine	;volatile
  8598  00A698  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8599  00A69A  BF9E               	btfsc	??_encoder_statemachine& (0+255),7,b
  8600  00A69C  079F               	decf	(??_encoder_statemachine+1)& (0+255),f,b
  8601  00A69E  C0CF  F0A0         	movff	_os+3,??_encoder_statemachine+2	;volatile
  8602  00A6A2  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  8603  00A6A4  BFA0               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
  8604  00A6A6  07A1               	decf	(??_encoder_statemachine+3)& (0+255),f,b
  8605  00A6A8  519E               	movf	??_encoder_statemachine& (0+255),w,b
  8606  00A6AA  27A0               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
  8607  00A6AC  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8608  00A6AE  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  8609  00A6B0  AFA1               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
  8610  00A6B2  EFFD  F058         	goto	l2469
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;encoder.c: 256: os.displayState = DISPLAY_STATE_SETUP2_CCW;
  8614  00A6B6  0E21               	movlw	33
  8615  00A6B8  EFC3  F058         	goto	L17
  8616  00A6BC                     
  8617                           ; BSR set to: 0
  8618  00A6BC  0100               	movlb	0	; () banked
  8619  00A6BE  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
  8620                           
  8621                           ; Switch size 1, requested type "space"
  8622                           ; Number of cases is 2, Range of values is 33 to 34
  8623                           ; switch strategies available:
  8624                           ; Name         Instructions Cycles
  8625                           ; simple_byte            7     4 (average)
  8626                           ;	Chosen strategy is simple_byte
  8627  00A6C0  0A21               	xorlw	33	; case 33
  8628  00A6C2  B4D8               	btfsc	status,2,c
  8629  00A6C4  D759               	goto	l2488
  8630  00A6C6  0A03               	xorlw	3	; case 34
  8631  00A6C8  B4D8               	btfsc	status,2,c
  8632  00A6CA  D7A7               	goto	l2495
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;encoder.c: 259: break;
  8636  00A6CC  EFFD  F058         	goto	l2469
  8637  00A6D0                     
  8638                           ; BSR set to: 0
  8639                           ;encoder.c: 265: if(os.button1==1)
  8640                           
  8641                           ; BSR set to: 0
  8642  00A6D0  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8643  00A6D2  A4D8               	btfss	status,2,c
  8644  00A6D4  D002               	goto	l2504
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;encoder.c: 266: {;encoder.c: 268: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
  8648  00A6D6  0E41               	movlw	65
  8649  00A6D8  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8650  00A6DA                     l2504:
  8651                           
  8652                           ; BSR set to: 0
  8653                           ;encoder.c: 269: };encoder.c: 270: if(os.encoder1Count>0)
  8654                           
  8655                           ; BSR set to: 0
  8656  00A6DA  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  8657  00A6DC  0A80               	xorlw	128
  8658  00A6DE  0F7F               	addlw	-129
  8659  00A6E0  A0D8               	btfss	status,0,c
  8660  00A6E2  D002               	goto	l2505
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;encoder.c: 271: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
  8664  00A6E4  0E32               	movlw	50
  8665  00A6E6  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8666  00A6E8                     l2505:
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;encoder.c: 272: if(os.encoder1Count<0)
  8670                           
  8671                           ; BSR set to: 0
  8672  00A6E8  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
  8673  00A6EA  D01A               	goto	l2507
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;encoder.c: 273: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
  8677  00A6EC  0E32               	movlw	50
  8678  00A6EE  D00F               	goto	L9
  8679  00A6F0                     
  8680                           ; BSR set to: 0
  8681                           ;encoder.c: 276: if(os.button1==1)
  8682                           
  8683                           ; BSR set to: 0
  8684  00A6F0  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8685  00A6F2  A4D8               	btfss	status,2,c
  8686  00A6F4  D002               	goto	l2509
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;encoder.c: 277: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  8690  00A6F6  0E02               	movlw	2
  8691  00A6F8  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8692  00A6FA                     l2509:
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;encoder.c: 278: if(os.encoder1Count>0)
  8696                           
  8697                           ; BSR set to: 0
  8698  00A6FA  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  8699  00A6FC  0A80               	xorlw	128
  8700  00A6FE  0F7F               	addlw	-129
  8701  00A700  A0D8               	btfss	status,0,c
  8702  00A702  D002               	goto	l2510
  8703                           
  8704                           ; BSR set to: 0
  8705                           ;encoder.c: 279: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
  8706  00A704  0E31               	movlw	49
  8707  00A706  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8708  00A708                     l2510:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;encoder.c: 280: if(os.encoder1Count<0)
  8712                           
  8713                           ; BSR set to: 0
  8714  00A708  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
  8715  00A70A  D00A               	goto	l2507
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
  8719  00A70C  0E31               	movlw	49
  8720  00A70E                     L9:
  8721  00A70E  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;encoder.c: 283: }
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;encoder.c: 282: break;
  8728  00A710  D007               	goto	l2507
  8729  00A712                     
  8730                           ; BSR set to: 0
  8731                           
  8732                           ; BSR set to: 0
  8733  00A712  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
  8734                           
  8735                           ; Switch size 1, requested type "space"
  8736                           ; Number of cases is 2, Range of values is 49 to 50
  8737                           ; switch strategies available:
  8738                           ; Name         Instructions Cycles
  8739                           ; simple_byte            7     4 (average)
  8740                           ;	Chosen strategy is simple_byte
  8741  00A714  0A31               	xorlw	49	; case 49
  8742  00A716  B4D8               	btfsc	status,2,c
  8743  00A718  D7DB               	goto	l2503
  8744  00A71A  0A03               	xorlw	3	; case 50
  8745  00A71C  B4D8               	btfsc	status,2,c
  8746  00A71E  D7E8               	goto	l2508
  8747  00A720                     l2507:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;encoder.c: 284: if(os.button2==1)
  8751                           
  8752                           ; BSR set to: 0
  8753  00A720  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  8754  00A722  A4D8               	btfss	status,2,c
  8755  00A724  D005               	goto	l2512
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;encoder.c: 285: {;encoder.c: 286: os.divide_step_size = encoder_next_divide_step_size(o
      +                          s.divide_step_size);
  8759  00A726  51E1               	movf	(_os+21)& (0+255),w,b	;volatile
  8760  00A728  EC3E  F07A         	call	_encoder_next_divide_step_size
  8761  00A72C  0100               	movlb	0	; () banked
  8762  00A72E  6FE1               	movwf	(_os+21)& (0+255),b	;volatile
  8763  00A730                     l2512:
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;encoder.c: 287: };encoder.c: 288: if(os.encoder2Count>0)
  8767                           
  8768                           ; BSR set to: 0
  8769  00A730  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
  8770  00A732  0A80               	xorlw	128
  8771  00A734  0F7F               	addlw	-129
  8772  00A736  A0D8               	btfss	status,0,c
  8773  00A738  D004               	goto	l2513
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;encoder.c: 289: {;encoder.c: 290: os.division += os.divide_step_size;
  8777  00A73A  51E1               	movf	(_os+21)& (0+255),w,b	;volatile
  8778  00A73C  27DF               	addwf	(_os+19)& (0+255),f,b	;volatile
  8779  00A73E  0E00               	movlw	0
  8780  00A740  23E0               	addwfc	(_os+20)& (0+255),f,b	;volatile
  8781  00A742                     l2513:
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;encoder.c: 291: };encoder.c: 292: if(os.encoder2Count<0)
  8785  00A742  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
  8786  00A744  EFFD  F058         	goto	l2469
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;encoder.c: 293: {;encoder.c: 294: if(os.division>os.divide_step_size)
  8790  00A748  51E1               	movf	(_os+21)& (0+255),w,b	;volatile
  8791  00A74A  6F9E               	movwf	??_encoder_statemachine& (0+255),b
  8792  00A74C  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
  8793  00A74E  51DF               	movf	(_os+19)& (0+255),w,b	;volatile
  8794  00A750  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
  8795  00A752  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  8796  00A754  0A80               	xorlw	128
  8797  00A756  6FA0               	movwf	(??_encoder_statemachine+2)& (0+255),b
  8798  00A758  51E0               	movf	(_os+20)& (0+255),w,b	;volatile
  8799  00A75A  0A80               	xorlw	128
  8800  00A75C  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
  8801  00A75E  B0D8               	btfsc	status,0,c
  8802  00A760  D006               	goto	l2515
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;encoder.c: 295: {;encoder.c: 296: os.division -= os.divide_step_size;
  8806  00A762  51E1               	movf	(_os+21)& (0+255),w,b	;volatile
  8807  00A764  5FDF               	subwf	(_os+19)& (0+255),f,b	;volatile
  8808  00A766  0E00               	movlw	0
  8809  00A768  5BE0               	subwfb	(_os+20)& (0+255),f,b	;volatile
  8810                           
  8811                           ;encoder.c: 297: }
  8812  00A76A  EFFD  F058         	goto	l2469
  8813  00A76E                     l2515:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;encoder.c: 298: else;encoder.c: 299: {;encoder.c: 300: os.division = 1;
  8817                           
  8818                           ; BSR set to: 0
  8819  00A76E  0E00               	movlw	0
  8820  00A770  6FE0               	movwf	(_os+20)& (0+255),b	;volatile
  8821  00A772  0E01               	movlw	1
  8822  00A774  6FDF               	movwf	(_os+19)& (0+255),b	;volatile
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;encoder.c: 301: };encoder.c: 302: };encoder.c: 303: break;
  8826                           
  8827                           ; BSR set to: 0
  8828  00A776  EFFD  F058         	goto	l2469
  8829  00A77A                     
  8830                           ; BSR set to: 0
  8831                           ;encoder.c: 306: if(os.button1==1)
  8832                           
  8833                           ; BSR set to: 0
  8834  00A77A  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  8835  00A77C  A4D8               	btfss	status,2,c
  8836  00A77E  D002               	goto	l2518
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;encoder.c: 307: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
  8840  00A780  0E02               	movlw	2
  8841  00A782  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  8842  00A784                     l2518:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;encoder.c: 308: if(os.button2==1)
  8846                           
  8847                           ; BSR set to: 0
  8848  00A784  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  8849  00A786  A4D8               	btfss	status,2,c
  8850  00A788  D193               	goto	l2519
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;encoder.c: 309: {;encoder.c: 311: if(os.divide_jump_size>0)
  8854  00A78A  BFE5               	btfsc	(_os+25)& (0+255),7,b	;volatile
  8855  00A78C  D018               	goto	l2520
  8856  00A78E  51E5               	movf	(_os+25)& (0+255),w,b	;volatile
  8857  00A790  E103               	bnz	u18400
  8858  00A792  05E4               	decf	(_os+24)& (0+255),w,b	;volatile
  8859  00A794  A0D8               	btfss	status,0,c
  8860  00A796  D013               	goto	l2520
  8861  00A798                     u18400:
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;encoder.c: 312: {;encoder.c: 313: target_divide_position = os.divide_position + os.divi
      +                          de_jump_size;
  8865  00A798  51E4               	movf	(_os+24)& (0+255),w,b	;volatile
  8866  00A79A  25E2               	addwf	(_os+22)& (0+255),w,b	;volatile
  8867  00A79C  6FAA               	movwf	encoder_statemachine@target_divide_position& (0+255),b
  8868  00A79E  51E5               	movf	(_os+25)& (0+255),w,b	;volatile
  8869  00A7A0  21E3               	addwfc	(_os+23)& (0+255),w,b	;volatile
  8870  00A7A2  6FAB               	movwf	(encoder_statemachine@target_divide_position+1)& (0+255),b
  8871                           
  8872                           ;encoder.c: 314: if(target_divide_position>=os.division)
  8873  00A7A4  51DF               	movf	(_os+19)& (0+255),w,b	;volatile
  8874  00A7A6  5DAA               	subwf	encoder_statemachine@target_divide_position& (0+255),w,b
  8875  00A7A8  51E0               	movf	(_os+20)& (0+255),w,b	;volatile
  8876  00A7AA  59AB               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),w,b
  8877  00A7AC  A0D8               	btfss	status,0,c
  8878  00A7AE  D019               	goto	l2523
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;encoder.c: 315: target_divide_position -= os.division;
  8882  00A7B0  EE20  F0DF         	lfsr	2,_os+19	;volatile
  8883  00A7B4  50DE               	movf	postinc2,w,c
  8884  00A7B6  5FAA               	subwf	encoder_statemachine@target_divide_position& (0+255),f,b
  8885  00A7B8  50DD               	movf	postdec2,w,c
  8886  00A7BA  5BAB               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),f,b
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;encoder.c: 316: }
  8890  00A7BC  D012               	goto	l2523
  8891  00A7BE                     l2520:
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;encoder.c: 317: else;encoder.c: 318: {;encoder.c: 319: target_divide_position = os.divi
      +                          de_position + os.divide_jump_size;
  8895                           
  8896                           ; BSR set to: 0
  8897  00A7BE  51E4               	movf	(_os+24)& (0+255),w,b	;volatile
  8898  00A7C0  25E2               	addwf	(_os+22)& (0+255),w,b	;volatile
  8899  00A7C2  6FAA               	movwf	encoder_statemachine@target_divide_position& (0+255),b
  8900  00A7C4  51E5               	movf	(_os+25)& (0+255),w,b	;volatile
  8901  00A7C6  21E3               	addwfc	(_os+23)& (0+255),w,b	;volatile
  8902  00A7C8  6FAB               	movwf	(encoder_statemachine@target_divide_position+1)& (0+255),b
  8903                           
  8904                           ;encoder.c: 320: if(target_divide_position>=os.division)
  8905  00A7CA  51DF               	movf	(_os+19)& (0+255),w,b	;volatile
  8906  00A7CC  5DAA               	subwf	encoder_statemachine@target_divide_position& (0+255),w,b
  8907  00A7CE  51E0               	movf	(_os+20)& (0+255),w,b	;volatile
  8908  00A7D0  59AB               	subwfb	(encoder_statemachine@target_divide_position+1)& (0+255),w,b
  8909  00A7D2  A0D8               	btfss	status,0,c
  8910  00A7D4  D006               	goto	l2523
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;encoder.c: 321: target_divide_position += os.division;
  8914  00A7D6  EE20  F0DF         	lfsr	2,_os+19	;volatile
  8915  00A7DA  50DE               	movf	postinc2,w,c
  8916  00A7DC  27AA               	addwf	encoder_statemachine@target_divide_position& (0+255),f,b
  8917  00A7DE  50DD               	movf	postdec2,w,c
  8918  00A7E0  23AB               	addwfc	(encoder_statemachine@target_divide_position+1)& (0+255),f,b
  8919  00A7E2                     l2523:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;encoder.c: 322: };encoder.c: 325: tmp = (float) config.full_circle_in_steps;
  8923                           
  8924                           ; BSR set to: 0
  8925                           
  8926                           ; BSR set to: 0
  8927  00A7E2  C11F  F060         	movff	_config,___xxtofl@val
  8928  00A7E6  C120  F061         	movff	_config+1,___xxtofl@val+1
  8929  00A7EA  C121  F062         	movff	_config+2,___xxtofl@val+2
  8930  00A7EE  C122  F063         	movff	_config+3,___xxtofl@val+3
  8931  00A7F2  0E00               	movlw	0
  8932  00A7F4  EC46  F066         	call	___xxtofl
  8933  00A7F8  C060  F0B0         	movff	?___xxtofl,encoder_statemachine@tmp
  8934  00A7FC  C061  F0B1         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
  8935  00A800  C062  F0B2         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
  8936  00A804  C063  F0B3         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
  8937                           
  8938                           ;encoder.c: 326: tmp *= target_divide_position;
  8939  00A808  C0B0  F06E         	movff	encoder_statemachine@tmp,___flmul@b
  8940  00A80C  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
  8941  00A810  C0B2  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
  8942  00A814  C0B3  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
  8943  00A818  C0AA  F060         	movff	encoder_statemachine@target_divide_position,___xxtofl@val
  8944  00A81C  C0AB  F061         	movff	encoder_statemachine@target_divide_position+1,___xxtofl@val+1
  8945  00A820  0100               	movlb	0	; () banked
  8946  00A822  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  8947  00A824  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  8948  00A826  0E00               	movlw	0
  8949  00A828  EC46  F066         	call	___xxtofl
  8950  00A82C  C060  F072         	movff	?___xxtofl,___flmul@a
  8951  00A830  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
  8952  00A834  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
  8953  00A838  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
  8954  00A83C  EC51  F05F         	call	___flmul	;wreg free
  8955  00A840  C06E  F0B0         	movff	?___flmul,encoder_statemachine@tmp
  8956  00A844  C06F  F0B1         	movff	?___flmul+1,encoder_statemachine@tmp+1
  8957  00A848  C070  F0B2         	movff	?___flmul+2,encoder_statemachine@tmp+2
  8958  00A84C  C071  F0B3         	movff	?___flmul+3,encoder_statemachine@tmp+3
  8959                           
  8960                           ;encoder.c: 327: tmp /= os.division;
  8961  00A850  C0B0  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
  8962  00A854  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
  8963  00A858  C0B2  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
  8964  00A85C  C0B3  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
  8965  00A860  EE20  F0DF         	lfsr	2,_os+19	;volatile
  8966  00A864  CFDE F060          	movff	postinc2,___xxtofl@val
  8967  00A868  CFDD F061          	movff	postdec2,___xxtofl@val+1
  8968  00A86C  0100               	movlb	0	; () banked
  8969  00A86E  0E00               	movlw	0
  8970  00A870  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  8971  00A872  0EFF               	movlw	-1
  8972  00A874  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  8973  00A876  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  8974  00A878  0E01               	movlw	1
  8975  00A87A  EC46  F066         	call	___xxtofl
  8976  00A87E  C060  F072         	movff	?___xxtofl,___fldiv@a
  8977  00A882  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
  8978  00A886  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
  8979  00A88A  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
  8980  00A88E  ECFA  F060         	call	___fldiv	;wreg free
  8981  00A892  C06E  F0B0         	movff	?___fldiv,encoder_statemachine@tmp
  8982  00A896  C06F  F0B1         	movff	?___fldiv+1,encoder_statemachine@tmp+1
  8983  00A89A  C070  F0B2         	movff	?___fldiv+2,encoder_statemachine@tmp+2
  8984  00A89E  C071  F0B3         	movff	?___fldiv+3,encoder_statemachine@tmp+3
  8985                           
  8986                           ;encoder.c: 328: target_position_in_steps = (uint32_t) tmp;
  8987  00A8A2  C0B0  F060         	movff	encoder_statemachine@tmp,___fltol@f1
  8988  00A8A6  C0B1  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
  8989  00A8AA  C0B2  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
  8990  00A8AE  C0B3  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
  8991  00A8B2  ECD1  F06D         	call	___fltol	;wreg free
  8992  00A8B6  C060  F0A6         	movff	?___fltol,encoder_statemachine@target_position_in_steps
  8993  00A8BA  C061  F0A7         	movff	?___fltol+1,encoder_statemachine@target_position_in_steps+1
  8994  00A8BE  C062  F0A8         	movff	?___fltol+2,encoder_statemachine@target_position_in_steps+2
  8995  00A8C2  C063  F0A9         	movff	?___fltol+3,encoder_statemachine@target_position_in_steps+3
  8996                           
  8997                           ;encoder.c: 331: distance_to_target_in_steps = target_position_in_steps - os.current_pos
      +                          ition_in_steps;
  8998  00A8C6  C0D3  F09E         	movff	_os+7,??_encoder_statemachine	;volatile
  8999  00A8CA  C0D4  F09F         	movff	_os+8,??_encoder_statemachine+1	;volatile
  9000  00A8CE  C0D5  F0A0         	movff	_os+9,??_encoder_statemachine+2	;volatile
  9001  00A8D2  C0D6  F0A1         	movff	_os+10,??_encoder_statemachine+3	;volatile
  9002  00A8D6  0100               	movlb	0	; () banked
  9003  00A8D8  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9004  00A8DA  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9005  00A8DC  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
  9006  00A8DE  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
  9007  00A8E0  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
  9008  00A8E2  0E00               	movlw	0
  9009  00A8E4  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
  9010  00A8E6  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
  9011  00A8E8  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9012  00A8EA  51A6               	movf	encoder_statemachine@target_position_in_steps& (0+255),w,b
  9013  00A8EC  259E               	addwf	??_encoder_statemachine& (0+255),w,b
  9014  00A8EE  6FAC               	movwf	encoder_statemachine@distance_to_target_in_steps& (0+255),b
  9015  00A8F0  51A7               	movf	(encoder_statemachine@target_position_in_steps+1)& (0+255),w,b
  9016  00A8F2  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
  9017  00A8F4  6FAD               	movwf	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),b
  9018  00A8F6  51A8               	movf	(encoder_statemachine@target_position_in_steps+2)& (0+255),w,b
  9019  00A8F8  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
  9020  00A8FA  6FAE               	movwf	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),b
  9021  00A8FC  51A9               	movf	(encoder_statemachine@target_position_in_steps+3)& (0+255),w,b
  9022  00A8FE  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
  9023  00A900  6FAF               	movwf	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),b
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;encoder.c: 332: distance_to_target_in_steps += config.full_circle_in_steps;
  9027  00A902  0101               	movlb	1	; () banked
  9028  00A904  511F               	movf	_config& (0+255),w,b
  9029  00A906  0100               	movlb	0	; () banked
  9030  00A908  27AC               	addwf	encoder_statemachine@distance_to_target_in_steps& (0+255),f,b
  9031  00A90A  0101               	movlb	1	; () banked
  9032  00A90C  5120               	movf	(_config+1)& (0+255),w,b
  9033  00A90E  0100               	movlb	0	; () banked
  9034  00A910  23AD               	addwfc	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),f,b
  9035  00A912  0101               	movlb	1	; () banked
  9036  00A914  5121               	movf	(_config+2)& (0+255),w,b
  9037  00A916  0100               	movlb	0	; () banked
  9038  00A918  23AE               	addwfc	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),f,b
  9039  00A91A  0101               	movlb	1	; () banked
  9040  00A91C  5122               	movf	(_config+3)& (0+255),w,b
  9041  00A91E  0100               	movlb	0	; () banked
  9042  00A920  23AF               	addwfc	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),f,b
  9043                           
  9044                           ;encoder.c: 333: while(distance_to_target_in_steps>((int32_t)(config.full_circle_in_step
      +                          s>>1)))
  9045  00A922  D010               	goto	l2524
  9046  00A924                     
  9047                           ; BSR set to: 0
  9048                           ;encoder.c: 334: {;encoder.c: 335: distance_to_target_in_steps -= config.full_circle_in_
      +                          steps;
  9049                           
  9050                           ; BSR set to: 0
  9051  00A924  0101               	movlb	1	; () banked
  9052  00A926  511F               	movf	_config& (0+255),w,b
  9053  00A928  0100               	movlb	0	; () banked
  9054  00A92A  5FAC               	subwf	encoder_statemachine@distance_to_target_in_steps& (0+255),f,b
  9055  00A92C  0101               	movlb	1	; () banked
  9056  00A92E  5120               	movf	(_config+1)& (0+255),w,b
  9057  00A930  0100               	movlb	0	; () banked
  9058  00A932  5BAD               	subwfb	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),f,b
  9059  00A934  0101               	movlb	1	; () banked
  9060  00A936  5121               	movf	(_config+2)& (0+255),w,b
  9061  00A938  0100               	movlb	0	; () banked
  9062  00A93A  5BAE               	subwfb	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),f,b
  9063  00A93C  0101               	movlb	1	; () banked
  9064  00A93E  5122               	movf	(_config+3)& (0+255),w,b
  9065  00A940  0100               	movlb	0	; () banked
  9066  00A942  5BAF               	subwfb	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),f,b
  9067  00A944                     l2524:
  9068                           
  9069                           ; BSR set to: 0
  9070  00A944  C11F  F09E         	movff	_config,??_encoder_statemachine
  9071  00A948  C120  F09F         	movff	_config+1,??_encoder_statemachine+1
  9072  00A94C  C121  F0A0         	movff	_config+2,??_encoder_statemachine+2
  9073  00A950  C122  F0A1         	movff	_config+3,??_encoder_statemachine+3
  9074  00A954  90D8               	bcf	status,0,c
  9075  00A956  33A1               	rrcf	(??_encoder_statemachine+3)& (0+255),f,b
  9076  00A958  33A0               	rrcf	(??_encoder_statemachine+2)& (0+255),f,b
  9077  00A95A  339F               	rrcf	(??_encoder_statemachine+1)& (0+255),f,b
  9078  00A95C  339E               	rrcf	??_encoder_statemachine& (0+255),f,b
  9079  00A95E  51AC               	movf	encoder_statemachine@distance_to_target_in_steps& (0+255),w,b
  9080  00A960  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
  9081  00A962  51AD               	movf	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),w,b
  9082  00A964  599F               	subwfb	(??_encoder_statemachine+1)& (0+255),w,b
  9083  00A966  51AE               	movf	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),w,b
  9084  00A968  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
  9085  00A96A  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  9086  00A96C  0A80               	xorlw	128
  9087  00A96E  6FA2               	movwf	(??_encoder_statemachine+4)& (0+255),b
  9088  00A970  51AF               	movf	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),w,b
  9089  00A972  0A80               	xorlw	128
  9090  00A974  59A2               	subwfb	(??_encoder_statemachine+4)& (0+255),w,b
  9091  00A976  A0D8               	btfss	status,0,c
  9092  00A978  D7D5               	goto	l2525
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;encoder.c: 336: };encoder.c: 361: if(distance_to_target_in_steps<0)
  9096                           
  9097                           ; BSR set to: 0
  9098  00A97A  AFAF               	btfss	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),7,b
  9099  00A97C  D05C               	goto	l2527
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;encoder.c: 362: {;encoder.c: 363: if(os.approach_direction==MOTOR_DIRECTION_CCW)
  9103  00A97E  29DE               	incf	(_os+18)& (0+255),w,b	;volatile
  9104  00A980  A4D8               	btfss	status,2,c
  9105  00A982  D021               	goto	l2528
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;encoder.c: 364: {;encoder.c: 365: motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t
      +                          )(-distance_to_target_in_steps), 0);
  9109  00A984  C0AC  F09E         	movff	encoder_statemachine@distance_to_target_in_steps,??_encoder_statemachine
  9110  00A988  C0AD  F09F         	movff	encoder_statemachine@distance_to_target_in_steps+1,??_encoder_statemachine+1
  9111  00A98C  C0AE  F0A0         	movff	encoder_statemachine@distance_to_target_in_steps+2,??_encoder_statemachine+2
  9112  00A990  C0AF  F0A1         	movff	encoder_statemachine@distance_to_target_in_steps+3,??_encoder_statemachine+3
  9113  00A994  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9114  00A996  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9115  00A998  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
  9116  00A99A  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
  9117  00A99C  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
  9118  00A99E  0E00               	movlw	0
  9119  00A9A0  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
  9120  00A9A2  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
  9121  00A9A4  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9122  00A9A6  C09E  F097         	movff	??_encoder_statemachine,motor_schedule_command@distance_in_steps
  9123  00A9AA  C09F  F098         	movff	??_encoder_statemachine+1,motor_schedule_command@distance_in_steps+1
  9124  00A9AE  C0A0  F099         	movff	??_encoder_statemachine+2,motor_schedule_command@distance_in_steps+2
  9125  00A9B2  C0A1  F09A         	movff	??_encoder_statemachine+3,motor_schedule_command@distance_in_steps+3
  9126  00A9B6  0E00               	movlw	0
  9127  00A9B8  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9128  00A9BA  0E00               	movlw	0
  9129  00A9BC  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9130  00A9BE  0EFF               	movlw	255
  9131  00A9C0  EC82  F072         	call	_motor_schedule_command
  9132                           
  9133                           ;encoder.c: 366: }
  9134  00A9C4  D071               	goto	l2532
  9135  00A9C6                     l2528:
  9136                           
  9137                           ;encoder.c: 367: else;encoder.c: 368: {;encoder.c: 369: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CCW, ((uint32_t)(-distance_to_target_in_steps))+config.overshoot_in_steps, 0);
  9138  00A9C6  C0AC  F09E         	movff	encoder_statemachine@distance_to_target_in_steps,??_encoder_statemachine
  9139  00A9CA  C0AD  F09F         	movff	encoder_statemachine@distance_to_target_in_steps+1,??_encoder_statemachine+1
  9140  00A9CE  C0AE  F0A0         	movff	encoder_statemachine@distance_to_target_in_steps+2,??_encoder_statemachine+2
  9141  00A9D2  C0AF  F0A1         	movff	encoder_statemachine@distance_to_target_in_steps+3,??_encoder_statemachine+3
  9142  00A9D6  0100               	movlb	0	; () banked
  9143  00A9D8  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9144  00A9DA  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9145  00A9DC  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
  9146  00A9DE  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
  9147  00A9E0  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
  9148  00A9E2  0E00               	movlw	0
  9149  00A9E4  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
  9150  00A9E6  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
  9151  00A9E8  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
  9152  00A9EA  0101               	movlb	1	; () banked
  9153  00A9EC  5124               	movf	(_config+5)& (0+255),w,b
  9154  00A9EE  0100               	movlb	0	; () banked
  9155  00A9F0  259E               	addwf	??_encoder_statemachine& (0+255),w,b
  9156  00A9F2  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
  9157  00A9F4  0101               	movlb	1	; () banked
  9158  00A9F6  5125               	movf	(_config+6)& (0+255),w,b
  9159  00A9F8  0100               	movlb	0	; () banked
  9160  00A9FA  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
  9161  00A9FC  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
  9162  00A9FE  0E00               	movlw	0
  9163  00AA00  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
  9164  00AA02  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9165  00AA04  0E00               	movlw	0
  9166  00AA06  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
  9167  00AA08  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9168  00AA0A  0E00               	movlw	0
  9169  00AA0C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9170  00AA0E  0E00               	movlw	0
  9171  00AA10  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9172  00AA12  0EFF               	movlw	255
  9173  00AA14  EC82  F072         	call	_motor_schedule_command
  9174                           
  9175                           ;encoder.c: 370: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
  9176  00AA18  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9177  00AA1C  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9178  00AA20  0100               	movlb	0	; () banked
  9179  00AA22  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9180  00AA24  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9181  00AA26  0E00               	movlw	0
  9182  00AA28  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9183  00AA2A  0E00               	movlw	0
  9184  00AA2C  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9185  00AA2E  0E01               	movlw	1
  9186  00AA30  EC82  F072         	call	_motor_schedule_command
  9187                           
  9188                           ;encoder.c: 371: };encoder.c: 372: }
  9189  00AA34  D039               	goto	l2532
  9190  00AA36                     l2527:
  9191                           
  9192                           ;encoder.c: 373: else;encoder.c: 374: {;encoder.c: 375: if(os.approach_direction==MOTOR_
      +                          DIRECTION_CW)
  9193  00AA36  0100               	movlb	0	; () banked
  9194  00AA38  05DE               	decf	(_os+18)& (0+255),w,b	;volatile
  9195  00AA3A  A4D8               	btfss	status,2,c
  9196  00AA3C  D010               	goto	l2531
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;encoder.c: 376: {;encoder.c: 377: motor_schedule_command(MOTOR_DIRECTION_CW, (uint32_t)
      +                           distance_to_target_in_steps, 0);
  9200  00AA3E  C0AC  F097         	movff	encoder_statemachine@distance_to_target_in_steps,motor_schedule_command@distance_
      +                          in_steps
  9201  00AA42  C0AD  F098         	movff	encoder_statemachine@distance_to_target_in_steps+1,motor_schedule_command@distanc
      +                          e_in_steps+1
  9202  00AA46  C0AE  F099         	movff	encoder_statemachine@distance_to_target_in_steps+2,motor_schedule_command@distanc
      +                          e_in_steps+2
  9203  00AA4A  C0AF  F09A         	movff	encoder_statemachine@distance_to_target_in_steps+3,motor_schedule_command@distanc
      +                          e_in_steps+3
  9204  00AA4E  0E00               	movlw	0
  9205  00AA50  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9206  00AA52  0E00               	movlw	0
  9207  00AA54  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9208  00AA56  0E01               	movlw	1
  9209  00AA58  EC82  F072         	call	_motor_schedule_command
  9210                           
  9211                           ;encoder.c: 378: }
  9212  00AA5C  D025               	goto	l2532
  9213  00AA5E                     l2531:
  9214                           
  9215                           ;encoder.c: 379: else;encoder.c: 380: {;encoder.c: 381: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CW, (uint32_t) distance_to_target_in_steps+config.overshoot_in_steps, 0);
  9216  00AA5E  0101               	movlb	1	; () banked
  9217  00AA60  5124               	movf	(_config+5)& (0+255),w,b
  9218  00AA62  0100               	movlb	0	; () banked
  9219  00AA64  25AC               	addwf	encoder_statemachine@distance_to_target_in_steps& (0+255),w,b
  9220  00AA66  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
  9221  00AA68  0101               	movlb	1	; () banked
  9222  00AA6A  5125               	movf	(_config+6)& (0+255),w,b
  9223  00AA6C  0100               	movlb	0	; () banked
  9224  00AA6E  21AD               	addwfc	(encoder_statemachine@distance_to_target_in_steps+1)& (0+255),w,b
  9225  00AA70  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
  9226  00AA72  0E00               	movlw	0
  9227  00AA74  21AE               	addwfc	(encoder_statemachine@distance_to_target_in_steps+2)& (0+255),w,b
  9228  00AA76  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9229  00AA78  0E00               	movlw	0
  9230  00AA7A  21AF               	addwfc	(encoder_statemachine@distance_to_target_in_steps+3)& (0+255),w,b
  9231  00AA7C  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9232  00AA7E  0E00               	movlw	0
  9233  00AA80  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9234  00AA82  0E00               	movlw	0
  9235  00AA84  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9236  00AA86  0E01               	movlw	1
  9237  00AA88  EC82  F072         	call	_motor_schedule_command
  9238                           
  9239                           ;encoder.c: 382: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
  9240  00AA8C  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
  9241  00AA90  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
  9242  00AA94  0100               	movlb	0	; () banked
  9243  00AA96  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
  9244  00AA98  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
  9245  00AA9A  0E00               	movlw	0
  9246  00AA9C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
  9247  00AA9E  0E00               	movlw	0
  9248  00AAA0  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
  9249  00AAA2  0EFF               	movlw	255
  9250  00AAA4  EC82  F072         	call	_motor_schedule_command
  9251  00AAA8                     l2532:
  9252                           
  9253                           ;encoder.c: 383: };encoder.c: 384: };encoder.c: 386: os.divide_position = target_divide_
      +                          position;
  9254  00AAA8  C0AA  F0E2         	movff	encoder_statemachine@target_divide_position,_os+22	;volatile
  9255  00AAAC  C0AB  F0E3         	movff	encoder_statemachine@target_divide_position+1,_os+23	;volatile
  9256  00AAB0                     l2519:
  9257                           
  9258                           ;encoder.c: 387: };encoder.c: 388: if(os.encoder2Count>0)
  9259  00AAB0  0100               	movlb	0	; () banked
  9260  00AAB2  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
  9261  00AAB4  0A80               	xorlw	128
  9262  00AAB6  0F7F               	addlw	-129
  9263  00AAB8  A0D8               	btfss	status,0,c
  9264  00AABA  D01A               	goto	l2535
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;encoder.c: 389: {;encoder.c: 390: ++os.divide_jump_size;
  9268  00AABC  4BE4               	infsnz	(_os+24)& (0+255),f,b	;volatile
  9269  00AABE  2BE5               	incf	(_os+25)& (0+255),f,b	;volatile
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;encoder.c: 391: if(os.divide_jump_size==0)
  9273  00AAC0  51E4               	movf	(_os+24)& (0+255),w,b	;volatile
  9274  00AAC2  11E5               	iorwf	(_os+25)& (0+255),w,b	;volatile
  9275  00AAC4  A4D8               	btfss	status,2,c
  9276  00AAC6  D004               	goto	l2534
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;encoder.c: 392: os.divide_jump_size = 1;
  9280  00AAC8  0E00               	movlw	0
  9281  00AACA  6FE5               	movwf	(_os+25)& (0+255),b	;volatile
  9282  00AACC  0E01               	movlw	1
  9283  00AACE  6FE4               	movwf	(_os+24)& (0+255),b	;volatile
  9284  00AAD0                     l2534:
  9285                           
  9286                           ; BSR set to: 0
  9287                           ;encoder.c: 393: if(os.divide_jump_size>=os.division)
  9288                           
  9289                           ; BSR set to: 0
  9290  00AAD0  51DF               	movf	(_os+19)& (0+255),w,b	;volatile
  9291  00AAD2  5DE4               	subwf	(_os+24)& (0+255),w,b	;volatile
  9292  00AAD4  51E5               	movf	(_os+25)& (0+255),w,b	;volatile
  9293  00AAD6  0A80               	xorlw	128
  9294  00AAD8  6F9E               	movwf	??_encoder_statemachine& (0+255),b
  9295  00AADA  51E0               	movf	(_os+20)& (0+255),w,b	;volatile
  9296  00AADC  0A80               	xorlw	128
  9297  00AADE  599E               	subwfb	??_encoder_statemachine& (0+255),w,b
  9298  00AAE0  A0D8               	btfss	status,0,c
  9299  00AAE2  D006               	goto	l2535
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;encoder.c: 394: os.divide_jump_size = os.division - 1;
  9303  00AAE4  0EFF               	movlw	255
  9304  00AAE6  25DF               	addwf	(_os+19)& (0+255),w,b	;volatile
  9305  00AAE8  6FE4               	movwf	(_os+24)& (0+255),b	;volatile
  9306  00AAEA  0EFF               	movlw	255
  9307  00AAEC  21E0               	addwfc	(_os+20)& (0+255),w,b	;volatile
  9308  00AAEE  6FE5               	movwf	(_os+25)& (0+255),b	;volatile
  9309  00AAF0                     l2535:
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
  9313                           
  9314                           ; BSR set to: 0
  9315  00AAF0  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
  9316  00AAF2  D383               	goto	l2469
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;encoder.c: 397: {;encoder.c: 398: --os.divide_jump_size;
  9320  00AAF4  07E4               	decf	(_os+24)& (0+255),f,b	;volatile
  9321  00AAF6  A0D8               	btfss	status,0,c
  9322  00AAF8  07E5               	decf	(_os+25)& (0+255),f,b	;volatile
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;encoder.c: 399: if(os.divide_jump_size==0)
  9326  00AAFA  51E4               	movf	(_os+24)& (0+255),w,b	;volatile
  9327  00AAFC  11E5               	iorwf	(_os+25)& (0+255),w,b	;volatile
  9328  00AAFE  A4D8               	btfss	status,2,c
  9329  00AB00  D002               	goto	l2537
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;encoder.c: 400: os.divide_jump_size = -1;
  9333  00AB02  69E4               	setf	(_os+24)& (0+255),b	;volatile
  9334  00AB04  69E5               	setf	(_os+25)& (0+255),b	;volatile
  9335  00AB06                     l2537:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;encoder.c: 401: if(os.divide_jump_size<=(-os.division))
  9339                           
  9340                           ; BSR set to: 0
  9341  00AB06  EE20  F0DF         	lfsr	2,_os+19	;volatile
  9342  00AB0A  CFDE F09E          	movff	postinc2,??_encoder_statemachine
  9343  00AB0E  CFDD F09F          	movff	postdec2,??_encoder_statemachine+1
  9344  00AB12  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9345  00AB14  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9346  00AB16  4B9E               	infsnz	??_encoder_statemachine& (0+255),f,b
  9347  00AB18  2B9F               	incf	(??_encoder_statemachine+1)& (0+255),f,b
  9348  00AB1A  51E4               	movf	(_os+24)& (0+255),w,b	;volatile
  9349  00AB1C  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
  9350  00AB1E  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9351  00AB20  0A80               	xorlw	128
  9352  00AB22  6FA0               	movwf	(??_encoder_statemachine+2)& (0+255),b
  9353  00AB24  51E5               	movf	(_os+25)& (0+255),w,b	;volatile
  9354  00AB26  0A80               	xorlw	128
  9355  00AB28  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
  9356  00AB2A  A0D8               	btfss	status,0,c
  9357  00AB2C  D366               	goto	l2469
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;encoder.c: 402: os.divide_jump_size = 1 - os.division;
  9361  00AB2E  EE20  F0DF         	lfsr	2,_os+19	;volatile
  9362  00AB32  CFDE F09E          	movff	postinc2,??_encoder_statemachine
  9363  00AB36  CFDD F09F          	movff	postdec2,??_encoder_statemachine+1
  9364  00AB3A  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
  9365  00AB3C  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
  9366  00AB3E  4B9E               	infsnz	??_encoder_statemachine& (0+255),f,b
  9367  00AB40  2B9F               	incf	(??_encoder_statemachine+1)& (0+255),f,b
  9368  00AB42  0E01               	movlw	1
  9369  00AB44  259E               	addwf	??_encoder_statemachine& (0+255),w,b
  9370  00AB46  6FE4               	movwf	(_os+24)& (0+255),b	;volatile
  9371  00AB48  0E00               	movlw	0
  9372  00AB4A  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
  9373  00AB4C  6FE5               	movwf	(_os+25)& (0+255),b	;volatile
  9374                           
  9375                           ; BSR set to: 0
  9376                           ;encoder.c: 403: };encoder.c: 404: break;
  9377                           
  9378                           ; BSR set to: 0
  9379  00AB4E  D355               	goto	l2469
  9380  00AB50                     
  9381                           ; BSR set to: 0
  9382                           ;encoder.c: 410: if(os.button1==1)
  9383                           
  9384                           ; BSR set to: 0
  9385  00AB50  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  9386  00AB52  A4D8               	btfss	status,2,c
  9387  00AB54  D002               	goto	l2542
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;encoder.c: 411: {;encoder.c: 412: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
  9391  00AB56  0E62               	movlw	98
  9392  00AB58  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9393  00AB5A                     l2542:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;encoder.c: 413: };encoder.c: 414: if(os.encoder1Count>0)
  9397                           
  9398                           ; BSR set to: 0
  9399  00AB5A  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  9400  00AB5C  0A80               	xorlw	128
  9401  00AB5E  0F7F               	addlw	-129
  9402  00AB60  A0D8               	btfss	status,0,c
  9403  00AB62  D002               	goto	l2543
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;encoder.c: 415: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
  9407  00AB64  0E52               	movlw	82
  9408  00AB66  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9409  00AB68                     l2543:
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;encoder.c: 416: if(os.encoder1Count<0)
  9413                           
  9414                           ; BSR set to: 0
  9415  00AB68  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
  9416  00AB6A  D01A               	goto	l2545
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
  9420  00AB6C  0E52               	movlw	82
  9421  00AB6E  D00F               	goto	L10
  9422  00AB70                     
  9423                           ; BSR set to: 0
  9424                           ;encoder.c: 420: if(os.button1==1)
  9425                           
  9426                           ; BSR set to: 0
  9427  00AB70  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
  9428  00AB72  A4D8               	btfss	status,2,c
  9429  00AB74  D002               	goto	l2547
  9430                           
  9431                           ; BSR set to: 0
  9432                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_MAIN_ARC;
  9433  00AB76  0E03               	movlw	3
  9434  00AB78  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9435  00AB7A                     l2547:
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;encoder.c: 422: if(os.encoder1Count>0)
  9439                           
  9440                           ; BSR set to: 0
  9441  00AB7A  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  9442  00AB7C  0A80               	xorlw	128
  9443  00AB7E  0F7F               	addlw	-129
  9444  00AB80  A0D8               	btfss	status,0,c
  9445  00AB82  D002               	goto	l2548
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;encoder.c: 423: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
  9449  00AB84  0E51               	movlw	81
  9450  00AB86  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9451  00AB88                     l2548:
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;encoder.c: 424: if(os.encoder1Count<0)
  9455                           
  9456                           ; BSR set to: 0
  9457  00AB88  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
  9458  00AB8A  D00A               	goto	l2545
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;encoder.c: 425: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
  9462  00AB8C  0E51               	movlw	81
  9463  00AB8E                     L10:
  9464  00AB8E  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;encoder.c: 427: }
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;encoder.c: 426: break;
  9471  00AB90  D007               	goto	l2545
  9472  00AB92                     
  9473                           ; BSR set to: 0
  9474                           
  9475                           ; BSR set to: 0
  9476  00AB92  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
  9477                           
  9478                           ; Switch size 1, requested type "space"
  9479                           ; Number of cases is 2, Range of values is 81 to 82
  9480                           ; switch strategies available:
  9481                           ; Name         Instructions Cycles
  9482                           ; simple_byte            7     4 (average)
  9483                           ;	Chosen strategy is simple_byte
  9484  00AB94  0A51               	xorlw	81	; case 81
  9485  00AB96  B4D8               	btfsc	status,2,c
  9486  00AB98  D7DB               	goto	l2541
  9487  00AB9A  0A03               	xorlw	3	; case 82
  9488  00AB9C  B4D8               	btfsc	status,2,c
  9489  00AB9E  D7E8               	goto	l2546
  9490  00ABA0                     l2545:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;encoder.c: 428: if(os.button2==1)
  9494                           
  9495                           ; BSR set to: 0
  9496  00ABA0  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  9497  00ABA2  A4D8               	btfss	status,2,c
  9498  00ABA4  D00A               	goto	l2550
  9499                           
  9500                           ; BSR set to: 0
  9501                           ;encoder.c: 429: {;encoder.c: 430: os.arc_step_size = encoder_next_arc_step_size(os.arc_
      +                          step_size);
  9502  00ABA6  C0E6  F060         	movff	_os+26,encoder_next_arc_step_size@old_stepsize	;volatile
  9503  00ABAA  C0E7  F061         	movff	_os+27,encoder_next_arc_step_size@old_stepsize+1	;volatile
  9504  00ABAE  EC86  F075         	call	_encoder_next_arc_step_size	;wreg free
  9505  00ABB2  C060  F0E6         	movff	?_encoder_next_arc_step_size,_os+26	;volatile
  9506  00ABB6  C061  F0E7         	movff	?_encoder_next_arc_step_size+1,_os+27	;volatile
  9507  00ABBA                     l2550:
  9508                           
  9509                           ;encoder.c: 431: };encoder.c: 432: if(os.encoder2Count>0)
  9510  00ABBA  0100               	movlb	0	; () banked
  9511  00ABBC  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
  9512  00ABBE  0A80               	xorlw	128
  9513  00ABC0  0F7F               	addlw	-129
  9514  00ABC2  A0D8               	btfss	status,0,c
  9515  00ABC4  D01C               	goto	l2552
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;encoder.c: 433: {;encoder.c: 434: os.arc_size += os.arc_step_size;
  9519  00ABC6  51E6               	movf	(_os+26)& (0+255),w,b	;volatile
  9520  00ABC8  27E8               	addwf	(_os+28)& (0+255),f,b	;volatile
  9521  00ABCA  51E7               	movf	(_os+27)& (0+255),w,b	;volatile
  9522  00ABCC  23E9               	addwfc	(_os+29)& (0+255),f,b	;volatile
  9523  00ABCE  0E00               	movlw	0
  9524  00ABD0  23EA               	addwfc	(_os+30)& (0+255),f,b	;volatile
  9525  00ABD2  0E00               	movlw	0
  9526  00ABD4  23EB               	addwfc	(_os+31)& (0+255),f,b	;volatile
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;encoder.c: 435: if(os.arc_size>100000)
  9530  00ABD6  BFEB               	btfsc	(_os+31)& (0+255),7,b	;volatile
  9531  00ABD8  D012               	goto	l2552
  9532  00ABDA  51EB               	movf	(_os+31)& (0+255),w,b	;volatile
  9533  00ABDC  E108               	bnz	u18610
  9534  00ABDE  0EA1               	movlw	161
  9535  00ABE0  5DE8               	subwf	(_os+28)& (0+255),w,b	;volatile
  9536  00ABE2  0E86               	movlw	134
  9537  00ABE4  59E9               	subwfb	(_os+29)& (0+255),w,b	;volatile
  9538  00ABE6  0E01               	movlw	1
  9539  00ABE8  59EA               	subwfb	(_os+30)& (0+255),w,b	;volatile
  9540  00ABEA  A0D8               	btfss	status,0,c
  9541  00ABEC  D008               	goto	l2552
  9542  00ABEE                     u18610:
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;encoder.c: 436: os.arc_size = 100000;
  9546  00ABEE  0EA0               	movlw	160
  9547  00ABF0  6FE8               	movwf	(_os+28)& (0+255),b	;volatile
  9548  00ABF2  0E86               	movlw	134
  9549  00ABF4  6FE9               	movwf	(_os+29)& (0+255),b	;volatile
  9550  00ABF6  0E01               	movlw	1
  9551  00ABF8  6FEA               	movwf	(_os+30)& (0+255),b	;volatile
  9552  00ABFA  0E00               	movlw	0
  9553  00ABFC  6FEB               	movwf	(_os+31)& (0+255),b	;volatile
  9554  00ABFE                     l2552:
  9555                           
  9556                           ; BSR set to: 0
  9557                           ;encoder.c: 437: };encoder.c: 438: if(os.encoder2Count<0)
  9558                           
  9559                           ; BSR set to: 0
  9560                           
  9561                           ; BSR set to: 0
  9562  00ABFE  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
  9563  00AC00  D2FC               	goto	l2469
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;encoder.c: 439: {;encoder.c: 440: os.arc_size -= os.arc_step_size;
  9567  00AC02  51E6               	movf	(_os+26)& (0+255),w,b	;volatile
  9568  00AC04  6F9E               	movwf	??_encoder_statemachine& (0+255),b
  9569  00AC06  51E7               	movf	(_os+27)& (0+255),w,b	;volatile
  9570  00AC08  6F9F               	movwf	(??_encoder_statemachine+1)& (0+255),b
  9571  00AC0A  6BA0               	clrf	(??_encoder_statemachine+2)& (0+255),b
  9572  00AC0C  6BA1               	clrf	(??_encoder_statemachine+3)& (0+255),b
  9573  00AC0E  519E               	movf	??_encoder_statemachine& (0+255),w,b
  9574  00AC10  5FE8               	subwf	(_os+28)& (0+255),f,b	;volatile
  9575  00AC12  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
  9576  00AC14  5BE9               	subwfb	(_os+29)& (0+255),f,b	;volatile
  9577  00AC16  51A0               	movf	(??_encoder_statemachine+2)& (0+255),w,b
  9578  00AC18  5BEA               	subwfb	(_os+30)& (0+255),f,b	;volatile
  9579  00AC1A  51A1               	movf	(??_encoder_statemachine+3)& (0+255),w,b
  9580  00AC1C  5BEB               	subwfb	(_os+31)& (0+255),f,b	;volatile
  9581                           
  9582                           ;encoder.c: 441: if(os.arc_size<1)
  9583  00AC1E  BFEB               	btfsc	(_os+31)& (0+255),7,b	;volatile
  9584  00AC20  D007               	goto	u18630
  9585  00AC22  51EB               	movf	(_os+31)& (0+255),w,b	;volatile
  9586  00AC24  11EA               	iorwf	(_os+30)& (0+255),w,b	;volatile
  9587  00AC26  11E9               	iorwf	(_os+29)& (0+255),w,b	;volatile
  9588  00AC28  E102               	bnz	u18631
  9589  00AC2A  05E8               	decf	(_os+28)& (0+255),w,b	;volatile
  9590  00AC2C  B0D8               	btfsc	status,0,c
  9591  00AC2E                     u18631:
  9592  00AC2E  D2E5               	goto	l2469
  9593  00AC30                     u18630:
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;encoder.c: 442: os.arc_size = 1;
  9597  00AC30  0E01               	movlw	1
  9598  00AC32  6FE8               	movwf	(_os+28)& (0+255),b	;volatile
  9599  00AC34  0E00               	movlw	0
  9600  00AC36  6FE9               	movwf	(_os+29)& (0+255),b	;volatile
  9601  00AC38  0E00               	movlw	0
  9602  00AC3A  6FEA               	movwf	(_os+30)& (0+255),b	;volatile
  9603  00AC3C  0E00               	movlw	0
  9604  00AC3E  6FEB               	movwf	(_os+31)& (0+255),b	;volatile
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;encoder.c: 443: };encoder.c: 444: break;
  9608                           
  9609                           ; BSR set to: 0
  9610  00AC40  D2DC               	goto	l2469
  9611  00AC42                     
  9612                           ; BSR set to: 0
  9613                           ;encoder.c: 447: if(os.encoder1Count>0)
  9614                           
  9615                           ; BSR set to: 0
  9616  00AC42  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
  9617  00AC44  0A80               	xorlw	128
  9618  00AC46  0F7F               	addlw	-129
  9619  00AC48  A0D8               	btfss	status,0,c
  9620  00AC4A  D015               	goto	l2558
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;encoder.c: 448: {;encoder.c: 449: if(os.arc_speed<config.maximum_speed_arc)
  9624  00AC4C  0101               	movlb	1	; () banked
  9625  00AC4E  512C               	movf	(_config+13)& (0+255),w,b
  9626  00AC50  0100               	movlb	0	; () banked
  9627  00AC52  5DEC               	subwf	(_os+32)& (0+255),w,b	;volatile
  9628  00AC54  0101               	movlb	1	; () banked
  9629  00AC56  512D               	movf	(_config+14)& (0+255),w,b
  9630  00AC58  0100               	movlb	0	; () banked
  9631  00AC5A  59ED               	subwfb	(_os+33)& (0+255),w,b	;volatile
  9632  00AC5C  B0D8               	btfsc	status,0,c
  9633  00AC5E  D002               	goto	l2557
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;encoder.c: 450: ++os.arc_speed;
  9637  00AC60  4BEC               	infsnz	(_os+32)& (0+255),f,b	;volatile
  9638  00AC62  2BED               	incf	(_os+33)& (0+255),f,b	;volatile
  9639  00AC64                     l2557:
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;encoder.c: 451: if(os.busy)
  9643                           
  9644                           ; BSR set to: 0
  9645  00AC64  51DA               	movf	(_os+14)& (0+255),w,b	;volatile
  9646  00AC66  B4D8               	btfsc	status,2,c
  9647  00AC68  D006               	goto	l2558
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;encoder.c: 452: motor_change_speed(os.arc_speed);
  9651  00AC6A  C0EC  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
  9652  00AC6E  C0ED  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
  9653  00AC72  EC2E  F07B         	call	_motor_change_speed	;wreg free
  9654  00AC76                     l2558:
  9655                           
  9656                           ;encoder.c: 453: };encoder.c: 454: if(os.encoder1Count<0)
  9657  00AC76  0100               	movlb	0	; () banked
  9658  00AC78  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
  9659  00AC7A  D11D               	goto	l2562
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;encoder.c: 455: {;encoder.c: 456: if(os.arc_speed>config.minimum_speed)
  9663  00AC7C  51EC               	movf	(_os+32)& (0+255),w,b	;volatile
  9664  00AC7E  0101               	movlb	1	; () banked
  9665  00AC80  5D26               	subwf	(_config+7)& (0+255),w,b
  9666  00AC82  0100               	movlb	0	; () banked
  9667  00AC84  51ED               	movf	(_os+33)& (0+255),w,b	;volatile
  9668  00AC86  0101               	movlb	1	; () banked
  9669  00AC88  5927               	subwfb	(_config+8)& (0+255),w,b
  9670  00AC8A  B0D8               	btfsc	status,0,c
  9671  00AC8C  D004               	goto	l2560
  9672                           
  9673                           ; BSR set to: 1
  9674                           ;encoder.c: 457: --os.arc_speed;
  9675  00AC8E  0100               	movlb	0	; () banked
  9676  00AC90  07EC               	decf	(_os+32)& (0+255),f,b	;volatile
  9677  00AC92  A0D8               	btfss	status,0,c
  9678  00AC94  07ED               	decf	(_os+33)& (0+255),f,b	;volatile
  9679  00AC96                     l2560:
  9680                           
  9681                           ;encoder.c: 458: if(os.busy)
  9682                           
  9683                           ; BSR set to: 0
  9684  00AC96  0100               	movlb	0	; () banked
  9685  00AC98  51DA               	movf	(_os+14)& (0+255),w,b	;volatile
  9686  00AC9A  B4D8               	btfsc	status,2,c
  9687  00AC9C  D10C               	goto	l2562
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;encoder.c: 459: motor_change_speed(os.arc_speed);
  9691  00AC9E  C0EC  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
  9692  00ACA2  C0ED  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
  9693  00ACA6  EC2E  F07B         	call	_motor_change_speed	;wreg free
  9694                           
  9695                           ;encoder.c: 460: };encoder.c: 461: switch(os.displayState)
  9696  00ACAA  D105               	goto	l2562
  9697  00ACAC                     
  9698                           ;encoder.c: 464: if(os.button2==1)
  9699  00ACAC  0100               	movlb	0	; () banked
  9700  00ACAE  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  9701  00ACB0  A4D8               	btfss	status,2,c
  9702  00ACB2  D06F               	goto	l2564
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;encoder.c: 465: {;encoder.c: 466: tmp = (float) os.arc_size;
  9706  00ACB4  C0E8  F060         	movff	_os+28,___xxtofl@val	;volatile
  9707  00ACB8  C0E9  F061         	movff	_os+29,___xxtofl@val+1	;volatile
  9708  00ACBC  C0EA  F062         	movff	_os+30,___xxtofl@val+2	;volatile
  9709  00ACC0  C0EB  F063         	movff	_os+31,___xxtofl@val+3	;volatile
  9710  00ACC4  0E01               	movlw	1
  9711  00ACC6  EC46  F066         	call	___xxtofl
  9712  00ACCA  C060  F0B0         	movff	?___xxtofl,encoder_statemachine@tmp
  9713  00ACCE  C061  F0B1         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
  9714  00ACD2  C062  F0B2         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
  9715  00ACD6  C063  F0B3         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
  9716                           
  9717                           ;encoder.c: 467: tmp *= config.full_circle_in_steps;
  9718  00ACDA  C0B0  F06E         	movff	encoder_statemachine@tmp,___flmul@b
  9719  00ACDE  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
  9720  00ACE2  C0B2  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
  9721  00ACE6  C0B3  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
  9722  00ACEA  C11F  F060         	movff	_config,___xxtofl@val
  9723  00ACEE  C120  F061         	movff	_config+1,___xxtofl@val+1
  9724  00ACF2  C121  F062         	movff	_config+2,___xxtofl@val+2
  9725  00ACF6  C122  F063         	movff	_config+3,___xxtofl@val+3
  9726  00ACFA  0E00               	movlw	0
  9727  00ACFC  EC46  F066         	call	___xxtofl
  9728  00AD00  C060  F072         	movff	?___xxtofl,___flmul@a
  9729  00AD04  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
  9730  00AD08  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
  9731  00AD0C  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
  9732  00AD10  EC51  F05F         	call	___flmul	;wreg free
  9733  00AD14  C06E  F0B0         	movff	?___flmul,encoder_statemachine@tmp
  9734  00AD18  C06F  F0B1         	movff	?___flmul+1,encoder_statemachine@tmp+1
  9735  00AD1C  C070  F0B2         	movff	?___flmul+2,encoder_statemachine@tmp+2
  9736  00AD20  C071  F0B3         	movff	?___flmul+3,encoder_statemachine@tmp+3
  9737                           
  9738                           ;encoder.c: 468: tmp /= 36000;
  9739  00AD24  C0B0  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
  9740  00AD28  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
  9741  00AD2C  C0B2  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
  9742  00AD30  C0B3  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
  9743  00AD34  0E00               	movlw	0
  9744  00AD36  0100               	movlb	0	; () banked
  9745  00AD38  6F72               	movwf	___fldiv@a& (0+255),b
  9746  00AD3A  0EA0               	movlw	160
  9747  00AD3C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  9748  00AD3E  0E0C               	movlw	12
  9749  00AD40  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  9750  00AD42  0E47               	movlw	71
  9751  00AD44  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  9752  00AD46  ECFA  F060         	call	___fldiv	;wreg free
  9753  00AD4A  C06E  F0B0         	movff	?___fldiv,encoder_statemachine@tmp
  9754  00AD4E  C06F  F0B1         	movff	?___fldiv+1,encoder_statemachine@tmp+1
  9755  00AD52  C070  F0B2         	movff	?___fldiv+2,encoder_statemachine@tmp+2
  9756  00AD56  C071  F0B3         	movff	?___fldiv+3,encoder_statemachine@tmp+3
  9757                           
  9758                           ;encoder.c: 469: motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t ) tmp, os.arc_spe
      +                          ed);
  9759  00AD5A  C0B0  F060         	movff	encoder_statemachine@tmp,___fltol@f1
  9760  00AD5E  C0B1  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
  9761  00AD62  C0B2  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
  9762  00AD66  C0B3  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
  9763  00AD6A  ECD1  F06D         	call	___fltol	;wreg free
  9764  00AD6E  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
  9765  00AD72  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
  9766  00AD76  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
  9767  00AD7A  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
  9768  00AD7E  C0EC  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
  9769  00AD82  C0ED  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
  9770  00AD86  0EFF               	movlw	255
  9771  00AD88  EC82  F072         	call	_motor_schedule_command
  9772                           
  9773                           ;encoder.c: 470: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
  9774  00AD8C  0E62               	movlw	98
  9775  00AD8E  0100               	movlb	0	; () banked
  9776  00AD90  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9777  00AD92                     l2564:
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;encoder.c: 471: };encoder.c: 472: if(os.encoder2Count>0)
  9781                           
  9782                           ; BSR set to: 0
  9783  00AD92  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
  9784  00AD94  0A80               	xorlw	128
  9785  00AD96  0F7F               	addlw	-129
  9786  00AD98  A0D8               	btfss	status,0,c
  9787  00AD9A  D22F               	goto	l2469
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
  9791  00AD9C  0E62               	movlw	98
  9792  00AD9E  D1F3               	goto	L17
  9793  00ADA0                     
  9794                           ; BSR set to: 0
  9795                           ;encoder.c: 476: if(os.button2==1)
  9796                           
  9797                           ; BSR set to: 0
  9798  00ADA0  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  9799  00ADA2  A4D8               	btfss	status,2,c
  9800  00ADA4  D007               	goto	l2568
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;encoder.c: 477: {;encoder.c: 478: if(os.busy)
  9804  00ADA6  51DA               	movf	(_os+14)& (0+255),w,b	;volatile
  9805  00ADA8  A4D8               	btfss	status,2,c
  9806                           
  9807                           ; BSR set to: 0
  9808                           ;encoder.c: 479: motor_stop();
  9809  00ADAA  ECB0  F078         	call	_motor_stop	;wreg free
  9810                           
  9811                           ;encoder.c: 480: os.displayState = DISPLAY_STATE_MAIN_ARC;
  9812  00ADAE  0E03               	movlw	3
  9813  00ADB0  0100               	movlb	0	; () banked
  9814  00ADB2  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9815  00ADB4                     l2568:
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;encoder.c: 481: };encoder.c: 482: if(os.encoder2Count>0)
  9819                           
  9820                           ; BSR set to: 0
  9821  00ADB4  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
  9822  00ADB6  0A80               	xorlw	128
  9823  00ADB8  0F7F               	addlw	-129
  9824  00ADBA  A0D8               	btfss	status,0,c
  9825  00ADBC  D002               	goto	l2570
  9826                           
  9827                           ; BSR set to: 0
  9828                           ;encoder.c: 483: os.displayState = DISPLAY_STATE_ARC2_CW;
  9829  00ADBE  0E63               	movlw	99
  9830  00ADC0  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9831  00ADC2                     l2570:
  9832                           
  9833                           ; BSR set to: 0
  9834                           ;encoder.c: 484: if(os.encoder2Count<0)
  9835                           
  9836                           ; BSR set to: 0
  9837  00ADC2  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
  9838  00ADC4  D21A               	goto	l2469
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;encoder.c: 485: os.displayState = DISPLAY_STATE_ARC2_CCW;
  9842  00ADC6  0E61               	movlw	97
  9843  00ADC8  D1DE               	goto	L17
  9844  00ADCA                     
  9845                           ; BSR set to: 0
  9846                           ;encoder.c: 488: if(os.button2==1)
  9847                           
  9848                           ; BSR set to: 0
  9849  00ADCA  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  9850  00ADCC  A4D8               	btfss	status,2,c
  9851  00ADCE  D06F               	goto	l2573
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;encoder.c: 489: {;encoder.c: 490: tmp = (float) os.arc_size;
  9855  00ADD0  C0E8  F060         	movff	_os+28,___xxtofl@val	;volatile
  9856  00ADD4  C0E9  F061         	movff	_os+29,___xxtofl@val+1	;volatile
  9857  00ADD8  C0EA  F062         	movff	_os+30,___xxtofl@val+2	;volatile
  9858  00ADDC  C0EB  F063         	movff	_os+31,___xxtofl@val+3	;volatile
  9859  00ADE0  0E01               	movlw	1
  9860  00ADE2  EC46  F066         	call	___xxtofl
  9861  00ADE6  C060  F0B0         	movff	?___xxtofl,encoder_statemachine@tmp
  9862  00ADEA  C061  F0B1         	movff	?___xxtofl+1,encoder_statemachine@tmp+1
  9863  00ADEE  C062  F0B2         	movff	?___xxtofl+2,encoder_statemachine@tmp+2
  9864  00ADF2  C063  F0B3         	movff	?___xxtofl+3,encoder_statemachine@tmp+3
  9865                           
  9866                           ;encoder.c: 491: tmp *= config.full_circle_in_steps;
  9867  00ADF6  C0B0  F06E         	movff	encoder_statemachine@tmp,___flmul@b
  9868  00ADFA  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___flmul@b+1
  9869  00ADFE  C0B2  F070         	movff	encoder_statemachine@tmp+2,___flmul@b+2
  9870  00AE02  C0B3  F071         	movff	encoder_statemachine@tmp+3,___flmul@b+3
  9871  00AE06  C11F  F060         	movff	_config,___xxtofl@val
  9872  00AE0A  C120  F061         	movff	_config+1,___xxtofl@val+1
  9873  00AE0E  C121  F062         	movff	_config+2,___xxtofl@val+2
  9874  00AE12  C122  F063         	movff	_config+3,___xxtofl@val+3
  9875  00AE16  0E00               	movlw	0
  9876  00AE18  EC46  F066         	call	___xxtofl
  9877  00AE1C  C060  F072         	movff	?___xxtofl,___flmul@a
  9878  00AE20  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
  9879  00AE24  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
  9880  00AE28  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
  9881  00AE2C  EC51  F05F         	call	___flmul	;wreg free
  9882  00AE30  C06E  F0B0         	movff	?___flmul,encoder_statemachine@tmp
  9883  00AE34  C06F  F0B1         	movff	?___flmul+1,encoder_statemachine@tmp+1
  9884  00AE38  C070  F0B2         	movff	?___flmul+2,encoder_statemachine@tmp+2
  9885  00AE3C  C071  F0B3         	movff	?___flmul+3,encoder_statemachine@tmp+3
  9886                           
  9887                           ;encoder.c: 492: tmp /= 36000;
  9888  00AE40  C0B0  F06E         	movff	encoder_statemachine@tmp,___fldiv@b
  9889  00AE44  C0B1  F06F         	movff	encoder_statemachine@tmp+1,___fldiv@b+1
  9890  00AE48  C0B2  F070         	movff	encoder_statemachine@tmp+2,___fldiv@b+2
  9891  00AE4C  C0B3  F071         	movff	encoder_statemachine@tmp+3,___fldiv@b+3
  9892  00AE50  0E00               	movlw	0
  9893  00AE52  0100               	movlb	0	; () banked
  9894  00AE54  6F72               	movwf	___fldiv@a& (0+255),b
  9895  00AE56  0EA0               	movlw	160
  9896  00AE58  6F73               	movwf	(___fldiv@a+1)& (0+255),b
  9897  00AE5A  0E0C               	movlw	12
  9898  00AE5C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
  9899  00AE5E  0E47               	movlw	71
  9900  00AE60  6F75               	movwf	(___fldiv@a+3)& (0+255),b
  9901  00AE62  ECFA  F060         	call	___fldiv	;wreg free
  9902  00AE66  C06E  F0B0         	movff	?___fldiv,encoder_statemachine@tmp
  9903  00AE6A  C06F  F0B1         	movff	?___fldiv+1,encoder_statemachine@tmp+1
  9904  00AE6E  C070  F0B2         	movff	?___fldiv+2,encoder_statemachine@tmp+2
  9905  00AE72  C071  F0B3         	movff	?___fldiv+3,encoder_statemachine@tmp+3
  9906                           
  9907                           ;encoder.c: 493: motor_schedule_command(MOTOR_DIRECTION_CW, (uint32_t ) tmp, os.arc_spee
      +                          d);
  9908  00AE76  C0B0  F060         	movff	encoder_statemachine@tmp,___fltol@f1
  9909  00AE7A  C0B1  F061         	movff	encoder_statemachine@tmp+1,___fltol@f1+1
  9910  00AE7E  C0B2  F062         	movff	encoder_statemachine@tmp+2,___fltol@f1+2
  9911  00AE82  C0B3  F063         	movff	encoder_statemachine@tmp+3,___fltol@f1+3
  9912  00AE86  ECD1  F06D         	call	___fltol	;wreg free
  9913  00AE8A  C060  F097         	movff	?___fltol,motor_schedule_command@distance_in_steps
  9914  00AE8E  C061  F098         	movff	?___fltol+1,motor_schedule_command@distance_in_steps+1
  9915  00AE92  C062  F099         	movff	?___fltol+2,motor_schedule_command@distance_in_steps+2
  9916  00AE96  C063  F09A         	movff	?___fltol+3,motor_schedule_command@distance_in_steps+3
  9917  00AE9A  C0EC  F09B         	movff	_os+32,motor_schedule_command@speed	;volatile
  9918  00AE9E  C0ED  F09C         	movff	_os+33,motor_schedule_command@speed+1	;volatile
  9919  00AEA2  0E01               	movlw	1
  9920  00AEA4  EC82  F072         	call	_motor_schedule_command
  9921                           
  9922                           ;encoder.c: 494: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
  9923  00AEA8  0E62               	movlw	98
  9924  00AEAA  0100               	movlb	0	; () banked
  9925  00AEAC  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
  9926  00AEAE                     l2573:
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;encoder.c: 495: };encoder.c: 496: if(os.encoder2Count<0)
  9930                           
  9931                           ; BSR set to: 0
  9932  00AEAE  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
  9933  00AEB0  D1A4               	goto	l2469
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;encoder.c: 497: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
  9937  00AEB2  0E62               	movlw	98
  9938  00AEB4  D168               	goto	L17
  9939  00AEB6                     l2562:
  9940                           
  9941                           ; BSR set to: 0
  9942  00AEB6  0100               	movlb	0	; () banked
  9943  00AEB8  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
  9944                           
  9945                           ; Switch size 1, requested type "space"
  9946                           ; Number of cases is 3, Range of values is 97 to 99
  9947                           ; switch strategies available:
  9948                           ; Name         Instructions Cycles
  9949                           ; simple_byte           10     6 (average)
  9950                           ;	Chosen strategy is simple_byte
  9951  00AEBA  0A61               	xorlw	97	; case 97
  9952  00AEBC  B4D8               	btfsc	status,2,c
  9953  00AEBE  D6F6               	goto	l2563
  9954  00AEC0  0A03               	xorlw	3	; case 98
  9955  00AEC2  B4D8               	btfsc	status,2,c
  9956  00AEC4  D76D               	goto	l2567
  9957  00AEC6  0A01               	xorlw	1	; case 99
  9958  00AEC8  B4D8               	btfsc	status,2,c
  9959  00AECA  D77F               	goto	l2572
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;encoder.c: 500: break;
  9963  00AECC  D196               	goto	l2469
  9964  00AECE                     
  9965                           ; BSR set to: 0
  9966                           ;encoder.c: 503: if(os.button2==1)
  9967                           
  9968                           ; BSR set to: 0
  9969  00AECE  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
  9970  00AED0  A4D8               	btfss	status,2,c
  9971  00AED2  D0D9               	goto	l2576
  9972                           
  9973                           ; BSR set to: 0
  9974                           ;encoder.c: 504: {;encoder.c: 506: if(os.current_position_in_steps==0)
  9975  00AED4  51D3               	movf	(_os+7)& (0+255),w,b	;volatile
  9976  00AED6  11D4               	iorwf	(_os+8)& (0+255),w,b	;volatile
  9977  00AED8  11D5               	iorwf	(_os+9)& (0+255),w,b	;volatile
  9978  00AEDA  11D6               	iorwf	(_os+10)& (0+255),w,b	;volatile
  9979  00AEDC  B4D8               	btfsc	status,2,c
  9980  00AEDE  D0CC               	goto	l2584
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;encoder.c: 510: else if(os.current_position_in_steps<=(config.full_circle_in_steps>>1))
  9984                           
  9985                           ; BSR set to: 0
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;encoder.c: 507: {;encoder.c: 509: }
  9989  00AEE0  C11F  F09E         	movff	_config,??_encoder_statemachine
  9990  00AEE4  C120  F09F         	movff	_config+1,??_encoder_statemachine+1
  9991  00AEE8  C121  F0A0         	movff	_config+2,??_encoder_statemachine+2
  9992  00AEEC  C122  F0A1         	movff	_config+3,??_encoder_statemachine+3
  9993  00AEF0  90D8               	bcf	status,0,c
  9994  00AEF2  33A1               	rrcf	(??_encoder_statemachine+3)& (0+255),f,b
  9995  00AEF4  33A0               	rrcf	(??_encoder_statemachine+2)& (0+255),f,b
  9996  00AEF6  339F               	rrcf	(??_encoder_statemachine+1)& (0+255),f,b
  9997  00AEF8  339E               	rrcf	??_encoder_statemachine& (0+255),f,b
  9998  00AEFA  51D3               	movf	(_os+7)& (0+255),w,b	;volatile
  9999  00AEFC  5D9E               	subwf	??_encoder_statemachine& (0+255),w,b
 10000  00AEFE  51D4               	movf	(_os+8)& (0+255),w,b	;volatile
 10001  00AF00  599F               	subwfb	(??_encoder_statemachine+1)& (0+255),w,b
 10002  00AF02  51D5               	movf	(_os+9)& (0+255),w,b	;volatile
 10003  00AF04  59A0               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 10004  00AF06  51D6               	movf	(_os+10)& (0+255),w,b	;volatile
 10005  00AF08  59A1               	subwfb	(??_encoder_statemachine+3)& (0+255),w,b
 10006  00AF0A  A0D8               	btfss	status,0,c
 10007  00AF0C  D039               	goto	l2579
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;encoder.c: 511: {;encoder.c: 512: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 10011  00AF0E  29DE               	incf	(_os+18)& (0+255),w,b	;volatile
 10012  00AF10  A4D8               	btfss	status,2,c
 10013  00AF12  D010               	goto	l2580
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;encoder.c: 513: {;encoder.c: 514: motor_schedule_command(MOTOR_DIRECTION_CCW, os.curren
      +                          t_position_in_steps, 0);
 10017  00AF14  C0D3  F097         	movff	_os+7,motor_schedule_command@distance_in_steps	;volatile
 10018  00AF18  C0D4  F098         	movff	_os+8,motor_schedule_command@distance_in_steps+1	;volatile
 10019  00AF1C  C0D5  F099         	movff	_os+9,motor_schedule_command@distance_in_steps+2	;volatile
 10020  00AF20  C0D6  F09A         	movff	_os+10,motor_schedule_command@distance_in_steps+3	;volatile
 10021  00AF24  0E00               	movlw	0
 10022  00AF26  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10023  00AF28  0E00               	movlw	0
 10024  00AF2A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10025  00AF2C  0EFF               	movlw	255
 10026  00AF2E  EC82  F072         	call	_motor_schedule_command
 10027                           
 10028                           ;encoder.c: 515: }
 10029  00AF32  D0A2               	goto	l2584
 10030  00AF34                     l2580:
 10031                           
 10032                           ;encoder.c: 516: else;encoder.c: 517: {;encoder.c: 518: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CCW, os.current_position_in_steps+config.overshoot_in_steps, 0);
 10033  00AF34  0101               	movlb	1	; () banked
 10034  00AF36  5124               	movf	(_config+5)& (0+255),w,b
 10035  00AF38  0100               	movlb	0	; () banked
 10036  00AF3A  25D3               	addwf	(_os+7)& (0+255),w,b	;volatile
 10037  00AF3C  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10038  00AF3E  0101               	movlb	1	; () banked
 10039  00AF40  5125               	movf	(_config+6)& (0+255),w,b
 10040  00AF42  0100               	movlb	0	; () banked
 10041  00AF44  21D4               	addwfc	(_os+8)& (0+255),w,b	;volatile
 10042  00AF46  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10043  00AF48  0E00               	movlw	0
 10044  00AF4A  21D5               	addwfc	(_os+9)& (0+255),w,b	;volatile
 10045  00AF4C  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10046  00AF4E  0E00               	movlw	0
 10047  00AF50  21D6               	addwfc	(_os+10)& (0+255),w,b	;volatile
 10048  00AF52  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10049  00AF54  0E00               	movlw	0
 10050  00AF56  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10051  00AF58  0E00               	movlw	0
 10052  00AF5A  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10053  00AF5C  0EFF               	movlw	255
 10054  00AF5E  EC82  F072         	call	_motor_schedule_command
 10055                           
 10056                           ;encoder.c: 519: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0
      +                          );
 10057  00AF62  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 10058  00AF66  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 10059  00AF6A  0100               	movlb	0	; () banked
 10060  00AF6C  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10061  00AF6E  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10062  00AF70  0E00               	movlw	0
 10063  00AF72  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10064  00AF74  0E00               	movlw	0
 10065  00AF76  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10066  00AF78  0E01               	movlw	1
 10067  00AF7A  EC82  F072         	call	_motor_schedule_command
 10068                           
 10069                           ;encoder.c: 520: };encoder.c: 521: }
 10070  00AF7E  D07C               	goto	l2584
 10071  00AF80                     l2579:
 10072                           
 10073                           ;encoder.c: 522: else;encoder.c: 523: {;encoder.c: 524: if(os.approach_direction==MOTOR_
      +                          DIRECTION_CW)
 10074  00AF80  0100               	movlb	0	; () banked
 10075  00AF82  05DE               	decf	(_os+18)& (0+255),w,b	;volatile
 10076  00AF84  A4D8               	btfss	status,2,c
 10077  00AF86  D02D               	goto	l2583
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;encoder.c: 525: {;encoder.c: 526: motor_schedule_command(MOTOR_DIRECTION_CW, (config.fu
      +                          ll_circle_in_steps-os.current_position_in_steps), 0);
 10081  00AF88  C0D3  F09E         	movff	_os+7,??_encoder_statemachine	;volatile
 10082  00AF8C  C0D4  F09F         	movff	_os+8,??_encoder_statemachine+1	;volatile
 10083  00AF90  C0D5  F0A0         	movff	_os+9,??_encoder_statemachine+2	;volatile
 10084  00AF94  C0D6  F0A1         	movff	_os+10,??_encoder_statemachine+3	;volatile
 10085  00AF98  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
 10086  00AF9A  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 10087  00AF9C  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
 10088  00AF9E  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
 10089  00AFA0  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
 10090  00AFA2  0E00               	movlw	0
 10091  00AFA4  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
 10092  00AFA6  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
 10093  00AFA8  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 10094  00AFAA  0101               	movlb	1	; () banked
 10095  00AFAC  511F               	movf	_config& (0+255),w,b
 10096  00AFAE  0100               	movlb	0	; () banked
 10097  00AFB0  259E               	addwf	??_encoder_statemachine& (0+255),w,b
 10098  00AFB2  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10099  00AFB4  0101               	movlb	1	; () banked
 10100  00AFB6  5120               	movf	(_config+1)& (0+255),w,b
 10101  00AFB8  0100               	movlb	0	; () banked
 10102  00AFBA  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 10103  00AFBC  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10104  00AFBE  0101               	movlb	1	; () banked
 10105  00AFC0  5121               	movf	(_config+2)& (0+255),w,b
 10106  00AFC2  0100               	movlb	0	; () banked
 10107  00AFC4  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
 10108  00AFC6  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10109  00AFC8  0101               	movlb	1	; () banked
 10110  00AFCA  5122               	movf	(_config+3)& (0+255),w,b
 10111  00AFCC  0100               	movlb	0	; () banked
 10112  00AFCE  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
 10113  00AFD0  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10114  00AFD2  0E00               	movlw	0
 10115  00AFD4  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10116  00AFD6  0E00               	movlw	0
 10117  00AFD8  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10118  00AFDA  0E01               	movlw	1
 10119  00AFDC  EC82  F072         	call	_motor_schedule_command
 10120                           
 10121                           ;encoder.c: 527: }
 10122  00AFE0  D04B               	goto	l2584
 10123  00AFE2                     l2583:
 10124                           
 10125                           ;encoder.c: 528: else;encoder.c: 529: {;encoder.c: 530: motor_schedule_command(MOTOR_DIR
      +                          ECTION_CW, (config.full_circle_in_steps-os.current_position_in_steps+config.overshoot_in
      +                          _steps), 0);
 10126  00AFE2  C0D3  F09E         	movff	_os+7,??_encoder_statemachine	;volatile
 10127  00AFE6  C0D4  F09F         	movff	_os+8,??_encoder_statemachine+1	;volatile
 10128  00AFEA  C0D5  F0A0         	movff	_os+9,??_encoder_statemachine+2	;volatile
 10129  00AFEE  C0D6  F0A1         	movff	_os+10,??_encoder_statemachine+3	;volatile
 10130  00AFF2  0100               	movlb	0	; () banked
 10131  00AFF4  1F9E               	comf	??_encoder_statemachine& (0+255),f,b
 10132  00AFF6  1F9F               	comf	(??_encoder_statemachine+1)& (0+255),f,b
 10133  00AFF8  1FA0               	comf	(??_encoder_statemachine+2)& (0+255),f,b
 10134  00AFFA  1FA1               	comf	(??_encoder_statemachine+3)& (0+255),f,b
 10135  00AFFC  2B9E               	incf	??_encoder_statemachine& (0+255),f,b
 10136  00AFFE  0E00               	movlw	0
 10137  00B000  239F               	addwfc	(??_encoder_statemachine+1)& (0+255),f,b
 10138  00B002  23A0               	addwfc	(??_encoder_statemachine+2)& (0+255),f,b
 10139  00B004  23A1               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 10140  00B006  0101               	movlb	1	; () banked
 10141  00B008  5124               	movf	(_config+5)& (0+255),w,b
 10142  00B00A  0100               	movlb	0	; () banked
 10143  00B00C  259E               	addwf	??_encoder_statemachine& (0+255),w,b
 10144  00B00E  6FA2               	movwf	(??_encoder_statemachine+4)& (0+255),b
 10145  00B010  0101               	movlb	1	; () banked
 10146  00B012  5125               	movf	(_config+6)& (0+255),w,b
 10147  00B014  0100               	movlb	0	; () banked
 10148  00B016  219F               	addwfc	(??_encoder_statemachine+1)& (0+255),w,b
 10149  00B018  6FA3               	movwf	(??_encoder_statemachine+5)& (0+255),b
 10150  00B01A  0E00               	movlw	0
 10151  00B01C  21A0               	addwfc	(??_encoder_statemachine+2)& (0+255),w,b
 10152  00B01E  6FA4               	movwf	(??_encoder_statemachine+6)& (0+255),b
 10153  00B020  0E00               	movlw	0
 10154  00B022  21A1               	addwfc	(??_encoder_statemachine+3)& (0+255),w,b
 10155  00B024  6FA5               	movwf	(??_encoder_statemachine+7)& (0+255),b
 10156  00B026  0101               	movlb	1	; () banked
 10157  00B028  511F               	movf	_config& (0+255),w,b
 10158  00B02A  0100               	movlb	0	; () banked
 10159  00B02C  25A2               	addwf	(??_encoder_statemachine+4)& (0+255),w,b
 10160  00B02E  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10161  00B030  0101               	movlb	1	; () banked
 10162  00B032  5120               	movf	(_config+1)& (0+255),w,b
 10163  00B034  0100               	movlb	0	; () banked
 10164  00B036  21A3               	addwfc	(??_encoder_statemachine+5)& (0+255),w,b
 10165  00B038  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10166  00B03A  0101               	movlb	1	; () banked
 10167  00B03C  5121               	movf	(_config+2)& (0+255),w,b
 10168  00B03E  0100               	movlb	0	; () banked
 10169  00B040  21A4               	addwfc	(??_encoder_statemachine+6)& (0+255),w,b
 10170  00B042  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10171  00B044  0101               	movlb	1	; () banked
 10172  00B046  5122               	movf	(_config+3)& (0+255),w,b
 10173  00B048  0100               	movlb	0	; () banked
 10174  00B04A  21A5               	addwfc	(??_encoder_statemachine+7)& (0+255),w,b
 10175  00B04C  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10176  00B04E  0E00               	movlw	0
 10177  00B050  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10178  00B052  0E00               	movlw	0
 10179  00B054  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10180  00B056  0E01               	movlw	1
 10181  00B058  EC82  F072         	call	_motor_schedule_command
 10182                           
 10183                           ;encoder.c: 531: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 
      +                          0);
 10184  00B05C  C124  F097         	movff	_config+5,motor_schedule_command@distance_in_steps
 10185  00B060  C125  F098         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 10186  00B064  0100               	movlb	0	; () banked
 10187  00B066  6B99               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10188  00B068  6B9A               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10189  00B06A  0E00               	movlw	0
 10190  00B06C  6F9C               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 10191  00B06E  0E00               	movlw	0
 10192  00B070  6F9B               	movwf	motor_schedule_command@speed& (0+255),b
 10193  00B072  0EFF               	movlw	255
 10194  00B074  EC82  F072         	call	_motor_schedule_command
 10195  00B078                     l2584:
 10196                           
 10197                           ;encoder.c: 532: };encoder.c: 533: };encoder.c: 534: os.displayState = DISPLAY_STATE_MAI
      +                          N_ZERO;
 10198  00B078  0E05               	movlw	5
 10199  00B07A  0100               	movlb	0	; () banked
 10200  00B07C  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
 10201                           
 10202                           ; BSR set to: 0
 10203                           ;encoder.c: 535: os.divide_position = 0;
 10204  00B07E  0E00               	movlw	0
 10205  00B080  6FE3               	movwf	(_os+23)& (0+255),b	;volatile
 10206  00B082  0E00               	movlw	0
 10207  00B084  6FE2               	movwf	(_os+22)& (0+255),b	;volatile
 10208  00B086                     l2576:
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;encoder.c: 536: };encoder.c: 537: if(os.button1==1)
 10212                           
 10213                           ; BSR set to: 0
 10214  00B086  05D0               	decf	(_os+4)& (0+255),w,b	;volatile
 10215  00B088  A4D8               	btfss	status,2,c
 10216  00B08A  D0B7               	goto	l2469
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;encoder.c: 538: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 10220  00B08C  0E05               	movlw	5
 10221  00B08E  D07B               	goto	L17
 10222  00B090                     
 10223                           ; BSR set to: 0
 10224                           ;encoder.c: 542: if(os.encoder1Count>0)
 10225                           
 10226                           ; BSR set to: 0
 10227  00B090  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
 10228  00B092  0A80               	xorlw	128
 10229  00B094  0F7F               	addlw	-129
 10230  00B096  A0D8               	btfss	status,0,c
 10231  00B098  D012               	goto	l2588
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;encoder.c: 543: {;encoder.c: 544: if(os.manual_speed<config.maximum_speed_manual)
 10235  00B09A  0101               	movlb	1	; () banked
 10236  00B09C  5130               	movf	(_config+17)& (0+255),w,b
 10237  00B09E  0100               	movlb	0	; () banked
 10238  00B0A0  5DEF               	subwf	(_os+35)& (0+255),w,b	;volatile
 10239  00B0A2  0101               	movlb	1	; () banked
 10240  00B0A4  5131               	movf	(_config+18)& (0+255),w,b
 10241  00B0A6  0100               	movlb	0	; () banked
 10242  00B0A8  59F0               	subwfb	(_os+36)& (0+255),w,b	;volatile
 10243  00B0AA  B0D8               	btfsc	status,0,c
 10244  00B0AC  D008               	goto	l2588
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;encoder.c: 545: {;encoder.c: 546: ++os.manual_speed;
 10248  00B0AE  4BEF               	infsnz	(_os+35)& (0+255),f,b	;volatile
 10249  00B0B0  2BF0               	incf	(_os+36)& (0+255),f,b	;volatile
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;encoder.c: 547: motor_change_speed(os.manual_speed);
 10253  00B0B2  C0EF  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 10254  00B0B6  C0F0  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 10255  00B0BA  EC2E  F07B         	call	_motor_change_speed	;wreg free
 10256  00B0BE                     l2588:
 10257                           
 10258                           ;encoder.c: 548: };encoder.c: 550: };encoder.c: 551: if(os.encoder1Count<0)
 10259  00B0BE  0100               	movlb	0	; () banked
 10260  00B0C0  AFCF               	btfss	(_os+3)& (0+255),7,b	;volatile
 10261  00B0C2  D063               	goto	l2591
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;encoder.c: 552: {;encoder.c: 553: if(os.manual_speed>config.minimum_speed)
 10265  00B0C4  51EF               	movf	(_os+35)& (0+255),w,b	;volatile
 10266  00B0C6  0101               	movlb	1	; () banked
 10267  00B0C8  5D26               	subwf	(_config+7)& (0+255),w,b
 10268  00B0CA  0100               	movlb	0	; () banked
 10269  00B0CC  51F0               	movf	(_os+36)& (0+255),w,b	;volatile
 10270  00B0CE  0101               	movlb	1	; () banked
 10271  00B0D0  5927               	subwfb	(_config+8)& (0+255),w,b
 10272  00B0D2  B0D8               	btfsc	status,0,c
 10273  00B0D4  D05A               	goto	l2591
 10274                           
 10275                           ; BSR set to: 1
 10276                           ;encoder.c: 554: {;encoder.c: 555: --os.manual_speed;
 10277  00B0D6  0100               	movlb	0	; () banked
 10278  00B0D8  07EF               	decf	(_os+35)& (0+255),f,b	;volatile
 10279  00B0DA  A0D8               	btfss	status,0,c
 10280  00B0DC  07F0               	decf	(_os+36)& (0+255),f,b	;volatile
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;encoder.c: 556: motor_change_speed(os.manual_speed);
 10284  00B0DE  C0EF  F060         	movff	_os+35,motor_change_speed@new_speed	;volatile
 10285  00B0E2  C0F0  F061         	movff	_os+36,motor_change_speed@new_speed+1	;volatile
 10286  00B0E6  EC2E  F07B         	call	_motor_change_speed	;wreg free
 10287                           
 10288                           ;encoder.c: 557: };encoder.c: 558: };encoder.c: 559: switch(os.displayState)
 10289  00B0EA  D04F               	goto	l2591
 10290  00B0EC                     
 10291                           ;encoder.c: 562: if(os.button2==1)
 10292  00B0EC  0100               	movlb	0	; () banked
 10293  00B0EE  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
 10294  00B0F0  A4D8               	btfss	status,2,c
 10295  00B0F2  D012               	goto	l2593
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;encoder.c: 563: {;encoder.c: 564: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 10299  00B0F4  0E00               	movlw	0
 10300  00B0F6  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10301  00B0F8  0E00               	movlw	0
 10302  00B0FA  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10303  00B0FC  0E00               	movlw	0
 10304  00B0FE  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10305  00B100  0E00               	movlw	0
 10306  00B102  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10307  00B104  C0EF  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 10308  00B108  C0F0  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 10309  00B10C  0EFF               	movlw	255
 10310  00B10E  EC82  F072         	call	_motor_schedule_command
 10311                           
 10312                           ;encoder.c: 565: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 10313  00B112  0E84               	movlw	132
 10314  00B114  0100               	movlb	0	; () banked
 10315  00B116  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
 10316  00B118                     l2593:
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;encoder.c: 566: };encoder.c: 567: if(os.encoder2Count>0)
 10320                           
 10321                           ; BSR set to: 0
 10322  00B118  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
 10323  00B11A  0A80               	xorlw	128
 10324  00B11C  0F7F               	addlw	-129
 10325  00B11E  A0D8               	btfss	status,0,c
 10326  00B120  D06C               	goto	l2469
 10327                           
 10328                           ; BSR set to: 0
 10329                           ;encoder.c: 568: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 10330  00B122  0E82               	movlw	130
 10331  00B124  D030               	goto	L17
 10332  00B126                     
 10333                           ; BSR set to: 0
 10334                           ;encoder.c: 571: if(os.button2==1)
 10335                           
 10336                           ; BSR set to: 0
 10337  00B126  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
 10338  00B128  A4D8               	btfss	status,2,c
 10339  00B12A  D002               	goto	l2597
 10340                           
 10341                           ; BSR set to: 0
 10342                           ;encoder.c: 572: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 10343  00B12C  0E04               	movlw	4
 10344  00B12E  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
 10345  00B130                     l2597:
 10346                           
 10347                           ; BSR set to: 0
 10348                           ;encoder.c: 573: if(os.encoder2Count>0)
 10349                           
 10350                           ; BSR set to: 0
 10351  00B130  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
 10352  00B132  0A80               	xorlw	128
 10353  00B134  0F7F               	addlw	-129
 10354  00B136  A0D8               	btfss	status,0,c
 10355  00B138  D002               	goto	l2598
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;encoder.c: 574: os.displayState = DISPLAY_STATE_MANUAL_CW;
 10359  00B13A  0E83               	movlw	131
 10360  00B13C  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
 10361  00B13E                     l2598:
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;encoder.c: 575: if(os.encoder2Count<0)
 10365                           
 10366                           ; BSR set to: 0
 10367  00B13E  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
 10368  00B140  D05C               	goto	l2469
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;encoder.c: 576: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 10372  00B142  0E81               	movlw	129
 10373  00B144  D020               	goto	L17
 10374  00B146                     
 10375                           ; BSR set to: 0
 10376                           ;encoder.c: 579: if(os.button2==1)
 10377                           
 10378                           ; BSR set to: 0
 10379  00B146  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
 10380  00B148  A4D8               	btfss	status,2,c
 10381  00B14A  D011               	goto	l2601
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;encoder.c: 580: {;encoder.c: 581: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 10385  00B14C  0E84               	movlw	132
 10386  00B14E  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;encoder.c: 582: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 10390  00B150  0E00               	movlw	0
 10391  00B152  6F97               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 10392  00B154  0E00               	movlw	0
 10393  00B156  6F98               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 10394  00B158  0E00               	movlw	0
 10395  00B15A  6F99               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 10396  00B15C  0E00               	movlw	0
 10397  00B15E  6F9A               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 10398  00B160  C0EF  F09B         	movff	_os+35,motor_schedule_command@speed	;volatile
 10399  00B164  C0F0  F09C         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 10400  00B168  0E01               	movlw	1
 10401  00B16A  EC82  F072         	call	_motor_schedule_command
 10402  00B16E                     l2601:
 10403                           
 10404                           ;encoder.c: 584: };encoder.c: 585: if(os.encoder2Count<0)
 10405  00B16E  0100               	movlb	0	; () banked
 10406  00B170  AFD1               	btfss	(_os+5)& (0+255),7,b	;volatile
 10407  00B172  D043               	goto	l2469
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;encoder.c: 586: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 10411  00B174  0E82               	movlw	130
 10412  00B176  D007               	goto	L17
 10413  00B178                     
 10414                           ; BSR set to: 0
 10415                           ;encoder.c: 589: if(os.button2==1)
 10416                           
 10417                           ; BSR set to: 0
 10418  00B178  05D2               	decf	(_os+6)& (0+255),w,b	;volatile
 10419  00B17A  A4D8               	btfss	status,2,c
 10420  00B17C  D03E               	goto	l2469
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;encoder.c: 590: {;encoder.c: 591: motor_stop();
 10424  00B17E  ECB0  F078         	call	_motor_stop	;wreg free
 10425                           
 10426                           ;encoder.c: 592: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 10427  00B182  0E82               	movlw	130
 10428  00B184  0100               	movlb	0	; () banked
 10429  00B186                     L17:
 10430  00B186  6FD9               	movwf	(_os+13)& (0+255),b	;volatile
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;encoder.c: 595: }
 10434                           
 10435                           ; BSR set to: 0
 10436                           ;encoder.c: 593: };encoder.c: 594: break;
 10437  00B188  D038               	goto	l2469
 10438  00B18A                     l2591:
 10439                           
 10440                           ; BSR set to: 0
 10441  00B18A  0100               	movlb	0	; () banked
 10442  00B18C  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 10443                           
 10444                           ; Switch size 1, requested type "space"
 10445                           ; Number of cases is 4, Range of values is 129 to 132
 10446                           ; switch strategies available:
 10447                           ; Name         Instructions Cycles
 10448                           ; simple_byte           13     7 (average)
 10449                           ;	Chosen strategy is simple_byte
 10450  00B18E  0A81               	xorlw	129	; case 129
 10451  00B190  B4D8               	btfsc	status,2,c
 10452  00B192  D7AC               	goto	l2592
 10453  00B194  0A03               	xorlw	3	; case 130
 10454  00B196  B4D8               	btfsc	status,2,c
 10455  00B198  D7C6               	goto	l2596
 10456  00B19A  0A01               	xorlw	1	; case 131
 10457  00B19C  B4D8               	btfsc	status,2,c
 10458  00B19E  D7D3               	goto	l2600
 10459  00B1A0  0A07               	xorlw	7	; case 132
 10460  00B1A2  B4D8               	btfsc	status,2,c
 10461  00B1A4  D7E9               	goto	l2603
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;encoder.c: 597: }
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;encoder.c: 596: break;
 10468  00B1A6  D029               	goto	l2469
 10469  00B1A8                     l2434:
 10470                           
 10471                           ; BSR set to: 0
 10472                           
 10473                           ; BSR set to: 0
 10474  00B1A8  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 10475  00B1AA  0BF0               	andlw	240
 10476  00B1AC  6F9E               	movwf	??_encoder_statemachine& (0+255),b
 10477  00B1AE  6B9F               	clrf	(??_encoder_statemachine+1)& (0+255),b
 10478                           
 10479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10480                           ; Switch size 1, requested type "space"
 10481                           ; Number of cases is 1, Range of values is 0 to 0
 10482                           ; switch strategies available:
 10483                           ; Name         Instructions Cycles
 10484                           ; simple_byte            4     3 (average)
 10485                           ;	Chosen strategy is simple_byte
 10486  00B1B0  519F               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 10487  00B1B2  0A00               	xorlw	0	; case 0
 10488  00B1B4  A4D8               	btfss	status,2,c
 10489  00B1B6  D021               	goto	l2469
 10490                           
 10491                           ; BSR set to: 0
 10492                           ; Switch size 1, requested type "space"
 10493                           ; Number of cases is 9, Range of values is 0 to 128
 10494                           ; switch strategies available:
 10495                           ; Name         Instructions Cycles
 10496                           ; simple_byte           28    15 (average)
 10497                           ;	Chosen strategy is simple_byte
 10498  00B1B8  519E               	movf	??_encoder_statemachine& (0+255),w,b
 10499  00B1BA  0A00               	xorlw	0	; case 0
 10500  00B1BC  B4D8               	btfsc	status,2,c
 10501  00B1BE  EF29  F052         	goto	l2436
 10502  00B1C2  0A10               	xorlw	16	; case 16
 10503  00B1C4  B4D8               	btfsc	status,2,c
 10504  00B1C6  EF69  F052         	goto	l2471
 10505  00B1CA  0A30               	xorlw	48	; case 32
 10506  00B1CC  B4D8               	btfsc	status,2,c
 10507  00B1CE  EF5E  F053         	goto	l2487
 10508  00B1D2  0A10               	xorlw	16	; case 48
 10509  00B1D4  B4D8               	btfsc	status,2,c
 10510  00B1D6  EF89  F053         	goto	l2502
 10511  00B1DA  0A70               	xorlw	112	; case 64
 10512  00B1DC  B4D8               	btfsc	status,2,c
 10513  00B1DE  EFBD  F053         	goto	l2517
 10514  00B1E2  0A10               	xorlw	16	; case 80
 10515  00B1E4  B4D8               	btfsc	status,2,c
 10516  00B1E6  D4D5               	goto	l2540
 10517  00B1E8  0A30               	xorlw	48	; case 96
 10518  00B1EA  B4D8               	btfsc	status,2,c
 10519  00B1EC  D52A               	goto	l2555
 10520  00B1EE  0A10               	xorlw	16	; case 112
 10521  00B1F0  B4D8               	btfsc	status,2,c
 10522  00B1F2  D66D               	goto	l2575
 10523  00B1F4  0AF0               	xorlw	240	; case 128
 10524  00B1F6  B4D8               	btfsc	status,2,c
 10525  00B1F8  D74B               	goto	l2586
 10526  00B1FA                     l2469:
 10527                           
 10528                           ;encoder.c: 600: os.encoder1Count = 0;
 10529                           
 10530                           ; BSR set to: 0
 10531  00B1FA  0E00               	movlw	0
 10532  00B1FC  0100               	movlb	0	; () banked
 10533  00B1FE  6FCF               	movwf	(_os+3)& (0+255),b	;volatile
 10534                           
 10535                           ;encoder.c: 601: os.encoder2Count = 0;
 10536  00B200  0E00               	movlw	0
 10537  00B202  6FD1               	movwf	(_os+5)& (0+255),b	;volatile
 10538                           
 10539                           ;encoder.c: 602: os.button1 = 0;
 10540  00B204  0E00               	movlw	0
 10541  00B206  6FD0               	movwf	(_os+4)& (0+255),b	;volatile
 10542                           
 10543                           ;encoder.c: 603: os.button2 = 0;
 10544  00B208  0E00               	movlw	0
 10545  00B20A  6FD2               	movwf	(_os+6)& (0+255),b	;volatile
 10546                           
 10547                           ; BSR set to: 0
 10548  00B20C  0012               	return		;funcret
 10549  00B20E                     __end_of_encoder_statemachine:
 10550                           	opt stack 0
 10551                           tblptru	equ	0xFF8
 10552                           tblptrh	equ	0xFF7
 10553                           tblptrl	equ	0xFF6
 10554                           tablat	equ	0xFF5
 10555                           prodh	equ	0xFF4
 10556                           prodl	equ	0xFF3
 10557                           intcon	equ	0xFF2
 10558                           postinc0	equ	0xFEE
 10559                           wreg	equ	0xFE8
 10560                           postdec1	equ	0xFE5
 10561                           plusw1	equ	0xFE3
 10562                           fsr1h	equ	0xFE2
 10563                           fsr1l	equ	0xFE1
 10564                           indf2	equ	0xFDF
 10565                           postinc2	equ	0xFDE
 10566                           postdec2	equ	0xFDD
 10567                           plusw2	equ	0xFDB
 10568                           fsr2h	equ	0xFDA
 10569                           fsr2l	equ	0xFD9
 10570                           status	equ	0xFD8
 10571                           
 10572 ;; *************** function _motor_stop *****************
 10573 ;; Defined at:
 10574 ;;		line 420 in file "motor.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;		None
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;		None
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10592 ;;Total ram usage:        2 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:   10
 10595 ;; This function calls:
 10596 ;;		Nothing
 10597 ;; This function is called by:
 10598 ;;		_encoder_statemachine
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text23
 10603  00F160                     __ptext23:
 10604                           	opt stack 0
 10605  00F160                     _motor_stop:
 10606                           	opt stack 19
 10607                           
 10608                           ;motor.c: 422: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;incstack = 0
 10612  00F160  90D8               	bcf	status,0,c
 10613  00F162  0100               	movlb	0	; () banked
 10614  00F164  35F3               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 10615  00F166  6EF6               	movwf	tblptrl,c
 10616  00F168  35F4               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 10617  00F16A  6EF7               	movwf	tblptrh,c
 10618  00F16C  0E59               	movlw	low _motor_steps_lookup
 10619  00F16E  26F6               	addwf	tblptrl,f,c
 10620  00F170  0E94               	movlw	high _motor_steps_lookup
 10621  00F172  22F7               	addwfc	tblptrh,f,c
 10622  00F174                     	if	1	;There are 3 active tblptr bytes
 10623  00F174  6AF8               	clrf	tblptru,c
 10624  00F176  0E00               	movlw	low (__mediumconst shr (0+16))
 10625  00F178  22F8               	addwfc	tblptru,f,c
 10626  00F17A                     	endif
 10627  00F17A  0009               	tblrd		*+
 10628  00F17C  CFF5 F060          	movff	tablat,??_motor_stop
 10629  00F180  0009               	tblrd		*+
 10630  00F182  CFF5 F061          	movff	tablat,??_motor_stop+1
 10631  00F186  5160               	movf	??_motor_stop& (0+255),w,b
 10632  00F188  240D               	addwf	_motor_current_stepcount,w,c	;volatile
 10633  00F18A  0101               	movlb	1	; () banked
 10634  00F18C  6F58               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 10635  00F18E  0100               	movlb	0	; () banked
 10636  00F190  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 10637  00F192  200E               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 10638  00F194  0101               	movlb	1	; () banked
 10639  00F196  6F59               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 10640  00F198  0E00               	movlw	0
 10641  00F19A  200F               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 10642  00F19C  6F5A               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 10643  00F19E  0E00               	movlw	0
 10644  00F1A0  2010               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 10645  00F1A2  6F5B               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 10646                           
 10647                           ; BSR set to: 1
 10648  00F1A4  0012               	return		;funcret
 10649  00F1A6                     __end_of_motor_stop:
 10650                           	opt stack 0
 10651                           tblptru	equ	0xFF8
 10652                           tblptrh	equ	0xFF7
 10653                           tblptrl	equ	0xFF6
 10654                           tablat	equ	0xFF5
 10655                           prodh	equ	0xFF4
 10656                           prodl	equ	0xFF3
 10657                           intcon	equ	0xFF2
 10658                           postinc0	equ	0xFEE
 10659                           wreg	equ	0xFE8
 10660                           postdec1	equ	0xFE5
 10661                           plusw1	equ	0xFE3
 10662                           fsr1h	equ	0xFE2
 10663                           fsr1l	equ	0xFE1
 10664                           indf2	equ	0xFDF
 10665                           postinc2	equ	0xFDE
 10666                           postdec2	equ	0xFDD
 10667                           plusw2	equ	0xFDB
 10668                           fsr2h	equ	0xFDA
 10669                           fsr2l	equ	0xFD9
 10670                           status	equ	0xFD8
 10671                           
 10672 ;; *************** function _motor_schedule_command *****************
 10673 ;; Defined at:
 10674 ;;		line 87 in file "motor.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;  direction       1    wreg     enum E6622
 10677 ;;  distance_in_    4   55[BANK0 ] unsigned long 
 10678 ;;  speed           2   59[BANK0 ] unsigned int 
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;  direction       1   61[BANK0 ] enum E6622
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1    wreg      unsigned char 
 10683 ;; Registers used:
 10684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10690 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10693 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10694 ;;Total ram usage:        7 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; Hardware stack levels required when called:   11
 10697 ;; This function calls:
 10698 ;;		__motor_run
 10699 ;;		_motor_items_in_cue
 10700 ;; This function is called by:
 10701 ;;		_encoder_statemachine
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           	psect	text24
 10706  00E504                     __ptext24:
 10707                           	opt stack 0
 10708  00E504                     _motor_schedule_command:
 10709                           	opt stack 18
 10710                           
 10711                           ; BSR set to: 1
 10712                           ;incstack = 0
 10713                           ;motor_schedule_command@direction stored from wreg
 10714  00E504  0100               	movlb	0	; () banked
 10715  00E506  6F9D               	movwf	motor_schedule_command@direction& (0+255),b
 10716                           
 10717                           ;motor.c: 89: if((motor_items_in_cue()==0) && (os.busy==0))
 10718  00E508  EC23  F07B         	call	_motor_items_in_cue	;wreg free
 10719  00E50C  0900               	iorlw	0
 10720  00E50E  A4D8               	btfss	status,2,c
 10721  00E510  D014               	goto	l2311
 10722  00E512  0100               	movlb	0	; () banked
 10723  00E514  51DA               	movf	(_os+14)& (0+255),w,b	;volatile
 10724  00E516  A4D8               	btfss	status,2,c
 10725  00E518  D010               	goto	l2311
 10726                           
 10727                           ; BSR set to: 0
 10728                           ;motor.c: 90: {;motor.c: 93: _motor_run(direction, distance_in_steps, speed);
 10729  00E51A  C097  F060         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 10730  00E51E  C098  F061         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 10731  00E522  C099  F062         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 10732  00E526  C09A  F063         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 10733  00E52A  C09B  F064         	movff	motor_schedule_command@speed,__motor_run@speed
 10734  00E52E  C09C  F065         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 10735  00E532  519D               	movf	motor_schedule_command@direction& (0+255),w,b
 10736  00E534  ECA5  F064         	call	__motor_run
 10737                           
 10738                           ;motor.c: 95: return 1;;	Return value of _motor_schedule_command is never used
 10739  00E538  0012               	return	
 10740  00E53A                     l2311:
 10741                           
 10742                           ;motor.c: 96: };motor.c: 97: if(motor_items_in_cue()==8-1)
 10743  00E53A  EC23  F07B         	call	_motor_items_in_cue	;wreg free
 10744  00E53E  0A07               	xorlw	7
 10745  00E540  B4D8               	btfsc	status,2,c
 10746  00E542  0012               	return	
 10747                           
 10748                           ;motor.c: 103: else;motor.c: 104: {;motor.c: 106: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 10749                           
 10750                           ;motor.c: 102: }
 10751                           
 10752                           ;motor.c: 98: {;motor.c: 101: return 0;;	Return value of _motor_schedule_command is neve
      +                          r used
 10753  00E544  0100               	movlb	0	; () banked
 10754  00E546  51F6               	movf	_motor_cue_write_index& (0+255),w,b
 10755  00E548  0D07               	mullw	7
 10756  00E54A  0E00               	movlw	low _motor_command_cue
 10757  00E54C  24F3               	addwf	prodl,w,c
 10758  00E54E  6ED9               	movwf	fsr2l,c
 10759  00E550  0E02               	movlw	high _motor_command_cue
 10760  00E552  20F4               	addwfc	prodh,w,c
 10761  00E554  6EDA               	movwf	fsr2h,c
 10762  00E556  C09D  FFDF         	movff	motor_schedule_command@direction,indf2
 10763                           
 10764                           ;motor.c: 107: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 10765  00E55A  51F6               	movf	_motor_cue_write_index& (0+255),w,b
 10766  00E55C  0D07               	mullw	7
 10767  00E55E  0E01               	movlw	1
 10768  00E560  26F3               	addwf	prodl,f,c
 10769  00E562  0E00               	movlw	0
 10770  00E564  22F4               	addwfc	prodh,f,c
 10771  00E566  0E00               	movlw	low _motor_command_cue
 10772  00E568  24F3               	addwf	prodl,w,c
 10773  00E56A  6ED9               	movwf	fsr2l,c
 10774  00E56C  0E02               	movlw	high _motor_command_cue
 10775  00E56E  20F4               	addwfc	prodh,w,c
 10776  00E570  6EDA               	movwf	fsr2h,c
 10777  00E572  C097  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 10778  00E576  C098  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 10779  00E57A  C099  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 10780  00E57E  C09A  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 10781                           
 10782                           ;motor.c: 108: motor_command_cue[motor_cue_write_index].speed = speed;
 10783  00E582  51F6               	movf	_motor_cue_write_index& (0+255),w,b
 10784  00E584  0D07               	mullw	7
 10785  00E586  0E05               	movlw	5
 10786  00E588  26F3               	addwf	prodl,f,c
 10787  00E58A  0E00               	movlw	0
 10788  00E58C  22F4               	addwfc	prodh,f,c
 10789  00E58E  0E00               	movlw	low _motor_command_cue
 10790  00E590  24F3               	addwf	prodl,w,c
 10791  00E592  6ED9               	movwf	fsr2l,c
 10792  00E594  0E02               	movlw	high _motor_command_cue
 10793  00E596  20F4               	addwfc	prodh,w,c
 10794  00E598  6EDA               	movwf	fsr2h,c
 10795  00E59A  C09B  FFDE         	movff	motor_schedule_command@speed,postinc2
 10796  00E59E  C09C  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;motor.c: 110: ++motor_cue_write_index;
 10800  00E5A2  2BF6               	incf	_motor_cue_write_index& (0+255),f,b
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;motor.c: 112: return 1;;	Return value of _motor_schedule_command is never used
 10804  00E5A4  0012               	return	
 10805  00E5A6                     __end_of_motor_schedule_command:
 10806                           	opt stack 0
 10807                           tblptru	equ	0xFF8
 10808                           tblptrh	equ	0xFF7
 10809                           tblptrl	equ	0xFF6
 10810                           tablat	equ	0xFF5
 10811                           prodh	equ	0xFF4
 10812                           prodl	equ	0xFF3
 10813                           intcon	equ	0xFF2
 10814                           postinc0	equ	0xFEE
 10815                           wreg	equ	0xFE8
 10816                           postdec1	equ	0xFE5
 10817                           plusw1	equ	0xFE3
 10818                           fsr1h	equ	0xFE2
 10819                           fsr1l	equ	0xFE1
 10820                           indf2	equ	0xFDF
 10821                           postinc2	equ	0xFDE
 10822                           postdec2	equ	0xFDD
 10823                           plusw2	equ	0xFDB
 10824                           fsr2h	equ	0xFDA
 10825                           fsr2l	equ	0xFD9
 10826                           status	equ	0xFD8
 10827                           
 10828 ;; *************** function _motor_items_in_cue *****************
 10829 ;; Defined at:
 10830 ;;		line 82 in file "motor.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;		None
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      unsigned char 
 10837 ;; Registers used:
 10838 ;;		wreg, status,2, status,0
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10848 ;;Total ram usage:        0 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:   10
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_motor_schedule_command
 10855 ;;		_motor_process_cue
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text25
 10860  00F646                     __ptext25:
 10861                           	opt stack 0
 10862  00F646                     _motor_items_in_cue:
 10863                           	opt stack 19
 10864                           
 10865                           ;motor.c: 84: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 10866                           
 10867                           ;incstack = 0
 10868  00F646  0100               	movlb	0	; () banked
 10869  00F648  51F7               	movf	_motor_cue_read_index& (0+255),w,b
 10870  00F64A  0800               	sublw	0
 10871  00F64C  25F6               	addwf	_motor_cue_write_index& (0+255),w,b
 10872  00F64E  0B07               	andlw	7
 10873  00F650  0012               	return	
 10874  00F652                     __end_of_motor_items_in_cue:
 10875                           	opt stack 0
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           postinc0	equ	0xFEE
 10884                           wreg	equ	0xFE8
 10885                           postdec1	equ	0xFE5
 10886                           plusw1	equ	0xFE3
 10887                           fsr1h	equ	0xFE2
 10888                           fsr1l	equ	0xFE1
 10889                           indf2	equ	0xFDF
 10890                           postinc2	equ	0xFDE
 10891                           postdec2	equ	0xFDD
 10892                           plusw2	equ	0xFDB
 10893                           fsr2h	equ	0xFDA
 10894                           fsr2l	equ	0xFD9
 10895                           status	equ	0xFD8
 10896                           
 10897 ;; *************** function __motor_run *****************
 10898 ;; Defined at:
 10899 ;;		line 164 in file "motor.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  direction       1    wreg     enum E6622
 10902 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 10903 ;;  speed           2    4[BANK0 ] unsigned int 
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;  direction       1   10[BANK0 ] enum E6622
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  1    wreg      void 
 10908 ;; Registers used:
 10909 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10915 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10917 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10918 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10919 ;;Total ram usage:       11 bytes
 10920 ;; Hardware stack levels used:    1
 10921 ;; Hardware stack levels required when called:   10
 10922 ;; This function calls:
 10923 ;;		Nothing
 10924 ;; This function is called by:
 10925 ;;		_motor_schedule_command
 10926 ;;		_motor_process_cue
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           	psect	text26
 10931  00C94A                     __ptext26:
 10932                           	opt stack 0
 10933  00C94A                     __motor_run:
 10934                           	opt stack 19
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;incstack = 0
 10938                           ;__motor_run@direction stored from wreg
 10939  00C94A  0100               	movlb	0	; () banked
 10940  00C94C  6F6A               	movwf	__motor_run@direction& (0+255),b
 10941                           
 10942                           ;motor.c: 167: motor_direction = direction;
 10943  00C94E  C06A  F0F5         	movff	__motor_run@direction,_motor_direction
 10944                           
 10945                           ;motor.c: 170: if(distance_in_steps==0)
 10946  00C952  0100               	movlb	0	; () banked
 10947  00C954  5160               	movf	__motor_run@distance_in_steps& (0+255),w,b
 10948  00C956  1161               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 10949  00C958  1162               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 10950  00C95A  1163               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 10951  00C95C  A4D8               	btfss	status,2,c
 10952  00C95E  D00A               	goto	l2327
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;motor.c: 171: {;motor.c: 173: motor_final_stepcount = 0xFFFFFF00;
 10956  00C960  0E00               	movlw	0
 10957  00C962  0101               	movlb	1	; () banked
 10958  00C964  6F58               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 10959  00C966  0EFF               	movlw	255
 10960  00C968  6F59               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 10961  00C96A  0EFF               	movlw	255
 10962  00C96C  6F5A               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 10963  00C96E  0EFF               	movlw	255
 10964  00C970  6F5B               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 10965                           
 10966                           ;motor.c: 174: }
 10967  00C972  D008               	goto	l2328
 10968  00C974                     l2327:
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;motor.c: 175: else;motor.c: 176: {;motor.c: 177: motor_final_stepcount = distance_in_st
      +                          eps;
 10972  00C974  C060  F158         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 10973  00C978  C061  F159         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 10974  00C97C  C062  F15A         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 10975  00C980  C063  F15B         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 10976  00C984                     l2328:
 10977                           
 10978                           ;motor.c: 179: };motor.c: 182: if(speed==0)
 10979                           
 10980                           ; BSR set to: 0
 10981  00C984  0100               	movlb	0	; () banked
 10982  00C986  5164               	movf	__motor_run@speed& (0+255),w,b
 10983  00C988  1165               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 10984  00C98A  A4D8               	btfss	status,2,c
 10985  00C98C  D005               	goto	l2329
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;motor.c: 183: {;motor.c: 184: motor_maximum_speed = config.maximum_speed;
 10989  00C98E  C128  F178         	movff	_config+9,_motor_maximum_speed
 10990  00C992  C129  F179         	movff	_config+10,_motor_maximum_speed+1
 10991                           
 10992                           ;motor.c: 185: }
 10993  00C996  D004               	goto	l2330
 10994  00C998                     l2329:
 10995                           
 10996                           ; BSR set to: 0
 10997                           ;motor.c: 186: else;motor.c: 187: {;motor.c: 188: motor_maximum_speed = speed;
 10998  00C998  C064  F178         	movff	__motor_run@speed,_motor_maximum_speed
 10999  00C99C  C065  F179         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 11000  00C9A0                     l2330:
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;motor.c: 189: };motor.c: 192: motor_current_speed = 0;
 11004                           
 11005                           ; BSR set to: 0
 11006  00C9A0  0E00               	movlw	0
 11007  00C9A2  6FF4               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 11008  00C9A4  0E00               	movlw	0
 11009  00C9A6  6FF3               	movwf	_motor_current_speed& (0+255),b	;volatile
 11010                           
 11011                           ;motor.c: 193: motor_current_stepcount = 0;
 11012  00C9A8  0E00               	movlw	0
 11013  00C9AA  6E0D               	movwf	_motor_current_stepcount,c	;volatile
 11014  00C9AC  0E00               	movlw	0
 11015  00C9AE  6E0E               	movwf	_motor_current_stepcount+1,c	;volatile
 11016  00C9B0  0E00               	movlw	0
 11017  00C9B2  6E0F               	movwf	_motor_current_stepcount+2,c	;volatile
 11018  00C9B4  0E00               	movlw	0
 11019  00C9B6  6E10               	movwf	_motor_current_stepcount+3,c	;volatile
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;motor.c: 195: motor_next_speed_check = motor_steps_lookup[1];
 11023  00C9B8  0E5B               	movlw	low (_motor_steps_lookup+2)
 11024  00C9BA  6EF6               	movwf	tblptrl,c
 11025  00C9BC  0E94               	movlw	high (_motor_steps_lookup+2)
 11026  00C9BE  6EF7               	movwf	tblptrh,c
 11027  00C9C0                     	if	0	;tblptru may be non-zero
 11028  00C9C0                     	endif
 11029  00C9C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11030  00C9C0  0E00               	movlw	low (__mediumconst shr (0+16))
 11031  00C9C2  6EF8               	movwf	tblptru,c
 11032  00C9C4                     	endif
 11033  00C9C4  0009               	tblrd		*+
 11034  00C9C6  CFF5 F066          	movff	tablat,??__motor_run
 11035  00C9CA  0009               	tblrd		*+
 11036  00C9CC  CFF5 F067          	movff	tablat,??__motor_run+1
 11037  00C9D0  C066  F154         	movff	??__motor_run,_motor_next_speed_check	;volatile
 11038  00C9D4  C067  F155         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 11039  00C9D8  0101               	movlb	1	; () banked
 11040  00C9DA  6B56               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 11041  00C9DC  6B57               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 11042                           
 11043                           ; BSR set to: 1
 11044                           ;motor.c: 198: CCP1CONbits.CCP1M = 0b0000;
 11045  00C9DE  90BA               	bcf	4026,0,c	;volatile
 11046  00C9E0  92BA               	bcf	4026,1,c	;volatile
 11047  00C9E2  94BA               	bcf	4026,2,c	;volatile
 11048  00C9E4  96BA               	bcf	4026,3,c	;volatile
 11049                           
 11050                           ; BSR set to: 1
 11051                           ;motor.c: 201: LATBbits.LB0 = 0;
 11052  00C9E6  908A               	bcf	3978,0,c	;volatile
 11053                           
 11054                           ; BSR set to: 1
 11055                           ;motor.c: 202: if(direction==MOTOR_DIRECTION_CCW)
 11056  00C9E8  0100               	movlb	0	; () banked
 11057  00C9EA  296A               	incf	__motor_run@direction& (0+255),w,b
 11058  00C9EC  A4D8               	btfss	status,2,c
 11059  00C9EE  D005               	goto	l2331
 11060                           
 11061                           ; BSR set to: 0
 11062                           ;motor.c: 203: {;motor.c: 204: if(config.inverse_direction)
 11063  00C9F0  0101               	movlb	1	; () banked
 11064  00C9F2  5123               	movf	(_config+4)& (0+255),w,b
 11065  00C9F4  B4D8               	btfsc	status,2,c
 11066  00C9F6  D005               	goto	u17220
 11067  00C9F8  D006               	goto	l2335
 11068  00C9FA                     l2331:
 11069                           
 11070                           ;motor.c: 209: else;motor.c: 210: {;motor.c: 211: if(config.inverse_direction)
 11071                           
 11072                           ; BSR set to: 1
 11073  00C9FA  0101               	movlb	1	; () banked
 11074  00C9FC  5123               	movf	(_config+4)& (0+255),w,b
 11075  00C9FE  B4D8               	btfsc	status,2,c
 11076  00CA00  D002               	goto	l2335
 11077  00CA02                     u17220:
 11078                           
 11079                           ; BSR set to: 1
 11080                           ;motor.c: 212: LATBbits.LB2 = 0;
 11081  00CA02  948A               	bcf	3978,2,c	;volatile
 11082  00CA04  D001               	goto	l2336
 11083  00CA06                     l2335:
 11084                           
 11085                           ; BSR set to: 1
 11086                           ;motor.c: 213: else;motor.c: 214: LATBbits.LB2 = 1;
 11087  00CA06  848A               	bsf	3978,2,c	;volatile
 11088  00CA08                     l2336:
 11089                           
 11090                           ; BSR set to: 1
 11091                           ;motor.c: 215: };motor.c: 218: LATBbits.LB1 = 1;
 11092                           
 11093                           ; BSR set to: 1
 11094  00CA08  828A               	bsf	3978,1,c	;volatile
 11095                           
 11096                           ; BSR set to: 1
 11097                           ;motor.c: 221: ++motor_current_stepcount;
 11098  00CA0A  0E01               	movlw	1
 11099  00CA0C  260D               	addwf	_motor_current_stepcount,f,c	;volatile
 11100  00CA0E  0E00               	movlw	0
 11101  00CA10  220E               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 11102  00CA12  220F               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 11103  00CA14  2210               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 11104                           
 11105                           ;motor.c: 224: os.current_position_in_steps += motor_direction;
 11106  00CA16  0100               	movlb	0	; () banked
 11107  00CA18  51F5               	movf	_motor_direction& (0+255),w,b
 11108  00CA1A  6F66               	movwf	??__motor_run& (0+255),b
 11109  00CA1C  0E00               	movlw	0
 11110  00CA1E  BF66               	btfsc	??__motor_run& (0+255),7,b
 11111  00CA20  0EFF               	movlw	255
 11112  00CA22  6F67               	movwf	(??__motor_run+1)& (0+255),b
 11113  00CA24  6F68               	movwf	(??__motor_run+2)& (0+255),b
 11114  00CA26  6F69               	movwf	(??__motor_run+3)& (0+255),b
 11115  00CA28  5166               	movf	??__motor_run& (0+255),w,b
 11116  00CA2A  27D3               	addwf	(_os+7)& (0+255),f,b	;volatile
 11117  00CA2C  5167               	movf	(??__motor_run+1)& (0+255),w,b
 11118  00CA2E  23D4               	addwfc	(_os+8)& (0+255),f,b	;volatile
 11119  00CA30  5168               	movf	(??__motor_run+2)& (0+255),w,b
 11120  00CA32  23D5               	addwfc	(_os+9)& (0+255),f,b	;volatile
 11121  00CA34  5169               	movf	(??__motor_run+3)& (0+255),w,b
 11122  00CA36  23D6               	addwfc	(_os+10)& (0+255),f,b	;volatile
 11123                           
 11124                           ;motor.c: 225: if(os.current_position_in_steps==config.full_circle_in_steps)
 11125  00CA38  0101               	movlb	1	; () banked
 11126  00CA3A  511F               	movf	_config& (0+255),w,b
 11127  00CA3C  0100               	movlb	0	; () banked
 11128  00CA3E  19D3               	xorwf	(_os+7)& (0+255),w,b	;volatile
 11129  00CA40  E118               	bnz	l16966
 11130  00CA42  0101               	movlb	1	; () banked
 11131  00CA44  5120               	movf	(_config+1)& (0+255),w,b
 11132  00CA46  0100               	movlb	0	; () banked
 11133  00CA48  19D4               	xorwf	(_os+8)& (0+255),w,b	;volatile
 11134  00CA4A  E113               	bnz	l16966
 11135  00CA4C  0101               	movlb	1	; () banked
 11136  00CA4E  5121               	movf	(_config+2)& (0+255),w,b
 11137  00CA50  0100               	movlb	0	; () banked
 11138  00CA52  19D5               	xorwf	(_os+9)& (0+255),w,b	;volatile
 11139  00CA54  E10E               	bnz	l16966
 11140  00CA56  0101               	movlb	1	; () banked
 11141  00CA58  5122               	movf	(_config+3)& (0+255),w,b
 11142  00CA5A  0100               	movlb	0	; () banked
 11143  00CA5C  19D6               	xorwf	(_os+10)& (0+255),w,b	;volatile
 11144  00CA5E  A4D8               	btfss	status,2,c
 11145  00CA60  D008               	goto	l2337
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;motor.c: 226: os.current_position_in_steps = 0;
 11149  00CA62  0E00               	movlw	0
 11150  00CA64  6FD3               	movwf	(_os+7)& (0+255),b	;volatile
 11151  00CA66  0E00               	movlw	0
 11152  00CA68  6FD4               	movwf	(_os+8)& (0+255),b	;volatile
 11153  00CA6A  0E00               	movlw	0
 11154  00CA6C  6FD5               	movwf	(_os+9)& (0+255),b	;volatile
 11155  00CA6E  0E00               	movlw	0
 11156  00CA70  6FD6               	movwf	(_os+10)& (0+255),b	;volatile
 11157  00CA72                     l2337:
 11158  00CA72                     l16966:
 11159                           
 11160                           ; BSR set to: 0
 11161                           ;motor.c: 227: if(os.current_position_in_steps==0xFFFFFFFF)
 11162  00CA72  29D3               	incf	(_os+7)& (0+255),w,b	;volatile
 11163  00CA74  E11B               	bnz	l16970
 11164  00CA76  29D4               	incf	(_os+8)& (0+255),w,b	;volatile
 11165  00CA78  E119               	bnz	l16970
 11166  00CA7A  29D5               	incf	(_os+9)& (0+255),w,b	;volatile
 11167  00CA7C  E117               	bnz	l16970
 11168  00CA7E  29D6               	incf	(_os+10)& (0+255),w,b	;volatile
 11169  00CA80  A4D8               	btfss	status,2,c
 11170  00CA82  D014               	goto	l2338
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;motor.c: 228: os.current_position_in_steps = (config.full_circle_in_steps-1);
 11174  00CA84  0EFF               	movlw	255
 11175  00CA86  0101               	movlb	1	; () banked
 11176  00CA88  251F               	addwf	_config& (0+255),w,b
 11177  00CA8A  0100               	movlb	0	; () banked
 11178  00CA8C  6FD3               	movwf	(_os+7)& (0+255),b	;volatile
 11179  00CA8E  0EFF               	movlw	255
 11180  00CA90  0101               	movlb	1	; () banked
 11181  00CA92  2120               	addwfc	(_config+1)& (0+255),w,b
 11182  00CA94  0100               	movlb	0	; () banked
 11183  00CA96  6FD4               	movwf	(_os+8)& (0+255),b	;volatile
 11184  00CA98  0EFF               	movlw	255
 11185  00CA9A  0101               	movlb	1	; () banked
 11186  00CA9C  2121               	addwfc	(_config+2)& (0+255),w,b
 11187  00CA9E  0100               	movlb	0	; () banked
 11188  00CAA0  6FD5               	movwf	(_os+9)& (0+255),b	;volatile
 11189  00CAA2  0EFF               	movlw	255
 11190  00CAA4  0101               	movlb	1	; () banked
 11191  00CAA6  2122               	addwfc	(_config+3)& (0+255),w,b
 11192  00CAA8  0100               	movlb	0	; () banked
 11193  00CAAA  6FD6               	movwf	(_os+10)& (0+255),b	;volatile
 11194  00CAAC                     l2338:
 11195  00CAAC                     l16970:
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;motor.c: 231: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 11199  00CAAC  0E55               	movlw	85
 11200  00CAAE  6EA7               	movwf	4007,c	;volsfr
 11201                           
 11202                           ; BSR set to: 0
 11203  00CAB0  0EAA               	movlw	170
 11204  00CAB2  6EA7               	movwf	4007,c	;volsfr
 11205                           
 11206                           ; BSR set to: 0
 11207  00CAB4  010E               	movlb	14	; () banked
 11208  00CAB6  91BF               	bcf	191,0,b	;volatile
 11209                           
 11210                           ; BSR set to: 14
 11211                           ;motor.c: 232: RPOR4 = 0;
 11212  00CAB8  0E00               	movlw	0
 11213  00CABA  6FC4               	movwf	196,b	;volatile
 11214                           
 11215                           ; BSR set to: 14
 11216                           ;motor.c: 233: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 11217  00CABC  0E55               	movlw	85
 11218  00CABE  6EA7               	movwf	4007,c	;volsfr
 11219                           
 11220                           ; BSR set to: 14
 11221  00CAC0  0EAA               	movlw	170
 11222  00CAC2  6EA7               	movwf	4007,c	;volsfr
 11223                           
 11224                           ; BSR set to: 14
 11225  00CAC4  81BF               	bsf	191,0,b	;volatile
 11226                           
 11227                           ; BSR set to: 14
 11228                           ;motor.c: 236: motor_mode = MOTOR_MODE_MANUAL;
 11229  00CAC6  0E00               	movlw	0
 11230  00CAC8  6E1B               	movwf	_motor_mode,c
 11231                           
 11232                           ; BSR set to: 14
 11233                           ;motor.c: 240: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 11234  00CACA  0EF5               	movlw	low _motor_prescaler_lookup
 11235  00CACC  0100               	movlb	0	; () banked
 11236  00CACE  25F3               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 11237  00CAD0  6EF6               	movwf	tblptrl,c
 11238  00CAD2  0E9B               	movlw	high _motor_prescaler_lookup
 11239  00CAD4  21F4               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 11240  00CAD6  6EF7               	movwf	tblptrh,c
 11241  00CAD8                     	if	1	;There are 3 active tblptr bytes
 11242  00CAD8  6AF8               	clrf	tblptru,c
 11243  00CADA  0E00               	movlw	low (__mediumconst shr (0+16))
 11244  00CADC  22F8               	addwfc	tblptru,f,c
 11245  00CADE                     	endif
 11246  00CADE  0008               	tblrd		*
 11247  00CAE0  CFF5 F066          	movff	tablat,??__motor_run
 11248  00CAE4  50CA               	movf	4042,w,c	;volatile
 11249  00CAE6  1966               	xorwf	??__motor_run& (0+255),w,b
 11250  00CAE8  0BFC               	andlw	-4
 11251  00CAEA  1966               	xorwf	??__motor_run& (0+255),w,b
 11252  00CAEC  6ECA               	movwf	4042,c	;volatile
 11253                           
 11254                           ; BSR set to: 0
 11255                           ;motor.c: 242: PR2 = motor_period_lookup[motor_current_speed];
 11256  00CAEE  0E0E               	movlw	low _motor_period_lookup
 11257  00CAF0  25F3               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 11258  00CAF2  6EF6               	movwf	tblptrl,c
 11259  00CAF4  0E9A               	movlw	high _motor_period_lookup
 11260  00CAF6  21F4               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 11261  00CAF8  6EF7               	movwf	tblptrh,c
 11262  00CAFA                     	if	1	;There are 3 active tblptr bytes
 11263  00CAFA  6AF8               	clrf	tblptru,c
 11264  00CAFC  0E00               	movlw	low (__mediumconst shr (0+16))
 11265  00CAFE  22F8               	addwfc	tblptru,f,c
 11266  00CB00                     	endif
 11267  00CB00  0008               	tblrd		*
 11268  00CB02  CFF5 FFCB          	movff	tablat,4043	;volatile
 11269                           
 11270                           ; BSR set to: 0
 11271                           ;motor.c: 244: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 11272  00CB06  0E27               	movlw	low _motor_postscaler_lookup
 11273  00CB08  25F3               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 11274  00CB0A  6EF6               	movwf	tblptrl,c
 11275  00CB0C  0E98               	movlw	high _motor_postscaler_lookup
 11276  00CB0E  21F4               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 11277  00CB10  6EF7               	movwf	tblptrh,c
 11278  00CB12                     	if	1	;There are 3 active tblptr bytes
 11279  00CB12  6AF8               	clrf	tblptru,c
 11280  00CB14  0E00               	movlw	low (__mediumconst shr (0+16))
 11281  00CB16  22F8               	addwfc	tblptru,f,c
 11282  00CB18                     	endif
 11283  00CB18  0008               	tblrd		*
 11284  00CB1A  CFF5 F066          	movff	tablat,??__motor_run
 11285  00CB1E  4766               	rlncf	??__motor_run& (0+255),f,b
 11286  00CB20  4766               	rlncf	??__motor_run& (0+255),f,b
 11287  00CB22  4766               	rlncf	??__motor_run& (0+255),f,b
 11288  00CB24  50CA               	movf	4042,w,c	;volatile
 11289  00CB26  1966               	xorwf	??__motor_run& (0+255),w,b
 11290  00CB28  0B87               	andlw	-121
 11291  00CB2A  1966               	xorwf	??__motor_run& (0+255),w,b
 11292  00CB2C  6ECA               	movwf	4042,c	;volatile
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;motor.c: 246: CCPR1L = PR2>>1;
 11296  00CB2E  90D8               	bcf	status,0,c
 11297  00CB30  30CB               	rrcf	4043,w,c	;volatile
 11298  00CB32  6EBB               	movwf	4027,c	;volatile
 11299                           
 11300                           ; BSR set to: 0
 11301                           ;motor.c: 249: PIR1bits.TMR2IF = 0;
 11302  00CB34  929E               	bcf	3998,1,c	;volatile
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;motor.c: 250: PIE1bits.TMR2IE = 1;
 11306  00CB36  829D               	bsf	3997,1,c	;volatile
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;motor.c: 253: TMR2 = 0;
 11310  00CB38  0E00               	movlw	0
 11311  00CB3A  6ECC               	movwf	4044,c	;volatile
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;motor.c: 254: T2CONbits.TMR2ON = 1;
 11315  00CB3C  84CA               	bsf	4042,2,c	;volatile
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;motor.c: 257: os.busy = 1;
 11319  00CB3E  0E01               	movlw	1
 11320  00CB40  6FDA               	movwf	(_os+14)& (0+255),b	;volatile
 11321                           
 11322                           ; BSR set to: 0
 11323  00CB42  0012               	return		;funcret
 11324  00CB44                     __end_of__motor_run:
 11325                           	opt stack 0
 11326                           tblptru	equ	0xFF8
 11327                           tblptrh	equ	0xFF7
 11328                           tblptrl	equ	0xFF6
 11329                           tablat	equ	0xFF5
 11330                           prodh	equ	0xFF4
 11331                           prodl	equ	0xFF3
 11332                           intcon	equ	0xFF2
 11333                           postinc0	equ	0xFEE
 11334                           wreg	equ	0xFE8
 11335                           postdec1	equ	0xFE5
 11336                           plusw1	equ	0xFE3
 11337                           fsr1h	equ	0xFE2
 11338                           fsr1l	equ	0xFE1
 11339                           indf2	equ	0xFDF
 11340                           postinc2	equ	0xFDE
 11341                           postdec2	equ	0xFDD
 11342                           plusw2	equ	0xFDB
 11343                           fsr2h	equ	0xFDA
 11344                           fsr2l	equ	0xFD9
 11345                           status	equ	0xFD8
 11346                           
 11347 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 11348 ;; Defined at:
 11349 ;;		line 41 in file "motor.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  degrees         2   47[BANK0 ] unsigned int 
 11352 ;; Auto vars:     Size  Location     Type
 11353 ;;  steps           4   51[BANK0 ] unsigned long 
 11354 ;; Return value:  Size  Location     Type
 11355 ;;                  4   47[BANK0 ] unsigned long 
 11356 ;; Registers used:
 11357 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11358 ;; Tracked objects:
 11359 ;;		On entry : 0/0
 11360 ;;		On exit  : 0/0
 11361 ;;		Unchanged: 0/0
 11362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11364 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11366 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11367 ;;Total ram usage:        8 bytes
 11368 ;; Hardware stack levels used:    1
 11369 ;; Hardware stack levels required when called:   12
 11370 ;; This function calls:
 11371 ;;		_motor_steps_from_degrees
 11372 ;; This function is called by:
 11373 ;;		_encoder_statemachine
 11374 ;; This function uses a non-reentrant model
 11375 ;;
 11376                           
 11377                           	psect	text27
 11378  00F0CA                     __ptext27:
 11379                           	opt stack 0
 11380  00F0CA                     _motor_nonzero_steps_from_degrees:
 11381                           	opt stack 17
 11382                           
 11383                           ;motor.c: 43: uint32_t steps;;motor.c: 44: steps = motor_steps_from_degrees(degrees);
 11384                           
 11385                           ; BSR set to: 0
 11386                           ;incstack = 0
 11387  00F0CA  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 11388  00F0CE  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 11389  00F0D2  EC51  F070         	call	_motor_steps_from_degrees	;wreg free
 11390  00F0D6  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 11391  00F0DA  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 11392  00F0DE  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 11393  00F0E2  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 11394                           
 11395                           ;motor.c: 45: if(steps==0)
 11396  00F0E6  0100               	movlb	0	; () banked
 11397  00F0E8  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 11398  00F0EA  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 11399  00F0EC  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 11400  00F0EE  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 11401  00F0F0  A4D8               	btfss	status,2,c
 11402  00F0F2  D008               	goto	l2292
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;motor.c: 46: steps = 1;
 11406  00F0F4  0E01               	movlw	1
 11407  00F0F6  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 11408  00F0F8  0E00               	movlw	0
 11409  00F0FA  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 11410  00F0FC  0E00               	movlw	0
 11411  00F0FE  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 11412  00F100  0E00               	movlw	0
 11413  00F102  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 11414  00F104                     l2292:
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;motor.c: 47: return steps;
 11418                           
 11419                           ; BSR set to: 0
 11420  00F104  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 11421  00F108  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 11422  00F10C  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 11423  00F110  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 11424  00F114  0012               	return	
 11425  00F116                     __end_of_motor_nonzero_steps_from_degrees:
 11426                           	opt stack 0
 11427                           tblptru	equ	0xFF8
 11428                           tblptrh	equ	0xFF7
 11429                           tblptrl	equ	0xFF6
 11430                           tablat	equ	0xFF5
 11431                           prodh	equ	0xFF4
 11432                           prodl	equ	0xFF3
 11433                           intcon	equ	0xFF2
 11434                           postinc0	equ	0xFEE
 11435                           wreg	equ	0xFE8
 11436                           postdec1	equ	0xFE5
 11437                           plusw1	equ	0xFE3
 11438                           fsr1h	equ	0xFE2
 11439                           fsr1l	equ	0xFE1
 11440                           indf2	equ	0xFDF
 11441                           postinc2	equ	0xFDE
 11442                           postdec2	equ	0xFDD
 11443                           plusw2	equ	0xFDB
 11444                           fsr2h	equ	0xFDA
 11445                           fsr2l	equ	0xFD9
 11446                           status	equ	0xFD8
 11447                           
 11448 ;; *************** function _motor_steps_from_degrees *****************
 11449 ;; Defined at:
 11450 ;;		line 30 in file "motor.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  degrees         2   39[BANK0 ] unsigned int 
 11453 ;; Auto vars:     Size  Location     Type
 11454 ;;  steps           4   43[BANK0 ] float 
 11455 ;; Return value:  Size  Location     Type
 11456 ;;                  4   39[BANK0 ] unsigned long 
 11457 ;; Registers used:
 11458 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11459 ;; Tracked objects:
 11460 ;;		On entry : 0/0
 11461 ;;		On exit  : 0/0
 11462 ;;		Unchanged: 0/0
 11463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11464 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11465 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11467 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11468 ;;Total ram usage:        8 bytes
 11469 ;; Hardware stack levels used:    1
 11470 ;; Hardware stack levels required when called:   11
 11471 ;; This function calls:
 11472 ;;		___fldiv
 11473 ;;		___flmul
 11474 ;;		___fltol
 11475 ;;		___xxtofl
 11476 ;; This function is called by:
 11477 ;;		_motor_nonzero_steps_from_degrees
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           	psect	text28
 11482  00E0A2                     __ptext28:
 11483                           	opt stack 0
 11484  00E0A2                     _motor_steps_from_degrees:
 11485                           	opt stack 17
 11486                           
 11487                           ;motor.c: 32: float steps;;motor.c: 33: steps = (float) degrees;
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;incstack = 0
 11491  00E0A2  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 11492  00E0A6  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 11493  00E0AA  0100               	movlb	0	; () banked
 11494  00E0AC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 11495  00E0AE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 11496  00E0B0  0E00               	movlw	0
 11497  00E0B2  EC46  F066         	call	___xxtofl
 11498  00E0B6  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 11499  00E0BA  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 11500  00E0BE  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 11501  00E0C2  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 11502                           
 11503                           ;motor.c: 34: steps *= config.full_circle_in_steps;
 11504  00E0C6  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 11505  00E0CA  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 11506  00E0CE  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 11507  00E0D2  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 11508  00E0D6  C11F  F060         	movff	_config,___xxtofl@val
 11509  00E0DA  C120  F061         	movff	_config+1,___xxtofl@val+1
 11510  00E0DE  C121  F062         	movff	_config+2,___xxtofl@val+2
 11511  00E0E2  C122  F063         	movff	_config+3,___xxtofl@val+3
 11512  00E0E6  0E00               	movlw	0
 11513  00E0E8  EC46  F066         	call	___xxtofl
 11514  00E0EC  C060  F072         	movff	?___xxtofl,___flmul@a
 11515  00E0F0  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 11516  00E0F4  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 11517  00E0F8  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 11518  00E0FC  EC51  F05F         	call	___flmul	;wreg free
 11519  00E100  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 11520  00E104  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 11521  00E108  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 11522  00E10C  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 11523                           
 11524                           ;motor.c: 35: steps /= 36000;
 11525  00E110  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 11526  00E114  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 11527  00E118  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 11528  00E11C  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 11529  00E120  0E00               	movlw	0
 11530  00E122  0100               	movlb	0	; () banked
 11531  00E124  6F72               	movwf	___fldiv@a& (0+255),b
 11532  00E126  0EA0               	movlw	160
 11533  00E128  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 11534  00E12A  0E0C               	movlw	12
 11535  00E12C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 11536  00E12E  0E47               	movlw	71
 11537  00E130  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 11538  00E132  ECFA  F060         	call	___fldiv	;wreg free
 11539  00E136  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 11540  00E13A  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 11541  00E13E  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 11542  00E142  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 11543                           
 11544                           ;motor.c: 37: return (uint32_t) steps;
 11545  00E146  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 11546  00E14A  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 11547  00E14E  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 11548  00E152  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 11549  00E156  ECD1  F06D         	call	___fltol	;wreg free
 11550  00E15A  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 11551  00E15E  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 11552  00E162  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 11553  00E166  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 11554  00E16A  0012               	return	
 11555  00E16C                     __end_of_motor_steps_from_degrees:
 11556                           	opt stack 0
 11557                           tblptru	equ	0xFF8
 11558                           tblptrh	equ	0xFF7
 11559                           tblptrl	equ	0xFF6
 11560                           tablat	equ	0xFF5
 11561                           prodh	equ	0xFF4
 11562                           prodl	equ	0xFF3
 11563                           intcon	equ	0xFF2
 11564                           postinc0	equ	0xFEE
 11565                           wreg	equ	0xFE8
 11566                           postdec1	equ	0xFE5
 11567                           plusw1	equ	0xFE3
 11568                           fsr1h	equ	0xFE2
 11569                           fsr1l	equ	0xFE1
 11570                           indf2	equ	0xFDF
 11571                           postinc2	equ	0xFDE
 11572                           postdec2	equ	0xFDD
 11573                           plusw2	equ	0xFDB
 11574                           fsr2h	equ	0xFDA
 11575                           fsr2l	equ	0xFD9
 11576                           status	equ	0xFD8
 11577                           
 11578 ;; *************** function ___flmul *****************
 11579 ;; Defined at:
 11580 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;  b               4   14[BANK0 ] unsigned long 
 11583 ;;  a               4   18[BANK0 ] unsigned long 
 11584 ;; Auto vars:     Size  Location     Type
 11585 ;;  prod            4   33[BANK0 ] struct .
 11586 ;;  grs             4   28[BANK0 ] unsigned long 
 11587 ;;  temp            2   37[BANK0 ] struct .
 11588 ;;  bexp            1   32[BANK0 ] unsigned char 
 11589 ;;  aexp            1   27[BANK0 ] unsigned char 
 11590 ;;  sign            1   26[BANK0 ] unsigned char 
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  4   14[BANK0 ] unsigned char 
 11593 ;; Registers used:
 11594 ;;		wreg, status,2, status,0, prodl, prodh
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11600 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11601 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;Total ram usage:       25 bytes
 11605 ;; Hardware stack levels used:    1
 11606 ;; Hardware stack levels required when called:   10
 11607 ;; This function calls:
 11608 ;;		Nothing
 11609 ;; This function is called by:
 11610 ;;		_main
 11611 ;;		_motor_steps_from_degrees
 11612 ;;		_encoder_statemachine
 11613 ;; This function uses a non-reentrant model
 11614 ;;
 11615                           
 11616                           	psect	text29
 11617  00BEA2                     __ptext29:
 11618                           	opt stack 0
 11619  00BEA2                     ___flmul:
 11620                           	opt stack 17
 11621                           
 11622                           ;incstack = 0
 11623  00BEA2  0100               	movlb	0	; () banked
 11624  00BEA4  5171               	movf	(___flmul@b+3)& (0+255),w,b
 11625  00BEA6  0B80               	andlw	128
 11626  00BEA8  6F7A               	movwf	___flmul@sign& (0+255),b
 11627  00BEAA  5171               	movf	(___flmul@b+3)& (0+255),w,b
 11628  00BEAC  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 11629  00BEAE  6F80               	movwf	___flmul@bexp& (0+255),b
 11630                           
 11631                           ; BSR set to: 0
 11632  00BEB0  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 11633                           
 11634                           ; BSR set to: 0
 11635  00BEB2  8180               	bsf	___flmul@bexp& (0+255),0,b
 11636                           
 11637                           ; BSR set to: 0
 11638                           
 11639                           ; BSR set to: 0
 11640  00BEB4  5180               	movf	___flmul@bexp& (0+255),w,b
 11641  00BEB6  B4D8               	btfsc	status,2,c
 11642  00BEB8  D00D               	goto	l3232
 11643                           
 11644                           ; BSR set to: 0
 11645  00BEBA  2980               	incf	___flmul@bexp& (0+255),w,b
 11646  00BEBC  A4D8               	btfss	status,2,c
 11647  00BEBE  D008               	goto	l3233
 11648                           
 11649                           ; BSR set to: 0
 11650  00BEC0  0E00               	movlw	0
 11651  00BEC2  6F6E               	movwf	___flmul@b& (0+255),b
 11652  00BEC4  0E00               	movlw	0
 11653  00BEC6  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 11654  00BEC8  0E00               	movlw	0
 11655  00BECA  6F70               	movwf	(___flmul@b+2)& (0+255),b
 11656  00BECC  0E00               	movlw	0
 11657  00BECE  6F71               	movwf	(___flmul@b+3)& (0+255),b
 11658  00BED0                     l3233:
 11659                           
 11660                           ; BSR set to: 0
 11661                           
 11662                           ; BSR set to: 0
 11663  00BED0  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 11664  00BED2  D008               	goto	l3234
 11665  00BED4                     l3232:
 11666                           
 11667                           ; BSR set to: 0
 11668                           
 11669                           ; BSR set to: 0
 11670  00BED4  0E00               	movlw	0
 11671  00BED6  6F6E               	movwf	___flmul@b& (0+255),b
 11672  00BED8  0E00               	movlw	0
 11673  00BEDA  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 11674  00BEDC  0E00               	movlw	0
 11675  00BEDE  6F70               	movwf	(___flmul@b+2)& (0+255),b
 11676  00BEE0  0E00               	movlw	0
 11677  00BEE2  6F71               	movwf	(___flmul@b+3)& (0+255),b
 11678  00BEE4                     l3234:
 11679                           
 11680                           ; BSR set to: 0
 11681                           
 11682                           ; BSR set to: 0
 11683  00BEE4  5175               	movf	(___flmul@a+3)& (0+255),w,b
 11684  00BEE6  0B80               	andlw	128
 11685  00BEE8  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 11686                           
 11687                           ; BSR set to: 0
 11688  00BEEA  5175               	movf	(___flmul@a+3)& (0+255),w,b
 11689  00BEEC  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 11690  00BEEE  6F7B               	movwf	___flmul@aexp& (0+255),b
 11691                           
 11692                           ; BSR set to: 0
 11693  00BEF0  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 11694                           
 11695                           ; BSR set to: 0
 11696  00BEF2  817B               	bsf	___flmul@aexp& (0+255),0,b
 11697                           
 11698                           ; BSR set to: 0
 11699                           
 11700                           ; BSR set to: 0
 11701  00BEF4  517B               	movf	___flmul@aexp& (0+255),w,b
 11702  00BEF6  B4D8               	btfsc	status,2,c
 11703  00BEF8  D00D               	goto	l3236
 11704                           
 11705                           ; BSR set to: 0
 11706  00BEFA  297B               	incf	___flmul@aexp& (0+255),w,b
 11707  00BEFC  A4D8               	btfss	status,2,c
 11708  00BEFE  D008               	goto	l3237
 11709                           
 11710                           ; BSR set to: 0
 11711  00BF00  0E00               	movlw	0
 11712  00BF02  6F72               	movwf	___flmul@a& (0+255),b
 11713  00BF04  0E00               	movlw	0
 11714  00BF06  6F73               	movwf	(___flmul@a+1)& (0+255),b
 11715  00BF08  0E00               	movlw	0
 11716  00BF0A  6F74               	movwf	(___flmul@a+2)& (0+255),b
 11717  00BF0C  0E00               	movlw	0
 11718  00BF0E  6F75               	movwf	(___flmul@a+3)& (0+255),b
 11719  00BF10                     l3237:
 11720                           
 11721                           ; BSR set to: 0
 11722                           
 11723                           ; BSR set to: 0
 11724  00BF10  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 11725  00BF12  D008               	goto	l3238
 11726  00BF14                     l3236:
 11727                           
 11728                           ; BSR set to: 0
 11729                           
 11730                           ; BSR set to: 0
 11731  00BF14  0E00               	movlw	0
 11732  00BF16  6F72               	movwf	___flmul@a& (0+255),b
 11733  00BF18  0E00               	movlw	0
 11734  00BF1A  6F73               	movwf	(___flmul@a+1)& (0+255),b
 11735  00BF1C  0E00               	movlw	0
 11736  00BF1E  6F74               	movwf	(___flmul@a+2)& (0+255),b
 11737  00BF20  0E00               	movlw	0
 11738  00BF22  6F75               	movwf	(___flmul@a+3)& (0+255),b
 11739  00BF24                     l3238:
 11740                           
 11741                           ; BSR set to: 0
 11742  00BF24  517B               	movf	___flmul@aexp& (0+255),w,b
 11743  00BF26  B4D8               	btfsc	status,2,c
 11744  00BF28  D003               	goto	u16700
 11745                           
 11746                           ; BSR set to: 0
 11747  00BF2A  5180               	movf	___flmul@bexp& (0+255),w,b
 11748  00BF2C  A4D8               	btfss	status,2,c
 11749  00BF2E  D009               	goto	l3239
 11750  00BF30                     u16700:
 11751                           
 11752                           ; BSR set to: 0
 11753                           
 11754                           ; BSR set to: 0
 11755  00BF30  0E00               	movlw	0
 11756  00BF32  6F6E               	movwf	?___flmul& (0+255),b
 11757  00BF34  0E00               	movlw	0
 11758  00BF36  6F6F               	movwf	(?___flmul+1)& (0+255),b
 11759  00BF38  0E00               	movlw	0
 11760  00BF3A  6F70               	movwf	(?___flmul+2)& (0+255),b
 11761  00BF3C  0E00               	movlw	0
 11762  00BF3E  6F71               	movwf	(?___flmul+3)& (0+255),b
 11763                           
 11764                           ; BSR set to: 0
 11765  00BF40  0012               	return	
 11766  00BF42                     l3239:
 11767                           
 11768                           ; BSR set to: 0
 11769                           
 11770                           ; BSR set to: 0
 11771  00BF42  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11772  00BF44  036E               	mulwf	___flmul@b& (0+255),b
 11773  00BF46  CFF3 F085          	movff	prodl,___flmul@temp
 11774  00BF4A  CFF4 F086          	movff	prodh,___flmul@temp+1
 11775                           
 11776                           ; BSR set to: 0
 11777  00BF4E  5185               	movf	___flmul@temp& (0+255),w,b
 11778  00BF50  6F7C               	movwf	___flmul@grs& (0+255),b
 11779  00BF52  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
 11780  00BF54  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
 11781  00BF56  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
 11782                           
 11783                           ; BSR set to: 0
 11784  00BF58  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11785  00BF5A  6F81               	movwf	___flmul@prod& (0+255),b
 11786  00BF5C  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 11787  00BF5E  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 11788  00BF60  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 11789  00BF62  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11790  00BF64  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11791  00BF66  CFF3 F085          	movff	prodl,___flmul@temp
 11792  00BF6A  CFF4 F086          	movff	prodh,___flmul@temp+1
 11793                           
 11794                           ; BSR set to: 0
 11795  00BF6E  5185               	movf	___flmul@temp& (0+255),w,b
 11796  00BF70  277C               	addwf	___flmul@grs& (0+255),f,b
 11797  00BF72  0E00               	movlw	0
 11798  00BF74  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11799  00BF76  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11800  00BF78  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11801                           
 11802                           ; BSR set to: 0
 11803  00BF7A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11804  00BF7C  2781               	addwf	___flmul@prod& (0+255),f,b
 11805  00BF7E  0E00               	movlw	0
 11806  00BF80  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11807  00BF82  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11808  00BF84  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11809  00BF86  5172               	movf	___flmul@a& (0+255),w,b
 11810  00BF88  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11811  00BF8A  CFF3 F085          	movff	prodl,___flmul@temp
 11812  00BF8E  CFF4 F086          	movff	prodh,___flmul@temp+1
 11813                           
 11814                           ; BSR set to: 0
 11815  00BF92  5185               	movf	___flmul@temp& (0+255),w,b
 11816  00BF94  277C               	addwf	___flmul@grs& (0+255),f,b
 11817  00BF96  0E00               	movlw	0
 11818  00BF98  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11819  00BF9A  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11820  00BF9C  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11821                           
 11822                           ; BSR set to: 0
 11823  00BF9E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11824  00BFA0  2781               	addwf	___flmul@prod& (0+255),f,b
 11825  00BFA2  0E00               	movlw	0
 11826  00BFA4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11827  00BFA6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11828  00BFA8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11829                           
 11830                           ; BSR set to: 0
 11831  00BFAA  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 11832  00BFAE  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 11833  00BFB2  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 11834  00BFB6  6B7C               	clrf	___flmul@grs& (0+255),b
 11835                           
 11836                           ; BSR set to: 0
 11837  00BFB8  5172               	movf	___flmul@a& (0+255),w,b
 11838  00BFBA  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11839  00BFBC  CFF3 F085          	movff	prodl,___flmul@temp
 11840  00BFC0  CFF4 F086          	movff	prodh,___flmul@temp+1
 11841                           
 11842                           ; BSR set to: 0
 11843  00BFC4  5185               	movf	___flmul@temp& (0+255),w,b
 11844  00BFC6  277C               	addwf	___flmul@grs& (0+255),f,b
 11845  00BFC8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11846  00BFCA  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11847  00BFCC  0E00               	movlw	0
 11848  00BFCE  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11849  00BFD0  0E00               	movlw	0
 11850  00BFD2  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11851                           
 11852                           ; BSR set to: 0
 11853  00BFD4  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11854  00BFD6  036E               	mulwf	___flmul@b& (0+255),b
 11855  00BFD8  CFF3 F085          	movff	prodl,___flmul@temp
 11856  00BFDC  CFF4 F086          	movff	prodh,___flmul@temp+1
 11857                           
 11858                           ; BSR set to: 0
 11859  00BFE0  5185               	movf	___flmul@temp& (0+255),w,b
 11860  00BFE2  277C               	addwf	___flmul@grs& (0+255),f,b
 11861  00BFE4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11862  00BFE6  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11863  00BFE8  0E00               	movlw	0
 11864  00BFEA  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11865  00BFEC  0E00               	movlw	0
 11866  00BFEE  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11867                           
 11868                           ; BSR set to: 0
 11869  00BFF0  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 11870  00BFF4  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 11871  00BFF8  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 11872  00BFFC  6B7C               	clrf	___flmul@grs& (0+255),b
 11873  00BFFE  5172               	movf	___flmul@a& (0+255),w,b
 11874  00C000  036E               	mulwf	___flmul@b& (0+255),b
 11875  00C002  CFF3 F085          	movff	prodl,___flmul@temp
 11876  00C006  CFF4 F086          	movff	prodh,___flmul@temp+1
 11877                           
 11878                           ; BSR set to: 0
 11879  00C00A  5185               	movf	___flmul@temp& (0+255),w,b
 11880  00C00C  277C               	addwf	___flmul@grs& (0+255),f,b
 11881  00C00E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11882  00C010  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
 11883  00C012  0E00               	movlw	0
 11884  00C014  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
 11885  00C016  0E00               	movlw	0
 11886  00C018  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
 11887                           
 11888                           ; BSR set to: 0
 11889  00C01A  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11890  00C01C  036F               	mulwf	(___flmul@b+1)& (0+255),b
 11891  00C01E  CFF3 F085          	movff	prodl,___flmul@temp
 11892  00C022  CFF4 F086          	movff	prodh,___flmul@temp+1
 11893  00C026  5185               	movf	___flmul@temp& (0+255),w,b
 11894  00C028  2781               	addwf	___flmul@prod& (0+255),f,b
 11895  00C02A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11896  00C02C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11897  00C02E  0E00               	movlw	0
 11898  00C030  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11899  00C032  0E00               	movlw	0
 11900  00C034  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11901                           
 11902                           ; BSR set to: 0
 11903  00C036  5173               	movf	(___flmul@a+1)& (0+255),w,b
 11904  00C038  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11905  00C03A  CFF3 F085          	movff	prodl,___flmul@temp
 11906  00C03E  CFF4 F086          	movff	prodh,___flmul@temp+1
 11907                           
 11908                           ; BSR set to: 0
 11909  00C042  5185               	movf	___flmul@temp& (0+255),w,b
 11910  00C044  2781               	addwf	___flmul@prod& (0+255),f,b
 11911  00C046  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11912  00C048  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11913  00C04A  0E00               	movlw	0
 11914  00C04C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11915  00C04E  0E00               	movlw	0
 11916  00C050  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11917  00C052  5174               	movf	(___flmul@a+2)& (0+255),w,b
 11918  00C054  0370               	mulwf	(___flmul@b+2)& (0+255),b
 11919  00C056  CFF3 F085          	movff	prodl,___flmul@temp
 11920  00C05A  CFF4 F086          	movff	prodh,___flmul@temp+1
 11921                           
 11922                           ; BSR set to: 0
 11923  00C05E  5185               	movf	___flmul@temp& (0+255),w,b
 11924  00C060  6F76               	movwf	??___flmul& (0+255),b
 11925  00C062  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 11926  00C064  6F77               	movwf	(??___flmul+1)& (0+255),b
 11927  00C066  6B78               	clrf	(??___flmul+2)& (0+255),b
 11928  00C068  6B79               	clrf	(??___flmul+3)& (0+255),b
 11929  00C06A  C078  F079         	movff	??___flmul+2,??___flmul+3
 11930  00C06E  C077  F078         	movff	??___flmul+1,??___flmul+2
 11931  00C072  C076  F077         	movff	??___flmul,??___flmul+1
 11932  00C076  6B76               	clrf	??___flmul& (0+255),b
 11933  00C078  5176               	movf	??___flmul& (0+255),w,b
 11934  00C07A  2781               	addwf	___flmul@prod& (0+255),f,b
 11935  00C07C  5177               	movf	(??___flmul+1)& (0+255),w,b
 11936  00C07E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11937  00C080  5178               	movf	(??___flmul+2)& (0+255),w,b
 11938  00C082  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11939  00C084  5179               	movf	(??___flmul+3)& (0+255),w,b
 11940  00C086  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11941                           
 11942                           ; BSR set to: 0
 11943  00C088  C07C  F076         	movff	___flmul@grs,??___flmul
 11944  00C08C  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
 11945  00C090  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
 11946  00C094  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
 11947  00C098  0E19               	movlw	25
 11948  00C09A  D005               	goto	u16710
 11949  00C09C                     u16715:
 11950  00C09C  90D8               	bcf	status,0,c
 11951  00C09E  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 11952  00C0A0  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 11953  00C0A2  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 11954  00C0A4  3376               	rrcf	??___flmul& (0+255),f,b
 11955  00C0A6                     u16710:
 11956  00C0A6  2EE8               	decfsz	wreg,f,c
 11957  00C0A8  D7F9               	goto	u16715
 11958  00C0AA  5176               	movf	??___flmul& (0+255),w,b
 11959  00C0AC  2781               	addwf	___flmul@prod& (0+255),f,b
 11960  00C0AE  5177               	movf	(??___flmul+1)& (0+255),w,b
 11961  00C0B0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 11962  00C0B2  5178               	movf	(??___flmul+2)& (0+255),w,b
 11963  00C0B4  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 11964  00C0B6  5179               	movf	(??___flmul+3)& (0+255),w,b
 11965  00C0B8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 11966                           
 11967                           ; BSR set to: 0
 11968  00C0BA  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
 11969  00C0BE  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
 11970  00C0C2  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
 11971  00C0C6  6B7C               	clrf	___flmul@grs& (0+255),b
 11972                           
 11973                           ; BSR set to: 0
 11974  00C0C8  517B               	movf	___flmul@aexp& (0+255),w,b
 11975  00C0CA  C080  F076         	movff	___flmul@bexp,??___flmul
 11976  00C0CE  6B77               	clrf	(??___flmul+1)& (0+255),b
 11977  00C0D0  2776               	addwf	??___flmul& (0+255),f,b
 11978  00C0D2  0E00               	movlw	0
 11979  00C0D4  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 11980  00C0D6  0E82               	movlw	130
 11981  00C0D8  2576               	addwf	??___flmul& (0+255),w,b
 11982  00C0DA  6F85               	movwf	___flmul@temp& (0+255),b
 11983  00C0DC  0EFF               	movlw	255
 11984  00C0DE  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 11985  00C0E0  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 11986  00C0E2  D00F               	goto	l3243
 11987  00C0E4                     
 11988                           ; BSR set to: 0
 11989                           
 11990                           ; BSR set to: 0
 11991  00C0E4  90D8               	bcf	status,0,c
 11992  00C0E6  3781               	rlcf	___flmul@prod& (0+255),f,b
 11993  00C0E8  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 11994  00C0EA  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 11995  00C0EC  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 11996                           
 11997                           ; BSR set to: 0
 11998  00C0EE  BF7F               	btfsc	(___flmul@grs+3)& (0+255),7,b
 11999                           
 12000                           ; BSR set to: 0
 12001  00C0F0  8181               	bsf	___flmul@prod& (0+255),0,b
 12002                           
 12003                           ; BSR set to: 0
 12004  00C0F2  90D8               	bcf	status,0,c
 12005  00C0F4  377C               	rlcf	___flmul@grs& (0+255),f,b
 12006  00C0F6  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12007  00C0F8  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12008  00C0FA  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12009  00C0FC  0785               	decf	___flmul@temp& (0+255),f,b
 12010  00C0FE  A0D8               	btfss	status,0,c
 12011  00C100  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 12012  00C102                     l3243:
 12013                           
 12014                           ; BSR set to: 0
 12015                           
 12016                           ; BSR set to: 0
 12017  00C102  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 12018  00C104  D7EF               	goto	l3244
 12019                           
 12020                           ; BSR set to: 0
 12021                           
 12022                           ; BSR set to: 0
 12023  00C106  0E00               	movlw	0
 12024  00C108  6F7B               	movwf	___flmul@aexp& (0+255),b
 12025                           
 12026                           ; BSR set to: 0
 12027  00C10A  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
 12028  00C10C  D016               	goto	l3250
 12029                           
 12030                           ; BSR set to: 0
 12031  00C10E  0EFF               	movlw	255
 12032  00C110  157C               	andwf	___flmul@grs& (0+255),w,b
 12033  00C112  6F76               	movwf	??___flmul& (0+255),b
 12034  00C114  0EFF               	movlw	255
 12035  00C116  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
 12036  00C118  6F77               	movwf	(??___flmul+1)& (0+255),b
 12037  00C11A  0EFF               	movlw	255
 12038  00C11C  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
 12039  00C11E  6F78               	movwf	(??___flmul+2)& (0+255),b
 12040  00C120  0E7F               	movlw	127
 12041  00C122  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
 12042  00C124  6F79               	movwf	(??___flmul+3)& (0+255),b
 12043  00C126  5176               	movf	??___flmul& (0+255),w,b
 12044  00C128  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 12045  00C12A  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 12046  00C12C  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 12047  00C12E  A4D8               	btfss	status,2,c
 12048  00C130  D002               	goto	u16760
 12049                           
 12050                           ; BSR set to: 0
 12051                           
 12052                           ; BSR set to: 0
 12053  00C132  A181               	btfss	___flmul@prod& (0+255),0,b
 12054  00C134  D002               	goto	l3250
 12055  00C136                     u16760:
 12056                           
 12057                           ; BSR set to: 0
 12058  00C136  0E01               	movlw	1
 12059  00C138  6F7B               	movwf	___flmul@aexp& (0+255),b
 12060  00C13A                     l3250:
 12061                           
 12062                           ; BSR set to: 0
 12063                           
 12064                           ; BSR set to: 0
 12065                           
 12066                           ; BSR set to: 0
 12067  00C13A  517B               	movf	___flmul@aexp& (0+255),w,b
 12068  00C13C  B4D8               	btfsc	status,2,c
 12069  00C13E  D01F               	goto	l3252
 12070                           
 12071                           ; BSR set to: 0
 12072  00C140  0E01               	movlw	1
 12073  00C142  2781               	addwf	___flmul@prod& (0+255),f,b
 12074  00C144  0E00               	movlw	0
 12075  00C146  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12076  00C148  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12077  00C14A  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12078                           
 12079                           ; BSR set to: 0
 12080  00C14C  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 12081  00C14E  D017               	goto	l3252
 12082                           
 12083                           ; BSR set to: 0
 12084  00C150  C081  F076         	movff	___flmul@prod,??___flmul
 12085  00C154  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 12086  00C158  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 12087  00C15C  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 12088  00C160  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 12089  00C162  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 12090  00C164  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 12091  00C166  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 12092  00C168  3376               	rrcf	??___flmul& (0+255),f,b
 12093  00C16A  C076  F081         	movff	??___flmul,___flmul@prod
 12094  00C16E  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 12095  00C172  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 12096  00C176  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 12097                           
 12098                           ; BSR set to: 0
 12099  00C17A  4B85               	infsnz	___flmul@temp& (0+255),f,b
 12100  00C17C  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 12101  00C17E                     l3252:
 12102                           
 12103                           ; BSR set to: 0
 12104                           
 12105                           ; BSR set to: 0
 12106                           
 12107                           ; BSR set to: 0
 12108  00C17E  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12109  00C180  D00D               	goto	l3253
 12110  00C182  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12111  00C184  E103               	bnz	u16790
 12112  00C186  2985               	incf	___flmul@temp& (0+255),w,b
 12113  00C188  A0D8               	btfss	status,0,c
 12114  00C18A  D008               	goto	l3253
 12115  00C18C                     u16790:
 12116                           
 12117                           ; BSR set to: 0
 12118  00C18C  0E00               	movlw	0
 12119  00C18E  6F81               	movwf	___flmul@prod& (0+255),b
 12120  00C190  0E00               	movlw	0
 12121  00C192  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 12122  00C194  0E80               	movlw	128
 12123  00C196  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 12124  00C198  0E7F               	movlw	127
 12125  00C19A  D020               	goto	L18
 12126  00C19C                     l3253:
 12127                           
 12128                           ; BSR set to: 0
 12129                           
 12130                           ; BSR set to: 0
 12131  00C19C  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12132  00C19E  D005               	goto	u16800
 12133  00C1A0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 12134  00C1A2  E10E               	bnz	l3255
 12135  00C1A4  0585               	decf	___flmul@temp& (0+255),w,b
 12136  00C1A6  B0D8               	btfsc	status,0,c
 12137  00C1A8  D00B               	goto	l3255
 12138  00C1AA                     u16800:
 12139                           
 12140                           ; BSR set to: 0
 12141  00C1AA  0E00               	movlw	0
 12142  00C1AC  6F81               	movwf	___flmul@prod& (0+255),b
 12143  00C1AE  0E00               	movlw	0
 12144  00C1B0  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 12145  00C1B2  0E00               	movlw	0
 12146  00C1B4  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 12147  00C1B6  0E00               	movlw	0
 12148  00C1B8  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 12149  00C1BA  0E00               	movlw	0
 12150  00C1BC  6F7A               	movwf	___flmul@sign& (0+255),b
 12151  00C1BE  D00F               	goto	l3256
 12152  00C1C0                     l3255:
 12153                           
 12154                           ; BSR set to: 0
 12155  00C1C0  C085  F080         	movff	___flmul@temp,___flmul@bexp
 12156                           
 12157                           ; BSR set to: 0
 12158  00C1C4  0EFF               	movlw	255
 12159  00C1C6  1781               	andwf	___flmul@prod& (0+255),f,b
 12160  00C1C8  0EFF               	movlw	255
 12161  00C1CA  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 12162  00C1CC  0E7F               	movlw	127
 12163  00C1CE  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 12164  00C1D0  0E00               	movlw	0
 12165  00C1D2  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 12166                           
 12167                           ; BSR set to: 0
 12168  00C1D4  B180               	btfsc	___flmul@bexp& (0+255),0,b
 12169                           
 12170                           ; BSR set to: 0
 12171  00C1D6  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 12172                           
 12173                           ; BSR set to: 0
 12174                           
 12175                           ; BSR set to: 0
 12176  00C1D8  90D8               	bcf	status,0,c
 12177  00C1DA  3180               	rrcf	___flmul@bexp& (0+255),w,b
 12178  00C1DC                     L18:
 12179  00C1DC  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 12180  00C1DE                     l3256:
 12181                           
 12182                           ; BSR set to: 0
 12183                           
 12184                           ; BSR set to: 0
 12185                           
 12186                           ; BSR set to: 0
 12187  00C1DE  517A               	movf	___flmul@sign& (0+255),w,b
 12188  00C1E0  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12189                           
 12190                           ; BSR set to: 0
 12191  00C1E2  C081  F06E         	movff	___flmul@prod,?___flmul
 12192  00C1E6  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 12193  00C1EA  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 12194  00C1EE  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 12195  00C1F2  0012               	return	
 12196  00C1F4                     __end_of___flmul:
 12197                           	opt stack 0
 12198                           tblptru	equ	0xFF8
 12199                           tblptrh	equ	0xFF7
 12200                           tblptrl	equ	0xFF6
 12201                           tablat	equ	0xFF5
 12202                           prodh	equ	0xFF4
 12203                           prodl	equ	0xFF3
 12204                           intcon	equ	0xFF2
 12205                           postinc0	equ	0xFEE
 12206                           wreg	equ	0xFE8
 12207                           postdec1	equ	0xFE5
 12208                           plusw1	equ	0xFE3
 12209                           fsr1h	equ	0xFE2
 12210                           fsr1l	equ	0xFE1
 12211                           indf2	equ	0xFDF
 12212                           postinc2	equ	0xFDE
 12213                           postdec2	equ	0xFDD
 12214                           plusw2	equ	0xFDB
 12215                           fsr2h	equ	0xFDA
 12216                           fsr2l	equ	0xFD9
 12217                           status	equ	0xFD8
 12218                           
 12219 ;; *************** function _motor_change_speed *****************
 12220 ;; Defined at:
 12221 ;;		line 425 in file "motor.c"
 12222 ;; Parameters:    Size  Location     Type
 12223 ;;  new_speed       2    0[BANK0 ] unsigned int 
 12224 ;; Auto vars:     Size  Location     Type
 12225 ;;		None
 12226 ;; Return value:  Size  Location     Type
 12227 ;;                  1    wreg      void 
 12228 ;; Registers used:
 12229 ;;		None
 12230 ;; Tracked objects:
 12231 ;;		On entry : 0/0
 12232 ;;		On exit  : 0/0
 12233 ;;		Unchanged: 0/0
 12234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12238 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12239 ;;Total ram usage:        2 bytes
 12240 ;; Hardware stack levels used:    1
 12241 ;; Hardware stack levels required when called:   10
 12242 ;; This function calls:
 12243 ;;		Nothing
 12244 ;; This function is called by:
 12245 ;;		_encoder_statemachine
 12246 ;; This function uses a non-reentrant model
 12247 ;;
 12248                           
 12249                           	psect	text30
 12250  00F65C                     __ptext30:
 12251                           	opt stack 0
 12252  00F65C                     _motor_change_speed:
 12253                           	opt stack 19
 12254                           
 12255                           ;motor.c: 427: motor_maximum_speed = new_speed;
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;incstack = 0
 12259  00F65C  C060  F178         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 12260  00F660  C061  F179         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 12261  00F664  0012               	return		;funcret
 12262  00F666                     __end_of_motor_change_speed:
 12263                           	opt stack 0
 12264                           tblptru	equ	0xFF8
 12265                           tblptrh	equ	0xFF7
 12266                           tblptrl	equ	0xFF6
 12267                           tablat	equ	0xFF5
 12268                           prodh	equ	0xFF4
 12269                           prodl	equ	0xFF3
 12270                           intcon	equ	0xFF2
 12271                           postinc0	equ	0xFEE
 12272                           wreg	equ	0xFE8
 12273                           postdec1	equ	0xFE5
 12274                           plusw1	equ	0xFE3
 12275                           fsr1h	equ	0xFE2
 12276                           fsr1l	equ	0xFE1
 12277                           indf2	equ	0xFDF
 12278                           postinc2	equ	0xFDE
 12279                           postdec2	equ	0xFDD
 12280                           plusw2	equ	0xFDB
 12281                           fsr2h	equ	0xFDA
 12282                           fsr2l	equ	0xFD9
 12283                           status	equ	0xFD8
 12284                           
 12285 ;; *************** function _encoder_next_setup_stepsize *****************
 12286 ;; Defined at:
 12287 ;;		line 607 in file "encoder.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;		None
 12292 ;; Return value:  Size  Location     Type
 12293 ;;                  2    0[BANK0 ] unsigned int 
 12294 ;; Registers used:
 12295 ;;		wreg, status,2, status,0
 12296 ;; Tracked objects:
 12297 ;;		On entry : 0/0
 12298 ;;		On exit  : 0/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12301 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12303 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12304 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12305 ;;Total ram usage:        4 bytes
 12306 ;; Hardware stack levels used:    1
 12307 ;; Hardware stack levels required when called:   10
 12308 ;; This function calls:
 12309 ;;		Nothing
 12310 ;; This function is called by:
 12311 ;;		_encoder_statemachine
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text31
 12316  00EA9C                     __ptext31:
 12317                           	opt stack 0
 12318  00EA9C                     _encoder_next_setup_stepsize:
 12319                           	opt stack 19
 12320                           
 12321                           ;encoder.c: 609: switch(old_stepsize)
 12322                           
 12323                           ;incstack = 0
 12324  00EA9C  D01A               	goto	l2607
 12325  00EA9E                     
 12326                           ;encoder.c: 612: return 100;
 12327  00EA9E  0E00               	movlw	0
 12328  00EAA0  0100               	movlb	0	; () banked
 12329  00EAA2  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12330  00EAA4  0E64               	movlw	100
 12331  00EAA6  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12332                           
 12333                           ; BSR set to: 0
 12334  00EAA8  0012               	return	
 12335  00EAAA                     
 12336                           ; BSR set to: 0
 12337                           ;encoder.c: 614: return 10;
 12338                           
 12339                           ; BSR set to: 0
 12340  00EAAA  0E00               	movlw	0
 12341  00EAAC  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12342  00EAAE  0E0A               	movlw	10
 12343  00EAB0  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12344                           
 12345                           ; BSR set to: 0
 12346  00EAB2  0012               	return	
 12347  00EAB4                     
 12348                           ; BSR set to: 0
 12349                           ;encoder.c: 616: return 1;
 12350                           
 12351                           ; BSR set to: 0
 12352  00EAB4  0E00               	movlw	0
 12353  00EAB6  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12354  00EAB8  0E01               	movlw	1
 12355  00EABA  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12356                           
 12357                           ; BSR set to: 0
 12358  00EABC  0012               	return	
 12359  00EABE                     
 12360                           ; BSR set to: 0
 12361                           ;encoder.c: 618: return 1000;
 12362                           
 12363                           ; BSR set to: 0
 12364  00EABE  0E03               	movlw	3
 12365  00EAC0  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12366  00EAC2  0EE8               	movlw	232
 12367  00EAC4  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12368                           
 12369                           ; BSR set to: 0
 12370  00EAC6  0012               	return	
 12371  00EAC8                     
 12372                           ; BSR set to: 0
 12373                           ;encoder.c: 620: return 100;
 12374                           
 12375                           ; BSR set to: 0
 12376  00EAC8  0E00               	movlw	0
 12377  00EACA  6F61               	movwf	(?_encoder_next_setup_stepsize+1)& (0+255),b
 12378  00EACC  0E64               	movlw	100
 12379  00EACE  6F60               	movwf	?_encoder_next_setup_stepsize& (0+255),b
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;encoder.c: 621: }
 12383                           
 12384                           ; BSR set to: 0
 12385  00EAD0  0012               	return	
 12386  00EAD2                     l2607:
 12387                           
 12388                           ; BSR set to: 0
 12389  00EAD2  C060  F062         	movff	encoder_next_setup_stepsize@old_stepsize,??_encoder_next_setup_stepsize
 12390  00EAD6  C061  F063         	movff	encoder_next_setup_stepsize@old_stepsize+1,??_encoder_next_setup_stepsize+1
 12391                           
 12392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12393                           ; Switch size 1, requested type "space"
 12394                           ; Number of cases is 2, Range of values is 0 to 3
 12395                           ; switch strategies available:
 12396                           ; Name         Instructions Cycles
 12397                           ; simple_byte            7     4 (average)
 12398                           ;	Chosen strategy is simple_byte
 12399  00EADA  0100               	movlb	0	; () banked
 12400  00EADC  5163               	movf	(??_encoder_next_setup_stepsize+1)& (0+255),w,b
 12401  00EADE  0A00               	xorlw	0	; case 0
 12402  00EAE0  B4D8               	btfsc	status,2,c
 12403  00EAE2  D004               	goto	l19090
 12404  00EAE4  0A03               	xorlw	3	; case 3
 12405  00EAE6  B4D8               	btfsc	status,2,c
 12406  00EAE8  D00C               	goto	l19092
 12407  00EAEA  D7EE               	goto	l2613
 12408  00EAEC                     l19090:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ; Switch size 1, requested type "space"
 12412                           ; Number of cases is 3, Range of values is 1 to 100
 12413                           ; switch strategies available:
 12414                           ; Name         Instructions Cycles
 12415                           ; simple_byte           10     6 (average)
 12416                           ;	Chosen strategy is simple_byte
 12417  00EAEC  5162               	movf	??_encoder_next_setup_stepsize& (0+255),w,b
 12418  00EAEE  0A01               	xorlw	1	; case 1
 12419  00EAF0  B4D8               	btfsc	status,2,c
 12420  00EAF2  D7E5               	goto	l2612
 12421  00EAF4  0A0B               	xorlw	11	; case 10
 12422  00EAF6  B4D8               	btfsc	status,2,c
 12423  00EAF8  D7DD               	goto	l2611
 12424  00EAFA  0A6E               	xorlw	110	; case 100
 12425  00EAFC  B4D8               	btfsc	status,2,c
 12426  00EAFE  D7D5               	goto	l2610
 12427  00EB00  D7E3               	goto	l2613
 12428  00EB02                     l19092:
 12429                           
 12430                           ; BSR set to: 0
 12431                           ; Switch size 1, requested type "space"
 12432                           ; Number of cases is 1, Range of values is 232 to 232
 12433                           ; switch strategies available:
 12434                           ; Name         Instructions Cycles
 12435                           ; simple_byte            4     3 (average)
 12436                           ;	Chosen strategy is simple_byte
 12437  00EB02  5162               	movf	??_encoder_next_setup_stepsize& (0+255),w,b
 12438  00EB04  0AE8               	xorlw	232	; case 232
 12439  00EB06  B4D8               	btfsc	status,2,c
 12440  00EB08  D7CA               	goto	l2608
 12441  00EB0A  D7DE               	goto	l2613
 12442  00EB0C                     __end_of_encoder_next_setup_stepsize:
 12443                           	opt stack 0
 12444                           tblptru	equ	0xFF8
 12445                           tblptrh	equ	0xFF7
 12446                           tblptrl	equ	0xFF6
 12447                           tablat	equ	0xFF5
 12448                           prodh	equ	0xFF4
 12449                           prodl	equ	0xFF3
 12450                           intcon	equ	0xFF2
 12451                           postinc0	equ	0xFEE
 12452                           wreg	equ	0xFE8
 12453                           postdec1	equ	0xFE5
 12454                           plusw1	equ	0xFE3
 12455                           fsr1h	equ	0xFE2
 12456                           fsr1l	equ	0xFE1
 12457                           indf2	equ	0xFDF
 12458                           postinc2	equ	0xFDE
 12459                           postdec2	equ	0xFDD
 12460                           plusw2	equ	0xFDB
 12461                           fsr2h	equ	0xFDA
 12462                           fsr2l	equ	0xFD9
 12463                           status	equ	0xFD8
 12464                           
 12465 ;; *************** function _encoder_next_divide_step_size *****************
 12466 ;; Defined at:
 12467 ;;		line 624 in file "encoder.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  old_stepsize    1    wreg     unsigned char 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      unsigned char 
 12474 ;; Registers used:
 12475 ;;		wreg, status,2, status,0
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12484 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12485 ;;Total ram usage:        1 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:   10
 12488 ;; This function calls:
 12489 ;;		Nothing
 12490 ;; This function is called by:
 12491 ;;		_encoder_statemachine
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text32
 12496  00F47C                     __ptext32:
 12497                           	opt stack 0
 12498  00F47C                     _encoder_next_divide_step_size:
 12499                           	opt stack 19
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;incstack = 0
 12503                           ;encoder_next_divide_step_size@old_stepsize stored from wreg
 12504  00F47C  0100               	movlb	0	; () banked
 12505  00F47E  6F60               	movwf	encoder_next_divide_step_size@old_stepsize& (0+255),b
 12506                           
 12507                           ;encoder.c: 626: switch(old_stepsize)
 12508  00F480  D008               	goto	l2617
 12509  00F482                     
 12510                           ;encoder.c: 629: return 10;
 12511  00F482  0E0A               	movlw	10
 12512  00F484  0012               	return	
 12513  00F486                     
 12514                           ;encoder.c: 631: return 1;
 12515  00F486  0E01               	movlw	1
 12516  00F488  0012               	return	
 12517  00F48A                     
 12518                           ;encoder.c: 633: return 100;
 12519  00F48A  0E64               	movlw	100
 12520  00F48C  0012               	return	
 12521  00F48E                     
 12522                           ;encoder.c: 635: return 1;
 12523  00F48E  0E01               	movlw	1
 12524                           
 12525                           ;encoder.c: 636: }
 12526  00F490  0012               	return	
 12527  00F492                     l2617:
 12528  00F492  0100               	movlb	0	; () banked
 12529  00F494  5160               	movf	encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 12530                           
 12531                           ; Switch size 1, requested type "space"
 12532                           ; Number of cases is 3, Range of values is 1 to 100
 12533                           ; switch strategies available:
 12534                           ; Name         Instructions Cycles
 12535                           ; simple_byte           10     6 (average)
 12536                           ;	Chosen strategy is simple_byte
 12537  00F496  0A01               	xorlw	1	; case 1
 12538  00F498  B4D8               	btfsc	status,2,c
 12539  00F49A  D7F7               	goto	l2621
 12540  00F49C  0A0B               	xorlw	11	; case 10
 12541  00F49E  B4D8               	btfsc	status,2,c
 12542  00F4A0  D7F2               	goto	l2620
 12543  00F4A2  0A6E               	xorlw	110	; case 100
 12544  00F4A4  B4D8               	btfsc	status,2,c
 12545  00F4A6  D7ED               	goto	l2618
 12546  00F4A8  D7F2               	goto	l2622
 12547  00F4AA                     __end_of_encoder_next_divide_step_size:
 12548                           	opt stack 0
 12549                           tblptru	equ	0xFF8
 12550                           tblptrh	equ	0xFF7
 12551                           tblptrl	equ	0xFF6
 12552                           tablat	equ	0xFF5
 12553                           prodh	equ	0xFF4
 12554                           prodl	equ	0xFF3
 12555                           intcon	equ	0xFF2
 12556                           postinc0	equ	0xFEE
 12557                           wreg	equ	0xFE8
 12558                           postdec1	equ	0xFE5
 12559                           plusw1	equ	0xFE3
 12560                           fsr1h	equ	0xFE2
 12561                           fsr1l	equ	0xFE1
 12562                           indf2	equ	0xFDF
 12563                           postinc2	equ	0xFDE
 12564                           postdec2	equ	0xFDD
 12565                           plusw2	equ	0xFDB
 12566                           fsr2h	equ	0xFDA
 12567                           fsr2l	equ	0xFD9
 12568                           status	equ	0xFD8
 12569                           
 12570 ;; *************** function _encoder_next_arc_step_size *****************
 12571 ;; Defined at:
 12572 ;;		line 639 in file "encoder.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  2    0[BANK0 ] unsigned int 
 12579 ;; Registers used:
 12580 ;;		wreg, status,2, status,0
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/0
 12583 ;;		On exit  : 0/0
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12590 ;;Total ram usage:        4 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:   10
 12593 ;; This function calls:
 12594 ;;		Nothing
 12595 ;; This function is called by:
 12596 ;;		_encoder_statemachine
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           	psect	text33
 12601  00EB0C                     __ptext33:
 12602                           	opt stack 0
 12603  00EB0C                     _encoder_next_arc_step_size:
 12604                           	opt stack 19
 12605                           
 12606                           ;encoder.c: 641: switch(old_stepsize)
 12607                           
 12608                           ;incstack = 0
 12609  00EB0C  D01A               	goto	l2626
 12610  00EB0E                     
 12611                           ;encoder.c: 644: return 100;
 12612  00EB0E  0E00               	movlw	0
 12613  00EB10  0100               	movlb	0	; () banked
 12614  00EB12  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 12615  00EB14  0E64               	movlw	100
 12616  00EB16  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 12617                           
 12618                           ; BSR set to: 0
 12619  00EB18  0012               	return	
 12620  00EB1A                     
 12621                           ; BSR set to: 0
 12622                           ;encoder.c: 646: return 10;
 12623                           
 12624                           ; BSR set to: 0
 12625  00EB1A  0E00               	movlw	0
 12626  00EB1C  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 12627  00EB1E  0E0A               	movlw	10
 12628  00EB20  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 12629                           
 12630                           ; BSR set to: 0
 12631  00EB22  0012               	return	
 12632  00EB24                     
 12633                           ; BSR set to: 0
 12634                           ;encoder.c: 648: return 1;
 12635                           
 12636                           ; BSR set to: 0
 12637  00EB24  0E00               	movlw	0
 12638  00EB26  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 12639  00EB28  0E01               	movlw	1
 12640  00EB2A  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 12641                           
 12642                           ; BSR set to: 0
 12643  00EB2C  0012               	return	
 12644  00EB2E                     
 12645                           ; BSR set to: 0
 12646                           ;encoder.c: 650: return 1000;
 12647                           
 12648                           ; BSR set to: 0
 12649  00EB2E  0E03               	movlw	3
 12650  00EB30  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 12651  00EB32  0EE8               	movlw	232
 12652  00EB34  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 12653                           
 12654                           ; BSR set to: 0
 12655  00EB36  0012               	return	
 12656  00EB38                     
 12657                           ; BSR set to: 0
 12658                           ;encoder.c: 652: return 100;
 12659                           
 12660                           ; BSR set to: 0
 12661  00EB38  0E00               	movlw	0
 12662  00EB3A  6F61               	movwf	(?_encoder_next_arc_step_size+1)& (0+255),b
 12663  00EB3C  0E64               	movlw	100
 12664  00EB3E  6F60               	movwf	?_encoder_next_arc_step_size& (0+255),b
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;encoder.c: 653: }
 12668                           
 12669                           ; BSR set to: 0
 12670  00EB40  0012               	return	
 12671  00EB42                     l2626:
 12672                           
 12673                           ; BSR set to: 0
 12674  00EB42  C060  F062         	movff	encoder_next_arc_step_size@old_stepsize,??_encoder_next_arc_step_size
 12675  00EB46  C061  F063         	movff	encoder_next_arc_step_size@old_stepsize+1,??_encoder_next_arc_step_size+1
 12676                           
 12677                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12678                           ; Switch size 1, requested type "space"
 12679                           ; Number of cases is 2, Range of values is 0 to 3
 12680                           ; switch strategies available:
 12681                           ; Name         Instructions Cycles
 12682                           ; simple_byte            7     4 (average)
 12683                           ;	Chosen strategy is simple_byte
 12684  00EB4A  0100               	movlb	0	; () banked
 12685  00EB4C  5163               	movf	(??_encoder_next_arc_step_size+1)& (0+255),w,b
 12686  00EB4E  0A00               	xorlw	0	; case 0
 12687  00EB50  B4D8               	btfsc	status,2,c
 12688  00EB52  D004               	goto	l19094
 12689  00EB54  0A03               	xorlw	3	; case 3
 12690  00EB56  B4D8               	btfsc	status,2,c
 12691  00EB58  D00C               	goto	l19096
 12692  00EB5A  D7EE               	goto	l2632
 12693  00EB5C                     l19094:
 12694                           
 12695                           ; BSR set to: 0
 12696                           ; Switch size 1, requested type "space"
 12697                           ; Number of cases is 3, Range of values is 1 to 100
 12698                           ; switch strategies available:
 12699                           ; Name         Instructions Cycles
 12700                           ; simple_byte           10     6 (average)
 12701                           ;	Chosen strategy is simple_byte
 12702  00EB5C  5162               	movf	??_encoder_next_arc_step_size& (0+255),w,b
 12703  00EB5E  0A01               	xorlw	1	; case 1
 12704  00EB60  B4D8               	btfsc	status,2,c
 12705  00EB62  D7E5               	goto	l2631
 12706  00EB64  0A0B               	xorlw	11	; case 10
 12707  00EB66  B4D8               	btfsc	status,2,c
 12708  00EB68  D7DD               	goto	l2630
 12709  00EB6A  0A6E               	xorlw	110	; case 100
 12710  00EB6C  B4D8               	btfsc	status,2,c
 12711  00EB6E  D7D5               	goto	l2629
 12712  00EB70  D7E3               	goto	l2632
 12713  00EB72                     l19096:
 12714                           
 12715                           ; BSR set to: 0
 12716                           ; Switch size 1, requested type "space"
 12717                           ; Number of cases is 1, Range of values is 232 to 232
 12718                           ; switch strategies available:
 12719                           ; Name         Instructions Cycles
 12720                           ; simple_byte            4     3 (average)
 12721                           ;	Chosen strategy is simple_byte
 12722  00EB72  5162               	movf	??_encoder_next_arc_step_size& (0+255),w,b
 12723  00EB74  0AE8               	xorlw	232	; case 232
 12724  00EB76  B4D8               	btfsc	status,2,c
 12725  00EB78  D7CA               	goto	l2627
 12726  00EB7A  D7DE               	goto	l2632
 12727  00EB7C                     __end_of_encoder_next_arc_step_size:
 12728                           	opt stack 0
 12729                           tblptru	equ	0xFF8
 12730                           tblptrh	equ	0xFF7
 12731                           tblptrl	equ	0xFF6
 12732                           tablat	equ	0xFF5
 12733                           prodh	equ	0xFF4
 12734                           prodl	equ	0xFF3
 12735                           intcon	equ	0xFF2
 12736                           postinc0	equ	0xFEE
 12737                           wreg	equ	0xFE8
 12738                           postdec1	equ	0xFE5
 12739                           plusw1	equ	0xFE3
 12740                           fsr1h	equ	0xFE2
 12741                           fsr1l	equ	0xFE1
 12742                           indf2	equ	0xFDF
 12743                           postinc2	equ	0xFDE
 12744                           postdec2	equ	0xFDD
 12745                           plusw2	equ	0xFDB
 12746                           fsr2h	equ	0xFDA
 12747                           fsr2l	equ	0xFD9
 12748                           status	equ	0xFD8
 12749                           
 12750 ;; *************** function _display_prepare *****************
 12751 ;; Defined at:
 12752 ;;		line 230 in file "display.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;		None
 12755 ;; Auto vars:     Size  Location     Type
 12756 ;;  temp           10   94[BANK0 ] unsigned char [10]
 12757 ;;  cntr            1  105[BANK0 ] unsigned char 
 12758 ;;  space           1  104[BANK0 ] unsigned char 
 12759 ;; Return value:  Size  Location     Type
 12760 ;;                  1    wreg      void 
 12761 ;; Registers used:
 12762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12769 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12770 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12771 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12772 ;;Total ram usage:       14 bytes
 12773 ;; Hardware stack levels used:    1
 12774 ;; Hardware stack levels required when called:   15
 12775 ;; This function calls:
 12776 ;;		__display_clear
 12777 ;;		__display_itoa
 12778 ;;		__display_itoa_long
 12779 ;;		__display_padded_itoa
 12780 ;;		__display_signed_itoa
 12781 ;;		_memcpy
 12782 ;;		_motor_speed_from_index
 12783 ;;		_strlen
 12784 ;; This function is called by:
 12785 ;;		_main
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           	psect	text34
 12790  00B20E                     __ptext34:
 12791                           	opt stack 0
 12792  00B20E                     _display_prepare:
 12793                           	opt stack 15
 12794                           
 12795                           ;display.c: 232: uint8_t cntr;;display.c: 233: uint8_t space;;display.c: 234: char temp[
      +                          10];;display.c: 236: switch(os.displayState & 0xF0)
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;incstack = 0
 12799  00B20E  EFF0  F05E         	goto	l1302
 12800  00B212                     
 12801                           ;display.c: 240: memcpy(display_content, dc_main, sizeof display_content);
 12802  00B212  0EAD               	movlw	low _display_content
 12803  00B214  0100               	movlb	0	; () banked
 12804  00B216  6F60               	movwf	memcpy@d1& (0+255),b
 12805  00B218  0E01               	movlw	high _display_content
 12806  00B21A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12807  00B21C  0E66               	movlw	low _dc_main
 12808  00B21E  6F62               	movwf	memcpy@s1& (0+255),b
 12809  00B220  0EA0               	movlw	high _dc_main
 12810  00B222  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12811  00B224  0E00               	movlw	0
 12812  00B226  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12813  00B228  0E50               	movlw	80
 12814  00B22A  6F64               	movwf	memcpy@n& (0+255),b
 12815  00B22C  EC58  F076         	call	_memcpy	;wreg free
 12816                           
 12817                           ;display.c: 241: switch(os.displayState)
 12818  00B230  D00F               	goto	l1304
 12819  00B232                     
 12820                           ;display.c: 244: display_content[1][0] = '>';
 12821  00B232  0E3E               	movlw	62
 12822  00B234  0101               	movlb	1	; () banked
 12823  00B236  6FC1               	movwf	(_display_content+20)& (0+255),b
 12824                           
 12825                           ;display.c: 245: break;
 12826  00B238  EF1D  F05F         	goto	l1311
 12827  00B23C                     
 12828                           ;display.c: 247: display_content[1][9] = '>';
 12829                           
 12830                           ; BSR set to: 1
 12831  00B23C  0E3E               	movlw	62
 12832  00B23E  0101               	movlb	1	; () banked
 12833  00B240  6FCA               	movwf	(_display_content+29)& (0+255),b
 12834                           
 12835                           ;display.c: 248: break;
 12836  00B242  EF1D  F05F         	goto	l1311
 12837  00B246                     
 12838                           ;display.c: 253: display_content[2][9] = '>';
 12839                           
 12840                           ; BSR set to: 1
 12841  00B246  0E3E               	movlw	62
 12842  00B248  0101               	movlb	1	; () banked
 12843  00B24A  6FDE               	movwf	(_display_content+49)& (0+255),b
 12844                           
 12845                           ;display.c: 254: break;
 12846  00B24C  EF1D  F05F         	goto	l1311
 12847  00B250                     l1304:
 12848                           
 12849                           ; BSR set to: 1
 12850  00B250  0100               	movlb	0	; () banked
 12851  00B252  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 12852                           
 12853                           ; Switch size 1, requested type "space"
 12854                           ; Number of cases is 5, Range of values is 1 to 5
 12855                           ; switch strategies available:
 12856                           ; Name         Instructions Cycles
 12857                           ; simple_byte           16     9 (average)
 12858                           ;	Chosen strategy is simple_byte
 12859  00B254  0A01               	xorlw	1	; case 1
 12860  00B256  B4D8               	btfsc	status,2,c
 12861  00B258  D7EC               	goto	l1305
 12862  00B25A  0A03               	xorlw	3	; case 2
 12863  00B25C  B4D8               	btfsc	status,2,c
 12864  00B25E  D7EE               	goto	l1307
 12865  00B260  0A01               	xorlw	1	; case 3
 12866  00B262  B4D8               	btfsc	status,2,c
 12867  00B264  D064               	goto	l1324
 12868  00B266  0A07               	xorlw	7	; case 4
 12869  00B268  B4D8               	btfsc	status,2,c
 12870  00B26A  D7ED               	goto	l1309
 12871  00B26C  0A01               	xorlw	1	; case 5
 12872  00B26E  D06F               	goto	L56
 12873  00B270                     
 12874                           ; BSR set to: 0
 12875                           ;display.c: 262: memcpy(display_content, dc_setup1, sizeof display_content);
 12876                           
 12877                           ; BSR set to: 0
 12878  00B270  0EAD               	movlw	low _display_content
 12879  00B272  6F60               	movwf	memcpy@d1& (0+255),b
 12880  00B274  0E01               	movlw	high _display_content
 12881  00B276  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12882  00B278  0E16               	movlw	low _dc_setup1
 12883  00B27A  6F62               	movwf	memcpy@s1& (0+255),b
 12884  00B27C  0EA0               	movlw	high _dc_setup1
 12885  00B27E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12886  00B280  0E00               	movlw	0
 12887  00B282  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12888  00B284  0E50               	movlw	80
 12889  00B286  6F64               	movwf	memcpy@n& (0+255),b
 12890  00B288  EC58  F076         	call	_memcpy	;wreg free
 12891                           
 12892                           ;display.c: 263: _display_itoa(os.setup_step_size, 2, temp);
 12893  00B28C  C0DC  F095         	movff	_os+16,__display_itoa@value	;volatile
 12894  00B290  C0DD  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 12895  00B294  0E02               	movlw	2
 12896  00B296  0100               	movlb	0	; () banked
 12897  00B298  6F97               	movwf	__display_itoa@decimals& (0+255),b
 12898  00B29A  0EBE               	movlw	low display_prepare@temp
 12899  00B29C  6F98               	movwf	__display_itoa@text& (0+255),b
 12900  00B29E  0E00               	movlw	high display_prepare@temp
 12901  00B2A0  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 12902  00B2A2  EC93  F063         	call	__display_itoa	;wreg free
 12903                           
 12904                           ;display.c: 264: if(os.setup_step_size>999)
 12905  00B2A6  0EE8               	movlw	232
 12906  00B2A8  0100               	movlb	0	; () banked
 12907  00B2AA  5DDC               	subwf	(_os+16)& (0+255),w,b	;volatile
 12908  00B2AC  0E03               	movlw	3
 12909  00B2AE  59DD               	subwfb	(_os+17)& (0+255),w,b	;volatile
 12910  00B2B0  A0D8               	btfss	status,0,c
 12911  00B2B2  D002               	goto	l1313
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;display.c: 265: space = 0;
 12915  00B2B4  0E00               	movlw	0
 12916  00B2B6  D001               	goto	L19
 12917  00B2B8                     l1313:
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;display.c: 266: else;display.c: 267: space = 1;
 12921                           
 12922                           ; BSR set to: 0
 12923  00B2B8  0E01               	movlw	1
 12924  00B2BA                     L19:
 12925  00B2BA  6FC8               	movwf	display_prepare@space& (0+255),b
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;display.c: 268: for(cntr=0; temp[cntr]; ++cntr)
 12929  00B2BC  0E00               	movlw	0
 12930  00B2BE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 12931  00B2C0  D018               	goto	l1315
 12932  00B2C2                     
 12933                           ; BSR set to: 0
 12934                           ;display.c: 269: {;display.c: 270: display_content[3][space+cntr] = temp[cntr];
 12935                           
 12936                           ; BSR set to: 0
 12937  00B2C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 12938  00B2C4  0D01               	mullw	1
 12939  00B2C6  0EBE               	movlw	low display_prepare@temp
 12940  00B2C8  24F3               	addwf	prodl,w,c
 12941  00B2CA  6ED9               	movwf	fsr2l,c
 12942  00B2CC  0E00               	movlw	high display_prepare@temp
 12943  00B2CE  20F4               	addwfc	prodh,w,c
 12944  00B2D0  6EDA               	movwf	fsr2h,c
 12945  00B2D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 12946  00B2D4  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 12947  00B2D8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 12948  00B2DA  27BC               	addwf	??_display_prepare& (0+255),f,b
 12949  00B2DC  0E00               	movlw	0
 12950  00B2DE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 12951  00B2E0  0EE9               	movlw	low (_display_content+60)
 12952  00B2E2  25BC               	addwf	??_display_prepare& (0+255),w,b
 12953  00B2E4  6EE1               	movwf	fsr1l,c
 12954  00B2E6  0E01               	movlw	high (_display_content+60)
 12955  00B2E8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 12956  00B2EA  6EE2               	movwf	fsr1h,c
 12957  00B2EC  CFDF FFE7          	movff	indf2,indf1
 12958                           
 12959                           ; BSR set to: 0
 12960  00B2F0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 12961  00B2F2                     l1315:
 12962                           
 12963                           ; BSR set to: 0
 12964                           
 12965                           ; BSR set to: 0
 12966  00B2F2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 12967  00B2F4  0D01               	mullw	1
 12968  00B2F6  0EBE               	movlw	low display_prepare@temp
 12969  00B2F8  24F3               	addwf	prodl,w,c
 12970  00B2FA  6ED9               	movwf	fsr2l,c
 12971  00B2FC  0E00               	movlw	high display_prepare@temp
 12972  00B2FE  20F4               	addwfc	prodh,w,c
 12973  00B300  6EDA               	movwf	fsr2h,c
 12974  00B302  50DF               	movf	indf2,w,c
 12975  00B304  A4D8               	btfss	status,2,c
 12976  00B306  D7DD               	goto	l1316
 12977                           
 12978                           ; BSR set to: 1
 12979                           
 12980                           ; BSR set to: 1
 12981                           ;display.c: 280: }
 12982                           
 12983                           ;display.c: 279: break;
 12984                           
 12985                           ;display.c: 278: display_content[3][12] = '>';
 12986                           
 12987                           ; BSR set to: 1
 12988                           
 12989                           ;display.c: 277: case DISPLAY_STATE_SETUP1_CANCEL:
 12990                           
 12991                           ;display.c: 276: break;
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;display.c: 275: display_content[2][12] = '>';
 12995                           
 12996                           ; BSR set to: 0
 12997                           
 12998                           ;display.c: 273: {;display.c: 274: case DISPLAY_STATE_SETUP1_CONFIRM:
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;display.c: 271: };display.c: 272: switch(os.displayState)
 13002  00B308  0100               	movlb	0	; () banked
 13003  00B30A  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 13004                           
 13005                           ; Switch size 1, requested type "space"
 13006                           ; Number of cases is 2, Range of values is 17 to 18
 13007                           ; switch strategies available:
 13008                           ; Name         Instructions Cycles
 13009                           ; simple_byte            7     4 (average)
 13010                           ;	Chosen strategy is simple_byte
 13011  00B30C  0A11               	xorlw	17	; case 17
 13012  00B30E  D08C               	goto	L25
 13013  00B310                     
 13014                           ; BSR set to: 0
 13015                           ;display.c: 284: memcpy(display_content, dc_setup2, sizeof display_content);
 13016                           
 13017                           ; BSR set to: 0
 13018  00B310  0EAD               	movlw	low _display_content
 13019  00B312  6F60               	movwf	memcpy@d1& (0+255),b
 13020  00B314  0E01               	movlw	high _display_content
 13021  00B316  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13022  00B318  0EC6               	movlw	low _dc_setup2
 13023  00B31A  6F62               	movwf	memcpy@s1& (0+255),b
 13024  00B31C  0E9F               	movlw	high _dc_setup2
 13025  00B31E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13026  00B320  0E00               	movlw	0
 13027  00B322  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13028  00B324  0E50               	movlw	80
 13029  00B326  6F64               	movwf	memcpy@n& (0+255),b
 13030  00B328  EC58  F076         	call	_memcpy	;wreg free
 13031                           
 13032                           ;display.c: 285: switch(os.displayState)
 13033  00B32C  D00A               	goto	l1323
 13034  00B32E                     l1324:
 13035                           
 13036                           ;display.c: 288: display_content[2][0] = '>';
 13037  00B32E  0E3E               	movlw	62
 13038  00B330  0101               	movlb	1	; () banked
 13039  00B332  6FD5               	movwf	(_display_content+40)& (0+255),b
 13040                           
 13041                           ;display.c: 289: break;
 13042  00B334  EF1D  F05F         	goto	l1311
 13043  00B338                     l1326:
 13044                           
 13045                           ;display.c: 291: display_content[3][0] = '>';
 13046                           
 13047                           ; BSR set to: 1
 13048  00B338  0E3E               	movlw	62
 13049  00B33A  0101               	movlb	1	; () banked
 13050  00B33C  6FE9               	movwf	(_display_content+60)& (0+255),b
 13051                           
 13052                           ; BSR set to: 1
 13053                           ;display.c: 293: }
 13054                           
 13055                           ;display.c: 292: break;
 13056  00B33E  EF1D  F05F         	goto	l1311
 13057  00B342                     l1323:
 13058                           
 13059                           ; BSR set to: 1
 13060  00B342  0100               	movlb	0	; () banked
 13061  00B344  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 13062                           
 13063                           ; Switch size 1, requested type "space"
 13064                           ; Number of cases is 2, Range of values is 33 to 34
 13065                           ; switch strategies available:
 13066                           ; Name         Instructions Cycles
 13067                           ; simple_byte            7     4 (average)
 13068                           ;	Chosen strategy is simple_byte
 13069  00B346  0A21               	xorlw	33	; case 33
 13070  00B348  B4D8               	btfsc	status,2,c
 13071  00B34A  D7F1               	goto	l1324
 13072  00B34C  0A03               	xorlw	3	; case 34
 13073  00B34E                     L56:
 13074  00B34E  B4D8               	btfsc	status,2,c
 13075  00B350  D7F3               	goto	l1326
 13076                           
 13077                           ; BSR set to: 0
 13078                           ;display.c: 294: break;
 13079  00B352  EF1D  F05F         	goto	l1311
 13080  00B356                     
 13081                           ; BSR set to: 0
 13082                           ;display.c: 297: memcpy(display_content, dc_divide1, sizeof display_content);
 13083                           
 13084                           ; BSR set to: 0
 13085  00B356  0EAD               	movlw	low _display_content
 13086  00B358  6F60               	movwf	memcpy@d1& (0+255),b
 13087  00B35A  0E01               	movlw	high _display_content
 13088  00B35C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13089  00B35E  0E76               	movlw	low _dc_divide1
 13090  00B360  6F62               	movwf	memcpy@s1& (0+255),b
 13091  00B362  0E9F               	movlw	high _dc_divide1
 13092  00B364  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13093  00B366  0E00               	movlw	0
 13094  00B368  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13095  00B36A  0E50               	movlw	80
 13096  00B36C  6F64               	movwf	memcpy@n& (0+255),b
 13097  00B36E  EC58  F076         	call	_memcpy	;wreg free
 13098                           
 13099                           ;display.c: 299: _display_padded_itoa(os.divide_step_size, 3, temp);
 13100  00B372  C0E1  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 13101  00B376  0100               	movlb	0	; () banked
 13102  00B378  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 13103  00B37A  0E03               	movlw	3
 13104  00B37C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 13105  00B37E  0EBE               	movlw	low display_prepare@temp
 13106  00B380  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 13107  00B382  0E00               	movlw	high display_prepare@temp
 13108  00B384  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 13109  00B386  ECF1  F06C         	call	__display_padded_itoa	;wreg free
 13110                           
 13111                           ;display.c: 300: for(cntr=0; cntr<3; ++cntr)
 13112  00B38A  0E00               	movlw	0
 13113  00B38C  0100               	movlb	0	; () banked
 13114  00B38E  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13115  00B390                     l18160:
 13116                           
 13117                           ; BSR set to: 0
 13118  00B390  0E02               	movlw	2
 13119  00B392  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 13120  00B394  D001               	goto	l1328
 13121  00B396  D014               	goto	u18990
 13122  00B398                     l1328:
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;display.c: 301: {;display.c: 302: display_content[2][cntr] = temp[cntr];
 13126                           
 13127                           ; BSR set to: 0
 13128  00B398  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13129  00B39A  0D01               	mullw	1
 13130  00B39C  0EBE               	movlw	low display_prepare@temp
 13131  00B39E  24F3               	addwf	prodl,w,c
 13132  00B3A0  6ED9               	movwf	fsr2l,c
 13133  00B3A2  0E00               	movlw	high display_prepare@temp
 13134  00B3A4  20F4               	addwfc	prodh,w,c
 13135  00B3A6  6EDA               	movwf	fsr2h,c
 13136  00B3A8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13137  00B3AA  0D01               	mullw	1
 13138  00B3AC  0ED5               	movlw	low (_display_content+40)
 13139  00B3AE  24F3               	addwf	prodl,w,c
 13140  00B3B0  6EE1               	movwf	fsr1l,c
 13141  00B3B2  0E01               	movlw	high (_display_content+40)
 13142  00B3B4  20F4               	addwfc	prodh,w,c
 13143  00B3B6  6EE2               	movwf	fsr1h,c
 13144  00B3B8  CFDF FFE7          	movff	indf2,indf1
 13145                           
 13146                           ; BSR set to: 0
 13147  00B3BC  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13148  00B3BE  D7E8               	goto	l18160
 13149  00B3C0                     u18990:
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;display.c: 303: };display.c: 305: _display_padded_itoa(os.division, 4, temp);
 13153                           
 13154                           ; BSR set to: 0
 13155  00B3C0  C0DF  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 13156  00B3C4  C0E0  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 13157  00B3C8  0E04               	movlw	4
 13158  00B3CA  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 13159  00B3CC  0EBE               	movlw	low display_prepare@temp
 13160  00B3CE  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 13161  00B3D0  0E00               	movlw	high display_prepare@temp
 13162  00B3D2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 13163  00B3D4  ECF1  F06C         	call	__display_padded_itoa	;wreg free
 13164                           
 13165                           ;display.c: 306: for(cntr=0; cntr<4; ++cntr)
 13166  00B3D8  0E00               	movlw	0
 13167  00B3DA  0100               	movlb	0	; () banked
 13168  00B3DC  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13169  00B3DE                     l18174:
 13170                           
 13171                           ; BSR set to: 0
 13172  00B3DE  0E03               	movlw	3
 13173  00B3E0  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 13174  00B3E2  D001               	goto	l1330
 13175  00B3E4  D01E               	goto	l1332
 13176  00B3E6                     l1330:
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;display.c: 307: {;display.c: 308: display_content[3][cntr] = temp[cntr];
 13180                           
 13181                           ; BSR set to: 0
 13182  00B3E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13183  00B3E8  0D01               	mullw	1
 13184  00B3EA  0EBE               	movlw	low display_prepare@temp
 13185  00B3EC  24F3               	addwf	prodl,w,c
 13186  00B3EE  6ED9               	movwf	fsr2l,c
 13187  00B3F0  0E00               	movlw	high display_prepare@temp
 13188  00B3F2  20F4               	addwfc	prodh,w,c
 13189  00B3F4  6EDA               	movwf	fsr2h,c
 13190  00B3F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13191  00B3F8  0D01               	mullw	1
 13192  00B3FA  0EE9               	movlw	low (_display_content+60)
 13193  00B3FC  24F3               	addwf	prodl,w,c
 13194  00B3FE  6EE1               	movwf	fsr1l,c
 13195  00B400  0E01               	movlw	high (_display_content+60)
 13196  00B402  20F4               	addwfc	prodh,w,c
 13197  00B404  6EE2               	movwf	fsr1h,c
 13198  00B406  CFDF FFE7          	movff	indf2,indf1
 13199                           
 13200                           ; BSR set to: 0
 13201  00B40A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13202  00B40C  D7E8               	goto	l18174
 13203  00B40E                     
 13204                           ; BSR set to: 0
 13205                           ;display.c: 313: display_content[2][12] = '>';
 13206                           
 13207                           ; BSR set to: 0
 13208  00B40E  0E3E               	movlw	62
 13209  00B410  0101               	movlb	1	; () banked
 13210  00B412  6FE1               	movwf	(_display_content+52)& (0+255),b
 13211                           
 13212                           ;display.c: 314: break;
 13213  00B414  EF1D  F05F         	goto	l1311
 13214  00B418                     
 13215                           ;display.c: 316: display_content[3][12] = '>';
 13216                           
 13217                           ; BSR set to: 1
 13218  00B418  0E3E               	movlw	62
 13219  00B41A  0101               	movlb	1	; () banked
 13220  00B41C  6FF5               	movwf	(_display_content+72)& (0+255),b
 13221                           
 13222                           ; BSR set to: 1
 13223                           ;display.c: 318: }
 13224                           
 13225                           ;display.c: 317: break;
 13226  00B41E  EF1D  F05F         	goto	l1311
 13227  00B422                     l1332:
 13228                           
 13229                           ; BSR set to: 1
 13230  00B422  0100               	movlb	0	; () banked
 13231  00B424  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 13232                           
 13233                           ; Switch size 1, requested type "space"
 13234                           ; Number of cases is 2, Range of values is 49 to 50
 13235                           ; switch strategies available:
 13236                           ; Name         Instructions Cycles
 13237                           ; simple_byte            7     4 (average)
 13238                           ;	Chosen strategy is simple_byte
 13239  00B426  0A31               	xorlw	49	; case 49
 13240  00B428                     L25:
 13241  00B428  B4D8               	btfsc	status,2,c
 13242  00B42A  D7F1               	goto	l1333
 13243  00B42C  0A03               	xorlw	3	; case 50
 13244  00B42E  B4D8               	btfsc	status,2,c
 13245  00B430  D7F3               	goto	l1335
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;display.c: 319: break;
 13249  00B432  EF1D  F05F         	goto	l1311
 13250  00B436                     
 13251                           ; BSR set to: 0
 13252                           ;display.c: 322: memcpy(display_content, dc_divide2, sizeof display_content);
 13253                           
 13254                           ; BSR set to: 0
 13255  00B436  0EAD               	movlw	low _display_content
 13256  00B438  6F60               	movwf	memcpy@d1& (0+255),b
 13257  00B43A  0E01               	movlw	high _display_content
 13258  00B43C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13259  00B43E  0E26               	movlw	low _dc_divide2
 13260  00B440  6F62               	movwf	memcpy@s1& (0+255),b
 13261  00B442  0E9F               	movlw	high _dc_divide2
 13262  00B444  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13263  00B446  0E00               	movlw	0
 13264  00B448  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13265  00B44A  0E50               	movlw	80
 13266  00B44C  6F64               	movwf	memcpy@n& (0+255),b
 13267  00B44E  EC58  F076         	call	_memcpy	;wreg free
 13268                           
 13269                           ;display.c: 324: _display_padded_itoa(os.division, 0, temp);
 13270  00B452  C0DF  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 13271  00B456  C0E0  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 13272  00B45A  0E00               	movlw	0
 13273  00B45C  0100               	movlb	0	; () banked
 13274  00B45E  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 13275  00B460  0EBE               	movlw	low display_prepare@temp
 13276  00B462  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 13277  00B464  0E00               	movlw	high display_prepare@temp
 13278  00B466  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 13279  00B468  ECF1  F06C         	call	__display_padded_itoa	;wreg free
 13280                           
 13281                           ;display.c: 325: for(cntr=0; temp[cntr]; ++cntr)
 13282  00B46C  0E00               	movlw	0
 13283  00B46E  0100               	movlb	0	; () banked
 13284  00B470  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13285  00B472  D018               	goto	l1337
 13286  00B474                     
 13287                           ; BSR set to: 0
 13288                           ;display.c: 326: {;display.c: 327: display_content[0][cntr+8] = temp[cntr];
 13289                           
 13290                           ; BSR set to: 0
 13291  00B474  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13292  00B476  0D01               	mullw	1
 13293  00B478  0EBE               	movlw	low display_prepare@temp
 13294  00B47A  24F3               	addwf	prodl,w,c
 13295  00B47C  6ED9               	movwf	fsr2l,c
 13296  00B47E  0E00               	movlw	high display_prepare@temp
 13297  00B480  20F4               	addwfc	prodh,w,c
 13298  00B482  6EDA               	movwf	fsr2h,c
 13299  00B484  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13300  00B486  6FBC               	movwf	??_display_prepare& (0+255),b
 13301  00B488  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13302  00B48A  0E08               	movlw	8
 13303  00B48C  27BC               	addwf	??_display_prepare& (0+255),f,b
 13304  00B48E  0E00               	movlw	0
 13305  00B490  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13306  00B492  0EAD               	movlw	low _display_content
 13307  00B494  25BC               	addwf	??_display_prepare& (0+255),w,b
 13308  00B496  6EE1               	movwf	fsr1l,c
 13309  00B498  0E01               	movlw	high _display_content
 13310  00B49A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13311  00B49C  6EE2               	movwf	fsr1h,c
 13312  00B49E  CFDF FFE7          	movff	indf2,indf1
 13313                           
 13314                           ; BSR set to: 0
 13315  00B4A2  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13316  00B4A4                     l1337:
 13317                           
 13318                           ; BSR set to: 0
 13319                           
 13320                           ; BSR set to: 0
 13321  00B4A4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13322  00B4A6  0D01               	mullw	1
 13323  00B4A8  0EBE               	movlw	low display_prepare@temp
 13324  00B4AA  24F3               	addwf	prodl,w,c
 13325  00B4AC  6ED9               	movwf	fsr2l,c
 13326  00B4AE  0E00               	movlw	high display_prepare@temp
 13327  00B4B0  20F4               	addwfc	prodh,w,c
 13328  00B4B2  6EDA               	movwf	fsr2h,c
 13329  00B4B4  50DF               	movf	indf2,w,c
 13330  00B4B6  A4D8               	btfss	status,2,c
 13331  00B4B8  D7DD               	goto	l1338
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;display.c: 328: };display.c: 330: display_content[0][cntr+8] = ',';
 13335                           
 13336                           ; BSR set to: 0
 13337  00B4BA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13338  00B4BC  6FBC               	movwf	??_display_prepare& (0+255),b
 13339  00B4BE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13340  00B4C0  0E08               	movlw	8
 13341  00B4C2  27BC               	addwf	??_display_prepare& (0+255),f,b
 13342  00B4C4  0E00               	movlw	0
 13343  00B4C6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13344  00B4C8  0EAD               	movlw	low _display_content
 13345  00B4CA  25BC               	addwf	??_display_prepare& (0+255),w,b
 13346  00B4CC  6ED9               	movwf	fsr2l,c
 13347  00B4CE  0E01               	movlw	high _display_content
 13348  00B4D0  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13349  00B4D2  6EDA               	movwf	fsr2h,c
 13350  00B4D4  0E2C               	movlw	44
 13351  00B4D6  6EDF               	movwf	indf2,c
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;display.c: 331: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 13355  00B4D8  29DE               	incf	(_os+18)& (0+255),w,b	;volatile
 13356  00B4DA  A4D8               	btfss	status,2,c
 13357  00B4DC  D023               	goto	l1340
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;display.c: 332: {;display.c: 333: display_content[0][cntr+10] = 'C';
 13361  00B4DE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13362  00B4E0  6FBC               	movwf	??_display_prepare& (0+255),b
 13363  00B4E2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13364  00B4E4  0E0A               	movlw	10
 13365  00B4E6  27BC               	addwf	??_display_prepare& (0+255),f,b
 13366  00B4E8  0E00               	movlw	0
 13367  00B4EA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13368  00B4EC  0EAD               	movlw	low _display_content
 13369  00B4EE  25BC               	addwf	??_display_prepare& (0+255),w,b
 13370  00B4F0  6ED9               	movwf	fsr2l,c
 13371  00B4F2  0E01               	movlw	high _display_content
 13372  00B4F4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13373  00B4F6  6EDA               	movwf	fsr2h,c
 13374  00B4F8  0E43               	movlw	67
 13375  00B4FA  6EDF               	movwf	indf2,c
 13376                           
 13377                           ;display.c: 334: display_content[0][cntr+11] = 'C';
 13378  00B4FC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13379  00B4FE  6FBC               	movwf	??_display_prepare& (0+255),b
 13380  00B500  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13381  00B502  0E0B               	movlw	11
 13382  00B504  27BC               	addwf	??_display_prepare& (0+255),f,b
 13383  00B506  0E00               	movlw	0
 13384  00B508  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13385  00B50A  0EAD               	movlw	low _display_content
 13386  00B50C  25BC               	addwf	??_display_prepare& (0+255),w,b
 13387  00B50E  6ED9               	movwf	fsr2l,c
 13388  00B510  0E01               	movlw	high _display_content
 13389  00B512  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13390  00B514  6EDA               	movwf	fsr2h,c
 13391  00B516  0E43               	movlw	67
 13392  00B518  6EDF               	movwf	indf2,c
 13393                           
 13394                           ;display.c: 335: display_content[0][cntr+12] = 'W';
 13395  00B51A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13396  00B51C  6FBC               	movwf	??_display_prepare& (0+255),b
 13397  00B51E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13398  00B520  0E0C               	movlw	12
 13399  00B522  D013               	goto	L26
 13400  00B524                     l1340:
 13401                           
 13402                           ; BSR set to: 0
 13403                           ;display.c: 337: else;display.c: 338: {;display.c: 339: display_content[0][cntr+10] = 'C
      +                          ';
 13404                           
 13405                           ; BSR set to: 0
 13406  00B524  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13407  00B526  6FBC               	movwf	??_display_prepare& (0+255),b
 13408  00B528  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13409  00B52A  0E0A               	movlw	10
 13410  00B52C  27BC               	addwf	??_display_prepare& (0+255),f,b
 13411  00B52E  0E00               	movlw	0
 13412  00B530  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13413  00B532  0EAD               	movlw	low _display_content
 13414  00B534  25BC               	addwf	??_display_prepare& (0+255),w,b
 13415  00B536  6ED9               	movwf	fsr2l,c
 13416  00B538  0E01               	movlw	high _display_content
 13417  00B53A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13418  00B53C  6EDA               	movwf	fsr2h,c
 13419  00B53E  0E43               	movlw	67
 13420  00B540  6EDF               	movwf	indf2,c
 13421                           
 13422                           ;display.c: 340: display_content[0][cntr+11] = 'W';
 13423  00B542  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13424  00B544  6FBC               	movwf	??_display_prepare& (0+255),b
 13425  00B546  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13426  00B548  0E0B               	movlw	11
 13427  00B54A                     L26:
 13428  00B54A  27BC               	addwf	??_display_prepare& (0+255),f,b
 13429  00B54C  0E00               	movlw	0
 13430  00B54E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13431  00B550  0EAD               	movlw	low _display_content
 13432  00B552  25BC               	addwf	??_display_prepare& (0+255),w,b
 13433  00B554  6ED9               	movwf	fsr2l,c
 13434  00B556  0E01               	movlw	high _display_content
 13435  00B558  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13436  00B55A  6EDA               	movwf	fsr2h,c
 13437  00B55C  0E57               	movlw	87
 13438  00B55E  6EDF               	movwf	indf2,c
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;display.c: 341: };display.c: 343: _display_padded_itoa(os.divide_position, 0, temp);
 13442                           
 13443                           ; BSR set to: 0
 13444  00B560  C0E2  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 13445  00B564  C0E3  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 13446  00B568  0E00               	movlw	0
 13447  00B56A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 13448  00B56C  0EBE               	movlw	low display_prepare@temp
 13449  00B56E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 13450  00B570  0E00               	movlw	high display_prepare@temp
 13451  00B572  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 13452  00B574  ECF1  F06C         	call	__display_padded_itoa	;wreg free
 13453                           
 13454                           ;display.c: 344: for(cntr=0; temp[cntr]; ++cntr)
 13455  00B578  0E00               	movlw	0
 13456  00B57A  0100               	movlb	0	; () banked
 13457  00B57C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13458  00B57E  D018               	goto	l1342
 13459  00B580                     
 13460                           ; BSR set to: 0
 13461                           ;display.c: 345: {;display.c: 346: display_content[1][cntr+5] = temp[cntr];
 13462                           
 13463                           ; BSR set to: 0
 13464  00B580  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13465  00B582  0D01               	mullw	1
 13466  00B584  0EBE               	movlw	low display_prepare@temp
 13467  00B586  24F3               	addwf	prodl,w,c
 13468  00B588  6ED9               	movwf	fsr2l,c
 13469  00B58A  0E00               	movlw	high display_prepare@temp
 13470  00B58C  20F4               	addwfc	prodh,w,c
 13471  00B58E  6EDA               	movwf	fsr2h,c
 13472  00B590  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13473  00B592  6FBC               	movwf	??_display_prepare& (0+255),b
 13474  00B594  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13475  00B596  0E05               	movlw	5
 13476  00B598  27BC               	addwf	??_display_prepare& (0+255),f,b
 13477  00B59A  0E00               	movlw	0
 13478  00B59C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13479  00B59E  0EC1               	movlw	low (_display_content+20)
 13480  00B5A0  25BC               	addwf	??_display_prepare& (0+255),w,b
 13481  00B5A2  6EE1               	movwf	fsr1l,c
 13482  00B5A4  0E01               	movlw	high (_display_content+20)
 13483  00B5A6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13484  00B5A8  6EE2               	movwf	fsr1h,c
 13485  00B5AA  CFDF FFE7          	movff	indf2,indf1
 13486                           
 13487                           ; BSR set to: 0
 13488  00B5AE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13489  00B5B0                     l1342:
 13490                           
 13491                           ; BSR set to: 0
 13492                           
 13493                           ; BSR set to: 0
 13494  00B5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13495  00B5B2  0D01               	mullw	1
 13496  00B5B4  0EBE               	movlw	low display_prepare@temp
 13497  00B5B6  24F3               	addwf	prodl,w,c
 13498  00B5B8  6ED9               	movwf	fsr2l,c
 13499  00B5BA  0E00               	movlw	high display_prepare@temp
 13500  00B5BC  20F4               	addwfc	prodh,w,c
 13501  00B5BE  6EDA               	movwf	fsr2h,c
 13502  00B5C0  50DF               	movf	indf2,w,c
 13503  00B5C2  A4D8               	btfss	status,2,c
 13504  00B5C4  D7DD               	goto	l1343
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;display.c: 347: };display.c: 349: display_content[1][cntr+6] = '(';
 13508                           
 13509                           ; BSR set to: 0
 13510  00B5C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13511  00B5C8  6FBC               	movwf	??_display_prepare& (0+255),b
 13512  00B5CA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13513  00B5CC  0E06               	movlw	6
 13514  00B5CE  27BC               	addwf	??_display_prepare& (0+255),f,b
 13515  00B5D0  0E00               	movlw	0
 13516  00B5D2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13517  00B5D4  0EC1               	movlw	low (_display_content+20)
 13518  00B5D6  25BC               	addwf	??_display_prepare& (0+255),w,b
 13519  00B5D8  6ED9               	movwf	fsr2l,c
 13520  00B5DA  0E01               	movlw	high (_display_content+20)
 13521  00B5DC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13522  00B5DE  6EDA               	movwf	fsr2h,c
 13523  00B5E0  0E28               	movlw	40
 13524  00B5E2  6EDF               	movwf	indf2,c
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;display.c: 350: space = cntr + 7;
 13528  00B5E4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13529  00B5E6  0F07               	addlw	7
 13530  00B5E8  6FC8               	movwf	display_prepare@space& (0+255),b
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;display.c: 351: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 13534  00B5EA  C0D7  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 13535  00B5EE  C0D8  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 13536  00B5F2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 13537  00B5F4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 13538  00B5F6  0E02               	movlw	2
 13539  00B5F8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 13540  00B5FA  0EBE               	movlw	low display_prepare@temp
 13541  00B5FC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 13542  00B5FE  0E00               	movlw	high display_prepare@temp
 13543  00B600  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 13544  00B602  ECDF  F069         	call	__display_itoa_long	;wreg free
 13545                           
 13546                           ;display.c: 352: for(cntr=0; temp[cntr]; ++cntr)
 13547  00B606  0E00               	movlw	0
 13548  00B608  0100               	movlb	0	; () banked
 13549  00B60A  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13550  00B60C  D018               	goto	l1345
 13551  00B60E                     
 13552                           ; BSR set to: 0
 13553                           ;display.c: 353: {;display.c: 354: display_content[1][cntr+space] = temp[cntr];
 13554                           
 13555                           ; BSR set to: 0
 13556  00B60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13557  00B610  0D01               	mullw	1
 13558  00B612  0EBE               	movlw	low display_prepare@temp
 13559  00B614  24F3               	addwf	prodl,w,c
 13560  00B616  6ED9               	movwf	fsr2l,c
 13561  00B618  0E00               	movlw	high display_prepare@temp
 13562  00B61A  20F4               	addwfc	prodh,w,c
 13563  00B61C  6EDA               	movwf	fsr2h,c
 13564  00B61E  51C8               	movf	display_prepare@space& (0+255),w,b
 13565  00B620  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 13566  00B624  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13567  00B626  27BC               	addwf	??_display_prepare& (0+255),f,b
 13568  00B628  0E00               	movlw	0
 13569  00B62A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13570  00B62C  0EC1               	movlw	low (_display_content+20)
 13571  00B62E  25BC               	addwf	??_display_prepare& (0+255),w,b
 13572  00B630  6EE1               	movwf	fsr1l,c
 13573  00B632  0E01               	movlw	high (_display_content+20)
 13574  00B634  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13575  00B636  6EE2               	movwf	fsr1h,c
 13576  00B638  CFDF FFE7          	movff	indf2,indf1
 13577                           
 13578                           ; BSR set to: 0
 13579  00B63C  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13580  00B63E                     l1345:
 13581                           
 13582                           ; BSR set to: 0
 13583                           
 13584                           ; BSR set to: 0
 13585  00B63E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13586  00B640  0D01               	mullw	1
 13587  00B642  0EBE               	movlw	low display_prepare@temp
 13588  00B644  24F3               	addwf	prodl,w,c
 13589  00B646  6ED9               	movwf	fsr2l,c
 13590  00B648  0E00               	movlw	high display_prepare@temp
 13591  00B64A  20F4               	addwfc	prodh,w,c
 13592  00B64C  6EDA               	movwf	fsr2h,c
 13593  00B64E  50DF               	movf	indf2,w,c
 13594  00B650  A4D8               	btfss	status,2,c
 13595  00B652  D7DD               	goto	l1346
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;display.c: 355: };display.c: 356: display_content[1][cntr+space] = 0x01;
 13599                           
 13600                           ; BSR set to: 0
 13601  00B654  51C8               	movf	display_prepare@space& (0+255),w,b
 13602  00B656  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 13603  00B65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13604  00B65C  27BC               	addwf	??_display_prepare& (0+255),f,b
 13605  00B65E  0E00               	movlw	0
 13606  00B660  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13607  00B662  0EC1               	movlw	low (_display_content+20)
 13608  00B664  25BC               	addwf	??_display_prepare& (0+255),w,b
 13609  00B666  6ED9               	movwf	fsr2l,c
 13610  00B668  0E01               	movlw	high (_display_content+20)
 13611  00B66A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13612  00B66C  6EDA               	movwf	fsr2h,c
 13613  00B66E  0E01               	movlw	1
 13614  00B670  6EDF               	movwf	indf2,c
 13615                           
 13616                           ;display.c: 357: display_content[1][cntr+space+1] = ')';
 13617  00B672  51C8               	movf	display_prepare@space& (0+255),w,b
 13618  00B674  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 13619  00B678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13620  00B67A  27BC               	addwf	??_display_prepare& (0+255),f,b
 13621  00B67C  0E00               	movlw	0
 13622  00B67E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13623  00B680  0E01               	movlw	1
 13624  00B682  27BC               	addwf	??_display_prepare& (0+255),f,b
 13625  00B684  0E00               	movlw	0
 13626  00B686  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13627  00B688  0EC1               	movlw	low (_display_content+20)
 13628  00B68A  25BC               	addwf	??_display_prepare& (0+255),w,b
 13629  00B68C  6ED9               	movwf	fsr2l,c
 13630  00B68E  0E01               	movlw	high (_display_content+20)
 13631  00B690  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13632  00B692  6EDA               	movwf	fsr2h,c
 13633  00B694  0E29               	movlw	41
 13634  00B696  6EDF               	movwf	indf2,c
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;display.c: 359: _display_signed_itoa(os.divide_jump_size, temp);
 13638  00B698  C0E4  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 13639  00B69C  C0E5  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 13640  00B6A0  0EBE               	movlw	low display_prepare@temp
 13641  00B6A2  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 13642  00B6A4  0E00               	movlw	high display_prepare@temp
 13643  00B6A6  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 13644  00B6A8  ECD3  F078         	call	__display_signed_itoa	;wreg free
 13645                           
 13646                           ;display.c: 360: for(cntr=0; temp[cntr]; ++cntr)
 13647  00B6AC  0E00               	movlw	0
 13648  00B6AE  0100               	movlb	0	; () banked
 13649  00B6B0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13650  00B6B2  D018               	goto	l1348
 13651  00B6B4                     
 13652                           ; BSR set to: 0
 13653                           ;display.c: 361: {;display.c: 362: display_content[2][cntr+11] = temp[cntr];
 13654                           
 13655                           ; BSR set to: 0
 13656  00B6B4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13657  00B6B6  0D01               	mullw	1
 13658  00B6B8  0EBE               	movlw	low display_prepare@temp
 13659  00B6BA  24F3               	addwf	prodl,w,c
 13660  00B6BC  6ED9               	movwf	fsr2l,c
 13661  00B6BE  0E00               	movlw	high display_prepare@temp
 13662  00B6C0  20F4               	addwfc	prodh,w,c
 13663  00B6C2  6EDA               	movwf	fsr2h,c
 13664  00B6C4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13665  00B6C6  6FBC               	movwf	??_display_prepare& (0+255),b
 13666  00B6C8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13667  00B6CA  0E0B               	movlw	11
 13668  00B6CC  27BC               	addwf	??_display_prepare& (0+255),f,b
 13669  00B6CE  0E00               	movlw	0
 13670  00B6D0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13671  00B6D2  0ED5               	movlw	low (_display_content+40)
 13672  00B6D4  25BC               	addwf	??_display_prepare& (0+255),w,b
 13673  00B6D6  6EE1               	movwf	fsr1l,c
 13674  00B6D8  0E01               	movlw	high (_display_content+40)
 13675  00B6DA  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13676  00B6DC  6EE2               	movwf	fsr1h,c
 13677  00B6DE  CFDF FFE7          	movff	indf2,indf1
 13678                           
 13679                           ; BSR set to: 0
 13680  00B6E2  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13681  00B6E4                     l1348:
 13682                           
 13683                           ; BSR set to: 0
 13684                           
 13685                           ; BSR set to: 0
 13686  00B6E4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13687  00B6E6  0D01               	mullw	1
 13688  00B6E8  0EBE               	movlw	low display_prepare@temp
 13689  00B6EA  24F3               	addwf	prodl,w,c
 13690  00B6EC  6ED9               	movwf	fsr2l,c
 13691  00B6EE  0E00               	movlw	high display_prepare@temp
 13692  00B6F0  20F4               	addwfc	prodh,w,c
 13693  00B6F2  6EDA               	movwf	fsr2h,c
 13694  00B6F4  50DF               	movf	indf2,w,c
 13695  00B6F6  B4D8               	btfsc	status,2,c
 13696  00B6F8  D3A0               	goto	l1311
 13697  00B6FA  D7DC               	goto	l1349
 13698  00B6FC                     
 13699                           ; BSR set to: 0
 13700                           ;display.c: 367: memcpy(display_content, dc_arc1, sizeof display_content);
 13701                           
 13702                           ; BSR set to: 0
 13703  00B6FC  0EAD               	movlw	low _display_content
 13704  00B6FE  6F60               	movwf	memcpy@d1& (0+255),b
 13705  00B700  0E01               	movlw	high _display_content
 13706  00B702  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13707  00B704  0ED6               	movlw	low _dc_arc1
 13708  00B706  6F62               	movwf	memcpy@s1& (0+255),b
 13709  00B708  0E9E               	movlw	high _dc_arc1
 13710  00B70A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13711  00B70C  0E00               	movlw	0
 13712  00B70E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13713  00B710  0E50               	movlw	80
 13714  00B712  6F64               	movwf	memcpy@n& (0+255),b
 13715  00B714  EC58  F076         	call	_memcpy	;wreg free
 13716                           
 13717                           ;display.c: 368: switch(os.displayState)
 13718  00B718  D008               	goto	l1352
 13719  00B71A                     
 13720                           ;display.c: 371: display_content[2][12] = '>';
 13721  00B71A  0E3E               	movlw	62
 13722  00B71C  0101               	movlb	1	; () banked
 13723  00B71E  6FE1               	movwf	(_display_content+52)& (0+255),b
 13724                           
 13725                           ;display.c: 372: break;
 13726  00B720  D00C               	goto	l1354
 13727  00B722                     
 13728                           ;display.c: 374: display_content[3][12] = '>';
 13729                           
 13730                           ; BSR set to: 1
 13731  00B722  0E3E               	movlw	62
 13732  00B724  0101               	movlb	1	; () banked
 13733  00B726  6FF5               	movwf	(_display_content+72)& (0+255),b
 13734                           
 13735                           ; BSR set to: 1
 13736                           ;display.c: 376: }
 13737                           
 13738                           ;display.c: 375: break;
 13739  00B728  D008               	goto	l1354
 13740  00B72A                     l1352:
 13741                           
 13742                           ; BSR set to: 1
 13743  00B72A  0100               	movlb	0	; () banked
 13744  00B72C  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 13745                           
 13746                           ; Switch size 1, requested type "space"
 13747                           ; Number of cases is 2, Range of values is 81 to 82
 13748                           ; switch strategies available:
 13749                           ; Name         Instructions Cycles
 13750                           ; simple_byte            7     4 (average)
 13751                           ;	Chosen strategy is simple_byte
 13752  00B72E  0A51               	xorlw	81	; case 81
 13753  00B730  B4D8               	btfsc	status,2,c
 13754  00B732  D7F3               	goto	l1353
 13755  00B734  0A03               	xorlw	3	; case 82
 13756  00B736  B4D8               	btfsc	status,2,c
 13757  00B738  D7F4               	goto	l1355
 13758  00B73A                     l1354:
 13759                           
 13760                           ;display.c: 379: _display_itoa_long(os.arc_size, 2, temp);
 13761                           
 13762                           ; BSR set to: 0
 13763  00B73A  C0E8  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 13764  00B73E  C0E9  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 13765  00B742  C0EA  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 13766  00B746  C0EB  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 13767  00B74A  0E02               	movlw	2
 13768  00B74C  0100               	movlb	0	; () banked
 13769  00B74E  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 13770  00B750  0EBE               	movlw	low display_prepare@temp
 13771  00B752  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 13772  00B754  0E00               	movlw	high display_prepare@temp
 13773  00B756  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 13774  00B758  ECDF  F069         	call	__display_itoa_long	;wreg free
 13775                           
 13776                           ;display.c: 380: for(cntr=0; temp[cntr]; ++cntr)
 13777  00B75C  0E00               	movlw	0
 13778  00B75E  0100               	movlb	0	; () banked
 13779  00B760  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13780  00B762  D018               	goto	l1356
 13781  00B764                     
 13782                           ; BSR set to: 0
 13783                           ;display.c: 381: {;display.c: 382: display_content[1][10+cntr] = temp[cntr];
 13784                           
 13785                           ; BSR set to: 0
 13786  00B764  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13787  00B766  0D01               	mullw	1
 13788  00B768  0EBE               	movlw	low display_prepare@temp
 13789  00B76A  24F3               	addwf	prodl,w,c
 13790  00B76C  6ED9               	movwf	fsr2l,c
 13791  00B76E  0E00               	movlw	high display_prepare@temp
 13792  00B770  20F4               	addwfc	prodh,w,c
 13793  00B772  6EDA               	movwf	fsr2h,c
 13794  00B774  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13795  00B776  6FBC               	movwf	??_display_prepare& (0+255),b
 13796  00B778  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13797  00B77A  0E0A               	movlw	10
 13798  00B77C  27BC               	addwf	??_display_prepare& (0+255),f,b
 13799  00B77E  0E00               	movlw	0
 13800  00B780  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13801  00B782  0EC1               	movlw	low (_display_content+20)
 13802  00B784  25BC               	addwf	??_display_prepare& (0+255),w,b
 13803  00B786  6EE1               	movwf	fsr1l,c
 13804  00B788  0E01               	movlw	high (_display_content+20)
 13805  00B78A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13806  00B78C  6EE2               	movwf	fsr1h,c
 13807  00B78E  CFDF FFE7          	movff	indf2,indf1
 13808                           
 13809                           ; BSR set to: 0
 13810  00B792  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13811  00B794                     l1356:
 13812                           
 13813                           ; BSR set to: 0
 13814                           
 13815                           ; BSR set to: 0
 13816  00B794  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13817  00B796  0D01               	mullw	1
 13818  00B798  0EBE               	movlw	low display_prepare@temp
 13819  00B79A  24F3               	addwf	prodl,w,c
 13820  00B79C  6ED9               	movwf	fsr2l,c
 13821  00B79E  0E00               	movlw	high display_prepare@temp
 13822  00B7A0  20F4               	addwfc	prodh,w,c
 13823  00B7A2  6EDA               	movwf	fsr2h,c
 13824  00B7A4  50DF               	movf	indf2,w,c
 13825  00B7A6  A4D8               	btfss	status,2,c
 13826  00B7A8  D7DD               	goto	l1357
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;display.c: 383: };display.c: 384: display_content[1][10+cntr] = 0x01;
 13830                           
 13831                           ; BSR set to: 0
 13832  00B7AA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13833  00B7AC  6FBC               	movwf	??_display_prepare& (0+255),b
 13834  00B7AE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13835  00B7B0  0E0A               	movlw	10
 13836  00B7B2  27BC               	addwf	??_display_prepare& (0+255),f,b
 13837  00B7B4  0E00               	movlw	0
 13838  00B7B6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13839  00B7B8  0EC1               	movlw	low (_display_content+20)
 13840  00B7BA  25BC               	addwf	??_display_prepare& (0+255),w,b
 13841  00B7BC  6ED9               	movwf	fsr2l,c
 13842  00B7BE  0E01               	movlw	high (_display_content+20)
 13843  00B7C0  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13844  00B7C2  6EDA               	movwf	fsr2h,c
 13845  00B7C4  0E01               	movlw	1
 13846  00B7C6  6EDF               	movwf	indf2,c
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;display.c: 387: _display_itoa(os.arc_step_size, 2, temp);
 13850  00B7C8  C0E6  F095         	movff	_os+26,__display_itoa@value	;volatile
 13851  00B7CC  C0E7  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 13852  00B7D0  0E02               	movlw	2
 13853  00B7D2  6F97               	movwf	__display_itoa@decimals& (0+255),b
 13854  00B7D4  0EBE               	movlw	low display_prepare@temp
 13855  00B7D6  6F98               	movwf	__display_itoa@text& (0+255),b
 13856  00B7D8  0E00               	movlw	high display_prepare@temp
 13857  00B7DA  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 13858  00B7DC  EC93  F063         	call	__display_itoa	;wreg free
 13859                           
 13860                           ;display.c: 388: if(os.arc_step_size>999)
 13861  00B7E0  0EE8               	movlw	232
 13862  00B7E2  0100               	movlb	0	; () banked
 13863  00B7E4  5DE6               	subwf	(_os+26)& (0+255),w,b	;volatile
 13864  00B7E6  0E03               	movlw	3
 13865  00B7E8  59E7               	subwfb	(_os+27)& (0+255),w,b	;volatile
 13866  00B7EA  A0D8               	btfss	status,0,c
 13867  00B7EC  D002               	goto	l1359
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;display.c: 389: space = 0;
 13871  00B7EE  0E00               	movlw	0
 13872  00B7F0  D001               	goto	L20
 13873  00B7F2                     l1359:
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;display.c: 390: else;display.c: 391: space = 1;
 13877                           
 13878                           ; BSR set to: 0
 13879  00B7F2  0E01               	movlw	1
 13880  00B7F4                     L20:
 13881  00B7F4  6FC8               	movwf	display_prepare@space& (0+255),b
 13882                           
 13883                           ; BSR set to: 0
 13884                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 13885  00B7F6  0E00               	movlw	0
 13886  00B7F8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 13887  00B7FA  D018               	goto	l1361
 13888  00B7FC                     
 13889                           ; BSR set to: 0
 13890                           ;display.c: 393: {;display.c: 394: display_content[3][space+cntr] = temp[cntr];
 13891                           
 13892                           ; BSR set to: 0
 13893  00B7FC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13894  00B7FE  0D01               	mullw	1
 13895  00B800  0EBE               	movlw	low display_prepare@temp
 13896  00B802  24F3               	addwf	prodl,w,c
 13897  00B804  6ED9               	movwf	fsr2l,c
 13898  00B806  0E00               	movlw	high display_prepare@temp
 13899  00B808  20F4               	addwfc	prodh,w,c
 13900  00B80A  6EDA               	movwf	fsr2h,c
 13901  00B80C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13902  00B80E  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 13903  00B812  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13904  00B814  27BC               	addwf	??_display_prepare& (0+255),f,b
 13905  00B816  0E00               	movlw	0
 13906  00B818  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13907  00B81A  0EE9               	movlw	low (_display_content+60)
 13908  00B81C  25BC               	addwf	??_display_prepare& (0+255),w,b
 13909  00B81E  6EE1               	movwf	fsr1l,c
 13910  00B820  0E01               	movlw	high (_display_content+60)
 13911  00B822  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13912  00B824  6EE2               	movwf	fsr1h,c
 13913  00B826  CFDF FFE7          	movff	indf2,indf1
 13914                           
 13915                           ; BSR set to: 0
 13916  00B82A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 13917  00B82C                     l1361:
 13918                           
 13919                           ; BSR set to: 0
 13920                           
 13921                           ; BSR set to: 0
 13922  00B82C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13923  00B82E  0D01               	mullw	1
 13924  00B830  0EBE               	movlw	low display_prepare@temp
 13925  00B832  24F3               	addwf	prodl,w,c
 13926  00B834  6ED9               	movwf	fsr2l,c
 13927  00B836  0E00               	movlw	high display_prepare@temp
 13928  00B838  20F4               	addwfc	prodh,w,c
 13929  00B83A  6EDA               	movwf	fsr2h,c
 13930  00B83C  50DF               	movf	indf2,w,c
 13931  00B83E  A4D8               	btfss	status,2,c
 13932  00B840  D7DD               	goto	l1362
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;display.c: 395: };display.c: 396: display_content[3][space+cntr] = 0x01 ;
 13936                           
 13937                           ; BSR set to: 0
 13938  00B842  51C9               	movf	display_prepare@cntr& (0+255),w,b
 13939  00B844  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 13940  00B848  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 13941  00B84A  27BC               	addwf	??_display_prepare& (0+255),f,b
 13942  00B84C  0E00               	movlw	0
 13943  00B84E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 13944  00B850  0EE9               	movlw	low (_display_content+60)
 13945  00B852  25BC               	addwf	??_display_prepare& (0+255),w,b
 13946  00B854  6ED9               	movwf	fsr2l,c
 13947  00B856  0E01               	movlw	high (_display_content+60)
 13948  00B858  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 13949  00B85A  6EDA               	movwf	fsr2h,c
 13950  00B85C  0E01               	movlw	1
 13951  00B85E  D25B               	goto	L23
 13952  00B860                     
 13953                           ; BSR set to: 0
 13954                           ;display.c: 401: memcpy(display_content, dc_arc2, sizeof display_content);
 13955                           
 13956                           ; BSR set to: 0
 13957  00B860  0EAD               	movlw	low _display_content
 13958  00B862  6F60               	movwf	memcpy@d1& (0+255),b
 13959  00B864  0E01               	movlw	high _display_content
 13960  00B866  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13961  00B868  0E86               	movlw	low _dc_arc2
 13962  00B86A  6F62               	movwf	memcpy@s1& (0+255),b
 13963  00B86C  0E9E               	movlw	high _dc_arc2
 13964  00B86E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13965  00B870  0E00               	movlw	0
 13966  00B872  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13967  00B874  0E50               	movlw	80
 13968  00B876  6F64               	movwf	memcpy@n& (0+255),b
 13969  00B878  EC58  F076         	call	_memcpy	;wreg free
 13970                           
 13971                           ;display.c: 402: switch(os.displayState)
 13972  00B87C  D025               	goto	l1365
 13973  00B87E                     
 13974                           ;display.c: 405: display_content[2][6] = 'W';
 13975  00B87E  0E57               	movlw	87
 13976  00B880  0101               	movlb	1	; () banked
 13977  00B882  6FDB               	movwf	(_display_content+46)& (0+255),b
 13978                           
 13979                           ;display.c: 406: display_content[2][7] = ' ';
 13980  00B884  0E20               	movlw	32
 13981  00B886  6FDC               	movwf	(_display_content+47)& (0+255),b
 13982                           
 13983                           ;display.c: 407: break;
 13984  00B888  D027               	goto	l1367
 13985  00B88A                     
 13986                           ;display.c: 409: memcpy(display_content[2], "        ", 8);
 13987                           
 13988                           ; BSR set to: 1
 13989  00B88A  0ED5               	movlw	low (_display_content+40)
 13990  00B88C  0100               	movlb	0	; () banked
 13991  00B88E  6F60               	movwf	memcpy@d1& (0+255),b
 13992  00B890  0E01               	movlw	high (_display_content+40)
 13993  00B892  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13994  00B894  0E14               	movlw	low STR_1
 13995  00B896  6F62               	movwf	memcpy@s1& (0+255),b
 13996  00B898  0EA2               	movlw	high STR_1
 13997  00B89A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13998  00B89C  0E00               	movlw	0
 13999  00B89E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14000  00B8A0  0E08               	movlw	8
 14001  00B8A2  6F64               	movwf	memcpy@n& (0+255),b
 14002  00B8A4  EC58  F076         	call	_memcpy	;wreg free
 14003                           
 14004                           ;display.c: 410: memcpy(display_content[3], "Cancel", 6);
 14005  00B8A8  0EE9               	movlw	low (_display_content+60)
 14006  00B8AA  0100               	movlb	0	; () banked
 14007  00B8AC  6F60               	movwf	memcpy@d1& (0+255),b
 14008  00B8AE  0E01               	movlw	high (_display_content+60)
 14009  00B8B0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14010  00B8B2  0E1D               	movlw	low STR_2
 14011  00B8B4  6F62               	movwf	memcpy@s1& (0+255),b
 14012  00B8B6  0EA2               	movlw	high STR_2
 14013  00B8B8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14014  00B8BA  0E00               	movlw	0
 14015  00B8BC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14016  00B8BE  0E06               	movlw	6
 14017  00B8C0  6F64               	movwf	memcpy@n& (0+255),b
 14018  00B8C2  EC58  F076         	call	_memcpy	;wreg free
 14019                           
 14020                           ;display.c: 412: }
 14021                           
 14022                           ;display.c: 411: break;
 14023  00B8C6  D008               	goto	l1367
 14024  00B8C8                     l1365:
 14025  00B8C8  0100               	movlb	0	; () banked
 14026  00B8CA  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 14027                           
 14028                           ; Switch size 1, requested type "space"
 14029                           ; Number of cases is 2, Range of values is 98 to 99
 14030                           ; switch strategies available:
 14031                           ; Name         Instructions Cycles
 14032                           ; simple_byte            7     4 (average)
 14033                           ;	Chosen strategy is simple_byte
 14034  00B8CC  0A62               	xorlw	98	; case 98
 14035  00B8CE  B4D8               	btfsc	status,2,c
 14036  00B8D0  D7DC               	goto	l1368
 14037  00B8D2  0A01               	xorlw	1	; case 99
 14038  00B8D4  B4D8               	btfsc	status,2,c
 14039  00B8D6  D7D3               	goto	l1366
 14040  00B8D8                     l1367:
 14041                           
 14042                           ;display.c: 415: _display_itoa_long(os.arc_size, 2, temp);
 14043                           
 14044                           ; BSR set to: 0
 14045  00B8D8  C0E8  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 14046  00B8DC  C0E9  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 14047  00B8E0  C0EA  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 14048  00B8E4  C0EB  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 14049  00B8E8  0E02               	movlw	2
 14050  00B8EA  0100               	movlb	0	; () banked
 14051  00B8EC  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14052  00B8EE  0EBE               	movlw	low display_prepare@temp
 14053  00B8F0  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14054  00B8F2  0E00               	movlw	high display_prepare@temp
 14055  00B8F4  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14056  00B8F6  ECDF  F069         	call	__display_itoa_long	;wreg free
 14057                           
 14058                           ;display.c: 416: for(cntr=0; temp[cntr]; ++cntr)
 14059  00B8FA  0E00               	movlw	0
 14060  00B8FC  0100               	movlb	0	; () banked
 14061  00B8FE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14062  00B900  D018               	goto	l1369
 14063  00B902                     
 14064                           ; BSR set to: 0
 14065                           ;display.c: 417: {;display.c: 418: display_content[0][10+cntr] = temp[cntr];
 14066                           
 14067                           ; BSR set to: 0
 14068  00B902  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14069  00B904  0D01               	mullw	1
 14070  00B906  0EBE               	movlw	low display_prepare@temp
 14071  00B908  24F3               	addwf	prodl,w,c
 14072  00B90A  6ED9               	movwf	fsr2l,c
 14073  00B90C  0E00               	movlw	high display_prepare@temp
 14074  00B90E  20F4               	addwfc	prodh,w,c
 14075  00B910  6EDA               	movwf	fsr2h,c
 14076  00B912  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14077  00B914  6FBC               	movwf	??_display_prepare& (0+255),b
 14078  00B916  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14079  00B918  0E0A               	movlw	10
 14080  00B91A  27BC               	addwf	??_display_prepare& (0+255),f,b
 14081  00B91C  0E00               	movlw	0
 14082  00B91E  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14083  00B920  0EAD               	movlw	low _display_content
 14084  00B922  25BC               	addwf	??_display_prepare& (0+255),w,b
 14085  00B924  6EE1               	movwf	fsr1l,c
 14086  00B926  0E01               	movlw	high _display_content
 14087  00B928  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14088  00B92A  6EE2               	movwf	fsr1h,c
 14089  00B92C  CFDF FFE7          	movff	indf2,indf1
 14090                           
 14091                           ; BSR set to: 0
 14092  00B930  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14093  00B932                     l1369:
 14094                           
 14095                           ; BSR set to: 0
 14096                           
 14097                           ; BSR set to: 0
 14098  00B932  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14099  00B934  0D01               	mullw	1
 14100  00B936  0EBE               	movlw	low display_prepare@temp
 14101  00B938  24F3               	addwf	prodl,w,c
 14102  00B93A  6ED9               	movwf	fsr2l,c
 14103  00B93C  0E00               	movlw	high display_prepare@temp
 14104  00B93E  20F4               	addwfc	prodh,w,c
 14105  00B940  6EDA               	movwf	fsr2h,c
 14106  00B942  50DF               	movf	indf2,w,c
 14107  00B944  A4D8               	btfss	status,2,c
 14108  00B946  D7DD               	goto	l1370
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;display.c: 419: };display.c: 420: display_content[0][10+cntr] = 0x01;
 14112                           
 14113                           ; BSR set to: 0
 14114  00B948  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14115  00B94A  6FBC               	movwf	??_display_prepare& (0+255),b
 14116  00B94C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14117  00B94E  0E0A               	movlw	10
 14118  00B950  27BC               	addwf	??_display_prepare& (0+255),f,b
 14119  00B952  0E00               	movlw	0
 14120  00B954  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14121  00B956  0EAD               	movlw	low _display_content
 14122  00B958  25BC               	addwf	??_display_prepare& (0+255),w,b
 14123  00B95A  6ED9               	movwf	fsr2l,c
 14124  00B95C  0E01               	movlw	high _display_content
 14125  00B95E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14126  00B960  6EDA               	movwf	fsr2h,c
 14127  00B962  0E01               	movlw	1
 14128  00B964  6EDF               	movwf	indf2,c
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;display.c: 423: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 14132  00B966  C0D7  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 14133  00B96A  C0D8  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 14134  00B96E  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 14135  00B970  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 14136  00B972  0E02               	movlw	2
 14137  00B974  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14138  00B976  0EBE               	movlw	low display_prepare@temp
 14139  00B978  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14140  00B97A  0E00               	movlw	high display_prepare@temp
 14141  00B97C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14142  00B97E  ECDF  F069         	call	__display_itoa_long	;wreg free
 14143                           
 14144                           ;display.c: 424: space = 6-strlen(temp);
 14145  00B982  0EBE               	movlw	low display_prepare@temp
 14146  00B984  0100               	movlb	0	; () banked
 14147  00B986  6F60               	movwf	strlen@s& (0+255),b
 14148  00B988  0E00               	movlw	high display_prepare@temp
 14149  00B98A  6F61               	movwf	(strlen@s+1)& (0+255),b
 14150  00B98C  EC7D  F079         	call	_strlen	;wreg free
 14151  00B990  0100               	movlb	0	; () banked
 14152  00B992  5160               	movf	?_strlen& (0+255),w,b
 14153  00B994  0800               	sublw	0
 14154  00B996  0F06               	addlw	6
 14155  00B998  6FC8               	movwf	display_prepare@space& (0+255),b
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;display.c: 425: for(cntr=0; temp[cntr]; ++cntr)
 14159  00B99A  0E00               	movlw	0
 14160  00B99C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14161  00B99E  D01C               	goto	l1372
 14162  00B9A0                     
 14163                           ; BSR set to: 0
 14164                           ;display.c: 426: {;display.c: 427: display_content[1][13+space+cntr] = temp[cntr];
 14165                           
 14166                           ; BSR set to: 0
 14167  00B9A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14168  00B9A2  0D01               	mullw	1
 14169  00B9A4  0EBE               	movlw	low display_prepare@temp
 14170  00B9A6  24F3               	addwf	prodl,w,c
 14171  00B9A8  6ED9               	movwf	fsr2l,c
 14172  00B9AA  0E00               	movlw	high display_prepare@temp
 14173  00B9AC  20F4               	addwfc	prodh,w,c
 14174  00B9AE  6EDA               	movwf	fsr2h,c
 14175  00B9B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14176  00B9B2  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 14177  00B9B6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14178  00B9B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 14179  00B9BA  0E00               	movlw	0
 14180  00B9BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14181  00B9BE  0E0D               	movlw	13
 14182  00B9C0  27BC               	addwf	??_display_prepare& (0+255),f,b
 14183  00B9C2  0E00               	movlw	0
 14184  00B9C4  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14185  00B9C6  0EC1               	movlw	low (_display_content+20)
 14186  00B9C8  25BC               	addwf	??_display_prepare& (0+255),w,b
 14187  00B9CA  6EE1               	movwf	fsr1l,c
 14188  00B9CC  0E01               	movlw	high (_display_content+20)
 14189  00B9CE  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14190  00B9D0  6EE2               	movwf	fsr1h,c
 14191  00B9D2  CFDF FFE7          	movff	indf2,indf1
 14192                           
 14193                           ; BSR set to: 0
 14194  00B9D6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14195  00B9D8                     l1372:
 14196                           
 14197                           ; BSR set to: 0
 14198                           
 14199                           ; BSR set to: 0
 14200  00B9D8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14201  00B9DA  0D01               	mullw	1
 14202  00B9DC  0EBE               	movlw	low display_prepare@temp
 14203  00B9DE  24F3               	addwf	prodl,w,c
 14204  00B9E0  6ED9               	movwf	fsr2l,c
 14205  00B9E2  0E00               	movlw	high display_prepare@temp
 14206  00B9E4  20F4               	addwfc	prodh,w,c
 14207  00B9E6  6EDA               	movwf	fsr2h,c
 14208  00B9E8  50DF               	movf	indf2,w,c
 14209  00B9EA  A4D8               	btfss	status,2,c
 14210  00B9EC  D7D9               	goto	l1373
 14211                           
 14212                           ; BSR set to: 0
 14213                           ;display.c: 428: };display.c: 431: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 14214                           
 14215                           ; BSR set to: 0
 14216  00B9EE  C0EC  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 14217  00B9F2  C0ED  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 14218  00B9F6  EC10  F07B         	call	_motor_speed_from_index	;wreg free
 14219  00B9FA  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 14220  00B9FE  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 14221  00BA02  0E02               	movlw	2
 14222  00BA04  0100               	movlb	0	; () banked
 14223  00BA06  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14224  00BA08  0EBE               	movlw	low display_prepare@temp
 14225  00BA0A  6F98               	movwf	__display_itoa@text& (0+255),b
 14226  00BA0C  0E00               	movlw	high display_prepare@temp
 14227  00BA0E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14228  00BA10  EC93  F063         	call	__display_itoa	;wreg free
 14229                           
 14230                           ;display.c: 432: for(cntr=0; temp[cntr]; ++cntr)
 14231  00BA14  0E00               	movlw	0
 14232  00BA16  0100               	movlb	0	; () banked
 14233  00BA18  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14234  00BA1A  D018               	goto	l1375
 14235  00BA1C                     
 14236                           ; BSR set to: 0
 14237                           ;display.c: 433: {;display.c: 434: display_content[3][11+cntr] = temp[cntr];
 14238                           
 14239                           ; BSR set to: 0
 14240  00BA1C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14241  00BA1E  0D01               	mullw	1
 14242  00BA20  0EBE               	movlw	low display_prepare@temp
 14243  00BA22  24F3               	addwf	prodl,w,c
 14244  00BA24  6ED9               	movwf	fsr2l,c
 14245  00BA26  0E00               	movlw	high display_prepare@temp
 14246  00BA28  20F4               	addwfc	prodh,w,c
 14247  00BA2A  6EDA               	movwf	fsr2h,c
 14248  00BA2C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14249  00BA2E  6FBC               	movwf	??_display_prepare& (0+255),b
 14250  00BA30  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14251  00BA32  0E0B               	movlw	11
 14252  00BA34  27BC               	addwf	??_display_prepare& (0+255),f,b
 14253  00BA36  0E00               	movlw	0
 14254  00BA38  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14255  00BA3A  0EE9               	movlw	low (_display_content+60)
 14256  00BA3C  25BC               	addwf	??_display_prepare& (0+255),w,b
 14257  00BA3E  6EE1               	movwf	fsr1l,c
 14258  00BA40  0E01               	movlw	high (_display_content+60)
 14259  00BA42  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14260  00BA44  6EE2               	movwf	fsr1h,c
 14261  00BA46  CFDF FFE7          	movff	indf2,indf1
 14262                           
 14263                           ; BSR set to: 0
 14264  00BA4A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14265  00BA4C                     l1375:
 14266                           
 14267                           ; BSR set to: 0
 14268                           
 14269                           ; BSR set to: 0
 14270  00BA4C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14271  00BA4E  0D01               	mullw	1
 14272  00BA50  0EBE               	movlw	low display_prepare@temp
 14273  00BA52  24F3               	addwf	prodl,w,c
 14274  00BA54  6ED9               	movwf	fsr2l,c
 14275  00BA56  0E00               	movlw	high display_prepare@temp
 14276  00BA58  20F4               	addwfc	prodh,w,c
 14277  00BA5A  6EDA               	movwf	fsr2h,c
 14278  00BA5C  50DF               	movf	indf2,w,c
 14279  00BA5E  A4D8               	btfss	status,2,c
 14280  00BA60  D7DD               	goto	l1376
 14281  00BA62  D12D               	goto	L57
 14282  00BA64                     
 14283                           ; BSR set to: 0
 14284                           ;display.c: 447: memcpy(display_content, dc_zero, sizeof display_content);
 14285                           
 14286                           ; BSR set to: 0
 14287  00BA64  0EAD               	movlw	low _display_content
 14288  00BA66  6F60               	movwf	memcpy@d1& (0+255),b
 14289  00BA68  0E01               	movlw	high _display_content
 14290  00BA6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14291  00BA6C  0E36               	movlw	low _dc_zero
 14292  00BA6E  6F62               	movwf	memcpy@s1& (0+255),b
 14293  00BA70  0E9E               	movlw	high _dc_zero
 14294  00BA72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14295  00BA74  0E00               	movlw	0
 14296  00BA76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14297  00BA78  0E50               	movlw	80
 14298  00BA7A  6F64               	movwf	memcpy@n& (0+255),b
 14299  00BA7C  EC58  F076         	call	_memcpy	;wreg free
 14300                           
 14301                           ;display.c: 450: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 14302  00BA80  C0D7  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 14303  00BA84  C0D8  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 14304  00BA88  0100               	movlb	0	; () banked
 14305  00BA8A  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 14306  00BA8C  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 14307  00BA8E  0E02               	movlw	2
 14308  00BA90  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14309  00BA92  0EBE               	movlw	low display_prepare@temp
 14310  00BA94  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14311  00BA96  0E00               	movlw	high display_prepare@temp
 14312  00BA98  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14313  00BA9A  ECDF  F069         	call	__display_itoa_long	;wreg free
 14314                           
 14315                           ;display.c: 451: for(cntr=0; temp[cntr]; ++cntr)
 14316  00BA9E  0E00               	movlw	0
 14317  00BAA0  0100               	movlb	0	; () banked
 14318  00BAA2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14319  00BAA4  D018               	goto	l1379
 14320  00BAA6                     
 14321                           ; BSR set to: 0
 14322                           ;display.c: 452: {;display.c: 453: display_content[1][13+cntr] = temp[cntr];
 14323                           
 14324                           ; BSR set to: 0
 14325  00BAA6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14326  00BAA8  0D01               	mullw	1
 14327  00BAAA  0EBE               	movlw	low display_prepare@temp
 14328  00BAAC  24F3               	addwf	prodl,w,c
 14329  00BAAE  6ED9               	movwf	fsr2l,c
 14330  00BAB0  0E00               	movlw	high display_prepare@temp
 14331  00BAB2  20F4               	addwfc	prodh,w,c
 14332  00BAB4  6EDA               	movwf	fsr2h,c
 14333  00BAB6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14334  00BAB8  6FBC               	movwf	??_display_prepare& (0+255),b
 14335  00BABA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14336  00BABC  0E0D               	movlw	13
 14337  00BABE  27BC               	addwf	??_display_prepare& (0+255),f,b
 14338  00BAC0  0E00               	movlw	0
 14339  00BAC2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14340  00BAC4  0EC1               	movlw	low (_display_content+20)
 14341  00BAC6  25BC               	addwf	??_display_prepare& (0+255),w,b
 14342  00BAC8  6EE1               	movwf	fsr1l,c
 14343  00BACA  0E01               	movlw	high (_display_content+20)
 14344  00BACC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14345  00BACE  6EE2               	movwf	fsr1h,c
 14346  00BAD0  CFDF FFE7          	movff	indf2,indf1
 14347                           
 14348                           ; BSR set to: 0
 14349  00BAD4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14350  00BAD6                     l1379:
 14351                           
 14352                           ; BSR set to: 0
 14353                           
 14354                           ; BSR set to: 0
 14355  00BAD6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14356  00BAD8  0D01               	mullw	1
 14357  00BADA  0EBE               	movlw	low display_prepare@temp
 14358  00BADC  24F3               	addwf	prodl,w,c
 14359  00BADE  6ED9               	movwf	fsr2l,c
 14360  00BAE0  0E00               	movlw	high display_prepare@temp
 14361  00BAE2  20F4               	addwfc	prodh,w,c
 14362  00BAE4  6EDA               	movwf	fsr2h,c
 14363  00BAE6  50DF               	movf	indf2,w,c
 14364  00BAE8  A4D8               	btfss	status,2,c
 14365  00BAEA  D7DD               	goto	l1380
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;display.c: 454: };display.c: 455: display_content[1][13+cntr] = 0x01;
 14369                           
 14370                           ; BSR set to: 0
 14371  00BAEC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14372  00BAEE  6FBC               	movwf	??_display_prepare& (0+255),b
 14373  00BAF0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14374  00BAF2  0E0D               	movlw	13
 14375  00BAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 14376  00BAF6  0E00               	movlw	0
 14377  00BAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14378  00BAFA  0EC1               	movlw	low (_display_content+20)
 14379  00BAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 14380  00BAFE  6ED9               	movwf	fsr2l,c
 14381  00BB00  0E01               	movlw	high (_display_content+20)
 14382  00BB02  D6AA               	goto	L37
 14383  00BB04                     
 14384                           ; BSR set to: 0
 14385                           ;display.c: 460: memcpy(display_content, dc_manual, sizeof display_content);
 14386                           
 14387                           ; BSR set to: 0
 14388  00BB04  0EAD               	movlw	low _display_content
 14389  00BB06  6F60               	movwf	memcpy@d1& (0+255),b
 14390  00BB08  0E01               	movlw	high _display_content
 14391  00BB0A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14392  00BB0C  0EE6               	movlw	low _dc_manual
 14393  00BB0E  6F62               	movwf	memcpy@s1& (0+255),b
 14394  00BB10  0E9D               	movlw	high _dc_manual
 14395  00BB12  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14396  00BB14  0E00               	movlw	0
 14397  00BB16  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14398  00BB18  0E50               	movlw	80
 14399  00BB1A  6F64               	movwf	memcpy@n& (0+255),b
 14400  00BB1C  EC58  F076         	call	_memcpy	;wreg free
 14401                           
 14402                           ;display.c: 461: switch(os.displayState)
 14403  00BB20  D044               	goto	l1383
 14404  00BB22                     
 14405                           ;display.c: 464: display_content[2][6] = 'W';
 14406  00BB22  0E57               	movlw	87
 14407  00BB24  0101               	movlb	1	; () banked
 14408  00BB26  6FDB               	movwf	(_display_content+46)& (0+255),b
 14409                           
 14410                           ;display.c: 465: display_content[2][7] = ' ';
 14411  00BB28  0E20               	movlw	32
 14412  00BB2A  6FDC               	movwf	(_display_content+47)& (0+255),b
 14413                           
 14414                           ;display.c: 466: break;
 14415  00BB2C  D049               	goto	l1385
 14416  00BB2E                     
 14417                           ;display.c: 468: memcpy(display_content[2], "        ", 8);
 14418                           
 14419                           ; BSR set to: 1
 14420  00BB2E  0ED5               	movlw	low (_display_content+40)
 14421  00BB30  0100               	movlb	0	; () banked
 14422  00BB32  6F60               	movwf	memcpy@d1& (0+255),b
 14423  00BB34  0E01               	movlw	high (_display_content+40)
 14424  00BB36  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14425  00BB38  0E14               	movlw	low STR_1
 14426  00BB3A  6F62               	movwf	memcpy@s1& (0+255),b
 14427  00BB3C  0EA2               	movlw	high STR_1
 14428  00BB3E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14429  00BB40  0E00               	movlw	0
 14430  00BB42  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14431  00BB44  0E08               	movlw	8
 14432  00BB46  6F64               	movwf	memcpy@n& (0+255),b
 14433  00BB48  EC58  F076         	call	_memcpy	;wreg free
 14434                           
 14435                           ;display.c: 469: memcpy(display_content[3], "Cancel", 6);
 14436  00BB4C  0EE9               	movlw	low (_display_content+60)
 14437  00BB4E  0100               	movlb	0	; () banked
 14438  00BB50  6F60               	movwf	memcpy@d1& (0+255),b
 14439  00BB52  0E01               	movlw	high (_display_content+60)
 14440  00BB54  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14441  00BB56  0E1D               	movlw	low STR_2
 14442  00BB58  6F62               	movwf	memcpy@s1& (0+255),b
 14443  00BB5A  0EA2               	movlw	high STR_2
 14444  00BB5C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14445  00BB5E  0E00               	movlw	0
 14446  00BB60  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14447  00BB62  0E06               	movlw	6
 14448  00BB64  6F64               	movwf	memcpy@n& (0+255),b
 14449  00BB66  EC58  F076         	call	_memcpy	;wreg free
 14450                           
 14451                           ;display.c: 470: break;
 14452  00BB6A  D02A               	goto	l1385
 14453  00BB6C                     
 14454                           ;display.c: 472: memcpy(&display_content[2][0], "        ", 8);
 14455  00BB6C  0ED5               	movlw	low (_display_content+40)
 14456  00BB6E  0100               	movlb	0	; () banked
 14457  00BB70  6F60               	movwf	memcpy@d1& (0+255),b
 14458  00BB72  0E01               	movlw	high (_display_content+40)
 14459  00BB74  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14460  00BB76  0E14               	movlw	low STR_1
 14461  00BB78  6F62               	movwf	memcpy@s1& (0+255),b
 14462  00BB7A  0EA2               	movlw	high STR_1
 14463  00BB7C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14464  00BB7E  0E00               	movlw	0
 14465  00BB80  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14466  00BB82  0E08               	movlw	8
 14467  00BB84  6F64               	movwf	memcpy@n& (0+255),b
 14468  00BB86  EC58  F076         	call	_memcpy	;wreg free
 14469                           
 14470                           ;display.c: 473: memcpy(&display_content[3][0], "Stop ", 5);
 14471  00BB8A  0EE9               	movlw	low (_display_content+60)
 14472  00BB8C  0100               	movlb	0	; () banked
 14473  00BB8E  6F60               	movwf	memcpy@d1& (0+255),b
 14474  00BB90  0E01               	movlw	high (_display_content+60)
 14475  00BB92  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14476  00BB94  0E24               	movlw	low STR_6
 14477  00BB96  6F62               	movwf	memcpy@s1& (0+255),b
 14478  00BB98  0EA2               	movlw	high STR_6
 14479  00BB9A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14480  00BB9C  0E00               	movlw	0
 14481  00BB9E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14482  00BBA0  0E05               	movlw	5
 14483  00BBA2  6F64               	movwf	memcpy@n& (0+255),b
 14484  00BBA4  EC58  F076         	call	_memcpy	;wreg free
 14485                           
 14486                           ;display.c: 475: }
 14487                           
 14488                           ;display.c: 474: break;
 14489  00BBA8  D00B               	goto	l1385
 14490  00BBAA                     l1383:
 14491  00BBAA  0100               	movlb	0	; () banked
 14492  00BBAC  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 14493                           
 14494                           ; Switch size 1, requested type "space"
 14495                           ; Number of cases is 3, Range of values is 130 to 132
 14496                           ; switch strategies available:
 14497                           ; Name         Instructions Cycles
 14498                           ; simple_byte           10     6 (average)
 14499                           ;	Chosen strategy is simple_byte
 14500  00BBAE  0A82               	xorlw	130	; case 130
 14501  00BBB0  B4D8               	btfsc	status,2,c
 14502  00BBB2  D7BD               	goto	l1386
 14503  00BBB4  0A01               	xorlw	1	; case 131
 14504  00BBB6  B4D8               	btfsc	status,2,c
 14505  00BBB8  D7B4               	goto	l1384
 14506  00BBBA  0A07               	xorlw	7	; case 132
 14507  00BBBC  B4D8               	btfsc	status,2,c
 14508  00BBBE  D7D6               	goto	l1387
 14509  00BBC0                     l1385:
 14510                           
 14511                           ;display.c: 478: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 14512                           
 14513                           ; BSR set to: 0
 14514  00BBC0  C0D7  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 14515  00BBC4  C0D8  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 14516  00BBC8  0100               	movlb	0	; () banked
 14517  00BBCA  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 14518  00BBCC  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 14519  00BBCE  0E02               	movlw	2
 14520  00BBD0  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 14521  00BBD2  0EBE               	movlw	low display_prepare@temp
 14522  00BBD4  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 14523  00BBD6  0E00               	movlw	high display_prepare@temp
 14524  00BBD8  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 14525  00BBDA  ECDF  F069         	call	__display_itoa_long	;wreg free
 14526                           
 14527                           ;display.c: 479: space = 7-strlen(temp);
 14528  00BBDE  0EBE               	movlw	low display_prepare@temp
 14529  00BBE0  0100               	movlb	0	; () banked
 14530  00BBE2  6F60               	movwf	strlen@s& (0+255),b
 14531  00BBE4  0E00               	movlw	high display_prepare@temp
 14532  00BBE6  6F61               	movwf	(strlen@s+1)& (0+255),b
 14533  00BBE8  EC7D  F079         	call	_strlen	;wreg free
 14534  00BBEC  0100               	movlb	0	; () banked
 14535  00BBEE  5160               	movf	?_strlen& (0+255),w,b
 14536  00BBF0  0800               	sublw	0
 14537  00BBF2  0F07               	addlw	7
 14538  00BBF4  6FC8               	movwf	display_prepare@space& (0+255),b
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 14542  00BBF6  0E00               	movlw	0
 14543  00BBF8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14544  00BBFA  D01C               	goto	l1388
 14545  00BBFC                     
 14546                           ; BSR set to: 0
 14547                           ;display.c: 481: {;display.c: 482: display_content[1][12+space+cntr] = temp[cntr];
 14548                           
 14549                           ; BSR set to: 0
 14550  00BBFC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14551  00BBFE  0D01               	mullw	1
 14552  00BC00  0EBE               	movlw	low display_prepare@temp
 14553  00BC02  24F3               	addwf	prodl,w,c
 14554  00BC04  6ED9               	movwf	fsr2l,c
 14555  00BC06  0E00               	movlw	high display_prepare@temp
 14556  00BC08  20F4               	addwfc	prodh,w,c
 14557  00BC0A  6EDA               	movwf	fsr2h,c
 14558  00BC0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14559  00BC0E  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 14560  00BC12  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14561  00BC14  27BC               	addwf	??_display_prepare& (0+255),f,b
 14562  00BC16  0E00               	movlw	0
 14563  00BC18  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14564  00BC1A  0E0C               	movlw	12
 14565  00BC1C  27BC               	addwf	??_display_prepare& (0+255),f,b
 14566  00BC1E  0E00               	movlw	0
 14567  00BC20  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14568  00BC22  0EC1               	movlw	low (_display_content+20)
 14569  00BC24  25BC               	addwf	??_display_prepare& (0+255),w,b
 14570  00BC26  6EE1               	movwf	fsr1l,c
 14571  00BC28  0E01               	movlw	high (_display_content+20)
 14572  00BC2A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14573  00BC2C  6EE2               	movwf	fsr1h,c
 14574  00BC2E  CFDF FFE7          	movff	indf2,indf1
 14575                           
 14576                           ; BSR set to: 0
 14577  00BC32  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14578  00BC34                     l1388:
 14579                           
 14580                           ; BSR set to: 0
 14581                           
 14582                           ; BSR set to: 0
 14583  00BC34  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14584  00BC36  0D01               	mullw	1
 14585  00BC38  0EBE               	movlw	low display_prepare@temp
 14586  00BC3A  24F3               	addwf	prodl,w,c
 14587  00BC3C  6ED9               	movwf	fsr2l,c
 14588  00BC3E  0E00               	movlw	high display_prepare@temp
 14589  00BC40  20F4               	addwfc	prodh,w,c
 14590  00BC42  6EDA               	movwf	fsr2h,c
 14591  00BC44  50DF               	movf	indf2,w,c
 14592  00BC46  A4D8               	btfss	status,2,c
 14593  00BC48  D7D9               	goto	l1389
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;display.c: 483: };display.c: 486: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 14597                           
 14598                           ; BSR set to: 0
 14599  00BC4A  C0EF  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 14600  00BC4E  C0F0  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 14601  00BC52  EC10  F07B         	call	_motor_speed_from_index	;wreg free
 14602  00BC56  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 14603  00BC5A  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 14604  00BC5E  0E02               	movlw	2
 14605  00BC60  0100               	movlb	0	; () banked
 14606  00BC62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14607  00BC64  0EBE               	movlw	low display_prepare@temp
 14608  00BC66  6F98               	movwf	__display_itoa@text& (0+255),b
 14609  00BC68  0E00               	movlw	high display_prepare@temp
 14610  00BC6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14611  00BC6C  EC93  F063         	call	__display_itoa	;wreg free
 14612                           
 14613                           ;display.c: 487: for(cntr=0; temp[cntr]; ++cntr)
 14614  00BC70  0E00               	movlw	0
 14615  00BC72  0100               	movlb	0	; () banked
 14616  00BC74  6FC9               	movwf	display_prepare@cntr& (0+255),b
 14617  00BC76  D018               	goto	l1391
 14618  00BC78                     
 14619                           ; BSR set to: 0
 14620                           ;display.c: 488: {;display.c: 489: display_content[3][11+cntr] = temp[cntr];
 14621                           
 14622                           ; BSR set to: 0
 14623  00BC78  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14624  00BC7A  0D01               	mullw	1
 14625  00BC7C  0EBE               	movlw	low display_prepare@temp
 14626  00BC7E  24F3               	addwf	prodl,w,c
 14627  00BC80  6ED9               	movwf	fsr2l,c
 14628  00BC82  0E00               	movlw	high display_prepare@temp
 14629  00BC84  20F4               	addwfc	prodh,w,c
 14630  00BC86  6EDA               	movwf	fsr2h,c
 14631  00BC88  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14632  00BC8A  6FBC               	movwf	??_display_prepare& (0+255),b
 14633  00BC8C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14634  00BC8E  0E0B               	movlw	11
 14635  00BC90  27BC               	addwf	??_display_prepare& (0+255),f,b
 14636  00BC92  0E00               	movlw	0
 14637  00BC94  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14638  00BC96  0EE9               	movlw	low (_display_content+60)
 14639  00BC98  25BC               	addwf	??_display_prepare& (0+255),w,b
 14640  00BC9A  6EE1               	movwf	fsr1l,c
 14641  00BC9C  0E01               	movlw	high (_display_content+60)
 14642  00BC9E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14643  00BCA0  6EE2               	movwf	fsr1h,c
 14644  00BCA2  CFDF FFE7          	movff	indf2,indf1
 14645                           
 14646                           ; BSR set to: 0
 14647  00BCA6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 14648  00BCA8                     l1391:
 14649                           
 14650                           ; BSR set to: 0
 14651                           
 14652                           ; BSR set to: 0
 14653  00BCA8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14654  00BCAA  0D01               	mullw	1
 14655  00BCAC  0EBE               	movlw	low display_prepare@temp
 14656  00BCAE  24F3               	addwf	prodl,w,c
 14657  00BCB0  6ED9               	movwf	fsr2l,c
 14658  00BCB2  0E00               	movlw	high display_prepare@temp
 14659  00BCB4  20F4               	addwfc	prodh,w,c
 14660  00BCB6  6EDA               	movwf	fsr2h,c
 14661  00BCB8  50DF               	movf	indf2,w,c
 14662  00BCBA  A4D8               	btfss	status,2,c
 14663  00BCBC  D7DD               	goto	l1392
 14664  00BCBE                     L57:
 14665                           
 14666                           ; BSR set to: 0
 14667                           ;display.c: 490: };display.c: 491: display_content[3][11+cntr] = 0x01;
 14668                           
 14669                           ; BSR set to: 0
 14670  00BCBE  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14671  00BCC0  6FBC               	movwf	??_display_prepare& (0+255),b
 14672  00BCC2  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14673  00BCC4  0E0B               	movlw	11
 14674  00BCC6  27BC               	addwf	??_display_prepare& (0+255),f,b
 14675  00BCC8  0E00               	movlw	0
 14676  00BCCA  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14677  00BCCC  0EE9               	movlw	low (_display_content+60)
 14678  00BCCE  25BC               	addwf	??_display_prepare& (0+255),w,b
 14679  00BCD0  6ED9               	movwf	fsr2l,c
 14680  00BCD2  0E01               	movlw	high (_display_content+60)
 14681  00BCD4  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14682  00BCD6  6EDA               	movwf	fsr2h,c
 14683  00BCD8  0E01               	movlw	1
 14684  00BCDA  6EDF               	movwf	indf2,c
 14685                           
 14686                           ;display.c: 492: display_content[3][12+cntr] = '/';
 14687  00BCDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14688  00BCDE  6FBC               	movwf	??_display_prepare& (0+255),b
 14689  00BCE0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14690  00BCE2  0E0C               	movlw	12
 14691  00BCE4  27BC               	addwf	??_display_prepare& (0+255),f,b
 14692  00BCE6  0E00               	movlw	0
 14693  00BCE8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14694  00BCEA  0EE9               	movlw	low (_display_content+60)
 14695  00BCEC  25BC               	addwf	??_display_prepare& (0+255),w,b
 14696  00BCEE  6ED9               	movwf	fsr2l,c
 14697  00BCF0  0E01               	movlw	high (_display_content+60)
 14698  00BCF2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14699  00BCF4  6EDA               	movwf	fsr2h,c
 14700  00BCF6  0E2F               	movlw	47
 14701  00BCF8  6EDF               	movwf	indf2,c
 14702                           
 14703                           ;display.c: 493: display_content[3][13+cntr] = 's';
 14704  00BCFA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 14705  00BCFC  6FBC               	movwf	??_display_prepare& (0+255),b
 14706  00BCFE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14707  00BD00  0E0D               	movlw	13
 14708  00BD02  27BC               	addwf	??_display_prepare& (0+255),f,b
 14709  00BD04  0E00               	movlw	0
 14710  00BD06  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 14711  00BD08  0EE9               	movlw	low (_display_content+60)
 14712  00BD0A  25BC               	addwf	??_display_prepare& (0+255),w,b
 14713  00BD0C  6ED9               	movwf	fsr2l,c
 14714  00BD0E  0E01               	movlw	high (_display_content+60)
 14715  00BD10  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 14716  00BD12  6EDA               	movwf	fsr2h,c
 14717  00BD14  0E73               	movlw	115
 14718  00BD16                     L23:
 14719  00BD16  6EDF               	movwf	indf2,c
 14720                           
 14721                           ;display.c: 494: break;
 14722  00BD18  D090               	goto	l1311
 14723  00BD1A                     
 14724                           ; BSR set to: 0
 14725                           ;display.c: 497: _display_clear();
 14726                           
 14727                           ; BSR set to: 0
 14728  00BD1A  EC8B  F078         	call	__display_clear	;wreg free
 14729                           
 14730                           ;display.c: 498: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 14731  00BD1E  0100               	movlb	0	; () banked
 14732  00BD20  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
 14733  00BD22  6F95               	movwf	__display_itoa@value& (0+255),b
 14734  00BD24  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 14735  00BD26  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 14736  00BD28  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 14737  00BD2A  0E00               	movlw	0
 14738  00BD2C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14739  00BD2E  0EAD               	movlw	low _display_content
 14740  00BD30  6F98               	movwf	__display_itoa@text& (0+255),b
 14741  00BD32  0E01               	movlw	high _display_content
 14742  00BD34  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14743  00BD36  EC93  F063         	call	__display_itoa	;wreg free
 14744                           
 14745                           ;display.c: 499: if(PORTEbits.RE2)
 14746  00BD3A  A484               	btfss	3972,2,c	;volatile
 14747  00BD3C  D002               	goto	l1395
 14748                           
 14749                           ;display.c: 500: display_content[0][8] = 'H';
 14750  00BD3E  0E48               	movlw	72
 14751  00BD40  D001               	goto	L27
 14752  00BD42                     l1395:
 14753                           
 14754                           ;display.c: 501: else;display.c: 502: display_content[0][8] = 'L';
 14755                           
 14756                           ; BSR set to: 1
 14757  00BD42  0E4C               	movlw	76
 14758  00BD44                     L27:
 14759  00BD44  0101               	movlb	1	; () banked
 14760  00BD46  6FB5               	movwf	(_display_content+8)& (0+255),b
 14761                           
 14762                           ; BSR set to: 1
 14763                           ;display.c: 503: if(PORTEbits.RE0)
 14764                           
 14765                           ; BSR set to: 1
 14766  00BD48  A084               	btfss	3972,0,c	;volatile
 14767  00BD4A  D002               	goto	l1397
 14768                           
 14769                           ; BSR set to: 1
 14770                           ;display.c: 504: display_content[0][9] = 'H';
 14771  00BD4C  0E48               	movlw	72
 14772  00BD4E  D001               	goto	L28
 14773  00BD50                     l1397:
 14774                           
 14775                           ; BSR set to: 1
 14776                           ;display.c: 505: else;display.c: 506: display_content[0][9] = 'L';
 14777                           
 14778                           ; BSR set to: 1
 14779  00BD50  0E4C               	movlw	76
 14780  00BD52                     L28:
 14781  00BD52  6FB6               	movwf	(_display_content+9)& (0+255),b
 14782                           
 14783                           ; BSR set to: 1
 14784                           ;display.c: 507: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 14785                           
 14786                           ; BSR set to: 1
 14787  00BD54  0100               	movlb	0	; () banked
 14788  00BD56  51D0               	movf	(_os+4)& (0+255),w,b	;volatile
 14789  00BD58  6F95               	movwf	__display_itoa@value& (0+255),b
 14790  00BD5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 14791  00BD5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 14792  00BD5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 14793  00BD60  0E00               	movlw	0
 14794  00BD62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14795  00BD64  0EC1               	movlw	low (_display_content+20)
 14796  00BD66  6F98               	movwf	__display_itoa@text& (0+255),b
 14797  00BD68  0E01               	movlw	high (_display_content+20)
 14798  00BD6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14799  00BD6C  EC93  F063         	call	__display_itoa	;wreg free
 14800                           
 14801                           ;display.c: 508: if(PORTEbits.RE1)
 14802  00BD70  A284               	btfss	3972,1,c	;volatile
 14803  00BD72  D002               	goto	l1399
 14804                           
 14805                           ;display.c: 509: display_content[1][8] = 'H';
 14806  00BD74  0E48               	movlw	72
 14807  00BD76  D001               	goto	L29
 14808  00BD78                     l1399:
 14809                           
 14810                           ;display.c: 510: else;display.c: 511: display_content[1][8] = 'L';
 14811                           
 14812                           ; BSR set to: 1
 14813  00BD78  0E4C               	movlw	76
 14814  00BD7A                     L29:
 14815  00BD7A  0101               	movlb	1	; () banked
 14816  00BD7C  6FC9               	movwf	(_display_content+28)& (0+255),b
 14817                           
 14818                           ; BSR set to: 1
 14819                           ;display.c: 512: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 14820                           
 14821                           ; BSR set to: 1
 14822  00BD7E  0100               	movlb	0	; () banked
 14823  00BD80  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
 14824  00BD82  6F95               	movwf	__display_itoa@value& (0+255),b
 14825  00BD84  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 14826  00BD86  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 14827  00BD88  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 14828  00BD8A  0E00               	movlw	0
 14829  00BD8C  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14830  00BD8E  0ED5               	movlw	low (_display_content+40)
 14831  00BD90  6F98               	movwf	__display_itoa@text& (0+255),b
 14832  00BD92  0E01               	movlw	high (_display_content+40)
 14833  00BD94  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14834  00BD96  EC93  F063         	call	__display_itoa	;wreg free
 14835                           
 14836                           ;display.c: 513: if(PORTAbits.RA0)
 14837  00BD9A  A080               	btfss	3968,0,c	;volatile
 14838  00BD9C  D002               	goto	l1401
 14839                           
 14840                           ;display.c: 514: display_content[2][8] = 'H';
 14841  00BD9E  0E48               	movlw	72
 14842  00BDA0  D001               	goto	L30
 14843  00BDA2                     l1401:
 14844                           
 14845                           ;display.c: 515: else;display.c: 516: display_content[2][8] = 'L';
 14846                           
 14847                           ; BSR set to: 1
 14848  00BDA2  0E4C               	movlw	76
 14849  00BDA4                     L30:
 14850  00BDA4  0101               	movlb	1	; () banked
 14851  00BDA6  6FDD               	movwf	(_display_content+48)& (0+255),b
 14852                           
 14853                           ; BSR set to: 1
 14854                           ;display.c: 517: if(PORTAbits.RA2)
 14855                           
 14856                           ; BSR set to: 1
 14857  00BDA8  A480               	btfss	3968,2,c	;volatile
 14858  00BDAA  D002               	goto	l1403
 14859                           
 14860                           ; BSR set to: 1
 14861                           ;display.c: 518: display_content[2][9] = 'H';
 14862  00BDAC  0E48               	movlw	72
 14863  00BDAE  D001               	goto	L31
 14864  00BDB0                     l1403:
 14865                           
 14866                           ; BSR set to: 1
 14867                           ;display.c: 519: else;display.c: 520: display_content[2][9] = 'L';
 14868                           
 14869                           ; BSR set to: 1
 14870  00BDB0  0E4C               	movlw	76
 14871  00BDB2                     L31:
 14872  00BDB2  6FDE               	movwf	(_display_content+49)& (0+255),b
 14873                           
 14874                           ; BSR set to: 1
 14875                           ;display.c: 521: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 14876                           
 14877                           ; BSR set to: 1
 14878  00BDB4  0100               	movlb	0	; () banked
 14879  00BDB6  51D2               	movf	(_os+6)& (0+255),w,b	;volatile
 14880  00BDB8  6F95               	movwf	__display_itoa@value& (0+255),b
 14881  00BDBA  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 14882  00BDBC  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 14883  00BDBE  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 14884  00BDC0  0E00               	movlw	0
 14885  00BDC2  6F97               	movwf	__display_itoa@decimals& (0+255),b
 14886  00BDC4  0EE9               	movlw	low (_display_content+60)
 14887  00BDC6  6F98               	movwf	__display_itoa@text& (0+255),b
 14888  00BDC8  0E01               	movlw	high (_display_content+60)
 14889  00BDCA  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 14890  00BDCC  EC93  F063         	call	__display_itoa	;wreg free
 14891                           
 14892                           ;display.c: 522: if(PORTAbits.RA1)
 14893  00BDD0  A280               	btfss	3968,1,c	;volatile
 14894  00BDD2  D002               	goto	l1405
 14895                           
 14896                           ;display.c: 523: display_content[3][8] = 'H';
 14897  00BDD4  0E48               	movlw	72
 14898  00BDD6  D001               	goto	L24
 14899  00BDD8                     l1405:
 14900                           
 14901                           ;display.c: 524: else;display.c: 525: display_content[3][8] = 'L';
 14902                           
 14903                           ; BSR set to: 1
 14904  00BDD8  0E4C               	movlw	76
 14905  00BDDA                     L24:
 14906  00BDDA  0101               	movlb	1	; () banked
 14907  00BDDC  6FF1               	movwf	(_display_content+68)& (0+255),b
 14908                           
 14909                           ; BSR set to: 1
 14910                           ;display.c: 527: }
 14911                           
 14912                           ; BSR set to: 1
 14913                           ;display.c: 526: break;
 14914  00BDDE  D02D               	goto	l1311
 14915  00BDE0                     l1302:
 14916                           
 14917                           ; BSR set to: 1
 14918  00BDE0  0100               	movlb	0	; () banked
 14919  00BDE2  51D9               	movf	(_os+13)& (0+255),w,b	;volatile
 14920  00BDE4  0BF0               	andlw	240
 14921  00BDE6  6FBC               	movwf	??_display_prepare& (0+255),b
 14922  00BDE8  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 14923                           
 14924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14925                           ; Switch size 1, requested type "space"
 14926                           ; Number of cases is 1, Range of values is 0 to 0
 14927                           ; switch strategies available:
 14928                           ; Name         Instructions Cycles
 14929                           ; simple_byte            4     3 (average)
 14930                           ;	Chosen strategy is simple_byte
 14931  00BDEA  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 14932  00BDEC  0A00               	xorlw	0	; case 0
 14933  00BDEE  A4D8               	btfss	status,2,c
 14934  00BDF0  D024               	goto	l1311
 14935                           
 14936                           ; BSR set to: 0
 14937                           ; Switch size 1, requested type "space"
 14938                           ; Number of cases is 10, Range of values is 0 to 240
 14939                           ; switch strategies available:
 14940                           ; Name         Instructions Cycles
 14941                           ; simple_byte           31    16 (average)
 14942                           ;	Chosen strategy is simple_byte
 14943  00BDF2  51BC               	movf	??_display_prepare& (0+255),w,b
 14944  00BDF4  0A00               	xorlw	0	; case 0
 14945  00BDF6  B4D8               	btfsc	status,2,c
 14946  00BDF8  EF09  F059         	goto	l1303
 14947  00BDFC  0A10               	xorlw	16	; case 16
 14948  00BDFE  B4D8               	btfsc	status,2,c
 14949  00BE00  EF38  F059         	goto	l1312
 14950  00BE04  0A30               	xorlw	48	; case 32
 14951  00BE06  B4D8               	btfsc	status,2,c
 14952  00BE08  EF88  F059         	goto	l1322
 14953  00BE0C  0A10               	xorlw	16	; case 48
 14954  00BE0E  B4D8               	btfsc	status,2,c
 14955  00BE10  EFAB  F059         	goto	l1327
 14956  00BE14  0A70               	xorlw	112	; case 64
 14957  00BE16  B4D8               	btfsc	status,2,c
 14958  00BE18  EF1B  F05A         	goto	l1336
 14959  00BE1C  0A10               	xorlw	16	; case 80
 14960  00BE1E  B4D8               	btfsc	status,2,c
 14961  00BE20  D46D               	goto	l1351
 14962  00BE22  0A30               	xorlw	48	; case 96
 14963  00BE24  B4D8               	btfsc	status,2,c
 14964  00BE26  D51C               	goto	l1364
 14965  00BE28  0A10               	xorlw	16	; case 112
 14966  00BE2A  B4D8               	btfsc	status,2,c
 14967  00BE2C  D61B               	goto	l1378
 14968  00BE2E  0AF0               	xorlw	240	; case 128
 14969  00BE30  B4D8               	btfsc	status,2,c
 14970  00BE32  D668               	goto	l1382
 14971  00BE34  0A70               	xorlw	112	; case 240
 14972  00BE36  B4D8               	btfsc	status,2,c
 14973  00BE38  D770               	goto	l1394
 14974  00BE3A                     l1311:
 14975                           
 14976                           ;display.c: 529: if(!PORTDbits.RD2)
 14977  00BE3A  B483               	btfsc	3971,2,c	;volatile
 14978  00BE3C  D00B               	goto	l1407
 14979                           
 14980                           ;display.c: 530: {;display.c: 531: display_content[0][0] = 'E';
 14981  00BE3E  0E45               	movlw	69
 14982  00BE40  0101               	movlb	1	; () banked
 14983  00BE42  6FAD               	movwf	_display_content& (0+255),b
 14984                           
 14985                           ;display.c: 532: display_content[0][1] = 'R';
 14986  00BE44  0E52               	movlw	82
 14987  00BE46  6FAE               	movwf	(_display_content+1)& (0+255),b
 14988                           
 14989                           ;display.c: 533: display_content[0][2] = 'R';
 14990  00BE48  0E52               	movlw	82
 14991  00BE4A  6FAF               	movwf	(_display_content+2)& (0+255),b
 14992                           
 14993                           ;display.c: 534: display_content[0][3] = 'O';
 14994  00BE4C  0E4F               	movlw	79
 14995  00BE4E  6FB0               	movwf	(_display_content+3)& (0+255),b
 14996                           
 14997                           ;display.c: 535: display_content[0][4] = 'R';
 14998  00BE50  0E52               	movlw	82
 14999  00BE52  6FB1               	movwf	(_display_content+4)& (0+255),b
 15000  00BE54                     l1407:
 15001                           
 15002                           ;display.c: 536: };display.c: 539: if(PORTEbits.RE1)
 15003                           
 15004                           ; BSR set to: 1
 15005  00BE54  A284               	btfss	3972,1,c	;volatile
 15006  00BE56  D002               	goto	l1408
 15007                           
 15008                           ;display.c: 540: display_content[0][17] = '+';
 15009  00BE58  0E2B               	movlw	43
 15010  00BE5A  D001               	goto	L32
 15011  00BE5C                     l1408:
 15012                           
 15013                           ;display.c: 541: else;display.c: 542: display_content[0][17] = '-';
 15014                           
 15015                           ; BSR set to: 1
 15016  00BE5C  0E2D               	movlw	45
 15017  00BE5E                     L32:
 15018  00BE5E  0101               	movlb	1	; () banked
 15019  00BE60  6FBE               	movwf	(_display_content+17)& (0+255),b
 15020                           
 15021                           ; BSR set to: 1
 15022                           ;display.c: 544: if(PORTEbits.RE2)
 15023                           
 15024                           ; BSR set to: 1
 15025  00BE62  A484               	btfss	3972,2,c	;volatile
 15026  00BE64  D002               	goto	l1410
 15027                           
 15028                           ; BSR set to: 1
 15029                           ;display.c: 545: display_content[0][18] = '+';
 15030  00BE66  0E2B               	movlw	43
 15031  00BE68  D001               	goto	L33
 15032  00BE6A                     l1410:
 15033                           
 15034                           ; BSR set to: 1
 15035                           ;display.c: 546: else;display.c: 547: display_content[0][18] = '-';
 15036                           
 15037                           ; BSR set to: 1
 15038  00BE6A  0E2D               	movlw	45
 15039  00BE6C                     L33:
 15040  00BE6C  6FBF               	movwf	(_display_content+18)& (0+255),b
 15041                           
 15042                           ; BSR set to: 1
 15043                           ;display.c: 549: if(PORTEbits.RE0)
 15044                           
 15045                           ; BSR set to: 1
 15046  00BE6E  A084               	btfss	3972,0,c	;volatile
 15047  00BE70  D002               	goto	l1412
 15048                           
 15049                           ; BSR set to: 1
 15050                           ;display.c: 550: display_content[0][19] = '+';
 15051  00BE72  0E2B               	movlw	43
 15052  00BE74  D001               	goto	L34
 15053  00BE76                     l1412:
 15054                           
 15055                           ; BSR set to: 1
 15056                           ;display.c: 551: else;display.c: 552: display_content[0][19] = '-';
 15057                           
 15058                           ; BSR set to: 1
 15059  00BE76  0E2D               	movlw	45
 15060  00BE78                     L34:
 15061  00BE78  6FC0               	movwf	(_display_content+19)& (0+255),b
 15062                           
 15063                           ; BSR set to: 1
 15064                           ;display.c: 554: if(PORTAbits.RA1)
 15065                           
 15066                           ; BSR set to: 1
 15067  00BE7A  A280               	btfss	3968,1,c	;volatile
 15068  00BE7C  D002               	goto	l1414
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;display.c: 555: display_content[1][17] = '+';
 15072  00BE7E  0E2B               	movlw	43
 15073  00BE80  D001               	goto	L35
 15074  00BE82                     l1414:
 15075                           
 15076                           ; BSR set to: 1
 15077                           ;display.c: 556: else;display.c: 557: display_content[1][17] = '-';
 15078                           
 15079                           ; BSR set to: 1
 15080  00BE82  0E2D               	movlw	45
 15081  00BE84                     L35:
 15082  00BE84  6FD2               	movwf	(_display_content+37)& (0+255),b
 15083                           
 15084                           ; BSR set to: 1
 15085                           ;display.c: 559: if(PORTAbits.RA0)
 15086                           
 15087                           ; BSR set to: 1
 15088  00BE86  A080               	btfss	3968,0,c	;volatile
 15089  00BE88  D002               	goto	l1416
 15090                           
 15091                           ; BSR set to: 1
 15092                           ;display.c: 560: display_content[1][18] = '+';
 15093  00BE8A  0E2B               	movlw	43
 15094  00BE8C  D001               	goto	L36
 15095  00BE8E                     l1416:
 15096                           
 15097                           ; BSR set to: 1
 15098                           ;display.c: 561: else;display.c: 562: display_content[1][18] = '-';
 15099                           
 15100                           ; BSR set to: 1
 15101  00BE8E  0E2D               	movlw	45
 15102  00BE90                     L36:
 15103  00BE90  6FD3               	movwf	(_display_content+38)& (0+255),b
 15104                           
 15105                           ; BSR set to: 1
 15106                           ;display.c: 564: if(PORTAbits.RA2)
 15107                           
 15108                           ; BSR set to: 1
 15109  00BE92  A480               	btfss	3968,2,c	;volatile
 15110  00BE94  D003               	goto	l1418
 15111                           
 15112                           ; BSR set to: 1
 15113                           ;display.c: 565: display_content[1][19] = '+';
 15114  00BE96  0E2B               	movlw	43
 15115  00BE98  6FD4               	movwf	(_display_content+39)& (0+255),b
 15116  00BE9A  0012               	return	
 15117  00BE9C                     l1418:
 15118                           
 15119                           ; BSR set to: 1
 15120                           ;display.c: 566: else;display.c: 567: display_content[1][19] = '-';
 15121                           
 15122                           ; BSR set to: 1
 15123  00BE9C  0E2D               	movlw	45
 15124  00BE9E  6FD4               	movwf	(_display_content+39)& (0+255),b
 15125  00BEA0  0012               	return	
 15126  00BEA2                     __end_of_display_prepare:
 15127                           	opt stack 0
 15128                           tblptru	equ	0xFF8
 15129                           tblptrh	equ	0xFF7
 15130                           tblptrl	equ	0xFF6
 15131                           tablat	equ	0xFF5
 15132                           prodh	equ	0xFF4
 15133                           prodl	equ	0xFF3
 15134                           intcon	equ	0xFF2
 15135                           postinc0	equ	0xFEE
 15136                           wreg	equ	0xFE8
 15137                           indf1	equ	0xFE7
 15138                           postdec1	equ	0xFE5
 15139                           plusw1	equ	0xFE3
 15140                           fsr1h	equ	0xFE2
 15141                           fsr1l	equ	0xFE1
 15142                           indf2	equ	0xFDF
 15143                           postinc2	equ	0xFDE
 15144                           postdec2	equ	0xFDD
 15145                           plusw2	equ	0xFDB
 15146                           fsr2h	equ	0xFDA
 15147                           fsr2l	equ	0xFD9
 15148                           status	equ	0xFD8
 15149                           
 15150 ;; *************** function _motor_speed_from_index *****************
 15151 ;; Defined at:
 15152 ;;		line 77 in file "motor.c"
 15153 ;; Parameters:    Size  Location     Type
 15154 ;;  speed_index     2   51[BANK0 ] unsigned int 
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;		None
 15157 ;; Return value:  Size  Location     Type
 15158 ;;                  2   51[BANK0 ] unsigned int 
 15159 ;; Registers used:
 15160 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15170 ;;Total ram usage:        2 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:   12
 15173 ;; This function calls:
 15174 ;;		__motor_get_speed_in_degrees
 15175 ;; This function is called by:
 15176 ;;		_display_prepare
 15177 ;; This function uses a non-reentrant model
 15178 ;;
 15179                           
 15180                           	psect	text35
 15181  00F620                     __ptext35:
 15182                           	opt stack 0
 15183  00F620                     _motor_speed_from_index:
 15184                           	opt stack 17
 15185                           
 15186                           ;motor.c: 79: return _motor_get_speed_in_degrees(speed_index);
 15187                           
 15188                           ; BSR set to: 1
 15189                           ;incstack = 0
 15190  00F620  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 15191  00F624  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 15192  00F628  EC8A  F067         	call	__motor_get_speed_in_degrees	;wreg free
 15193  00F62C  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 15194  00F630  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 15195  00F634  0012               	return	
 15196  00F636                     __end_of_motor_speed_from_index:
 15197                           	opt stack 0
 15198                           tblptru	equ	0xFF8
 15199                           tblptrh	equ	0xFF7
 15200                           tblptrl	equ	0xFF6
 15201                           tablat	equ	0xFF5
 15202                           prodh	equ	0xFF4
 15203                           prodl	equ	0xFF3
 15204                           intcon	equ	0xFF2
 15205                           postinc0	equ	0xFEE
 15206                           wreg	equ	0xFE8
 15207                           indf1	equ	0xFE7
 15208                           postdec1	equ	0xFE5
 15209                           plusw1	equ	0xFE3
 15210                           fsr1h	equ	0xFE2
 15211                           fsr1l	equ	0xFE1
 15212                           indf2	equ	0xFDF
 15213                           postinc2	equ	0xFDE
 15214                           postdec2	equ	0xFDD
 15215                           plusw2	equ	0xFDB
 15216                           fsr2h	equ	0xFDA
 15217                           fsr2l	equ	0xFD9
 15218                           status	equ	0xFD8
 15219                           
 15220 ;; *************** function __motor_get_speed_in_degrees *****************
 15221 ;; Defined at:
 15222 ;;		line 50 in file "motor.c"
 15223 ;; Parameters:    Size  Location     Type
 15224 ;;  speed_index     2   39[BANK0 ] unsigned int 
 15225 ;; Auto vars:     Size  Location     Type
 15226 ;;  lookup          4   47[BANK0 ] unsigned long 
 15227 ;;  speed           4   43[BANK0 ] float 
 15228 ;; Return value:  Size  Location     Type
 15229 ;;                  2   39[BANK0 ] unsigned int 
 15230 ;; Registers used:
 15231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15232 ;; Tracked objects:
 15233 ;;		On entry : 0/0
 15234 ;;		On exit  : 0/0
 15235 ;;		Unchanged: 0/0
 15236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15237 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15238 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15239 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15240 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15241 ;;Total ram usage:       12 bytes
 15242 ;; Hardware stack levels used:    1
 15243 ;; Hardware stack levels required when called:   11
 15244 ;; This function calls:
 15245 ;;		___fldiv
 15246 ;;		___fltol
 15247 ;;		___lmul
 15248 ;;		___xxtofl
 15249 ;; This function is called by:
 15250 ;;		_motor_speed_from_index
 15251 ;;		_motor_get_maximum_speed
 15252 ;;		_motor_get_current_speed
 15253 ;; This function uses a non-reentrant model
 15254 ;;
 15255                           
 15256                           	psect	text36
 15257  00CF14                     __ptext36:
 15258                           	opt stack 0
 15259  00CF14                     __motor_get_speed_in_degrees:
 15260                           	opt stack 17
 15261                           
 15262                           ;motor.c: 52: uint32_t lookup;;motor.c: 53: float speed;;motor.c: 55: lookup = motor_spe
      +                          ed_lookup[speed_index];
 15263                           
 15264                           ;incstack = 0
 15265  00CF14  90D8               	bcf	status,0,c
 15266  00CF16  0100               	movlb	0	; () banked
 15267  00CF18  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 15268  00CF1A  6EF6               	movwf	tblptrl,c
 15269  00CF1C  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 15270  00CF1E  6EF7               	movwf	tblptrh,c
 15271  00CF20  0E8B               	movlw	low _motor_speed_lookup
 15272  00CF22  26F6               	addwf	tblptrl,f,c
 15273  00CF24  0E90               	movlw	high _motor_speed_lookup
 15274  00CF26  22F7               	addwfc	tblptrh,f,c
 15275  00CF28                     	if	1	;There are 3 active tblptr bytes
 15276  00CF28  6AF8               	clrf	tblptru,c
 15277  00CF2A  0E00               	movlw	low (__mediumconst shr (0+16))
 15278  00CF2C  22F8               	addwfc	tblptru,f,c
 15279  00CF2E                     	endif
 15280  00CF2E  0009               	tblrd		*+
 15281  00CF30  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 15282  00CF34  0009               	tblrd		*+
 15283  00CF36  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 15284  00CF3A  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 15285  00CF3E  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 15286  00CF42  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 15287  00CF44  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 15288                           
 15289                           ; BSR set to: 0
 15290                           ;motor.c: 56: lookup *= 16;
 15291  00CF46  0E04               	movlw	4
 15292  00CF48                     u17175:
 15293  00CF48  90D8               	bcf	status,0,c
 15294  00CF4A  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 15295  00CF4C  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 15296  00CF4E  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 15297  00CF50  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 15298  00CF52  2EE8               	decfsz	wreg,f,c
 15299  00CF54  D7F9               	goto	u17175
 15300                           
 15301                           ; BSR set to: 0
 15302                           ;motor.c: 57: lookup *= 360;
 15303  00CF56  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 15304  00CF5A  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 15305  00CF5E  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 15306  00CF62  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 15307  00CF66  0E68               	movlw	104
 15308  00CF68  6F64               	movwf	___lmul@multiplicand& (0+255),b
 15309  00CF6A  0E01               	movlw	1
 15310  00CF6C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15311  00CF6E  0E00               	movlw	0
 15312  00CF70  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15313  00CF72  0E00               	movlw	0
 15314  00CF74  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15315  00CF76  EC40  F077         	call	___lmul	;wreg free
 15316  00CF7A  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 15317  00CF7E  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 15318  00CF82  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 15319  00CF86  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 15320                           
 15321                           ;motor.c: 58: lookup *= 100;
 15322  00CF8A  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 15323  00CF8E  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 15324  00CF92  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 15325  00CF96  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 15326  00CF9A  0E64               	movlw	100
 15327  00CF9C  0100               	movlb	0	; () banked
 15328  00CF9E  6F64               	movwf	___lmul@multiplicand& (0+255),b
 15329  00CFA0  0E00               	movlw	0
 15330  00CFA2  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15331  00CFA4  0E00               	movlw	0
 15332  00CFA6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15333  00CFA8  0E00               	movlw	0
 15334  00CFAA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15335  00CFAC  EC40  F077         	call	___lmul	;wreg free
 15336  00CFB0  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 15337  00CFB4  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 15338  00CFB8  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 15339  00CFBC  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 15340                           
 15341                           ;motor.c: 60: speed = (float) lookup;
 15342  00CFC0  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 15343  00CFC4  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 15344  00CFC8  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 15345  00CFCC  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 15346  00CFD0  0E00               	movlw	0
 15347  00CFD2  EC46  F066         	call	___xxtofl
 15348  00CFD6  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 15349  00CFDA  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 15350  00CFDE  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 15351  00CFE2  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 15352                           
 15353                           ;motor.c: 61: speed /= config.full_circle_in_steps;
 15354  00CFE6  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 15355  00CFEA  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 15356  00CFEE  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 15357  00CFF2  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 15358  00CFF6  C11F  F060         	movff	_config,___xxtofl@val
 15359  00CFFA  C120  F061         	movff	_config+1,___xxtofl@val+1
 15360  00CFFE  C121  F062         	movff	_config+2,___xxtofl@val+2
 15361  00D002  C122  F063         	movff	_config+3,___xxtofl@val+3
 15362  00D006  0E00               	movlw	0
 15363  00D008  EC46  F066         	call	___xxtofl
 15364  00D00C  C060  F072         	movff	?___xxtofl,___fldiv@a
 15365  00D010  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 15366  00D014  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 15367  00D018  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 15368  00D01C  ECFA  F060         	call	___fldiv	;wreg free
 15369  00D020  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 15370  00D024  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 15371  00D028  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 15372  00D02C  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 15373                           
 15374                           ;motor.c: 64: return (uint16_t) speed;
 15375  00D030  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 15376  00D034  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 15377  00D038  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 15378  00D03C  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 15379  00D040  ECD1  F06D         	call	___fltol	;wreg free
 15380  00D044  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 15381  00D048  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 15382  00D04C  0012               	return	
 15383  00D04E                     __end_of__motor_get_speed_in_degrees:
 15384                           	opt stack 0
 15385                           tblptru	equ	0xFF8
 15386                           tblptrh	equ	0xFF7
 15387                           tblptrl	equ	0xFF6
 15388                           tablat	equ	0xFF5
 15389                           prodh	equ	0xFF4
 15390                           prodl	equ	0xFF3
 15391                           intcon	equ	0xFF2
 15392                           postinc0	equ	0xFEE
 15393                           wreg	equ	0xFE8
 15394                           indf1	equ	0xFE7
 15395                           postdec1	equ	0xFE5
 15396                           plusw1	equ	0xFE3
 15397                           fsr1h	equ	0xFE2
 15398                           fsr1l	equ	0xFE1
 15399                           indf2	equ	0xFDF
 15400                           postinc2	equ	0xFDE
 15401                           postdec2	equ	0xFDD
 15402                           plusw2	equ	0xFDB
 15403                           fsr2h	equ	0xFDA
 15404                           fsr2l	equ	0xFD9
 15405                           status	equ	0xFD8
 15406                           
 15407 ;; *************** function ___xxtofl *****************
 15408 ;; Defined at:
 15409 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 15410 ;; Parameters:    Size  Location     Type
 15411 ;;  sign            1    wreg     unsigned char 
 15412 ;;  val             4    0[BANK0 ] long 
 15413 ;; Auto vars:     Size  Location     Type
 15414 ;;  sign            1    8[BANK0 ] unsigned char 
 15415 ;;  arg             4   10[BANK0 ] unsigned long 
 15416 ;;  exp             1    9[BANK0 ] unsigned char 
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  4    0[BANK0 ] unsigned char 
 15419 ;; Registers used:
 15420 ;;		wreg, status,2, status,0
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15426 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15427 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15429 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15430 ;;Total ram usage:       14 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:   10
 15433 ;; This function calls:
 15434 ;;		Nothing
 15435 ;; This function is called by:
 15436 ;;		_main
 15437 ;;		_motor_steps_from_degrees
 15438 ;;		__motor_get_speed_in_degrees
 15439 ;;		_encoder_statemachine
 15440 ;; This function uses a non-reentrant model
 15441 ;;
 15442                           
 15443                           	psect	text37
 15444  00CC8C                     __ptext37:
 15445                           	opt stack 0
 15446  00CC8C                     ___xxtofl:
 15447                           	opt stack 17
 15448                           
 15449                           ;incstack = 0
 15450                           ;___xxtofl@sign stored from wreg
 15451  00CC8C  0100               	movlb	0	; () banked
 15452  00CC8E  6F68               	movwf	___xxtofl@sign& (0+255),b
 15453  00CC90  0100               	movlb	0	; () banked
 15454  00CC92  5168               	movf	___xxtofl@sign& (0+255),w,b
 15455  00CC94  A4D8               	btfss	status,2,c
 15456                           
 15457                           ; BSR set to: 0
 15458  00CC96  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15459  00CC98  D01A               	goto	l3279
 15460                           
 15461                           ; BSR set to: 0
 15462  00CC9A  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15463  00CC9E  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15464  00CCA2  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15465  00CCA6  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15466  00CCAA  1F64               	comf	??___xxtofl& (0+255),f,b
 15467  00CCAC  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15468  00CCAE  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15469  00CCB0  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15470  00CCB2  2B64               	incf	??___xxtofl& (0+255),f,b
 15471  00CCB4  0E00               	movlw	0
 15472  00CCB6  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15473  00CCB8  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15474  00CCBA  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15475  00CCBC  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15476  00CCC0  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15477  00CCC4  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15478  00CCC8  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15479  00CCCC  D008               	goto	l3280
 15480  00CCCE                     l3279:
 15481                           
 15482                           ; BSR set to: 0
 15483  00CCCE  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15484  00CCD2  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15485  00CCD6  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15486  00CCDA  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15487  00CCDE                     l3280:
 15488                           
 15489                           ; BSR set to: 0
 15490                           
 15491                           ; BSR set to: 0
 15492  00CCDE  5160               	movf	___xxtofl@val& (0+255),w,b
 15493  00CCE0  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15494  00CCE2  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15495  00CCE4  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15496  00CCE6  A4D8               	btfss	status,2,c
 15497  00CCE8  D009               	goto	l3281
 15498                           
 15499                           ; BSR set to: 0
 15500  00CCEA  0E00               	movlw	0
 15501  00CCEC  6F60               	movwf	?___xxtofl& (0+255),b
 15502  00CCEE  0E00               	movlw	0
 15503  00CCF0  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 15504  00CCF2  0E00               	movlw	0
 15505  00CCF4  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 15506  00CCF6  0E00               	movlw	0
 15507  00CCF8  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 15508                           
 15509                           ; BSR set to: 0
 15510  00CCFA  0012               	return	
 15511  00CCFC                     l3281:
 15512                           
 15513                           ; BSR set to: 0
 15514                           
 15515                           ; BSR set to: 0
 15516  00CCFC  0E96               	movlw	150
 15517  00CCFE  6F69               	movwf	___xxtofl@exp& (0+255),b
 15518  00CD00  D006               	goto	l3283
 15519  00CD02                     
 15520                           ; BSR set to: 0
 15521                           
 15522                           ; BSR set to: 0
 15523  00CD02  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15524  00CD04  90D8               	bcf	status,0,c
 15525  00CD06  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15526  00CD08  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15527  00CD0A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15528  00CD0C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15529  00CD0E                     l3283:
 15530                           
 15531                           ; BSR set to: 0
 15532                           
 15533                           ; BSR set to: 0
 15534  00CD0E  0E00               	movlw	0
 15535  00CD10  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15536  00CD12  6F64               	movwf	??___xxtofl& (0+255),b
 15537  00CD14  0E00               	movlw	0
 15538  00CD16  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15539  00CD18  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15540  00CD1A  0E00               	movlw	0
 15541  00CD1C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15542  00CD1E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15543  00CD20  0EFE               	movlw	254
 15544  00CD22  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15545  00CD24  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15546  00CD26  5164               	movf	??___xxtofl& (0+255),w,b
 15547  00CD28  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15548  00CD2A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15549  00CD2C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15550  00CD2E  B4D8               	btfsc	status,2,c
 15551  00CD30  D00D               	goto	l3286
 15552  00CD32  D7E7               	goto	l3284
 15553  00CD34                     
 15554                           ; BSR set to: 0
 15555                           
 15556                           ; BSR set to: 0
 15557  00CD34  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15558                           
 15559                           ; BSR set to: 0
 15560  00CD36  0E01               	movlw	1
 15561  00CD38  276A               	addwf	___xxtofl@arg& (0+255),f,b
 15562  00CD3A  0E00               	movlw	0
 15563  00CD3C  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 15564  00CD3E  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 15565  00CD40  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 15566                           
 15567                           ; BSR set to: 0
 15568  00CD42  90D8               	bcf	status,0,c
 15569  00CD44  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15570  00CD46  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15571  00CD48  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15572  00CD4A  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15573  00CD4C                     l3286:
 15574                           
 15575                           ; BSR set to: 0
 15576  00CD4C  0E00               	movlw	0
 15577  00CD4E  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15578  00CD50  6F64               	movwf	??___xxtofl& (0+255),b
 15579  00CD52  0E00               	movlw	0
 15580  00CD54  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15581  00CD56  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15582  00CD58  0E00               	movlw	0
 15583  00CD5A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15584  00CD5C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15585  00CD5E  0EFF               	movlw	255
 15586  00CD60  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15587  00CD62  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15588  00CD64  5164               	movf	??___xxtofl& (0+255),w,b
 15589  00CD66  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15590  00CD68  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15591  00CD6A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15592  00CD6C  B4D8               	btfsc	status,2,c
 15593  00CD6E  D007               	goto	l3289
 15594  00CD70  D7E1               	goto	l3287
 15595  00CD72                     
 15596                           ; BSR set to: 0
 15597                           
 15598                           ; BSR set to: 0
 15599  00CD72  0769               	decf	___xxtofl@exp& (0+255),f,b
 15600  00CD74  90D8               	bcf	status,0,c
 15601  00CD76  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 15602  00CD78  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 15603  00CD7A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 15604  00CD7C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 15605  00CD7E                     l3289:
 15606                           
 15607                           ; BSR set to: 0
 15608                           
 15609                           ; BSR set to: 0
 15610  00CD7E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 15611  00CD80  D003               	goto	u16950
 15612                           
 15613                           ; BSR set to: 0
 15614  00CD82  0E02               	movlw	2
 15615  00CD84  6169               	cpfslt	___xxtofl@exp& (0+255),b
 15616  00CD86  D7F5               	goto	l3290
 15617  00CD88                     u16950:
 15618                           
 15619                           ; BSR set to: 0
 15620                           
 15621                           ; BSR set to: 0
 15622  00CD88  A169               	btfss	___xxtofl@exp& (0+255),0,b
 15623                           
 15624                           ; BSR set to: 0
 15625  00CD8A  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 15626                           
 15627                           ; BSR set to: 0
 15628                           
 15629                           ; BSR set to: 0
 15630  00CD8C  90D8               	bcf	status,0,c
 15631  00CD8E  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 15632                           
 15633                           ; BSR set to: 0
 15634  00CD90  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 15635  00CD94  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15636  00CD96  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15637  00CD98  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 15638  00CD9A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 15639  00CD9E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15640  00CDA0  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15641  00CDA2  6B64               	clrf	??___xxtofl& (0+255),b
 15642  00CDA4  5164               	movf	??___xxtofl& (0+255),w,b
 15643  00CDA6  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 15644  00CDA8  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 15645  00CDAA  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 15646  00CDAC  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 15647  00CDAE  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 15648  00CDB0  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 15649  00CDB2  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 15650                           
 15651                           ; BSR set to: 0
 15652  00CDB4  5168               	movf	___xxtofl@sign& (0+255),w,b
 15653  00CDB6  A4D8               	btfss	status,2,c
 15654                           
 15655                           ; BSR set to: 0
 15656  00CDB8  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15657  00CDBA  D001               	goto	l3295
 15658                           
 15659                           ; BSR set to: 0
 15660  00CDBC  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 15661  00CDBE                     l3295:
 15662                           
 15663                           ; BSR set to: 0
 15664                           
 15665                           ; BSR set to: 0
 15666  00CDBE  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 15667  00CDC2  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 15668  00CDC6  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 15669  00CDCA  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 15670  00CDCE  0012               	return	
 15671  00CDD0                     __end_of___xxtofl:
 15672                           	opt stack 0
 15673                           tblptru	equ	0xFF8
 15674                           tblptrh	equ	0xFF7
 15675                           tblptrl	equ	0xFF6
 15676                           tablat	equ	0xFF5
 15677                           prodh	equ	0xFF4
 15678                           prodl	equ	0xFF3
 15679                           intcon	equ	0xFF2
 15680                           postinc0	equ	0xFEE
 15681                           wreg	equ	0xFE8
 15682                           indf1	equ	0xFE7
 15683                           postdec1	equ	0xFE5
 15684                           plusw1	equ	0xFE3
 15685                           fsr1h	equ	0xFE2
 15686                           fsr1l	equ	0xFE1
 15687                           indf2	equ	0xFDF
 15688                           postinc2	equ	0xFDE
 15689                           postdec2	equ	0xFDD
 15690                           plusw2	equ	0xFDB
 15691                           fsr2h	equ	0xFDA
 15692                           fsr2l	equ	0xFD9
 15693                           status	equ	0xFD8
 15694                           
 15695 ;; *************** function ___lmul *****************
 15696 ;; Defined at:
 15697 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 15698 ;; Parameters:    Size  Location     Type
 15699 ;;  multiplier      4    0[BANK0 ] unsigned long 
 15700 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 15701 ;; Auto vars:     Size  Location     Type
 15702 ;;  product         4    8[BANK0 ] unsigned long 
 15703 ;; Return value:  Size  Location     Type
 15704 ;;                  4    0[BANK0 ] unsigned long 
 15705 ;; Registers used:
 15706 ;;		wreg, status,2, status,0
 15707 ;; Tracked objects:
 15708 ;;		On entry : 0/0
 15709 ;;		On exit  : 0/0
 15710 ;;		Unchanged: 0/0
 15711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15712 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15713 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15715 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15716 ;;Total ram usage:       12 bytes
 15717 ;; Hardware stack levels used:    1
 15718 ;; Hardware stack levels required when called:   10
 15719 ;; This function calls:
 15720 ;;		Nothing
 15721 ;; This function is called by:
 15722 ;;		__motor_get_speed_in_degrees
 15723 ;; This function uses a non-reentrant model
 15724 ;;
 15725                           
 15726                           	psect	text38
 15727  00EE80                     __ptext38:
 15728                           	opt stack 0
 15729  00EE80                     ___lmul:
 15730                           	opt stack 17
 15731                           
 15732                           ; BSR set to: 0
 15733                           ;incstack = 0
 15734  00EE80  0E00               	movlw	0
 15735  00EE82  0100               	movlb	0	; () banked
 15736  00EE84  6F68               	movwf	___lmul@product& (0+255),b
 15737  00EE86  0E00               	movlw	0
 15738  00EE88  6F69               	movwf	(___lmul@product+1)& (0+255),b
 15739  00EE8A  0E00               	movlw	0
 15740  00EE8C  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 15741  00EE8E  0E00               	movlw	0
 15742  00EE90  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 15743  00EE92                     
 15744                           ; BSR set to: 0
 15745                           
 15746                           ; BSR set to: 0
 15747  00EE92  A160               	btfss	___lmul@multiplier& (0+255),0,b
 15748  00EE94  D008               	goto	l2646
 15749                           
 15750                           ; BSR set to: 0
 15751  00EE96  5164               	movf	___lmul@multiplicand& (0+255),w,b
 15752  00EE98  2768               	addwf	___lmul@product& (0+255),f,b
 15753  00EE9A  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 15754  00EE9C  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 15755  00EE9E  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 15756  00EEA0  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 15757  00EEA2  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 15758  00EEA4  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 15759  00EEA6                     l2646:
 15760                           
 15761                           ; BSR set to: 0
 15762                           
 15763                           ; BSR set to: 0
 15764  00EEA6  90D8               	bcf	status,0,c
 15765  00EEA8  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 15766  00EEAA  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 15767  00EEAC  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 15768  00EEAE  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 15769                           
 15770                           ; BSR set to: 0
 15771  00EEB0  90D8               	bcf	status,0,c
 15772  00EEB2  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 15773  00EEB4  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 15774  00EEB6  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 15775  00EEB8  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 15776  00EEBA  5160               	movf	___lmul@multiplier& (0+255),w,b
 15777  00EEBC  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 15778  00EEBE  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 15779  00EEC0  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 15780  00EEC2  A4D8               	btfss	status,2,c
 15781  00EEC4  D7E6               	goto	l2645
 15782                           
 15783                           ; BSR set to: 0
 15784  00EEC6  C068  F060         	movff	___lmul@product,?___lmul
 15785  00EECA  C069  F061         	movff	___lmul@product+1,?___lmul+1
 15786  00EECE  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 15787  00EED2  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 15788                           
 15789                           ; BSR set to: 0
 15790  00EED6  0012               	return		;funcret
 15791  00EED8                     __end_of___lmul:
 15792                           	opt stack 0
 15793                           tblptru	equ	0xFF8
 15794                           tblptrh	equ	0xFF7
 15795                           tblptrl	equ	0xFF6
 15796                           tablat	equ	0xFF5
 15797                           prodh	equ	0xFF4
 15798                           prodl	equ	0xFF3
 15799                           intcon	equ	0xFF2
 15800                           postinc0	equ	0xFEE
 15801                           wreg	equ	0xFE8
 15802                           indf1	equ	0xFE7
 15803                           postdec1	equ	0xFE5
 15804                           plusw1	equ	0xFE3
 15805                           fsr1h	equ	0xFE2
 15806                           fsr1l	equ	0xFE1
 15807                           indf2	equ	0xFDF
 15808                           postinc2	equ	0xFDE
 15809                           postdec2	equ	0xFDD
 15810                           plusw2	equ	0xFDB
 15811                           fsr2h	equ	0xFDA
 15812                           fsr2l	equ	0xFD9
 15813                           status	equ	0xFD8
 15814                           
 15815 ;; *************** function ___fltol *****************
 15816 ;; Defined at:
 15817 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  f1              4    0[BANK0 ] unsigned long 
 15820 ;; Auto vars:     Size  Location     Type
 15821 ;;  exp1            1    9[BANK0 ] unsigned char 
 15822 ;;  sign1           1    8[BANK0 ] unsigned char 
 15823 ;; Return value:  Size  Location     Type
 15824 ;;                  4    0[BANK0 ] long 
 15825 ;; Registers used:
 15826 ;;		wreg, status,2, status,0
 15827 ;; Tracked objects:
 15828 ;;		On entry : 0/0
 15829 ;;		On exit  : 0/0
 15830 ;;		Unchanged: 0/0
 15831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15835 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15836 ;;Total ram usage:       10 bytes
 15837 ;; Hardware stack levels used:    1
 15838 ;; Hardware stack levels required when called:   10
 15839 ;; This function calls:
 15840 ;;		Nothing
 15841 ;; This function is called by:
 15842 ;;		_main
 15843 ;;		_motor_steps_from_degrees
 15844 ;;		__motor_get_speed_in_degrees
 15845 ;;		_encoder_statemachine
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           	psect	text39
 15850  00DBA2                     __ptext39:
 15851                           	opt stack 0
 15852  00DBA2                     ___fltol:
 15853                           	opt stack 17
 15854                           
 15855                           ; BSR set to: 0
 15856                           ;incstack = 0
 15857  00DBA2  0100               	movlb	0	; () banked
 15858  00DBA4  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15859  00DBA6  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15860  00DBA8  6F69               	movwf	___fltol@exp1& (0+255),b
 15861  00DBAA  5169               	movf	___fltol@exp1& (0+255),w,b
 15862  00DBAC  A4D8               	btfss	status,2,c
 15863  00DBAE  D009               	goto	l2924
 15864                           
 15865                           ; BSR set to: 0
 15866  00DBB0  0E00               	movlw	0
 15867  00DBB2  6F60               	movwf	?___fltol& (0+255),b
 15868  00DBB4  0E00               	movlw	0
 15869  00DBB6  6F61               	movwf	(?___fltol+1)& (0+255),b
 15870  00DBB8  0E00               	movlw	0
 15871  00DBBA  6F62               	movwf	(?___fltol+2)& (0+255),b
 15872  00DBBC  0E00               	movlw	0
 15873  00DBBE  6F63               	movwf	(?___fltol+3)& (0+255),b
 15874                           
 15875                           ; BSR set to: 0
 15876  00DBC0  0012               	return	
 15877  00DBC2                     l2924:
 15878                           
 15879                           ; BSR set to: 0
 15880                           
 15881                           ; BSR set to: 0
 15882  00DBC2  C060  F064         	movff	___fltol@f1,??___fltol
 15883  00DBC6  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 15884  00DBCA  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 15885  00DBCE  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 15886  00DBD2  0E20               	movlw	32
 15887  00DBD4  D005               	goto	u16830
 15888  00DBD6                     u16835:
 15889  00DBD6  90D8               	bcf	status,0,c
 15890  00DBD8  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 15891  00DBDA  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 15892  00DBDC  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 15893  00DBDE  3364               	rrcf	??___fltol& (0+255),f,b
 15894  00DBE0                     u16830:
 15895  00DBE0  2EE8               	decfsz	wreg,f,c
 15896  00DBE2  D7F9               	goto	u16835
 15897  00DBE4  5164               	movf	??___fltol& (0+255),w,b
 15898  00DBE6  6F68               	movwf	___fltol@sign1& (0+255),b
 15899                           
 15900                           ; BSR set to: 0
 15901  00DBE8  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 15902                           
 15903                           ; BSR set to: 0
 15904  00DBEA  0EFF               	movlw	255
 15905  00DBEC  1760               	andwf	___fltol@f1& (0+255),f,b
 15906  00DBEE  0EFF               	movlw	255
 15907  00DBF0  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 15908  00DBF2  0EFF               	movlw	255
 15909  00DBF4  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 15910  00DBF6  0E00               	movlw	0
 15911  00DBF8  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 15912                           
 15913                           ; BSR set to: 0
 15914  00DBFA  0E96               	movlw	150
 15915  00DBFC  5F69               	subwf	___fltol@exp1& (0+255),f,b
 15916                           
 15917                           ; BSR set to: 0
 15918  00DBFE  AF69               	btfss	___fltol@exp1& (0+255),7,b
 15919  00DC00  D016               	goto	l2926
 15920                           
 15921                           ; BSR set to: 0
 15922  00DC02  5169               	movf	___fltol@exp1& (0+255),w,b
 15923  00DC04  0A80               	xorlw	128
 15924  00DC06  0F97               	addlw	151
 15925  00DC08  B0D8               	btfsc	status,0,c
 15926  00DC0A  D009               	goto	l2927
 15927                           
 15928                           ; BSR set to: 0
 15929  00DC0C  0E00               	movlw	0
 15930  00DC0E  6F60               	movwf	?___fltol& (0+255),b
 15931  00DC10  0E00               	movlw	0
 15932  00DC12  6F61               	movwf	(?___fltol+1)& (0+255),b
 15933  00DC14  0E00               	movlw	0
 15934  00DC16  6F62               	movwf	(?___fltol+2)& (0+255),b
 15935  00DC18  0E00               	movlw	0
 15936  00DC1A  6F63               	movwf	(?___fltol+3)& (0+255),b
 15937                           
 15938                           ; BSR set to: 0
 15939  00DC1C  0012               	return	
 15940  00DC1E                     l2927:
 15941                           
 15942                           ; BSR set to: 0
 15943                           
 15944                           ; BSR set to: 0
 15945                           
 15946                           ; BSR set to: 0
 15947  00DC1E  90D8               	bcf	status,0,c
 15948  00DC20  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15949  00DC22  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15950  00DC24  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15951  00DC26  3360               	rrcf	___fltol@f1& (0+255),f,b
 15952                           
 15953                           ; BSR set to: 0
 15954  00DC28  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 15955  00DC2A  D7F9               	goto	l2927
 15956                           
 15957                           ; BSR set to: 0
 15958  00DC2C  D015               	goto	u16870
 15959  00DC2E                     l2926:
 15960                           
 15961                           ; BSR set to: 0
 15962                           
 15963                           ; BSR set to: 0
 15964  00DC2E  0E1F               	movlw	31
 15965  00DC30  6569               	cpfsgt	___fltol@exp1& (0+255),b
 15966  00DC32  D00F               	goto	l2932
 15967                           
 15968                           ; BSR set to: 0
 15969  00DC34  0E00               	movlw	0
 15970  00DC36  6F60               	movwf	?___fltol& (0+255),b
 15971  00DC38  0E00               	movlw	0
 15972  00DC3A  6F61               	movwf	(?___fltol+1)& (0+255),b
 15973  00DC3C  0E00               	movlw	0
 15974  00DC3E  6F62               	movwf	(?___fltol+2)& (0+255),b
 15975  00DC40  0E00               	movlw	0
 15976  00DC42  6F63               	movwf	(?___fltol+3)& (0+255),b
 15977                           
 15978                           ; BSR set to: 0
 15979  00DC44  0012               	return	
 15980  00DC46                     
 15981                           ; BSR set to: 0
 15982                           
 15983                           ; BSR set to: 0
 15984  00DC46  90D8               	bcf	status,0,c
 15985  00DC48  3760               	rlcf	___fltol@f1& (0+255),f,b
 15986  00DC4A  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15987  00DC4C  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15988  00DC4E  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15989  00DC50  0769               	decf	___fltol@exp1& (0+255),f,b
 15990  00DC52                     l2932:
 15991                           
 15992                           ; BSR set to: 0
 15993                           
 15994                           ; BSR set to: 0
 15995  00DC52  5169               	movf	___fltol@exp1& (0+255),w,b
 15996  00DC54  A4D8               	btfss	status,2,c
 15997  00DC56  D7F7               	goto	l2933
 15998  00DC58                     u16870:
 15999                           
 16000                           ; BSR set to: 0
 16001                           
 16002                           ; BSR set to: 0
 16003                           
 16004                           ; BSR set to: 0
 16005  00DC58  5168               	movf	___fltol@sign1& (0+255),w,b
 16006  00DC5A  B4D8               	btfsc	status,2,c
 16007  00DC5C  D008               	goto	l2935
 16008                           
 16009                           ; BSR set to: 0
 16010  00DC5E  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 16011  00DC60  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 16012  00DC62  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 16013  00DC64  6D60               	negf	___fltol@f1& (0+255),b
 16014  00DC66  0E00               	movlw	0
 16015  00DC68  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 16016  00DC6A  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 16017  00DC6C  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 16018  00DC6E                     l2935:
 16019                           
 16020                           ; BSR set to: 0
 16021                           
 16022                           ; BSR set to: 0
 16023  00DC6E  C060  F060         	movff	___fltol@f1,?___fltol
 16024  00DC72  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 16025  00DC76  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 16026  00DC7A  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 16027  00DC7E  0012               	return	
 16028  00DC80                     __end_of___fltol:
 16029                           	opt stack 0
 16030                           tblptru	equ	0xFF8
 16031                           tblptrh	equ	0xFF7
 16032                           tblptrl	equ	0xFF6
 16033                           tablat	equ	0xFF5
 16034                           prodh	equ	0xFF4
 16035                           prodl	equ	0xFF3
 16036                           intcon	equ	0xFF2
 16037                           postinc0	equ	0xFEE
 16038                           wreg	equ	0xFE8
 16039                           indf1	equ	0xFE7
 16040                           postdec1	equ	0xFE5
 16041                           plusw1	equ	0xFE3
 16042                           fsr1h	equ	0xFE2
 16043                           fsr1l	equ	0xFE1
 16044                           indf2	equ	0xFDF
 16045                           postinc2	equ	0xFDE
 16046                           postdec2	equ	0xFDD
 16047                           plusw2	equ	0xFDB
 16048                           fsr2h	equ	0xFDA
 16049                           fsr2l	equ	0xFD9
 16050                           status	equ	0xFD8
 16051                           
 16052 ;; *************** function ___fldiv *****************
 16053 ;; Defined at:
 16054 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;  b               4   14[BANK0 ] long 
 16057 ;;  a               4   18[BANK0 ] long 
 16058 ;; Auto vars:     Size  Location     Type
 16059 ;;  grs             4   33[BANK0 ] unsigned long 
 16060 ;;  rem             4   26[BANK0 ] unsigned long 
 16061 ;;  new_exp         2   31[BANK0 ] int 
 16062 ;;  aexp            1   38[BANK0 ] unsigned char 
 16063 ;;  bexp            1   37[BANK0 ] unsigned char 
 16064 ;;  sign            1   30[BANK0 ] unsigned char 
 16065 ;; Return value:  Size  Location     Type
 16066 ;;                  4   14[BANK0 ] unsigned char 
 16067 ;; Registers used:
 16068 ;;		wreg, status,2, status,0
 16069 ;; Tracked objects:
 16070 ;;		On entry : 0/0
 16071 ;;		On exit  : 0/0
 16072 ;;		Unchanged: 0/0
 16073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16074 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16075 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16076 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16077 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16078 ;;Total ram usage:       25 bytes
 16079 ;; Hardware stack levels used:    1
 16080 ;; Hardware stack levels required when called:   10
 16081 ;; This function calls:
 16082 ;;		Nothing
 16083 ;; This function is called by:
 16084 ;;		_main
 16085 ;;		_motor_steps_from_degrees
 16086 ;;		__motor_get_speed_in_degrees
 16087 ;;		_encoder_statemachine
 16088 ;; This function uses a non-reentrant model
 16089 ;;
 16090                           
 16091                           	psect	text40
 16092  00C1F4                     __ptext40:
 16093                           	opt stack 0
 16094  00C1F4                     ___fldiv:
 16095                           	opt stack 17
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;incstack = 0
 16099  00C1F4  0100               	movlb	0	; () banked
 16100  00C1F6  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 16101  00C1F8  0B80               	andlw	128
 16102  00C1FA  6F7E               	movwf	___fldiv@sign& (0+255),b
 16103  00C1FC  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 16104  00C1FE  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 16105  00C200  6F85               	movwf	___fldiv@bexp& (0+255),b
 16106                           
 16107                           ; BSR set to: 0
 16108  00C202  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 16109                           
 16110                           ; BSR set to: 0
 16111  00C204  8185               	bsf	___fldiv@bexp& (0+255),0,b
 16112                           
 16113                           ; BSR set to: 0
 16114                           
 16115                           ; BSR set to: 0
 16116  00C206  5185               	movf	___fldiv@bexp& (0+255),w,b
 16117  00C208  B4D8               	btfsc	status,2,c
 16118  00C20A  D00D               	goto	l3198
 16119                           
 16120                           ; BSR set to: 0
 16121  00C20C  2985               	incf	___fldiv@bexp& (0+255),w,b
 16122  00C20E  A4D8               	btfss	status,2,c
 16123  00C210  D008               	goto	l3199
 16124                           
 16125                           ; BSR set to: 0
 16126  00C212  0E00               	movlw	0
 16127  00C214  6F6E               	movwf	___fldiv@b& (0+255),b
 16128  00C216  0E00               	movlw	0
 16129  00C218  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16130  00C21A  0E00               	movlw	0
 16131  00C21C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16132  00C21E  0E00               	movlw	0
 16133  00C220  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16134  00C222                     l3199:
 16135                           
 16136                           ; BSR set to: 0
 16137                           
 16138                           ; BSR set to: 0
 16139  00C222  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 16140  00C224  D006               	goto	L38
 16141  00C226                     l3198:
 16142                           
 16143                           ; BSR set to: 0
 16144                           
 16145                           ; BSR set to: 0
 16146  00C226  0E00               	movlw	0
 16147  00C228  6F6E               	movwf	___fldiv@b& (0+255),b
 16148  00C22A  0E00               	movlw	0
 16149  00C22C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16150  00C22E  0E00               	movlw	0
 16151  00C230  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16152  00C232                     L38:
 16153  00C232  0E00               	movlw	0
 16154  00C234  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16155                           
 16156                           ; BSR set to: 0
 16157                           
 16158                           ; BSR set to: 0
 16159  00C236  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16160  00C238  0B80               	andlw	128
 16161  00C23A  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 16162                           
 16163                           ; BSR set to: 0
 16164  00C23C  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16165  00C23E  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 16166  00C240  6F86               	movwf	___fldiv@aexp& (0+255),b
 16167                           
 16168                           ; BSR set to: 0
 16169  00C242  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 16170                           
 16171                           ; BSR set to: 0
 16172  00C244  8186               	bsf	___fldiv@aexp& (0+255),0,b
 16173                           
 16174                           ; BSR set to: 0
 16175                           
 16176                           ; BSR set to: 0
 16177  00C246  5186               	movf	___fldiv@aexp& (0+255),w,b
 16178  00C248  B4D8               	btfsc	status,2,c
 16179  00C24A  D00D               	goto	l3202
 16180                           
 16181                           ; BSR set to: 0
 16182  00C24C  2986               	incf	___fldiv@aexp& (0+255),w,b
 16183  00C24E  A4D8               	btfss	status,2,c
 16184  00C250  D008               	goto	l3203
 16185                           
 16186                           ; BSR set to: 0
 16187  00C252  0E00               	movlw	0
 16188  00C254  6F72               	movwf	___fldiv@a& (0+255),b
 16189  00C256  0E00               	movlw	0
 16190  00C258  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 16191  00C25A  0E00               	movlw	0
 16192  00C25C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 16193  00C25E  0E00               	movlw	0
 16194  00C260  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 16195  00C262                     l3203:
 16196                           
 16197                           ; BSR set to: 0
 16198                           
 16199                           ; BSR set to: 0
 16200  00C262  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 16201  00C264  D006               	goto	L39
 16202  00C266                     l3202:
 16203                           
 16204                           ; BSR set to: 0
 16205                           
 16206                           ; BSR set to: 0
 16207  00C266  0E00               	movlw	0
 16208  00C268  6F72               	movwf	___fldiv@a& (0+255),b
 16209  00C26A  0E00               	movlw	0
 16210  00C26C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 16211  00C26E  0E00               	movlw	0
 16212  00C270  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 16213  00C272                     L39:
 16214  00C272  0E00               	movlw	0
 16215  00C274  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 16216                           
 16217                           ; BSR set to: 0
 16218                           
 16219                           ; BSR set to: 0
 16220  00C276  5172               	movf	___fldiv@a& (0+255),w,b
 16221  00C278  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16222  00C27A  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16223  00C27C  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16224  00C27E  A4D8               	btfss	status,2,c
 16225  00C280  D017               	goto	l3205
 16226                           
 16227                           ; BSR set to: 0
 16228  00C282  0E00               	movlw	0
 16229  00C284  6F6E               	movwf	___fldiv@b& (0+255),b
 16230  00C286  0E00               	movlw	0
 16231  00C288  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16232  00C28A  0E00               	movlw	0
 16233  00C28C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16234  00C28E  0E00               	movlw	0
 16235  00C290  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16236                           
 16237                           ; BSR set to: 0
 16238  00C292  0E80               	movlw	128
 16239  00C294  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16240  00C296  0E7F               	movlw	127
 16241  00C298  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16242                           
 16243                           ; BSR set to: 0
 16244  00C29A  517E               	movf	___fldiv@sign& (0+255),w,b
 16245  00C29C  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16246                           
 16247                           ; BSR set to: 0
 16248  00C29E  C06E  F06E         	movff	___fldiv@b,?___fldiv
 16249  00C2A2  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 16250  00C2A6  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 16251  00C2AA  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 16252                           
 16253                           ; BSR set to: 0
 16254  00C2AE  0012               	return	
 16255  00C2B0                     l3205:
 16256                           
 16257                           ; BSR set to: 0
 16258                           
 16259                           ; BSR set to: 0
 16260  00C2B0  5185               	movf	___fldiv@bexp& (0+255),w,b
 16261  00C2B2  A4D8               	btfss	status,2,c
 16262  00C2B4  D011               	goto	l3207
 16263                           
 16264                           ; BSR set to: 0
 16265  00C2B6  0E00               	movlw	0
 16266  00C2B8  6F6E               	movwf	___fldiv@b& (0+255),b
 16267  00C2BA  0E00               	movlw	0
 16268  00C2BC  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16269  00C2BE  0E00               	movlw	0
 16270  00C2C0  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16271  00C2C2  0E00               	movlw	0
 16272  00C2C4  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16273                           
 16274                           ; BSR set to: 0
 16275  00C2C6  C06E  F06E         	movff	___fldiv@b,?___fldiv
 16276  00C2CA  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 16277  00C2CE  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 16278  00C2D2  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 16279                           
 16280                           ; BSR set to: 0
 16281  00C2D6  0012               	return	
 16282  00C2D8                     l3207:
 16283                           
 16284                           ; BSR set to: 0
 16285                           
 16286                           ; BSR set to: 0
 16287  00C2D8  5186               	movf	___fldiv@aexp& (0+255),w,b
 16288  00C2DA  6F76               	movwf	??___fldiv& (0+255),b
 16289  00C2DC  6B77               	clrf	(??___fldiv+1)& (0+255),b
 16290  00C2DE  1F76               	comf	??___fldiv& (0+255),f,b
 16291  00C2E0  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 16292  00C2E2  4B76               	infsnz	??___fldiv& (0+255),f,b
 16293  00C2E4  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 16294  00C2E6  5185               	movf	___fldiv@bexp& (0+255),w,b
 16295  00C2E8  6F78               	movwf	(??___fldiv+2)& (0+255),b
 16296  00C2EA  6B79               	clrf	(??___fldiv+3)& (0+255),b
 16297  00C2EC  5176               	movf	??___fldiv& (0+255),w,b
 16298  00C2EE  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 16299  00C2F0  5177               	movf	(??___fldiv+1)& (0+255),w,b
 16300  00C2F2  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 16301  00C2F4  0E7F               	movlw	127
 16302  00C2F6  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 16303  00C2F8  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 16304  00C2FA  0E00               	movlw	0
 16305  00C2FC  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 16306  00C2FE  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16307                           
 16308                           ; BSR set to: 0
 16309  00C300  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 16310  00C304  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 16311  00C308  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 16312  00C30C  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 16313                           
 16314                           ; BSR set to: 0
 16315  00C310  0E00               	movlw	0
 16316  00C312  6F6E               	movwf	___fldiv@b& (0+255),b
 16317  00C314  0E00               	movlw	0
 16318  00C316  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16319  00C318  0E00               	movlw	0
 16320  00C31A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16321  00C31C  0E00               	movlw	0
 16322  00C31E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16323                           
 16324                           ; BSR set to: 0
 16325  00C320  0E00               	movlw	0
 16326  00C322  6F81               	movwf	___fldiv@grs& (0+255),b
 16327  00C324  0E00               	movlw	0
 16328  00C326  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 16329  00C328  0E00               	movlw	0
 16330  00C32A  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 16331  00C32C  0E00               	movlw	0
 16332  00C32E  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 16333                           
 16334                           ; BSR set to: 0
 16335  00C330  0E00               	movlw	0
 16336  00C332  6F86               	movwf	___fldiv@aexp& (0+255),b
 16337  00C334  D028               	goto	l3208
 16338  00C336                     
 16339                           ; BSR set to: 0
 16340                           
 16341                           ; BSR set to: 0
 16342  00C336  5186               	movf	___fldiv@aexp& (0+255),w,b
 16343  00C338  B4D8               	btfsc	status,2,c
 16344  00C33A  D011               	goto	l3210
 16345                           
 16346                           ; BSR set to: 0
 16347  00C33C  90D8               	bcf	status,0,c
 16348  00C33E  377A               	rlcf	___fldiv@rem& (0+255),f,b
 16349  00C340  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16350  00C342  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16351  00C344  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16352  00C346  90D8               	bcf	status,0,c
 16353  00C348  376E               	rlcf	___fldiv@b& (0+255),f,b
 16354  00C34A  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16355  00C34C  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16356  00C34E  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16357                           
 16358                           ; BSR set to: 0
 16359  00C350  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 16360                           
 16361                           ; BSR set to: 0
 16362  00C352  816E               	bsf	___fldiv@b& (0+255),0,b
 16363                           
 16364                           ; BSR set to: 0
 16365  00C354  90D8               	bcf	status,0,c
 16366  00C356  3781               	rlcf	___fldiv@grs& (0+255),f,b
 16367  00C358  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16368  00C35A  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16369  00C35C  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16370  00C35E                     l3210:
 16371                           
 16372                           ; BSR set to: 0
 16373                           
 16374                           ; BSR set to: 0
 16375  00C35E  5172               	movf	___fldiv@a& (0+255),w,b
 16376  00C360  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 16377  00C362  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 16378  00C364  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16379  00C366  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 16380  00C368  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16381  00C36A  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16382  00C36C  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16383  00C36E  A0D8               	btfss	status,0,c
 16384  00C370  D009               	goto	l3212
 16385                           
 16386                           ; BSR set to: 0
 16387  00C372  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16388                           
 16389                           ; BSR set to: 0
 16390  00C374  5172               	movf	___fldiv@a& (0+255),w,b
 16391  00C376  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 16392  00C378  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 16393  00C37A  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16394  00C37C  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 16395  00C37E  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16396  00C380  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 16397  00C382  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16398  00C384                     l3212:
 16399                           
 16400                           ; BSR set to: 0
 16401                           
 16402                           ; BSR set to: 0
 16403  00C384  2B86               	incf	___fldiv@aexp& (0+255),f,b
 16404  00C386                     l3208:
 16405                           
 16406                           ; BSR set to: 0
 16407  00C386  0E19               	movlw	25
 16408  00C388  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 16409  00C38A  D7D5               	goto	l3209
 16410                           
 16411                           ; BSR set to: 0
 16412                           
 16413                           ; BSR set to: 0
 16414  00C38C  517A               	movf	___fldiv@rem& (0+255),w,b
 16415  00C38E  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16416  00C390  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16417  00C392  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16418  00C394  B4D8               	btfsc	status,2,c
 16419  00C396  D011               	goto	l3215
 16420                           
 16421                           ; BSR set to: 0
 16422  00C398  8181               	bsf	___fldiv@grs& (0+255),0,b
 16423                           
 16424                           ; BSR set to: 0
 16425  00C39A  D00F               	goto	l3215
 16426  00C39C                     
 16427                           ; BSR set to: 0
 16428                           
 16429                           ; BSR set to: 0
 16430  00C39C  90D8               	bcf	status,0,c
 16431  00C39E  376E               	rlcf	___fldiv@b& (0+255),f,b
 16432  00C3A0  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16433  00C3A2  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16434  00C3A4  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16435                           
 16436                           ; BSR set to: 0
 16437  00C3A6  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 16438                           
 16439                           ; BSR set to: 0
 16440  00C3A8  816E               	bsf	___fldiv@b& (0+255),0,b
 16441                           
 16442                           ; BSR set to: 0
 16443  00C3AA  90D8               	bcf	status,0,c
 16444  00C3AC  3781               	rlcf	___fldiv@grs& (0+255),f,b
 16445  00C3AE  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16446  00C3B0  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16447  00C3B2  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16448  00C3B4  077F               	decf	___fldiv@new_exp& (0+255),f,b
 16449  00C3B6  A0D8               	btfss	status,0,c
 16450  00C3B8  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16451  00C3BA                     l3215:
 16452                           
 16453                           ; BSR set to: 0
 16454                           
 16455                           ; BSR set to: 0
 16456  00C3BA  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 16457  00C3BC  D7EF               	goto	l3216
 16458                           
 16459                           ; BSR set to: 0
 16460                           
 16461                           ; BSR set to: 0
 16462  00C3BE  0E00               	movlw	0
 16463  00C3C0  6F86               	movwf	___fldiv@aexp& (0+255),b
 16464                           
 16465                           ; BSR set to: 0
 16466  00C3C2  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16467  00C3C4  D016               	goto	l3222
 16468                           
 16469                           ; BSR set to: 0
 16470  00C3C6  0EFF               	movlw	255
 16471  00C3C8  1581               	andwf	___fldiv@grs& (0+255),w,b
 16472  00C3CA  6F76               	movwf	??___fldiv& (0+255),b
 16473  00C3CC  0EFF               	movlw	255
 16474  00C3CE  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 16475  00C3D0  6F77               	movwf	(??___fldiv+1)& (0+255),b
 16476  00C3D2  0EFF               	movlw	255
 16477  00C3D4  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 16478  00C3D6  6F78               	movwf	(??___fldiv+2)& (0+255),b
 16479  00C3D8  0E7F               	movlw	127
 16480  00C3DA  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 16481  00C3DC  6F79               	movwf	(??___fldiv+3)& (0+255),b
 16482  00C3DE  5176               	movf	??___fldiv& (0+255),w,b
 16483  00C3E0  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 16484  00C3E2  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 16485  00C3E4  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 16486  00C3E6  A4D8               	btfss	status,2,c
 16487  00C3E8  D002               	goto	u16570
 16488                           
 16489                           ; BSR set to: 0
 16490                           
 16491                           ; BSR set to: 0
 16492  00C3EA  A16E               	btfss	___fldiv@b& (0+255),0,b
 16493  00C3EC  D002               	goto	l3222
 16494  00C3EE                     u16570:
 16495                           
 16496                           ; BSR set to: 0
 16497  00C3EE  0E01               	movlw	1
 16498  00C3F0  6F86               	movwf	___fldiv@aexp& (0+255),b
 16499  00C3F2                     l3222:
 16500                           
 16501                           ; BSR set to: 0
 16502                           
 16503                           ; BSR set to: 0
 16504                           
 16505                           ; BSR set to: 0
 16506  00C3F2  5186               	movf	___fldiv@aexp& (0+255),w,b
 16507  00C3F4  B4D8               	btfsc	status,2,c
 16508  00C3F6  D01F               	goto	l3224
 16509                           
 16510                           ; BSR set to: 0
 16511  00C3F8  0E01               	movlw	1
 16512  00C3FA  276E               	addwf	___fldiv@b& (0+255),f,b
 16513  00C3FC  0E00               	movlw	0
 16514  00C3FE  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 16515  00C400  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 16516  00C402  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 16517                           
 16518                           ; BSR set to: 0
 16519  00C404  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 16520  00C406  D017               	goto	l3224
 16521                           
 16522                           ; BSR set to: 0
 16523  00C408  C06E  F076         	movff	___fldiv@b,??___fldiv
 16524  00C40C  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 16525  00C410  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 16526  00C414  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 16527  00C418  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 16528  00C41A  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 16529  00C41C  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 16530  00C41E  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 16531  00C420  3376               	rrcf	??___fldiv& (0+255),f,b
 16532  00C422  C076  F06E         	movff	??___fldiv,___fldiv@b
 16533  00C426  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 16534  00C42A  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 16535  00C42E  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 16536                           
 16537                           ; BSR set to: 0
 16538  00C432  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 16539  00C434  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 16540  00C436                     l3224:
 16541                           
 16542                           ; BSR set to: 0
 16543                           
 16544                           ; BSR set to: 0
 16545                           
 16546                           ; BSR set to: 0
 16547  00C436  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16548  00C438  D010               	goto	l3225
 16549  00C43A  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16550  00C43C  E103               	bnz	u16600
 16551  00C43E  297F               	incf	___fldiv@new_exp& (0+255),w,b
 16552  00C440  A0D8               	btfss	status,0,c
 16553  00C442  D00B               	goto	l3225
 16554  00C444                     u16600:
 16555                           
 16556                           ; BSR set to: 0
 16557  00C444  0E00               	movlw	0
 16558  00C446  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16559  00C448  697F               	setf	___fldiv@new_exp& (0+255),b
 16560  00C44A  0E00               	movlw	0
 16561  00C44C  6F6E               	movwf	___fldiv@b& (0+255),b
 16562  00C44E  0E00               	movlw	0
 16563  00C450  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16564  00C452  0E00               	movlw	0
 16565  00C454  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16566  00C456  0E00               	movlw	0
 16567  00C458  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16568  00C45A                     l3225:
 16569                           
 16570                           ; BSR set to: 0
 16571                           
 16572                           ; BSR set to: 0
 16573  00C45A  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 16574  00C45C  D005               	goto	u16610
 16575  00C45E  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 16576  00C460  E111               	bnz	l16496
 16577  00C462  057F               	decf	___fldiv@new_exp& (0+255),w,b
 16578  00C464  B0D8               	btfsc	status,0,c
 16579  00C466  D00E               	goto	l3226
 16580  00C468                     u16610:
 16581                           
 16582                           ; BSR set to: 0
 16583  00C468  0E00               	movlw	0
 16584  00C46A  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16585  00C46C  0E00               	movlw	0
 16586  00C46E  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 16587  00C470  0E00               	movlw	0
 16588  00C472  6F6E               	movwf	___fldiv@b& (0+255),b
 16589  00C474  0E00               	movlw	0
 16590  00C476  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 16591  00C478  0E00               	movlw	0
 16592  00C47A  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 16593  00C47C  0E00               	movlw	0
 16594  00C47E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16595  00C480  0E00               	movlw	0
 16596  00C482  6F7E               	movwf	___fldiv@sign& (0+255),b
 16597  00C484                     l3226:
 16598  00C484                     l16496:
 16599                           
 16600                           ; BSR set to: 0
 16601  00C484  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 16602                           
 16603                           ; BSR set to: 0
 16604  00C488  A185               	btfss	___fldiv@bexp& (0+255),0,b
 16605  00C48A  D002               	goto	l3227
 16606                           
 16607                           ; BSR set to: 0
 16608  00C48C  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 16609  00C48E  D001               	goto	l3228
 16610  00C490                     l3227:
 16611                           
 16612                           ; BSR set to: 0
 16613                           
 16614                           ; BSR set to: 0
 16615  00C490  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 16616  00C492                     l3228:
 16617                           
 16618                           ; BSR set to: 0
 16619                           
 16620                           ; BSR set to: 0
 16621  00C492  90D8               	bcf	status,0,c
 16622  00C494  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 16623  00C496  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 16624                           
 16625                           ; BSR set to: 0
 16626  00C498  517E               	movf	___fldiv@sign& (0+255),w,b
 16627  00C49A  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16628                           
 16629                           ; BSR set to: 0
 16630  00C49C  C06E  F06E         	movff	___fldiv@b,?___fldiv
 16631  00C4A0  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 16632  00C4A4  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 16633  00C4A8  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 16634  00C4AC  0012               	return	
 16635  00C4AE                     __end_of___fldiv:
 16636                           	opt stack 0
 16637                           tblptru	equ	0xFF8
 16638                           tblptrh	equ	0xFF7
 16639                           tblptrl	equ	0xFF6
 16640                           tablat	equ	0xFF5
 16641                           prodh	equ	0xFF4
 16642                           prodl	equ	0xFF3
 16643                           intcon	equ	0xFF2
 16644                           postinc0	equ	0xFEE
 16645                           wreg	equ	0xFE8
 16646                           indf1	equ	0xFE7
 16647                           postdec1	equ	0xFE5
 16648                           plusw1	equ	0xFE3
 16649                           fsr1h	equ	0xFE2
 16650                           fsr1l	equ	0xFE1
 16651                           indf2	equ	0xFDF
 16652                           postinc2	equ	0xFDE
 16653                           postdec2	equ	0xFDD
 16654                           plusw2	equ	0xFDB
 16655                           fsr2h	equ	0xFDA
 16656                           fsr2l	equ	0xFD9
 16657                           status	equ	0xFD8
 16658                           
 16659 ;; *************** function _memcpy *****************
 16660 ;; Defined at:
 16661 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 16662 ;; Parameters:    Size  Location     Type
 16663 ;;  d1              2    0[BANK0 ] PTR void 
 16664 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 16665 ;;		 -> msd_buffer(512), SetupPkt(8), 
 16666 ;;  s1              2    2[BANK0 ] PTR const void 
 16667 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 16668 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 16669 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 16670 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 16671 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), RAM(3759), 
 16672 ;;  n               2    4[BANK0 ] unsigned int 
 16673 ;; Auto vars:     Size  Location     Type
 16674 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 16675 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 16676 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 16677 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 16678 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 16679 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), RAM(3759), 
 16680 ;;  d               2    7[BANK0 ] PTR unsigned char 
 16681 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 16682 ;;		 -> msd_buffer(512), SetupPkt(8), 
 16683 ;;  tmp             1    6[BANK0 ] unsigned char 
 16684 ;; Return value:  Size  Location     Type
 16685 ;;                  2    0[BANK0 ] PTR void 
 16686 ;; Registers used:
 16687 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16688 ;; Tracked objects:
 16689 ;;		On entry : 0/0
 16690 ;;		On exit  : 0/0
 16691 ;;		Unchanged: 0/0
 16692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16693 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16694 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16696 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16697 ;;Total ram usage:       11 bytes
 16698 ;; Hardware stack levels used:    1
 16699 ;; Hardware stack levels required when called:   10
 16700 ;; This function calls:
 16701 ;;		Nothing
 16702 ;; This function is called by:
 16703 ;;		_display_prepare
 16704 ;;		_MSDProcessCommandMediaPresent
 16705 ;;		__flash_set_page_size
 16706 ;;		_fat_create_file
 16707 ;;		_api_prepare
 16708 ;; This function uses a non-reentrant model
 16709 ;;
 16710                           
 16711                           	psect	text41
 16712  00ECB0                     __ptext41:
 16713                           	opt stack 0
 16714  00ECB0                     _memcpy:
 16715                           	opt stack 19
 16716                           
 16717                           ; BSR set to: 0
 16718                           ;incstack = 0
 16719  00ECB0  C062  F069         	movff	memcpy@s1,memcpy@s
 16720  00ECB4  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 16721  00ECB8  C060  F067         	movff	memcpy@d1,memcpy@d
 16722  00ECBC  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 16723  00ECC0  D01D               	goto	l3312
 16724  00ECC2                     l17086:
 16725  00ECC2  C069  FFF6         	movff	memcpy@s,tblptrl
 16726  00ECC6  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 16727  00ECCA  0E00               	movlw	low (__mediumconst shr (0+16))
 16728  00ECCC  6EF8               	movwf	tblptru,c
 16729  00ECCE  0E0E               	movlw	(high __ramtop+-1)
 16730  00ECD0  64F7               	cpfsgt	tblptrh,c
 16731  00ECD2  D003               	bra	u17377
 16732  00ECD4  0008               	tblrd		*
 16733  00ECD6  50F5               	movf	tablat,w,c
 16734  00ECD8  D005               	bra	u17370
 16735  00ECDA                     u17377:
 16736  00ECDA  CFF6 FFE9          	movff	tblptrl,fsr0l
 16737  00ECDE  CFF7 FFEA          	movff	tblptrh,fsr0h
 16738  00ECE2  50EF               	movf	indf0,w,c
 16739  00ECE4                     u17370:
 16740  00ECE4  0100               	movlb	0	; () banked
 16741  00ECE6  6F66               	movwf	memcpy@tmp& (0+255),b
 16742                           
 16743                           ; BSR set to: 0
 16744  00ECE8  4B69               	infsnz	memcpy@s& (0+255),f,b
 16745  00ECEA  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 16746                           
 16747                           ; BSR set to: 0
 16748  00ECEC  C067  FFD9         	movff	memcpy@d,fsr2l
 16749  00ECF0  C068  FFDA         	movff	memcpy@d+1,fsr2h
 16750  00ECF4  C066  FFDF         	movff	memcpy@tmp,indf2
 16751                           
 16752                           ; BSR set to: 0
 16753  00ECF8  4B67               	infsnz	memcpy@d& (0+255),f,b
 16754  00ECFA  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 16755  00ECFC                     l3312:
 16756                           
 16757                           ; BSR set to: 0
 16758  00ECFC  0100               	movlb	0	; () banked
 16759  00ECFE  0764               	decf	memcpy@n& (0+255),f,b
 16760  00ED00  A0D8               	btfss	status,0,c
 16761  00ED02  0765               	decf	(memcpy@n+1)& (0+255),f,b
 16762  00ED04  2964               	incf	memcpy@n& (0+255),w,b
 16763  00ED06  E1DD               	bnz	l17086
 16764  00ED08  2965               	incf	(memcpy@n+1)& (0+255),w,b
 16765  00ED0A  B4D8               	btfsc	status,2,c
 16766  00ED0C  0012               	return	
 16767  00ED0E  D7D9               	goto	l3313
 16768  00ED10                     __end_of_memcpy:
 16769                           	opt stack 0
 16770                           tblptru	equ	0xFF8
 16771                           tblptrh	equ	0xFF7
 16772                           tblptrl	equ	0xFF6
 16773                           tablat	equ	0xFF5
 16774                           prodh	equ	0xFF4
 16775                           prodl	equ	0xFF3
 16776                           intcon	equ	0xFF2
 16777                           indf0	equ	0xFEF
 16778                           postinc0	equ	0xFEE
 16779                           fsr0h	equ	0xFEA
 16780                           fsr0l	equ	0xFE9
 16781                           wreg	equ	0xFE8
 16782                           indf1	equ	0xFE7
 16783                           postdec1	equ	0xFE5
 16784                           plusw1	equ	0xFE3
 16785                           fsr1h	equ	0xFE2
 16786                           fsr1l	equ	0xFE1
 16787                           indf2	equ	0xFDF
 16788                           postinc2	equ	0xFDE
 16789                           postdec2	equ	0xFDD
 16790                           plusw2	equ	0xFDB
 16791                           fsr2h	equ	0xFDA
 16792                           fsr2l	equ	0xFD9
 16793                           status	equ	0xFD8
 16794                           
 16795 ;; *************** function __display_signed_itoa *****************
 16796 ;; Defined at:
 16797 ;;		line 116 in file "display.c"
 16798 ;; Parameters:    Size  Location     Type
 16799 ;;  value           2   47[BANK0 ] int 
 16800 ;;  text            2   49[BANK0 ] PTR unsigned char 
 16801 ;;		 -> display_prepare@temp(10), 
 16802 ;; Auto vars:     Size  Location     Type
 16803 ;;		None
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  1    wreg      void 
 16806 ;; Registers used:
 16807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16808 ;; Tracked objects:
 16809 ;;		On entry : 0/0
 16810 ;;		On exit  : 0/0
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16816 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16817 ;;Total ram usage:        4 bytes
 16818 ;; Hardware stack levels used:    1
 16819 ;; Hardware stack levels required when called:   14
 16820 ;; This function calls:
 16821 ;;		__display_padded_itoa
 16822 ;; This function is called by:
 16823 ;;		_display_prepare
 16824 ;; This function uses a non-reentrant model
 16825 ;;
 16826                           
 16827                           	psect	text42
 16828  00F1A6                     __ptext42:
 16829                           	opt stack 0
 16830  00F1A6                     __display_signed_itoa:
 16831                           	opt stack 15
 16832                           
 16833                           ;display.c: 118: if(value<0)
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;incstack = 0
 16837  00F1A6  0100               	movlb	0	; () banked
 16838  00F1A8  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 16839  00F1AA  D00A               	goto	l1266
 16840                           
 16841                           ; BSR set to: 0
 16842                           ;display.c: 119: {;display.c: 120: value = -value;
 16843  00F1AC  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 16844  00F1AE  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 16845  00F1B0  B0D8               	btfsc	status,0,c
 16846  00F1B2  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 16847                           
 16848                           ; BSR set to: 0
 16849                           ;display.c: 121: text[0] = '-';
 16850  00F1B4  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 16851  00F1B8  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 16852  00F1BC  0E2D               	movlw	45
 16853  00F1BE  D005               	goto	L40
 16854  00F1C0                     l1266:
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;display.c: 123: else;display.c: 124: {;display.c: 125: text[0] = '+';
 16858                           
 16859                           ; BSR set to: 0
 16860  00F1C0  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 16861  00F1C4  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 16862  00F1C8  0E2B               	movlw	43
 16863  00F1CA                     L40:
 16864  00F1CA  6EDF               	movwf	indf2,c
 16865                           
 16866                           ; BSR set to: 0
 16867                           ;display.c: 126: };display.c: 127: _display_padded_itoa(value, 0, &text[1]);
 16868                           
 16869                           ; BSR set to: 0
 16870  00F1CC  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 16871  00F1D0  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 16872  00F1D4  0E00               	movlw	0
 16873  00F1D6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 16874  00F1D8  0E01               	movlw	1
 16875  00F1DA  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 16876  00F1DC  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 16877  00F1DE  0E00               	movlw	0
 16878  00F1E0  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 16879  00F1E2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 16880  00F1E4  ECF1  F06C         	call	__display_padded_itoa	;wreg free
 16881  00F1E8  0012               	return		;funcret
 16882  00F1EA                     __end_of__display_signed_itoa:
 16883                           	opt stack 0
 16884                           tblptru	equ	0xFF8
 16885                           tblptrh	equ	0xFF7
 16886                           tblptrl	equ	0xFF6
 16887                           tablat	equ	0xFF5
 16888                           prodh	equ	0xFF4
 16889                           prodl	equ	0xFF3
 16890                           intcon	equ	0xFF2
 16891                           indf0	equ	0xFEF
 16892                           postinc0	equ	0xFEE
 16893                           fsr0h	equ	0xFEA
 16894                           fsr0l	equ	0xFE9
 16895                           wreg	equ	0xFE8
 16896                           indf1	equ	0xFE7
 16897                           postdec1	equ	0xFE5
 16898                           plusw1	equ	0xFE3
 16899                           fsr1h	equ	0xFE2
 16900                           fsr1l	equ	0xFE1
 16901                           indf2	equ	0xFDF
 16902                           postinc2	equ	0xFDE
 16903                           postdec2	equ	0xFDD
 16904                           plusw2	equ	0xFDB
 16905                           fsr2h	equ	0xFDA
 16906                           fsr2l	equ	0xFD9
 16907                           status	equ	0xFD8
 16908                           
 16909 ;; *************** function __display_padded_itoa *****************
 16910 ;; Defined at:
 16911 ;;		line 94 in file "display.c"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;  value           2   24[BANK0 ] int 
 16914 ;;  length          1   26[BANK0 ] unsigned char 
 16915 ;;  text            2   27[BANK0 ] PTR unsigned char 
 16916 ;;		 -> display_prepare@temp(10), 
 16917 ;; Auto vars:     Size  Location     Type
 16918 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 16919 ;;  padding         1   46[BANK0 ] unsigned char 
 16920 ;;  pos             1   45[BANK0 ] unsigned char 
 16921 ;;  len             1   44[BANK0 ] unsigned char 
 16922 ;; Return value:  Size  Location     Type
 16923 ;;                  1    wreg      void 
 16924 ;; Registers used:
 16925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16926 ;; Tracked objects:
 16927 ;;		On entry : 0/0
 16928 ;;		On exit  : 0/0
 16929 ;;		Unchanged: 0/0
 16930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16931 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16932 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16933 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16934 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16935 ;;Total ram usage:       23 bytes
 16936 ;; Hardware stack levels used:    1
 16937 ;; Hardware stack levels required when called:   13
 16938 ;; This function calls:
 16939 ;;		_itoa
 16940 ;;		_strlen
 16941 ;; This function is called by:
 16942 ;;		__display_signed_itoa
 16943 ;;		_display_prepare
 16944 ;; This function uses a non-reentrant model
 16945 ;;
 16946                           
 16947                           	psect	text43
 16948  00D9E2                     __ptext43:
 16949                           	opt stack 0
 16950  00D9E2                     __display_padded_itoa:
 16951                           	opt stack 15
 16952                           
 16953                           ;display.c: 96: uint8_t pos;;display.c: 97: uint8_t padding;;display.c: 99: uint8_t len;
      +                          ;display.c: 100: char tmp[10];;display.c: 101: itoa(tmp, value, 10);
 16954                           
 16955                           ;incstack = 0
 16956  00D9E2  0E82               	movlw	low __display_padded_itoa@tmp
 16957  00D9E4  0100               	movlb	0	; () banked
 16958  00D9E6  6F70               	movwf	itoa@buf& (0+255),b
 16959  00D9E8  0E00               	movlw	high __display_padded_itoa@tmp
 16960  00D9EA  6F71               	movwf	(itoa@buf+1)& (0+255),b
 16961  00D9EC  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 16962  00D9F0  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 16963  00D9F4  0E00               	movlw	0
 16964  00D9F6  6F75               	movwf	(itoa@base+1)& (0+255),b
 16965  00D9F8  0E0A               	movlw	10
 16966  00D9FA  6F74               	movwf	itoa@base& (0+255),b
 16967  00D9FC  ECF5  F078         	call	_itoa	;wreg free
 16968                           
 16969                           ;display.c: 102: len = strlen(tmp);
 16970  00DA00  0E82               	movlw	low __display_padded_itoa@tmp
 16971  00DA02  0100               	movlb	0	; () banked
 16972  00DA04  6F60               	movwf	strlen@s& (0+255),b
 16973  00DA06  0E00               	movlw	high __display_padded_itoa@tmp
 16974  00DA08  6F61               	movwf	(strlen@s+1)& (0+255),b
 16975  00DA0A  EC7D  F079         	call	_strlen	;wreg free
 16976  00DA0E  0100               	movlb	0	; () banked
 16977  00DA10  5160               	movf	?_strlen& (0+255),w,b
 16978  00DA12  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 16979                           
 16980                           ; BSR set to: 0
 16981                           ;display.c: 103: padding = 0;
 16982  00DA14  0E00               	movlw	0
 16983  00DA16  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 16984                           
 16985                           ;display.c: 104: while((padding+len)<length)
 16986  00DA18  D00B               	goto	l1257
 16987  00DA1A                     
 16988                           ; BSR set to: 0
 16989                           ;display.c: 105: {;display.c: 106: text[padding] = ' ';
 16990                           
 16991                           ; BSR set to: 0
 16992  00DA1A  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 16993  00DA1C  0D01               	mullw	1
 16994  00DA1E  50F3               	movf	prodl,w,c
 16995  00DA20  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 16996  00DA22  6ED9               	movwf	fsr2l,c
 16997  00DA24  50F4               	movf	prodh,w,c
 16998  00DA26  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 16999  00DA28  6EDA               	movwf	fsr2h,c
 17000  00DA2A  0E20               	movlw	32
 17001  00DA2C  6EDF               	movwf	indf2,c
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;display.c: 107: ++padding;
 17005  00DA2E  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 17006  00DA30                     l1257:
 17007                           
 17008                           ; BSR set to: 0
 17009                           
 17010                           ; BSR set to: 0
 17011  00DA30  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 17012  00DA32  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 17013  00DA34  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 17014  00DA36  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 17015  00DA38  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 17016  00DA3C  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 17017  00DA3E  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 17018  00DA40  0E00               	movlw	0
 17019  00DA42  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 17020  00DA44  517D               	movf	??__display_padded_itoa& (0+255),w,b
 17021  00DA46  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 17022  00DA48  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 17023  00DA4A  0A80               	xorlw	128
 17024  00DA4C  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 17025  00DA4E  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 17026  00DA50  0A80               	xorlw	128
 17027  00DA52  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 17028  00DA54  A0D8               	btfss	status,0,c
 17029  00DA56  D7E1               	goto	l1258
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;display.c: 108: };display.c: 109: for(pos=0; tmp[pos]; ++pos)
 17033                           
 17034                           ; BSR set to: 0
 17035  00DA58  0E00               	movlw	0
 17036  00DA5A  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 17037  00DA5C  D018               	goto	l1260
 17038  00DA5E                     
 17039                           ; BSR set to: 0
 17040                           ;display.c: 110: {;display.c: 111: text[pos+padding] = tmp[pos];
 17041                           
 17042                           ; BSR set to: 0
 17043  00DA5E  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 17044  00DA60  0D01               	mullw	1
 17045  00DA62  0E82               	movlw	low __display_padded_itoa@tmp
 17046  00DA64  24F3               	addwf	prodl,w,c
 17047  00DA66  6ED9               	movwf	fsr2l,c
 17048  00DA68  0E00               	movlw	high __display_padded_itoa@tmp
 17049  00DA6A  20F4               	addwfc	prodh,w,c
 17050  00DA6C  6EDA               	movwf	fsr2h,c
 17051  00DA6E  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 17052  00DA70  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 17053  00DA74  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 17054  00DA76  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 17055  00DA78  0E00               	movlw	0
 17056  00DA7A  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 17057  00DA7C  517D               	movf	??__display_padded_itoa& (0+255),w,b
 17058  00DA7E  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 17059  00DA80  6EE1               	movwf	fsr1l,c
 17060  00DA82  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 17061  00DA84  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 17062  00DA86  6EE2               	movwf	fsr1h,c
 17063  00DA88  CFDF FFE7          	movff	indf2,indf1
 17064                           
 17065                           ; BSR set to: 0
 17066  00DA8C  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 17067  00DA8E                     l1260:
 17068                           
 17069                           ; BSR set to: 0
 17070                           
 17071                           ; BSR set to: 0
 17072  00DA8E  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 17073  00DA90  0D01               	mullw	1
 17074  00DA92  0E82               	movlw	low __display_padded_itoa@tmp
 17075  00DA94  24F3               	addwf	prodl,w,c
 17076  00DA96  6ED9               	movwf	fsr2l,c
 17077  00DA98  0E00               	movlw	high __display_padded_itoa@tmp
 17078  00DA9A  20F4               	addwfc	prodh,w,c
 17079  00DA9C  6EDA               	movwf	fsr2h,c
 17080  00DA9E  50DF               	movf	indf2,w,c
 17081  00DAA0  A4D8               	btfss	status,2,c
 17082  00DAA2  D7DD               	goto	l1261
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;display.c: 112: };display.c: 113: text[pos+padding] = 0x00;
 17086                           
 17087                           ; BSR set to: 0
 17088  00DAA4  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 17089  00DAA6  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 17090  00DAAA  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 17091  00DAAC  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 17092  00DAAE  0E00               	movlw	0
 17093  00DAB0  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 17094  00DAB2  517D               	movf	??__display_padded_itoa& (0+255),w,b
 17095  00DAB4  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 17096  00DAB6  6ED9               	movwf	fsr2l,c
 17097  00DAB8  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 17098  00DABA  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 17099  00DABC  6EDA               	movwf	fsr2h,c
 17100  00DABE  0E00               	movlw	0
 17101  00DAC0  6EDF               	movwf	indf2,c
 17102                           
 17103                           ; BSR set to: 0
 17104  00DAC2  0012               	return		;funcret
 17105  00DAC4                     __end_of__display_padded_itoa:
 17106                           	opt stack 0
 17107                           tblptru	equ	0xFF8
 17108                           tblptrh	equ	0xFF7
 17109                           tblptrl	equ	0xFF6
 17110                           tablat	equ	0xFF5
 17111                           prodh	equ	0xFF4
 17112                           prodl	equ	0xFF3
 17113                           intcon	equ	0xFF2
 17114                           indf0	equ	0xFEF
 17115                           postinc0	equ	0xFEE
 17116                           fsr0h	equ	0xFEA
 17117                           fsr0l	equ	0xFE9
 17118                           wreg	equ	0xFE8
 17119                           indf1	equ	0xFE7
 17120                           postdec1	equ	0xFE5
 17121                           plusw1	equ	0xFE3
 17122                           fsr1h	equ	0xFE2
 17123                           fsr1l	equ	0xFE1
 17124                           indf2	equ	0xFDF
 17125                           postinc2	equ	0xFDE
 17126                           postdec2	equ	0xFDD
 17127                           plusw2	equ	0xFDB
 17128                           fsr2h	equ	0xFDA
 17129                           fsr2l	equ	0xFD9
 17130                           status	equ	0xFD8
 17131                           
 17132 ;; *************** function __display_itoa_long *****************
 17133 ;; Defined at:
 17134 ;;		line 198 in file "display.c"
 17135 ;; Parameters:    Size  Location     Type
 17136 ;;  value           4   77[BANK0 ] long 
 17137 ;;  decimals        1   81[BANK0 ] unsigned char 
 17138 ;;  text            2   82[BANK0 ] PTR unsigned char 
 17139 ;;		 -> display_prepare@temp(10), 
 17140 ;; Auto vars:     Size  Location     Type
 17141 ;;  short_value     2   89[BANK0 ] int 
 17142 ;;  last_digit      1   91[BANK0 ] char 
 17143 ;;  length          1   88[BANK0 ] unsigned char 
 17144 ;; Return value:  Size  Location     Type
 17145 ;;                  1    wreg      void 
 17146 ;; Registers used:
 17147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17148 ;; Tracked objects:
 17149 ;;		On entry : 0/0
 17150 ;;		On exit  : 0/0
 17151 ;;		Unchanged: 0/0
 17152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17153 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17154 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17155 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17156 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17157 ;;Total ram usage:       15 bytes
 17158 ;; Hardware stack levels used:    1
 17159 ;; Hardware stack levels required when called:   14
 17160 ;; This function calls:
 17161 ;;		___aldiv
 17162 ;;		___almod
 17163 ;;		__display_itoa
 17164 ;;		_strlen
 17165 ;; This function is called by:
 17166 ;;		_display_prepare
 17167 ;; This function uses a non-reentrant model
 17168 ;;
 17169                           
 17170                           	psect	text44
 17171  00D3BE                     __ptext44:
 17172                           	opt stack 0
 17173  00D3BE                     __display_itoa_long:
 17174                           	opt stack 15
 17175                           
 17176                           ;display.c: 200: int16_t short_value;;display.c: 201: int8_t last_digit;;display.c: 202:
      +                           uint8_t length;;display.c: 204: short_value = (int16_t) value;
 17177                           
 17178                           ; BSR set to: 0
 17179                           ;incstack = 0
 17180  00D3BE  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 17181  00D3C2  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 17182                           
 17183                           ;display.c: 205: if(short_value==value)
 17184  00D3C6  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 17185  00D3CA  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 17186  00D3CE  0E00               	movlw	0
 17187  00D3D0  0100               	movlb	0	; () banked
 17188  00D3D2  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 17189  00D3D4  0EFF               	movlw	255
 17190  00D3D6  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 17191  00D3D8  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 17192  00D3DA  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 17193  00D3DC  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 17194  00D3DE  E117               	bnz	l17278
 17195  00D3E0  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 17196  00D3E2  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 17197  00D3E4  E114               	bnz	l17278
 17198  00D3E6  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 17199  00D3E8  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 17200  00D3EA  E111               	bnz	l17278
 17201  00D3EC  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 17202  00D3EE  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 17203  00D3F0  A4D8               	btfss	status,2,c
 17204  00D3F2  D00D               	goto	l1293
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;display.c: 206: {;display.c: 207: _display_itoa(short_value, decimals, text);
 17208  00D3F4  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 17209  00D3F8  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 17210  00D3FC  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 17211  00D400  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 17212  00D404  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 17213  00D408  EC93  F063         	call	__display_itoa	;wreg free
 17214                           
 17215                           ;display.c: 208: }
 17216  00D40C  0012               	return	
 17217  00D40E                     l1293:
 17218  00D40E                     l17278:
 17219                           
 17220                           ;display.c: 209: else;display.c: 210: {;display.c: 211: short_value = value / 10;
 17221  00D40E  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 17222  00D412  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 17223  00D416  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 17224  00D41A  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 17225  00D41E  0E0A               	movlw	10
 17226  00D420  0100               	movlb	0	; () banked
 17227  00D422  6F64               	movwf	___aldiv@divisor& (0+255),b
 17228  00D424  0E00               	movlw	0
 17229  00D426  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 17230  00D428  0E00               	movlw	0
 17231  00D42A  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 17232  00D42C  0E00               	movlw	0
 17233  00D42E  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 17234  00D430  ECEA  F06F         	call	___aldiv	;wreg free
 17235  00D434  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 17236  00D438  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 17237                           
 17238                           ;display.c: 212: _display_itoa(short_value, decimals-1, text);
 17239  00D43C  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 17240  00D440  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 17241  00D444  0100               	movlb	0	; () banked
 17242  00D446  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 17243  00D448  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17244  00D44A  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 17245  00D44E  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 17246  00D452  EC93  F063         	call	__display_itoa	;wreg free
 17247                           
 17248                           ;display.c: 213: length = strlen(text);
 17249  00D456  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 17250  00D45A  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 17251  00D45E  EC7D  F079         	call	_strlen	;wreg free
 17252  00D462  0100               	movlb	0	; () banked
 17253  00D464  5160               	movf	?_strlen& (0+255),w,b
 17254  00D466  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 17255                           
 17256                           ; BSR set to: 0
 17257                           ;display.c: 214: last_digit = value % 10;
 17258  00D468  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 17259  00D46C  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 17260  00D470  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 17261  00D474  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 17262  00D478  0E0A               	movlw	10
 17263  00D47A  6F64               	movwf	___almod@divisor& (0+255),b
 17264  00D47C  0E00               	movlw	0
 17265  00D47E  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 17266  00D480  0E00               	movlw	0
 17267  00D482  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 17268  00D484  0E00               	movlw	0
 17269  00D486  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 17270  00D488  ECD6  F071         	call	___almod	;wreg free
 17271  00D48C  0100               	movlb	0	; () banked
 17272  00D48E  5160               	movf	?___almod& (0+255),w,b
 17273  00D490  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 17274                           
 17275                           ; BSR set to: 0
 17276                           ;display.c: 215: if(last_digit<0)
 17277  00D492  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 17278                           
 17279                           ; BSR set to: 0
 17280                           ;display.c: 216: last_digit = -last_digit;
 17281  00D494  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 17282                           
 17283                           ; BSR set to: 0
 17284                           ;display.c: 217: text[length] = last_digit + 0x30;
 17285                           
 17286                           ; BSR set to: 0
 17287  00D496  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 17288  00D498  0D01               	mullw	1
 17289  00D49A  50F3               	movf	prodl,w,c
 17290  00D49C  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 17291  00D49E  6ED9               	movwf	fsr2l,c
 17292  00D4A0  50F4               	movf	prodh,w,c
 17293  00D4A2  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 17294  00D4A4  6EDA               	movwf	fsr2h,c
 17295  00D4A6  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 17296  00D4A8  0F30               	addlw	48
 17297  00D4AA  6EDF               	movwf	indf2,c
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;display.c: 218: text[length+1] = 0x00;
 17301  00D4AC  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 17302  00D4AE  6FB4               	movwf	??__display_itoa_long& (0+255),b
 17303  00D4B0  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 17304  00D4B2  0E01               	movlw	1
 17305  00D4B4  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 17306  00D4B6  0E00               	movlw	0
 17307  00D4B8  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 17308  00D4BA  51B4               	movf	??__display_itoa_long& (0+255),w,b
 17309  00D4BC  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 17310  00D4BE  6ED9               	movwf	fsr2l,c
 17311  00D4C0  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 17312  00D4C2  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 17313  00D4C4  6EDA               	movwf	fsr2h,c
 17314  00D4C6  0E00               	movlw	0
 17315  00D4C8  6EDF               	movwf	indf2,c
 17316  00D4CA  0012               	return	
 17317  00D4CC                     __end_of__display_itoa_long:
 17318                           	opt stack 0
 17319                           tblptru	equ	0xFF8
 17320                           tblptrh	equ	0xFF7
 17321                           tblptrl	equ	0xFF6
 17322                           tablat	equ	0xFF5
 17323                           prodh	equ	0xFF4
 17324                           prodl	equ	0xFF3
 17325                           intcon	equ	0xFF2
 17326                           indf0	equ	0xFEF
 17327                           postinc0	equ	0xFEE
 17328                           fsr0h	equ	0xFEA
 17329                           fsr0l	equ	0xFE9
 17330                           wreg	equ	0xFE8
 17331                           indf1	equ	0xFE7
 17332                           postdec1	equ	0xFE5
 17333                           plusw1	equ	0xFE3
 17334                           fsr1h	equ	0xFE2
 17335                           fsr1l	equ	0xFE1
 17336                           indf2	equ	0xFDF
 17337                           postinc2	equ	0xFDE
 17338                           postdec2	equ	0xFDD
 17339                           plusw2	equ	0xFDB
 17340                           fsr2h	equ	0xFDA
 17341                           fsr2l	equ	0xFD9
 17342                           status	equ	0xFD8
 17343                           
 17344 ;; *************** function __display_itoa *****************
 17345 ;; Defined at:
 17346 ;;		line 130 in file "display.c"
 17347 ;; Parameters:    Size  Location     Type
 17348 ;;  value           2   53[BANK0 ] int 
 17349 ;;  decimals        1   55[BANK0 ] unsigned char 
 17350 ;;  text            2   56[BANK0 ] PTR unsigned char 
 17351 ;;		 -> display_prepare@temp(10), display_content(80), 
 17352 ;; Auto vars:     Size  Location     Type
 17353 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 17354 ;;  pos             1   76[BANK0 ] unsigned char 
 17355 ;;  missing         1   75[BANK0 ] char 
 17356 ;;  len             1   74[BANK0 ] unsigned char 
 17357 ;; Return value:  Size  Location     Type
 17358 ;;                  1    wreg      void 
 17359 ;; Registers used:
 17360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17361 ;; Tracked objects:
 17362 ;;		On entry : 0/0
 17363 ;;		On exit  : 0/0
 17364 ;;		Unchanged: 0/0
 17365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17366 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17367 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17368 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17369 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17370 ;;Total ram usage:       24 bytes
 17371 ;; Hardware stack levels used:    1
 17372 ;; Hardware stack levels required when called:   13
 17373 ;; This function calls:
 17374 ;;		_itoa
 17375 ;;		_strlen
 17376 ;; This function is called by:
 17377 ;;		__display_itoa_long
 17378 ;;		_display_prepare
 17379 ;; This function uses a non-reentrant model
 17380 ;;
 17381                           
 17382                           	psect	text45
 17383  00C726                     __ptext45:
 17384                           	opt stack 0
 17385  00C726                     __display_itoa:
 17386                           	opt stack 15
 17387                           
 17388                           ;display.c: 132: uint8_t pos;;display.c: 133: uint8_t len;;display.c: 134: int8_t missin
      +                          g;;display.c: 135: char tmp[10];;display.c: 136: itoa(tmp, value, 10);
 17389                           
 17390                           ;incstack = 0
 17391  00C726  0EA0               	movlw	low __display_itoa@tmp
 17392  00C728  0100               	movlb	0	; () banked
 17393  00C72A  6F70               	movwf	itoa@buf& (0+255),b
 17394  00C72C  0E00               	movlw	high __display_itoa@tmp
 17395  00C72E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 17396  00C730  C095  F072         	movff	__display_itoa@value,itoa@val
 17397  00C734  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 17398  00C738  0E00               	movlw	0
 17399  00C73A  6F75               	movwf	(itoa@base+1)& (0+255),b
 17400  00C73C  0E0A               	movlw	10
 17401  00C73E  6F74               	movwf	itoa@base& (0+255),b
 17402  00C740  ECF5  F078         	call	_itoa	;wreg free
 17403                           
 17404                           ;display.c: 137: len = strlen(tmp);
 17405  00C744  0EA0               	movlw	low __display_itoa@tmp
 17406  00C746  0100               	movlb	0	; () banked
 17407  00C748  6F60               	movwf	strlen@s& (0+255),b
 17408  00C74A  0E00               	movlw	high __display_itoa@tmp
 17409  00C74C  6F61               	movwf	(strlen@s+1)& (0+255),b
 17410  00C74E  EC7D  F079         	call	_strlen	;wreg free
 17411  00C752  0100               	movlb	0	; () banked
 17412  00C754  5160               	movf	?_strlen& (0+255),w,b
 17413  00C756  6FAA               	movwf	__display_itoa@len& (0+255),b
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;display.c: 139: if(value<0)
 17417  00C758  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 17418  00C75A  D054               	goto	l1271
 17419                           
 17420                           ; BSR set to: 0
 17421                           ;display.c: 140: {;display.c: 141: missing = decimals + 2 - len;
 17422  00C75C  51AA               	movf	__display_itoa@len& (0+255),w,b
 17423  00C75E  0800               	sublw	0
 17424  00C760  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 17425  00C762  0F02               	addlw	2
 17426  00C764  6FAB               	movwf	__display_itoa@missing& (0+255),b
 17427                           
 17428                           ;display.c: 142: if(missing>0)
 17429  00C766  51AB               	movf	__display_itoa@missing& (0+255),w,b
 17430  00C768  0A80               	xorlw	128
 17431  00C76A  0F7F               	addlw	-129
 17432  00C76C  A0D8               	btfss	status,0,c
 17433  00C76E  D090               	goto	l1278
 17434                           
 17435                           ; BSR set to: 0
 17436                           ;display.c: 143: {;display.c: 144: for(pos=decimals;pos!=0xFF;--pos)
 17437  00C770  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 17438  00C774                     l16846:
 17439                           
 17440                           ; BSR set to: 0
 17441  00C774  29AC               	incf	__display_itoa@pos& (0+255),w,b
 17442  00C776  B4D8               	btfsc	status,2,c
 17443  00C778  D042               	goto	u17090
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;display.c: 145: {;display.c: 146: if(pos>=missing)
 17447                           
 17448                           ; BSR set to: 0
 17449                           
 17450                           ; BSR set to: 0
 17451  00C77A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17452  00C77C  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 17453  00C77E  D004               	goto	u17080
 17454  00C780  0AFF               	xorlw	255
 17455  00C782  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 17456  00C784  B0D8               	btfsc	status,0,c
 17457  00C786  D02A               	goto	l1275
 17458  00C788                     u17080:
 17459                           
 17460                           ; BSR set to: 0
 17461                           ;display.c: 147: {;display.c: 148: tmp[pos+1] = tmp[pos+1-missing];
 17462  00C788  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 17463  00C78C  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17464  00C78E  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 17465  00C790  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 17466  00C792  1F9A               	comf	??__display_itoa& (0+255),f,b
 17467  00C794  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 17468  00C796  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 17469  00C798  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 17470  00C79A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17471  00C79C  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 17472  00C79E  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 17473  00C7A0  519A               	movf	??__display_itoa& (0+255),w,b
 17474  00C7A2  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 17475  00C7A4  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 17476  00C7A6  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 17477  00C7A8  0E01               	movlw	1
 17478  00C7AA  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 17479  00C7AC  0E00               	movlw	0
 17480  00C7AE  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 17481  00C7B0  0EA0               	movlw	low __display_itoa@tmp
 17482  00C7B2  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 17483  00C7B4  6ED9               	movwf	fsr2l,c
 17484  00C7B6  0E00               	movlw	high __display_itoa@tmp
 17485  00C7B8  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 17486  00C7BA  6EDA               	movwf	fsr2h,c
 17487  00C7BC  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17488  00C7BE  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 17489  00C7C0  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 17490  00C7C2  0E01               	movlw	1
 17491  00C7C4  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 17492  00C7C6  0E00               	movlw	0
 17493  00C7C8  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 17494  00C7CA  0EA0               	movlw	low __display_itoa@tmp
 17495  00C7CC  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 17496  00C7CE  6EE1               	movwf	fsr1l,c
 17497  00C7D0  0E00               	movlw	high __display_itoa@tmp
 17498  00C7D2  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 17499  00C7D4  6EE2               	movwf	fsr1h,c
 17500  00C7D6  CFDF FFE7          	movff	indf2,indf1
 17501                           
 17502                           ;display.c: 149: }
 17503  00C7DA  D00F               	goto	l1276
 17504  00C7DC                     l1275:
 17505                           
 17506                           ; BSR set to: 0
 17507                           ;display.c: 150: else;display.c: 151: {;display.c: 152: tmp[pos+1] = '0';
 17508                           
 17509                           ; BSR set to: 0
 17510  00C7DC  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17511  00C7DE  6F9A               	movwf	??__display_itoa& (0+255),b
 17512  00C7E0  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17513  00C7E2  0E01               	movlw	1
 17514  00C7E4  279A               	addwf	??__display_itoa& (0+255),f,b
 17515  00C7E6  0E00               	movlw	0
 17516  00C7E8  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 17517  00C7EA  0EA0               	movlw	low __display_itoa@tmp
 17518  00C7EC  259A               	addwf	??__display_itoa& (0+255),w,b
 17519  00C7EE  6ED9               	movwf	fsr2l,c
 17520  00C7F0  0E00               	movlw	high __display_itoa@tmp
 17521  00C7F2  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 17522  00C7F4  6EDA               	movwf	fsr2h,c
 17523  00C7F6  0E30               	movlw	48
 17524  00C7F8  6EDF               	movwf	indf2,c
 17525  00C7FA                     l1276:
 17526                           
 17527                           ; BSR set to: 0
 17528                           
 17529                           ; BSR set to: 0
 17530  00C7FA  07AC               	decf	__display_itoa@pos& (0+255),f,b
 17531  00C7FC  D7BB               	goto	l16846
 17532  00C7FE                     u17090:
 17533                           
 17534                           ; BSR set to: 0
 17535                           ;display.c: 153: };display.c: 154: };display.c: 155: len = decimals + 2;
 17536                           
 17537                           ; BSR set to: 0
 17538  00C7FE  5197               	movf	__display_itoa@decimals& (0+255),w,b
 17539  00C800  0F02               	addlw	2
 17540  00C802  D045               	goto	L41
 17541  00C804                     l1271:
 17542                           
 17543                           ; BSR set to: 0
 17544                           ;display.c: 158: else;display.c: 159: {;display.c: 160: missing = decimals + 1 - len;
 17545                           
 17546                           ; BSR set to: 0
 17547  00C804  51AA               	movf	__display_itoa@len& (0+255),w,b
 17548  00C806  0800               	sublw	0
 17549  00C808  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 17550  00C80A  6F9A               	movwf	??__display_itoa& (0+255),b
 17551  00C80C  299A               	incf	??__display_itoa& (0+255),w,b
 17552  00C80E  6FAB               	movwf	__display_itoa@missing& (0+255),b
 17553                           
 17554                           ;display.c: 161: if(missing>0)
 17555  00C810  51AB               	movf	__display_itoa@missing& (0+255),w,b
 17556  00C812  0A80               	xorlw	128
 17557  00C814  0F7F               	addlw	-129
 17558  00C816  A0D8               	btfss	status,0,c
 17559  00C818  D03B               	goto	l1278
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;display.c: 162: {;display.c: 163: for(pos=decimals;pos!=0xFF;--pos)
 17563  00C81A  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 17564  00C81E                     l16866:
 17565                           
 17566                           ; BSR set to: 0
 17567  00C81E  29AC               	incf	__display_itoa@pos& (0+255),w,b
 17568  00C820  B4D8               	btfsc	status,2,c
 17569  00C822  D034               	goto	u17130
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;display.c: 164: {;display.c: 165: if(pos>=missing)
 17573                           
 17574                           ; BSR set to: 0
 17575                           
 17576                           ; BSR set to: 0
 17577  00C824  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17578  00C826  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 17579  00C828  D004               	goto	u17120
 17580  00C82A  0AFF               	xorlw	255
 17581  00C82C  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 17582  00C82E  B0D8               	btfsc	status,0,c
 17583  00C830  D021               	goto	l1281
 17584  00C832                     u17120:
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;display.c: 166: {;display.c: 167: tmp[pos] = tmp[pos-missing];
 17588  00C832  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 17589  00C836  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17590  00C838  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 17591  00C83A  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 17592  00C83C  1F9A               	comf	??__display_itoa& (0+255),f,b
 17593  00C83E  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 17594  00C840  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 17595  00C842  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 17596  00C844  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17597  00C846  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 17598  00C848  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 17599  00C84A  519A               	movf	??__display_itoa& (0+255),w,b
 17600  00C84C  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 17601  00C84E  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 17602  00C850  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 17603  00C852  0EA0               	movlw	low __display_itoa@tmp
 17604  00C854  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 17605  00C856  6ED9               	movwf	fsr2l,c
 17606  00C858  0E00               	movlw	high __display_itoa@tmp
 17607  00C85A  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 17608  00C85C  6EDA               	movwf	fsr2h,c
 17609  00C85E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17610  00C860  0D01               	mullw	1
 17611  00C862  0EA0               	movlw	low __display_itoa@tmp
 17612  00C864  24F3               	addwf	prodl,w,c
 17613  00C866  6EE1               	movwf	fsr1l,c
 17614  00C868  0E00               	movlw	high __display_itoa@tmp
 17615  00C86A  20F4               	addwfc	prodh,w,c
 17616  00C86C  6EE2               	movwf	fsr1h,c
 17617  00C86E  CFDF FFE7          	movff	indf2,indf1
 17618                           
 17619                           ;display.c: 168: }
 17620  00C872  D00A               	goto	l1282
 17621  00C874                     l1281:
 17622                           
 17623                           ; BSR set to: 0
 17624                           ;display.c: 169: else;display.c: 170: {;display.c: 171: tmp[pos] = '0';
 17625                           
 17626                           ; BSR set to: 0
 17627  00C874  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17628  00C876  0D01               	mullw	1
 17629  00C878  0EA0               	movlw	low __display_itoa@tmp
 17630  00C87A  24F3               	addwf	prodl,w,c
 17631  00C87C  6ED9               	movwf	fsr2l,c
 17632  00C87E  0E00               	movlw	high __display_itoa@tmp
 17633  00C880  20F4               	addwfc	prodh,w,c
 17634  00C882  6EDA               	movwf	fsr2h,c
 17635  00C884  0E30               	movlw	48
 17636  00C886  6EDF               	movwf	indf2,c
 17637  00C888                     l1282:
 17638                           
 17639                           ; BSR set to: 0
 17640                           
 17641                           ; BSR set to: 0
 17642  00C888  07AC               	decf	__display_itoa@pos& (0+255),f,b
 17643  00C88A  D7C9               	goto	l16866
 17644  00C88C                     u17130:
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;display.c: 172: };display.c: 173: };display.c: 174: len = decimals + 1;
 17648                           
 17649                           ; BSR set to: 0
 17650  00C88C  2997               	incf	__display_itoa@decimals& (0+255),w,b
 17651  00C88E                     L41:
 17652  00C88E  6FAA               	movwf	__display_itoa@len& (0+255),b
 17653  00C890                     l1278:
 17654                           
 17655                           ; BSR set to: 0
 17656                           ;display.c: 175: };display.c: 176: };display.c: 178: decimals = len - decimals - 1;
 17657                           
 17658                           ; BSR set to: 0
 17659  00C890  5197               	movf	__display_itoa@decimals& (0+255),w,b
 17660  00C892  0800               	sublw	0
 17661  00C894  25AA               	addwf	__display_itoa@len& (0+255),w,b
 17662  00C896  6F9A               	movwf	??__display_itoa& (0+255),b
 17663  00C898  059A               	decf	??__display_itoa& (0+255),w,b
 17664  00C89A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;display.c: 180: for(pos=0;pos<len;++pos)
 17668  00C89C  0E00               	movlw	0
 17669  00C89E  6FAC               	movwf	__display_itoa@pos& (0+255),b
 17670  00C8A0  D023               	goto	l1283
 17671  00C8A2                     
 17672                           ; BSR set to: 0
 17673                           ;display.c: 181: {;display.c: 182: text[pos] = tmp[pos];
 17674                           
 17675                           ; BSR set to: 0
 17676  00C8A2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17677  00C8A4  0D01               	mullw	1
 17678  00C8A6  0EA0               	movlw	low __display_itoa@tmp
 17679  00C8A8  24F3               	addwf	prodl,w,c
 17680  00C8AA  6ED9               	movwf	fsr2l,c
 17681  00C8AC  0E00               	movlw	high __display_itoa@tmp
 17682  00C8AE  20F4               	addwfc	prodh,w,c
 17683  00C8B0  6EDA               	movwf	fsr2h,c
 17684  00C8B2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17685  00C8B4  0D01               	mullw	1
 17686  00C8B6  50F3               	movf	prodl,w,c
 17687  00C8B8  2598               	addwf	__display_itoa@text& (0+255),w,b
 17688  00C8BA  6EE1               	movwf	fsr1l,c
 17689  00C8BC  50F4               	movf	prodh,w,c
 17690  00C8BE  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 17691  00C8C0  6EE2               	movwf	fsr1h,c
 17692  00C8C2  CFDF FFE7          	movff	indf2,indf1
 17693                           
 17694                           ; BSR set to: 0
 17695                           ;display.c: 183: if(pos==decimals)
 17696  00C8C6  5197               	movf	__display_itoa@decimals& (0+255),w,b
 17697  00C8C8  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 17698  00C8CA  A4D8               	btfss	status,2,c
 17699  00C8CC  D00C               	goto	l1285
 17700                           
 17701                           ; BSR set to: 0
 17702                           ;display.c: 184: {;display.c: 186: ++pos;
 17703  00C8CE  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;display.c: 187: text[pos] = '.';
 17707  00C8D0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17708  00C8D2  0D01               	mullw	1
 17709  00C8D4  50F3               	movf	prodl,w,c
 17710  00C8D6  2598               	addwf	__display_itoa@text& (0+255),w,b
 17711  00C8D8  6ED9               	movwf	fsr2l,c
 17712  00C8DA  50F4               	movf	prodh,w,c
 17713  00C8DC  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 17714  00C8DE  6EDA               	movwf	fsr2h,c
 17715  00C8E0  0E2E               	movlw	46
 17716  00C8E2  6EDF               	movwf	indf2,c
 17717                           
 17718                           ;display.c: 188: break;
 17719  00C8E4  D01E               	goto	l1287
 17720  00C8E6                     l1285:
 17721                           
 17722                           ; BSR set to: 0
 17723                           
 17724                           ; BSR set to: 0
 17725  00C8E6  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 17726  00C8E8                     l1283:
 17727                           
 17728                           ; BSR set to: 0
 17729                           
 17730                           ; BSR set to: 0
 17731  00C8E8  51AA               	movf	__display_itoa@len& (0+255),w,b
 17732  00C8EA  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 17733  00C8EC  B0D8               	btfsc	status,0,c
 17734  00C8EE  D019               	goto	l1287
 17735  00C8F0  D7D8               	goto	l1284
 17736  00C8F2                     
 17737                           ; BSR set to: 0
 17738                           ;display.c: 192: {;display.c: 193: text[pos+1] = tmp[pos];
 17739                           
 17740                           ; BSR set to: 0
 17741  00C8F2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17742  00C8F4  0D01               	mullw	1
 17743  00C8F6  0EA0               	movlw	low __display_itoa@tmp
 17744  00C8F8  24F3               	addwf	prodl,w,c
 17745  00C8FA  6ED9               	movwf	fsr2l,c
 17746  00C8FC  0E00               	movlw	high __display_itoa@tmp
 17747  00C8FE  20F4               	addwfc	prodh,w,c
 17748  00C900  6EDA               	movwf	fsr2h,c
 17749  00C902  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17750  00C904  6F9A               	movwf	??__display_itoa& (0+255),b
 17751  00C906  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17752  00C908  0E01               	movlw	1
 17753  00C90A  279A               	addwf	??__display_itoa& (0+255),f,b
 17754  00C90C  0E00               	movlw	0
 17755  00C90E  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 17756  00C910  519A               	movf	??__display_itoa& (0+255),w,b
 17757  00C912  2598               	addwf	__display_itoa@text& (0+255),w,b
 17758  00C914  6EE1               	movwf	fsr1l,c
 17759  00C916  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 17760  00C918  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 17761  00C91A  6EE2               	movwf	fsr1h,c
 17762  00C91C  CFDF FFE7          	movff	indf2,indf1
 17763                           
 17764                           ; BSR set to: 0
 17765  00C920  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 17766  00C922                     l1287:
 17767                           
 17768                           ; BSR set to: 0
 17769                           
 17770                           ; BSR set to: 0
 17771  00C922  51AA               	movf	__display_itoa@len& (0+255),w,b
 17772  00C924  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 17773  00C926  A0D8               	btfss	status,0,c
 17774  00C928  D7E4               	goto	l1288
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;display.c: 194: };display.c: 195: text[pos+1] = 0;
 17778                           
 17779                           ; BSR set to: 0
 17780  00C92A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 17781  00C92C  6F9A               	movwf	??__display_itoa& (0+255),b
 17782  00C92E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 17783  00C930  0E01               	movlw	1
 17784  00C932  279A               	addwf	??__display_itoa& (0+255),f,b
 17785  00C934  0E00               	movlw	0
 17786  00C936  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 17787  00C938  519A               	movf	??__display_itoa& (0+255),w,b
 17788  00C93A  2598               	addwf	__display_itoa@text& (0+255),w,b
 17789  00C93C  6ED9               	movwf	fsr2l,c
 17790  00C93E  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 17791  00C940  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 17792  00C942  6EDA               	movwf	fsr2h,c
 17793  00C944  0E00               	movlw	0
 17794  00C946  6EDF               	movwf	indf2,c
 17795                           
 17796                           ; BSR set to: 0
 17797  00C948  0012               	return		;funcret
 17798  00C94A                     __end_of__display_itoa:
 17799                           	opt stack 0
 17800                           tblptru	equ	0xFF8
 17801                           tblptrh	equ	0xFF7
 17802                           tblptrl	equ	0xFF6
 17803                           tablat	equ	0xFF5
 17804                           prodh	equ	0xFF4
 17805                           prodl	equ	0xFF3
 17806                           intcon	equ	0xFF2
 17807                           indf0	equ	0xFEF
 17808                           postinc0	equ	0xFEE
 17809                           fsr0h	equ	0xFEA
 17810                           fsr0l	equ	0xFE9
 17811                           wreg	equ	0xFE8
 17812                           indf1	equ	0xFE7
 17813                           postdec1	equ	0xFE5
 17814                           plusw1	equ	0xFE3
 17815                           fsr1h	equ	0xFE2
 17816                           fsr1l	equ	0xFE1
 17817                           indf2	equ	0xFDF
 17818                           postinc2	equ	0xFDE
 17819                           postdec2	equ	0xFDD
 17820                           plusw2	equ	0xFDB
 17821                           fsr2h	equ	0xFDA
 17822                           fsr2l	equ	0xFD9
 17823                           status	equ	0xFD8
 17824                           
 17825 ;; *************** function _strlen *****************
 17826 ;; Defined at:
 17827 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 17828 ;; Parameters:    Size  Location     Type
 17829 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 17830 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 17831 ;; Auto vars:     Size  Location     Type
 17832 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 17833 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 17834 ;; Return value:  Size  Location     Type
 17835 ;;                  2    0[BANK0 ] unsigned int 
 17836 ;; Registers used:
 17837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17838 ;; Tracked objects:
 17839 ;;		On entry : 0/0
 17840 ;;		On exit  : 0/0
 17841 ;;		Unchanged: 0/0
 17842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17843 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17844 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17846 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17847 ;;Total ram usage:        6 bytes
 17848 ;; Hardware stack levels used:    1
 17849 ;; Hardware stack levels required when called:   10
 17850 ;; This function calls:
 17851 ;;		Nothing
 17852 ;; This function is called by:
 17853 ;;		__display_padded_itoa
 17854 ;;		__display_itoa
 17855 ;;		__display_itoa_long
 17856 ;;		_display_prepare
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860                           	psect	text46
 17861  00F2FA                     __ptext46:
 17862                           	opt stack 0
 17863  00F2FA                     _strlen:
 17864                           	opt stack 19
 17865                           
 17866                           ; BSR set to: 0
 17867                           ;incstack = 0
 17868  00F2FA  C060  F064         	movff	strlen@s,strlen@cp
 17869  00F2FE  C061  F065         	movff	strlen@s+1,strlen@cp+1
 17870  00F302  D003               	goto	l3324
 17871  00F304  0100               	movlb	0	; () banked
 17872  00F306  4B64               	infsnz	strlen@cp& (0+255),f,b
 17873  00F308  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 17874  00F30A                     l3324:
 17875                           
 17876                           ; BSR set to: 0
 17877  00F30A  C064  FFD9         	movff	strlen@cp,fsr2l
 17878  00F30E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 17879  00F312  50DF               	movf	indf2,w,c
 17880  00F314  A4D8               	btfss	status,2,c
 17881  00F316  D7F6               	goto	l3325
 17882  00F318  C060  F062         	movff	strlen@s,??_strlen
 17883  00F31C  C061  F063         	movff	strlen@s+1,??_strlen+1
 17884  00F320  0100               	movlb	0	; () banked
 17885  00F322  1F62               	comf	??_strlen& (0+255),f,b
 17886  00F324  1F63               	comf	(??_strlen+1)& (0+255),f,b
 17887  00F326  4B62               	infsnz	??_strlen& (0+255),f,b
 17888  00F328  2B63               	incf	(??_strlen+1)& (0+255),f,b
 17889  00F32A  5164               	movf	strlen@cp& (0+255),w,b
 17890  00F32C  2562               	addwf	??_strlen& (0+255),w,b
 17891  00F32E  6F60               	movwf	?_strlen& (0+255),b
 17892  00F330  5165               	movf	(strlen@cp+1)& (0+255),w,b
 17893  00F332  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 17894  00F334  6F61               	movwf	(?_strlen+1)& (0+255),b
 17895  00F336  0012               	return	
 17896  00F338                     __end_of_strlen:
 17897                           	opt stack 0
 17898                           tblptru	equ	0xFF8
 17899                           tblptrh	equ	0xFF7
 17900                           tblptrl	equ	0xFF6
 17901                           tablat	equ	0xFF5
 17902                           prodh	equ	0xFF4
 17903                           prodl	equ	0xFF3
 17904                           intcon	equ	0xFF2
 17905                           indf0	equ	0xFEF
 17906                           postinc0	equ	0xFEE
 17907                           fsr0h	equ	0xFEA
 17908                           fsr0l	equ	0xFE9
 17909                           wreg	equ	0xFE8
 17910                           indf1	equ	0xFE7
 17911                           postdec1	equ	0xFE5
 17912                           plusw1	equ	0xFE3
 17913                           fsr1h	equ	0xFE2
 17914                           fsr1l	equ	0xFE1
 17915                           indf2	equ	0xFDF
 17916                           postinc2	equ	0xFDE
 17917                           postdec2	equ	0xFDD
 17918                           plusw2	equ	0xFDB
 17919                           fsr2h	equ	0xFDA
 17920                           fsr2l	equ	0xFD9
 17921                           status	equ	0xFD8
 17922                           
 17923 ;; *************** function _itoa *****************
 17924 ;; Defined at:
 17925 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 17926 ;; Parameters:    Size  Location     Type
 17927 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 17928 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 17929 ;;  val             2   18[BANK0 ] int 
 17930 ;;  base            2   20[BANK0 ] int 
 17931 ;; Auto vars:     Size  Location     Type
 17932 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 17933 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 17934 ;; Return value:  Size  Location     Type
 17935 ;;                  2   16[BANK0 ] PTR unsigned char 
 17936 ;; Registers used:
 17937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17938 ;; Tracked objects:
 17939 ;;		On entry : 0/0
 17940 ;;		On exit  : 0/0
 17941 ;;		Unchanged: 0/0
 17942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17943 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17946 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17947 ;;Total ram usage:        8 bytes
 17948 ;; Hardware stack levels used:    1
 17949 ;; Hardware stack levels required when called:   12
 17950 ;; This function calls:
 17951 ;;		_utoa
 17952 ;; This function is called by:
 17953 ;;		__display_padded_itoa
 17954 ;;		__display_itoa
 17955 ;; This function uses a non-reentrant model
 17956 ;;
 17957                           
 17958                           	psect	text47
 17959  00F1EA                     __ptext47:
 17960                           	opt stack 0
 17961  00F1EA                     _itoa:
 17962                           	opt stack 15
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;incstack = 0
 17966  00F1EA  C070  F076         	movff	itoa@buf,itoa@cp
 17967  00F1EE  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 17968  00F1F2  0100               	movlb	0	; () banked
 17969  00F1F4  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 17970  00F1F6  D00C               	goto	l3300
 17971                           
 17972                           ; BSR set to: 0
 17973  00F1F8  C070  FFD9         	movff	itoa@buf,fsr2l
 17974  00F1FC  C071  FFDA         	movff	itoa@buf+1,fsr2h
 17975  00F200  0E2D               	movlw	45
 17976  00F202  6EDF               	movwf	indf2,c
 17977                           
 17978                           ; BSR set to: 0
 17979  00F204  4B70               	infsnz	itoa@buf& (0+255),f,b
 17980  00F206  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 17981                           
 17982                           ; BSR set to: 0
 17983  00F208  6D72               	negf	itoa@val& (0+255),b
 17984  00F20A  1F73               	comf	(itoa@val+1)& (0+255),f,b
 17985  00F20C  B0D8               	btfsc	status,0,c
 17986  00F20E  2B73               	incf	(itoa@val+1)& (0+255),f,b
 17987  00F210                     l3300:
 17988                           
 17989                           ; BSR set to: 0
 17990                           
 17991                           ; BSR set to: 0
 17992  00F210  C070  F067         	movff	itoa@buf,utoa@buf
 17993  00F214  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 17994  00F218  C072  F069         	movff	itoa@val,utoa@val
 17995  00F21C  C073  F06A         	movff	itoa@val+1,utoa@val+1
 17996  00F220  C074  F06B         	movff	itoa@base,utoa@base
 17997  00F224  C075  F06C         	movff	itoa@base+1,utoa@base+1
 17998  00F228  EC2D  F072         	call	_utoa	;wreg free
 17999  00F22C  0012               	return	
 18000  00F22E                     __end_of_itoa:
 18001                           	opt stack 0
 18002                           tblptru	equ	0xFF8
 18003                           tblptrh	equ	0xFF7
 18004                           tblptrl	equ	0xFF6
 18005                           tablat	equ	0xFF5
 18006                           prodh	equ	0xFF4
 18007                           prodl	equ	0xFF3
 18008                           intcon	equ	0xFF2
 18009                           indf0	equ	0xFEF
 18010                           postinc0	equ	0xFEE
 18011                           fsr0h	equ	0xFEA
 18012                           fsr0l	equ	0xFE9
 18013                           wreg	equ	0xFE8
 18014                           indf1	equ	0xFE7
 18015                           postdec1	equ	0xFE5
 18016                           plusw1	equ	0xFE3
 18017                           fsr1h	equ	0xFE2
 18018                           fsr1l	equ	0xFE1
 18019                           indf2	equ	0xFDF
 18020                           postinc2	equ	0xFDE
 18021                           postdec2	equ	0xFDD
 18022                           plusw2	equ	0xFDB
 18023                           fsr2h	equ	0xFDA
 18024                           fsr2l	equ	0xFD9
 18025                           status	equ	0xFD8
 18026                           
 18027 ;; *************** function _utoa *****************
 18028 ;; Defined at:
 18029 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 18030 ;; Parameters:    Size  Location     Type
 18031 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 18032 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 18033 ;;  val             2    9[BANK0 ] unsigned int 
 18034 ;;  base            2   11[BANK0 ] int 
 18035 ;; Auto vars:     Size  Location     Type
 18036 ;;  v               2   13[BANK0 ] unsigned int 
 18037 ;;  c               1   15[BANK0 ] unsigned char 
 18038 ;; Return value:  Size  Location     Type
 18039 ;;                  2    7[BANK0 ] PTR unsigned char 
 18040 ;; Registers used:
 18041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18042 ;; Tracked objects:
 18043 ;;		On entry : 0/0
 18044 ;;		On exit  : 0/0
 18045 ;;		Unchanged: 0/0
 18046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18047 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18048 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18050 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18051 ;;Total ram usage:        9 bytes
 18052 ;; Hardware stack levels used:    1
 18053 ;; Hardware stack levels required when called:   11
 18054 ;; This function calls:
 18055 ;;		___lwdiv
 18056 ;;		___lwmod
 18057 ;; This function is called by:
 18058 ;;		_itoa
 18059 ;; This function uses a non-reentrant model
 18060 ;;
 18061                           
 18062                           	psect	text48
 18063  00E45A                     __ptext48:
 18064                           	opt stack 0
 18065  00E45A                     _utoa:
 18066                           	opt stack 15
 18067                           
 18068                           ;incstack = 0
 18069  00E45A  C069  F06D         	movff	utoa@val,utoa@v
 18070  00E45E  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 18071  00E462  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 18072  00E466  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 18073  00E46A  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 18074  00E46E  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 18075  00E472  ECC1  F077         	call	___lwdiv	;wreg free
 18076  00E476  C060  F06D         	movff	?___lwdiv,utoa@v
 18077  00E47A  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 18078  00E47E  0100               	movlb	0	; () banked
 18079  00E480  4B67               	infsnz	utoa@buf& (0+255),f,b
 18080  00E482  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 18081                           
 18082                           ; BSR set to: 0
 18083  00E484  516D               	movf	utoa@v& (0+255),w,b
 18084  00E486  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 18085  00E488  A4D8               	btfss	status,2,c
 18086  00E48A  D7EB               	goto	l3304
 18087                           
 18088                           ; BSR set to: 0
 18089                           
 18090                           ; BSR set to: 0
 18091  00E48C  C067  FFD9         	movff	utoa@buf,fsr2l
 18092  00E490  C068  FFDA         	movff	utoa@buf+1,fsr2h
 18093  00E494  0E00               	movlw	0
 18094  00E496  6EDF               	movwf	indf2,c
 18095                           
 18096                           ; BSR set to: 0
 18097  00E498  0767               	decf	utoa@buf& (0+255),f,b
 18098  00E49A  A0D8               	btfss	status,0,c
 18099  00E49C  0768               	decf	(utoa@buf+1)& (0+255),f,b
 18100  00E49E                     
 18101                           ; BSR set to: 0
 18102                           
 18103                           ; BSR set to: 0
 18104  00E49E  C069  F060         	movff	utoa@val,___lwmod@dividend
 18105  00E4A2  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 18106  00E4A6  C06B  F062         	movff	utoa@base,___lwmod@divisor
 18107  00E4AA  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 18108  00E4AE  EC17  F079         	call	___lwmod	;wreg free
 18109  00E4B2  0100               	movlb	0	; () banked
 18110  00E4B4  5160               	movf	?___lwmod& (0+255),w,b
 18111  00E4B6  6F6F               	movwf	utoa@c& (0+255),b
 18112                           
 18113                           ; BSR set to: 0
 18114  00E4B8  C069  F060         	movff	utoa@val,___lwdiv@dividend
 18115  00E4BC  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 18116  00E4C0  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 18117  00E4C4  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 18118  00E4C8  ECC1  F077         	call	___lwdiv	;wreg free
 18119  00E4CC  C060  F069         	movff	?___lwdiv,utoa@val
 18120  00E4D0  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 18121  00E4D4  0E09               	movlw	9
 18122  00E4D6  0100               	movlb	0	; () banked
 18123  00E4D8  656F               	cpfsgt	utoa@c& (0+255),b
 18124  00E4DA  D002               	goto	l3307
 18125                           
 18126                           ; BSR set to: 0
 18127  00E4DC  0E07               	movlw	7
 18128  00E4DE  276F               	addwf	utoa@c& (0+255),f,b
 18129  00E4E0                     l3307:
 18130                           
 18131                           ; BSR set to: 0
 18132  00E4E0  0E30               	movlw	48
 18133  00E4E2  276F               	addwf	utoa@c& (0+255),f,b
 18134                           
 18135                           ; BSR set to: 0
 18136  00E4E4  C067  FFD9         	movff	utoa@buf,fsr2l
 18137  00E4E8  C068  FFDA         	movff	utoa@buf+1,fsr2h
 18138  00E4EC  C06F  FFDF         	movff	utoa@c,indf2
 18139                           
 18140                           ; BSR set to: 0
 18141  00E4F0  0767               	decf	utoa@buf& (0+255),f,b
 18142  00E4F2  A0D8               	btfss	status,0,c
 18143  00E4F4  0768               	decf	(utoa@buf+1)& (0+255),f,b
 18144                           
 18145                           ; BSR set to: 0
 18146  00E4F6  5169               	movf	utoa@val& (0+255),w,b
 18147  00E4F8  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 18148  00E4FA  A4D8               	btfss	status,2,c
 18149  00E4FC  D7D0               	goto	l3306
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;	Return value of _utoa is never used
 18153                           
 18154                           ; BSR set to: 0
 18155  00E4FE  4B67               	infsnz	utoa@buf& (0+255),f,b
 18156  00E500  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 18157  00E502  0012               	return	
 18158  00E504                     __end_of_utoa:
 18159                           	opt stack 0
 18160                           tblptru	equ	0xFF8
 18161                           tblptrh	equ	0xFF7
 18162                           tblptrl	equ	0xFF6
 18163                           tablat	equ	0xFF5
 18164                           prodh	equ	0xFF4
 18165                           prodl	equ	0xFF3
 18166                           intcon	equ	0xFF2
 18167                           indf0	equ	0xFEF
 18168                           postinc0	equ	0xFEE
 18169                           fsr0h	equ	0xFEA
 18170                           fsr0l	equ	0xFE9
 18171                           wreg	equ	0xFE8
 18172                           indf1	equ	0xFE7
 18173                           postdec1	equ	0xFE5
 18174                           plusw1	equ	0xFE3
 18175                           fsr1h	equ	0xFE2
 18176                           fsr1l	equ	0xFE1
 18177                           indf2	equ	0xFDF
 18178                           postinc2	equ	0xFDE
 18179                           postdec2	equ	0xFDD
 18180                           plusw2	equ	0xFDB
 18181                           fsr2h	equ	0xFDA
 18182                           fsr2l	equ	0xFD9
 18183                           status	equ	0xFD8
 18184                           
 18185 ;; *************** function ___lwmod *****************
 18186 ;; Defined at:
 18187 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 18188 ;; Parameters:    Size  Location     Type
 18189 ;;  dividend        2    0[BANK0 ] unsigned int 
 18190 ;;  divisor         2    2[BANK0 ] unsigned int 
 18191 ;; Auto vars:     Size  Location     Type
 18192 ;;  counter         1    4[BANK0 ] unsigned char 
 18193 ;; Return value:  Size  Location     Type
 18194 ;;                  2    0[BANK0 ] unsigned int 
 18195 ;; Registers used:
 18196 ;;		wreg, status,2, status,0
 18197 ;; Tracked objects:
 18198 ;;		On entry : 0/0
 18199 ;;		On exit  : 0/0
 18200 ;;		Unchanged: 0/0
 18201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18202 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18205 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18206 ;;Total ram usage:        5 bytes
 18207 ;; Hardware stack levels used:    1
 18208 ;; Hardware stack levels required when called:   10
 18209 ;; This function calls:
 18210 ;;		Nothing
 18211 ;; This function is called by:
 18212 ;;		_utoa
 18213 ;; This function uses a non-reentrant model
 18214 ;;
 18215                           
 18216                           	psect	text49
 18217  00F22E                     __ptext49:
 18218                           	opt stack 0
 18219  00F22E                     ___lwmod:
 18220                           	opt stack 15
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;incstack = 0
 18224  00F22E  0100               	movlb	0	; () banked
 18225  00F230  5162               	movf	___lwmod@divisor& (0+255),w,b
 18226  00F232  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18227  00F234  B4D8               	btfsc	status,2,c
 18228  00F236  D018               	goto	l3131
 18229                           
 18230                           ; BSR set to: 0
 18231  00F238  0E01               	movlw	1
 18232  00F23A  6F64               	movwf	___lwmod@counter& (0+255),b
 18233  00F23C  D004               	goto	l3126
 18234  00F23E                     
 18235                           ; BSR set to: 0
 18236                           
 18237                           ; BSR set to: 0
 18238  00F23E  90D8               	bcf	status,0,c
 18239  00F240  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 18240  00F242  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18241  00F244  2B64               	incf	___lwmod@counter& (0+255),f,b
 18242  00F246                     l3126:
 18243                           
 18244                           ; BSR set to: 0
 18245                           
 18246                           ; BSR set to: 0
 18247  00F246  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18248  00F248  D7FA               	goto	l3127
 18249  00F24A                     u16090:
 18250                           
 18251                           ; BSR set to: 0
 18252                           
 18253                           ; BSR set to: 0
 18254                           
 18255                           ; BSR set to: 0
 18256  00F24A  5162               	movf	___lwmod@divisor& (0+255),w,b
 18257  00F24C  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 18258  00F24E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18259  00F250  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18260  00F252  A0D8               	btfss	status,0,c
 18261  00F254  D004               	goto	l3130
 18262                           
 18263                           ; BSR set to: 0
 18264  00F256  5162               	movf	___lwmod@divisor& (0+255),w,b
 18265  00F258  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 18266  00F25A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18267  00F25C  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18268  00F25E                     l3130:
 18269                           
 18270                           ; BSR set to: 0
 18271                           
 18272                           ; BSR set to: 0
 18273  00F25E  90D8               	bcf	status,0,c
 18274  00F260  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18275  00F262  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 18276                           
 18277                           ; BSR set to: 0
 18278  00F264  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 18279  00F266  D7F1               	goto	u16090
 18280  00F268                     l3131:
 18281                           
 18282                           ; BSR set to: 0
 18283                           
 18284                           ; BSR set to: 0
 18285  00F268  C060  F060         	movff	___lwmod@dividend,?___lwmod
 18286  00F26C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 18287                           
 18288                           ; BSR set to: 0
 18289  00F270  0012               	return		;funcret
 18290  00F272                     __end_of___lwmod:
 18291                           	opt stack 0
 18292                           tblptru	equ	0xFF8
 18293                           tblptrh	equ	0xFF7
 18294                           tblptrl	equ	0xFF6
 18295                           tablat	equ	0xFF5
 18296                           prodh	equ	0xFF4
 18297                           prodl	equ	0xFF3
 18298                           intcon	equ	0xFF2
 18299                           indf0	equ	0xFEF
 18300                           postinc0	equ	0xFEE
 18301                           fsr0h	equ	0xFEA
 18302                           fsr0l	equ	0xFE9
 18303                           wreg	equ	0xFE8
 18304                           indf1	equ	0xFE7
 18305                           postdec1	equ	0xFE5
 18306                           plusw1	equ	0xFE3
 18307                           fsr1h	equ	0xFE2
 18308                           fsr1l	equ	0xFE1
 18309                           indf2	equ	0xFDF
 18310                           postinc2	equ	0xFDE
 18311                           postdec2	equ	0xFDD
 18312                           plusw2	equ	0xFDB
 18313                           fsr2h	equ	0xFDA
 18314                           fsr2l	equ	0xFD9
 18315                           status	equ	0xFD8
 18316                           
 18317 ;; *************** function ___lwdiv *****************
 18318 ;; Defined at:
 18319 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 18320 ;; Parameters:    Size  Location     Type
 18321 ;;  dividend        2    0[BANK0 ] unsigned int 
 18322 ;;  divisor         2    2[BANK0 ] unsigned int 
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;  quotient        2    5[BANK0 ] unsigned int 
 18325 ;;  counter         1    4[BANK0 ] unsigned char 
 18326 ;; Return value:  Size  Location     Type
 18327 ;;                  2    0[BANK0 ] unsigned int 
 18328 ;; Registers used:
 18329 ;;		wreg, status,2, status,0
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18336 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18338 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18339 ;;Total ram usage:        7 bytes
 18340 ;; Hardware stack levels used:    1
 18341 ;; Hardware stack levels required when called:   10
 18342 ;; This function calls:
 18343 ;;		Nothing
 18344 ;; This function is called by:
 18345 ;;		_utoa
 18346 ;; This function uses a non-reentrant model
 18347 ;;
 18348                           
 18349                           	psect	text50
 18350  00EF82                     __ptext50:
 18351                           	opt stack 0
 18352  00EF82                     ___lwdiv:
 18353                           	opt stack 15
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;incstack = 0
 18357  00EF82  0E00               	movlw	0
 18358  00EF84  0100               	movlb	0	; () banked
 18359  00EF86  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 18360  00EF88  0E00               	movlw	0
 18361  00EF8A  6F65               	movwf	___lwdiv@quotient& (0+255),b
 18362                           
 18363                           ; BSR set to: 0
 18364  00EF8C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18365  00EF8E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 18366  00EF90  B4D8               	btfsc	status,2,c
 18367  00EF92  D01C               	goto	l3121
 18368                           
 18369                           ; BSR set to: 0
 18370  00EF94  0E01               	movlw	1
 18371  00EF96  6F64               	movwf	___lwdiv@counter& (0+255),b
 18372  00EF98  D004               	goto	l3116
 18373  00EF9A                     
 18374                           ; BSR set to: 0
 18375                           
 18376                           ; BSR set to: 0
 18377  00EF9A  90D8               	bcf	status,0,c
 18378  00EF9C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 18379  00EF9E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 18380  00EFA0  2B64               	incf	___lwdiv@counter& (0+255),f,b
 18381  00EFA2                     l3116:
 18382                           
 18383                           ; BSR set to: 0
 18384                           
 18385                           ; BSR set to: 0
 18386  00EFA2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 18387  00EFA4  D7FA               	goto	l3117
 18388  00EFA6                     u16060:
 18389                           
 18390                           ; BSR set to: 0
 18391                           
 18392                           ; BSR set to: 0
 18393                           
 18394                           ; BSR set to: 0
 18395  00EFA6  90D8               	bcf	status,0,c
 18396  00EFA8  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 18397  00EFAA  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 18398                           
 18399                           ; BSR set to: 0
 18400  00EFAC  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18401  00EFAE  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 18402  00EFB0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18403  00EFB2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 18404  00EFB4  A0D8               	btfss	status,0,c
 18405  00EFB6  D005               	goto	l3120
 18406                           
 18407                           ; BSR set to: 0
 18408  00EFB8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 18409  00EFBA  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 18410  00EFBC  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18411  00EFBE  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 18412                           
 18413                           ; BSR set to: 0
 18414  00EFC0  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 18415  00EFC2                     l3120:
 18416                           
 18417                           ; BSR set to: 0
 18418                           
 18419                           ; BSR set to: 0
 18420  00EFC2  90D8               	bcf	status,0,c
 18421  00EFC4  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 18422  00EFC6  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 18423                           
 18424                           ; BSR set to: 0
 18425  00EFC8  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 18426  00EFCA  D7ED               	goto	u16060
 18427  00EFCC                     l3121:
 18428                           
 18429                           ; BSR set to: 0
 18430                           
 18431                           ; BSR set to: 0
 18432  00EFCC  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 18433  00EFD0  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 18434                           
 18435                           ; BSR set to: 0
 18436  00EFD4  0012               	return		;funcret
 18437  00EFD6                     __end_of___lwdiv:
 18438                           	opt stack 0
 18439                           tblptru	equ	0xFF8
 18440                           tblptrh	equ	0xFF7
 18441                           tblptrl	equ	0xFF6
 18442                           tablat	equ	0xFF5
 18443                           prodh	equ	0xFF4
 18444                           prodl	equ	0xFF3
 18445                           intcon	equ	0xFF2
 18446                           indf0	equ	0xFEF
 18447                           postinc0	equ	0xFEE
 18448                           fsr0h	equ	0xFEA
 18449                           fsr0l	equ	0xFE9
 18450                           wreg	equ	0xFE8
 18451                           indf1	equ	0xFE7
 18452                           postdec1	equ	0xFE5
 18453                           plusw1	equ	0xFE3
 18454                           fsr1h	equ	0xFE2
 18455                           fsr1l	equ	0xFE1
 18456                           indf2	equ	0xFDF
 18457                           postinc2	equ	0xFDE
 18458                           postdec2	equ	0xFDD
 18459                           plusw2	equ	0xFDB
 18460                           fsr2h	equ	0xFDA
 18461                           fsr2l	equ	0xFD9
 18462                           status	equ	0xFD8
 18463                           
 18464 ;; *************** function ___almod *****************
 18465 ;; Defined at:
 18466 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 18467 ;; Parameters:    Size  Location     Type
 18468 ;;  dividend        4    0[BANK0 ] long 
 18469 ;;  divisor         4    4[BANK0 ] long 
 18470 ;; Auto vars:     Size  Location     Type
 18471 ;;  sign            1    9[BANK0 ] unsigned char 
 18472 ;;  counter         1    8[BANK0 ] unsigned char 
 18473 ;; Return value:  Size  Location     Type
 18474 ;;                  4    0[BANK0 ] long 
 18475 ;; Registers used:
 18476 ;;		wreg, status,2, status,0
 18477 ;; Tracked objects:
 18478 ;;		On entry : 0/0
 18479 ;;		On exit  : 0/0
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18482 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18483 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18485 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18486 ;;Total ram usage:       10 bytes
 18487 ;; Hardware stack levels used:    1
 18488 ;; Hardware stack levels required when called:   10
 18489 ;; This function calls:
 18490 ;;		Nothing
 18491 ;; This function is called by:
 18492 ;;		__display_itoa_long
 18493 ;; This function uses a non-reentrant model
 18494 ;;
 18495                           
 18496                           	psect	text51
 18497  00E3AC                     __ptext51:
 18498                           	opt stack 0
 18499  00E3AC                     ___almod:
 18500                           	opt stack 18
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;incstack = 0
 18504  00E3AC  0E00               	movlw	0
 18505  00E3AE  0100               	movlb	0	; () banked
 18506  00E3B0  6F69               	movwf	___almod@sign& (0+255),b
 18507                           
 18508                           ; BSR set to: 0
 18509  00E3B2  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 18510  00E3B4  D00A               	goto	l2718
 18511                           
 18512                           ; BSR set to: 0
 18513  00E3B6  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18514  00E3B8  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18515  00E3BA  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18516  00E3BC  6D60               	negf	___almod@dividend& (0+255),b
 18517  00E3BE  0E00               	movlw	0
 18518  00E3C0  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18519  00E3C2  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18520  00E3C4  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18521                           
 18522                           ; BSR set to: 0
 18523  00E3C6  0E01               	movlw	1
 18524  00E3C8  6F69               	movwf	___almod@sign& (0+255),b
 18525  00E3CA                     l2718:
 18526                           
 18527                           ; BSR set to: 0
 18528                           
 18529                           ; BSR set to: 0
 18530  00E3CA  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18531  00E3CC  D008               	goto	l2719
 18532                           
 18533                           ; BSR set to: 0
 18534  00E3CE  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 18535  00E3D0  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 18536  00E3D2  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 18537  00E3D4  6D64               	negf	___almod@divisor& (0+255),b
 18538  00E3D6  0E00               	movlw	0
 18539  00E3D8  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 18540  00E3DA  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 18541  00E3DC  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 18542  00E3DE                     l2719:
 18543                           
 18544                           ; BSR set to: 0
 18545                           
 18546                           ; BSR set to: 0
 18547  00E3DE  5164               	movf	___almod@divisor& (0+255),w,b
 18548  00E3E0  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 18549  00E3E2  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 18550  00E3E4  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 18551  00E3E6  B4D8               	btfsc	status,2,c
 18552  00E3E8  D024               	goto	l2726
 18553                           
 18554                           ; BSR set to: 0
 18555  00E3EA  0E01               	movlw	1
 18556  00E3EC  6F68               	movwf	___almod@counter& (0+255),b
 18557  00E3EE  D006               	goto	l2721
 18558  00E3F0                     
 18559                           ; BSR set to: 0
 18560                           
 18561                           ; BSR set to: 0
 18562  00E3F0  90D8               	bcf	status,0,c
 18563  00E3F2  3764               	rlcf	___almod@divisor& (0+255),f,b
 18564  00E3F4  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 18565  00E3F6  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 18566  00E3F8  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 18567  00E3FA  2B68               	incf	___almod@counter& (0+255),f,b
 18568  00E3FC                     l2721:
 18569                           
 18570                           ; BSR set to: 0
 18571                           
 18572                           ; BSR set to: 0
 18573  00E3FC  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 18574  00E3FE  D7F8               	goto	l2722
 18575  00E400                     u17340:
 18576                           
 18577                           ; BSR set to: 0
 18578                           
 18579                           ; BSR set to: 0
 18580                           
 18581                           ; BSR set to: 0
 18582  00E400  5164               	movf	___almod@divisor& (0+255),w,b
 18583  00E402  5D60               	subwf	___almod@dividend& (0+255),w,b
 18584  00E404  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18585  00E406  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 18586  00E408  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18587  00E40A  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 18588  00E40C  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18589  00E40E  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 18590  00E410  A0D8               	btfss	status,0,c
 18591  00E412  D008               	goto	l2725
 18592                           
 18593                           ; BSR set to: 0
 18594  00E414  5164               	movf	___almod@divisor& (0+255),w,b
 18595  00E416  5F60               	subwf	___almod@dividend& (0+255),f,b
 18596  00E418  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 18597  00E41A  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 18598  00E41C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 18599  00E41E  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 18600  00E420  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 18601  00E422  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 18602  00E424                     l2725:
 18603                           
 18604                           ; BSR set to: 0
 18605                           
 18606                           ; BSR set to: 0
 18607  00E424  90D8               	bcf	status,0,c
 18608  00E426  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 18609  00E428  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 18610  00E42A  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 18611  00E42C  3364               	rrcf	___almod@divisor& (0+255),f,b
 18612                           
 18613                           ; BSR set to: 0
 18614  00E42E  2F68               	decfsz	___almod@counter& (0+255),f,b
 18615  00E430  D7E7               	goto	u17340
 18616  00E432                     l2726:
 18617                           
 18618                           ; BSR set to: 0
 18619                           
 18620                           ; BSR set to: 0
 18621                           
 18622                           ; BSR set to: 0
 18623  00E432  5169               	movf	___almod@sign& (0+255),w,b
 18624  00E434  B4D8               	btfsc	status,2,c
 18625  00E436  D008               	goto	l2727
 18626                           
 18627                           ; BSR set to: 0
 18628  00E438  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 18629  00E43A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 18630  00E43C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 18631  00E43E  6D60               	negf	___almod@dividend& (0+255),b
 18632  00E440  0E00               	movlw	0
 18633  00E442  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 18634  00E444  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 18635  00E446  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 18636  00E448                     l2727:
 18637                           
 18638                           ; BSR set to: 0
 18639                           
 18640                           ; BSR set to: 0
 18641  00E448  C060  F060         	movff	___almod@dividend,?___almod
 18642  00E44C  C061  F061         	movff	___almod@dividend+1,?___almod+1
 18643  00E450  C062  F062         	movff	___almod@dividend+2,?___almod+2
 18644  00E454  C063  F063         	movff	___almod@dividend+3,?___almod+3
 18645  00E458  0012               	return	
 18646  00E45A                     __end_of___almod:
 18647                           	opt stack 0
 18648                           tblptru	equ	0xFF8
 18649                           tblptrh	equ	0xFF7
 18650                           tblptrl	equ	0xFF6
 18651                           tablat	equ	0xFF5
 18652                           prodh	equ	0xFF4
 18653                           prodl	equ	0xFF3
 18654                           intcon	equ	0xFF2
 18655                           indf0	equ	0xFEF
 18656                           postinc0	equ	0xFEE
 18657                           fsr0h	equ	0xFEA
 18658                           fsr0l	equ	0xFE9
 18659                           wreg	equ	0xFE8
 18660                           indf1	equ	0xFE7
 18661                           postdec1	equ	0xFE5
 18662                           plusw1	equ	0xFE3
 18663                           fsr1h	equ	0xFE2
 18664                           fsr1l	equ	0xFE1
 18665                           indf2	equ	0xFDF
 18666                           postinc2	equ	0xFDE
 18667                           postdec2	equ	0xFDD
 18668                           plusw2	equ	0xFDB
 18669                           fsr2h	equ	0xFDA
 18670                           fsr2l	equ	0xFD9
 18671                           status	equ	0xFD8
 18672                           
 18673 ;; *************** function ___aldiv *****************
 18674 ;; Defined at:
 18675 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 18676 ;; Parameters:    Size  Location     Type
 18677 ;;  dividend        4    0[BANK0 ] long 
 18678 ;;  divisor         4    4[BANK0 ] long 
 18679 ;; Auto vars:     Size  Location     Type
 18680 ;;  quotient        4   10[BANK0 ] long 
 18681 ;;  sign            1    9[BANK0 ] unsigned char 
 18682 ;;  counter         1    8[BANK0 ] unsigned char 
 18683 ;; Return value:  Size  Location     Type
 18684 ;;                  4    0[BANK0 ] long 
 18685 ;; Registers used:
 18686 ;;		wreg, status,2, status,0
 18687 ;; Tracked objects:
 18688 ;;		On entry : 0/0
 18689 ;;		On exit  : 0/0
 18690 ;;		Unchanged: 0/0
 18691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18692 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18693 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18695 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18696 ;;Total ram usage:       14 bytes
 18697 ;; Hardware stack levels used:    1
 18698 ;; Hardware stack levels required when called:   10
 18699 ;; This function calls:
 18700 ;;		Nothing
 18701 ;; This function is called by:
 18702 ;;		__display_itoa_long
 18703 ;; This function uses a non-reentrant model
 18704 ;;
 18705                           
 18706                           	psect	text52
 18707  00DFD4                     __ptext52:
 18708                           	opt stack 0
 18709  00DFD4                     ___aldiv:
 18710                           	opt stack 18
 18711                           
 18712                           ; BSR set to: 0
 18713                           ;incstack = 0
 18714  00DFD4  0E00               	movlw	0
 18715  00DFD6  0100               	movlb	0	; () banked
 18716  00DFD8  6F69               	movwf	___aldiv@sign& (0+255),b
 18717                           
 18718                           ; BSR set to: 0
 18719  00DFDA  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 18720  00DFDC  D00A               	goto	l2705
 18721                           
 18722                           ; BSR set to: 0
 18723  00DFDE  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 18724  00DFE0  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 18725  00DFE2  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 18726  00DFE4  6D64               	negf	___aldiv@divisor& (0+255),b
 18727  00DFE6  0E00               	movlw	0
 18728  00DFE8  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 18729  00DFEA  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 18730  00DFEC  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 18731                           
 18732                           ; BSR set to: 0
 18733  00DFEE  0E01               	movlw	1
 18734  00DFF0  6F69               	movwf	___aldiv@sign& (0+255),b
 18735  00DFF2                     l2705:
 18736                           
 18737                           ; BSR set to: 0
 18738                           
 18739                           ; BSR set to: 0
 18740  00DFF2  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 18741  00DFF4  D00A               	goto	l2706
 18742                           
 18743                           ; BSR set to: 0
 18744  00DFF6  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 18745  00DFF8  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 18746  00DFFA  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 18747  00DFFC  6D60               	negf	___aldiv@dividend& (0+255),b
 18748  00DFFE  0E00               	movlw	0
 18749  00E000  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 18750  00E002  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 18751  00E004  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 18752                           
 18753                           ; BSR set to: 0
 18754  00E006  0E01               	movlw	1
 18755  00E008  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 18756  00E00A                     l2706:
 18757                           
 18758                           ; BSR set to: 0
 18759                           
 18760                           ; BSR set to: 0
 18761  00E00A  0E00               	movlw	0
 18762  00E00C  6F6A               	movwf	___aldiv@quotient& (0+255),b
 18763  00E00E  0E00               	movlw	0
 18764  00E010  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 18765  00E012  0E00               	movlw	0
 18766  00E014  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 18767  00E016  0E00               	movlw	0
 18768  00E018  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 18769                           
 18770                           ; BSR set to: 0
 18771  00E01A  5164               	movf	___aldiv@divisor& (0+255),w,b
 18772  00E01C  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 18773  00E01E  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 18774  00E020  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 18775  00E022  B4D8               	btfsc	status,2,c
 18776  00E024  D02A               	goto	l2713
 18777                           
 18778                           ; BSR set to: 0
 18779  00E026  0E01               	movlw	1
 18780  00E028  6F68               	movwf	___aldiv@counter& (0+255),b
 18781  00E02A  D006               	goto	l2708
 18782  00E02C                     
 18783                           ; BSR set to: 0
 18784                           
 18785                           ; BSR set to: 0
 18786  00E02C  90D8               	bcf	status,0,c
 18787  00E02E  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 18788  00E030  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 18789  00E032  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 18790  00E034  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 18791  00E036  2B68               	incf	___aldiv@counter& (0+255),f,b
 18792  00E038                     l2708:
 18793                           
 18794                           ; BSR set to: 0
 18795                           
 18796                           ; BSR set to: 0
 18797  00E038  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 18798  00E03A  D7F8               	goto	l2709
 18799  00E03C                     u17280:
 18800                           
 18801                           ; BSR set to: 0
 18802                           
 18803                           ; BSR set to: 0
 18804                           
 18805                           ; BSR set to: 0
 18806  00E03C  90D8               	bcf	status,0,c
 18807  00E03E  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 18808  00E040  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 18809  00E042  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 18810  00E044  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 18811                           
 18812                           ; BSR set to: 0
 18813  00E046  5164               	movf	___aldiv@divisor& (0+255),w,b
 18814  00E048  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 18815  00E04A  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 18816  00E04C  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 18817  00E04E  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 18818  00E050  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 18819  00E052  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 18820  00E054  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 18821  00E056  A0D8               	btfss	status,0,c
 18822  00E058  D009               	goto	l2712
 18823                           
 18824                           ; BSR set to: 0
 18825  00E05A  5164               	movf	___aldiv@divisor& (0+255),w,b
 18826  00E05C  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 18827  00E05E  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 18828  00E060  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 18829  00E062  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 18830  00E064  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 18831  00E066  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 18832  00E068  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 18833                           
 18834                           ; BSR set to: 0
 18835  00E06A  816A               	bsf	___aldiv@quotient& (0+255),0,b
 18836  00E06C                     l2712:
 18837                           
 18838                           ; BSR set to: 0
 18839                           
 18840                           ; BSR set to: 0
 18841  00E06C  90D8               	bcf	status,0,c
 18842  00E06E  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 18843  00E070  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 18844  00E072  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 18845  00E074  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 18846                           
 18847                           ; BSR set to: 0
 18848  00E076  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 18849  00E078  D7E1               	goto	u17280
 18850  00E07A                     l2713:
 18851                           
 18852                           ; BSR set to: 0
 18853                           
 18854                           ; BSR set to: 0
 18855                           
 18856                           ; BSR set to: 0
 18857  00E07A  5169               	movf	___aldiv@sign& (0+255),w,b
 18858  00E07C  B4D8               	btfsc	status,2,c
 18859  00E07E  D008               	goto	l2714
 18860                           
 18861                           ; BSR set to: 0
 18862  00E080  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 18863  00E082  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 18864  00E084  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 18865  00E086  6D6A               	negf	___aldiv@quotient& (0+255),b
 18866  00E088  0E00               	movlw	0
 18867  00E08A  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 18868  00E08C  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 18869  00E08E  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 18870  00E090                     l2714:
 18871                           
 18872                           ; BSR set to: 0
 18873                           
 18874                           ; BSR set to: 0
 18875  00E090  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 18876  00E094  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 18877  00E098  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 18878  00E09C  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 18879  00E0A0  0012               	return	
 18880  00E0A2                     __end_of___aldiv:
 18881                           	opt stack 0
 18882                           tblptru	equ	0xFF8
 18883                           tblptrh	equ	0xFF7
 18884                           tblptrl	equ	0xFF6
 18885                           tablat	equ	0xFF5
 18886                           prodh	equ	0xFF4
 18887                           prodl	equ	0xFF3
 18888                           intcon	equ	0xFF2
 18889                           indf0	equ	0xFEF
 18890                           postinc0	equ	0xFEE
 18891                           fsr0h	equ	0xFEA
 18892                           fsr0l	equ	0xFE9
 18893                           wreg	equ	0xFE8
 18894                           indf1	equ	0xFE7
 18895                           postdec1	equ	0xFE5
 18896                           plusw1	equ	0xFE3
 18897                           fsr1h	equ	0xFE2
 18898                           fsr1l	equ	0xFE1
 18899                           indf2	equ	0xFDF
 18900                           postinc2	equ	0xFDE
 18901                           postdec2	equ	0xFDD
 18902                           plusw2	equ	0xFDB
 18903                           fsr2h	equ	0xFDA
 18904                           fsr2l	equ	0xFD9
 18905                           status	equ	0xFD8
 18906                           
 18907 ;; *************** function __display_clear *****************
 18908 ;; Defined at:
 18909 ;;		line 81 in file "display.c"
 18910 ;; Parameters:    Size  Location     Type
 18911 ;;		None
 18912 ;; Auto vars:     Size  Location     Type
 18913 ;;  col             1    3[BANK0 ] unsigned char 
 18914 ;;  row             1    2[BANK0 ] unsigned char 
 18915 ;; Return value:  Size  Location     Type
 18916 ;;                  1    wreg      void 
 18917 ;; Registers used:
 18918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18919 ;; Tracked objects:
 18920 ;;		On entry : 0/0
 18921 ;;		On exit  : 0/0
 18922 ;;		Unchanged: 0/0
 18923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18927 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18928 ;;Total ram usage:        4 bytes
 18929 ;; Hardware stack levels used:    1
 18930 ;; Hardware stack levels required when called:   10
 18931 ;; This function calls:
 18932 ;;		Nothing
 18933 ;; This function is called by:
 18934 ;;		_display_prepare
 18935 ;; This function uses a non-reentrant model
 18936 ;;
 18937                           
 18938                           	psect	text53
 18939  00F116                     __ptext53:
 18940                           	opt stack 0
 18941  00F116                     __display_clear:
 18942                           	opt stack 19
 18943                           
 18944                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 18945                           
 18946                           ; BSR set to: 0
 18947                           ;incstack = 0
 18948  00F116  0E00               	movlw	0
 18949  00F118  0100               	movlb	0	; () banked
 18950  00F11A  6F62               	movwf	__display_clear@row& (0+255),b
 18951  00F11C                     l17242:
 18952                           
 18953                           ; BSR set to: 0
 18954  00F11C  0E03               	movlw	3
 18955  00F11E  6562               	cpfsgt	__display_clear@row& (0+255),b
 18956  00F120  D001               	goto	l1250
 18957  00F122  0012               	return	
 18958  00F124                     l1250:
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 18962                           
 18963                           ; BSR set to: 0
 18964  00F124  0E00               	movlw	0
 18965  00F126  6F63               	movwf	__display_clear@col& (0+255),b
 18966  00F128                     l17248:
 18967                           
 18968                           ; BSR set to: 0
 18969  00F128  0E13               	movlw	19
 18970  00F12A  6563               	cpfsgt	__display_clear@col& (0+255),b
 18971  00F12C  D001               	goto	l1252
 18972  00F12E  D016               	goto	u17520
 18973  00F130                     l1252:
 18974                           
 18975                           ; BSR set to: 0
 18976                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 18977                           
 18978                           ; BSR set to: 0
 18979  00F130  5162               	movf	__display_clear@row& (0+255),w,b
 18980  00F132  0D14               	mullw	20
 18981  00F134  0EAD               	movlw	low _display_content
 18982  00F136  6F60               	movwf	??__display_clear& (0+255),b
 18983  00F138  0E01               	movlw	high _display_content
 18984  00F13A  6F61               	movwf	(??__display_clear+1)& (0+255),b
 18985  00F13C  50F3               	movf	prodl,w,c
 18986  00F13E  2760               	addwf	??__display_clear& (0+255),f,b
 18987  00F140  50F4               	movf	prodh,w,c
 18988  00F142  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 18989  00F144  5163               	movf	__display_clear@col& (0+255),w,b
 18990  00F146  0D01               	mullw	1
 18991  00F148  50F3               	movf	prodl,w,c
 18992  00F14A  2560               	addwf	??__display_clear& (0+255),w,b
 18993  00F14C  6ED9               	movwf	fsr2l,c
 18994  00F14E  50F4               	movf	prodh,w,c
 18995  00F150  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 18996  00F152  6EDA               	movwf	fsr2h,c
 18997  00F154  0E20               	movlw	32
 18998  00F156  6EDF               	movwf	indf2,c
 18999                           
 19000                           ; BSR set to: 0
 19001  00F158  2B63               	incf	__display_clear@col& (0+255),f,b
 19002  00F15A  D7E6               	goto	l17248
 19003  00F15C                     u17520:
 19004                           
 19005                           ; BSR set to: 0
 19006                           
 19007                           ; BSR set to: 0
 19008  00F15C  2B62               	incf	__display_clear@row& (0+255),f,b
 19009  00F15E  D7DE               	goto	l17242
 19010  00F160                     __end_of__display_clear:
 19011                           	opt stack 0
 19012                           tblptru	equ	0xFF8
 19013                           tblptrh	equ	0xFF7
 19014                           tblptrl	equ	0xFF6
 19015                           tablat	equ	0xFF5
 19016                           prodh	equ	0xFF4
 19017                           prodl	equ	0xFF3
 19018                           intcon	equ	0xFF2
 19019                           indf0	equ	0xFEF
 19020                           postinc0	equ	0xFEE
 19021                           fsr0h	equ	0xFEA
 19022                           fsr0l	equ	0xFE9
 19023                           wreg	equ	0xFE8
 19024                           indf1	equ	0xFE7
 19025                           postdec1	equ	0xFE5
 19026                           plusw1	equ	0xFE3
 19027                           fsr1h	equ	0xFE2
 19028                           fsr1l	equ	0xFE1
 19029                           indf2	equ	0xFDF
 19030                           postinc2	equ	0xFDE
 19031                           postdec2	equ	0xFDD
 19032                           plusw2	equ	0xFDB
 19033                           fsr2h	equ	0xFDA
 19034                           fsr2l	equ	0xFD9
 19035                           status	equ	0xFD8
 19036                           
 19037 ;; *************** function _SYSTEM_Initialize *****************
 19038 ;; Defined at:
 19039 ;;		line 39 in file "system.c"
 19040 ;; Parameters:    Size  Location     Type
 19041 ;;  state           1    wreg     enum E6623
 19042 ;; Auto vars:     Size  Location     Type
 19043 ;;  state           1    0[BANK0 ] enum E6623
 19044 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
 19045 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
 19046 ;; Return value:  Size  Location     Type
 19047 ;;                  1    wreg      void 
 19048 ;; Registers used:
 19049 ;;		wreg, status,2, status,0
 19050 ;; Tracked objects:
 19051 ;;		On entry : 0/0
 19052 ;;		On exit  : 0/0
 19053 ;;		Unchanged: 0/0
 19054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19056 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19058 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19059 ;;Total ram usage:        5 bytes
 19060 ;; Hardware stack levels used:    1
 19061 ;; Hardware stack levels required when called:   10
 19062 ;; This function calls:
 19063 ;;		Nothing
 19064 ;; This function is called by:
 19065 ;;		_main
 19066 ;; This function uses a non-reentrant model
 19067 ;;
 19068                           
 19069                           	psect	text54
 19070  00EE26                     __ptext54:
 19071                           	opt stack 0
 19072  00EE26                     _SYSTEM_Initialize:
 19073                           	opt stack 20
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;incstack = 0
 19077                           ;SYSTEM_Initialize@state stored from wreg
 19078  00EE26  0100               	movlb	0	; () banked
 19079  00EE28  6F60               	movwf	SYSTEM_Initialize@state& (0+255),b
 19080                           
 19081                           ;system.c: 41: switch(state)
 19082  00EE2A  D01E               	goto	l877
 19083  00EE2C                     
 19084                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 19085  00EE2C  0E02               	movlw	2
 19086  00EE2E  0100               	movlb	0	; () banked
 19087  00EE30  6F62               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 19088  00EE32  0E58               	movlw	88
 19089  00EE34  6F61               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 19090                           
 19091                           ; BSR set to: 0
 19092                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 19093  00EE36  8C9B               	bsf	3995,6,c	;volatile
 19094  00EE38                     l17534:
 19095                           
 19096                           ; BSR set to: 0
 19097  00EE38  0761               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 19098  00EE3A  A0D8               	btfss	status,0,c
 19099  00EE3C  0762               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 19100  00EE3E  2961               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 19101  00EE40  E1FB               	bnz	l17534
 19102  00EE42  2962               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 19103  00EE44  B4D8               	btfsc	status,2,c
 19104  00EE46  0012               	return	
 19105  00EE48  D7F7               	goto	l880
 19106  00EE4A                     
 19107                           ; BSR set to: 0
 19108                           ;system.c: 78: OSCCON = 0x70;
 19109                           
 19110                           ; BSR set to: 0
 19111  00EE4A  0E70               	movlw	112
 19112  00EE4C  6ED3               	movwf	4051,c	;volatile
 19113                           
 19114                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 19115  00EE4E  0E03               	movlw	3
 19116  00EE50  6F64               	movwf	(SYSTEM_Initialize@pll_startup_counter_3052+1)& (0+255),b
 19117  00EE52  0E20               	movlw	32
 19118  00EE54  6F63               	movwf	SYSTEM_Initialize@pll_startup_counter_3052& (0+255),b
 19119  00EE56                     l17538:
 19120                           
 19121                           ; BSR set to: 0
 19122  00EE56  0763               	decf	SYSTEM_Initialize@pll_startup_counter_3052& (0+255),f,b
 19123  00EE58  A0D8               	btfss	status,0,c
 19124  00EE5A  0764               	decf	(SYSTEM_Initialize@pll_startup_counter_3052+1)& (0+255),f,b
 19125  00EE5C  2963               	incf	SYSTEM_Initialize@pll_startup_counter_3052& (0+255),w,b
 19126  00EE5E  E1FB               	bnz	l17538
 19127  00EE60  2964               	incf	(SYSTEM_Initialize@pll_startup_counter_3052+1)& (0+255),w,b
 19128  00EE62  B4D8               	btfsc	status,2,c
 19129  00EE64  0012               	return	
 19130  00EE66  D7F7               	goto	l886
 19131  00EE68                     l877:
 19132                           
 19133                           ; BSR set to: 0
 19134  00EE68  0100               	movlb	0	; () banked
 19135  00EE6A  5160               	movf	SYSTEM_Initialize@state& (0+255),w,b
 19136                           
 19137                           ; Switch size 1, requested type "space"
 19138                           ; Number of cases is 3, Range of values is 0 to 2
 19139                           ; switch strategies available:
 19140                           ; Name         Instructions Cycles
 19141                           ; simple_byte           10     6 (average)
 19142                           ;	Chosen strategy is simple_byte
 19143  00EE6C  0A00               	xorlw	0	; case 0
 19144  00EE6E  B4D8               	btfsc	status,2,c
 19145  00EE70  D7DD               	goto	l878
 19146  00EE72  0A01               	xorlw	1	; case 1
 19147  00EE74  B4D8               	btfsc	status,2,c
 19148  00EE76  0012               	return	
 19149  00EE78  0A03               	xorlw	3	; case 2
 19150  00EE7A  A4D8               	btfss	status,2,c
 19151  00EE7C  0012               	return	
 19152  00EE7E  D7E5               	goto	l884
 19153  00EE80                     __end_of_SYSTEM_Initialize:
 19154                           	opt stack 0
 19155                           tblptru	equ	0xFF8
 19156                           tblptrh	equ	0xFF7
 19157                           tblptrl	equ	0xFF6
 19158                           tablat	equ	0xFF5
 19159                           prodh	equ	0xFF4
 19160                           prodl	equ	0xFF3
 19161                           intcon	equ	0xFF2
 19162                           indf0	equ	0xFEF
 19163                           postinc0	equ	0xFEE
 19164                           fsr0h	equ	0xFEA
 19165                           fsr0l	equ	0xFE9
 19166                           wreg	equ	0xFE8
 19167                           indf1	equ	0xFE7
 19168                           postdec1	equ	0xFE5
 19169                           plusw1	equ	0xFE3
 19170                           fsr1h	equ	0xFE2
 19171                           fsr1l	equ	0xFE1
 19172                           indf2	equ	0xFDF
 19173                           postinc2	equ	0xFDE
 19174                           postdec2	equ	0xFDD
 19175                           plusw2	equ	0xFDB
 19176                           fsr2h	equ	0xFDA
 19177                           fsr2l	equ	0xFD9
 19178                           status	equ	0xFD8
 19179                           
 19180 ;; *************** function _SYS_InterruptHigh *****************
 19181 ;; Defined at:
 19182 ;;		line 162 in file "system.c"
 19183 ;; Parameters:    Size  Location     Type
 19184 ;;		None
 19185 ;; Auto vars:     Size  Location     Type
 19186 ;;		None
 19187 ;; Return value:  Size  Location     Type
 19188 ;;                  1    wreg      void 
 19189 ;; Registers used:
 19190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19191 ;; Tracked objects:
 19192 ;;		On entry : 0/0
 19193 ;;		On exit  : 0/0
 19194 ;;		Unchanged: 0/0
 19195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19198 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19199 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19200 ;;Total ram usage:       14 bytes
 19201 ;; Hardware stack levels used:    1
 19202 ;; Hardware stack levels required when called:    9
 19203 ;; This function calls:
 19204 ;;		_USBDeviceTasks
 19205 ;;		_tmr0_isr
 19206 ;; This function is called by:
 19207 ;;		Interrupt level 2
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           	psect	intcode
 19212  009008                     __pintcode:
 19213                           	opt stack 0
 19214  009008                     _SYS_InterruptHigh:
 19215                           	opt stack 15
 19216                           
 19217                           ; BSR set to: 0
 19218                           ;incstack = 0
 19219  009008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19220  00900A  CFFA F04D          	movff	pclath,??_SYS_InterruptHigh
 19221  00900E  CFFB F04E          	movff	pclatu,??_SYS_InterruptHigh+1
 19222  009012  CFE9 F04F          	movff	fsr0l,??_SYS_InterruptHigh+2
 19223  009016  CFEA F050          	movff	fsr0h,??_SYS_InterruptHigh+3
 19224  00901A  CFE1 F051          	movff	fsr1l,??_SYS_InterruptHigh+4
 19225  00901E  CFE2 F052          	movff	fsr1h,??_SYS_InterruptHigh+5
 19226  009022  CFD9 F053          	movff	fsr2l,??_SYS_InterruptHigh+6
 19227  009026  CFDA F054          	movff	fsr2h,??_SYS_InterruptHigh+7
 19228  00902A  CFF3 F055          	movff	prodl,??_SYS_InterruptHigh+8
 19229  00902E  CFF4 F056          	movff	prodh,??_SYS_InterruptHigh+9
 19230  009032  CFF6 F057          	movff	tblptrl,??_SYS_InterruptHigh+10
 19231  009036  CFF7 F058          	movff	tblptrh,??_SYS_InterruptHigh+11
 19232  00903A  CFF8 F059          	movff	tblptru,??_SYS_InterruptHigh+12
 19233  00903E  CFF5 F05A          	movff	tablat,??_SYS_InterruptHigh+13
 19234                           
 19235                           ;system.c: 165: USBDeviceTasks();
 19236  009042  ECE8  F066         	call	_USBDeviceTasks	;wreg free
 19237                           
 19238                           ;system.c: 169: tmr0_isr();
 19239  009046  EC39  F079         	call	_tmr0_isr	;wreg free
 19240  00904A  C05A  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 19241  00904E  C059  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 19242  009052  C058  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 19243  009056  C057  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 19244  00905A  C056  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 19245  00905E  C055  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 19246  009062  C054  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 19247  009066  C053  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 19248  00906A  C052  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 19249  00906E  C051  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 19250  009072  C050  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 19251  009076  C04F  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 19252  00907A  C04E  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 19253  00907E  C04D  FFFA         	movff	??_SYS_InterruptHigh,pclath
 19254  009082  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19255  009084  0011               	retfie		f
 19256  009086                     __end_of_SYS_InterruptHigh:
 19257                           	opt stack 0
 19258                           pclatu	equ	0xFFB
 19259                           pclath	equ	0xFFA
 19260                           tblptru	equ	0xFF8
 19261                           tblptrh	equ	0xFF7
 19262                           tblptrl	equ	0xFF6
 19263                           tablat	equ	0xFF5
 19264                           prodh	equ	0xFF4
 19265                           prodl	equ	0xFF3
 19266                           intcon	equ	0xFF2
 19267                           indf0	equ	0xFEF
 19268                           postinc0	equ	0xFEE
 19269                           fsr0h	equ	0xFEA
 19270                           fsr0l	equ	0xFE9
 19271                           wreg	equ	0xFE8
 19272                           indf1	equ	0xFE7
 19273                           postdec1	equ	0xFE5
 19274                           plusw1	equ	0xFE3
 19275                           fsr1h	equ	0xFE2
 19276                           fsr1l	equ	0xFE1
 19277                           indf2	equ	0xFDF
 19278                           postinc2	equ	0xFDE
 19279                           postdec2	equ	0xFDD
 19280                           plusw2	equ	0xFDB
 19281                           fsr2h	equ	0xFDA
 19282                           fsr2l	equ	0xFD9
 19283                           status	equ	0xFD8
 19284                           
 19285 ;; *************** function _tmr0_isr *****************
 19286 ;; Defined at:
 19287 ;;		line 19 in file "os.c"
 19288 ;; Parameters:    Size  Location     Type
 19289 ;;		None
 19290 ;; Auto vars:     Size  Location     Type
 19291 ;;		None
 19292 ;; Return value:  Size  Location     Type
 19293 ;;                  1    wreg      void 
 19294 ;; Registers used:
 19295 ;;		wreg, status,2, status,0, cstack
 19296 ;; Tracked objects:
 19297 ;;		On entry : 0/0
 19298 ;;		On exit  : 0/0
 19299 ;;		Unchanged: 0/0
 19300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19305 ;;Total ram usage:        0 bytes
 19306 ;; Hardware stack levels used:    1
 19307 ;; Hardware stack levels required when called:    1
 19308 ;; This function calls:
 19309 ;;		_encoder_run
 19310 ;; This function is called by:
 19311 ;;		_SYS_InterruptHigh
 19312 ;; This function uses a non-reentrant model
 19313 ;;
 19314                           
 19315                           	psect	text56
 19316  00F272                     __ptext56:
 19317                           	opt stack 0
 19318  00F272                     _tmr0_isr:
 19319                           	opt stack 22
 19320                           
 19321                           ;os.c: 22: if(INTCONbits.T0IF)
 19322                           
 19323                           ;incstack = 0
 19324  00F272  A4F2               	btfss	intcon,2,c	;volatile
 19325  00F274  0012               	return	
 19326                           
 19327                           ;os.c: 23: {;os.c: 25: encoder_run();
 19328  00F276  EC53  F069         	call	_encoder_run	;wreg free
 19329                           
 19330                           ;os.c: 28: ++os.subTimeSlot;
 19331  00F27A  0100               	movlb	0	; () banked
 19332  00F27C  2BCC               	incf	_os& (0+255),f,b	;volatile
 19333                           
 19334                           ; BSR set to: 0
 19335                           ;os.c: 29: if(os.subTimeSlot>10)
 19336  00F27E  0E0A               	movlw	10
 19337  00F280  65CC               	cpfsgt	_os& (0+255),b	;volatile
 19338  00F282  0012               	return	
 19339                           
 19340                           ; BSR set to: 0
 19341                           ;os.c: 30: {;os.c: 31: if(os.done)
 19342  00F284  51CE               	movf	(_os+2)& (0+255),w,b	;volatile
 19343  00F286  B4D8               	btfsc	status,2,c
 19344  00F288  D010               	goto	i2l1025
 19345                           
 19346                           ; BSR set to: 0
 19347                           ;os.c: 32: {;os.c: 34: TMR0H = 0xFA;
 19348  00F28A  0EFA               	movlw	250
 19349  00F28C  6ED7               	movwf	4055,c	;volatile
 19350                           
 19351                           ;os.c: 35: TMR0L = 0x24;
 19352  00F28E  0E24               	movlw	36
 19353  00F290  6ED6               	movwf	4054,c	;volatile
 19354                           
 19355                           ; BSR set to: 0
 19356                           ;os.c: 36: ++os.timeSlot;
 19357  00F292  2BCD               	incf	(_os+1)& (0+255),f,b	;volatile
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;os.c: 37: if(os.timeSlot==16)
 19361  00F294  0E10               	movlw	16
 19362  00F296  19CD               	xorwf	(_os+1)& (0+255),w,b	;volatile
 19363  00F298  A4D8               	btfss	status,2,c
 19364  00F29A  D002               	goto	i2l1026
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;os.c: 38: {;os.c: 39: os.timeSlot = 0;
 19368  00F29C  0E00               	movlw	0
 19369  00F29E  6FCD               	movwf	(_os+1)& (0+255),b	;volatile
 19370  00F2A0                     i2l1026:
 19371                           
 19372                           ; BSR set to: 0
 19373                           ;os.c: 40: };os.c: 41: os.subTimeSlot = 0;
 19374  00F2A0  0E00               	movlw	0
 19375  00F2A2  6FCC               	movwf	_os& (0+255),b	;volatile
 19376                           
 19377                           ;os.c: 42: os.done = 0;
 19378  00F2A4  0E00               	movlw	0
 19379  00F2A6  6FCE               	movwf	(_os+2)& (0+255),b	;volatile
 19380                           
 19381                           ;os.c: 43: }
 19382  00F2A8  D004               	goto	i2l1027
 19383  00F2AA                     i2l1025:
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;os.c: 44: else;os.c: 45: {;os.c: 47: TMR0H = 0xFA;
 19387                           
 19388                           ; BSR set to: 0
 19389  00F2AA  0EFA               	movlw	250
 19390  00F2AC  6ED7               	movwf	4055,c	;volatile
 19391                           
 19392                           ;os.c: 48: TMR0L = 0x24;
 19393  00F2AE  0E24               	movlw	36
 19394  00F2B0  6ED6               	movwf	4054,c	;volatile
 19395  00F2B2                     i2l1027:
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;os.c: 49: };os.c: 50: INTCONbits.T0IF = 0;
 19399                           
 19400                           ; BSR set to: 0
 19401  00F2B2  94F2               	bcf	intcon,2,c	;volatile
 19402                           
 19403                           ; BSR set to: 0
 19404  00F2B4  0012               	return	
 19405  00F2B6                     __end_of_tmr0_isr:
 19406                           	opt stack 0
 19407                           pclatu	equ	0xFFB
 19408                           pclath	equ	0xFFA
 19409                           tblptru	equ	0xFF8
 19410                           tblptrh	equ	0xFF7
 19411                           tblptrl	equ	0xFF6
 19412                           tablat	equ	0xFF5
 19413                           prodh	equ	0xFF4
 19414                           prodl	equ	0xFF3
 19415                           intcon	equ	0xFF2
 19416                           indf0	equ	0xFEF
 19417                           postinc0	equ	0xFEE
 19418                           fsr0h	equ	0xFEA
 19419                           fsr0l	equ	0xFE9
 19420                           wreg	equ	0xFE8
 19421                           indf1	equ	0xFE7
 19422                           postdec1	equ	0xFE5
 19423                           plusw1	equ	0xFE3
 19424                           fsr1h	equ	0xFE2
 19425                           fsr1l	equ	0xFE1
 19426                           indf2	equ	0xFDF
 19427                           postinc2	equ	0xFDE
 19428                           postdec2	equ	0xFDD
 19429                           plusw2	equ	0xFDB
 19430                           fsr2h	equ	0xFDA
 19431                           fsr2l	equ	0xFD9
 19432                           status	equ	0xFD8
 19433                           
 19434 ;; *************** function _encoder_run *****************
 19435 ;; Defined at:
 19436 ;;		line 25 in file "encoder.c"
 19437 ;; Parameters:    Size  Location     Type
 19438 ;;		None
 19439 ;; Auto vars:     Size  Location     Type
 19440 ;;		None
 19441 ;; Return value:  Size  Location     Type
 19442 ;;                  1    wreg      void 
 19443 ;; Registers used:
 19444 ;;		wreg, status,2, status,0
 19445 ;; Tracked objects:
 19446 ;;		On entry : 0/0
 19447 ;;		On exit  : 0/0
 19448 ;;		Unchanged: 0/0
 19449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19454 ;;Total ram usage:        0 bytes
 19455 ;; Hardware stack levels used:    1
 19456 ;; This function calls:
 19457 ;;		Nothing
 19458 ;; This function is called by:
 19459 ;;		_tmr0_isr
 19460 ;; This function uses a non-reentrant model
 19461 ;;
 19462                           
 19463                           	psect	text57
 19464  00D2A6                     __ptext57:
 19465                           	opt stack 0
 19466  00D2A6                     _encoder_run:
 19467                           	opt stack 22
 19468                           
 19469                           ;encoder.c: 27: if(enc1 != (PORTE&0b00000111))
 19470                           
 19471                           ;incstack = 0
 19472  00D2A6  5084               	movf	3972,w,c	;volatile
 19473  00D2A8  0B07               	andlw	7
 19474  00D2AA  0101               	movlb	1	; () banked
 19475  00D2AC  19FE               	xorwf	_enc1& (0+255),w,b
 19476  00D2AE  B4D8               	btfsc	status,2,c
 19477  00D2B0  D040               	goto	i2l2409
 19478                           
 19479                           ; BSR set to: 1
 19480                           ;encoder.c: 28: {;encoder.c: 30: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b00000001
      +                          )))
 19481  00D2B2  B084               	btfsc	3972,0,c	;volatile
 19482                           
 19483                           ; BSR set to: 1
 19484  00D2B4  A484               	btfss	3972,2,c	;volatile
 19485  00D2B6  D00F               	goto	i2l2412
 19486                           
 19487                           ; BSR set to: 1
 19488  00D2B8  B1FE               	btfsc	_enc1& (0+255),0,b
 19489  00D2BA  D00D               	goto	i2l2412
 19490                           
 19491                           ; BSR set to: 1
 19492                           ;encoder.c: 31: {;encoder.c: 32: if(os.encoder1Count<127)
 19493  00D2BC  0E7F               	movlw	127
 19494  00D2BE  0100               	movlb	0	; () banked
 19495  00D2C0  19CF               	xorwf	(_os+3)& (0+255),w,b	;volatile
 19496  00D2C2  B4D8               	btfsc	status,2,c
 19497  00D2C4  D008               	goto	i2l2412
 19498                           
 19499                           ; BSR set to: 0
 19500                           ;encoder.c: 33: {;encoder.c: 34: ++os.encoder1Count;
 19501  00D2C6  2BCF               	incf	(_os+3)& (0+255),f,b	;volatile
 19502                           
 19503                           ; BSR set to: 0
 19504                           ;encoder.c: 35: if(config.beep_duration)
 19505  00D2C8  0101               	movlb	1	; () banked
 19506  00D2CA  5132               	movf	(_config+19)& (0+255),w,b
 19507  00D2CC  B4D8               	btfsc	status,2,c
 19508  00D2CE  D003               	goto	i2l2412
 19509                           
 19510                           ; BSR set to: 1
 19511                           ;encoder.c: 36: {;encoder.c: 37: LATCbits.LC6 = 1;
 19512  00D2D0  8C8B               	bsf	3979,6,c	;volatile
 19513                           
 19514                           ;encoder.c: 38: os.beep_count = config.beep_duration;
 19515  00D2D2  C132  F0F2         	movff	_config+19,_os+38	;volatile
 19516  00D2D6                     i2l2412:
 19517                           
 19518                           ;encoder.c: 39: };encoder.c: 40: };encoder.c: 41: };encoder.c: 43: if(PORTEbits.RE2 && P
      +                          ORTEbits.RE0 && (!(enc1&0b00000100)))
 19519                           
 19520                           ; BSR set to: 1
 19521                           
 19522                           ; BSR set to: 1
 19523  00D2D6  B484               	btfsc	3972,2,c	;volatile
 19524  00D2D8  A084               	btfss	3972,0,c	;volatile
 19525  00D2DA  D011               	goto	i2l2415
 19526  00D2DC  0101               	movlb	1	; () banked
 19527  00D2DE  B5FE               	btfsc	_enc1& (0+255),2,b
 19528  00D2E0  D00E               	goto	i2l2415
 19529                           
 19530                           ; BSR set to: 1
 19531                           ;encoder.c: 44: {;encoder.c: 45: if(os.encoder1Count>-128)
 19532  00D2E2  0100               	movlb	0	; () banked
 19533  00D2E4  51CF               	movf	(_os+3)& (0+255),w,b	;volatile
 19534  00D2E6  0A80               	xorlw	128
 19535  00D2E8  0FFF               	addlw	255
 19536  00D2EA  A0D8               	btfss	status,0,c
 19537  00D2EC  D008               	goto	i2l2415
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;encoder.c: 46: {;encoder.c: 47: --os.encoder1Count;
 19541  00D2EE  07CF               	decf	(_os+3)& (0+255),f,b	;volatile
 19542                           
 19543                           ; BSR set to: 0
 19544                           ;encoder.c: 48: if(config.beep_duration)
 19545  00D2F0  0101               	movlb	1	; () banked
 19546  00D2F2  5132               	movf	(_config+19)& (0+255),w,b
 19547  00D2F4  B4D8               	btfsc	status,2,c
 19548  00D2F6  D003               	goto	i2l2415
 19549                           
 19550                           ; BSR set to: 1
 19551                           ;encoder.c: 49: {;encoder.c: 50: LATCbits.LC6 = 1;
 19552  00D2F8  8C8B               	bsf	3979,6,c	;volatile
 19553                           
 19554                           ;encoder.c: 51: os.beep_count = config.beep_duration;
 19555  00D2FA  C132  F0F2         	movff	_config+19,_os+38	;volatile
 19556  00D2FE                     i2l2415:
 19557                           
 19558                           ;encoder.c: 52: };encoder.c: 53: };encoder.c: 54: };encoder.c: 56: if(PORTEbits.RE1 && (
      +                          !(enc1&0b00000010)))
 19559                           
 19560                           ; BSR set to: 1
 19561                           
 19562                           ; BSR set to: 1
 19563  00D2FE  A284               	btfss	3972,1,c	;volatile
 19564  00D300  D00D               	goto	i2l2417
 19565  00D302  0101               	movlb	1	; () banked
 19566  00D304  B3FE               	btfsc	_enc1& (0+255),1,b
 19567  00D306  D00A               	goto	i2l2417
 19568                           
 19569                           ; BSR set to: 1
 19570                           ;encoder.c: 57: {;encoder.c: 58: os.button1 = 1;
 19571  00D308  0E01               	movlw	1
 19572  00D30A  0100               	movlb	0	; () banked
 19573  00D30C  6FD0               	movwf	(_os+4)& (0+255),b	;volatile
 19574                           
 19575                           ;encoder.c: 59: if(config.beep_duration)
 19576  00D30E  0101               	movlb	1	; () banked
 19577  00D310  5132               	movf	(_config+19)& (0+255),w,b
 19578  00D312  B4D8               	btfsc	status,2,c
 19579  00D314  D003               	goto	i2l2417
 19580                           
 19581                           ; BSR set to: 1
 19582                           ;encoder.c: 60: {;encoder.c: 61: LATCbits.LC6 = 1;
 19583  00D316  8C8B               	bsf	3979,6,c	;volatile
 19584                           
 19585                           ;encoder.c: 62: os.beep_count = config.beep_duration;
 19586  00D318  C132  F0F2         	movff	_config+19,_os+38	;volatile
 19587  00D31C                     i2l2417:
 19588                           
 19589                           ;encoder.c: 63: };encoder.c: 64: };encoder.c: 66: if((!PORTEbits.RE1) && (enc1&0b0000001
      +                          0))
 19590                           
 19591                           ; BSR set to: 1
 19592  00D31C  B284               	btfsc	3972,1,c	;volatile
 19593  00D31E  D005               	goto	i2l2418
 19594  00D320  0101               	movlb	1	; () banked
 19595  00D322  A3FE               	btfss	_enc1& (0+255),1,b
 19596  00D324  D002               	goto	i2l2418
 19597                           
 19598                           ; BSR set to: 1
 19599                           ;encoder.c: 67: {;encoder.c: 68: os.button1 = -1;
 19600  00D326  0100               	movlb	0	; () banked
 19601  00D328  69D0               	setf	(_os+4)& (0+255),b	;volatile
 19602  00D32A                     i2l2418:
 19603                           
 19604                           ;encoder.c: 69: };encoder.c: 71: enc1 = PORTE & 0b00000111;
 19605                           
 19606                           ; BSR set to: 0
 19607  00D32A  5084               	movf	3972,w,c	;volatile
 19608  00D32C  0B07               	andlw	7
 19609  00D32E  0101               	movlb	1	; () banked
 19610  00D330  6FFE               	movwf	_enc1& (0+255),b
 19611  00D332                     i2l2409:
 19612                           
 19613                           ; BSR set to: 1
 19614                           ;encoder.c: 72: };encoder.c: 74: if(enc2 != (PORTA&0b00000111))
 19615  00D332  5080               	movf	3968,w,c	;volatile
 19616  00D334  0B07               	andlw	7
 19617  00D336  19FD               	xorwf	_enc2& (0+255),w,b
 19618  00D338  B4D8               	btfsc	status,2,c
 19619  00D33A  0012               	return	
 19620                           
 19621                           ; BSR set to: 1
 19622                           ;encoder.c: 75: {;encoder.c: 77: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b00000100
      +                          )))
 19623  00D33C  B480               	btfsc	3968,2,c	;volatile
 19624                           
 19625                           ; BSR set to: 1
 19626  00D33E  A080               	btfss	3968,0,c	;volatile
 19627  00D340  D00F               	goto	i2l2422
 19628                           
 19629                           ; BSR set to: 1
 19630  00D342  B5FD               	btfsc	_enc2& (0+255),2,b
 19631  00D344  D00D               	goto	i2l2422
 19632                           
 19633                           ; BSR set to: 1
 19634                           ;encoder.c: 78: {;encoder.c: 79: if(os.encoder2Count<127)
 19635  00D346  0E7F               	movlw	127
 19636  00D348  0100               	movlb	0	; () banked
 19637  00D34A  19D1               	xorwf	(_os+5)& (0+255),w,b	;volatile
 19638  00D34C  B4D8               	btfsc	status,2,c
 19639  00D34E  D008               	goto	i2l2422
 19640                           
 19641                           ; BSR set to: 0
 19642                           ;encoder.c: 80: {;encoder.c: 81: ++os.encoder2Count;
 19643  00D350  2BD1               	incf	(_os+5)& (0+255),f,b	;volatile
 19644                           
 19645                           ; BSR set to: 0
 19646                           ;encoder.c: 82: if(config.beep_duration)
 19647  00D352  0101               	movlb	1	; () banked
 19648  00D354  5132               	movf	(_config+19)& (0+255),w,b
 19649  00D356  B4D8               	btfsc	status,2,c
 19650  00D358  D003               	goto	i2l2422
 19651                           
 19652                           ; BSR set to: 1
 19653                           ;encoder.c: 83: {;encoder.c: 84: LATCbits.LC6 = 1;
 19654  00D35A  8C8B               	bsf	3979,6,c	;volatile
 19655                           
 19656                           ;encoder.c: 85: os.beep_count = config.beep_duration;
 19657  00D35C  C132  F0F2         	movff	_config+19,_os+38	;volatile
 19658  00D360                     i2l2422:
 19659                           
 19660                           ;encoder.c: 86: };encoder.c: 87: };encoder.c: 88: };encoder.c: 90: if(PORTAbits.RA0 && P
      +                          ORTAbits.RA2 && (!(enc2&0b00000001)))
 19661                           
 19662                           ; BSR set to: 1
 19663                           
 19664                           ; BSR set to: 1
 19665  00D360  B080               	btfsc	3968,0,c	;volatile
 19666  00D362  A480               	btfss	3968,2,c	;volatile
 19667  00D364  D011               	goto	i2l2425
 19668  00D366  0101               	movlb	1	; () banked
 19669  00D368  B1FD               	btfsc	_enc2& (0+255),0,b
 19670  00D36A  D00E               	goto	i2l2425
 19671                           
 19672                           ; BSR set to: 1
 19673                           ;encoder.c: 91: {;encoder.c: 92: if(os.encoder2Count>-128)
 19674  00D36C  0100               	movlb	0	; () banked
 19675  00D36E  51D1               	movf	(_os+5)& (0+255),w,b	;volatile
 19676  00D370  0A80               	xorlw	128
 19677  00D372  0FFF               	addlw	255
 19678  00D374  A0D8               	btfss	status,0,c
 19679  00D376  D008               	goto	i2l2425
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;encoder.c: 93: {;encoder.c: 94: --os.encoder2Count;
 19683  00D378  07D1               	decf	(_os+5)& (0+255),f,b	;volatile
 19684                           
 19685                           ; BSR set to: 0
 19686                           ;encoder.c: 95: if(config.beep_duration)
 19687  00D37A  0101               	movlb	1	; () banked
 19688  00D37C  5132               	movf	(_config+19)& (0+255),w,b
 19689  00D37E  B4D8               	btfsc	status,2,c
 19690  00D380  D003               	goto	i2l2425
 19691                           
 19692                           ; BSR set to: 1
 19693                           ;encoder.c: 96: {;encoder.c: 97: LATCbits.LC6 = 1;
 19694  00D382  8C8B               	bsf	3979,6,c	;volatile
 19695                           
 19696                           ;encoder.c: 98: os.beep_count = config.beep_duration;
 19697  00D384  C132  F0F2         	movff	_config+19,_os+38	;volatile
 19698  00D388                     i2l2425:
 19699                           
 19700                           ;encoder.c: 99: };encoder.c: 100: };encoder.c: 101: };encoder.c: 103: if(PORTAbits.RA1 &
      +                          & (!(enc2&0b00000010)))
 19701                           
 19702                           ; BSR set to: 1
 19703                           
 19704                           ; BSR set to: 1
 19705  00D388  A280               	btfss	3968,1,c	;volatile
 19706  00D38A  D00D               	goto	i2l2427
 19707  00D38C  0101               	movlb	1	; () banked
 19708  00D38E  B3FD               	btfsc	_enc2& (0+255),1,b
 19709  00D390  D00A               	goto	i2l2427
 19710                           
 19711                           ; BSR set to: 1
 19712                           ;encoder.c: 104: {;encoder.c: 105: os.button2 = 1;
 19713  00D392  0E01               	movlw	1
 19714  00D394  0100               	movlb	0	; () banked
 19715  00D396  6FD2               	movwf	(_os+6)& (0+255),b	;volatile
 19716                           
 19717                           ;encoder.c: 106: if(config.beep_duration)
 19718  00D398  0101               	movlb	1	; () banked
 19719  00D39A  5132               	movf	(_config+19)& (0+255),w,b
 19720  00D39C  B4D8               	btfsc	status,2,c
 19721  00D39E  D003               	goto	i2l2427
 19722                           
 19723                           ; BSR set to: 1
 19724                           ;encoder.c: 107: {;encoder.c: 108: LATCbits.LC6 = 1;
 19725  00D3A0  8C8B               	bsf	3979,6,c	;volatile
 19726                           
 19727                           ;encoder.c: 109: os.beep_count = config.beep_duration;
 19728  00D3A2  C132  F0F2         	movff	_config+19,_os+38	;volatile
 19729  00D3A6                     i2l2427:
 19730                           
 19731                           ;encoder.c: 110: };encoder.c: 111: };encoder.c: 113: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 19732                           
 19733                           ; BSR set to: 1
 19734  00D3A6  B280               	btfsc	3968,1,c	;volatile
 19735  00D3A8  D005               	goto	i2l2428
 19736  00D3AA  0101               	movlb	1	; () banked
 19737  00D3AC  A3FD               	btfss	_enc2& (0+255),1,b
 19738  00D3AE  D002               	goto	i2l2428
 19739                           
 19740                           ; BSR set to: 1
 19741                           ;encoder.c: 114: {;encoder.c: 115: os.button2 = -1;
 19742  00D3B0  0100               	movlb	0	; () banked
 19743  00D3B2  69D2               	setf	(_os+6)& (0+255),b	;volatile
 19744  00D3B4                     i2l2428:
 19745                           
 19746                           ;encoder.c: 116: };encoder.c: 118: enc2 = PORTA & 0b00000111;
 19747                           
 19748                           ; BSR set to: 0
 19749  00D3B4  5080               	movf	3968,w,c	;volatile
 19750  00D3B6  0B07               	andlw	7
 19751  00D3B8  0101               	movlb	1	; () banked
 19752  00D3BA  6FFD               	movwf	_enc2& (0+255),b
 19753  00D3BC  0012               	return	
 19754  00D3BE                     __end_of_encoder_run:
 19755                           	opt stack 0
 19756                           pclatu	equ	0xFFB
 19757                           pclath	equ	0xFFA
 19758                           tblptru	equ	0xFF8
 19759                           tblptrh	equ	0xFF7
 19760                           tblptrl	equ	0xFF6
 19761                           tablat	equ	0xFF5
 19762                           prodh	equ	0xFF4
 19763                           prodl	equ	0xFF3
 19764                           intcon	equ	0xFF2
 19765                           indf0	equ	0xFEF
 19766                           postinc0	equ	0xFEE
 19767                           fsr0h	equ	0xFEA
 19768                           fsr0l	equ	0xFE9
 19769                           wreg	equ	0xFE8
 19770                           indf1	equ	0xFE7
 19771                           postdec1	equ	0xFE5
 19772                           plusw1	equ	0xFE3
 19773                           fsr1h	equ	0xFE2
 19774                           fsr1l	equ	0xFE1
 19775                           indf2	equ	0xFDF
 19776                           postinc2	equ	0xFDE
 19777                           postdec2	equ	0xFDD
 19778                           plusw2	equ	0xFDB
 19779                           fsr2h	equ	0xFDA
 19780                           fsr2l	equ	0xFD9
 19781                           status	equ	0xFD8
 19782                           
 19783 ;; *************** function _USBDeviceTasks *****************
 19784 ;; Defined at:
 19785 ;;		line 477 in file "usb_device.c"
 19786 ;; Parameters:    Size  Location     Type
 19787 ;;		None
 19788 ;; Auto vars:     Size  Location     Type
 19789 ;;  i               1   30[COMRAM] unsigned char 
 19790 ;; Return value:  Size  Location     Type
 19791 ;;                  1    wreg      void 
 19792 ;; Registers used:
 19793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19794 ;; Tracked objects:
 19795 ;;		On entry : 0/0
 19796 ;;		On exit  : 0/0
 19797 ;;		Unchanged: 0/0
 19798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19803 ;;Total ram usage:        1 bytes
 19804 ;; Hardware stack levels used:    1
 19805 ;; Hardware stack levels required when called:    8
 19806 ;; This function calls:
 19807 ;;		_USBCtrlEPAllowStatusStage
 19808 ;;		_USBCtrlEPService
 19809 ;;		_USBDeviceInit
 19810 ;;		_USBIncrement1msInternalTimers
 19811 ;;		_USBStallHandler
 19812 ;;		_USBSuspend
 19813 ;;		_USBWakeFromSuspend
 19814 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19815 ;; This function is called by:
 19816 ;;		_SYS_InterruptHigh
 19817 ;; This function uses a non-reentrant model
 19818 ;;
 19819                           
 19820                           	psect	text58
 19821  00CDD0                     __ptext58:
 19822                           	opt stack 0
 19823  00CDD0                     _USBDeviceTasks:
 19824                           	opt stack 15
 19825                           
 19826                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 19827                           
 19828                           ; BSR set to: 1
 19829                           ;incstack = 0
 19830  00CDD0  042B               	decf	_USBDeviceState,w,c	;volatile
 19831  00CDD2  B4D8               	btfsc	status,2,c
 19832                           
 19833                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 19834  00CDD4  BA65               	btfsc	3941,5,c	;volatile
 19835  00CDD6  D007               	goto	i2l155
 19836                           
 19837                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 19838  00CDD8  0E00               	movlw	0
 19839  00CDDA  6E62               	movwf	3938,c	;volatile
 19840                           
 19841                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 19842  00CDDC  010F               	movlb	15	; () banked
 19843  00CDDE  8136               	bsf	54,0,b	;volatile
 19844                           
 19845                           ; BSR set to: 15
 19846                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 19847  00CDE0  8936               	bsf	54,4,b	;volatile
 19848                           
 19849                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 19850  00CDE2  0E02               	movlw	2
 19851  00CDE4  6E2B               	movwf	_USBDeviceState,c	;volatile
 19852  00CDE6                     i2l155:
 19853                           
 19854                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 19855                           
 19856                           ; BSR set to: 15
 19857                           
 19858                           ; BSR set to: 15
 19859  00CDE6  A462               	btfss	3938,2,c	;volatile
 19860  00CDE8  D006               	goto	i2l156
 19861  00CDEA  010F               	movlb	15	; () banked
 19862  00CDEC  A536               	btfss	54,2,b	;volatile
 19863  00CDEE  D003               	goto	i2l156
 19864                           
 19865                           ; BSR set to: 15
 19866                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 19867  00CDF0  9462               	bcf	3938,2,c	;volatile
 19868                           
 19869                           ; BSR set to: 15
 19870                           ;usb_device.c: 640: USBWakeFromSuspend();
 19871  00CDF2  ECF1  F079         	call	_USBWakeFromSuspend	;wreg free
 19872  00CDF6                     i2l156:
 19873                           
 19874                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 19875  00CDF6  A265               	btfss	3941,1,c	;volatile
 19876  00CDF8  D002               	goto	i2l157
 19877                           
 19878                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 19879  00CDFA  98A1               	bcf	4001,4,c	;volatile
 19880                           
 19881                           ;usb_device.c: 650: return;
 19882  00CDFC  0012               	return	
 19883  00CDFE                     i2l157:
 19884                           
 19885                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 19886  00CDFE  A062               	btfss	3938,0,c	;volatile
 19887  00CE00  D009               	goto	i2l159
 19888  00CE02  010F               	movlb	15	; () banked
 19889  00CE04  A136               	btfss	54,0,b	;volatile
 19890  00CE06  D006               	goto	i2l159
 19891                           
 19892                           ; BSR set to: 15
 19893                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 19894  00CE08  ECA2  F065         	call	_USBDeviceInit	;wreg free
 19895                           
 19896                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 19897  00CE0C  88A0               	bsf	4000,4,c	;volatile
 19898                           
 19899                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 19900  00CE0E  0E04               	movlw	4
 19901  00CE10  6E2B               	movwf	_USBDeviceState,c	;volatile
 19902                           
 19903                           ;usb_device.c: 681: (UIR &= 0xFE);
 19904  00CE12  9062               	bcf	3938,0,c	;volatile
 19905  00CE14                     i2l159:
 19906                           
 19907                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 19908  00CE14  A862               	btfss	3938,4,c	;volatile
 19909  00CE16  D004               	goto	i2l160
 19910  00CE18  010F               	movlb	15	; () banked
 19911  00CE1A  B936               	btfsc	54,4,b	;volatile
 19912                           
 19913                           ; BSR set to: 15
 19914                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 19915  00CE1C  EC26  F07A         	call	_USBSuspend	;wreg free
 19916  00CE20                     i2l160:
 19917                           
 19918                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 19919  00CE20  AC62               	btfss	3938,6,c	;volatile
 19920  00CE22  D01B               	goto	i2l164
 19921                           
 19922                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 19923  00CE24  010F               	movlb	15	; () banked
 19924  00CE26  AD36               	btfss	54,6,b	;volatile
 19925  00CE28  D00E               	goto	i2l162
 19926                           
 19927                           ; BSR set to: 15
 19928                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 19929  00CE2A  0E00               	movlw	0
 19930  00CE2C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19931  00CE2E  0E73               	movlw	115
 19932  00CE30  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19933  00CE32  0E00               	movlw	0
 19934  00CE34  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19935  00CE36  0E00               	movlw	0
 19936  00CE38  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19937  00CE3A  0E00               	movlw	0
 19938  00CE3C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19939  00CE3E  0E01               	movlw	1
 19940  00CE40  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19941  00CE42  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19942  00CE46                     i2l162:
 19943                           
 19944                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 19945  00CE46  9C62               	bcf	3938,6,c	;volatile
 19946                           
 19947                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 19948  00CE48  ECCC  F07A         	call	_USBIncrement1msInternalTimers	;wreg free
 19949                           
 19950                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 19951  00CE4C  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 19952  00CE4E  A4D8               	btfss	status,2,c
 19953                           
 19954                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 19955  00CE50  0624               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 19956                           
 19957                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 19958  00CE52  5024               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 19959  00CE54  B4D8               	btfsc	status,2,c
 19960                           
 19961                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 19962  00CE56  ECB6  F070         	call	_USBCtrlEPAllowStatusStage	;wreg free
 19963  00CE5A                     i2l164:
 19964                           
 19965                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 19966  00CE5A  AA62               	btfss	3938,5,c	;volatile
 19967  00CE5C  D004               	goto	i2l165
 19968  00CE5E  010F               	movlb	15	; () banked
 19969  00CE60  BB36               	btfsc	54,5,b	;volatile
 19970                           
 19971                           ; BSR set to: 15
 19972                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 19973  00CE62  EC5B  F079         	call	_USBStallHandler	;wreg free
 19974  00CE66                     i2l165:
 19975                           
 19976                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 19977  00CE66  A262               	btfss	3938,1,c	;volatile
 19978  00CE68  D012               	goto	i2l166
 19979  00CE6A  010F               	movlb	15	; () banked
 19980  00CE6C  A336               	btfss	54,1,b	;volatile
 19981  00CE6E  D00F               	goto	i2l166
 19982                           
 19983                           ; BSR set to: 15
 19984                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 19985  00CE70  0E7F               	movlw	127
 19986  00CE72  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19987  00CE74  683D               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19988  00CE76  0E00               	movlw	0
 19989  00CE78  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19990  00CE7A  0E00               	movlw	0
 19991  00CE7C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19992  00CE7E  0E00               	movlw	0
 19993  00CE80  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19994  00CE82  0E01               	movlw	1
 19995  00CE84  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19996  00CE86  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19997                           
 19998                           ;usb_device.c: 759: {UEIR = 0;};
 19999  00CE8A  0E00               	movlw	0
 20000  00CE8C  6E63               	movwf	3939,c	;volatile
 20001  00CE8E                     i2l166:
 20002                           
 20003                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 20004  00CE8E  0E04               	movlw	4
 20005  00CE90  602B               	cpfslt	_USBDeviceState,c	;volatile
 20006  00CE92  D002               	goto	i2l167
 20007                           
 20008                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 20009  00CE94  98A1               	bcf	4001,4,c	;volatile
 20010                           
 20011                           ;usb_device.c: 777: return;
 20012  00CE96  0012               	return	
 20013  00CE98                     i2l167:
 20014                           
 20015                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 20016  00CE98  010F               	movlb	15	; () banked
 20017  00CE9A  A736               	btfss	54,3,b	;volatile
 20018  00CE9C  D039               	goto	i2u1250_40
 20019                           
 20020                           ; BSR set to: 15
 20021                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 20022  00CE9E  0E00               	movlw	0
 20023  00CEA0  6E4C               	movwf	USBDeviceTasks@i,c
 20024  00CEA2                     i2l13432:
 20025                           
 20026                           ; BSR set to: 15
 20027  00CEA2  0E03               	movlw	3
 20028  00CEA4  644C               	cpfsgt	USBDeviceTasks@i,c
 20029  00CEA6  D001               	goto	i2l169
 20030  00CEA8  D033               	goto	i2u1250_40
 20031  00CEAA                     i2l169:
 20032                           
 20033                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 20034  00CEAA  A662               	btfss	3938,3,c	;volatile
 20035  00CEAC  D031               	goto	i2u1250_40
 20036                           
 20037                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 20038  00CEAE  CF64 F02C          	movff	3940,_USTATcopy	;volatile
 20039                           
 20040                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 20041  00CEB2  302C               	rrcf	_USTATcopy,w,c	;volatile
 20042  00CEB4  32E8               	rrcf	wreg,f,c
 20043  00CEB6  32E8               	rrcf	wreg,f,c
 20044  00CEB8  0B0F               	andlw	15
 20045  00CEBA  6E26               	movwf	_endpoint_number,c	;volatile
 20046                           
 20047                           ;usb_device.c: 793: (UIR &= 0xF7);
 20048  00CEBC  9662               	bcf	3938,3,c	;volatile
 20049                           
 20050                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 20051  00CEBE  B42C               	btfsc	_USTATcopy,2,c	;volatile
 20052  00CEC0  D007               	goto	i2l172
 20053                           
 20054                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 20055  00CEC2  5026               	movf	_endpoint_number,w,c	;volatile
 20056  00CEC4  0D01               	mullw	1
 20057  00CEC6  0E72               	movlw	low _ep_data_out
 20058  00CEC8  24F3               	addwf	prodl,w,c
 20059  00CECA  6ED9               	movwf	fsr2l,c
 20060  00CECC  0E01               	movlw	high _ep_data_out
 20061  00CECE  D006               	goto	L42
 20062  00CED0                     i2l172:
 20063                           
 20064                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 20065                           
 20066                           ; BSR set to: 1
 20067  00CED0  5026               	movf	_endpoint_number,w,c	;volatile
 20068  00CED2  0D01               	mullw	1
 20069  00CED4  0E75               	movlw	low _ep_data_in
 20070  00CED6  24F3               	addwf	prodl,w,c
 20071  00CED8  6ED9               	movwf	fsr2l,c
 20072  00CEDA  0E01               	movlw	high _ep_data_in
 20073  00CEDC                     L42:
 20074  00CEDC  20F4               	addwfc	prodh,w,c
 20075  00CEDE  6EDA               	movwf	fsr2h,c
 20076  00CEE0  0101               	movlb	1	; () banked
 20077  00CEE2  70DF               	btg	indf2,0,c
 20078                           
 20079                           ; BSR set to: 1
 20080                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 20081                           
 20082                           ; BSR set to: 1
 20083  00CEE4  5026               	movf	_endpoint_number,w,c	;volatile
 20084  00CEE6  A4D8               	btfss	status,2,c
 20085  00CEE8  D003               	goto	i2l174
 20086                           
 20087                           ; BSR set to: 1
 20088                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 20089  00CEEA  EC6D  F073         	call	_USBCtrlEPService	;wreg free
 20090                           
 20091                           ;usb_device.c: 813: }
 20092  00CEEE  D00E               	goto	i2l176
 20093  00CEF0                     i2l174:
 20094                           
 20095                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 20096  00CEF0  0E00               	movlw	0
 20097  00CEF2  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20098  00CEF4  0E72               	movlw	114
 20099  00CEF6  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20100  00CEF8  0E2C               	movlw	low _USTATcopy
 20101  00CEFA  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20102  00CEFC  0E00               	movlw	high _USTATcopy
 20103  00CEFE  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20104  00CF00  0E00               	movlw	0
 20105  00CF02  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20106  00CF04  0E00               	movlw	0
 20107  00CF06  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20108  00CF08  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20109  00CF0C                     i2l176:
 20110  00CF0C  2A4C               	incf	USBDeviceTasks@i,f,c
 20111  00CF0E  D7C9               	goto	i2l13432
 20112  00CF10                     i2u1250_40:
 20113                           
 20114                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 20115  00CF10  98A1               	bcf	4001,4,c	;volatile
 20116  00CF12  0012               	return		;funcret
 20117  00CF14                     __end_of_USBDeviceTasks:
 20118                           	opt stack 0
 20119                           pclatu	equ	0xFFB
 20120                           pclath	equ	0xFFA
 20121                           tblptru	equ	0xFF8
 20122                           tblptrh	equ	0xFF7
 20123                           tblptrl	equ	0xFF6
 20124                           tablat	equ	0xFF5
 20125                           prodh	equ	0xFF4
 20126                           prodl	equ	0xFF3
 20127                           intcon	equ	0xFF2
 20128                           indf0	equ	0xFEF
 20129                           postinc0	equ	0xFEE
 20130                           fsr0h	equ	0xFEA
 20131                           fsr0l	equ	0xFE9
 20132                           wreg	equ	0xFE8
 20133                           indf1	equ	0xFE7
 20134                           postdec1	equ	0xFE5
 20135                           plusw1	equ	0xFE3
 20136                           fsr1h	equ	0xFE2
 20137                           fsr1l	equ	0xFE1
 20138                           indf2	equ	0xFDF
 20139                           postinc2	equ	0xFDE
 20140                           postdec2	equ	0xFDD
 20141                           plusw2	equ	0xFDB
 20142                           fsr2h	equ	0xFDA
 20143                           fsr2l	equ	0xFD9
 20144                           status	equ	0xFD8
 20145                           
 20146 ;; *************** function _USBWakeFromSuspend *****************
 20147 ;; Defined at:
 20148 ;;		line 2305 in file "usb_device.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;		None
 20151 ;; Auto vars:     Size  Location     Type
 20152 ;;		None
 20153 ;; Return value:  Size  Location     Type
 20154 ;;                  1    wreg      void 
 20155 ;; Registers used:
 20156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20157 ;; Tracked objects:
 20158 ;;		On entry : 0/0
 20159 ;;		On exit  : 0/0
 20160 ;;		Unchanged: 0/0
 20161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20166 ;;Total ram usage:        0 bytes
 20167 ;; Hardware stack levels used:    1
 20168 ;; Hardware stack levels required when called:    4
 20169 ;; This function calls:
 20170 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20171 ;; This function is called by:
 20172 ;;		_USBDeviceTasks
 20173 ;; This function uses a non-reentrant model
 20174 ;;
 20175                           
 20176                           	psect	text59
 20177  00F3E2                     __ptext59:
 20178                           	opt stack 0
 20179  00F3E2                     _USBWakeFromSuspend:
 20180                           	opt stack 18
 20181                           
 20182                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 20183                           
 20184                           ;incstack = 0
 20185  00F3E2  0E00               	movlw	0
 20186  00F3E4  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 20187                           
 20188                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 20189  00F3E6  0E00               	movlw	0
 20190  00F3E8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20191  00F3EA  0E74               	movlw	116
 20192  00F3EC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20193  00F3EE  0E00               	movlw	0
 20194  00F3F0  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20195  00F3F2  0E00               	movlw	0
 20196  00F3F4  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20197  00F3F6  0E00               	movlw	0
 20198  00F3F8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20199  00F3FA  0E00               	movlw	0
 20200  00F3FC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20201  00F3FE  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20202                           
 20203                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 20204  00F402  9265               	bcf	3941,1,c	;volatile
 20205                           
 20206                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 20207  00F404  010F               	movlb	15	; () banked
 20208  00F406  9536               	bcf	54,2,b	;volatile
 20209                           
 20210                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 20211  00F408  D001               	goto	i2l315
 20212  00F40A                     
 20213                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 20214                           
 20215                           ; BSR set to: 15
 20216  00F40A  9462               	bcf	3938,2,c	;volatile
 20217  00F40C                     i2l315:
 20218  00F40C  B462               	btfsc	3938,2,c	;volatile
 20219  00F40E  D7FD               	goto	i2l316
 20220                           
 20221                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 20222  00F410  0E00               	movlw	0
 20223  00F412  0100               	movlb	0	; () banked
 20224  00F414  6FFB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 20225                           
 20226                           ; BSR set to: 0
 20227  00F416  0012               	return		;funcret
 20228  00F418                     __end_of_USBWakeFromSuspend:
 20229                           	opt stack 0
 20230                           pclatu	equ	0xFFB
 20231                           pclath	equ	0xFFA
 20232                           tblptru	equ	0xFF8
 20233                           tblptrh	equ	0xFF7
 20234                           tblptrl	equ	0xFF6
 20235                           tablat	equ	0xFF5
 20236                           prodh	equ	0xFF4
 20237                           prodl	equ	0xFF3
 20238                           intcon	equ	0xFF2
 20239                           indf0	equ	0xFEF
 20240                           postinc0	equ	0xFEE
 20241                           fsr0h	equ	0xFEA
 20242                           fsr0l	equ	0xFE9
 20243                           wreg	equ	0xFE8
 20244                           indf1	equ	0xFE7
 20245                           postdec1	equ	0xFE5
 20246                           plusw1	equ	0xFE3
 20247                           fsr1h	equ	0xFE2
 20248                           fsr1l	equ	0xFE1
 20249                           indf2	equ	0xFDF
 20250                           postinc2	equ	0xFDE
 20251                           postdec2	equ	0xFDD
 20252                           plusw2	equ	0xFDB
 20253                           fsr2h	equ	0xFDA
 20254                           fsr2l	equ	0xFD9
 20255                           status	equ	0xFD8
 20256                           
 20257 ;; *************** function _USBSuspend *****************
 20258 ;; Defined at:
 20259 ;;		line 2247 in file "usb_device.c"
 20260 ;; Parameters:    Size  Location     Type
 20261 ;;		None
 20262 ;; Auto vars:     Size  Location     Type
 20263 ;;		None
 20264 ;; Return value:  Size  Location     Type
 20265 ;;                  1    wreg      void 
 20266 ;; Registers used:
 20267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20268 ;; Tracked objects:
 20269 ;;		On entry : 0/0
 20270 ;;		On exit  : 0/0
 20271 ;;		Unchanged: 0/0
 20272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20277 ;;Total ram usage:        0 bytes
 20278 ;; Hardware stack levels used:    1
 20279 ;; Hardware stack levels required when called:    4
 20280 ;; This function calls:
 20281 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20282 ;; This function is called by:
 20283 ;;		_USBDeviceTasks
 20284 ;; This function uses a non-reentrant model
 20285 ;;
 20286                           
 20287                           	psect	text60
 20288  00F44C                     __ptext60:
 20289                           	opt stack 0
 20290  00F44C                     _USBSuspend:
 20291                           	opt stack 18
 20292                           
 20293                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 20294                           
 20295                           ; BSR set to: 0
 20296                           ;incstack = 0
 20297  00F44C  010F               	movlb	15	; () banked
 20298  00F44E  8536               	bsf	54,2,b	;volatile
 20299                           
 20300                           ; BSR set to: 15
 20301                           ;usb_device.c: 2273: (UIR &= 0xEF);
 20302  00F450  9862               	bcf	3938,4,c	;volatile
 20303                           
 20304                           ; BSR set to: 15
 20305                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 20306  00F452  8265               	bsf	3941,1,c	;volatile
 20307                           
 20308                           ; BSR set to: 15
 20309                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 20310  00F454  0E01               	movlw	1
 20311  00F456  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 20312                           
 20313                           ; BSR set to: 15
 20314                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 20315  00F458  0E00               	movlw	0
 20316  00F45A  0100               	movlb	0	; () banked
 20317  00F45C  6FFB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 20318                           
 20319                           ; BSR set to: 0
 20320                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 20321  00F45E  0E00               	movlw	0
 20322  00F460  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20323  00F462  0E75               	movlw	117
 20324  00F464  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20325  00F466  0E00               	movlw	0
 20326  00F468  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 20327  00F46A  0E00               	movlw	0
 20328  00F46C  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 20329  00F46E  0E00               	movlw	0
 20330  00F470  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20331  00F472  0E00               	movlw	0
 20332  00F474  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20333  00F476  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20334  00F47A  0012               	return		;funcret
 20335  00F47C                     __end_of_USBSuspend:
 20336                           	opt stack 0
 20337                           pclatu	equ	0xFFB
 20338                           pclath	equ	0xFFA
 20339                           tblptru	equ	0xFF8
 20340                           tblptrh	equ	0xFF7
 20341                           tblptrl	equ	0xFF6
 20342                           tablat	equ	0xFF5
 20343                           prodh	equ	0xFF4
 20344                           prodl	equ	0xFF3
 20345                           intcon	equ	0xFF2
 20346                           indf0	equ	0xFEF
 20347                           postinc0	equ	0xFEE
 20348                           fsr0h	equ	0xFEA
 20349                           fsr0l	equ	0xFE9
 20350                           wreg	equ	0xFE8
 20351                           indf1	equ	0xFE7
 20352                           postdec1	equ	0xFE5
 20353                           plusw1	equ	0xFE3
 20354                           fsr1h	equ	0xFE2
 20355                           fsr1l	equ	0xFE1
 20356                           indf2	equ	0xFDF
 20357                           postinc2	equ	0xFDE
 20358                           postdec2	equ	0xFDD
 20359                           plusw2	equ	0xFDB
 20360                           fsr2h	equ	0xFDA
 20361                           fsr2l	equ	0xFD9
 20362                           status	equ	0xFD8
 20363                           
 20364 ;; *************** function _USBStallHandler *****************
 20365 ;; Defined at:
 20366 ;;		line 2204 in file "usb_device.c"
 20367 ;; Parameters:    Size  Location     Type
 20368 ;;		None
 20369 ;; Auto vars:     Size  Location     Type
 20370 ;;		None
 20371 ;; Return value:  Size  Location     Type
 20372 ;;                  1    wreg      void 
 20373 ;; Registers used:
 20374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20375 ;; Tracked objects:
 20376 ;;		On entry : 0/0
 20377 ;;		On exit  : 0/0
 20378 ;;		Unchanged: 0/0
 20379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20384 ;;Total ram usage:        1 bytes
 20385 ;; Hardware stack levels used:    1
 20386 ;; This function calls:
 20387 ;;		Nothing
 20388 ;; This function is called by:
 20389 ;;		_USBDeviceTasks
 20390 ;; This function uses a non-reentrant model
 20391 ;;
 20392                           
 20393                           	psect	text61
 20394  00F2B6                     __ptext61:
 20395                           	opt stack 0
 20396  00F2B6                     _USBStallHandler:
 20397                           	opt stack 22
 20398                           
 20399                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 20400                           
 20401                           ;incstack = 0
 20402  00F2B6  010F               	movlb	15	; () banked
 20403  00F2B8  A126               	btfss	38,0,b	;volatile
 20404  00F2BA  D01D               	goto	i2l307
 20405                           
 20406                           ; BSR set to: 15
 20407                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 20408  00F2BC  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20409  00F2C0  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20410  00F2C4  0E80               	movlw	128
 20411  00F2C6  18DE               	xorwf	postinc2,w,c
 20412  00F2C8  A4D8               	btfss	status,2,c
 20413  00F2CA  D014               	goto	i2l308
 20414                           
 20415                           ; BSR set to: 15
 20416  00F2CC  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 20417  00F2D0  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 20418  00F2D4  0E84               	movlw	132
 20419  00F2D6  18DE               	xorwf	postinc2,w,c
 20420  00F2D8  A4D8               	btfss	status,2,c
 20421  00F2DA  D00C               	goto	i2l308
 20422                           
 20423                           ; BSR set to: 15
 20424                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 20425  00F2DC  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20426  00F2E0  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20427  00F2E4  0E0C               	movlw	12
 20428  00F2E6  6EDF               	movwf	indf2,c
 20429                           
 20430                           ; BSR set to: 15
 20431                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 20432  00F2E8  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 20433  00F2EC  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 20434  00F2F0  0E00               	movlw	0
 20435  00F2F2  8EDB               	bsf	plusw2,7,c
 20436  00F2F4                     i2l308:
 20437                           
 20438                           ; BSR set to: 15
 20439                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 20440                           
 20441                           ; BSR set to: 15
 20442  00F2F4  9126               	bcf	38,0,b	;volatile
 20443  00F2F6                     i2l307:
 20444                           
 20445                           ; BSR set to: 15
 20446                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 20447  00F2F6  9A62               	bcf	3938,5,c	;volatile
 20448                           
 20449                           ; BSR set to: 15
 20450  00F2F8  0012               	return		;funcret
 20451  00F2FA                     __end_of_USBStallHandler:
 20452                           	opt stack 0
 20453                           pclatu	equ	0xFFB
 20454                           pclath	equ	0xFFA
 20455                           tblptru	equ	0xFF8
 20456                           tblptrh	equ	0xFF7
 20457                           tblptrl	equ	0xFF6
 20458                           tablat	equ	0xFF5
 20459                           prodh	equ	0xFF4
 20460                           prodl	equ	0xFF3
 20461                           intcon	equ	0xFF2
 20462                           indf0	equ	0xFEF
 20463                           postinc0	equ	0xFEE
 20464                           fsr0h	equ	0xFEA
 20465                           fsr0l	equ	0xFE9
 20466                           wreg	equ	0xFE8
 20467                           indf1	equ	0xFE7
 20468                           postdec1	equ	0xFE5
 20469                           plusw1	equ	0xFE3
 20470                           fsr1h	equ	0xFE2
 20471                           fsr1l	equ	0xFE1
 20472                           indf2	equ	0xFDF
 20473                           postinc2	equ	0xFDE
 20474                           postdec2	equ	0xFDD
 20475                           plusw2	equ	0xFDB
 20476                           fsr2h	equ	0xFDA
 20477                           fsr2l	equ	0xFD9
 20478                           status	equ	0xFD8
 20479                           
 20480 ;; *************** function _USBIncrement1msInternalTimers *****************
 20481 ;; Defined at:
 20482 ;;		line 3027 in file "usb_device.c"
 20483 ;; Parameters:    Size  Location     Type
 20484 ;;		None
 20485 ;; Auto vars:     Size  Location     Type
 20486 ;;		None
 20487 ;; Return value:  Size  Location     Type
 20488 ;;                  1    wreg      void 
 20489 ;; Registers used:
 20490 ;;		wreg, status,2, status,0
 20491 ;; Tracked objects:
 20492 ;;		On entry : 0/0
 20493 ;;		On exit  : 0/0
 20494 ;;		Unchanged: 0/0
 20495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20500 ;;Total ram usage:        0 bytes
 20501 ;; Hardware stack levels used:    1
 20502 ;; This function calls:
 20503 ;;		Nothing
 20504 ;; This function is called by:
 20505 ;;		_USBDeviceTasks
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text62
 20510  00F598                     __ptext62:
 20511                           	opt stack 0
 20512  00F598                     _USBIncrement1msInternalTimers:
 20513                           	opt stack 22
 20514                           
 20515                           ;usb_device.c: 3035: USB1msTickCount++;
 20516                           
 20517                           ; BSR set to: 15
 20518                           ;incstack = 0
 20519  00F598  0E01               	movlw	1
 20520  00F59A  0101               	movlb	1	; () banked
 20521  00F59C  2768               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 20522  00F59E  0E00               	movlw	0
 20523  00F5A0  2369               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 20524  00F5A2  236A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 20525  00F5A4  236B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 20526                           
 20527                           ; BSR set to: 1
 20528                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 20529  00F5A6  5027               	movf	_USBBusIsSuspended,w,c	;volatile
 20530  00F5A8  A4D8               	btfss	status,2,c
 20531  00F5AA  0012               	return	
 20532                           
 20533                           ; BSR set to: 1
 20534                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 20535  00F5AC  0100               	movlb	0	; () banked
 20536  00F5AE  2BFB               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 20537                           
 20538                           ; BSR set to: 0
 20539                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 20540  00F5B0  51FB               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 20541  00F5B2  A4D8               	btfss	status,2,c
 20542  00F5B4  0012               	return	
 20543                           
 20544                           ; BSR set to: 0
 20545                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 20546  00F5B6  69FB               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 20547                           
 20548                           ; BSR set to: 0
 20549  00F5B8  0012               	return	
 20550  00F5BA                     __end_of_USBIncrement1msInternalTimers:
 20551                           	opt stack 0
 20552                           pclatu	equ	0xFFB
 20553                           pclath	equ	0xFFA
 20554                           tblptru	equ	0xFF8
 20555                           tblptrh	equ	0xFF7
 20556                           tblptrl	equ	0xFF6
 20557                           tablat	equ	0xFF5
 20558                           prodh	equ	0xFF4
 20559                           prodl	equ	0xFF3
 20560                           intcon	equ	0xFF2
 20561                           indf0	equ	0xFEF
 20562                           postinc0	equ	0xFEE
 20563                           fsr0h	equ	0xFEA
 20564                           fsr0l	equ	0xFE9
 20565                           wreg	equ	0xFE8
 20566                           indf1	equ	0xFE7
 20567                           postdec1	equ	0xFE5
 20568                           plusw1	equ	0xFE3
 20569                           fsr1h	equ	0xFE2
 20570                           fsr1l	equ	0xFE1
 20571                           indf2	equ	0xFDF
 20572                           postinc2	equ	0xFDE
 20573                           postdec2	equ	0xFDD
 20574                           plusw2	equ	0xFDB
 20575                           fsr2h	equ	0xFDA
 20576                           fsr2l	equ	0xFD9
 20577                           status	equ	0xFD8
 20578                           
 20579 ;; *************** function _USBDeviceInit *****************
 20580 ;; Defined at:
 20581 ;;		line 277 in file "usb_device.c"
 20582 ;; Parameters:    Size  Location     Type
 20583 ;;		None
 20584 ;; Auto vars:     Size  Location     Type
 20585 ;;  i               1    8[COMRAM] unsigned char 
 20586 ;; Return value:  Size  Location     Type
 20587 ;;                  1    wreg      void 
 20588 ;; Registers used:
 20589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20590 ;; Tracked objects:
 20591 ;;		On entry : 0/0
 20592 ;;		On exit  : 0/0
 20593 ;;		Unchanged: 0/0
 20594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20599 ;;Total ram usage:        1 bytes
 20600 ;; Hardware stack levels used:    1
 20601 ;; Hardware stack levels required when called:    1
 20602 ;; This function calls:
 20603 ;;		_memset
 20604 ;; This function is called by:
 20605 ;;		_USBDeviceTasks
 20606 ;; This function uses a non-reentrant model
 20607 ;;
 20608                           
 20609                           	psect	text63
 20610  00CB44                     __ptext63:
 20611                           	opt stack 0
 20612  00CB44                     _USBDeviceInit:
 20613                           	opt stack 21
 20614                           
 20615                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 20616                           
 20617                           ;incstack = 0
 20618  00CB44  98A0               	bcf	4000,4,c	;volatile
 20619                           
 20620                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 20621  00CB46  0E00               	movlw	0
 20622  00CB48  6E63               	movwf	3939,c	;volatile
 20623                           
 20624                           ;usb_device.c: 291: {UIR = 0;};
 20625  00CB4A  0E00               	movlw	0
 20626  00CB4C  6E62               	movwf	3938,c	;volatile
 20627                           
 20628                           ;usb_device.c: 294: UEP0 = 0;
 20629  00CB4E  0E00               	movlw	0
 20630  00CB50  010F               	movlb	15	; () banked
 20631  00CB52  6F26               	movwf	38,b	;volatile
 20632                           
 20633                           ; BSR set to: 15
 20634                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 20635  00CB54  0E27               	movlw	39
 20636  00CB56  6E2E               	movwf	memset@p1,c
 20637  00CB58  0E0F               	movlw	15
 20638  00CB5A  6E2F               	movwf	memset@p1+1,c
 20639  00CB5C  0E00               	movlw	0
 20640  00CB5E  6E31               	movwf	memset@c+1,c
 20641  00CB60  0E00               	movlw	0
 20642  00CB62  6E30               	movwf	memset@c,c
 20643  00CB64  0E00               	movlw	0
 20644  00CB66  6E33               	movwf	memset@n+1,c
 20645  00CB68  0E02               	movlw	2
 20646  00CB6A  6E32               	movwf	memset@n,c
 20647  00CB6C  EC6B  F07A         	call	_memset	;wreg free
 20648                           
 20649                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 20650  00CB70  0E16               	movlw	22
 20651  00CB72  010F               	movlb	15	; () banked
 20652  00CB74  6F39               	movwf	57,b	;volatile
 20653                           
 20654                           ; BSR set to: 15
 20655  00CB76  0E9F               	movlw	159
 20656  00CB78  6F37               	movwf	55,b	;volatile
 20657                           
 20658                           ; BSR set to: 15
 20659  00CB7A  0E7B               	movlw	123
 20660  00CB7C  6F36               	movwf	54,b	;volatile
 20661                           
 20662                           ; BSR set to: 15
 20663                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 20664  00CB7E  0E00               	movlw	0
 20665  00CB80  6E36               	movwf	USBDeviceInit@i,c
 20666  00CB82                     i2l12172:
 20667                           
 20668                           ; BSR set to: 15
 20669  00CB82  0E0B               	movlw	11
 20670  00CB84  6436               	cpfsgt	USBDeviceInit@i,c
 20671  00CB86  D001               	goto	i2l145
 20672  00CB88  D00E               	goto	i2u1123_40
 20673  00CB8A                     i2l145:
 20674                           
 20675                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 20676                           
 20677                           ; BSR set to: 15
 20678  00CB8A  5036               	movf	USBDeviceInit@i,w,c
 20679  00CB8C  0D04               	mullw	4
 20680  00CB8E  0E00               	movlw	0
 20681  00CB90  24F3               	addwf	prodl,w,c
 20682  00CB92  6ED9               	movwf	fsr2l,c
 20683  00CB94  0E0D               	movlw	13
 20684  00CB96  20F4               	addwfc	prodh,w,c
 20685  00CB98  6EDA               	movwf	fsr2h,c
 20686  00CB9A  6ADE               	clrf	postinc2,c
 20687  00CB9C  6ADE               	clrf	postinc2,c
 20688  00CB9E  6ADE               	clrf	postinc2,c
 20689  00CBA0  6ADD               	clrf	postdec2,c
 20690  00CBA2  2A36               	incf	USBDeviceInit@i,f,c
 20691  00CBA4  D7EE               	goto	i2l12172
 20692  00CBA6                     i2u1123_40:
 20693                           
 20694                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 20695  00CBA6  8C65               	bsf	3941,6,c	;volatile
 20696                           
 20697                           ;usb_device.c: 316: UADDR = 0x00;
 20698  00CBA8  0E00               	movlw	0
 20699  00CBAA  010F               	movlb	15	; () banked
 20700  00CBAC  6F38               	movwf	56,b	;volatile
 20701                           
 20702                           ; BSR set to: 15
 20703                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 20704  00CBAE  9865               	bcf	3941,4,c	;volatile
 20705                           
 20706                           ; BSR set to: 15
 20707                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 20708  00CBB0  9C65               	bcf	3941,6,c	;volatile
 20709  00CBB2                     
 20710                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 20711                           
 20712                           ; BSR set to: 15
 20713  00CBB2  9662               	bcf	3938,3,c	;volatile
 20714                           
 20715                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 20716  00CBB4  0E00               	movlw	0
 20717  00CBB6  6E04               	movwf	_inPipes+3,c	;volatile
 20718                           
 20719                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 20720  00CBB8  0E00               	movlw	0
 20721  00CBBA  0101               	movlb	1	; () banked
 20722  00CBBC  6F48               	movwf	(_outPipes+3)& (0+255),b	;volatile
 20723                           
 20724                           ; BSR set to: 1
 20725                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 20726  00CBBE  0E00               	movlw	0
 20727  00CBC0  6F4A               	movwf	(_outPipes+5)& (0+255),b	;volatile
 20728  00CBC2  0E00               	movlw	0
 20729  00CBC4  6F49               	movwf	(_outPipes+4)& (0+255),b	;volatile
 20730                           
 20731                           ; BSR set to: 1
 20732                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 20733  00CBC6  B662               	btfsc	3938,3,c	;volatile
 20734  00CBC8  D7F4               	goto	i2l147
 20735                           
 20736                           ; BSR set to: 1
 20737                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 20738                           
 20739                           ; BSR set to: 1
 20740  00CBCA  0E01               	movlw	1
 20741  00CBCC  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 20742                           
 20743                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 20744  00CBCE  0E01               	movlw	1
 20745  00CBD0  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 20746                           
 20747                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 20748  00CBD2  0E00               	movlw	0
 20749  00CBD4  0100               	movlb	0	; () banked
 20750  00CBD6  6FFD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 20751                           
 20752                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 20753  00CBD8  0E00               	movlw	0
 20754  00CBDA  6FFC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 20755                           
 20756                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 20757  00CBDC  0E00               	movlw	0
 20758  00CBDE  6E27               	movwf	_USBBusIsSuspended,c	;volatile
 20759                           
 20760                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 20761  00CBE0  0E00               	movlw	0
 20762  00CBE2  6E36               	movwf	USBDeviceInit@i,c
 20763  00CBE4                     i2l12200:
 20764                           
 20765                           ; BSR set to: 0
 20766  00CBE4  0E02               	movlw	2
 20767  00CBE6  6436               	cpfsgt	USBDeviceInit@i,c
 20768  00CBE8  D001               	goto	i2l149
 20769  00CBEA  D02E               	goto	i2u1126_40
 20770  00CBEC                     i2l149:
 20771                           
 20772                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 20773                           
 20774                           ; BSR set to: 0
 20775  00CBEC  5036               	movf	USBDeviceInit@i,w,c
 20776  00CBEE  0D02               	mullw	2
 20777  00CBF0  0E07               	movlw	low _pBDTEntryIn
 20778  00CBF2  24F3               	addwf	prodl,w,c
 20779  00CBF4  6ED9               	movwf	fsr2l,c
 20780  00CBF6  0E00               	movlw	high _pBDTEntryIn
 20781  00CBF8  20F4               	addwfc	prodh,w,c
 20782  00CBFA  6EDA               	movwf	fsr2h,c
 20783  00CBFC  0E00               	movlw	0
 20784  00CBFE  6EDE               	movwf	postinc2,c
 20785  00CC00  0E00               	movlw	0
 20786  00CC02  6EDD               	movwf	postdec2,c
 20787                           
 20788                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 20789  00CC04  5036               	movf	USBDeviceInit@i,w,c
 20790  00CC06  0D02               	mullw	2
 20791  00CC08  0E4E               	movlw	low _pBDTEntryOut
 20792  00CC0A  24F3               	addwf	prodl,w,c
 20793  00CC0C  6ED9               	movwf	fsr2l,c
 20794  00CC0E  0E01               	movlw	high _pBDTEntryOut
 20795  00CC10  20F4               	addwfc	prodh,w,c
 20796  00CC12  6EDA               	movwf	fsr2h,c
 20797  00CC14  0E00               	movlw	0
 20798  00CC16  6EDE               	movwf	postinc2,c
 20799  00CC18  0E00               	movlw	0
 20800  00CC1A  6EDD               	movwf	postdec2,c
 20801                           
 20802                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 20803  00CC1C  5036               	movf	USBDeviceInit@i,w,c
 20804  00CC1E  0D01               	mullw	1
 20805  00CC20  0E75               	movlw	low _ep_data_in
 20806  00CC22  24F3               	addwf	prodl,w,c
 20807  00CC24  6ED9               	movwf	fsr2l,c
 20808  00CC26  0E01               	movlw	high _ep_data_in
 20809  00CC28  20F4               	addwfc	prodh,w,c
 20810  00CC2A  6EDA               	movwf	fsr2h,c
 20811  00CC2C  0E00               	movlw	0
 20812  00CC2E  6EDF               	movwf	indf2,c
 20813                           
 20814                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 20815  00CC30  5036               	movf	USBDeviceInit@i,w,c
 20816  00CC32  0D01               	mullw	1
 20817  00CC34  0E72               	movlw	low _ep_data_out
 20818  00CC36  24F3               	addwf	prodl,w,c
 20819  00CC38  6ED9               	movwf	fsr2l,c
 20820  00CC3A  0E01               	movlw	high _ep_data_out
 20821  00CC3C  20F4               	addwfc	prodh,w,c
 20822  00CC3E  6EDA               	movwf	fsr2h,c
 20823  00CC40  0E00               	movlw	0
 20824  00CC42  6EDF               	movwf	indf2,c
 20825  00CC44  2A36               	incf	USBDeviceInit@i,f,c
 20826  00CC46  D7CE               	goto	i2l12200
 20827  00CC48                     i2u1126_40:
 20828                           
 20829                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 20830  00CC48  0E08               	movlw	8
 20831  00CC4A  6E07               	movwf	_pBDTEntryIn,c
 20832  00CC4C  0E0D               	movlw	13
 20833  00CC4E  6E08               	movwf	_pBDTEntryIn+1,c
 20834                           
 20835                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 20836  00CC50  0E16               	movlw	22
 20837  00CC52  010F               	movlb	15	; () banked
 20838  00CC54  6F26               	movwf	38,b	;volatile
 20839                           
 20840                           ; BSR set to: 15
 20841                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 20842  00CC56  0E0D               	movlw	13
 20843  00CC58  010D               	movlb	13	; () banked
 20844  00CC5A  6F03               	movwf	3,b	;volatile
 20845  00CC5C  0E30               	movlw	48
 20846  00CC5E  6F02               	movwf	2,b	;volatile
 20847                           
 20848                           ; BSR set to: 13
 20849                           ;usb_device.c: 359: BDT[0].CNT = 8;
 20850  00CC60  0E08               	movlw	8
 20851  00CC62  6F01               	movwf	1,b	;volatile
 20852                           
 20853                           ; BSR set to: 13
 20854                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 20855  00CC64  0E04               	movlw	4
 20856  00CC66  6F00               	movwf	0,b	;volatile
 20857                           
 20858                           ; BSR set to: 13
 20859                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 20860  00CC68  8F00               	bsf	0,7,b	;volatile
 20861                           
 20862                           ; BSR set to: 13
 20863                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 20864  00CC6A  0E00               	movlw	0
 20865  00CC6C  6E2D               	movwf	_USBActiveConfiguration,c	;volatile
 20866                           
 20867                           ; BSR set to: 13
 20868                           ;usb_device.c: 366: USB1msTickCount = 0;
 20869  00CC6E  0E00               	movlw	0
 20870  00CC70  0101               	movlb	1	; () banked
 20871  00CC72  6F68               	movwf	_USB1msTickCount& (0+255),b	;volatile
 20872  00CC74  0E00               	movlw	0
 20873  00CC76  6F69               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 20874  00CC78  0E00               	movlw	0
 20875  00CC7A  6F6A               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 20876  00CC7C  0E00               	movlw	0
 20877  00CC7E  6F6B               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 20878                           
 20879                           ; BSR set to: 1
 20880                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 20881  00CC80  0E00               	movlw	0
 20882  00CC82  0100               	movlb	0	; () banked
 20883  00CC84  6FFB               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 20884                           
 20885                           ; BSR set to: 0
 20886                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 20887  00CC86  0E00               	movlw	0
 20888  00CC88  6E2B               	movwf	_USBDeviceState,c	;volatile
 20889                           
 20890                           ; BSR set to: 0
 20891  00CC8A  0012               	return		;funcret
 20892  00CC8C                     __end_of_USBDeviceInit:
 20893                           	opt stack 0
 20894                           pclatu	equ	0xFFB
 20895                           pclath	equ	0xFFA
 20896                           tblptru	equ	0xFF8
 20897                           tblptrh	equ	0xFF7
 20898                           tblptrl	equ	0xFF6
 20899                           tablat	equ	0xFF5
 20900                           prodh	equ	0xFF4
 20901                           prodl	equ	0xFF3
 20902                           intcon	equ	0xFF2
 20903                           indf0	equ	0xFEF
 20904                           postinc0	equ	0xFEE
 20905                           fsr0h	equ	0xFEA
 20906                           fsr0l	equ	0xFE9
 20907                           wreg	equ	0xFE8
 20908                           indf1	equ	0xFE7
 20909                           postdec1	equ	0xFE5
 20910                           plusw1	equ	0xFE3
 20911                           fsr1h	equ	0xFE2
 20912                           fsr1l	equ	0xFE1
 20913                           indf2	equ	0xFDF
 20914                           postinc2	equ	0xFDE
 20915                           postdec2	equ	0xFDD
 20916                           plusw2	equ	0xFDB
 20917                           fsr2h	equ	0xFDA
 20918                           fsr2l	equ	0xFD9
 20919                           status	equ	0xFD8
 20920                           
 20921 ;; *************** function _USBCtrlEPService *****************
 20922 ;; Defined at:
 20923 ;;		line 2374 in file "usb_device.c"
 20924 ;; Parameters:    Size  Location     Type
 20925 ;;		None
 20926 ;; Auto vars:     Size  Location     Type
 20927 ;;		None
 20928 ;; Return value:  Size  Location     Type
 20929 ;;                  1    wreg      void 
 20930 ;; Registers used:
 20931 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20932 ;; Tracked objects:
 20933 ;;		On entry : 0/0
 20934 ;;		On exit  : 0/0
 20935 ;;		Unchanged: 0/0
 20936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20941 ;;Total ram usage:        1 bytes
 20942 ;; Hardware stack levels used:    1
 20943 ;; Hardware stack levels required when called:    7
 20944 ;; This function calls:
 20945 ;;		_USBCtrlTrfInHandler
 20946 ;;		_USBCtrlTrfOutHandler
 20947 ;;		_USBCtrlTrfSetupHandler
 20948 ;;		i2_memcpy
 20949 ;; This function is called by:
 20950 ;;		_USBDeviceTasks
 20951 ;; This function uses a non-reentrant model
 20952 ;;
 20953                           
 20954                           	psect	text64
 20955  00E6DA                     __ptext64:
 20956                           	opt stack 0
 20957  00E6DA                     _USBCtrlEPService:
 20958                           	opt stack 15
 20959                           
 20960                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 20961                           
 20962                           ; BSR set to: 0
 20963                           ;incstack = 0
 20964  00E6DA  0E2D               	movlw	45
 20965  00E6DC  6E24               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 20966                           
 20967                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 20968  00E6DE  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 20969  00E6E2  0EFD               	movlw	253
 20970  00E6E4  164B               	andwf	??_USBCtrlEPService,f,c
 20971  00E6E6  A4D8               	btfss	status,2,c
 20972  00E6E8  D03B               	goto	i2l321
 20973                           
 20974                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 20975  00E6EA  C02C  F04B         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 20976  00E6EE  90D8               	bcf	status,0,c
 20977  00E6F0  324B               	rrcf	??_USBCtrlEPService,f,c
 20978  00E6F2  0E3F               	movlw	63
 20979  00E6F4  164B               	andwf	??_USBCtrlEPService,f,c
 20980  00E6F6  504B               	movf	??_USBCtrlEPService,w,c
 20981  00E6F8  0D04               	mullw	4
 20982  00E6FA  0E00               	movlw	0
 20983  00E6FC  24F3               	addwf	prodl,w,c
 20984  00E6FE  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 20985  00E700  0E0D               	movlw	13
 20986  00E702  20F4               	addwfc	prodh,w,c
 20987  00E704  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 20988                           
 20989                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 20990  00E706  C019  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 20991  00E70A  C01A  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 20992                           
 20993                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 20994  00E70E  0E04               	movlw	4
 20995  00E710  1817               	xorwf	_pBDTEntryEP0OutNext,w,c
 20996  00E712  6E17               	movwf	_pBDTEntryEP0OutNext,c
 20997  00E714  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 20998  00E716  6E18               	movwf	_pBDTEntryEP0OutNext+1,c
 20999                           
 21000                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 21001  00E718  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21002  00E71C  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21003  00E720  30DF               	rrcf	indf2,w,c
 21004  00E722  32E8               	rrcf	wreg,f,c
 21005  00E724  0B0F               	andlw	15
 21006  00E726  0A0D               	xorlw	13
 21007  00E728  A4D8               	btfss	status,2,c
 21008  00E72A  D017               	goto	i2l322
 21009                           
 21010                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 21011  00E72C  0E30               	movlw	48
 21012  00E72E  6E2E               	movwf	i2memcpy@d1,c
 21013  00E730  0E0D               	movlw	13
 21014  00E732  6E2F               	movwf	i2memcpy@d1+1,c
 21015  00E734  EE20 F002          	lfsr	2,2
 21016  00E738  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 21017  00E73A  26D9               	addwf	fsr2l,f,c
 21018  00E73C  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 21019  00E73E  22DA               	addwfc	fsr2h,f,c
 21020  00E740  CFDE F030          	movff	postinc2,i2memcpy@s1
 21021  00E744  CFDD F031          	movff	postdec2,i2memcpy@s1+1
 21022  00E748  0E00               	movlw	0
 21023  00E74A  6E33               	movwf	i2memcpy@n+1,c
 21024  00E74C  0E08               	movlw	8
 21025  00E74E  6E32               	movwf	i2memcpy@n,c
 21026  00E750  ECB7  F076         	call	i2_memcpy	;wreg free
 21027                           
 21028                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 21029  00E754  EC02  F074         	call	_USBCtrlTrfSetupHandler	;wreg free
 21030                           
 21031                           ;usb_device.c: 2411: }
 21032  00E758  0012               	return	
 21033  00E75A                     i2l322:
 21034                           
 21035                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 21036  00E75A  ECE5  F076         	call	_USBCtrlTrfOutHandler	;wreg free
 21037                           
 21038                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 21039  00E75E  0012               	return	
 21040  00E760                     i2l321:
 21041                           
 21042                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 21043  00E760  502C               	movf	_USTATcopy,w,c	;volatile
 21044  00E762  0BFD               	andlw	253
 21045  00E764  0A04               	xorlw	4
 21046  00E766  A4D8               	btfss	status,2,c
 21047  00E768  0012               	return	
 21048                           
 21049                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 21050  00E76A  EC17  F071         	call	_USBCtrlTrfInHandler	;wreg free
 21051  00E76E  0012               	return	
 21052  00E770                     __end_of_USBCtrlEPService:
 21053                           	opt stack 0
 21054                           pclatu	equ	0xFFB
 21055                           pclath	equ	0xFFA
 21056                           tblptru	equ	0xFF8
 21057                           tblptrh	equ	0xFF7
 21058                           tblptrl	equ	0xFF6
 21059                           tablat	equ	0xFF5
 21060                           prodh	equ	0xFF4
 21061                           prodl	equ	0xFF3
 21062                           intcon	equ	0xFF2
 21063                           indf0	equ	0xFEF
 21064                           postinc0	equ	0xFEE
 21065                           fsr0h	equ	0xFEA
 21066                           fsr0l	equ	0xFE9
 21067                           wreg	equ	0xFE8
 21068                           indf1	equ	0xFE7
 21069                           postdec1	equ	0xFE5
 21070                           plusw1	equ	0xFE3
 21071                           fsr1h	equ	0xFE2
 21072                           fsr1l	equ	0xFE1
 21073                           indf2	equ	0xFDF
 21074                           postinc2	equ	0xFDE
 21075                           postdec2	equ	0xFDD
 21076                           plusw2	equ	0xFDB
 21077                           fsr2h	equ	0xFDA
 21078                           fsr2l	equ	0xFD9
 21079                           status	equ	0xFD8
 21080                           
 21081 ;; *************** function i2_memcpy *****************
 21082 ;; Defined at:
 21083 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 21084 ;; Parameters:    Size  Location     Type
 21085 ;;  d1              2    0[COMRAM] PTR void 
 21086 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 21087 ;;		 -> msd_buffer(512), SetupPkt(8), 
 21088 ;;  s1              2    2[COMRAM] PTR const void 
 21089 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 21090 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 21091 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 21092 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 21093 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), 
 21094 ;;		 -> RAM(3759), SetupPkt(8), 
 21095 ;;  n               2    4[COMRAM] unsigned int 
 21096 ;; Auto vars:     Size  Location     Type
 21097 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 21098 ;;		 -> flash_command_pagesize_528(4), flash_command_pagesize_512(4), STR_6(6), STR_5(9), 
 21099 ;;		 -> STR_4(7), STR_3(9), dc_manual(80), dc_zero(80), 
 21100 ;;		 -> STR_2(7), STR_1(9), dc_arc2(80), dc_arc1(80), 
 21101 ;;		 -> dc_divide2(80), dc_divide1(80), dc_setup2(80), dc_setup1(80), 
 21102 ;;		 -> dc_main(80), ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), 
 21103 ;;		 -> RAM(3759), SetupPkt(8), 
 21104 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 21105 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 21106 ;;		 -> msd_buffer(512), SetupPkt(8), 
 21107 ;;  memcpy          1   10[COMRAM] unsigned char 
 21108 ;; Return value:  Size  Location     Type
 21109 ;;                  2    0[COMRAM] PTR void 
 21110 ;; Registers used:
 21111 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21112 ;; Tracked objects:
 21113 ;;		On entry : 0/0
 21114 ;;		On exit  : 0/0
 21115 ;;		Unchanged: 0/0
 21116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21118 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21120 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21121 ;;Total ram usage:       11 bytes
 21122 ;; Hardware stack levels used:    1
 21123 ;; This function calls:
 21124 ;;		Nothing
 21125 ;; This function is called by:
 21126 ;;		_USBCtrlEPService
 21127 ;; This function uses a non-reentrant model
 21128 ;;
 21129                           
 21130                           	psect	text65
 21131  00ED6E                     __ptext65:
 21132                           	opt stack 0
 21133  00ED6E                     i2_memcpy:
 21134                           	opt stack 21
 21135                           
 21136                           ;incstack = 0
 21137  00ED6E  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
 21138  00ED72  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
 21139  00ED76  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
 21140  00ED7A  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
 21141  00ED7E  D01C               	goto	i2l3312
 21142  00ED80                     i2l12148:
 21143  00ED80  C036  FFF6         	movff	i2memcpy@s,tblptrl
 21144  00ED84  C037  FFF7         	movff	i2memcpy@s+1,tblptrh
 21145  00ED88  0E00               	movlw	low (__mediumconst shr (0+16))
 21146  00ED8A  6EF8               	movwf	tblptru,c
 21147  00ED8C  0E0E               	movlw	(high __ramtop+-1)
 21148  00ED8E  64F7               	cpfsgt	tblptrh,c
 21149  00ED90  D003               	bra	i2u1120_47
 21150  00ED92  0008               	tblrd		*
 21151  00ED94  50F5               	movf	tablat,w,c
 21152  00ED96  D005               	bra	i2u1120_40
 21153  00ED98                     i2u1120_47:
 21154  00ED98  CFF6 FFE9          	movff	tblptrl,fsr0l
 21155  00ED9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 21156  00EDA0  50EF               	movf	indf0,w,c
 21157  00EDA2                     i2u1120_40:
 21158  00EDA2  6E38               	movwf	i2memcpy@tmp,c
 21159  00EDA4  4A36               	infsnz	i2memcpy@s,f,c
 21160  00EDA6  2A37               	incf	i2memcpy@s+1,f,c
 21161  00EDA8  C034  FFD9         	movff	i2memcpy@d,fsr2l
 21162  00EDAC  C035  FFDA         	movff	i2memcpy@d+1,fsr2h
 21163  00EDB0  C038  FFDF         	movff	i2memcpy@tmp,indf2
 21164  00EDB4  4A34               	infsnz	i2memcpy@d,f,c
 21165  00EDB6  2A35               	incf	i2memcpy@d+1,f,c
 21166  00EDB8                     i2l3312:
 21167  00EDB8  0632               	decf	i2memcpy@n,f,c
 21168  00EDBA  A0D8               	btfss	status,0,c
 21169  00EDBC  0633               	decf	i2memcpy@n+1,f,c
 21170  00EDBE  2832               	incf	i2memcpy@n,w,c
 21171  00EDC0  E1DF               	bnz	i2l12148
 21172  00EDC2  2833               	incf	i2memcpy@n+1,w,c
 21173  00EDC4  B4D8               	btfsc	status,2,c
 21174  00EDC6  0012               	return	
 21175  00EDC8  D7DB               	goto	i2l3313
 21176  00EDCA                     __end_ofi2_memcpy:
 21177                           	opt stack 0
 21178                           pclatu	equ	0xFFB
 21179                           pclath	equ	0xFFA
 21180                           tblptru	equ	0xFF8
 21181                           tblptrh	equ	0xFF7
 21182                           tblptrl	equ	0xFF6
 21183                           tablat	equ	0xFF5
 21184                           prodh	equ	0xFF4
 21185                           prodl	equ	0xFF3
 21186                           intcon	equ	0xFF2
 21187                           indf0	equ	0xFEF
 21188                           postinc0	equ	0xFEE
 21189                           fsr0h	equ	0xFEA
 21190                           fsr0l	equ	0xFE9
 21191                           wreg	equ	0xFE8
 21192                           indf1	equ	0xFE7
 21193                           postdec1	equ	0xFE5
 21194                           plusw1	equ	0xFE3
 21195                           fsr1h	equ	0xFE2
 21196                           fsr1l	equ	0xFE1
 21197                           indf2	equ	0xFDF
 21198                           postinc2	equ	0xFDE
 21199                           postdec2	equ	0xFDD
 21200                           plusw2	equ	0xFDB
 21201                           fsr2h	equ	0xFDA
 21202                           fsr2l	equ	0xFD9
 21203                           status	equ	0xFD8
 21204                           
 21205 ;; *************** function _USBCtrlTrfSetupHandler *****************
 21206 ;; Defined at:
 21207 ;;		line 2467 in file "usb_device.c"
 21208 ;; Parameters:    Size  Location     Type
 21209 ;;		None
 21210 ;; Auto vars:     Size  Location     Type
 21211 ;;		None
 21212 ;; Return value:  Size  Location     Type
 21213 ;;                  1    wreg      void 
 21214 ;; Registers used:
 21215 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21216 ;; Tracked objects:
 21217 ;;		On entry : 0/0
 21218 ;;		On exit  : 0/0
 21219 ;;		Unchanged: 0/0
 21220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21225 ;;Total ram usage:        0 bytes
 21226 ;; Hardware stack levels used:    1
 21227 ;; Hardware stack levels required when called:    6
 21228 ;; This function calls:
 21229 ;;		_USBCheckStdRequest
 21230 ;;		_USBCtrlEPServiceComplete
 21231 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21232 ;; This function is called by:
 21233 ;;		_USBCtrlEPService
 21234 ;; This function uses a non-reentrant model
 21235 ;;
 21236                           
 21237                           	psect	text66
 21238  00E804                     __ptext66:
 21239                           	opt stack 0
 21240  00E804                     _USBCtrlTrfSetupHandler:
 21241                           	opt stack 15
 21242                           
 21243                           ;usb_device.c: 2472: shortPacketStatus = 0;
 21244                           
 21245                           ;incstack = 0
 21246  00E804  0E00               	movlw	0
 21247  00E806  6E2A               	movwf	_shortPacketStatus,c	;volatile
 21248                           
 21249                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 21250  00E808  0E00               	movlw	0
 21251  00E80A  6E23               	movwf	_USBDeferStatusStagePacket,c	;volatile
 21252                           
 21253                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 21254  00E80C  0E00               	movlw	0
 21255  00E80E  0100               	movlb	0	; () banked
 21256  00E810  6FFD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21257                           
 21258                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 21259  00E812  0E00               	movlw	0
 21260  00E814  6FFC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21261                           
 21262                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 21263  00E816  0E00               	movlw	0
 21264  00E818  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 21265                           
 21266                           ;usb_device.c: 2477: controlTransferState = 0;
 21267  00E81A  0E00               	movlw	0
 21268  00E81C  6E29               	movwf	_controlTransferState,c	;volatile
 21269                           
 21270                           ; BSR set to: 0
 21271                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21272  00E81E  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 21273  00E822  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21274  00E826  0E7F               	movlw	127
 21275  00E828  16DF               	andwf	indf2,f,c
 21276                           
 21277                           ; BSR set to: 0
 21278                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21279  00E82A  0E04               	movlw	4
 21280  00E82C  1807               	xorwf	_pBDTEntryIn,w,c
 21281  00E82E  6E07               	movwf	_pBDTEntryIn,c
 21282  00E830  5008               	movf	_pBDTEntryIn+1,w,c
 21283  00E832  6E08               	movwf	_pBDTEntryIn+1,c
 21284                           
 21285                           ; BSR set to: 0
 21286                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 21287  00E834  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 21288  00E838  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21289  00E83C  0E7F               	movlw	127
 21290  00E83E  16DF               	andwf	indf2,f,c
 21291                           
 21292                           ; BSR set to: 0
 21293                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 21294  00E840  0E04               	movlw	4
 21295  00E842  1807               	xorwf	_pBDTEntryIn,w,c
 21296  00E844  6E07               	movwf	_pBDTEntryIn,c
 21297  00E846  5008               	movf	_pBDTEntryIn+1,w,c
 21298  00E848  6E08               	movwf	_pBDTEntryIn+1,c
 21299                           
 21300                           ; BSR set to: 0
 21301                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 21302  00E84A  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21303  00E84E  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21304  00E852  0E7F               	movlw	127
 21305  00E854  16DF               	andwf	indf2,f,c
 21306                           
 21307                           ; BSR set to: 0
 21308                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 21309  00E856  0E00               	movlw	0
 21310  00E858  6E04               	movwf	_inPipes+3,c	;volatile
 21311                           
 21312                           ; BSR set to: 0
 21313                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 21314  00E85A  0E00               	movlw	0
 21315  00E85C  6E06               	movwf	_inPipes+5,c	;volatile
 21316  00E85E  0E00               	movlw	0
 21317  00E860  6E05               	movwf	_inPipes+4,c	;volatile
 21318                           
 21319                           ; BSR set to: 0
 21320                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 21321  00E862  0E00               	movlw	0
 21322  00E864  0101               	movlb	1	; () banked
 21323  00E866  6F48               	movwf	(_outPipes+3)& (0+255),b	;volatile
 21324                           
 21325                           ; BSR set to: 1
 21326                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 21327  00E868  0E00               	movlw	0
 21328  00E86A  6F4A               	movwf	(_outPipes+5)& (0+255),b	;volatile
 21329  00E86C  0E00               	movlw	0
 21330  00E86E  6F49               	movwf	(_outPipes+4)& (0+255),b	;volatile
 21331                           
 21332                           ; BSR set to: 1
 21333                           ;usb_device.c: 2502: USBCheckStdRequest();
 21334  00E870  ECAE  F06E         	call	_USBCheckStdRequest	;wreg free
 21335                           
 21336                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 21337  00E874  0E00               	movlw	0
 21338  00E876  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21339  00E878  0E03               	movlw	3
 21340  00E87A  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21341  00E87C  0E00               	movlw	0
 21342  00E87E  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21343  00E880  0E00               	movlw	0
 21344  00E882  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21345  00E884  0E00               	movlw	0
 21346  00E886  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21347  00E888  0E00               	movlw	0
 21348  00E88A  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21349  00E88C  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21350                           
 21351                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 21352  00E890  EC76  F06C         	call	_USBCtrlEPServiceComplete	;wreg free
 21353  00E894  0012               	return		;funcret
 21354  00E896                     __end_of_USBCtrlTrfSetupHandler:
 21355                           	opt stack 0
 21356                           pclatu	equ	0xFFB
 21357                           pclath	equ	0xFFA
 21358                           tblptru	equ	0xFF8
 21359                           tblptrh	equ	0xFF7
 21360                           tblptrl	equ	0xFF6
 21361                           tablat	equ	0xFF5
 21362                           prodh	equ	0xFF4
 21363                           prodl	equ	0xFF3
 21364                           intcon	equ	0xFF2
 21365                           indf0	equ	0xFEF
 21366                           postinc0	equ	0xFEE
 21367                           fsr0h	equ	0xFEA
 21368                           fsr0l	equ	0xFE9
 21369                           wreg	equ	0xFE8
 21370                           indf1	equ	0xFE7
 21371                           postdec1	equ	0xFE5
 21372                           plusw1	equ	0xFE3
 21373                           fsr1h	equ	0xFE2
 21374                           fsr1l	equ	0xFE1
 21375                           indf2	equ	0xFDF
 21376                           postinc2	equ	0xFDE
 21377                           postdec2	equ	0xFDD
 21378                           plusw2	equ	0xFDB
 21379                           fsr2h	equ	0xFDA
 21380                           fsr2l	equ	0xFD9
 21381                           status	equ	0xFD8
 21382                           
 21383 ;; *************** function _USBCtrlEPServiceComplete *****************
 21384 ;; Defined at:
 21385 ;;		line 1618 in file "usb_device.c"
 21386 ;; Parameters:    Size  Location     Type
 21387 ;;		None
 21388 ;; Auto vars:     Size  Location     Type
 21389 ;;		None
 21390 ;; Return value:  Size  Location     Type
 21391 ;;                  1    wreg      void 
 21392 ;; Registers used:
 21393 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21394 ;; Tracked objects:
 21395 ;;		On entry : 0/0
 21396 ;;		On exit  : 0/0
 21397 ;;		Unchanged: 0/0
 21398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21403 ;;Total ram usage:        0 bytes
 21404 ;; Hardware stack levels used:    1
 21405 ;; Hardware stack levels required when called:    2
 21406 ;; This function calls:
 21407 ;;		_USBCtrlEPAllowDataStage
 21408 ;;		_USBCtrlEPAllowStatusStage
 21409 ;; This function is called by:
 21410 ;;		_USBCtrlTrfSetupHandler
 21411 ;; This function uses a non-reentrant model
 21412 ;;
 21413                           
 21414                           	psect	text67
 21415  00D8EC                     __ptext67:
 21416                           	opt stack 0
 21417  00D8EC                     _USBCtrlEPServiceComplete:
 21418                           	opt stack 18
 21419                           
 21420                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 21421                           
 21422                           ;incstack = 0
 21423  00D8EC  9865               	bcf	3941,4,c	;volatile
 21424                           
 21425                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 21426  00D8EE  BE04               	btfsc	_inPipes+3,7,c	;volatile
 21427  00D8F0  D03A               	goto	i2l231
 21428                           
 21429                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 21430  00D8F2  0101               	movlb	1	; () banked
 21431  00D8F4  AF48               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 21432  00D8F6  D00C               	goto	i2l232
 21433                           
 21434                           ; BSR set to: 1
 21435                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 21436  00D8F8  0E02               	movlw	2
 21437  00D8FA  6E29               	movwf	_controlTransferState,c	;volatile
 21438                           
 21439                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 21440  00D8FC  0100               	movlb	0	; () banked
 21441  00D8FE  51FC               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 21442  00D900  B4D8               	btfsc	status,2,c
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 21446  00D902  EC21  F073         	call	_USBCtrlEPAllowDataStage	;wreg free
 21447                           
 21448                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 21449  00D906  0E00               	movlw	0
 21450  00D908  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 21451                           
 21452                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 21453  00D90A  0E00               	movlw	0
 21454  00D90C  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 21455                           
 21456                           ;usb_device.c: 1654: }
 21457  00D90E  0012               	return	
 21458  00D910                     i2l232:
 21459                           
 21460                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 21461  00D910  EE20 F001          	lfsr	2,1
 21462  00D914  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21463  00D916  26D9               	addwf	fsr2l,f,c
 21464  00D918  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21465  00D91A  22DA               	addwfc	fsr2h,f,c
 21466  00D91C  0E08               	movlw	8
 21467  00D91E  6EDF               	movwf	indf2,c
 21468                           
 21469                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21470  00D920  EE20 F002          	lfsr	2,2
 21471  00D924  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21472  00D926  26D9               	addwf	fsr2l,f,c
 21473  00D928  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21474  00D92A  22DA               	addwfc	fsr2h,f,c
 21475  00D92C  0E30               	movlw	48
 21476  00D92E  6EDE               	movwf	postinc2,c
 21477  00D930  0E0D               	movlw	13
 21478  00D932  6EDD               	movwf	postdec2,c
 21479                           
 21480                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21481  00D934  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21482  00D938  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21483  00D93C  0E0C               	movlw	12
 21484  00D93E  6EDF               	movwf	indf2,c
 21485                           
 21486                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21487  00D940  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21488  00D944  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21489  00D948  0E00               	movlw	0
 21490  00D94A  8EDB               	bsf	plusw2,7,c
 21491                           
 21492                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 21493  00D94C  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 21494  00D950  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21495  00D954  0E04               	movlw	4
 21496  00D956  6EDF               	movwf	indf2,c
 21497                           
 21498                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21499  00D958  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 21500  00D95C  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21501  00D960  0E00               	movlw	0
 21502  00D962  8EDB               	bsf	plusw2,7,c
 21503                           
 21504                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 21505  00D964  0012               	return	
 21506  00D966                     i2l231:
 21507                           
 21508                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 21509  00D966  010D               	movlb	13	; () banked
 21510  00D968  AF30               	btfss	48,7,b	;volatile
 21511  00D96A  D011               	goto	i2l236
 21512                           
 21513                           ; BSR set to: 13
 21514                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 21515  00D96C  0E01               	movlw	1
 21516  00D96E  6E29               	movwf	_controlTransferState,c	;volatile
 21517                           
 21518                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 21519  00D970  0100               	movlb	0	; () banked
 21520  00D972  51FD               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 21521  00D974  B4D8               	btfsc	status,2,c
 21522                           
 21523                           ; BSR set to: 0
 21524                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 21525  00D976  EC21  F073         	call	_USBCtrlEPAllowDataStage	;wreg free
 21526                           
 21527                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 21528  00D97A  0E00               	movlw	0
 21529  00D97C  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 21530                           
 21531                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 21532  00D97E  0E00               	movlw	0
 21533  00D980  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 21534                           
 21535                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 21536  00D982  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 21537  00D984  A4D8               	btfss	status,2,c
 21538  00D986  0012               	return	
 21539                           
 21540                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 21541  00D988  ECB6  F070         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21542                           
 21543                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 21544  00D98C  0012               	return	
 21545  00D98E                     i2l236:
 21546                           
 21547                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 21548  00D98E  0E02               	movlw	2
 21549  00D990  6E29               	movwf	_controlTransferState,c	;volatile
 21550                           
 21551                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 21552  00D992  EE20 F001          	lfsr	2,1
 21553  00D996  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21554  00D998  26D9               	addwf	fsr2l,f,c
 21555  00D99A  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21556  00D99C  22DA               	addwfc	fsr2h,f,c
 21557  00D99E  0E08               	movlw	8
 21558  00D9A0  6EDF               	movwf	indf2,c
 21559                           
 21560                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21561  00D9A2  EE20 F002          	lfsr	2,2
 21562  00D9A6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21563  00D9A8  26D9               	addwf	fsr2l,f,c
 21564  00D9AA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21565  00D9AC  22DA               	addwfc	fsr2h,f,c
 21566  00D9AE  0E30               	movlw	48
 21567  00D9B0  6EDE               	movwf	postinc2,c
 21568  00D9B2  0E0D               	movlw	13
 21569  00D9B4  6EDD               	movwf	postdec2,c
 21570                           
 21571                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21572  00D9B6  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21573  00D9BA  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21574  00D9BE  0E04               	movlw	4
 21575  00D9C0  6EDF               	movwf	indf2,c
 21576                           
 21577                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21578  00D9C2  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21579  00D9C6  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21580  00D9CA  0E00               	movlw	0
 21581  00D9CC  8EDB               	bsf	plusw2,7,c
 21582                           
 21583                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 21584  00D9CE  0E00               	movlw	0
 21585  00D9D0  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 21586                           
 21587                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 21588  00D9D2  0E00               	movlw	0
 21589  00D9D4  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 21590                           
 21591                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 21592  00D9D6  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 21593  00D9D8  A4D8               	btfss	status,2,c
 21594  00D9DA  0012               	return	
 21595                           
 21596                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 21597  00D9DC  ECB6  F070         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21598  00D9E0  0012               	return	
 21599  00D9E2                     __end_of_USBCtrlEPServiceComplete:
 21600                           	opt stack 0
 21601                           pclatu	equ	0xFFB
 21602                           pclath	equ	0xFFA
 21603                           tblptru	equ	0xFF8
 21604                           tblptrh	equ	0xFF7
 21605                           tblptrl	equ	0xFF6
 21606                           tablat	equ	0xFF5
 21607                           prodh	equ	0xFF4
 21608                           prodl	equ	0xFF3
 21609                           intcon	equ	0xFF2
 21610                           indf0	equ	0xFEF
 21611                           postinc0	equ	0xFEE
 21612                           fsr0h	equ	0xFEA
 21613                           fsr0l	equ	0xFE9
 21614                           wreg	equ	0xFE8
 21615                           indf1	equ	0xFE7
 21616                           postdec1	equ	0xFE5
 21617                           plusw1	equ	0xFE3
 21618                           fsr1h	equ	0xFE2
 21619                           fsr1l	equ	0xFE1
 21620                           indf2	equ	0xFDF
 21621                           postinc2	equ	0xFDE
 21622                           postdec2	equ	0xFDD
 21623                           plusw2	equ	0xFDB
 21624                           fsr2h	equ	0xFDA
 21625                           fsr2l	equ	0xFD9
 21626                           status	equ	0xFD8
 21627                           
 21628 ;; *************** function _USBCtrlEPAllowDataStage *****************
 21629 ;; Defined at:
 21630 ;;		line 1490 in file "usb_device.c"
 21631 ;; Parameters:    Size  Location     Type
 21632 ;;		None
 21633 ;; Auto vars:     Size  Location     Type
 21634 ;;		None
 21635 ;; Return value:  Size  Location     Type
 21636 ;;                  1    wreg      void 
 21637 ;; Registers used:
 21638 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21639 ;; Tracked objects:
 21640 ;;		On entry : 0/0
 21641 ;;		On exit  : 0/0
 21642 ;;		Unchanged: 0/0
 21643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21648 ;;Total ram usage:        0 bytes
 21649 ;; Hardware stack levels used:    1
 21650 ;; Hardware stack levels required when called:    1
 21651 ;; This function calls:
 21652 ;;		_USBCtrlTrfTxService
 21653 ;; This function is called by:
 21654 ;;		_USBCtrlEPServiceComplete
 21655 ;; This function uses a non-reentrant model
 21656 ;;
 21657                           
 21658                           	psect	text68
 21659  00E642                     __ptext68:
 21660                           	opt stack 0
 21661  00E642                     _USBCtrlEPAllowDataStage:
 21662                           	opt stack 18
 21663                           
 21664                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 21665                           
 21666                           ;incstack = 0
 21667  00E642  0E00               	movlw	0
 21668  00E644  0100               	movlb	0	; () banked
 21669  00E646  6FFD               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 21670                           
 21671                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 21672  00E648  0E00               	movlw	0
 21673  00E64A  6FFC               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;usb_device.c: 1495: if(controlTransferState == 2)
 21677  00E64C  0E02               	movlw	2
 21678  00E64E  1829               	xorwf	_controlTransferState,w,c	;volatile
 21679  00E650  A4D8               	btfss	status,2,c
 21680  00E652  D01F               	goto	i2l220
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 21684  00E654  EE20 F001          	lfsr	2,1
 21685  00E658  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21686  00E65A  26D9               	addwf	fsr2l,f,c
 21687  00E65C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21688  00E65E  22DA               	addwfc	fsr2h,f,c
 21689  00E660  0E08               	movlw	8
 21690  00E662  6EDF               	movwf	indf2,c
 21691                           
 21692                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21693  00E664  EE20 F002          	lfsr	2,2
 21694  00E668  5017               	movf	_pBDTEntryEP0OutNext,w,c
 21695  00E66A  26D9               	addwf	fsr2l,f,c
 21696  00E66C  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 21697  00E66E  22DA               	addwfc	fsr2h,f,c
 21698  00E670  0E38               	movlw	56
 21699  00E672  6EDE               	movwf	postinc2,c
 21700  00E674  0E0D               	movlw	13
 21701  00E676  6EDD               	movwf	postdec2,c
 21702                           
 21703                           ; BSR set to: 0
 21704                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 21705  00E678  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21706  00E67C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21707  00E680  0E48               	movlw	72
 21708  00E682  6EDF               	movwf	indf2,c
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21712  00E684  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21713  00E688  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21714  00E68C  0E00               	movlw	0
 21715  00E68E  8EDB               	bsf	plusw2,7,c
 21716                           
 21717                           ;usb_device.c: 1502: }
 21718  00E690  0012               	return	
 21719  00E692                     i2l220:
 21720                           
 21721                           ; BSR set to: 0
 21722                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 21723                           
 21724                           ; BSR set to: 0
 21725  00E692  5005               	movf	_inPipes+4,w,c	;volatile
 21726  00E694  010D               	movlb	13	; () banked
 21727  00E696  5D36               	subwf	54,w,b	;volatile
 21728  00E698  5006               	movf	_inPipes+5,w,c	;volatile
 21729  00E69A  5937               	subwfb	55,w,b	;volatile
 21730  00E69C  B0D8               	btfsc	status,0,c
 21731  00E69E  D004               	goto	i2l222
 21732                           
 21733                           ; BSR set to: 13
 21734                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 21735  00E6A0  CD36 F005          	movff	3382,_inPipes+4	;volatile
 21736  00E6A4  CD37 F006          	movff	3383,_inPipes+5	;volatile
 21737  00E6A8                     i2l222:
 21738                           
 21739                           ; BSR set to: 13
 21740                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 21741                           
 21742                           ; BSR set to: 13
 21743  00E6A8  EC82  F06F         	call	_USBCtrlTrfTxService	;wreg free
 21744                           
 21745                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 21746  00E6AC  EE20 F002          	lfsr	2,2
 21747  00E6B0  5007               	movf	_pBDTEntryIn,w,c
 21748  00E6B2  26D9               	addwf	fsr2l,f,c
 21749  00E6B4  5008               	movf	_pBDTEntryIn+1,w,c
 21750  00E6B6  22DA               	addwfc	fsr2h,f,c
 21751  00E6B8  0E38               	movlw	56
 21752  00E6BA  6EDE               	movwf	postinc2,c
 21753  00E6BC  0E0D               	movlw	13
 21754  00E6BE  6EDD               	movwf	postdec2,c
 21755                           
 21756                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21757  00E6C0  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 21758  00E6C4  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21759  00E6C8  0E48               	movlw	72
 21760  00E6CA  6EDF               	movwf	indf2,c
 21761                           
 21762                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21763  00E6CC  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 21764  00E6D0  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21765  00E6D4  0E00               	movlw	0
 21766  00E6D6  8EDB               	bsf	plusw2,7,c
 21767  00E6D8  0012               	return	
 21768  00E6DA                     __end_of_USBCtrlEPAllowDataStage:
 21769                           	opt stack 0
 21770                           pclatu	equ	0xFFB
 21771                           pclath	equ	0xFFA
 21772                           tblptru	equ	0xFF8
 21773                           tblptrh	equ	0xFF7
 21774                           tblptrl	equ	0xFF6
 21775                           tablat	equ	0xFF5
 21776                           prodh	equ	0xFF4
 21777                           prodl	equ	0xFF3
 21778                           intcon	equ	0xFF2
 21779                           indf0	equ	0xFEF
 21780                           postinc0	equ	0xFEE
 21781                           fsr0h	equ	0xFEA
 21782                           fsr0l	equ	0xFE9
 21783                           wreg	equ	0xFE8
 21784                           indf1	equ	0xFE7
 21785                           postdec1	equ	0xFE5
 21786                           plusw1	equ	0xFE3
 21787                           fsr1h	equ	0xFE2
 21788                           fsr1l	equ	0xFE1
 21789                           indf2	equ	0xFDF
 21790                           postinc2	equ	0xFDE
 21791                           postdec2	equ	0xFDD
 21792                           plusw2	equ	0xFDB
 21793                           fsr2h	equ	0xFDA
 21794                           fsr2l	equ	0xFD9
 21795                           status	equ	0xFD8
 21796                           
 21797 ;; *************** function _USBCheckStdRequest *****************
 21798 ;; Defined at:
 21799 ;;		line 2688 in file "usb_device.c"
 21800 ;; Parameters:    Size  Location     Type
 21801 ;;		None
 21802 ;; Auto vars:     Size  Location     Type
 21803 ;;		None
 21804 ;; Return value:  Size  Location     Type
 21805 ;;                  1    wreg      void 
 21806 ;; Registers used:
 21807 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21808 ;; Tracked objects:
 21809 ;;		On entry : 0/0
 21810 ;;		On exit  : 0/0
 21811 ;;		Unchanged: 0/0
 21812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21817 ;;Total ram usage:        0 bytes
 21818 ;; Hardware stack levels used:    1
 21819 ;; Hardware stack levels required when called:    5
 21820 ;; This function calls:
 21821 ;;		_USBStdFeatureReqHandler
 21822 ;;		_USBStdGetDscHandler
 21823 ;;		_USBStdGetStatusHandler
 21824 ;;		_USBStdSetCfgHandler
 21825 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21826 ;; This function is called by:
 21827 ;;		_USBCtrlTrfSetupHandler
 21828 ;; This function uses a non-reentrant model
 21829 ;;
 21830                           
 21831                           	psect	text69
 21832  00DD5C                     __ptext69:
 21833                           	opt stack 0
 21834  00DD5C                     _USBCheckStdRequest:
 21835                           	opt stack 15
 21836                           
 21837                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 21838                           
 21839                           ;incstack = 0
 21840  00DD5C  010D               	movlb	13	; () banked
 21841  00DD5E  3930               	swapf	48,w,b	;volatile
 21842  00DD60  32E8               	rrcf	wreg,f,c
 21843  00DD62  0B03               	andlw	3
 21844  00DD64  0900               	iorlw	0
 21845  00DD66  A4D8               	btfss	status,2,c
 21846  00DD68  0012               	return	
 21847  00DD6A  D042               	goto	i2l355
 21848  00DD6C                     i2l356:
 21849                           
 21850                           ; BSR set to: 13
 21851                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 21852  00DD6C  8E04               	bsf	_inPipes+3,7,c	;volatile
 21853                           
 21854                           ; BSR set to: 13
 21855                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 21856  00DD6E  0E08               	movlw	8
 21857  00DD70  6E2B               	movwf	_USBDeviceState,c	;volatile
 21858                           
 21859                           ;usb_device.c: 2698: break;
 21860  00DD72  0012               	return	
 21861  00DD74                     
 21862                           ; BSR set to: 13
 21863                           ;usb_device.c: 2700: USBStdGetDscHandler();
 21864                           
 21865                           ; BSR set to: 13
 21866  00DD74  ECBD  F068         	call	_USBStdGetDscHandler	;wreg free
 21867                           
 21868                           ;usb_device.c: 2701: break;
 21869  00DD78  0012               	return	
 21870  00DD7A                     
 21871                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 21872  00DD7A  EC40  F06E         	call	_USBStdSetCfgHandler	;wreg free
 21873                           
 21874                           ;usb_device.c: 2704: break;
 21875  00DD7E  0012               	return	
 21876  00DD80                     
 21877                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 21878  00DD80  0E2D               	movlw	low _USBActiveConfiguration
 21879  00DD82  6E01               	movwf	_inPipes,c	;volatile
 21880  00DD84  0E00               	movlw	high _USBActiveConfiguration
 21881  00DD86  6E02               	movwf	_inPipes+1,c	;volatile
 21882                           
 21883                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21884  00DD88  8004               	bsf	_inPipes+3,0,c	;volatile
 21885                           
 21886                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 21887  00DD8A  0E01               	movlw	1
 21888  00DD8C  6E05               	movwf	_inPipes+4,c	;volatile
 21889                           
 21890                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 21891  00DD8E  8E04               	bsf	_inPipes+3,7,c	;volatile
 21892                           
 21893                           ;usb_device.c: 2710: break;
 21894  00DD90  0012               	return	
 21895  00DD92                     
 21896                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 21897  00DD92  ECD3  F072         	call	_USBStdGetStatusHandler	;wreg free
 21898                           
 21899                           ;usb_device.c: 2713: break;
 21900  00DD96  0012               	return	
 21901  00DD98                     
 21902                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 21903  00DD98  EC57  F062         	call	_USBStdFeatureReqHandler	;wreg free
 21904                           
 21905                           ;usb_device.c: 2717: break;
 21906  00DD9C  0012               	return	
 21907  00DD9E                     
 21908                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 21909  00DD9E  010D               	movlb	13	; () banked
 21910  00DDA0  5134               	movf	52,w,b	;volatile
 21911  00DDA2  0D01               	mullw	1
 21912  00DDA4  0E8E               	movlw	low _USBAlternateInterface
 21913  00DDA6  24F3               	addwf	prodl,w,c
 21914  00DDA8  6E01               	movwf	_inPipes,c	;volatile
 21915  00DDAA  0E01               	movlw	high _USBAlternateInterface
 21916  00DDAC  20F4               	addwfc	prodh,w,c
 21917  00DDAE  6E02               	movwf	_inPipes+1,c	;volatile
 21918                           
 21919                           ; BSR set to: 13
 21920                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 21921  00DDB0  8004               	bsf	_inPipes+3,0,c	;volatile
 21922                           
 21923                           ; BSR set to: 13
 21924                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 21925  00DDB2  0E01               	movlw	1
 21926  00DDB4  6E05               	movwf	_inPipes+4,c	;volatile
 21927                           
 21928                           ; BSR set to: 13
 21929                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 21930  00DDB6  8E04               	bsf	_inPipes+3,7,c	;volatile
 21931                           
 21932                           ;usb_device.c: 2723: break;
 21933  00DDB8  0012               	return	
 21934  00DDBA                     i2l365:
 21935                           
 21936                           ; BSR set to: 13
 21937                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 21938  00DDBA  8E04               	bsf	_inPipes+3,7,c	;volatile
 21939                           
 21940                           ; BSR set to: 13
 21941                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 21942  00DDBC  5134               	movf	52,w,b	;volatile
 21943  00DDBE  0D01               	mullw	1
 21944  00DDC0  0E8E               	movlw	low _USBAlternateInterface
 21945  00DDC2  24F3               	addwf	prodl,w,c
 21946  00DDC4  6ED9               	movwf	fsr2l,c
 21947  00DDC6  0E01               	movlw	high _USBAlternateInterface
 21948  00DDC8  20F4               	addwfc	prodh,w,c
 21949  00DDCA  6EDA               	movwf	fsr2h,c
 21950  00DDCC  CD32 FFDF          	movff	3378,indf2	;volatile
 21951                           
 21952                           ;usb_device.c: 2727: break;
 21953  00DDD0  0012               	return	
 21954  00DDD2                     
 21955                           ; BSR set to: 13
 21956                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 21957                           
 21958                           ; BSR set to: 13
 21959  00DDD2  0E00               	movlw	0
 21960  00DDD4  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 21961  00DDD6  0E02               	movlw	2
 21962  00DDD8  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 21963  00DDDA  0E00               	movlw	0
 21964  00DDDC  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 21965  00DDDE  0E00               	movlw	0
 21966  00DDE0  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 21967  00DDE2  0E00               	movlw	0
 21968  00DDE4  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 21969  00DDE6  0E00               	movlw	0
 21970  00DDE8  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 21971  00DDEA  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 21972                           
 21973                           ;usb_device.c: 2734: }
 21974                           
 21975                           ;usb_device.c: 2733: break;
 21976                           
 21977                           ;usb_device.c: 2732: default:
 21978                           
 21979                           ;usb_device.c: 2731: case 12:
 21980                           
 21981                           ;usb_device.c: 2730: break;
 21982  00DDEE  0012               	return	
 21983  00DDF0                     i2l355:
 21984  00DDF0  010D               	movlb	13	; () banked
 21985  00DDF2  5131               	movf	49,w,b	;volatile
 21986                           
 21987                           ; Switch size 1, requested type "space"
 21988                           ; Number of cases is 11, Range of values is 0 to 12
 21989                           ; switch strategies available:
 21990                           ; Name         Instructions Cycles
 21991                           ; simple_byte           34    18 (average)
 21992                           ;	Chosen strategy is simple_byte
 21993  00DDF4  0A00               	xorlw	0	; case 0
 21994  00DDF6  B4D8               	btfsc	status,2,c
 21995  00DDF8  D7CC               	goto	i2l361
 21996  00DDFA  0A01               	xorlw	1	; case 1
 21997  00DDFC  B4D8               	btfsc	status,2,c
 21998  00DDFE  D7CC               	goto	i2l362
 21999  00DE00  0A02               	xorlw	2	; case 3
 22000  00DE02  B4D8               	btfsc	status,2,c
 22001  00DE04  D7C9               	goto	i2l362
 22002  00DE06  0A06               	xorlw	6	; case 5
 22003  00DE08  B4D8               	btfsc	status,2,c
 22004  00DE0A  D7B0               	goto	i2l356
 22005  00DE0C  0A03               	xorlw	3	; case 6
 22006  00DE0E  B4D8               	btfsc	status,2,c
 22007  00DE10  D7B1               	goto	i2l358
 22008  00DE12  0A01               	xorlw	1	; case 7
 22009  00DE14  B4D8               	btfsc	status,2,c
 22010  00DE16  D7DD               	goto	i2l366
 22011  00DE18  0A0F               	xorlw	15	; case 8
 22012  00DE1A  B4D8               	btfsc	status,2,c
 22013  00DE1C  D7B1               	goto	i2l360
 22014  00DE1E  0A01               	xorlw	1	; case 9
 22015  00DE20  B4D8               	btfsc	status,2,c
 22016  00DE22  D7AB               	goto	i2l359
 22017  00DE24  0A03               	xorlw	3	; case 10
 22018  00DE26  B4D8               	btfsc	status,2,c
 22019  00DE28  D7BA               	goto	i2l364
 22020  00DE2A  0A01               	xorlw	1	; case 11
 22021  00DE2C  B4D8               	btfsc	status,2,c
 22022  00DE2E  D7C5               	goto	i2l365
 22023  00DE30  0A07               	xorlw	7	; case 12
 22024  00DE32  0012               	return	
 22025  00DE34                     __end_of_USBCheckStdRequest:
 22026                           	opt stack 0
 22027                           pclatu	equ	0xFFB
 22028                           pclath	equ	0xFFA
 22029                           tblptru	equ	0xFF8
 22030                           tblptrh	equ	0xFF7
 22031                           tblptrl	equ	0xFF6
 22032                           tablat	equ	0xFF5
 22033                           prodh	equ	0xFF4
 22034                           prodl	equ	0xFF3
 22035                           intcon	equ	0xFF2
 22036                           indf0	equ	0xFEF
 22037                           postinc0	equ	0xFEE
 22038                           fsr0h	equ	0xFEA
 22039                           fsr0l	equ	0xFE9
 22040                           wreg	equ	0xFE8
 22041                           indf1	equ	0xFE7
 22042                           postdec1	equ	0xFE5
 22043                           plusw1	equ	0xFE3
 22044                           fsr1h	equ	0xFE2
 22045                           fsr1l	equ	0xFE1
 22046                           indf2	equ	0xFDF
 22047                           postinc2	equ	0xFDE
 22048                           postdec2	equ	0xFDD
 22049                           plusw2	equ	0xFDB
 22050                           fsr2h	equ	0xFDA
 22051                           fsr2l	equ	0xFD9
 22052                           status	equ	0xFD8
 22053                           
 22054 ;; *************** function _USBStdSetCfgHandler *****************
 22055 ;; Defined at:
 22056 ;;		line 1970 in file "usb_device.c"
 22057 ;; Parameters:    Size  Location     Type
 22058 ;;		None
 22059 ;; Auto vars:     Size  Location     Type
 22060 ;;  i               1   23[COMRAM] unsigned char 
 22061 ;; Return value:  Size  Location     Type
 22062 ;;                  1    wreg      void 
 22063 ;; Registers used:
 22064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22065 ;; Tracked objects:
 22066 ;;		On entry : 0/0
 22067 ;;		On exit  : 0/0
 22068 ;;		Unchanged: 0/0
 22069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22074 ;;Total ram usage:        1 bytes
 22075 ;; Hardware stack levels used:    1
 22076 ;; Hardware stack levels required when called:    4
 22077 ;; This function calls:
 22078 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22079 ;;		_memset
 22080 ;; This function is called by:
 22081 ;;		_USBCheckStdRequest
 22082 ;; This function uses a non-reentrant model
 22083 ;;
 22084                           
 22085                           	psect	text70
 22086  00DC80                     __ptext70:
 22087                           	opt stack 0
 22088  00DC80                     _USBStdSetCfgHandler:
 22089                           	opt stack 15
 22090                           
 22091                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 22092                           
 22093                           ;incstack = 0
 22094  00DC80  8E04               	bsf	_inPipes+3,7,c	;volatile
 22095                           
 22096                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 22097  00DC82  0E27               	movlw	39
 22098  00DC84  6E2E               	movwf	memset@p1,c
 22099  00DC86  0E0F               	movlw	15
 22100  00DC88  6E2F               	movwf	memset@p1+1,c
 22101  00DC8A  0E00               	movlw	0
 22102  00DC8C  6E31               	movwf	memset@c+1,c
 22103  00DC8E  0E00               	movlw	0
 22104  00DC90  6E30               	movwf	memset@c,c
 22105  00DC92  0E00               	movlw	0
 22106  00DC94  6E33               	movwf	memset@n+1,c
 22107  00DC96  0E02               	movlw	2
 22108  00DC98  6E32               	movwf	memset@n,c
 22109  00DC9A  EC6B  F07A         	call	_memset	;wreg free
 22110                           
 22111                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 22112  00DC9E  0E00               	movlw	0
 22113  00DCA0  6E2E               	movwf	memset@p1,c
 22114  00DCA2  0E0D               	movlw	13
 22115  00DCA4  6E2F               	movwf	memset@p1+1,c
 22116  00DCA6  0E00               	movlw	0
 22117  00DCA8  6E31               	movwf	memset@c+1,c
 22118  00DCAA  0E00               	movlw	0
 22119  00DCAC  6E30               	movwf	memset@c,c
 22120  00DCAE  0E00               	movlw	0
 22121  00DCB0  6E33               	movwf	memset@n+1,c
 22122  00DCB2  0E30               	movlw	48
 22123  00DCB4  6E32               	movwf	memset@n,c
 22124  00DCB6  EC6B  F07A         	call	_memset	;wreg free
 22125                           
 22126                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 22127  00DCBA  8C65               	bsf	3941,6,c	;volatile
 22128                           
 22129                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 22130  00DCBC  0E00               	movlw	0
 22131  00DCBE  6E45               	movwf	USBStdSetCfgHandler@i,c
 22132  00DCC0                     i2l10472:
 22133  00DCC0  0E02               	movlw	2
 22134  00DCC2  6445               	cpfsgt	USBStdSetCfgHandler@i,c
 22135  00DCC4  D001               	goto	i2l272
 22136  00DCC6  D016               	goto	i2u892_40
 22137  00DCC8                     i2l272:
 22138                           
 22139                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 22140  00DCC8  5045               	movf	USBStdSetCfgHandler@i,w,c
 22141  00DCCA  0D01               	mullw	1
 22142  00DCCC  0E75               	movlw	low _ep_data_in
 22143  00DCCE  24F3               	addwf	prodl,w,c
 22144  00DCD0  6ED9               	movwf	fsr2l,c
 22145  00DCD2  0E01               	movlw	high _ep_data_in
 22146  00DCD4  20F4               	addwfc	prodh,w,c
 22147  00DCD6  6EDA               	movwf	fsr2h,c
 22148  00DCD8  0E00               	movlw	0
 22149  00DCDA  6EDF               	movwf	indf2,c
 22150                           
 22151                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 22152  00DCDC  5045               	movf	USBStdSetCfgHandler@i,w,c
 22153  00DCDE  0D01               	mullw	1
 22154  00DCE0  0E72               	movlw	low _ep_data_out
 22155  00DCE2  24F3               	addwf	prodl,w,c
 22156  00DCE4  6ED9               	movwf	fsr2l,c
 22157  00DCE6  0E01               	movlw	high _ep_data_out
 22158  00DCE8  20F4               	addwfc	prodh,w,c
 22159  00DCEA  6EDA               	movwf	fsr2h,c
 22160  00DCEC  0E00               	movlw	0
 22161  00DCEE  6EDF               	movwf	indf2,c
 22162  00DCF0  2A45               	incf	USBStdSetCfgHandler@i,f,c
 22163  00DCF2  D7E6               	goto	i2l10472
 22164  00DCF4                     i2u892_40:
 22165                           
 22166                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 22167  00DCF4  0E8E               	movlw	low _USBAlternateInterface
 22168  00DCF6  6E2E               	movwf	memset@p1,c
 22169  00DCF8  0E01               	movlw	high _USBAlternateInterface
 22170  00DCFA  6E2F               	movwf	memset@p1+1,c
 22171  00DCFC  0E00               	movlw	0
 22172  00DCFE  6E31               	movwf	memset@c+1,c
 22173  00DD00  0E00               	movlw	0
 22174  00DD02  6E30               	movwf	memset@c,c
 22175  00DD04  0E00               	movlw	0
 22176  00DD06  6E33               	movwf	memset@n+1,c
 22177  00DD08  0E02               	movlw	2
 22178  00DD0A  6E32               	movwf	memset@n,c
 22179  00DD0C  EC6B  F07A         	call	_memset	;wreg free
 22180                           
 22181                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 22182  00DD10  9C65               	bcf	3941,6,c	;volatile
 22183                           
 22184                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 22185  00DD12  0E08               	movlw	8
 22186  00DD14  6E07               	movwf	_pBDTEntryIn,c
 22187  00DD16  0E0D               	movlw	13
 22188  00DD18  6E08               	movwf	_pBDTEntryIn+1,c
 22189                           
 22190                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 22191  00DD1A  0E00               	movlw	0
 22192  00DD1C  6E19               	movwf	_pBDTEntryEP0OutCurrent,c
 22193  00DD1E  0E0D               	movlw	13
 22194  00DD20  6E1A               	movwf	_pBDTEntryEP0OutCurrent+1,c
 22195                           
 22196                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 22197  00DD22  C019  F017         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 22198  00DD26  C01A  F018         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 22199                           
 22200                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 22201  00DD2A  CD32 F02D          	movff	3378,_USBActiveConfiguration	;volatile
 22202                           
 22203                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 22204  00DD2E  502D               	movf	_USBActiveConfiguration,w,c	;volatile
 22205  00DD30  A4D8               	btfss	status,2,c
 22206  00DD32  D003               	goto	i2l274
 22207                           
 22208                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 22209  00DD34  0E10               	movlw	16
 22210  00DD36  6E2B               	movwf	_USBDeviceState,c	;volatile
 22211                           
 22212                           ;usb_device.c: 2015: }
 22213  00DD38  0012               	return	
 22214  00DD3A                     i2l274:
 22215                           
 22216                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 22217  00DD3A  0E00               	movlw	0
 22218  00DD3C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 22219  00DD3E  0E01               	movlw	1
 22220  00DD40  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 22221  00DD42  0E2D               	movlw	low _USBActiveConfiguration
 22222  00DD44  6E3F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 22223  00DD46  0E00               	movlw	high _USBActiveConfiguration
 22224  00DD48  6E40               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 22225  00DD4A  0E00               	movlw	0
 22226  00DD4C  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 22227  00DD4E  0E01               	movlw	1
 22228  00DD50  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 22229  00DD52  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 22230                           
 22231                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 22232  00DD56  0E20               	movlw	32
 22233  00DD58  6E2B               	movwf	_USBDeviceState,c	;volatile
 22234  00DD5A  0012               	return	
 22235  00DD5C                     __end_of_USBStdSetCfgHandler:
 22236                           	opt stack 0
 22237                           pclatu	equ	0xFFB
 22238                           pclath	equ	0xFFA
 22239                           tblptru	equ	0xFF8
 22240                           tblptrh	equ	0xFF7
 22241                           tblptrl	equ	0xFF6
 22242                           tablat	equ	0xFF5
 22243                           prodh	equ	0xFF4
 22244                           prodl	equ	0xFF3
 22245                           intcon	equ	0xFF2
 22246                           indf0	equ	0xFEF
 22247                           postinc0	equ	0xFEE
 22248                           fsr0h	equ	0xFEA
 22249                           fsr0l	equ	0xFE9
 22250                           wreg	equ	0xFE8
 22251                           indf1	equ	0xFE7
 22252                           postdec1	equ	0xFE5
 22253                           plusw1	equ	0xFE3
 22254                           fsr1h	equ	0xFE2
 22255                           fsr1l	equ	0xFE1
 22256                           indf2	equ	0xFDF
 22257                           postinc2	equ	0xFDE
 22258                           postdec2	equ	0xFDD
 22259                           plusw2	equ	0xFDB
 22260                           fsr2h	equ	0xFDA
 22261                           fsr2l	equ	0xFD9
 22262                           status	equ	0xFD8
 22263                           
 22264 ;; *************** function _memset *****************
 22265 ;; Defined at:
 22266 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 22267 ;; Parameters:    Size  Location     Type
 22268 ;;  p1              2    0[COMRAM] PTR void 
 22269 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22270 ;;  c               2    2[COMRAM] int 
 22271 ;;  n               2    4[COMRAM] unsigned int 
 22272 ;; Auto vars:     Size  Location     Type
 22273 ;;  p               2    6[COMRAM] PTR unsigned char 
 22274 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 22275 ;; Return value:  Size  Location     Type
 22276 ;;                  2    0[COMRAM] PTR void 
 22277 ;; Registers used:
 22278 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22279 ;; Tracked objects:
 22280 ;;		On entry : 0/0
 22281 ;;		On exit  : 0/0
 22282 ;;		Unchanged: 0/0
 22283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22284 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22287 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22288 ;;Total ram usage:        8 bytes
 22289 ;; Hardware stack levels used:    1
 22290 ;; This function calls:
 22291 ;;		Nothing
 22292 ;; This function is called by:
 22293 ;;		_USBDeviceInit
 22294 ;;		_USBStdSetCfgHandler
 22295 ;; This function uses a non-reentrant model
 22296 ;;
 22297                           
 22298                           	psect	text71
 22299  00F4D6                     __ptext71:
 22300                           	opt stack 0
 22301  00F4D6                     _memset:
 22302                           	opt stack 21
 22303                           
 22304                           ;incstack = 0
 22305  00F4D6  C02E  F034         	movff	memset@p1,memset@p
 22306  00F4DA  C02F  F035         	movff	memset@p1+1,memset@p+1
 22307  00F4DE  D008               	goto	i2l3318
 22308  00F4E0                     i2l10162:
 22309  00F4E0  C034  FFD9         	movff	memset@p,fsr2l
 22310  00F4E4  C035  FFDA         	movff	memset@p+1,fsr2h
 22311  00F4E8  C030  FFDF         	movff	memset@c,indf2
 22312  00F4EC  4A34               	infsnz	memset@p,f,c
 22313  00F4EE  2A35               	incf	memset@p+1,f,c
 22314  00F4F0                     i2l3318:
 22315  00F4F0  0632               	decf	memset@n,f,c
 22316  00F4F2  A0D8               	btfss	status,0,c
 22317  00F4F4  0633               	decf	memset@n+1,f,c
 22318  00F4F6  2832               	incf	memset@n,w,c
 22319  00F4F8  E1F3               	bnz	i2l10162
 22320  00F4FA  2833               	incf	memset@n+1,w,c
 22321  00F4FC  B4D8               	btfsc	status,2,c
 22322  00F4FE  0012               	return	
 22323  00F500  D7EF               	goto	i2l3319
 22324  00F502                     __end_of_memset:
 22325                           	opt stack 0
 22326                           pclatu	equ	0xFFB
 22327                           pclath	equ	0xFFA
 22328                           tblptru	equ	0xFF8
 22329                           tblptrh	equ	0xFF7
 22330                           tblptrl	equ	0xFF6
 22331                           tablat	equ	0xFF5
 22332                           prodh	equ	0xFF4
 22333                           prodl	equ	0xFF3
 22334                           intcon	equ	0xFF2
 22335                           indf0	equ	0xFEF
 22336                           postinc0	equ	0xFEE
 22337                           fsr0h	equ	0xFEA
 22338                           fsr0l	equ	0xFE9
 22339                           wreg	equ	0xFE8
 22340                           indf1	equ	0xFE7
 22341                           postdec1	equ	0xFE5
 22342                           plusw1	equ	0xFE3
 22343                           fsr1h	equ	0xFE2
 22344                           fsr1l	equ	0xFE1
 22345                           indf2	equ	0xFDF
 22346                           postinc2	equ	0xFDE
 22347                           postdec2	equ	0xFDD
 22348                           plusw2	equ	0xFDB
 22349                           fsr2h	equ	0xFDA
 22350                           fsr2l	equ	0xFD9
 22351                           status	equ	0xFD8
 22352                           
 22353 ;; *************** function _USBStdGetStatusHandler *****************
 22354 ;; Defined at:
 22355 ;;		line 2131 in file "usb_device.c"
 22356 ;; Parameters:    Size  Location     Type
 22357 ;;		None
 22358 ;; Auto vars:     Size  Location     Type
 22359 ;;  p               2    1[COMRAM] PTR struct __BDT
 22360 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 22361 ;; Return value:  Size  Location     Type
 22362 ;;                  1    wreg      void 
 22363 ;; Registers used:
 22364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22365 ;; Tracked objects:
 22366 ;;		On entry : 0/0
 22367 ;;		On exit  : 0/0
 22368 ;;		Unchanged: 0/0
 22369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22373 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22374 ;;Total ram usage:        3 bytes
 22375 ;; Hardware stack levels used:    1
 22376 ;; This function calls:
 22377 ;;		Nothing
 22378 ;; This function is called by:
 22379 ;;		_USBCheckStdRequest
 22380 ;; This function uses a non-reentrant model
 22381 ;;
 22382                           
 22383                           	psect	text72
 22384  00E5A6                     __ptext72:
 22385                           	opt stack 0
 22386  00E5A6                     _USBStdGetStatusHandler:
 22387                           	opt stack 19
 22388                           
 22389                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 22390                           
 22391                           ;incstack = 0
 22392  00E5A6  0E00               	movlw	0
 22393  00E5A8  010D               	movlb	13	; () banked
 22394  00E5AA  6F38               	movwf	56,b	;volatile
 22395                           
 22396                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 22397  00E5AC  0E00               	movlw	0
 22398  00E5AE  6F39               	movwf	57,b	;volatile
 22399                           
 22400                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 22401  00E5B0  D033               	goto	i2l293
 22402  00E5B2                     i2l294:
 22403                           
 22404                           ; BSR set to: 13
 22405                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 22406  00E5B2  8E04               	bsf	_inPipes+3,7,c	;volatile
 22407                           
 22408                           ; BSR set to: 13
 22409                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 22410                           
 22411                           ; BSR set to: 13
 22412                           
 22413                           ; BSR set to: 13
 22414                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 22415                           
 22416                           ;usb_device.c: 2144: if(0 == 1)
 22417  00E5B4  0428               	decf	_RemoteWakeup,w,c	;volatile
 22418  00E5B6  A4D8               	btfss	status,2,c
 22419  00E5B8  D03A               	goto	i2l297
 22420                           
 22421                           ; BSR set to: 13
 22422                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 22423  00E5BA  8338               	bsf	56,1,b	;volatile
 22424                           
 22425                           ; BSR set to: 13
 22426                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 22427  00E5BC  D038               	goto	i2l297
 22428  00E5BE                     i2l298:
 22429                           
 22430                           ; BSR set to: 13
 22431                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 22432  00E5BE  8E04               	bsf	_inPipes+3,7,c	;volatile
 22433                           
 22434                           ;usb_device.c: 2156: break;
 22435  00E5C0  D036               	goto	i2l297
 22436  00E5C2                     i2l299:
 22437                           
 22438                           ; BSR set to: 13
 22439                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 22440  00E5C2  8E04               	bsf	_inPipes+3,7,c	;volatile
 22441                           
 22442                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 22443  00E5C4  BF34               	btfsc	52,7,b	;volatile
 22444  00E5C6  D00A               	goto	i2l300
 22445                           
 22446                           ; BSR set to: 13
 22447                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 22448  00E5C8  5134               	movf	52,w,b	;volatile
 22449  00E5CA  0B0F               	andlw	15
 22450  00E5CC  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22451  00E5CE  502E               	movf	??_USBStdGetStatusHandler,w,c
 22452  00E5D0  0D02               	mullw	2
 22453  00E5D2  0E4E               	movlw	low _pBDTEntryOut
 22454  00E5D4  24F3               	addwf	prodl,w,c
 22455  00E5D6  6ED9               	movwf	fsr2l,c
 22456  00E5D8  0E01               	movlw	high _pBDTEntryOut
 22457  00E5DA  D009               	goto	L43
 22458  00E5DC                     i2l300:
 22459                           
 22460                           ; BSR set to: 13
 22461                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 22462                           
 22463                           ; BSR set to: 13
 22464  00E5DC  5134               	movf	52,w,b	;volatile
 22465  00E5DE  0B0F               	andlw	15
 22466  00E5E0  6E2E               	movwf	??_USBStdGetStatusHandler& (0+255),c
 22467  00E5E2  502E               	movf	??_USBStdGetStatusHandler,w,c
 22468  00E5E4  0D02               	mullw	2
 22469  00E5E6  0E07               	movlw	low _pBDTEntryIn
 22470  00E5E8  24F3               	addwf	prodl,w,c
 22471  00E5EA  6ED9               	movwf	fsr2l,c
 22472  00E5EC  0E00               	movlw	high _pBDTEntryIn
 22473  00E5EE                     L43:
 22474  00E5EE  20F4               	addwfc	prodh,w,c
 22475  00E5F0  6EDA               	movwf	fsr2h,c
 22476  00E5F2  CFDE F02F          	movff	postinc2,USBStdGetStatusHandler@p
 22477  00E5F6  CFDD F030          	movff	postdec2,USBStdGetStatusHandler@p+1
 22478                           
 22479                           ; BSR set to: 13
 22480                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 22481                           
 22482                           ; BSR set to: 13
 22483  00E5FA  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22484  00E5FE  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22485  00E602  AEDF               	btfss	indf2,7,c
 22486  00E604  D014               	goto	i2l297
 22487                           
 22488                           ; BSR set to: 13
 22489  00E606  C02F  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 22490  00E60A  C030  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 22491  00E60E  A4DF               	btfss	indf2,2,c
 22492  00E610  D00E               	goto	i2l297
 22493                           
 22494                           ; BSR set to: 13
 22495                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 22496  00E612  0E01               	movlw	1
 22497  00E614  6F38               	movwf	56,b	;volatile
 22498                           
 22499                           ; BSR set to: 13
 22500                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 22501                           
 22502                           ; BSR set to: 13
 22503                           ;usb_device.c: 2176: break;
 22504  00E616  D00B               	goto	i2l297
 22505  00E618                     i2l293:
 22506                           
 22507                           ; BSR set to: 13
 22508                           
 22509                           ; BSR set to: 13
 22510  00E618  5130               	movf	48,w,b	;volatile
 22511  00E61A  0B1F               	andlw	31
 22512                           
 22513                           ; Switch size 1, requested type "space"
 22514                           ; Number of cases is 3, Range of values is 0 to 2
 22515                           ; switch strategies available:
 22516                           ; Name         Instructions Cycles
 22517                           ; simple_byte           10     6 (average)
 22518                           ;	Chosen strategy is simple_byte
 22519  00E61C  0A00               	xorlw	0	; case 0
 22520  00E61E  B4D8               	btfsc	status,2,c
 22521  00E620  D7C8               	goto	i2l294
 22522  00E622  0A01               	xorlw	1	; case 1
 22523  00E624  B4D8               	btfsc	status,2,c
 22524  00E626  D7CB               	goto	i2l298
 22525  00E628  0A03               	xorlw	3	; case 2
 22526  00E62A  B4D8               	btfsc	status,2,c
 22527  00E62C  D7CA               	goto	i2l299
 22528  00E62E                     i2l297:
 22529                           
 22530                           ; BSR set to: 13
 22531                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 22532  00E62E  AE04               	btfss	_inPipes+3,7,c	;volatile
 22533  00E630  0012               	return	
 22534                           
 22535                           ; BSR set to: 13
 22536                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 22537  00E632  0E38               	movlw	56
 22538  00E634  6E01               	movwf	_inPipes,c	;volatile
 22539  00E636  0E0D               	movlw	13
 22540  00E638  6E02               	movwf	_inPipes+1,c	;volatile
 22541                           
 22542                           ; BSR set to: 13
 22543                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 22544  00E63A  8004               	bsf	_inPipes+3,0,c	;volatile
 22545                           
 22546                           ; BSR set to: 13
 22547                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 22548  00E63C  0E02               	movlw	2
 22549  00E63E  6E05               	movwf	_inPipes+4,c	;volatile
 22550  00E640  0012               	return	
 22551  00E642                     __end_of_USBStdGetStatusHandler:
 22552                           	opt stack 0
 22553                           pclatu	equ	0xFFB
 22554                           pclath	equ	0xFFA
 22555                           tblptru	equ	0xFF8
 22556                           tblptrh	equ	0xFF7
 22557                           tblptrl	equ	0xFF6
 22558                           tablat	equ	0xFF5
 22559                           prodh	equ	0xFF4
 22560                           prodl	equ	0xFF3
 22561                           intcon	equ	0xFF2
 22562                           indf0	equ	0xFEF
 22563                           postinc0	equ	0xFEE
 22564                           fsr0h	equ	0xFEA
 22565                           fsr0l	equ	0xFE9
 22566                           wreg	equ	0xFE8
 22567                           indf1	equ	0xFE7
 22568                           postdec1	equ	0xFE5
 22569                           plusw1	equ	0xFE3
 22570                           fsr1h	equ	0xFE2
 22571                           fsr1l	equ	0xFE1
 22572                           indf2	equ	0xFDF
 22573                           postinc2	equ	0xFDE
 22574                           postdec2	equ	0xFDD
 22575                           plusw2	equ	0xFDB
 22576                           fsr2h	equ	0xFDA
 22577                           fsr2l	equ	0xFD9
 22578                           status	equ	0xFD8
 22579                           
 22580 ;; *************** function _USBStdGetDscHandler *****************
 22581 ;; Defined at:
 22582 ;;		line 2045 in file "usb_device.c"
 22583 ;; Parameters:    Size  Location     Type
 22584 ;;		None
 22585 ;; Auto vars:     Size  Location     Type
 22586 ;;		None
 22587 ;; Return value:  Size  Location     Type
 22588 ;;                  1    wreg      void 
 22589 ;; Registers used:
 22590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22591 ;; Tracked objects:
 22592 ;;		On entry : 0/0
 22593 ;;		On exit  : 0/0
 22594 ;;		Unchanged: 0/0
 22595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22600 ;;Total ram usage:        2 bytes
 22601 ;; Hardware stack levels used:    1
 22602 ;; This function calls:
 22603 ;;		Nothing
 22604 ;; This function is called by:
 22605 ;;		_USBCheckStdRequest
 22606 ;; This function uses a non-reentrant model
 22607 ;;
 22608                           
 22609                           	psect	text73
 22610  00D17A                     __ptext73:
 22611                           	opt stack 0
 22612  00D17A                     _USBStdGetDscHandler:
 22613                           	opt stack 19
 22614                           
 22615                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 22616                           
 22617                           ; BSR set to: 13
 22618                           ;incstack = 0
 22619  00D17A  0E80               	movlw	128
 22620  00D17C  010D               	movlb	13	; () banked
 22621  00D17E  1930               	xorwf	48,w,b	;volatile
 22622  00D180  A4D8               	btfss	status,2,c
 22623  00D182  0012               	return	
 22624                           
 22625                           ; BSR set to: 13
 22626                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 22627  00D184  0EC0               	movlw	192
 22628  00D186  6E04               	movwf	_inPipes+3,c	;volatile
 22629                           
 22630                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 22631  00D188  D082               	goto	i2l280
 22632  00D18A                     
 22633                           ; BSR set to: 13
 22634                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 22635                           
 22636                           ; BSR set to: 13
 22637  00D18A  0EB3               	movlw	low _device_dsc
 22638  00D18C  6E01               	movwf	_inPipes,c	;volatile
 22639  00D18E  0EA1               	movlw	high _device_dsc
 22640  00D190  6E02               	movwf	_inPipes+1,c	;volatile
 22641                           
 22642                           ; BSR set to: 13
 22643                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 22644  00D192  0E00               	movlw	0
 22645  00D194  6E06               	movwf	_inPipes+5,c	;volatile
 22646  00D196  0E12               	movlw	18
 22647  00D198  6E05               	movwf	_inPipes+4,c	;volatile
 22648                           
 22649                           ;usb_device.c: 2060: break;
 22650  00D19A  0012               	return	
 22651  00D19C                     
 22652                           ; BSR set to: 13
 22653                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 22654                           
 22655                           ; BSR set to: 13
 22656  00D19C  5132               	movf	50,w,b	;volatile
 22657  00D19E  A4D8               	btfss	status,2,c
 22658  00D1A0  D042               	goto	i2l284
 22659                           
 22660                           ; BSR set to: 13
 22661                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 22662  00D1A2  5132               	movf	50,w,b	;volatile
 22663  00D1A4  0D02               	mullw	2
 22664  00D1A6  0EE4               	movlw	low _USB_CD_Ptr
 22665  00D1A8  24F3               	addwf	prodl,w,c
 22666  00D1AA  6EF6               	movwf	tblptrl,c
 22667  00D1AC  0E9D               	movlw	high _USB_CD_Ptr
 22668  00D1AE  20F4               	addwfc	prodh,w,c
 22669  00D1B0  6EF7               	movwf	tblptrh,c
 22670  00D1B2                     	if	1	;There are 3 active tblptr bytes
 22671  00D1B2  6AF8               	clrf	tblptru,c
 22672  00D1B4  0E00               	movlw	low (__mediumconst shr (0+16))
 22673  00D1B6  22F8               	addwfc	tblptru,f,c
 22674  00D1B8                     	endif
 22675  00D1B8  0009               	tblrd		*+
 22676  00D1BA  CFF5 F001          	movff	tablat,_inPipes	;volatile
 22677  00D1BE  000A               	tblrd		*-
 22678  00D1C0  CFF5 F002          	movff	tablat,_inPipes+1	;volatile
 22679                           
 22680                           ; BSR set to: 13
 22681                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 22682  00D1C4  0E02               	movlw	2
 22683  00D1C6  2401               	addwf	_inPipes,w,c	;volatile
 22684  00D1C8  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 22685  00D1CA  0E00               	movlw	0
 22686  00D1CC  2002               	addwfc	_inPipes+1,w,c	;volatile
 22687  00D1CE  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22688  00D1D0  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22689  00D1D4  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22690  00D1D8  0E00               	movlw	low (__mediumconst shr (0+16))
 22691  00D1DA  6EF8               	movwf	tblptru,c
 22692  00D1DC  0E0E               	movlw	(high __ramtop+-1)
 22693  00D1DE  64F7               	cpfsgt	tblptrh,c
 22694  00D1E0  D003               	bra	i2u896_47
 22695  00D1E2  0008               	tblrd		*
 22696  00D1E4  50F5               	movf	tablat,w,c
 22697  00D1E6  D005               	bra	i2u896_40
 22698  00D1E8                     i2u896_47:
 22699  00D1E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 22700  00D1EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 22701  00D1F0  50EF               	movf	indf0,w,c
 22702  00D1F2                     i2u896_40:
 22703  00D1F2  6E05               	movwf	_inPipes+4,c	;volatile
 22704                           
 22705                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 22706  00D1F4  0E03               	movlw	3
 22707  00D1F6  2401               	addwf	_inPipes,w,c	;volatile
 22708  00D1F8  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 22709  00D1FA  0E00               	movlw	0
 22710  00D1FC  2002               	addwfc	_inPipes+1,w,c	;volatile
 22711  00D1FE  6E2F               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 22712  00D200  C02E  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 22713  00D204  C02F  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 22714  00D208  0E00               	movlw	low (__mediumconst shr (0+16))
 22715  00D20A  6EF8               	movwf	tblptru,c
 22716  00D20C  0E0E               	movlw	(high __ramtop+-1)
 22717  00D20E  64F7               	cpfsgt	tblptrh,c
 22718  00D210  D003               	bra	i2u897_47
 22719  00D212  0008               	tblrd		*
 22720  00D214  50F5               	movf	tablat,w,c
 22721  00D216  D005               	bra	i2u897_40
 22722  00D218                     i2u897_47:
 22723  00D218  CFF6 FFE9          	movff	tblptrl,fsr0l
 22724  00D21C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22725  00D220  50EF               	movf	indf0,w,c
 22726  00D222                     i2u897_40:
 22727  00D222  6E06               	movwf	_inPipes+5,c	;volatile
 22728                           
 22729                           ;usb_device.c: 2078: }
 22730  00D224  0012               	return	
 22731  00D226                     i2l284:
 22732                           
 22733                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 22734  00D226  0E00               	movlw	0
 22735  00D228  6E04               	movwf	_inPipes+3,c	;volatile
 22736                           
 22737                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 22738  00D22A  0012               	return	
 22739  00D22C                     
 22740                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 22741  00D22C  0E04               	movlw	4
 22742  00D22E  010D               	movlb	13	; () banked
 22743  00D230  6132               	cpfslt	50,b	;volatile
 22744  00D232  D027               	goto	i2l287
 22745                           
 22746                           ; BSR set to: 13
 22747                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 22748  00D234  5132               	movf	50,w,b	;volatile
 22749  00D236  0D02               	mullw	2
 22750  00D238  0EDC               	movlw	low _USB_SD_Ptr
 22751  00D23A  24F3               	addwf	prodl,w,c
 22752  00D23C  6EF6               	movwf	tblptrl,c
 22753  00D23E  0E9D               	movlw	high _USB_SD_Ptr
 22754  00D240  20F4               	addwfc	prodh,w,c
 22755  00D242  6EF7               	movwf	tblptrh,c
 22756  00D244                     	if	1	;There are 3 active tblptr bytes
 22757  00D244  6AF8               	clrf	tblptru,c
 22758  00D246  0E00               	movlw	low (__mediumconst shr (0+16))
 22759  00D248  22F8               	addwfc	tblptru,f,c
 22760  00D24A                     	endif
 22761  00D24A  0009               	tblrd		*+
 22762  00D24C  CFF5 F001          	movff	tablat,_inPipes	;volatile
 22763  00D250  000A               	tblrd		*-
 22764  00D252  CFF5 F002          	movff	tablat,_inPipes+1	;volatile
 22765                           
 22766                           ; BSR set to: 13
 22767                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 22768  00D256  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 22769  00D25A  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 22770  00D25E  0E00               	movlw	low (__mediumconst shr (0+16))
 22771  00D260  6EF8               	movwf	tblptru,c
 22772  00D262  0E0E               	movlw	(high __ramtop+-1)
 22773  00D264  64F7               	cpfsgt	tblptrh,c
 22774  00D266  D003               	bra	i2u899_47
 22775  00D268  0008               	tblrd		*
 22776  00D26A  50F5               	movf	tablat,w,c
 22777  00D26C  D005               	bra	i2u899_40
 22778  00D26E                     i2u899_47:
 22779  00D26E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22780  00D272  CFF7 FFEA          	movff	tblptrh,fsr0h
 22781  00D276  50EF               	movf	indf0,w,c
 22782  00D278                     i2u899_40:
 22783  00D278  6E2E               	movwf	??_USBStdGetDscHandler& (0+255),c
 22784  00D27A  502E               	movf	??_USBStdGetDscHandler,w,c
 22785  00D27C  6E05               	movwf	_inPipes+4,c	;volatile
 22786  00D27E  6A06               	clrf	_inPipes+5,c	;volatile
 22787                           
 22788                           ;usb_device.c: 2094: }
 22789  00D280  0012               	return	
 22790  00D282                     i2l287:
 22791                           
 22792                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 22793  00D282  0E00               	movlw	0
 22794  00D284  6E04               	movwf	_inPipes+3,c	;volatile
 22795                           
 22796                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 22797  00D286  0012               	return	
 22798  00D288                     
 22799                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 22800  00D288  0E00               	movlw	0
 22801  00D28A  6E04               	movwf	_inPipes+3,c	;volatile
 22802                           
 22803                           ;usb_device.c: 2112: }
 22804                           
 22805                           ;usb_device.c: 2111: break;
 22806  00D28C  0012               	return	
 22807  00D28E                     i2l280:
 22808  00D28E  010D               	movlb	13	; () banked
 22809  00D290  5133               	movf	51,w,b	;volatile
 22810                           
 22811                           ; Switch size 1, requested type "space"
 22812                           ; Number of cases is 3, Range of values is 1 to 3
 22813                           ; switch strategies available:
 22814                           ; Name         Instructions Cycles
 22815                           ; simple_byte           10     6 (average)
 22816                           ;	Chosen strategy is simple_byte
 22817  00D292  0A01               	xorlw	1	; case 1
 22818  00D294  B4D8               	btfsc	status,2,c
 22819  00D296  D779               	goto	i2l281
 22820  00D298  0A03               	xorlw	3	; case 2
 22821  00D29A  B4D8               	btfsc	status,2,c
 22822  00D29C  D77F               	goto	i2l283
 22823  00D29E  0A01               	xorlw	1	; case 3
 22824  00D2A0  B4D8               	btfsc	status,2,c
 22825  00D2A2  D7C4               	goto	i2l286
 22826  00D2A4  D7F1               	goto	i2l289
 22827  00D2A6                     __end_of_USBStdGetDscHandler:
 22828                           	opt stack 0
 22829                           pclatu	equ	0xFFB
 22830                           pclath	equ	0xFFA
 22831                           tblptru	equ	0xFF8
 22832                           tblptrh	equ	0xFF7
 22833                           tblptrl	equ	0xFF6
 22834                           tablat	equ	0xFF5
 22835                           prodh	equ	0xFF4
 22836                           prodl	equ	0xFF3
 22837                           intcon	equ	0xFF2
 22838                           indf0	equ	0xFEF
 22839                           postinc0	equ	0xFEE
 22840                           fsr0h	equ	0xFEA
 22841                           fsr0l	equ	0xFE9
 22842                           wreg	equ	0xFE8
 22843                           indf1	equ	0xFE7
 22844                           postdec1	equ	0xFE5
 22845                           plusw1	equ	0xFE3
 22846                           fsr1h	equ	0xFE2
 22847                           fsr1l	equ	0xFE1
 22848                           indf2	equ	0xFDF
 22849                           postinc2	equ	0xFDE
 22850                           postdec2	equ	0xFDD
 22851                           plusw2	equ	0xFDB
 22852                           fsr2h	equ	0xFDA
 22853                           fsr2l	equ	0xFD9
 22854                           status	equ	0xFD8
 22855                           
 22856 ;; *************** function _USBStdFeatureReqHandler *****************
 22857 ;; Defined at:
 22858 ;;		line 2756 in file "usb_device.c"
 22859 ;; Parameters:    Size  Location     Type
 22860 ;;		None
 22861 ;; Auto vars:     Size  Location     Type
 22862 ;;  p               2   27[COMRAM] PTR struct __BDT
 22863 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 22864 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 22865 ;;		 -> UEP0(1), 
 22866 ;;  current_ep_d    1   26[COMRAM] struct .
 22867 ;; Return value:  Size  Location     Type
 22868 ;;                  1    wreg      void 
 22869 ;; Registers used:
 22870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 22871 ;; Tracked objects:
 22872 ;;		On entry : 0/0
 22873 ;;		On exit  : 0/0
 22874 ;;		Unchanged: 0/0
 22875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22877 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22880 ;;Total ram usage:        6 bytes
 22881 ;; Hardware stack levels used:    1
 22882 ;; Hardware stack levels required when called:    4
 22883 ;; This function calls:
 22884 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 22885 ;; This function is called by:
 22886 ;;		_USBCheckStdRequest
 22887 ;; This function uses a non-reentrant model
 22888 ;;
 22889                           
 22890                           	psect	text74
 22891  00C4AE                     __ptext74:
 22892                           	opt stack 0
 22893  00C4AE                     _USBStdFeatureReqHandler:
 22894                           	opt stack 15
 22895                           
 22896                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 22897                           
 22898                           ;incstack = 0
 22899  00C4AE  010D               	movlb	13	; () banked
 22900  00C4B0  0532               	decf	50,w,b	;volatile
 22901  00C4B2  A4D8               	btfss	status,2,c
 22902  00C4B4  D00E               	goto	i2l373
 22903                           
 22904                           ; BSR set to: 13
 22905  00C4B6  5130               	movf	48,w,b	;volatile
 22906  00C4B8  0B1F               	andlw	31
 22907  00C4BA  0900               	iorlw	0
 22908  00C4BC  A4D8               	btfss	status,2,c
 22909  00C4BE  D009               	goto	i2l373
 22910                           
 22911                           ; BSR set to: 13
 22912                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 22913  00C4C0  8E04               	bsf	_inPipes+3,7,c	;volatile
 22914                           
 22915                           ; BSR set to: 13
 22916                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 22917  00C4C2  0E03               	movlw	3
 22918  00C4C4  1931               	xorwf	49,w,b	;volatile
 22919  00C4C6  A4D8               	btfss	status,2,c
 22920  00C4C8  D002               	goto	i2l372
 22921                           
 22922                           ; BSR set to: 13
 22923                           ;usb_device.c: 2806: RemoteWakeup = 1;
 22924  00C4CA  0E01               	movlw	1
 22925  00C4CC  D001               	goto	L44
 22926  00C4CE                     i2l372:
 22927                           
 22928                           ; BSR set to: 13
 22929                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 22930                           
 22931                           ; BSR set to: 13
 22932  00C4CE  0E00               	movlw	0
 22933  00C4D0                     L44:
 22934  00C4D0  6E28               	movwf	_RemoteWakeup,c	;volatile
 22935  00C4D2                     i2l373:
 22936                           
 22937                           ; BSR set to: 13
 22938                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 22939                           
 22940                           ; BSR set to: 13
 22941  00C4D2  5132               	movf	50,w,b	;volatile
 22942  00C4D4  A4D8               	btfss	status,2,c
 22943  00C4D6  0012               	return	
 22944                           
 22945                           ; BSR set to: 13
 22946  00C4D8  5130               	movf	48,w,b	;volatile
 22947  00C4DA  0B1F               	andlw	31
 22948  00C4DC  0A02               	xorlw	2
 22949  00C4DE  A4D8               	btfss	status,2,c
 22950  00C4E0  0012               	return	
 22951                           
 22952                           ; BSR set to: 13
 22953  00C4E2  5134               	movf	52,w,b	;volatile
 22954  00C4E4  0B0F               	andlw	15
 22955  00C4E6  0900               	iorlw	0
 22956  00C4E8  B4D8               	btfsc	status,2,c
 22957  00C4EA  0012               	return	
 22958                           
 22959                           ; BSR set to: 13
 22960  00C4EC  5134               	movf	52,w,b	;volatile
 22961  00C4EE  0B0F               	andlw	15
 22962  00C4F0  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22963  00C4F2  0E03               	movlw	3
 22964  00C4F4  6045               	cpfslt	??_USBStdFeatureReqHandler,c
 22965  00C4F6  0012               	return	
 22966                           
 22967                           ; BSR set to: 13
 22968  00C4F8  0E20               	movlw	32
 22969  00C4FA  182B               	xorwf	_USBDeviceState,w,c	;volatile
 22970  00C4FC  A4D8               	btfss	status,2,c
 22971  00C4FE  0012               	return	
 22972                           
 22973                           ; BSR set to: 13
 22974                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 22975  00C500  8E04               	bsf	_inPipes+3,7,c	;volatile
 22976                           
 22977                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 22978  00C502  BF34               	btfsc	52,7,b	;volatile
 22979  00C504  D019               	goto	i2l375
 22980                           
 22981                           ; BSR set to: 13
 22982                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 22983  00C506  5134               	movf	52,w,b	;volatile
 22984  00C508  0B0F               	andlw	15
 22985  00C50A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 22986  00C50C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 22987  00C50E  0D02               	mullw	2
 22988  00C510  0E4E               	movlw	low _pBDTEntryOut
 22989  00C512  24F3               	addwf	prodl,w,c
 22990  00C514  6ED9               	movwf	fsr2l,c
 22991  00C516  0E01               	movlw	high _pBDTEntryOut
 22992  00C518  20F4               	addwfc	prodh,w,c
 22993  00C51A  6EDA               	movwf	fsr2h,c
 22994  00C51C  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 22995  00C520  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 22996                           
 22997                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 22998  00C524  5134               	movf	52,w,b	;volatile
 22999  00C526  0B0F               	andlw	15
 23000  00C528  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23001  00C52A  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23002  00C52C  0D01               	mullw	1
 23003  00C52E  0E72               	movlw	low _ep_data_out
 23004  00C530  24F3               	addwf	prodl,w,c
 23005  00C532  6ED9               	movwf	fsr2l,c
 23006  00C534  0E01               	movlw	high _ep_data_out
 23007  00C536  D018               	goto	L45
 23008  00C538                     i2l375:
 23009                           
 23010                           ; BSR set to: 13
 23011                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 23012                           
 23013                           ; BSR set to: 13
 23014  00C538  5134               	movf	52,w,b	;volatile
 23015  00C53A  0B0F               	andlw	15
 23016  00C53C  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23017  00C53E  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23018  00C540  0D02               	mullw	2
 23019  00C542  0E07               	movlw	low _pBDTEntryIn
 23020  00C544  24F3               	addwf	prodl,w,c
 23021  00C546  6ED9               	movwf	fsr2l,c
 23022  00C548  0E00               	movlw	high _pBDTEntryIn
 23023  00C54A  20F4               	addwfc	prodh,w,c
 23024  00C54C  6EDA               	movwf	fsr2h,c
 23025  00C54E  CFDE F049          	movff	postinc2,USBStdFeatureReqHandler@p
 23026  00C552  CFDD F04A          	movff	postdec2,USBStdFeatureReqHandler@p+1
 23027                           
 23028                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 23029  00C556  5134               	movf	52,w,b	;volatile
 23030  00C558  0B0F               	andlw	15
 23031  00C55A  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23032  00C55C  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23033  00C55E  0D01               	mullw	1
 23034  00C560  0E75               	movlw	low _ep_data_in
 23035  00C562  24F3               	addwf	prodl,w,c
 23036  00C564  6ED9               	movwf	fsr2l,c
 23037  00C566  0E01               	movlw	high _ep_data_in
 23038  00C568                     L45:
 23039  00C568  20F4               	addwfc	prodh,w,c
 23040  00C56A  6EDA               	movwf	fsr2h,c
 23041  00C56C  50DF               	movf	indf2,w,c
 23042  00C56E  6E48               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 23043                           
 23044                           ; BSR set to: 13
 23045                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 23046                           
 23047                           ; BSR set to: 13
 23048  00C570  B048               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 23049  00C572  D006               	goto	i2l377
 23050                           
 23051                           ; BSR set to: 13
 23052                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 23053  00C574  0EFB               	movlw	251
 23054  00C576  1449               	andwf	USBStdFeatureReqHandler@p,w,c
 23055  00C578  6E49               	movwf	USBStdFeatureReqHandler@p,c
 23056  00C57A  0EFF               	movlw	255
 23057  00C57C  144A               	andwf	USBStdFeatureReqHandler@p+1,w,c
 23058  00C57E  D004               	goto	L46
 23059  00C580                     i2l377:
 23060                           
 23061                           ; BSR set to: 13
 23062                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 23063                           
 23064                           ; BSR set to: 13
 23065  00C580  0E04               	movlw	4
 23066  00C582  1049               	iorwf	USBStdFeatureReqHandler@p,w,c
 23067  00C584  6E49               	movwf	USBStdFeatureReqHandler@p,c
 23068  00C586  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 23069  00C588                     L46:
 23070  00C588  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 23071                           
 23072                           ; BSR set to: 13
 23073                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 23074                           
 23075                           ; BSR set to: 13
 23076  00C58A  BF34               	btfsc	52,7,b	;volatile
 23077  00C58C  D00A               	goto	i2l379
 23078                           
 23079                           ; BSR set to: 13
 23080                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 23081  00C58E  5134               	movf	52,w,b	;volatile
 23082  00C590  0B0F               	andlw	15
 23083  00C592  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23084  00C594  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23085  00C596  0D02               	mullw	2
 23086  00C598  0E4E               	movlw	low _pBDTEntryOut
 23087  00C59A  24F3               	addwf	prodl,w,c
 23088  00C59C  6ED9               	movwf	fsr2l,c
 23089  00C59E  0E01               	movlw	high _pBDTEntryOut
 23090  00C5A0  D009               	goto	L47
 23091  00C5A2                     i2l379:
 23092                           
 23093                           ; BSR set to: 13
 23094                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 23095                           
 23096                           ; BSR set to: 13
 23097  00C5A2  5134               	movf	52,w,b	;volatile
 23098  00C5A4  0B0F               	andlw	15
 23099  00C5A6  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23100  00C5A8  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23101  00C5AA  0D02               	mullw	2
 23102  00C5AC  0E07               	movlw	low _pBDTEntryIn
 23103  00C5AE  24F3               	addwf	prodl,w,c
 23104  00C5B0  6ED9               	movwf	fsr2l,c
 23105  00C5B2  0E00               	movlw	high _pBDTEntryIn
 23106  00C5B4                     L47:
 23107  00C5B4  20F4               	addwfc	prodh,w,c
 23108  00C5B6  6EDA               	movwf	fsr2h,c
 23109  00C5B8  C049  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 23110  00C5BC  C04A  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 23111                           
 23112                           ; BSR set to: 13
 23113                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 23114                           
 23115                           ; BSR set to: 13
 23116  00C5C0  0E03               	movlw	3
 23117  00C5C2  1931               	xorwf	49,w,b	;volatile
 23118  00C5C4  A4D8               	btfss	status,2,c
 23119  00C5C6  D02D               	goto	i2l381
 23120                           
 23121                           ; BSR set to: 13
 23122                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 23123  00C5C8  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23124  00C5CC  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23125  00C5D0  AEDF               	btfss	indf2,7,c
 23126  00C5D2  D01A               	goto	i2l384
 23127                           
 23128                           ; BSR set to: 13
 23129                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 23130  00C5D4  BF34               	btfsc	52,7,b	;volatile
 23131  00C5D6  D00A               	goto	i2l383
 23132                           
 23133                           ; BSR set to: 13
 23134                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 23135  00C5D8  5134               	movf	52,w,b	;volatile
 23136  00C5DA  0B0F               	andlw	15
 23137  00C5DC  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23138  00C5DE  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23139  00C5E0  0D01               	mullw	1
 23140  00C5E2  0E72               	movlw	low _ep_data_out
 23141  00C5E4  24F3               	addwf	prodl,w,c
 23142  00C5E6  6ED9               	movwf	fsr2l,c
 23143  00C5E8  0E01               	movlw	high _ep_data_out
 23144  00C5EA  D00A               	goto	L48
 23145  00C5EC                     i2l383:
 23146                           
 23147                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 23148                           
 23149                           ; BSR set to: 1
 23150  00C5EC  010D               	movlb	13	; () banked
 23151  00C5EE  5134               	movf	52,w,b	;volatile
 23152  00C5F0  0B0F               	andlw	15
 23153  00C5F2  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23154  00C5F4  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23155  00C5F6  0D01               	mullw	1
 23156  00C5F8  0E75               	movlw	low _ep_data_in
 23157  00C5FA  24F3               	addwf	prodl,w,c
 23158  00C5FC  6ED9               	movwf	fsr2l,c
 23159  00C5FE  0E01               	movlw	high _ep_data_in
 23160  00C600                     L48:
 23161  00C600  20F4               	addwfc	prodh,w,c
 23162  00C602  6EDA               	movwf	fsr2h,c
 23163  00C604  0101               	movlb	1	; () banked
 23164  00C606  82DF               	bsf	indf2,1,c
 23165  00C608                     i2l384:
 23166                           
 23167                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 23168                           
 23169                           ; BSR set to: 1
 23170                           
 23171                           ; BSR set to: 1
 23172  00C608  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23173  00C60C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23174  00C610  0E00               	movlw	0
 23175  00C612  84DB               	bsf	plusw2,2,c
 23176                           
 23177                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 23178  00C614  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23179  00C618  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23180  00C61C  0E00               	movlw	0
 23181  00C61E  8EDB               	bsf	plusw2,7,c
 23182                           
 23183                           ;usb_device.c: 2878: }
 23184  00C620  0012               	return	
 23185  00C622                     i2l381:
 23186                           
 23187                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 23188  00C622  0E04               	movlw	4
 23189  00C624  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 23190  00C626  6E49               	movwf	USBStdFeatureReqHandler@p,c
 23191  00C628  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 23192  00C62A  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 23193                           
 23194                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 23195  00C62C  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23196  00C630  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23197  00C634  AEDF               	btfss	indf2,7,c
 23198  00C636  D01B               	goto	i2l386
 23199                           
 23200                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 23201  00C638  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23202  00C63C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23203  00C640  0E7F               	movlw	127
 23204  00C642  16DF               	andwf	indf2,f,c
 23205                           
 23206                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 23207  00C644  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23208  00C648  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23209  00C64C  0E00               	movlw	0
 23210  00C64E  8CDB               	bsf	plusw2,6,c
 23211                           
 23212                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23213  00C650  0E00               	movlw	0
 23214  00C652  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23215  00C654  0E05               	movlw	5
 23216  00C656  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23217  00C658  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23218  00C65C  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23219  00C660  0E00               	movlw	0
 23220  00C662  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23221  00C664  0E02               	movlw	2
 23222  00C666  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23223  00C668  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23224                           
 23225                           ;usb_device.c: 2893: }
 23226  00C66C  D006               	goto	i2l387
 23227  00C66E                     i2l386:
 23228                           
 23229                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 23230  00C66E  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23231  00C672  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23232  00C676  0E00               	movlw	0
 23233  00C678  8CDB               	bsf	plusw2,6,c
 23234  00C67A                     i2l387:
 23235                           
 23236                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 23237  00C67A  0E04               	movlw	4
 23238  00C67C  1849               	xorwf	USBStdFeatureReqHandler@p,w,c
 23239  00C67E  6E49               	movwf	USBStdFeatureReqHandler@p,c
 23240  00C680  504A               	movf	USBStdFeatureReqHandler@p+1,w,c
 23241  00C682  6E4A               	movwf	USBStdFeatureReqHandler@p+1,c
 23242                           
 23243                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 23244  00C684  B248               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 23245  00C686  D006               	goto	i2u921_40
 23246  00C688  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23247  00C68C  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23248  00C690  AEDF               	btfss	indf2,7,c
 23249  00C692  D030               	goto	i2l388
 23250  00C694                     i2u921_40:
 23251                           
 23252                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 23253  00C694  010D               	movlb	13	; () banked
 23254  00C696  BF34               	btfsc	52,7,b	;volatile
 23255  00C698  D00A               	goto	i2l391
 23256                           
 23257                           ; BSR set to: 13
 23258                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 23259  00C69A  5134               	movf	52,w,b	;volatile
 23260  00C69C  0B0F               	andlw	15
 23261  00C69E  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23262  00C6A0  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23263  00C6A2  0D01               	mullw	1
 23264  00C6A4  0E72               	movlw	low _ep_data_out
 23265  00C6A6  24F3               	addwf	prodl,w,c
 23266  00C6A8  6ED9               	movwf	fsr2l,c
 23267  00C6AA  0E01               	movlw	high _ep_data_out
 23268  00C6AC  D00A               	goto	L49
 23269  00C6AE                     i2l391:
 23270                           
 23271                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 23272                           
 23273                           ; BSR set to: 1
 23274  00C6AE  010D               	movlb	13	; () banked
 23275  00C6B0  5134               	movf	52,w,b	;volatile
 23276  00C6B2  0B0F               	andlw	15
 23277  00C6B4  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23278  00C6B6  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23279  00C6B8  0D01               	mullw	1
 23280  00C6BA  0E75               	movlw	low _ep_data_in
 23281  00C6BC  24F3               	addwf	prodl,w,c
 23282  00C6BE  6ED9               	movwf	fsr2l,c
 23283  00C6C0  0E01               	movlw	high _ep_data_in
 23284  00C6C2                     L49:
 23285  00C6C2  20F4               	addwfc	prodh,w,c
 23286  00C6C4  6EDA               	movwf	fsr2h,c
 23287  00C6C6  0101               	movlb	1	; () banked
 23288  00C6C8  92DF               	bcf	indf2,1,c
 23289                           
 23290                           ; BSR set to: 1
 23291                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 23292                           
 23293                           ; BSR set to: 1
 23294  00C6CA  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23295  00C6CE  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23296  00C6D2  0E3B               	movlw	59
 23297  00C6D4  16DF               	andwf	indf2,f,c
 23298                           
 23299                           ; BSR set to: 1
 23300                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 23301  00C6D6  0E00               	movlw	0
 23302  00C6D8  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 23303  00C6DA  0E05               	movlw	5
 23304  00C6DC  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 23305  00C6DE  C049  F03F         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 23306  00C6E2  C04A  F040         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 23307  00C6E6  0E00               	movlw	0
 23308  00C6E8  6E42               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 23309  00C6EA  0E02               	movlw	2
 23310  00C6EC  6E41               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 23311  00C6EE  EC92  F074         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 23312                           
 23313                           ;usb_device.c: 2923: }
 23314  00C6F2  D006               	goto	i2l393
 23315  00C6F4                     i2l388:
 23316                           
 23317                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 23318  00C6F4  C049  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 23319  00C6F8  C04A  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 23320  00C6FC  0E3B               	movlw	59
 23321  00C6FE  16DF               	andwf	indf2,f,c
 23322  00C700                     i2l393:
 23323                           
 23324                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 23325  00C700  010D               	movlb	13	; () banked
 23326  00C702  5134               	movf	52,w,b	;volatile
 23327  00C704  0B0F               	andlw	15
 23328  00C706  6E45               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 23329  00C708  5045               	movf	??_USBStdFeatureReqHandler,w,c
 23330  00C70A  0D01               	mullw	1
 23331  00C70C  0E26               	movlw	38
 23332  00C70E  24F3               	addwf	prodl,w,c
 23333  00C710  6E46               	movwf	USBStdFeatureReqHandler@pUEP,c
 23334  00C712  0E0F               	movlw	15
 23335  00C714  20F4               	addwfc	prodh,w,c
 23336  00C716  6E47               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 23337                           
 23338                           ; BSR set to: 13
 23339                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 23340  00C718  C046  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 23341  00C71C  C047  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 23342  00C720  0EFE               	movlw	254
 23343  00C722  16DF               	andwf	indf2,f,c
 23344                           
 23345                           ; BSR set to: 13
 23346  00C724  0012               	return	
 23347  00C726                     __end_of_USBStdFeatureReqHandler:
 23348                           	opt stack 0
 23349                           pclatu	equ	0xFFB
 23350                           pclath	equ	0xFFA
 23351                           tblptru	equ	0xFF8
 23352                           tblptrh	equ	0xFF7
 23353                           tblptrl	equ	0xFF6
 23354                           tablat	equ	0xFF5
 23355                           prodh	equ	0xFF4
 23356                           prodl	equ	0xFF3
 23357                           intcon	equ	0xFF2
 23358                           indf0	equ	0xFEF
 23359                           postinc0	equ	0xFEE
 23360                           fsr0h	equ	0xFEA
 23361                           fsr0l	equ	0xFE9
 23362                           wreg	equ	0xFE8
 23363                           indf1	equ	0xFE7
 23364                           postdec1	equ	0xFE5
 23365                           plusw1	equ	0xFE3
 23366                           fsr1h	equ	0xFE2
 23367                           fsr1l	equ	0xFE1
 23368                           indf2	equ	0xFDF
 23369                           postinc2	equ	0xFDE
 23370                           postdec2	equ	0xFDD
 23371                           plusw2	equ	0xFDB
 23372                           fsr2h	equ	0xFDA
 23373                           fsr2l	equ	0xFD9
 23374                           status	equ	0xFD8
 23375                           
 23376 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 23377 ;; Defined at:
 23378 ;;		line 54 in file "usb_events.c"
 23379 ;; Parameters:    Size  Location     Type
 23380 ;;  event           2   15[COMRAM] enum E6832
 23381 ;;  pdata           2   17[COMRAM] PTR void 
 23382 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 23383 ;;		 -> BDT(48), 
 23384 ;;  size            2   19[COMRAM] unsigned int 
 23385 ;; Auto vars:     Size  Location     Type
 23386 ;;		None
 23387 ;; Return value:  Size  Location     Type
 23388 ;;                  1    wreg      unsigned char 
 23389 ;; Registers used:
 23390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23391 ;; Tracked objects:
 23392 ;;		On entry : 0/0
 23393 ;;		On exit  : 0/0
 23394 ;;		Unchanged: 0/0
 23395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23396 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23398 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23399 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23400 ;;Total ram usage:        8 bytes
 23401 ;; Hardware stack levels used:    1
 23402 ;; Hardware stack levels required when called:    3
 23403 ;; This function calls:
 23404 ;;		_APP_DeviceCustomHIDInitialize
 23405 ;;		_APP_DeviceMSDInitialize
 23406 ;;		_MSDTransferTerminated
 23407 ;;		_USBCheckHIDRequest
 23408 ;;		_USBCheckMSDRequest
 23409 ;;		i2_SYSTEM_Initialize
 23410 ;; This function is called by:
 23411 ;;		_USBDeviceTasks
 23412 ;;		_USBStdSetCfgHandler
 23413 ;;		_USBSuspend
 23414 ;;		_USBWakeFromSuspend
 23415 ;;		_USBCtrlTrfSetupHandler
 23416 ;;		_USBCheckStdRequest
 23417 ;;		_USBStdFeatureReqHandler
 23418 ;; This function uses a non-reentrant model
 23419 ;;
 23420                           
 23421                           	psect	text75
 23422  00E924                     __ptext75:
 23423                           	opt stack 0
 23424  00E924                     _USER_USB_CALLBACK_EVENT_HANDLER:
 23425                           	opt stack 19
 23426                           
 23427                           ;usb_events.c: 56: switch((int)event)
 23428                           
 23429                           ;incstack = 0
 23430  00E924  D019               	goto	i2l816
 23431  00E926                     
 23432                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 23433  00E926  0E01               	movlw	1
 23434  00E928  ECEB  F077         	call	i2_SYSTEM_Initialize
 23435                           
 23436                           ;usb_events.c: 79: break;
 23437  00E92C  0012               	return	
 23438  00E92E                     
 23439                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 23440  00E92E  0E02               	movlw	2
 23441  00E930  ECEB  F077         	call	i2_SYSTEM_Initialize
 23442                           
 23443                           ;usb_events.c: 90: break;
 23444  00E934  0012               	return	
 23445  00E936                     
 23446                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 23447  00E936  EC0C  F07A         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 23448                           
 23449                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 23450  00E93A  EC1B  F07B         	call	_APP_DeviceMSDInitialize	;wreg free
 23451                           
 23452                           ;usb_events.c: 100: break;
 23453                           
 23454                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 23455                           
 23456                           ;usb_events.c: 97: break;
 23457  00E93E  0012               	return	
 23458  00E940                     
 23459                           ;usb_events.c: 105: USBCheckHIDRequest();
 23460  00E940  EC1A  F06F         	call	_USBCheckHIDRequest	;wreg free
 23461                           
 23462                           ;usb_events.c: 108: USBCheckMSDRequest();
 23463  00E944  EC77  F071         	call	_USBCheckMSDRequest	;wreg free
 23464                           
 23465                           ;usb_events.c: 112: break;
 23466                           
 23467                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 23468                           
 23469                           ;usb_events.c: 109: break;
 23470  00E948  0012               	return	
 23471  00E94A                     
 23472                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 23473  00E94A  C03F  F039         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 23474  00E94E  C040  F03A         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 23475  00E952  EC6C  F077         	call	_MSDTransferTerminated	;wreg free
 23476                           
 23477                           ;usb_events.c: 129: }
 23478                           
 23479                           ;usb_events.c: 128: break;
 23480                           
 23481                           ;usb_events.c: 127: default:
 23482                           
 23483                           ;usb_events.c: 125: break;
 23484  00E956  0012               	return	
 23485  00E958                     i2l816:
 23486  00E958  C03D  F043         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 23487  00E95C  C03E  F044         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 23488                           
 23489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 23490                           ; Switch size 1, requested type "space"
 23491                           ; Number of cases is 2, Range of values is 0 to 127
 23492                           ; switch strategies available:
 23493                           ; Name         Instructions Cycles
 23494                           ; simple_byte            7     4 (average)
 23495                           ;	Chosen strategy is simple_byte
 23496  00E960  5044               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 23497  00E962  0A00               	xorlw	0	; case 0
 23498  00E964  B4D8               	btfsc	status,2,c
 23499  00E966  D004               	goto	i2l19100
 23500  00E968  0A7F               	xorlw	127	; case 127
 23501  00E96A  A4D8               	btfss	status,2,c
 23502  00E96C  0012               	return	
 23503  00E96E  D01A               	goto	i2l19102
 23504  00E970                     i2l19100:
 23505                           
 23506                           ; Switch size 1, requested type "space"
 23507                           ; Number of cases is 8, Range of values is 1 to 117
 23508                           ; switch strategies available:
 23509                           ; Name         Instructions Cycles
 23510                           ; simple_byte           25    13 (average)
 23511                           ;	Chosen strategy is simple_byte
 23512  00E970  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23513  00E972  0A01               	xorlw	1	; case 1
 23514  00E974  B4D8               	btfsc	status,2,c
 23515  00E976  D7DF               	goto	i2l822
 23516  00E978  0A03               	xorlw	3	; case 2
 23517  00E97A  B4D8               	btfsc	status,2,c
 23518  00E97C  0012               	return	
 23519  00E97E  0A01               	xorlw	1	; case 3
 23520  00E980  B4D8               	btfsc	status,2,c
 23521  00E982  D7DE               	goto	i2l824
 23522  00E984  0A06               	xorlw	6	; case 5
 23523  00E986  B4D8               	btfsc	status,2,c
 23524  00E988  D7E0               	goto	i2l826
 23525  00E98A  0A77               	xorlw	119	; case 114
 23526  00E98C  B4D8               	btfsc	status,2,c
 23527  00E98E  0012               	return	
 23528  00E990  0A01               	xorlw	1	; case 115
 23529  00E992  B4D8               	btfsc	status,2,c
 23530  00E994  0012               	return	
 23531  00E996  0A07               	xorlw	7	; case 116
 23532  00E998  B4D8               	btfsc	status,2,c
 23533  00E99A  D7C9               	goto	i2l821
 23534  00E99C  0A01               	xorlw	1	; case 117
 23535  00E99E  A4D8               	btfss	status,2,c
 23536  00E9A0  0012               	return	
 23537  00E9A2  D7C1               	goto	i2l820
 23538  00E9A4                     i2l19102:
 23539                           
 23540                           ; Switch size 1, requested type "space"
 23541                           ; Number of cases is 1, Range of values is 255 to 255
 23542                           ; switch strategies available:
 23543                           ; Name         Instructions Cycles
 23544                           ; simple_byte            4     3 (average)
 23545                           ;	Chosen strategy is simple_byte
 23546  00E9A4  5043               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 23547  00E9A6  0AFF               	xorlw	255	; case 255
 23548  00E9A8  0012               	return	
 23549  00E9AA                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 23550                           	opt stack 0
 23551                           pclatu	equ	0xFFB
 23552                           pclath	equ	0xFFA
 23553                           tblptru	equ	0xFF8
 23554                           tblptrh	equ	0xFF7
 23555                           tblptrl	equ	0xFF6
 23556                           tablat	equ	0xFF5
 23557                           prodh	equ	0xFF4
 23558                           prodl	equ	0xFF3
 23559                           intcon	equ	0xFF2
 23560                           indf0	equ	0xFEF
 23561                           postinc0	equ	0xFEE
 23562                           fsr0h	equ	0xFEA
 23563                           fsr0l	equ	0xFE9
 23564                           wreg	equ	0xFE8
 23565                           indf1	equ	0xFE7
 23566                           postdec1	equ	0xFE5
 23567                           plusw1	equ	0xFE3
 23568                           fsr1h	equ	0xFE2
 23569                           fsr1l	equ	0xFE1
 23570                           indf2	equ	0xFDF
 23571                           postinc2	equ	0xFDE
 23572                           postdec2	equ	0xFDD
 23573                           plusw2	equ	0xFDB
 23574                           fsr2h	equ	0xFDA
 23575                           fsr2l	equ	0xFD9
 23576                           status	equ	0xFD8
 23577                           
 23578 ;; *************** function i2_SYSTEM_Initialize *****************
 23579 ;; Defined at:
 23580 ;;		line 39 in file "system.c"
 23581 ;; Parameters:    Size  Location     Type
 23582 ;;  state           1    wreg     enum E6623
 23583 ;; Auto vars:     Size  Location     Type
 23584 ;;  state           1    4[COMRAM] enum E6623
 23585 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 23586 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 23587 ;; Return value:  Size  Location     Type
 23588 ;;                  1    wreg      void 
 23589 ;; Registers used:
 23590 ;;		wreg, status,2, status,0
 23591 ;; Tracked objects:
 23592 ;;		On entry : 0/0
 23593 ;;		On exit  : 0/0
 23594 ;;		Unchanged: 0/0
 23595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23597 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23599 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23600 ;;Total ram usage:        5 bytes
 23601 ;; Hardware stack levels used:    1
 23602 ;; This function calls:
 23603 ;;		Nothing
 23604 ;; This function is called by:
 23605 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23606 ;; This function uses a non-reentrant model
 23607 ;;
 23608                           
 23609                           	psect	text76
 23610  00EFD6                     __ptext76:
 23611                           	opt stack 0
 23612  00EFD6                     i2_SYSTEM_Initialize:
 23613                           	opt stack 21
 23614                           
 23615                           ;incstack = 0
 23616                           ;i2SYSTEM_Initialize@state stored from wreg
 23617  00EFD6  6E32               	movwf	i2SYSTEM_Initialize@state,c
 23618                           
 23619                           ;system.c: 41: switch(state)
 23620  00EFD8  D01D               	goto	i2l877
 23621  00EFDA                     
 23622                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 23623  00EFDA  0E02               	movlw	2
 23624  00EFDC  6E2F               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 23625  00EFDE  0E58               	movlw	88
 23626  00EFE0  6E2E               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 23627                           
 23628                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 23629  00EFE2  8C9B               	bsf	3995,6,c	;volatile
 23630  00EFE4                     i2l10150:
 23631  00EFE4  062E               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 23632  00EFE6  A0D8               	btfss	status,0,c
 23633  00EFE8  062F               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 23634  00EFEA  282E               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 23635  00EFEC  E1FB               	bnz	i2l10150
 23636  00EFEE  282F               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 23637  00EFF0  B4D8               	btfsc	status,2,c
 23638  00EFF2  0012               	return	
 23639  00EFF4  D7F7               	goto	i2l880
 23640  00EFF6                     
 23641                           ;system.c: 78: OSCCON = 0x70;
 23642  00EFF6  0E70               	movlw	112
 23643  00EFF8  6ED3               	movwf	4051,c	;volatile
 23644                           
 23645                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 23646  00EFFA  0E03               	movlw	3
 23647  00EFFC  6E31               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3052+1,c
 23648  00EFFE  0E20               	movlw	32
 23649  00F000  6E30               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3052,c
 23650  00F002                     i2l10154:
 23651  00F002  0630               	decf	i2SYSTEM_Initialize@pll_startup_counter_3052,f,c
 23652  00F004  A0D8               	btfss	status,0,c
 23653  00F006  0631               	decf	i2SYSTEM_Initialize@pll_startup_counter_3052+1,f,c
 23654  00F008  2830               	incf	i2SYSTEM_Initialize@pll_startup_counter_3052,w,c
 23655  00F00A  E1FB               	bnz	i2l10154
 23656  00F00C  2831               	incf	i2SYSTEM_Initialize@pll_startup_counter_3052+1,w,c
 23657  00F00E  B4D8               	btfsc	status,2,c
 23658  00F010  0012               	return	
 23659  00F012  D7F7               	goto	i2l886
 23660  00F014                     i2l877:
 23661  00F014  5032               	movf	i2SYSTEM_Initialize@state,w,c
 23662                           
 23663                           ; Switch size 1, requested type "space"
 23664                           ; Number of cases is 3, Range of values is 0 to 2
 23665                           ; switch strategies available:
 23666                           ; Name         Instructions Cycles
 23667                           ; simple_byte           10     6 (average)
 23668                           ;	Chosen strategy is simple_byte
 23669  00F016  0A00               	xorlw	0	; case 0
 23670  00F018  B4D8               	btfsc	status,2,c
 23671  00F01A  D7DF               	goto	i2l878
 23672  00F01C  0A01               	xorlw	1	; case 1
 23673  00F01E  B4D8               	btfsc	status,2,c
 23674  00F020  0012               	return	
 23675  00F022  0A03               	xorlw	3	; case 2
 23676  00F024  A4D8               	btfss	status,2,c
 23677  00F026  0012               	return	
 23678  00F028  D7E6               	goto	i2l884
 23679  00F02A                     __end_ofi2_SYSTEM_Initialize:
 23680                           	opt stack 0
 23681                           pclatu	equ	0xFFB
 23682                           pclath	equ	0xFFA
 23683                           tblptru	equ	0xFF8
 23684                           tblptrh	equ	0xFF7
 23685                           tblptrl	equ	0xFF6
 23686                           tablat	equ	0xFF5
 23687                           prodh	equ	0xFF4
 23688                           prodl	equ	0xFF3
 23689                           intcon	equ	0xFF2
 23690                           indf0	equ	0xFEF
 23691                           postinc0	equ	0xFEE
 23692                           fsr0h	equ	0xFEA
 23693                           fsr0l	equ	0xFE9
 23694                           wreg	equ	0xFE8
 23695                           indf1	equ	0xFE7
 23696                           postdec1	equ	0xFE5
 23697                           plusw1	equ	0xFE3
 23698                           fsr1h	equ	0xFE2
 23699                           fsr1l	equ	0xFE1
 23700                           indf2	equ	0xFDF
 23701                           postinc2	equ	0xFDE
 23702                           postdec2	equ	0xFDD
 23703                           plusw2	equ	0xFDB
 23704                           fsr2h	equ	0xFDA
 23705                           fsr2l	equ	0xFD9
 23706                           status	equ	0xFD8
 23707                           
 23708 ;; *************** function _USBCheckMSDRequest *****************
 23709 ;; Defined at:
 23710 ;;		line 218 in file "usb_device_msd.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;		None
 23713 ;; Auto vars:     Size  Location     Type
 23714 ;;		None
 23715 ;; Return value:  Size  Location     Type
 23716 ;;                  1    wreg      void 
 23717 ;; Registers used:
 23718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23719 ;; Tracked objects:
 23720 ;;		On entry : 0/0
 23721 ;;		On exit  : 0/0
 23722 ;;		Unchanged: 0/0
 23723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23725 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23727 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23728 ;;Total ram usage:        4 bytes
 23729 ;; Hardware stack levels used:    1
 23730 ;; Hardware stack levels required when called:    1
 23731 ;; This function calls:
 23732 ;;		_USBTransferOnePacket
 23733 ;; This function is called by:
 23734 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23735 ;; This function uses a non-reentrant model
 23736 ;;
 23737                           
 23738                           	psect	text77
 23739  00E2EE                     __ptext77:
 23740                           	opt stack 0
 23741  00E2EE                     _USBCheckMSDRequest:
 23742                           	opt stack 20
 23743                           
 23744                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 23745                           
 23746                           ;incstack = 0
 23747  00E2EE  010D               	movlb	13	; () banked
 23748  00E2F0  5130               	movf	48,w,b	;volatile
 23749  00E2F2  0B1F               	andlw	31
 23750  00E2F4  06E8               	decf	wreg,f,c
 23751  00E2F6  A4D8               	btfss	status,2,c
 23752  00E2F8  0012               	return	
 23753                           
 23754                           ; BSR set to: 13
 23755                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 23756                           
 23757                           ; BSR set to: 13
 23758                           
 23759                           ; BSR set to: 13
 23760                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 23761  00E2FA  5134               	movf	52,w,b	;volatile
 23762  00E2FC  A4D8               	btfss	status,2,c
 23763  00E2FE  0012               	return	
 23764  00E300  D04D               	goto	i2l545
 23765  00E302                     
 23766                           ; BSR set to: 13
 23767                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 23768                           
 23769                           ; BSR set to: 13
 23770  00E302  5132               	movf	50,w,b	;volatile
 23771  00E304  1133               	iorwf	51,w,b	;volatile
 23772  00E306  A4D8               	btfss	status,2,c
 23773  00E308  0012               	return	
 23774                           
 23775                           ; BSR set to: 13
 23776  00E30A  5136               	movf	54,w,b	;volatile
 23777  00E30C  1137               	iorwf	55,w,b	;volatile
 23778  00E30E  A4D8               	btfss	status,2,c
 23779  00E310  0012               	return	
 23780                           
 23781                           ; BSR set to: 13
 23782                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 23783                           
 23784                           ; BSR set to: 13
 23785                           
 23786                           ; BSR set to: 13
 23787                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 23788  00E312  0E00               	movlw	0
 23789  00E314  6E20               	movwf	_MSD_State,c
 23790                           
 23791                           ; BSR set to: 13
 23792                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 23793  00E316  681F               	setf	_MSDCommandState,c
 23794                           
 23795                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 23796  00E318  0E00               	movlw	0
 23797  00E31A  0100               	movlb	0	; () banked
 23798  00E31C  6FFA               	movwf	_MSDReadState& (0+255),b
 23799                           
 23800                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 23801  00E31E  0E00               	movlw	0
 23802  00E320  6E1E               	movwf	_MSDWriteState,c
 23803                           
 23804                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 23805  00E322  0E01               	movlw	1
 23806  00E324  0101               	movlb	1	; () banked
 23807  00E326  6F87               	movwf	_MSDCBWValid& (0+255),b
 23808                           
 23809                           ; BSR set to: 1
 23810                           
 23811                           ; BSR set to: 1
 23812                           
 23813                           ; BSR set to: 1
 23814                           
 23815                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 23816  00E328  C152  F039         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 23817  00E32C  C153  F03A         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 23818                           
 23819                           ; BSR set to: 1
 23820  00E330  5039               	movf	_USBCheckMSDRequest$2534,w,c
 23821  00E332  103A               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 23822  00E334  B4D8               	btfsc	status,2,c
 23823  00E336  D00A               	goto	i2u827_40
 23824                           
 23825                           ; BSR set to: 1
 23826                           
 23827                           ; BSR set to: 1
 23828                           
 23829                           ; BSR set to: 1
 23830                           
 23831                           ; BSR set to: 1
 23832  00E338  C152  F03B         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 23833  00E33C  C153  F03C         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 23834                           
 23835                           ; BSR set to: 1
 23836                           
 23837                           ; BSR set to: 1
 23838  00E340  C03B  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 23839  00E344  C03C  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 23840  00E348  BEDF               	btfsc	indf2,7,c
 23841  00E34A  D00F               	goto	i2l550
 23842  00E34C                     i2u827_40:
 23843                           
 23844                           ; BSR set to: 1
 23845                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 23846                           
 23847                           ; BSR set to: 1
 23848  00E34C  0E00               	movlw	0
 23849  00E34E  6E2E               	movwf	USBTransferOnePacket@dir,c
 23850  00E350  0E40               	movlw	64
 23851  00E352  6E2F               	movwf	USBTransferOnePacket@data,c
 23852  00E354  0E0D               	movlw	13
 23853  00E356  6E30               	movwf	USBTransferOnePacket@data+1,c
 23854  00E358  0E40               	movlw	64
 23855  00E35A  6E31               	movwf	USBTransferOnePacket@len,c
 23856  00E35C  0E02               	movlw	2
 23857  00E35E  ECF5  F06B         	call	_USBTransferOnePacket
 23858  00E362  C02E  F015         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 23859  00E366  C02F  F016         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 23860  00E36A                     i2l550:
 23861                           
 23862                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 23863  00E36A  0E80               	movlw	128
 23864  00E36C  6E04               	movwf	_inPipes+3,c	;volatile
 23865                           
 23866                           ;usb_device_msd.c: 263: break;
 23867  00E36E  0012               	return	
 23868  00E370                     
 23869                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 23870  00E370  010D               	movlb	13	; () banked
 23871  00E372  5132               	movf	50,w,b	;volatile
 23872  00E374  1133               	iorwf	51,w,b	;volatile
 23873  00E376  A4D8               	btfss	status,2,c
 23874  00E378  0012               	return	
 23875                           
 23876                           ; BSR set to: 13
 23877  00E37A  0536               	decf	54,w,b	;volatile
 23878  00E37C  1137               	iorwf	55,w,b	;volatile
 23879  00E37E  A4D8               	btfss	status,2,c
 23880  00E380  0012               	return	
 23881                           
 23882                           ; BSR set to: 13
 23883                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 23884                           
 23885                           ; BSR set to: 13
 23886                           
 23887                           ; BSR set to: 13
 23888                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 23889  00E382  0E00               	movlw	0
 23890  00E384  6F38               	movwf	56,b	;volatile
 23891                           
 23892                           ; BSR set to: 13
 23893                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 23894  00E386  0E38               	movlw	56
 23895  00E388  6E01               	movwf	_inPipes,c	;volatile
 23896  00E38A  0E0D               	movlw	13
 23897  00E38C  6E02               	movwf	_inPipes+1,c	;volatile
 23898                           
 23899                           ; BSR set to: 13
 23900  00E38E  0E00               	movlw	0
 23901  00E390  6E06               	movwf	_inPipes+5,c	;volatile
 23902  00E392  0E01               	movlw	1
 23903  00E394  6E05               	movwf	_inPipes+4,c	;volatile
 23904                           
 23905                           ; BSR set to: 13
 23906  00E396  0EC1               	movlw	193
 23907  00E398  6E04               	movwf	_inPipes+3,c	;volatile
 23908                           
 23909                           ; BSR set to: 13
 23910                           ;usb_device_msd.c: 278: }
 23911                           
 23912                           ;usb_device_msd.c: 277: break;
 23913  00E39A  0012               	return	
 23914  00E39C                     i2l545:
 23915                           
 23916                           ; BSR set to: 13
 23917                           
 23918                           ; BSR set to: 13
 23919  00E39C  5131               	movf	49,w,b	;volatile
 23920                           
 23921                           ; Switch size 1, requested type "space"
 23922                           ; Number of cases is 2, Range of values is 254 to 255
 23923                           ; switch strategies available:
 23924                           ; Name         Instructions Cycles
 23925                           ; simple_byte            7     4 (average)
 23926                           ;	Chosen strategy is simple_byte
 23927  00E39E  0AFE               	xorlw	254	; case 254
 23928  00E3A0  B4D8               	btfsc	status,2,c
 23929  00E3A2  D7E6               	goto	i2l562
 23930  00E3A4  0A01               	xorlw	1	; case 255
 23931  00E3A6  A4D8               	btfss	status,2,c
 23932  00E3A8  0012               	return	
 23933  00E3AA  D7AB               	goto	i2l546
 23934  00E3AC                     __end_of_USBCheckMSDRequest:
 23935                           	opt stack 0
 23936                           pclatu	equ	0xFFB
 23937                           pclath	equ	0xFFA
 23938                           tblptru	equ	0xFF8
 23939                           tblptrh	equ	0xFF7
 23940                           tblptrl	equ	0xFF6
 23941                           tablat	equ	0xFF5
 23942                           prodh	equ	0xFF4
 23943                           prodl	equ	0xFF3
 23944                           intcon	equ	0xFF2
 23945                           indf0	equ	0xFEF
 23946                           postinc0	equ	0xFEE
 23947                           fsr0h	equ	0xFEA
 23948                           fsr0l	equ	0xFE9
 23949                           wreg	equ	0xFE8
 23950                           indf1	equ	0xFE7
 23951                           postdec1	equ	0xFE5
 23952                           plusw1	equ	0xFE3
 23953                           fsr1h	equ	0xFE2
 23954                           fsr1l	equ	0xFE1
 23955                           indf2	equ	0xFDF
 23956                           postinc2	equ	0xFDE
 23957                           postdec2	equ	0xFDD
 23958                           plusw2	equ	0xFDB
 23959                           fsr2h	equ	0xFDA
 23960                           fsr2l	equ	0xFD9
 23961                           status	equ	0xFD8
 23962                           
 23963 ;; *************** function _USBCheckHIDRequest *****************
 23964 ;; Defined at:
 23965 ;;		line 153 in file "usb_device_hid.c"
 23966 ;; Parameters:    Size  Location     Type
 23967 ;;		None
 23968 ;; Auto vars:     Size  Location     Type
 23969 ;;		None
 23970 ;; Return value:  Size  Location     Type
 23971 ;;                  1    wreg      void 
 23972 ;; Registers used:
 23973 ;;		wreg, status,2, status,0
 23974 ;; Tracked objects:
 23975 ;;		On entry : 0/0
 23976 ;;		On exit  : 0/0
 23977 ;;		Unchanged: 0/0
 23978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23983 ;;Total ram usage:        0 bytes
 23984 ;; Hardware stack levels used:    1
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 23989 ;; This function uses a non-reentrant model
 23990 ;;
 23991                           
 23992                           	psect	text78
 23993  00DE34                     __ptext78:
 23994                           	opt stack 0
 23995  00DE34                     _USBCheckHIDRequest:
 23996                           	opt stack 21
 23997                           
 23998                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 23999                           
 24000                           ;incstack = 0
 24001  00DE34  010D               	movlb	13	; () banked
 24002  00DE36  5130               	movf	48,w,b	;volatile
 24003  00DE38  0B1F               	andlw	31
 24004  00DE3A  06E8               	decf	wreg,f,c
 24005  00DE3C  A4D8               	btfss	status,2,c
 24006  00DE3E  0012               	return	
 24007                           
 24008                           ; BSR set to: 13
 24009                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 24010                           
 24011                           ; BSR set to: 13
 24012                           
 24013                           ; BSR set to: 13
 24014  00DE40  5134               	movf	52,w,b	;volatile
 24015  00DE42  A4D8               	btfss	status,2,c
 24016  00DE44  0012               	return	
 24017                           
 24018                           ; BSR set to: 13
 24019                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 24020                           
 24021                           ; BSR set to: 13
 24022                           
 24023                           ; BSR set to: 13
 24024  00DE46  0E06               	movlw	6
 24025  00DE48  1931               	xorwf	49,w,b	;volatile
 24026  00DE4A  B4D8               	btfsc	status,2,c
 24027  00DE4C  D018               	goto	i2l425
 24028  00DE4E  D01F               	goto	i2l428
 24029  00DE50                     
 24030                           ; BSR set to: 13
 24031                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 24032                           
 24033                           ; BSR set to: 13
 24034  00DE50  042D               	decf	_USBActiveConfiguration,w,c	;volatile
 24035  00DE52  A4D8               	btfss	status,2,c
 24036  00DE54  D01C               	goto	i2l428
 24037                           
 24038                           ; BSR set to: 13
 24039                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 24040  00DE56  0EC8               	movlw	low (_configDescriptor1+18)
 24041  00DE58  6E01               	movwf	_inPipes,c	;volatile
 24042  00DE5A  0EA0               	movlw	high (_configDescriptor1+18)
 24043  00DE5C  6E02               	movwf	_inPipes+1,c	;volatile
 24044                           
 24045                           ; BSR set to: 13
 24046  00DE5E  0E00               	movlw	0
 24047  00DE60  6E06               	movwf	_inPipes+5,c	;volatile
 24048  00DE62  0E09               	movlw	9
 24049  00DE64  D00A               	goto	L50
 24050  00DE66                     i2l9990:
 24051                           
 24052                           ; BSR set to: 13
 24053  00DE66  0EC0               	movlw	192
 24054  00DE68  6E04               	movwf	_inPipes+3,c	;volatile
 24055                           
 24056                           ; BSR set to: 13
 24057                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 24058  00DE6A  D011               	goto	i2l428
 24059  00DE6C                     
 24060                           ; BSR set to: 13
 24061                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 24062                           
 24063                           ; BSR set to: 13
 24064  00DE6C  0E7C               	movlw	low _hid_rpt01
 24065  00DE6E  6E01               	movwf	_inPipes,c	;volatile
 24066  00DE70  0EA1               	movlw	high _hid_rpt01
 24067  00DE72  6E02               	movwf	_inPipes+1,c	;volatile
 24068                           
 24069                           ; BSR set to: 13
 24070  00DE74  0E00               	movlw	0
 24071  00DE76  6E06               	movwf	_inPipes+5,c	;volatile
 24072  00DE78  0E1D               	movlw	29
 24073  00DE7A                     L50:
 24074  00DE7A  6E05               	movwf	_inPipes+4,c	;volatile
 24075  00DE7C  D7F4               	goto	i2l9990
 24076  00DE7E                     i2l425:
 24077                           
 24078                           ; BSR set to: 13
 24079                           
 24080                           ; BSR set to: 13
 24081  00DE7E  5133               	movf	51,w,b	;volatile
 24082                           
 24083                           ; Switch size 1, requested type "space"
 24084                           ; Number of cases is 3, Range of values is 33 to 35
 24085                           ; switch strategies available:
 24086                           ; Name         Instructions Cycles
 24087                           ; simple_byte           10     6 (average)
 24088                           ;	Chosen strategy is simple_byte
 24089  00DE80  0A21               	xorlw	33	; case 33
 24090  00DE82  B4D8               	btfsc	status,2,c
 24091  00DE84  D7E5               	goto	i2l426
 24092  00DE86  0A03               	xorlw	3	; case 34
 24093  00DE88  B4D8               	btfsc	status,2,c
 24094  00DE8A  D7F0               	goto	i2l429
 24095  00DE8C  0A01               	xorlw	1	; case 35
 24096  00DE8E                     i2l428:
 24097                           
 24098                           ; BSR set to: 13
 24099                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 24100                           
 24101                           ; BSR set to: 13
 24102                           
 24103                           ; BSR set to: 13
 24104  00DE8E  3930               	swapf	48,w,b	;volatile
 24105  00DE90  32E8               	rrcf	wreg,f,c
 24106  00DE92  0B03               	andlw	3
 24107  00DE94  06E8               	decf	wreg,f,c
 24108  00DE96  A4D8               	btfss	status,2,c
 24109  00DE98  0012               	return	
 24110  00DE9A  D020               	goto	i2l432
 24111  00DE9C                     
 24112                           ; BSR set to: 13
 24113                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 24114                           
 24115                           ; BSR set to: 13
 24116  00DE9C  0EFF               	movlw	low _idle_rate
 24117  00DE9E  6E01               	movwf	_inPipes,c	;volatile
 24118  00DEA0  0E00               	movlw	high _idle_rate
 24119  00DEA2  6E02               	movwf	_inPipes+1,c	;volatile
 24120                           
 24121                           ; BSR set to: 13
 24122  00DEA4  0E00               	movlw	0
 24123  00DEA6  6E06               	movwf	_inPipes+5,c	;volatile
 24124  00DEA8  0E01               	movlw	1
 24125  00DEAA  6E05               	movwf	_inPipes+4,c	;volatile
 24126                           
 24127                           ; BSR set to: 13
 24128  00DEAC  0EC1               	movlw	193
 24129  00DEAE  6E04               	movwf	_inPipes+3,c	;volatile
 24130                           
 24131                           ;usb_device_hid.c: 223: break;
 24132  00DEB0  0012               	return	
 24133  00DEB2                     
 24134                           ; BSR set to: 13
 24135                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 24136                           
 24137                           ; BSR set to: 13
 24138  00DEB2  0E80               	movlw	128
 24139  00DEB4  6E04               	movwf	_inPipes+3,c	;volatile
 24140                           
 24141                           ; BSR set to: 13
 24142                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 24143  00DEB6  CD33 F0FF          	movff	3379,_idle_rate	;volatile
 24144                           
 24145                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 24146  00DEBA  0012               	return	
 24147  00DEBC                     
 24148                           ; BSR set to: 13
 24149                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 24150                           
 24151                           ; BSR set to: 13
 24152  00DEBC  0EFE               	movlw	low _active_protocol
 24153  00DEBE  6E01               	movwf	_inPipes,c	;volatile
 24154  00DEC0  0E00               	movlw	high _active_protocol
 24155  00DEC2  6E02               	movwf	_inPipes+1,c	;volatile
 24156                           
 24157                           ; BSR set to: 13
 24158  00DEC4  0E00               	movlw	0
 24159  00DEC6  6E06               	movwf	_inPipes+5,c	;volatile
 24160  00DEC8  0E01               	movlw	1
 24161  00DECA  6E05               	movwf	_inPipes+4,c	;volatile
 24162                           
 24163                           ; BSR set to: 13
 24164  00DECC  0E81               	movlw	129
 24165  00DECE  6E04               	movwf	_inPipes+3,c	;volatile
 24166                           
 24167                           ;usb_device_hid.c: 234: break;
 24168  00DED0  0012               	return	
 24169  00DED2                     
 24170                           ; BSR set to: 13
 24171                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 24172                           
 24173                           ; BSR set to: 13
 24174  00DED2  0E80               	movlw	128
 24175  00DED4  6E04               	movwf	_inPipes+3,c	;volatile
 24176                           
 24177                           ; BSR set to: 13
 24178                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 24179  00DED6  CD32 F0FE          	movff	3378,_active_protocol	;volatile
 24180                           
 24181                           ; BSR set to: 13
 24182                           ;usb_device_hid.c: 239: }
 24183                           
 24184                           ;usb_device_hid.c: 238: break;
 24185  00DEDA  0012               	return	
 24186  00DEDC                     i2l432:
 24187                           
 24188                           ; BSR set to: 13
 24189                           
 24190                           ; BSR set to: 13
 24191  00DEDC  5131               	movf	49,w,b	;volatile
 24192                           
 24193                           ; Switch size 1, requested type "space"
 24194                           ; Number of cases is 6, Range of values is 1 to 11
 24195                           ; switch strategies available:
 24196                           ; Name         Instructions Cycles
 24197                           ; simple_byte           19    10 (average)
 24198                           ;	Chosen strategy is simple_byte
 24199  00DEDE  0A01               	xorlw	1	; case 1
 24200  00DEE0  B4D8               	btfsc	status,2,c
 24201  00DEE2  0012               	return	
 24202  00DEE4  0A03               	xorlw	3	; case 2
 24203  00DEE6  B4D8               	btfsc	status,2,c
 24204  00DEE8  D7D9               	goto	i2l436
 24205  00DEEA  0A01               	xorlw	1	; case 3
 24206  00DEEC  B4D8               	btfsc	status,2,c
 24207  00DEEE  D7E6               	goto	i2l438
 24208  00DEF0  0A0A               	xorlw	10	; case 9
 24209  00DEF2  B4D8               	btfsc	status,2,c
 24210  00DEF4  0012               	return	
 24211  00DEF6  0A03               	xorlw	3	; case 10
 24212  00DEF8  B4D8               	btfsc	status,2,c
 24213  00DEFA  D7DB               	goto	i2l437
 24214  00DEFC  0A01               	xorlw	1	; case 11
 24215  00DEFE  A4D8               	btfss	status,2,c
 24216  00DF00  0012               	return	
 24217  00DF02  D7E7               	goto	i2l439
 24218  00DF04                     __end_of_USBCheckHIDRequest:
 24219                           	opt stack 0
 24220                           pclatu	equ	0xFFB
 24221                           pclath	equ	0xFFA
 24222                           tblptru	equ	0xFF8
 24223                           tblptrh	equ	0xFF7
 24224                           tblptrl	equ	0xFF6
 24225                           tablat	equ	0xFF5
 24226                           prodh	equ	0xFF4
 24227                           prodl	equ	0xFF3
 24228                           intcon	equ	0xFF2
 24229                           indf0	equ	0xFEF
 24230                           postinc0	equ	0xFEE
 24231                           fsr0h	equ	0xFEA
 24232                           fsr0l	equ	0xFE9
 24233                           wreg	equ	0xFE8
 24234                           indf1	equ	0xFE7
 24235                           postdec1	equ	0xFE5
 24236                           plusw1	equ	0xFE3
 24237                           fsr1h	equ	0xFE2
 24238                           fsr1l	equ	0xFE1
 24239                           indf2	equ	0xFDF
 24240                           postinc2	equ	0xFDE
 24241                           postdec2	equ	0xFDD
 24242                           plusw2	equ	0xFDB
 24243                           fsr2h	equ	0xFDA
 24244                           fsr2l	equ	0xFD9
 24245                           status	equ	0xFD8
 24246                           
 24247 ;; *************** function _MSDTransferTerminated *****************
 24248 ;; Defined at:
 24249 ;;		line 1674 in file "usb_device_msd.c"
 24250 ;; Parameters:    Size  Location     Type
 24251 ;;  handle          2   11[COMRAM] PTR void 
 24252 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 24253 ;;		 -> BDT(48), 
 24254 ;; Auto vars:     Size  Location     Type
 24255 ;;		None
 24256 ;; Return value:  Size  Location     Type
 24257 ;;                  1    wreg      void 
 24258 ;; Registers used:
 24259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24260 ;; Tracked objects:
 24261 ;;		On entry : 0/0
 24262 ;;		On exit  : 0/0
 24263 ;;		Unchanged: 0/0
 24264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24269 ;;Total ram usage:        4 bytes
 24270 ;; Hardware stack levels used:    1
 24271 ;; Hardware stack levels required when called:    1
 24272 ;; This function calls:
 24273 ;;		_USBStallEndpoint
 24274 ;;		_USBTransferOnePacket
 24275 ;; This function is called by:
 24276 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24277 ;; This function uses a non-reentrant model
 24278 ;;
 24279                           
 24280                           	psect	text79
 24281  00EED8                     __ptext79:
 24282                           	opt stack 0
 24283  00EED8                     _MSDTransferTerminated:
 24284                           	opt stack 20
 24285                           
 24286                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 24287                           
 24288                           ; BSR set to: 13
 24289                           ;incstack = 0
 24290  00EED8  0101               	movlb	1	; () banked
 24291  00EEDA  5187               	movf	_MSDCBWValid& (0+255),w,b
 24292  00EEDC  A4D8               	btfss	status,2,c
 24293  00EEDE  D00B               	goto	i2l780
 24294                           
 24295                           ; BSR set to: 1
 24296                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 24297  00EEE0  0E01               	movlw	1
 24298  00EEE2  6E2E               	movwf	USBStallEndpoint@dir,c
 24299  00EEE4  0E02               	movlw	2
 24300  00EEE6  EC72  F06B         	call	_USBStallEndpoint
 24301                           
 24302                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 24303  00EEEA  0E00               	movlw	0
 24304  00EEEC  6E2E               	movwf	USBStallEndpoint@dir,c
 24305  00EEEE  0E02               	movlw	2
 24306  00EEF0  EC72  F06B         	call	_USBStallEndpoint
 24307                           
 24308                           ;usb_device_msd.c: 1681: }
 24309  00EEF4  0012               	return	
 24310  00EEF6                     i2l780:
 24311  00EEF6  C152  F03B         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 24312  00EEFA  C153  F03C         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 24313  00EEFE  503B               	movf	_MSDTransferTerminated$2623,w,c
 24314  00EF00  1839               	xorwf	MSDTransferTerminated@handle,w,c
 24315  00EF02  E114               	bnz	i2l783
 24316  00EF04  503C               	movf	_MSDTransferTerminated$2623+1,w,c
 24317  00EF06  183A               	xorwf	MSDTransferTerminated@handle+1,w,c
 24318  00EF08  A4D8               	btfss	status,2,c
 24319  00EF0A  0012               	return	
 24320                           
 24321                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 24322  00EF0C  0E00               	movlw	0
 24323  00EF0E  6E2E               	movwf	USBTransferOnePacket@dir,c
 24324  00EF10  0E40               	movlw	64
 24325  00EF12  6E2F               	movwf	USBTransferOnePacket@data,c
 24326  00EF14  0E0D               	movlw	13
 24327  00EF16  6E30               	movwf	USBTransferOnePacket@data+1,c
 24328  00EF18  0E40               	movlw	64
 24329  00EF1A  6E31               	movwf	USBTransferOnePacket@len,c
 24330  00EF1C  0E02               	movlw	2
 24331  00EF1E  ECF5  F06B         	call	_USBTransferOnePacket
 24332  00EF22  C02E  F015         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24333  00EF26  C02F  F016         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24334  00EF2A  0012               	return	
 24335  00EF2C                     i2l783:
 24336  00EF2C  0012               	return		;funcret
 24337  00EF2E                     __end_of_MSDTransferTerminated:
 24338                           	opt stack 0
 24339                           pclatu	equ	0xFFB
 24340                           pclath	equ	0xFFA
 24341                           tblptru	equ	0xFF8
 24342                           tblptrh	equ	0xFF7
 24343                           tblptrl	equ	0xFF6
 24344                           tablat	equ	0xFF5
 24345                           prodh	equ	0xFF4
 24346                           prodl	equ	0xFF3
 24347                           intcon	equ	0xFF2
 24348                           indf0	equ	0xFEF
 24349                           postinc0	equ	0xFEE
 24350                           fsr0h	equ	0xFEA
 24351                           fsr0l	equ	0xFE9
 24352                           wreg	equ	0xFE8
 24353                           indf1	equ	0xFE7
 24354                           postdec1	equ	0xFE5
 24355                           plusw1	equ	0xFE3
 24356                           fsr1h	equ	0xFE2
 24357                           fsr1l	equ	0xFE1
 24358                           indf2	equ	0xFDF
 24359                           postinc2	equ	0xFDE
 24360                           postdec2	equ	0xFDD
 24361                           plusw2	equ	0xFDB
 24362                           fsr2h	equ	0xFDA
 24363                           fsr2l	equ	0xFD9
 24364                           status	equ	0xFD8
 24365                           
 24366 ;; *************** function _USBStallEndpoint *****************
 24367 ;; Defined at:
 24368 ;;		line 1073 in file "usb_device.c"
 24369 ;; Parameters:    Size  Location     Type
 24370 ;;  ep              1    wreg     unsigned char 
 24371 ;;  dir             1    0[COMRAM] unsigned char 
 24372 ;; Auto vars:     Size  Location     Type
 24373 ;;  ep              1    5[COMRAM] unsigned char 
 24374 ;;  p               2    6[COMRAM] PTR struct __BDT
 24375 ;;		 -> BDT(48), 
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1    wreg      void 
 24378 ;; Registers used:
 24379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24380 ;; Tracked objects:
 24381 ;;		On entry : 0/0
 24382 ;;		On exit  : 0/0
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24386 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24388 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24389 ;;Total ram usage:        8 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; This function calls:
 24392 ;;		Nothing
 24393 ;; This function is called by:
 24394 ;;		_MSDTransferTerminated
 24395 ;;		_MSDTasks
 24396 ;;		_MSDReadHandler
 24397 ;;		_MSDWriteHandler
 24398 ;;		_MSDErrorHandler
 24399 ;; This function uses a non-reentrant model
 24400 ;;
 24401                           
 24402                           	psect	text80
 24403  00D6E4                     __ptext80:
 24404                           	opt stack 0
 24405  00D6E4                     _USBStallEndpoint:
 24406                           	opt stack 20
 24407                           
 24408                           ;incstack = 0
 24409                           ;USBStallEndpoint@ep stored from wreg
 24410  00D6E4  6E33               	movwf	USBStallEndpoint@ep,c
 24411                           
 24412                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 24413  00D6E6  5033               	movf	USBStallEndpoint@ep,w,c
 24414  00D6E8  A4D8               	btfss	status,2,c
 24415  00D6EA  D02B               	goto	i2l192
 24416                           
 24417                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 24418  00D6EC  EE20 F001          	lfsr	2,1
 24419  00D6F0  5017               	movf	_pBDTEntryEP0OutNext,w,c
 24420  00D6F2  26D9               	addwf	fsr2l,f,c
 24421  00D6F4  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 24422  00D6F6  22DA               	addwfc	fsr2h,f,c
 24423  00D6F8  0E08               	movlw	8
 24424  00D6FA  6EDF               	movwf	indf2,c
 24425                           
 24426                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 24427  00D6FC  EE20 F002          	lfsr	2,2
 24428  00D700  5017               	movf	_pBDTEntryEP0OutNext,w,c
 24429  00D702  26D9               	addwf	fsr2l,f,c
 24430  00D704  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 24431  00D706  22DA               	addwfc	fsr2h,f,c
 24432  00D708  0E30               	movlw	48
 24433  00D70A  6EDE               	movwf	postinc2,c
 24434  00D70C  0E0D               	movlw	13
 24435  00D70E  6EDD               	movwf	postdec2,c
 24436                           
 24437                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 24438  00D710  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24439  00D714  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24440  00D718  0E0C               	movlw	12
 24441  00D71A  6EDF               	movwf	indf2,c
 24442                           
 24443                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 24444  00D71C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 24445  00D720  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 24446  00D724  0E00               	movlw	0
 24447  00D726  8EDB               	bsf	plusw2,7,c
 24448                           
 24449                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 24450  00D728  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 24451  00D72C  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24452  00D730  0E04               	movlw	4
 24453  00D732  6EDF               	movwf	indf2,c
 24454                           
 24455                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 24456  00D734  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 24457  00D738  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24458  00D73C  0E00               	movlw	0
 24459  00D73E  8EDB               	bsf	plusw2,7,c
 24460                           
 24461                           ;usb_device.c: 1089: }
 24462  00D740  0012               	return	
 24463  00D742                     i2l192:
 24464                           
 24465                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 24466  00D742  502E               	movf	USBStallEndpoint@dir,w,c
 24467  00D744  6E2F               	movwf	??_USBStallEndpoint& (0+255),c
 24468  00D746  6A30               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 24469  00D748  90D8               	bcf	status,0,c
 24470  00D74A  362F               	rlcf	??_USBStallEndpoint,f,c
 24471  00D74C  3630               	rlcf	??_USBStallEndpoint+1,f,c
 24472  00D74E  5033               	movf	USBStallEndpoint@ep,w,c
 24473  00D750  6E31               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 24474  00D752  6A32               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 24475  00D754  90D8               	bcf	status,0,c
 24476  00D756  3631               	rlcf	??_USBStallEndpoint+2,f,c
 24477  00D758  3632               	rlcf	??_USBStallEndpoint+3,f,c
 24478  00D75A  90D8               	bcf	status,0,c
 24479  00D75C  3631               	rlcf	??_USBStallEndpoint+2,f,c
 24480  00D75E  3632               	rlcf	??_USBStallEndpoint+3,f,c
 24481  00D760  502F               	movf	??_USBStallEndpoint,w,c
 24482  00D762  2631               	addwf	??_USBStallEndpoint+2,f,c
 24483  00D764  5030               	movf	??_USBStallEndpoint+1,w,c
 24484  00D766  2232               	addwfc	??_USBStallEndpoint+3,f,c
 24485  00D768  90D8               	bcf	status,0,c
 24486  00D76A  3631               	rlcf	??_USBStallEndpoint+2,f,c
 24487  00D76C  3632               	rlcf	??_USBStallEndpoint+3,f,c
 24488  00D76E  90D8               	bcf	status,0,c
 24489  00D770  3631               	rlcf	??_USBStallEndpoint+2,f,c
 24490  00D772  3632               	rlcf	??_USBStallEndpoint+3,f,c
 24491  00D774  0E00               	movlw	0
 24492  00D776  2431               	addwf	??_USBStallEndpoint+2,w,c
 24493  00D778  6E34               	movwf	USBStallEndpoint@p,c
 24494  00D77A  0E0D               	movlw	13
 24495  00D77C  2032               	addwfc	??_USBStallEndpoint+3,w,c
 24496  00D77E  6E35               	movwf	USBStallEndpoint@p+1,c
 24497                           
 24498                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 24499  00D780  C034  FFD9         	movff	USBStallEndpoint@p,fsr2l
 24500  00D784  C035  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 24501  00D788  0E00               	movlw	0
 24502  00D78A  84DB               	bsf	plusw2,2,c
 24503                           
 24504                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 24505  00D78C  C034  FFD9         	movff	USBStallEndpoint@p,fsr2l
 24506  00D790  C035  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 24507  00D794  0E00               	movlw	0
 24508  00D796  8EDB               	bsf	plusw2,7,c
 24509                           
 24510                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 24511  00D798  5033               	movf	USBStallEndpoint@ep,w,c
 24512  00D79A  0D04               	mullw	4
 24513  00D79C  CFF3 F02F          	movff	prodl,??_USBStallEndpoint
 24514  00D7A0  CFF4 F030          	movff	prodh,??_USBStallEndpoint+1
 24515  00D7A4  502E               	movf	USBStallEndpoint@dir,w,c
 24516  00D7A6  0D02               	mullw	2
 24517  00D7A8  50F3               	movf	prodl,w,c
 24518  00D7AA  262F               	addwf	??_USBStallEndpoint,f,c
 24519  00D7AC  50F4               	movf	prodh,w,c
 24520  00D7AE  2230               	addwfc	??_USBStallEndpoint+1,f,c
 24521  00D7B0  90D8               	bcf	status,0,c
 24522  00D7B2  362F               	rlcf	??_USBStallEndpoint,f,c
 24523  00D7B4  3630               	rlcf	??_USBStallEndpoint+1,f,c
 24524  00D7B6  90D8               	bcf	status,0,c
 24525  00D7B8  362F               	rlcf	??_USBStallEndpoint,f,c
 24526  00D7BA  3630               	rlcf	??_USBStallEndpoint+1,f,c
 24527  00D7BC  0E04               	movlw	4
 24528  00D7BE  262F               	addwf	??_USBStallEndpoint,f,c
 24529  00D7C0  0E00               	movlw	0
 24530  00D7C2  2230               	addwfc	??_USBStallEndpoint+1,f,c
 24531  00D7C4  0E00               	movlw	0
 24532  00D7C6  242F               	addwf	??_USBStallEndpoint,w,c
 24533  00D7C8  6E34               	movwf	USBStallEndpoint@p,c
 24534  00D7CA  0E0D               	movlw	13
 24535  00D7CC  2030               	addwfc	??_USBStallEndpoint+1,w,c
 24536  00D7CE  6E35               	movwf	USBStallEndpoint@p+1,c
 24537                           
 24538                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 24539  00D7D0  C034  FFD9         	movff	USBStallEndpoint@p,fsr2l
 24540  00D7D4  C035  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 24541  00D7D8  0E00               	movlw	0
 24542  00D7DA  84DB               	bsf	plusw2,2,c
 24543                           
 24544                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 24545  00D7DC  C034  FFD9         	movff	USBStallEndpoint@p,fsr2l
 24546  00D7E0  C035  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 24547  00D7E4  0E00               	movlw	0
 24548  00D7E6  8EDB               	bsf	plusw2,7,c
 24549  00D7E8  0012               	return	
 24550  00D7EA                     __end_of_USBStallEndpoint:
 24551                           	opt stack 0
 24552                           pclatu	equ	0xFFB
 24553                           pclath	equ	0xFFA
 24554                           tblptru	equ	0xFF8
 24555                           tblptrh	equ	0xFF7
 24556                           tblptrl	equ	0xFF6
 24557                           tablat	equ	0xFF5
 24558                           prodh	equ	0xFF4
 24559                           prodl	equ	0xFF3
 24560                           intcon	equ	0xFF2
 24561                           indf0	equ	0xFEF
 24562                           postinc0	equ	0xFEE
 24563                           fsr0h	equ	0xFEA
 24564                           fsr0l	equ	0xFE9
 24565                           wreg	equ	0xFE8
 24566                           indf1	equ	0xFE7
 24567                           postdec1	equ	0xFE5
 24568                           plusw1	equ	0xFE3
 24569                           fsr1h	equ	0xFE2
 24570                           fsr1l	equ	0xFE1
 24571                           indf2	equ	0xFDF
 24572                           postinc2	equ	0xFDE
 24573                           postdec2	equ	0xFDD
 24574                           plusw2	equ	0xFDB
 24575                           fsr2h	equ	0xFDA
 24576                           fsr2l	equ	0xFD9
 24577                           status	equ	0xFD8
 24578                           
 24579 ;; *************** function _APP_DeviceMSDInitialize *****************
 24580 ;; Defined at:
 24581 ;;		line 84 in file "app_device_msd.c"
 24582 ;; Parameters:    Size  Location     Type
 24583 ;;		None
 24584 ;; Auto vars:     Size  Location     Type
 24585 ;;		None
 24586 ;; Return value:  Size  Location     Type
 24587 ;;                  1    wreg      void 
 24588 ;; Registers used:
 24589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24590 ;; Tracked objects:
 24591 ;;		On entry : 0/0
 24592 ;;		On exit  : 0/0
 24593 ;;		Unchanged: 0/0
 24594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24599 ;;Total ram usage:        0 bytes
 24600 ;; Hardware stack levels used:    1
 24601 ;; Hardware stack levels required when called:    2
 24602 ;; This function calls:
 24603 ;;		_USBEnableEndpoint
 24604 ;;		_USBMSDInit
 24605 ;; This function is called by:
 24606 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24607 ;; This function uses a non-reentrant model
 24608 ;;
 24609                           
 24610                           	psect	text81
 24611  00F636                     __ptext81:
 24612                           	opt stack 0
 24613  00F636                     _APP_DeviceMSDInitialize:
 24614                           	opt stack 19
 24615                           
 24616                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 24617                           
 24618                           ;incstack = 0
 24619  00F636  0E1E               	movlw	30
 24620  00F638  6E36               	movwf	USBEnableEndpoint@options,c
 24621  00F63A  0E02               	movlw	2
 24622  00F63C  EC9C  F079         	call	_USBEnableEndpoint
 24623                           
 24624                           ;app_device_msd.c: 93: USBMSDInit();
 24625  00F640  ECED  F06A         	call	_USBMSDInit	;wreg free
 24626  00F644  0012               	return		;funcret
 24627  00F646                     __end_of_APP_DeviceMSDInitialize:
 24628                           	opt stack 0
 24629                           pclatu	equ	0xFFB
 24630                           pclath	equ	0xFFA
 24631                           tblptru	equ	0xFF8
 24632                           tblptrh	equ	0xFF7
 24633                           tblptrl	equ	0xFF6
 24634                           tablat	equ	0xFF5
 24635                           prodh	equ	0xFF4
 24636                           prodl	equ	0xFF3
 24637                           intcon	equ	0xFF2
 24638                           indf0	equ	0xFEF
 24639                           postinc0	equ	0xFEE
 24640                           fsr0h	equ	0xFEA
 24641                           fsr0l	equ	0xFE9
 24642                           wreg	equ	0xFE8
 24643                           indf1	equ	0xFE7
 24644                           postdec1	equ	0xFE5
 24645                           plusw1	equ	0xFE3
 24646                           fsr1h	equ	0xFE2
 24647                           fsr1l	equ	0xFE1
 24648                           indf2	equ	0xFDF
 24649                           postinc2	equ	0xFDE
 24650                           postdec2	equ	0xFDD
 24651                           plusw2	equ	0xFDB
 24652                           fsr2h	equ	0xFDA
 24653                           fsr2l	equ	0xFD9
 24654                           status	equ	0xFD8
 24655                           
 24656 ;; *************** function _USBMSDInit *****************
 24657 ;; Defined at:
 24658 ;;		line 142 in file "usb_device_msd.c"
 24659 ;; Parameters:    Size  Location     Type
 24660 ;;		None
 24661 ;; Auto vars:     Size  Location     Type
 24662 ;;		None
 24663 ;; Return value:  Size  Location     Type
 24664 ;;                  1    wreg      void 
 24665 ;; Registers used:
 24666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24667 ;; Tracked objects:
 24668 ;;		On entry : 0/0
 24669 ;;		On exit  : 0/0
 24670 ;;		Unchanged: 0/0
 24671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24674 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24675 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24676 ;;Total ram usage:        3 bytes
 24677 ;; Hardware stack levels used:    1
 24678 ;; Hardware stack levels required when called:    1
 24679 ;; This function calls:
 24680 ;;		_ExternalFlash_MediaDetect
 24681 ;;		_ExternalFlash_MediaInitialize
 24682 ;;		_ResetSenseData
 24683 ;;		_USBTransferOnePacket
 24684 ;; This function is called by:
 24685 ;;		_APP_DeviceMSDInitialize
 24686 ;; This function uses a non-reentrant model
 24687 ;;
 24688                           
 24689                           	psect	text82
 24690  00D5DA                     __ptext82:
 24691                           	opt stack 0
 24692  00D5DA                     _USBMSDInit:
 24693                           	opt stack 19
 24694                           
 24695                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 24696                           
 24697                           ;incstack = 0
 24698  00D5DA  0E00               	movlw	0
 24699  00D5DC  6E2E               	movwf	USBTransferOnePacket@dir,c
 24700  00D5DE  0E40               	movlw	64
 24701  00D5E0  6E2F               	movwf	USBTransferOnePacket@data,c
 24702  00D5E2  0E0D               	movlw	13
 24703  00D5E4  6E30               	movwf	USBTransferOnePacket@data+1,c
 24704  00D5E6  0E40               	movlw	64
 24705  00D5E8  6E31               	movwf	USBTransferOnePacket@len,c
 24706  00D5EA  0E02               	movlw	2
 24707  00D5EC  ECF5  F06B         	call	_USBTransferOnePacket
 24708  00D5F0  C02E  F015         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24709  00D5F4  C02F  F016         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24710  00D5F8  C00B  F013         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 24711  00D5FC  C00C  F014         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 24712                           
 24713                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 24714  00D600  0E00               	movlw	0
 24715  00D602  6E20               	movwf	_MSD_State,c
 24716                           
 24717                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 24718  00D604  681F               	setf	_MSDCommandState,c
 24719                           
 24720                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 24721  00D606  0E00               	movlw	0
 24722  00D608  0100               	movlb	0	; () banked
 24723  00D60A  6FFA               	movwf	_MSDReadState& (0+255),b
 24724                           
 24725                           ; BSR set to: 0
 24726                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 24727  00D60C  0E00               	movlw	0
 24728  00D60E  6E1E               	movwf	_MSDWriteState,c
 24729                           
 24730                           ; BSR set to: 0
 24731                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 24732  00D610  0E00               	movlw	0
 24733  00D612  6E1D               	movwf	_MSDHostNoData,c
 24734                           
 24735                           ; BSR set to: 0
 24736                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 24737  00D614  0E00               	movlw	0
 24738  00D616  0101               	movlb	1	; () banked
 24739  00D618  6F60               	movwf	_gblNumBLKS& (0+255),b
 24740  00D61A  0E00               	movlw	0
 24741  00D61C  6F61               	movwf	(_gblNumBLKS+1)& (0+255),b
 24742  00D61E  0E00               	movlw	0
 24743  00D620  6F62               	movwf	(_gblNumBLKS+2)& (0+255),b
 24744  00D622  0E00               	movlw	0
 24745  00D624  6F63               	movwf	(_gblNumBLKS+3)& (0+255),b
 24746                           
 24747                           ; BSR set to: 1
 24748                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 24749  00D626  0E00               	movlw	0
 24750  00D628  6F5C               	movwf	_gblBLKLen& (0+255),b
 24751  00D62A  0E00               	movlw	0
 24752  00D62C  6F5D               	movwf	(_gblBLKLen+1)& (0+255),b
 24753  00D62E  0E00               	movlw	0
 24754  00D630  6F5E               	movwf	(_gblBLKLen+2)& (0+255),b
 24755  00D632  0E00               	movlw	0
 24756  00D634  6F5F               	movwf	(_gblBLKLen+3)& (0+255),b
 24757                           
 24758                           ; BSR set to: 1
 24759                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 24760  00D636  0E01               	movlw	1
 24761  00D638  6F87               	movwf	_MSDCBWValid& (0+255),b
 24762                           
 24763                           ; BSR set to: 1
 24764                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 24765  00D63A  0E00               	movlw	0
 24766  00D63C  6F7F               	movwf	(_gblMediaPresent+1)& (0+255),b
 24767  00D63E  0E00               	movlw	0
 24768  00D640  6F7E               	movwf	_gblMediaPresent& (0+255),b
 24769                           
 24770                           ; BSR set to: 1
 24771                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 24772  00D642  0E00               	movlw	0
 24773  00D644  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 24774  00D646  D04A               	goto	i2l534
 24775  00D648                     
 24776                           ; BSR set to: 1
 24777                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 24778                           
 24779                           ; BSR set to: 1
 24780  00D648  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24781  00D64A  0D01               	mullw	1
 24782  00D64C  0EF8               	movlw	low _SoftDetach
 24783  00D64E  24F3               	addwf	prodl,w,c
 24784  00D650  6ED9               	movwf	fsr2l,c
 24785  00D652  0E00               	movlw	high _SoftDetach
 24786  00D654  20F4               	addwfc	prodh,w,c
 24787  00D656  6EDA               	movwf	fsr2h,c
 24788  00D658  0E00               	movlw	0
 24789  00D65A  6EDF               	movwf	indf2,c
 24790                           
 24791                           ; BSR set to: 1
 24792                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 24793  00D65C  C1A5  F02E         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 24794  00D660  C1A6  F02F         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 24795  00D664  EE21  F099         	lfsr	2,_LUN+9
 24796  00D668  D801               	call	i2u811_48
 24797  00D66A  D00A               	goto	i2u811_49
 24798  00D66C                     i2u811_48:
 24799  00D66C  0005               	push	
 24800  00D66E  6EFA               	movwf	pclath,c
 24801  00D670  50DE               	movf	postinc2,w,c
 24802  00D672  6EFD               	movwf	tosl,c
 24803  00D674  50DE               	movf	postinc2,w,c
 24804  00D676  6EFE               	movwf	tosh,c
 24805  00D678  50DE               	movf	postinc2,w,c
 24806  00D67A  6EFF               	movwf	tosu,c
 24807  00D67C  50FA               	movf	pclath,w,c
 24808  00D67E  0012               	return		;indir
 24809  00D680                     i2u811_49:
 24810  00D680  0900               	iorlw	0
 24811  00D682  B4D8               	btfsc	status,2,c
 24812  00D684  D027               	goto	i2l537
 24813                           
 24814                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 24815  00D686  C1A5  F02E         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 24816  00D68A  C1A6  F02F         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 24817  00D68E  D801               	call	i2u813_48
 24818  00D690  D00B               	goto	i2u813_49
 24819  00D692                     i2u813_48:
 24820  00D692  0005               	push	
 24821  00D694  6EFA               	movwf	pclath,c
 24822  00D696  0101               	movlb	1	; () banked
 24823  00D698  5190               	movf	_LUN& (0+255),w,b
 24824  00D69A  6EFD               	movwf	tosl,c
 24825  00D69C  5191               	movf	(_LUN+1)& (0+255),w,b
 24826  00D69E  6EFE               	movwf	tosh,c
 24827  00D6A0  5192               	movf	(_LUN+2)& (0+255),w,b
 24828  00D6A2  6EFF               	movwf	tosu,c
 24829  00D6A4  50FA               	movf	pclath,w,c
 24830  00D6A6  0012               	return		;indir
 24831  00D6A8                     i2u813_49:
 24832  00D6A8  502E               	movf	?_ExternalFlash_MediaInitialize,w,c
 24833  00D6AA  102F               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 24834  00D6AC  B4D8               	btfsc	status,2,c
 24835  00D6AE  D012               	goto	i2l537
 24836                           
 24837                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 24838  00D6B0  C10D  F039         	movff	_gblCBW+13,??_USBMSDInit
 24839  00D6B4  0E01               	movlw	1
 24840  00D6B6  6E3A               	movwf	(??_USBMSDInit+1)& (0+255),c
 24841  00D6B8  0E00               	movlw	0
 24842  00D6BA  6E3B               	movwf	(??_USBMSDInit+2)& (0+255),c
 24843  00D6BC  2A39               	incf	??_USBMSDInit,f,c
 24844  00D6BE  D003               	goto	i2u815_44
 24845  00D6C0                     i2u815_45:
 24846  00D6C0  90D8               	bcf	status,0,c
 24847  00D6C2  363A               	rlcf	??_USBMSDInit+1,f,c
 24848  00D6C4  363B               	rlcf	??_USBMSDInit+2,f,c
 24849  00D6C6                     i2u815_44:
 24850  00D6C6  2E39               	decfsz	??_USBMSDInit,f,c
 24851  00D6C8  D7FB               	goto	i2u815_45
 24852  00D6CA  503A               	movf	??_USBMSDInit+1,w,c
 24853  00D6CC  0101               	movlb	1	; () banked
 24854  00D6CE  137E               	iorwf	_gblMediaPresent& (0+255),f,b
 24855  00D6D0  503B               	movf	??_USBMSDInit+2,w,c
 24856  00D6D2  137F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 24857  00D6D4                     i2l537:
 24858                           
 24859                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 24860                           
 24861                           ; BSR set to: 1
 24862                           
 24863                           ; BSR set to: 1
 24864  00D6D4  EC27  F076         	call	_ResetSenseData	;wreg free
 24865  00D6D8  0101               	movlb	1	; () banked
 24866  00D6DA  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 24867  00D6DC                     i2l534:
 24868                           
 24869                           ; BSR set to: 1
 24870                           
 24871                           ; BSR set to: 1
 24872  00D6DC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 24873  00D6DE  A4D8               	btfss	status,2,c
 24874  00D6E0  0012               	return	
 24875  00D6E2  D7B2               	goto	i2l535
 24876  00D6E4                     __end_of_USBMSDInit:
 24877                           	opt stack 0
 24878                           tosu	equ	0xFFF
 24879                           tosh	equ	0xFFE
 24880                           tosl	equ	0xFFD
 24881                           pclatu	equ	0xFFB
 24882                           pclath	equ	0xFFA
 24883                           tblptru	equ	0xFF8
 24884                           tblptrh	equ	0xFF7
 24885                           tblptrl	equ	0xFF6
 24886                           tablat	equ	0xFF5
 24887                           prodh	equ	0xFF4
 24888                           prodl	equ	0xFF3
 24889                           intcon	equ	0xFF2
 24890                           indf0	equ	0xFEF
 24891                           postinc0	equ	0xFEE
 24892                           fsr0h	equ	0xFEA
 24893                           fsr0l	equ	0xFE9
 24894                           wreg	equ	0xFE8
 24895                           indf1	equ	0xFE7
 24896                           postdec1	equ	0xFE5
 24897                           plusw1	equ	0xFE3
 24898                           fsr1h	equ	0xFE2
 24899                           fsr1l	equ	0xFE1
 24900                           indf2	equ	0xFDF
 24901                           postinc2	equ	0xFDE
 24902                           postdec2	equ	0xFDD
 24903                           plusw2	equ	0xFDB
 24904                           fsr2h	equ	0xFDA
 24905                           fsr2l	equ	0xFD9
 24906                           status	equ	0xFD8
 24907                           
 24908 ;; *************** function _ResetSenseData *****************
 24909 ;; Defined at:
 24910 ;;		line 1373 in file "usb_device_msd.c"
 24911 ;; Parameters:    Size  Location     Type
 24912 ;;		None
 24913 ;; Auto vars:     Size  Location     Type
 24914 ;;		None
 24915 ;; Return value:  Size  Location     Type
 24916 ;;                  1    wreg      void 
 24917 ;; Registers used:
 24918 ;;		wreg, status,2
 24919 ;; Tracked objects:
 24920 ;;		On entry : 0/0
 24921 ;;		On exit  : 0/0
 24922 ;;		Unchanged: 0/0
 24923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24928 ;;Total ram usage:        0 bytes
 24929 ;; Hardware stack levels used:    1
 24930 ;; This function calls:
 24931 ;;		Nothing
 24932 ;; This function is called by:
 24933 ;;		_USBMSDInit
 24934 ;;		_MSDProcessCommandMediaAbsent
 24935 ;;		_MSDProcessCommandMediaPresent
 24936 ;;		_MSDErrorHandler
 24937 ;; This function uses a non-reentrant model
 24938 ;;
 24939                           
 24940                           	psect	text83
 24941  00EC4E                     __ptext83:
 24942                           	opt stack 0
 24943  00EC4E                     _ResetSenseData:
 24944                           	opt stack 19
 24945                           
 24946                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 24947                           
 24948                           ; BSR set to: 1
 24949                           ;incstack = 0
 24950  00EC4E  0101               	movlb	1	; () banked
 24951  00EC50  9133               	bcf	_gblSenseData& (0+255),0,b
 24952  00EC52  9333               	bcf	_gblSenseData& (0+255),1,b
 24953  00EC54  9533               	bcf	_gblSenseData& (0+255),2,b
 24954  00EC56  9733               	bcf	_gblSenseData& (0+255),3,b
 24955  00EC58  8933               	bsf	_gblSenseData& (0+255),4,b
 24956  00EC5A  8B33               	bsf	_gblSenseData& (0+255),5,b
 24957  00EC5C  8D33               	bsf	_gblSenseData& (0+255),6,b
 24958                           
 24959                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 24960  00EC5E  9F33               	bcf	_gblSenseData& (0+255),7,b
 24961                           
 24962                           ; BSR set to: 1
 24963                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 24964  00EC60  0E00               	movlw	0
 24965  00EC62  6F34               	movwf	(_gblSenseData+1)& (0+255),b
 24966                           
 24967                           ; BSR set to: 1
 24968                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 24969  00EC64  9135               	bcf	(_gblSenseData+2)& (0+255),0,b
 24970  00EC66  9335               	bcf	(_gblSenseData+2)& (0+255),1,b
 24971  00EC68  9535               	bcf	(_gblSenseData+2)& (0+255),2,b
 24972  00EC6A  9735               	bcf	(_gblSenseData+2)& (0+255),3,b
 24973                           
 24974                           ; BSR set to: 1
 24975                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 24976  00EC6C  9B35               	bcf	(_gblSenseData+2)& (0+255),5,b
 24977                           
 24978                           ; BSR set to: 1
 24979                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 24980  00EC6E  9D35               	bcf	(_gblSenseData+2)& (0+255),6,b
 24981                           
 24982                           ; BSR set to: 1
 24983                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 24984  00EC70  9F35               	bcf	(_gblSenseData+2)& (0+255),7,b
 24985                           
 24986                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 24987  00EC72  0E00               	movlw	0
 24988  00EC74  6F36               	movwf	(_gblSenseData+3)& (0+255),b
 24989                           
 24990                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 24991  00EC76  0E00               	movlw	0
 24992  00EC78  6F37               	movwf	(_gblSenseData+4)& (0+255),b
 24993                           
 24994                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 24995  00EC7A  0E00               	movlw	0
 24996  00EC7C  6F38               	movwf	(_gblSenseData+5)& (0+255),b
 24997                           
 24998                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 24999  00EC7E  0E00               	movlw	0
 25000  00EC80  6F39               	movwf	(_gblSenseData+6)& (0+255),b
 25001                           
 25002                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 25003  00EC82  0E0A               	movlw	10
 25004  00EC84  6F3A               	movwf	(_gblSenseData+7)& (0+255),b
 25005                           
 25006                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 25007  00EC86  0E00               	movlw	0
 25008  00EC88  6F3B               	movwf	(_gblSenseData+8)& (0+255),b
 25009  00EC8A  0E00               	movlw	0
 25010  00EC8C  6F3C               	movwf	(_gblSenseData+9)& (0+255),b
 25011  00EC8E  0E00               	movlw	0
 25012  00EC90  6F3D               	movwf	(_gblSenseData+10)& (0+255),b
 25013  00EC92  0E00               	movlw	0
 25014  00EC94  6F3E               	movwf	(_gblSenseData+11)& (0+255),b
 25015                           
 25016                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 25017  00EC96  0E00               	movlw	0
 25018  00EC98  6F3F               	movwf	(_gblSenseData+12)& (0+255),b
 25019                           
 25020                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 25021  00EC9A  0E00               	movlw	0
 25022  00EC9C  6F40               	movwf	(_gblSenseData+13)& (0+255),b
 25023                           
 25024                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 25025  00EC9E  0E00               	movlw	0
 25026  00ECA0  6F41               	movwf	(_gblSenseData+14)& (0+255),b
 25027                           
 25028                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 25029  00ECA2  0E00               	movlw	0
 25030  00ECA4  6F42               	movwf	(_gblSenseData+15)& (0+255),b
 25031                           
 25032                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 25033  00ECA6  0E00               	movlw	0
 25034  00ECA8  6F43               	movwf	(_gblSenseData+16)& (0+255),b
 25035                           
 25036                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 25037  00ECAA  0E00               	movlw	0
 25038  00ECAC  6F44               	movwf	(_gblSenseData+17)& (0+255),b
 25039                           
 25040                           ; BSR set to: 1
 25041  00ECAE  0012               	return		;funcret
 25042  00ECB0                     __end_of_ResetSenseData:
 25043                           	opt stack 0
 25044                           tosu	equ	0xFFF
 25045                           tosh	equ	0xFFE
 25046                           tosl	equ	0xFFD
 25047                           pclatu	equ	0xFFB
 25048                           pclath	equ	0xFFA
 25049                           tblptru	equ	0xFF8
 25050                           tblptrh	equ	0xFF7
 25051                           tblptrl	equ	0xFF6
 25052                           tablat	equ	0xFF5
 25053                           prodh	equ	0xFF4
 25054                           prodl	equ	0xFF3
 25055                           intcon	equ	0xFF2
 25056                           indf0	equ	0xFEF
 25057                           postinc0	equ	0xFEE
 25058                           fsr0h	equ	0xFEA
 25059                           fsr0l	equ	0xFE9
 25060                           wreg	equ	0xFE8
 25061                           indf1	equ	0xFE7
 25062                           postdec1	equ	0xFE5
 25063                           plusw1	equ	0xFE3
 25064                           fsr1h	equ	0xFE2
 25065                           fsr1l	equ	0xFE1
 25066                           indf2	equ	0xFDF
 25067                           postinc2	equ	0xFDE
 25068                           postdec2	equ	0xFDD
 25069                           plusw2	equ	0xFDB
 25070                           fsr2h	equ	0xFDA
 25071                           fsr2l	equ	0xFD9
 25072                           status	equ	0xFD8
 25073                           
 25074 ;; *************** function _ExternalFlash_MediaInitialize *****************
 25075 ;; Defined at:
 25076 ;;		line 10 in file "external_flash.c"
 25077 ;; Parameters:    Size  Location     Type
 25078 ;;  config          2    0[COMRAM] PTR void 
 25079 ;;		 -> NULL(0), 
 25080 ;; Auto vars:     Size  Location     Type
 25081 ;;		None
 25082 ;; Return value:  Size  Location     Type
 25083 ;;                  2    0[COMRAM] PTR struct .
 25084 ;; Registers used:
 25085 ;;		wreg, status,2, status,0
 25086 ;; Tracked objects:
 25087 ;;		On entry : 0/0
 25088 ;;		On exit  : 0/0
 25089 ;;		Unchanged: 0/0
 25090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25095 ;;Total ram usage:        2 bytes
 25096 ;; Hardware stack levels used:    1
 25097 ;; This function calls:
 25098 ;;		Nothing
 25099 ;; This function is called by:
 25100 ;;		_USBMSDInit
 25101 ;;		_MSDProcessCommand
 25102 ;; This function uses a non-reentrant model
 25103 ;;
 25104                           
 25105                           	psect	text84
 25106  00F5F0                     __ptext84:
 25107                           	opt stack 0
 25108  00F5F0                     _ExternalFlash_MediaInitialize:
 25109                           	opt stack 19
 25110                           
 25111                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 25112                           
 25113                           ; BSR set to: 1
 25114                           ;incstack = 0
 25115  00F5F0  0101               	movlb	1	; () banked
 25116  00F5F2  818A               	bsf	(_mediaInformation+1)& (0+255),0,b
 25117                           
 25118                           ; BSR set to: 1
 25119                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 25120  00F5F4  0E02               	movlw	2
 25121  00F5F6  6F8C               	movwf	(_mediaInformation+3)& (0+255),b
 25122  00F5F8  0E00               	movlw	0
 25123  00F5FA  6F8B               	movwf	(_mediaInformation+2)& (0+255),b
 25124                           
 25125                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 25126  00F5FC  0E00               	movlw	0
 25127  00F5FE  6F89               	movwf	_mediaInformation& (0+255),b
 25128                           
 25129                           ; BSR set to: 1
 25130                           ;external_flash.c: 15: return &mediaInformation;
 25131  00F600  0E89               	movlw	low _mediaInformation
 25132  00F602  6E2E               	movwf	?_ExternalFlash_MediaInitialize,c
 25133  00F604  0E01               	movlw	high _mediaInformation
 25134  00F606  6E2F               	movwf	?_ExternalFlash_MediaInitialize+1,c
 25135  00F608  0012               	return	
 25136  00F60A                     __end_of_ExternalFlash_MediaInitialize:
 25137                           	opt stack 0
 25138                           tosu	equ	0xFFF
 25139                           tosh	equ	0xFFE
 25140                           tosl	equ	0xFFD
 25141                           pclatu	equ	0xFFB
 25142                           pclath	equ	0xFFA
 25143                           tblptru	equ	0xFF8
 25144                           tblptrh	equ	0xFF7
 25145                           tblptrl	equ	0xFF6
 25146                           tablat	equ	0xFF5
 25147                           prodh	equ	0xFF4
 25148                           prodl	equ	0xFF3
 25149                           intcon	equ	0xFF2
 25150                           indf0	equ	0xFEF
 25151                           postinc0	equ	0xFEE
 25152                           fsr0h	equ	0xFEA
 25153                           fsr0l	equ	0xFE9
 25154                           wreg	equ	0xFE8
 25155                           indf1	equ	0xFE7
 25156                           postdec1	equ	0xFE5
 25157                           plusw1	equ	0xFE3
 25158                           fsr1h	equ	0xFE2
 25159                           fsr1l	equ	0xFE1
 25160                           indf2	equ	0xFDF
 25161                           postinc2	equ	0xFDE
 25162                           postdec2	equ	0xFDD
 25163                           plusw2	equ	0xFDB
 25164                           fsr2h	equ	0xFDA
 25165                           fsr2l	equ	0xFD9
 25166                           status	equ	0xFD8
 25167                           
 25168 ;; *************** function _ExternalFlash_MediaDetect *****************
 25169 ;; Defined at:
 25170 ;;		line 29 in file "external_flash.c"
 25171 ;; Parameters:    Size  Location     Type
 25172 ;;  config          2    0[COMRAM] PTR void 
 25173 ;;		 -> NULL(0), 
 25174 ;; Auto vars:     Size  Location     Type
 25175 ;;		None
 25176 ;; Return value:  Size  Location     Type
 25177 ;;                  1    wreg      unsigned char 
 25178 ;; Registers used:
 25179 ;;		wreg
 25180 ;; Tracked objects:
 25181 ;;		On entry : 0/0
 25182 ;;		On exit  : 0/0
 25183 ;;		Unchanged: 0/0
 25184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25189 ;;Total ram usage:        2 bytes
 25190 ;; Hardware stack levels used:    1
 25191 ;; This function calls:
 25192 ;;		Nothing
 25193 ;; This function is called by:
 25194 ;;		_USBMSDInit
 25195 ;;		_MSDProcessCommand
 25196 ;; This function uses a non-reentrant model
 25197 ;;
 25198                           
 25199                           	psect	text85
 25200  00F67A                     __ptext85:
 25201                           	opt stack 0
 25202  00F67A                     _ExternalFlash_MediaDetect:
 25203                           	opt stack 19
 25204                           
 25205                           ;external_flash.c: 31: return 1;
 25206                           
 25207                           ; BSR set to: 1
 25208                           ;incstack = 0
 25209  00F67A  0E01               	movlw	1
 25210  00F67C  0012               	return	
 25211  00F67E                     __end_of_ExternalFlash_MediaDetect:
 25212                           	opt stack 0
 25213                           tosu	equ	0xFFF
 25214                           tosh	equ	0xFFE
 25215                           tosl	equ	0xFFD
 25216                           pclatu	equ	0xFFB
 25217                           pclath	equ	0xFFA
 25218                           tblptru	equ	0xFF8
 25219                           tblptrh	equ	0xFF7
 25220                           tblptrl	equ	0xFF6
 25221                           tablat	equ	0xFF5
 25222                           prodh	equ	0xFF4
 25223                           prodl	equ	0xFF3
 25224                           intcon	equ	0xFF2
 25225                           indf0	equ	0xFEF
 25226                           postinc0	equ	0xFEE
 25227                           fsr0h	equ	0xFEA
 25228                           fsr0l	equ	0xFE9
 25229                           wreg	equ	0xFE8
 25230                           indf1	equ	0xFE7
 25231                           postdec1	equ	0xFE5
 25232                           plusw1	equ	0xFE3
 25233                           fsr1h	equ	0xFE2
 25234                           fsr1l	equ	0xFE1
 25235                           indf2	equ	0xFDF
 25236                           postinc2	equ	0xFDE
 25237                           postdec2	equ	0xFDD
 25238                           plusw2	equ	0xFDB
 25239                           fsr2h	equ	0xFDA
 25240                           fsr2l	equ	0xFD9
 25241                           status	equ	0xFD8
 25242                           
 25243 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 25244 ;; Defined at:
 25245 ;;		line 46 in file "app_device_custom_hid.c"
 25246 ;; Parameters:    Size  Location     Type
 25247 ;;		None
 25248 ;; Auto vars:     Size  Location     Type
 25249 ;;		None
 25250 ;; Return value:  Size  Location     Type
 25251 ;;                  1    wreg      void 
 25252 ;; Registers used:
 25253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25254 ;; Tracked objects:
 25255 ;;		On entry : 0/0
 25256 ;;		On exit  : 0/0
 25257 ;;		Unchanged: 0/0
 25258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25263 ;;Total ram usage:        0 bytes
 25264 ;; Hardware stack levels used:    1
 25265 ;; Hardware stack levels required when called:    2
 25266 ;; This function calls:
 25267 ;;		_USBEnableEndpoint
 25268 ;;		_USBTransferOnePacket
 25269 ;; This function is called by:
 25270 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25271 ;; This function uses a non-reentrant model
 25272 ;;
 25273                           
 25274                           	psect	text86
 25275  00F418                     __ptext86:
 25276                           	opt stack 0
 25277  00F418                     _APP_DeviceCustomHIDInitialize:
 25278                           	opt stack 19
 25279                           
 25280                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 25281                           
 25282                           ;incstack = 0
 25283  00F418  0E00               	movlw	0
 25284  00F41A  0101               	movlb	1	; () banked
 25285  00F41C  6F7A               	movwf	_USBInHandle& (0+255),b
 25286  00F41E  0E00               	movlw	0
 25287  00F420  6F7B               	movwf	(_USBInHandle+1)& (0+255),b
 25288                           
 25289                           ; BSR set to: 1
 25290                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 25291  00F422  0E1E               	movlw	30
 25292  00F424  6E36               	movwf	USBEnableEndpoint@options,c
 25293  00F426  0E01               	movlw	1
 25294  00F428  EC9C  F079         	call	_USBEnableEndpoint
 25295                           
 25296                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 25297  00F42C  0E00               	movlw	0
 25298  00F42E  6E2E               	movwf	USBTransferOnePacket@dir,c
 25299  00F430  0E78               	movlw	low _ReceivedDataBuffer
 25300  00F432  6E2F               	movwf	USBTransferOnePacket@data,c
 25301  00F434  0E02               	movlw	high _ReceivedDataBuffer
 25302  00F436  6E30               	movwf	USBTransferOnePacket@data+1,c
 25303  00F438  0E40               	movlw	64
 25304  00F43A  6E31               	movwf	USBTransferOnePacket@len,c
 25305  00F43C  0E01               	movlw	1
 25306  00F43E  ECF5  F06B         	call	_USBTransferOnePacket
 25307  00F442  C02E  F17C         	movff	?_USBTransferOnePacket,_USBOutHandle
 25308  00F446  C02F  F17D         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 25309  00F44A  0012               	return		;funcret
 25310  00F44C                     __end_of_APP_DeviceCustomHIDInitialize:
 25311                           	opt stack 0
 25312                           tosu	equ	0xFFF
 25313                           tosh	equ	0xFFE
 25314                           tosl	equ	0xFFD
 25315                           pclatu	equ	0xFFB
 25316                           pclath	equ	0xFFA
 25317                           tblptru	equ	0xFF8
 25318                           tblptrh	equ	0xFF7
 25319                           tblptrl	equ	0xFF6
 25320                           tablat	equ	0xFF5
 25321                           prodh	equ	0xFF4
 25322                           prodl	equ	0xFF3
 25323                           intcon	equ	0xFF2
 25324                           indf0	equ	0xFEF
 25325                           postinc0	equ	0xFEE
 25326                           fsr0h	equ	0xFEA
 25327                           fsr0l	equ	0xFE9
 25328                           wreg	equ	0xFE8
 25329                           indf1	equ	0xFE7
 25330                           postdec1	equ	0xFE5
 25331                           plusw1	equ	0xFE3
 25332                           fsr1h	equ	0xFE2
 25333                           fsr1l	equ	0xFE1
 25334                           indf2	equ	0xFDF
 25335                           postinc2	equ	0xFDE
 25336                           postdec2	equ	0xFDD
 25337                           plusw2	equ	0xFDB
 25338                           fsr2h	equ	0xFDA
 25339                           fsr2l	equ	0xFD9
 25340                           status	equ	0xFD8
 25341                           
 25342 ;; *************** function _USBTransferOnePacket *****************
 25343 ;; Defined at:
 25344 ;;		line 995 in file "usb_device.c"
 25345 ;; Parameters:    Size  Location     Type
 25346 ;;  ep              1    wreg     unsigned char 
 25347 ;;  dir             1    0[COMRAM] unsigned char 
 25348 ;;  data            2    1[COMRAM] PTR unsigned char 
 25349 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 25350 ;;		 -> msd_cbw(31), NULL(0), 
 25351 ;;  len             1    3[COMRAM] unsigned char 
 25352 ;; Auto vars:     Size  Location     Type
 25353 ;;  ep              1    8[COMRAM] unsigned char 
 25354 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 25355 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 25356 ;; Return value:  Size  Location     Type
 25357 ;;                  2    0[COMRAM] PTR void 
 25358 ;; Registers used:
 25359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25360 ;; Tracked objects:
 25361 ;;		On entry : 0/0
 25362 ;;		On exit  : 0/0
 25363 ;;		Unchanged: 0/0
 25364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25366 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25367 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25368 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25369 ;;Total ram usage:       11 bytes
 25370 ;; Hardware stack levels used:    1
 25371 ;; This function calls:
 25372 ;;		Nothing
 25373 ;; This function is called by:
 25374 ;;		_USBMSDInit
 25375 ;;		_USBCheckMSDRequest
 25376 ;;		_MSDTransferTerminated
 25377 ;;		_APP_DeviceCustomHIDInitialize
 25378 ;;		_MSDTasks
 25379 ;;		_MSDProcessCommandMediaPresent
 25380 ;;		_MSDReadHandler
 25381 ;;		_MSDWriteHandler
 25382 ;;		_APP_DeviceCustomHIDTasks
 25383 ;; This function uses a non-reentrant model
 25384 ;;
 25385                           
 25386                           	psect	text87
 25387  00D7EA                     __ptext87:
 25388                           	opt stack 0
 25389  00D7EA                     _USBTransferOnePacket:
 25390                           	opt stack 20
 25391                           
 25392                           ;incstack = 0
 25393                           ;USBTransferOnePacket@ep stored from wreg
 25394  00D7EA  6E36               	movwf	USBTransferOnePacket@ep,c
 25395                           
 25396                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 25397  00D7EC  502E               	movf	USBTransferOnePacket@dir,w,c
 25398  00D7EE  B4D8               	btfsc	status,2,c
 25399  00D7F0  D007               	goto	i2l184
 25400                           
 25401                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 25402  00D7F2  5036               	movf	USBTransferOnePacket@ep,w,c
 25403  00D7F4  0D02               	mullw	2
 25404  00D7F6  0E07               	movlw	low _pBDTEntryIn
 25405  00D7F8  24F3               	addwf	prodl,w,c
 25406  00D7FA  6ED9               	movwf	fsr2l,c
 25407  00D7FC  0E00               	movlw	high _pBDTEntryIn
 25408  00D7FE  D006               	goto	L51
 25409  00D800                     i2l184:
 25410                           
 25411                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 25412  00D800  5036               	movf	USBTransferOnePacket@ep,w,c
 25413  00D802  0D02               	mullw	2
 25414  00D804  0E4E               	movlw	low _pBDTEntryOut
 25415  00D806  24F3               	addwf	prodl,w,c
 25416  00D808  6ED9               	movwf	fsr2l,c
 25417  00D80A  0E01               	movlw	high _pBDTEntryOut
 25418  00D80C                     L51:
 25419  00D80C  20F4               	addwfc	prodh,w,c
 25420  00D80E  6EDA               	movwf	fsr2h,c
 25421  00D810  CFDE F037          	movff	postinc2,USBTransferOnePacket@handle
 25422  00D814  CFDD F038          	movff	postdec2,USBTransferOnePacket@handle+1
 25423                           
 25424                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 25425  00D818  5037               	movf	USBTransferOnePacket@handle,w,c
 25426  00D81A  1038               	iorwf	USBTransferOnePacket@handle+1,w,c
 25427  00D81C  A4D8               	btfss	status,2,c
 25428  00D81E  D005               	goto	i2l186
 25429                           
 25430                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 25431  00D820  0E00               	movlw	0
 25432  00D822  6E2E               	movwf	?_USBTransferOnePacket,c
 25433  00D824  0E00               	movlw	0
 25434  00D826  6E2F               	movwf	?_USBTransferOnePacket+1,c
 25435  00D828  0012               	return	
 25436  00D82A                     i2l186:
 25437                           
 25438                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 25439  00D82A  EE20 F002          	lfsr	2,2
 25440  00D82E  5037               	movf	USBTransferOnePacket@handle,w,c
 25441  00D830  26D9               	addwf	fsr2l,f,c
 25442  00D832  5038               	movf	USBTransferOnePacket@handle+1,w,c
 25443  00D834  22DA               	addwfc	fsr2h,f,c
 25444  00D836  C02F  FFDE         	movff	USBTransferOnePacket@data,postinc2
 25445  00D83A  C030  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 25446                           
 25447                           ;usb_device.c: 1030: handle->CNT = len;
 25448  00D83E  EE20 F001          	lfsr	2,1
 25449  00D842  5037               	movf	USBTransferOnePacket@handle,w,c
 25450  00D844  26D9               	addwf	fsr2l,f,c
 25451  00D846  5038               	movf	USBTransferOnePacket@handle+1,w,c
 25452  00D848  22DA               	addwfc	fsr2h,f,c
 25453  00D84A  C031  FFDF         	movff	USBTransferOnePacket@len,indf2
 25454                           
 25455                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 25456  00D84E  C037  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25457  00D852  C038  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25458  00D856  0E40               	movlw	64
 25459  00D858  16DF               	andwf	indf2,f,c
 25460                           
 25461                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 25462  00D85A  C037  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25463  00D85E  C038  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25464  00D862  0E00               	movlw	0
 25465  00D864  86DB               	bsf	plusw2,3,c
 25466                           
 25467                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 25468  00D866  C037  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 25469  00D86A  C038  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 25470  00D86E  0E00               	movlw	0
 25471  00D870  8EDB               	bsf	plusw2,7,c
 25472                           
 25473                           ;usb_device.c: 1036: if(dir != 0)
 25474  00D872  502E               	movf	USBTransferOnePacket@dir,w,c
 25475  00D874  B4D8               	btfsc	status,2,c
 25476  00D876  D018               	goto	i2l188
 25477                           
 25478                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 25479  00D878  5036               	movf	USBTransferOnePacket@ep,w,c
 25480  00D87A  0D02               	mullw	2
 25481  00D87C  0E07               	movlw	low _pBDTEntryIn
 25482  00D87E  24F3               	addwf	prodl,w,c
 25483  00D880  6ED9               	movwf	fsr2l,c
 25484  00D882  0E00               	movlw	high _pBDTEntryIn
 25485  00D884  20F4               	addwfc	prodh,w,c
 25486  00D886  6EDA               	movwf	fsr2h,c
 25487  00D888  CFDE F032          	movff	postinc2,??_USBTransferOnePacket
 25488  00D88C  CFDD F033          	movff	postdec2,??_USBTransferOnePacket+1
 25489  00D890  0E04               	movlw	4
 25490  00D892  1832               	xorwf	??_USBTransferOnePacket,w,c
 25491  00D894  6E34               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 25492  00D896  5033               	movf	??_USBTransferOnePacket+1,w,c
 25493  00D898  6E35               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 25494  00D89A  5036               	movf	USBTransferOnePacket@ep,w,c
 25495  00D89C  0D02               	mullw	2
 25496  00D89E  0E07               	movlw	low _pBDTEntryIn
 25497  00D8A0  24F3               	addwf	prodl,w,c
 25498  00D8A2  6ED9               	movwf	fsr2l,c
 25499  00D8A4  0E00               	movlw	high _pBDTEntryIn
 25500  00D8A6  D017               	goto	L52
 25501  00D8A8                     i2l188:
 25502                           
 25503                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 25504  00D8A8  5036               	movf	USBTransferOnePacket@ep,w,c
 25505  00D8AA  0D02               	mullw	2
 25506  00D8AC  0E4E               	movlw	low _pBDTEntryOut
 25507  00D8AE  24F3               	addwf	prodl,w,c
 25508  00D8B0  6ED9               	movwf	fsr2l,c
 25509  00D8B2  0E01               	movlw	high _pBDTEntryOut
 25510  00D8B4  20F4               	addwfc	prodh,w,c
 25511  00D8B6  6EDA               	movwf	fsr2h,c
 25512  00D8B8  CFDE F032          	movff	postinc2,??_USBTransferOnePacket
 25513  00D8BC  CFDD F033          	movff	postdec2,??_USBTransferOnePacket+1
 25514  00D8C0  0E04               	movlw	4
 25515  00D8C2  1832               	xorwf	??_USBTransferOnePacket,w,c
 25516  00D8C4  6E34               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 25517  00D8C6  5033               	movf	??_USBTransferOnePacket+1,w,c
 25518  00D8C8  6E35               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 25519  00D8CA  5036               	movf	USBTransferOnePacket@ep,w,c
 25520  00D8CC  0D02               	mullw	2
 25521  00D8CE  0E4E               	movlw	low _pBDTEntryOut
 25522  00D8D0  24F3               	addwf	prodl,w,c
 25523  00D8D2  6ED9               	movwf	fsr2l,c
 25524  00D8D4  0E01               	movlw	high _pBDTEntryOut
 25525  00D8D6                     L52:
 25526  00D8D6  20F4               	addwfc	prodh,w,c
 25527  00D8D8  6EDA               	movwf	fsr2h,c
 25528  00D8DA  C034  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 25529  00D8DE  C035  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 25530                           
 25531                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 25532  00D8E2  C037  F02E         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 25533  00D8E6  C038  F02F         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 25534  00D8EA  0012               	return	
 25535  00D8EC                     __end_of_USBTransferOnePacket:
 25536                           	opt stack 0
 25537                           tosu	equ	0xFFF
 25538                           tosh	equ	0xFFE
 25539                           tosl	equ	0xFFD
 25540                           pclatu	equ	0xFFB
 25541                           pclath	equ	0xFFA
 25542                           tblptru	equ	0xFF8
 25543                           tblptrh	equ	0xFF7
 25544                           tblptrl	equ	0xFF6
 25545                           tablat	equ	0xFF5
 25546                           prodh	equ	0xFF4
 25547                           prodl	equ	0xFF3
 25548                           intcon	equ	0xFF2
 25549                           indf0	equ	0xFEF
 25550                           postinc0	equ	0xFEE
 25551                           fsr0h	equ	0xFEA
 25552                           fsr0l	equ	0xFE9
 25553                           wreg	equ	0xFE8
 25554                           indf1	equ	0xFE7
 25555                           postdec1	equ	0xFE5
 25556                           plusw1	equ	0xFE3
 25557                           fsr1h	equ	0xFE2
 25558                           fsr1l	equ	0xFE1
 25559                           indf2	equ	0xFDF
 25560                           postinc2	equ	0xFDE
 25561                           postdec2	equ	0xFDD
 25562                           plusw2	equ	0xFDB
 25563                           fsr2h	equ	0xFDA
 25564                           fsr2l	equ	0xFD9
 25565                           status	equ	0xFD8
 25566                           
 25567 ;; *************** function _USBEnableEndpoint *****************
 25568 ;; Defined at:
 25569 ;;		line 878 in file "usb_device.c"
 25570 ;; Parameters:    Size  Location     Type
 25571 ;;  ep              1    wreg     unsigned char 
 25572 ;;  options         1    8[COMRAM] unsigned char 
 25573 ;; Auto vars:     Size  Location     Type
 25574 ;;  ep              1   11[COMRAM] unsigned char 
 25575 ;;  p               2    9[COMRAM] PTR unsigned char 
 25576 ;;		 -> UEP0(1), 
 25577 ;; Return value:  Size  Location     Type
 25578 ;;                  1    wreg      void 
 25579 ;; Registers used:
 25580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25581 ;; Tracked objects:
 25582 ;;		On entry : 0/0
 25583 ;;		On exit  : 0/0
 25584 ;;		Unchanged: 0/0
 25585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25586 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25589 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25590 ;;Total ram usage:        4 bytes
 25591 ;; Hardware stack levels used:    1
 25592 ;; Hardware stack levels required when called:    1
 25593 ;; This function calls:
 25594 ;;		_USBConfigureEndpoint
 25595 ;; This function is called by:
 25596 ;;		_APP_DeviceCustomHIDInitialize
 25597 ;;		_APP_DeviceMSDInitialize
 25598 ;; This function uses a non-reentrant model
 25599 ;;
 25600                           
 25601                           	psect	text88
 25602  00F338                     __ptext88:
 25603                           	opt stack 0
 25604  00F338                     _USBEnableEndpoint:
 25605                           	opt stack 19
 25606                           
 25607                           ;incstack = 0
 25608                           ;USBEnableEndpoint@ep stored from wreg
 25609  00F338  6E39               	movwf	USBEnableEndpoint@ep,c
 25610                           
 25611                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 25612  00F33A  A436               	btfss	USBEnableEndpoint@options,2,c
 25613  00F33C  D005               	goto	i2l179
 25614                           
 25615                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 25616  00F33E  0E00               	movlw	0
 25617  00F340  6E2E               	movwf	USBConfigureEndpoint@direction,c
 25618  00F342  5039               	movf	USBEnableEndpoint@ep,w,c
 25619  00F344  ECB8  F073         	call	_USBConfigureEndpoint
 25620  00F348                     i2l179:
 25621                           
 25622                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 25623  00F348  A236               	btfss	USBEnableEndpoint@options,1,c
 25624  00F34A  D005               	goto	i2l180
 25625                           
 25626                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 25627  00F34C  0E01               	movlw	1
 25628  00F34E  6E2E               	movwf	USBConfigureEndpoint@direction,c
 25629  00F350  5039               	movf	USBEnableEndpoint@ep,w,c
 25630  00F352  ECB8  F073         	call	_USBConfigureEndpoint
 25631  00F356                     i2l180:
 25632                           
 25633                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 25634  00F356  5039               	movf	USBEnableEndpoint@ep,w,c
 25635  00F358  0D01               	mullw	1
 25636  00F35A  0E26               	movlw	38
 25637  00F35C  24F3               	addwf	prodl,w,c
 25638  00F35E  6E37               	movwf	USBEnableEndpoint@p,c
 25639  00F360  0E0F               	movlw	15
 25640  00F362  20F4               	addwfc	prodh,w,c
 25641  00F364  6E38               	movwf	USBEnableEndpoint@p+1,c
 25642                           
 25643                           ;usb_device.c: 901: *p = options;
 25644  00F366  C037  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 25645  00F36A  C038  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 25646  00F36E  C036  FFDF         	movff	USBEnableEndpoint@options,indf2
 25647  00F372  0012               	return		;funcret
 25648  00F374                     __end_of_USBEnableEndpoint:
 25649                           	opt stack 0
 25650                           tosu	equ	0xFFF
 25651                           tosh	equ	0xFFE
 25652                           tosl	equ	0xFFD
 25653                           pclatu	equ	0xFFB
 25654                           pclath	equ	0xFFA
 25655                           tblptru	equ	0xFF8
 25656                           tblptrh	equ	0xFF7
 25657                           tblptrl	equ	0xFF6
 25658                           tablat	equ	0xFF5
 25659                           prodh	equ	0xFF4
 25660                           prodl	equ	0xFF3
 25661                           intcon	equ	0xFF2
 25662                           indf0	equ	0xFEF
 25663                           postinc0	equ	0xFEE
 25664                           fsr0h	equ	0xFEA
 25665                           fsr0l	equ	0xFE9
 25666                           wreg	equ	0xFE8
 25667                           indf1	equ	0xFE7
 25668                           postdec1	equ	0xFE5
 25669                           plusw1	equ	0xFE3
 25670                           fsr1h	equ	0xFE2
 25671                           fsr1l	equ	0xFE1
 25672                           indf2	equ	0xFDF
 25673                           postinc2	equ	0xFDE
 25674                           postdec2	equ	0xFDD
 25675                           plusw2	equ	0xFDB
 25676                           fsr2h	equ	0xFDA
 25677                           fsr2l	equ	0xFD9
 25678                           status	equ	0xFD8
 25679                           
 25680 ;; *************** function _USBConfigureEndpoint *****************
 25681 ;; Defined at:
 25682 ;;		line 1545 in file "usb_device.c"
 25683 ;; Parameters:    Size  Location     Type
 25684 ;;  EPNum           1    wreg     unsigned char 
 25685 ;;  direction       1    0[COMRAM] unsigned char 
 25686 ;; Auto vars:     Size  Location     Type
 25687 ;;  EPNum           1    5[COMRAM] unsigned char 
 25688 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 25689 ;;		 -> BDT(48), 
 25690 ;; Return value:  Size  Location     Type
 25691 ;;                  1    wreg      void 
 25692 ;; Registers used:
 25693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25694 ;; Tracked objects:
 25695 ;;		On entry : 0/0
 25696 ;;		On exit  : 0/0
 25697 ;;		Unchanged: 0/0
 25698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25699 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25700 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25701 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25702 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25703 ;;Total ram usage:        8 bytes
 25704 ;; Hardware stack levels used:    1
 25705 ;; This function calls:
 25706 ;;		Nothing
 25707 ;; This function is called by:
 25708 ;;		_USBEnableEndpoint
 25709 ;; This function uses a non-reentrant model
 25710 ;;
 25711                           
 25712                           	psect	text89
 25713  00E770                     __ptext89:
 25714                           	opt stack 0
 25715  00E770                     _USBConfigureEndpoint:
 25716                           	opt stack 19
 25717                           
 25718                           ;incstack = 0
 25719                           ;USBConfigureEndpoint@EPNum stored from wreg
 25720  00E770  6E33               	movwf	USBConfigureEndpoint@EPNum,c
 25721                           
 25722                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 25723  00E772  0E00               	movlw	0
 25724  00E774  6E34               	movwf	USBConfigureEndpoint@handle,c
 25725  00E776  0E0D               	movlw	13
 25726  00E778  6E35               	movwf	USBConfigureEndpoint@handle+1,c
 25727                           
 25728                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 25729  00E77A  502E               	movf	USBConfigureEndpoint@direction,w,c
 25730  00E77C  6E2F               	movwf	??_USBConfigureEndpoint& (0+255),c
 25731  00E77E  6A30               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 25732  00E780  90D8               	bcf	status,0,c
 25733  00E782  362F               	rlcf	??_USBConfigureEndpoint,f,c
 25734  00E784  3630               	rlcf	??_USBConfigureEndpoint+1,f,c
 25735  00E786  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 25736  00E788  6E31               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 25737  00E78A  6A32               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 25738  00E78C  90D8               	bcf	status,0,c
 25739  00E78E  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 25740  00E790  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 25741  00E792  90D8               	bcf	status,0,c
 25742  00E794  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 25743  00E796  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 25744  00E798  502F               	movf	??_USBConfigureEndpoint,w,c
 25745  00E79A  2631               	addwf	??_USBConfigureEndpoint+2,f,c
 25746  00E79C  5030               	movf	??_USBConfigureEndpoint+1,w,c
 25747  00E79E  2232               	addwfc	??_USBConfigureEndpoint+3,f,c
 25748  00E7A0  90D8               	bcf	status,0,c
 25749  00E7A2  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 25750  00E7A4  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 25751  00E7A6  90D8               	bcf	status,0,c
 25752  00E7A8  3631               	rlcf	??_USBConfigureEndpoint+2,f,c
 25753  00E7AA  3632               	rlcf	??_USBConfigureEndpoint+3,f,c
 25754  00E7AC  5031               	movf	??_USBConfigureEndpoint+2,w,c
 25755  00E7AE  2634               	addwf	USBConfigureEndpoint@handle,f,c
 25756  00E7B0  5032               	movf	??_USBConfigureEndpoint+3,w,c
 25757  00E7B2  2235               	addwfc	USBConfigureEndpoint@handle+1,f,c
 25758                           
 25759                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 25760  00E7B4  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 25761  00E7B8  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 25762  00E7BC  9EDF               	bcf	indf2,7,c
 25763                           
 25764                           ;usb_device.c: 1559: if(direction == 0)
 25765  00E7BE  502E               	movf	USBConfigureEndpoint@direction,w,c
 25766  00E7C0  A4D8               	btfss	status,2,c
 25767  00E7C2  D007               	goto	i2l226
 25768                           
 25769                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 25770  00E7C4  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 25771  00E7C6  0D02               	mullw	2
 25772  00E7C8  0E4E               	movlw	low _pBDTEntryOut
 25773  00E7CA  24F3               	addwf	prodl,w,c
 25774  00E7CC  6ED9               	movwf	fsr2l,c
 25775  00E7CE  0E01               	movlw	high _pBDTEntryOut
 25776  00E7D0  D006               	goto	L53
 25777  00E7D2                     i2l226:
 25778                           
 25779                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 25780  00E7D2  5033               	movf	USBConfigureEndpoint@EPNum,w,c
 25781  00E7D4  0D02               	mullw	2
 25782  00E7D6  0E07               	movlw	low _pBDTEntryIn
 25783  00E7D8  24F3               	addwf	prodl,w,c
 25784  00E7DA  6ED9               	movwf	fsr2l,c
 25785  00E7DC  0E00               	movlw	high _pBDTEntryIn
 25786  00E7DE                     L53:
 25787  00E7DE  20F4               	addwfc	prodh,w,c
 25788  00E7E0  6EDA               	movwf	fsr2h,c
 25789  00E7E2  C034  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 25790  00E7E6  C035  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 25791                           
 25792                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 25793  00E7EA  C034  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 25794  00E7EE  C035  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 25795  00E7F2  9CDF               	bcf	indf2,6,c
 25796                           
 25797                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 25798  00E7F4  EE20 F004          	lfsr	2,4
 25799  00E7F8  5034               	movf	USBConfigureEndpoint@handle,w,c
 25800  00E7FA  26D9               	addwf	fsr2l,f,c
 25801  00E7FC  5035               	movf	USBConfigureEndpoint@handle+1,w,c
 25802  00E7FE  22DA               	addwfc	fsr2h,f,c
 25803  00E800  8CDF               	bsf	indf2,6,c
 25804  00E802  0012               	return		;funcret
 25805  00E804                     __end_of_USBConfigureEndpoint:
 25806                           	opt stack 0
 25807                           tosu	equ	0xFFF
 25808                           tosh	equ	0xFFE
 25809                           tosl	equ	0xFFD
 25810                           pclatu	equ	0xFFB
 25811                           pclath	equ	0xFFA
 25812                           tblptru	equ	0xFF8
 25813                           tblptrh	equ	0xFF7
 25814                           tblptrl	equ	0xFF6
 25815                           tablat	equ	0xFF5
 25816                           prodh	equ	0xFF4
 25817                           prodl	equ	0xFF3
 25818                           intcon	equ	0xFF2
 25819                           indf0	equ	0xFEF
 25820                           postinc0	equ	0xFEE
 25821                           fsr0h	equ	0xFEA
 25822                           fsr0l	equ	0xFE9
 25823                           wreg	equ	0xFE8
 25824                           indf1	equ	0xFE7
 25825                           postdec1	equ	0xFE5
 25826                           plusw1	equ	0xFE3
 25827                           fsr1h	equ	0xFE2
 25828                           fsr1l	equ	0xFE1
 25829                           indf2	equ	0xFDF
 25830                           postinc2	equ	0xFDE
 25831                           postdec2	equ	0xFDD
 25832                           plusw2	equ	0xFDB
 25833                           fsr2h	equ	0xFDA
 25834                           fsr2l	equ	0xFD9
 25835                           status	equ	0xFD8
 25836                           
 25837 ;; *************** function _USBCtrlTrfOutHandler *****************
 25838 ;; Defined at:
 25839 ;;		line 2540 in file "usb_device.c"
 25840 ;; Parameters:    Size  Location     Type
 25841 ;;		None
 25842 ;; Auto vars:     Size  Location     Type
 25843 ;;		None
 25844 ;; Return value:  Size  Location     Type
 25845 ;;                  1    wreg      void 
 25846 ;; Registers used:
 25847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25848 ;; Tracked objects:
 25849 ;;		On entry : 0/0
 25850 ;;		On exit  : 0/0
 25851 ;;		Unchanged: 0/0
 25852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25857 ;;Total ram usage:        0 bytes
 25858 ;; Hardware stack levels used:    1
 25859 ;; Hardware stack levels required when called:    2
 25860 ;; This function calls:
 25861 ;;		_USBCtrlTrfRxService
 25862 ;; This function is called by:
 25863 ;;		_USBCtrlEPService
 25864 ;; This function uses a non-reentrant model
 25865 ;;
 25866                           
 25867                           	psect	text90
 25868  00EDCA                     __ptext90:
 25869                           	opt stack 0
 25870  00EDCA                     _USBCtrlTrfOutHandler:
 25871                           	opt stack 19
 25872                           
 25873                           ;usb_device.c: 2542: if(controlTransferState == 2)
 25874                           
 25875                           ;incstack = 0
 25876  00EDCA  0E02               	movlw	2
 25877  00EDCC  1829               	xorwf	_controlTransferState,w,c	;volatile
 25878  00EDCE  A4D8               	btfss	status,2,c
 25879  00EDD0  D003               	goto	i2l332
 25880                           
 25881                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 25882  00EDD2  EC66  F06A         	call	_USBCtrlTrfRxService	;wreg free
 25883                           
 25884                           ;usb_device.c: 2545: }
 25885  00EDD6  0012               	return	
 25886  00EDD8                     i2l332:
 25887                           
 25888                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 25889  00EDD8  0E00               	movlw	0
 25890  00EDDA  6E29               	movwf	_controlTransferState,c	;volatile
 25891                           
 25892                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 25893  00EDDC  5025               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 25894  00EDDE  A4D8               	btfss	status,2,c
 25895  00EDE0  D01F               	goto	i2l334
 25896                           
 25897                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 25898  00EDE2  EE20 F001          	lfsr	2,1
 25899  00EDE6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 25900  00EDE8  26D9               	addwf	fsr2l,f,c
 25901  00EDEA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 25902  00EDEC  22DA               	addwfc	fsr2h,f,c
 25903  00EDEE  0E08               	movlw	8
 25904  00EDF0  6EDF               	movwf	indf2,c
 25905                           
 25906                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25907  00EDF2  EE20 F002          	lfsr	2,2
 25908  00EDF6  5017               	movf	_pBDTEntryEP0OutNext,w,c
 25909  00EDF8  26D9               	addwf	fsr2l,f,c
 25910  00EDFA  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 25911  00EDFC  22DA               	addwfc	fsr2h,f,c
 25912  00EDFE  0E30               	movlw	48
 25913  00EE00  6EDE               	movwf	postinc2,c
 25914  00EE02  0E0D               	movlw	13
 25915  00EE04  6EDD               	movwf	postdec2,c
 25916                           
 25917                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25918  00EE06  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25919  00EE0A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25920  00EE0E  0E0C               	movlw	12
 25921  00EE10  6EDF               	movwf	indf2,c
 25922                           
 25923                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25924  00EE12  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25925  00EE16  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25926  00EE1A  0E00               	movlw	0
 25927  00EE1C  8EDB               	bsf	plusw2,7,c
 25928                           
 25929                           ;usb_device.c: 2563: }
 25930  00EE1E  0012               	return	
 25931  00EE20                     i2l334:
 25932                           
 25933                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 25934  00EE20  0E00               	movlw	0
 25935  00EE22  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 25936  00EE24  0012               	return	
 25937  00EE26                     __end_of_USBCtrlTrfOutHandler:
 25938                           	opt stack 0
 25939                           tosu	equ	0xFFF
 25940                           tosh	equ	0xFFE
 25941                           tosl	equ	0xFFD
 25942                           pclatu	equ	0xFFB
 25943                           pclath	equ	0xFFA
 25944                           tblptru	equ	0xFF8
 25945                           tblptrh	equ	0xFF7
 25946                           tblptrl	equ	0xFF6
 25947                           tablat	equ	0xFF5
 25948                           prodh	equ	0xFF4
 25949                           prodl	equ	0xFF3
 25950                           intcon	equ	0xFF2
 25951                           indf0	equ	0xFEF
 25952                           postinc0	equ	0xFEE
 25953                           fsr0h	equ	0xFEA
 25954                           fsr0l	equ	0xFE9
 25955                           wreg	equ	0xFE8
 25956                           indf1	equ	0xFE7
 25957                           postdec1	equ	0xFE5
 25958                           plusw1	equ	0xFE3
 25959                           fsr1h	equ	0xFE2
 25960                           fsr1l	equ	0xFE1
 25961                           indf2	equ	0xFDF
 25962                           postinc2	equ	0xFDE
 25963                           postdec2	equ	0xFDD
 25964                           plusw2	equ	0xFDB
 25965                           fsr2h	equ	0xFDA
 25966                           fsr2l	equ	0xFD9
 25967                           status	equ	0xFD8
 25968                           
 25969 ;; *************** function _USBCtrlTrfRxService *****************
 25970 ;; Defined at:
 25971 ;;		line 1854 in file "usb_device.c"
 25972 ;; Parameters:    Size  Location     Type
 25973 ;;		None
 25974 ;; Auto vars:     Size  Location     Type
 25975 ;;  byteToRead      1    1[COMRAM] unsigned char 
 25976 ;;  i               1    0[COMRAM] unsigned char 
 25977 ;; Return value:  Size  Location     Type
 25978 ;;                  1    wreg      void 
 25979 ;; Registers used:
 25980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25981 ;; Tracked objects:
 25982 ;;		On entry : 0/0
 25983 ;;		On exit  : 0/0
 25984 ;;		Unchanged: 0/0
 25985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25990 ;;Total ram usage:        2 bytes
 25991 ;; Hardware stack levels used:    1
 25992 ;; Hardware stack levels required when called:    1
 25993 ;; This function calls:
 25994 ;;		_USBCtrlEPAllowStatusStage
 25995 ;; This function is called by:
 25996 ;;		_USBCtrlTrfOutHandler
 25997 ;; This function uses a non-reentrant model
 25998 ;;
 25999                           
 26000                           	psect	text91
 26001  00D4CC                     __ptext91:
 26002                           	opt stack 0
 26003  00D4CC                     _USBCtrlTrfRxService:
 26004                           	opt stack 19
 26005                           
 26006                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 26007                           
 26008                           ;incstack = 0
 26009  00D4CC  EE20 F001          	lfsr	2,1
 26010  00D4D0  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 26011  00D4D2  26D9               	addwf	fsr2l,f,c
 26012  00D4D4  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26013  00D4D6  22DA               	addwfc	fsr2h,f,c
 26014  00D4D8  50DF               	movf	indf2,w,c
 26015  00D4DA  6E2F               	movwf	USBCtrlTrfRxService@byteToRead,c
 26016                           
 26017                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 26018  00D4DC  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26019  00D4DE  0101               	movlb	1	; () banked
 26020  00D4E0  5D49               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 26021  00D4E2  0E00               	movlw	0
 26022  00D4E4  594A               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 26023  00D4E6  A0D8               	btfss	status,0,c
 26024                           
 26025                           ; BSR set to: 1
 26026                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 26027  00D4E8  C149  F02F         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 26028                           
 26029                           ; BSR set to: 1
 26030                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 26031                           
 26032                           ; BSR set to: 1
 26033  00D4EC  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26034  00D4EE  5F49               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 26035  00D4F0  0E00               	movlw	0
 26036  00D4F2  5B4A               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 26037                           
 26038                           ; BSR set to: 1
 26039                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 26040  00D4F4  0E00               	movlw	0
 26041  00D4F6  6E2E               	movwf	USBCtrlTrfRxService@i,c
 26042  00D4F8  D011               	goto	i2l260
 26043  00D4FA                     
 26044                           ; BSR set to: 1
 26045                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 26046                           
 26047                           ; BSR set to: 1
 26048  00D4FA  502E               	movf	USBCtrlTrfRxService@i,w,c
 26049  00D4FC  0D01               	mullw	1
 26050  00D4FE  0E38               	movlw	56
 26051  00D500  24F3               	addwf	prodl,w,c
 26052  00D502  6ED9               	movwf	fsr2l,c
 26053  00D504  0E0D               	movlw	13
 26054  00D506  20F4               	addwfc	prodh,w,c
 26055  00D508  6EDA               	movwf	fsr2h,c
 26056  00D50A  C145  FFE1         	movff	_outPipes,fsr1l	;volatile
 26057  00D50E  C146  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 26058  00D512  CFDF FFE7          	movff	indf2,indf1
 26059                           
 26060                           ; BSR set to: 1
 26061  00D516  4B45               	infsnz	_outPipes& (0+255),f,b	;volatile
 26062  00D518  2B46               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 26063                           
 26064                           ; BSR set to: 1
 26065  00D51A  2A2E               	incf	USBCtrlTrfRxService@i,f,c
 26066  00D51C                     i2l260:
 26067                           
 26068                           ; BSR set to: 1
 26069                           
 26070                           ; BSR set to: 1
 26071  00D51C  502F               	movf	USBCtrlTrfRxService@byteToRead,w,c
 26072  00D51E  5C2E               	subwf	USBCtrlTrfRxService@i,w,c
 26073  00D520  A0D8               	btfss	status,0,c
 26074  00D522  D7EB               	goto	i2l261
 26075                           
 26076                           ; BSR set to: 1
 26077                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 26078                           
 26079                           ; BSR set to: 1
 26080  00D524  5149               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 26081  00D526  114A               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 26082  00D528  B4D8               	btfsc	status,2,c
 26083  00D52A  D032               	goto	i2l263
 26084                           
 26085                           ; BSR set to: 1
 26086                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 26087  00D52C  EE20 F001          	lfsr	2,1
 26088  00D530  5017               	movf	_pBDTEntryEP0OutNext,w,c
 26089  00D532  26D9               	addwf	fsr2l,f,c
 26090  00D534  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 26091  00D536  22DA               	addwfc	fsr2h,f,c
 26092  00D538  0E08               	movlw	8
 26093  00D53A  6EDF               	movwf	indf2,c
 26094                           
 26095                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 26096  00D53C  EE20 F002          	lfsr	2,2
 26097  00D540  5017               	movf	_pBDTEntryEP0OutNext,w,c
 26098  00D542  26D9               	addwf	fsr2l,f,c
 26099  00D544  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 26100  00D546  22DA               	addwfc	fsr2h,f,c
 26101  00D548  0E38               	movlw	56
 26102  00D54A  6EDE               	movwf	postinc2,c
 26103  00D54C  0E0D               	movlw	13
 26104  00D54E  6EDD               	movwf	postdec2,c
 26105                           
 26106                           ; BSR set to: 1
 26107                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 26108  00D550  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26109  00D554  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26110  00D558  BCDF               	btfsc	indf2,6,c
 26111  00D55A  D00D               	goto	i2l264
 26112                           
 26113                           ; BSR set to: 1
 26114                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 26115  00D55C  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26116  00D560  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26117  00D564  0E48               	movlw	72
 26118  00D566  6EDF               	movwf	indf2,c
 26119                           
 26120                           ; BSR set to: 1
 26121                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26122  00D568  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26123  00D56C  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26124  00D570  0E00               	movlw	0
 26125  00D572  8EDB               	bsf	plusw2,7,c
 26126                           
 26127                           ;usb_device.c: 1891: }
 26128  00D574  0012               	return	
 26129  00D576                     i2l264:
 26130                           
 26131                           ; BSR set to: 1
 26132                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 26133                           
 26134                           ; BSR set to: 1
 26135  00D576  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26136  00D57A  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26137  00D57E  0E08               	movlw	8
 26138  00D580  6EDF               	movwf	indf2,c
 26139                           
 26140                           ; BSR set to: 1
 26141                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26142  00D582  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26143  00D586  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26144  00D58A  0E00               	movlw	0
 26145  00D58C  8EDB               	bsf	plusw2,7,c
 26146                           
 26147                           ; BSR set to: 1
 26148                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 26149  00D58E  0012               	return	
 26150  00D590                     i2l263:
 26151                           
 26152                           ; BSR set to: 1
 26153                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 26154                           
 26155                           ; BSR set to: 1
 26156  00D590  EE20 F001          	lfsr	2,1
 26157  00D594  5017               	movf	_pBDTEntryEP0OutNext,w,c
 26158  00D596  26D9               	addwf	fsr2l,f,c
 26159  00D598  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 26160  00D59A  22DA               	addwfc	fsr2h,f,c
 26161  00D59C  0E08               	movlw	8
 26162  00D59E  6EDF               	movwf	indf2,c
 26163                           
 26164                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26165  00D5A0  EE20 F002          	lfsr	2,2
 26166  00D5A4  5017               	movf	_pBDTEntryEP0OutNext,w,c
 26167  00D5A6  26D9               	addwf	fsr2l,f,c
 26168  00D5A8  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 26169  00D5AA  22DA               	addwfc	fsr2h,f,c
 26170  00D5AC  0E30               	movlw	48
 26171  00D5AE  6EDE               	movwf	postinc2,c
 26172  00D5B0  0E0D               	movlw	13
 26173  00D5B2  6EDD               	movwf	postdec2,c
 26174                           
 26175                           ; BSR set to: 1
 26176                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 26177  00D5B4  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26178  00D5B8  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26179  00D5BC  0E04               	movlw	4
 26180  00D5BE  6EDF               	movwf	indf2,c
 26181                           
 26182                           ; BSR set to: 1
 26183                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26184  00D5C0  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26185  00D5C4  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26186  00D5C8  0E00               	movlw	0
 26187  00D5CA  8EDB               	bsf	plusw2,7,c
 26188                           
 26189                           ; BSR set to: 1
 26190                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 26191                           
 26192                           ; BSR set to: 1
 26193                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 26194  00D5CC  9F48               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 26195                           
 26196                           ; BSR set to: 1
 26197                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 26198  00D5CE  5023               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 26199  00D5D0  A4D8               	btfss	status,2,c
 26200  00D5D2  0012               	return	
 26201                           
 26202                           ; BSR set to: 1
 26203                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 26204  00D5D4  ECB6  F070         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26205  00D5D8  0012               	return	
 26206  00D5DA                     __end_of_USBCtrlTrfRxService:
 26207                           	opt stack 0
 26208                           tosu	equ	0xFFF
 26209                           tosh	equ	0xFFE
 26210                           tosl	equ	0xFFD
 26211                           pclatu	equ	0xFFB
 26212                           pclath	equ	0xFFA
 26213                           tblptru	equ	0xFF8
 26214                           tblptrh	equ	0xFF7
 26215                           tblptrl	equ	0xFF6
 26216                           tablat	equ	0xFF5
 26217                           prodh	equ	0xFF4
 26218                           prodl	equ	0xFF3
 26219                           intcon	equ	0xFF2
 26220                           indf0	equ	0xFEF
 26221                           postinc0	equ	0xFEE
 26222                           fsr0h	equ	0xFEA
 26223                           fsr0l	equ	0xFE9
 26224                           wreg	equ	0xFE8
 26225                           indf1	equ	0xFE7
 26226                           postdec1	equ	0xFE5
 26227                           plusw1	equ	0xFE3
 26228                           fsr1h	equ	0xFE2
 26229                           fsr1l	equ	0xFE1
 26230                           indf2	equ	0xFDF
 26231                           postinc2	equ	0xFDE
 26232                           postdec2	equ	0xFDD
 26233                           plusw2	equ	0xFDB
 26234                           fsr2h	equ	0xFDA
 26235                           fsr2l	equ	0xFD9
 26236                           status	equ	0xFD8
 26237                           
 26238 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 26239 ;; Defined at:
 26240 ;;		line 1418 in file "usb_device.c"
 26241 ;; Parameters:    Size  Location     Type
 26242 ;;		None
 26243 ;; Auto vars:     Size  Location     Type
 26244 ;;		None
 26245 ;; Return value:  Size  Location     Type
 26246 ;;                  1    wreg      void 
 26247 ;; Registers used:
 26248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26249 ;; Tracked objects:
 26250 ;;		On entry : 0/0
 26251 ;;		On exit  : 0/0
 26252 ;;		Unchanged: 0/0
 26253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26258 ;;Total ram usage:        0 bytes
 26259 ;; Hardware stack levels used:    1
 26260 ;; This function calls:
 26261 ;;		Nothing
 26262 ;; This function is called by:
 26263 ;;		_USBDeviceTasks
 26264 ;;		_USBCtrlEPServiceComplete
 26265 ;;		_USBCtrlTrfRxService
 26266 ;; This function uses a non-reentrant model
 26267 ;;
 26268                           
 26269                           	psect	text92
 26270  00E16C                     __ptext92:
 26271                           	opt stack 0
 26272  00E16C                     _USBCtrlEPAllowStatusStage:
 26273                           	opt stack 19
 26274                           
 26275                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 26276                           
 26277                           ;incstack = 0
 26278  00E16C  5022               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 26279  00E16E  A4D8               	btfss	status,2,c
 26280  00E170  0012               	return	
 26281                           
 26282                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 26283  00E172  0E01               	movlw	1
 26284  00E174  6E22               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 26285                           
 26286                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 26287  00E176  5021               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 26288  00E178  A4D8               	btfss	status,2,c
 26289  00E17A  0012               	return	
 26290                           
 26291                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 26292  00E17C  0E01               	movlw	1
 26293  00E17E  6E21               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 26294                           
 26295                           ;usb_device.c: 1434: if(controlTransferState == 2)
 26296  00E180  0E02               	movlw	2
 26297  00E182  1829               	xorwf	_controlTransferState,w,c	;volatile
 26298  00E184  A4D8               	btfss	status,2,c
 26299  00E186  D015               	goto	i2l214
 26300                           
 26301                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 26302  00E188  EE20 F001          	lfsr	2,1
 26303  00E18C  5007               	movf	_pBDTEntryIn,w,c
 26304  00E18E  26D9               	addwf	fsr2l,f,c
 26305  00E190  5008               	movf	_pBDTEntryIn+1,w,c
 26306  00E192  22DA               	addwfc	fsr2h,f,c
 26307  00E194  0E00               	movlw	0
 26308  00E196  6EDF               	movwf	indf2,c
 26309                           
 26310                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 26311  00E198  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26312  00E19C  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26313  00E1A0  0E48               	movlw	72
 26314  00E1A2  6EDF               	movwf	indf2,c
 26315                           
 26316                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26317  00E1A4  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26318  00E1A8  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26319  00E1AC  0E00               	movlw	0
 26320  00E1AE  8EDB               	bsf	plusw2,7,c
 26321                           
 26322                           ;usb_device.c: 1439: }
 26323  00E1B0  0012               	return	
 26324  00E1B2                     i2l214:
 26325                           
 26326                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 26327  00E1B2  0429               	decf	_controlTransferState,w,c	;volatile
 26328  00E1B4  A4D8               	btfss	status,2,c
 26329  00E1B6  0012               	return	
 26330                           
 26331                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 26332  00E1B8  0E00               	movlw	0
 26333  00E1BA  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26334                           
 26335                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 26336  00E1BC  EE20 F001          	lfsr	2,1
 26337  00E1C0  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 26338  00E1C2  26D9               	addwf	fsr2l,f,c
 26339  00E1C4  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26340  00E1C6  22DA               	addwfc	fsr2h,f,c
 26341  00E1C8  0E08               	movlw	8
 26342  00E1CA  6EDF               	movwf	indf2,c
 26343                           
 26344                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 26345  00E1CC  EE20 F002          	lfsr	2,2
 26346  00E1D0  5019               	movf	_pBDTEntryEP0OutCurrent,w,c
 26347  00E1D2  26D9               	addwf	fsr2l,f,c
 26348  00E1D4  501A               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 26349  00E1D6  22DA               	addwfc	fsr2h,f,c
 26350  00E1D8  0E30               	movlw	48
 26351  00E1DA  6EDE               	movwf	postinc2,c
 26352  00E1DC  0E0D               	movlw	13
 26353  00E1DE  6EDD               	movwf	postdec2,c
 26354                           
 26355                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 26356  00E1E0  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26357  00E1E4  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26358  00E1E8  0E04               	movlw	4
 26359  00E1EA  6EDF               	movwf	indf2,c
 26360                           
 26361                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26362  00E1EC  C019  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26363  00E1F0  C01A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26364  00E1F4  0E00               	movlw	0
 26365  00E1F6  8EDB               	bsf	plusw2,7,c
 26366                           
 26367                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 26368  00E1F8  0E01               	movlw	1
 26369  00E1FA  6E25               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 26370                           
 26371                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 26372  00E1FC  EE20 F001          	lfsr	2,1
 26373  00E200  5017               	movf	_pBDTEntryEP0OutNext,w,c
 26374  00E202  26D9               	addwf	fsr2l,f,c
 26375  00E204  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 26376  00E206  22DA               	addwfc	fsr2h,f,c
 26377  00E208  0E08               	movlw	8
 26378  00E20A  6EDF               	movwf	indf2,c
 26379                           
 26380                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26381  00E20C  EE20 F002          	lfsr	2,2
 26382  00E210  5017               	movf	_pBDTEntryEP0OutNext,w,c
 26383  00E212  26D9               	addwf	fsr2l,f,c
 26384  00E214  5018               	movf	_pBDTEntryEP0OutNext+1,w,c
 26385  00E216  22DA               	addwfc	fsr2h,f,c
 26386  00E218  0E30               	movlw	48
 26387  00E21A  6EDE               	movwf	postinc2,c
 26388  00E21C  0E0D               	movlw	13
 26389  00E21E  6EDD               	movwf	postdec2,c
 26390                           
 26391                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 26392  00E220  C017  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26393  00E224  C018  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26394  00E228  0E80               	movlw	128
 26395  00E22A  6EDF               	movwf	indf2,c
 26396  00E22C  0012               	return	
 26397  00E22E                     __end_of_USBCtrlEPAllowStatusStage:
 26398                           	opt stack 0
 26399                           tosu	equ	0xFFF
 26400                           tosh	equ	0xFFE
 26401                           tosl	equ	0xFFD
 26402                           pclatu	equ	0xFFB
 26403                           pclath	equ	0xFFA
 26404                           tblptru	equ	0xFF8
 26405                           tblptrh	equ	0xFF7
 26406                           tblptrl	equ	0xFF6
 26407                           tablat	equ	0xFF5
 26408                           prodh	equ	0xFF4
 26409                           prodl	equ	0xFF3
 26410                           intcon	equ	0xFF2
 26411                           indf0	equ	0xFEF
 26412                           postinc0	equ	0xFEE
 26413                           fsr0h	equ	0xFEA
 26414                           fsr0l	equ	0xFE9
 26415                           wreg	equ	0xFE8
 26416                           indf1	equ	0xFE7
 26417                           postdec1	equ	0xFE5
 26418                           plusw1	equ	0xFE3
 26419                           fsr1h	equ	0xFE2
 26420                           fsr1l	equ	0xFE1
 26421                           indf2	equ	0xFDF
 26422                           postinc2	equ	0xFDE
 26423                           postdec2	equ	0xFDD
 26424                           plusw2	equ	0xFDB
 26425                           fsr2h	equ	0xFDA
 26426                           fsr2l	equ	0xFD9
 26427                           status	equ	0xFD8
 26428                           
 26429 ;; *************** function _USBCtrlTrfInHandler *****************
 26430 ;; Defined at:
 26431 ;;		line 2594 in file "usb_device.c"
 26432 ;; Parameters:    Size  Location     Type
 26433 ;;		None
 26434 ;; Auto vars:     Size  Location     Type
 26435 ;;  lastDTS         1    1[COMRAM] unsigned char 
 26436 ;; Return value:  Size  Location     Type
 26437 ;;                  1    wreg      void 
 26438 ;; Registers used:
 26439 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26440 ;; Tracked objects:
 26441 ;;		On entry : 0/0
 26442 ;;		On exit  : 0/0
 26443 ;;		Unchanged: 0/0
 26444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26449 ;;Total ram usage:        1 bytes
 26450 ;; Hardware stack levels used:    1
 26451 ;; Hardware stack levels required when called:    1
 26452 ;; This function calls:
 26453 ;;		_USBCtrlTrfTxService
 26454 ;; This function is called by:
 26455 ;;		_USBCtrlEPService
 26456 ;; This function uses a non-reentrant model
 26457 ;;
 26458                           
 26459                           	psect	text93
 26460  00E22E                     __ptext93:
 26461                           	opt stack 0
 26462  00E22E                     _USBCtrlTrfInHandler:
 26463                           	opt stack 20
 26464                           
 26465                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 26466                           
 26467                           ;incstack = 0
 26468  00E22E  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26469  00E232  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26470  00E236  0E00               	movlw	0
 26471  00E238  BCDF               	btfsc	indf2,6,c
 26472  00E23A  0E01               	movlw	1
 26473  00E23C  6E2F               	movwf	USBCtrlTrfInHandler@lastDTS,c
 26474                           
 26475                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 26476  00E23E  0E04               	movlw	4
 26477  00E240  1807               	xorwf	_pBDTEntryIn,w,c
 26478  00E242  6E07               	movwf	_pBDTEntryIn,c
 26479  00E244  5008               	movf	_pBDTEntryIn+1,w,c
 26480  00E246  6E08               	movwf	_pBDTEntryIn+1,c
 26481                           
 26482                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 26483  00E248  0E08               	movlw	8
 26484  00E24A  182B               	xorwf	_USBDeviceState,w,c	;volatile
 26485  00E24C  A4D8               	btfss	status,2,c
 26486  00E24E  D00C               	goto	i2l341
 26487                           
 26488                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 26489  00E250  010D               	movlb	13	; () banked
 26490  00E252  5132               	movf	50,w,b	;volatile
 26491  00E254  0B7F               	andlw	127
 26492  00E256  010F               	movlb	15	; () banked
 26493  00E258  6F38               	movwf	56,b	;volatile
 26494                           
 26495                           ; BSR set to: 15
 26496                           ;usb_device.c: 2609: if(UADDR != 0u)
 26497  00E25A  5138               	movf	56,w,b	;volatile
 26498  00E25C  B4D8               	btfsc	status,2,c
 26499  00E25E  D002               	goto	i2l340
 26500                           
 26501                           ; BSR set to: 15
 26502                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 26503  00E260  0E10               	movlw	16
 26504  00E262  D001               	goto	L54
 26505  00E264                     i2l340:
 26506                           
 26507                           ; BSR set to: 15
 26508                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 26509                           
 26510                           ; BSR set to: 15
 26511  00E264  0E04               	movlw	4
 26512  00E266                     L54:
 26513  00E266  6E2B               	movwf	_USBDeviceState,c	;volatile
 26514  00E268                     i2l341:
 26515                           
 26516                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 26517                           
 26518                           ; BSR set to: 15
 26519                           
 26520                           ; BSR set to: 15
 26521  00E268  0429               	decf	_controlTransferState,w,c	;volatile
 26522  00E26A  A4D8               	btfss	status,2,c
 26523  00E26C  D03A               	goto	i2l342
 26524                           
 26525                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 26526  00E26E  EE20 F002          	lfsr	2,2
 26527  00E272  5007               	movf	_pBDTEntryIn,w,c
 26528  00E274  26D9               	addwf	fsr2l,f,c
 26529  00E276  5008               	movf	_pBDTEntryIn+1,w,c
 26530  00E278  22DA               	addwfc	fsr2h,f,c
 26531  00E27A  0E38               	movlw	56
 26532  00E27C  6EDE               	movwf	postinc2,c
 26533  00E27E  0E0D               	movlw	13
 26534  00E280  6EDD               	movwf	postdec2,c
 26535                           
 26536                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 26537  00E282  EC82  F06F         	call	_USBCtrlTrfTxService	;wreg free
 26538                           
 26539                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 26540  00E286  0E02               	movlw	2
 26541  00E288  182A               	xorwf	_shortPacketStatus,w,c	;volatile
 26542  00E28A  A4D8               	btfss	status,2,c
 26543  00E28C  D00D               	goto	i2l343
 26544                           
 26545                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 26546  00E28E  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26547  00E292  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26548  00E296  0E04               	movlw	4
 26549  00E298  6EDF               	movwf	indf2,c
 26550                           
 26551                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26552  00E29A  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26553  00E29E  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26554  00E2A2  0E00               	movlw	0
 26555  00E2A4  8EDB               	bsf	plusw2,7,c
 26556                           
 26557                           ;usb_device.c: 2635: }
 26558  00E2A6  0012               	return	
 26559  00E2A8                     i2l343:
 26560                           
 26561                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 26562  00E2A8  502F               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 26563  00E2AA  A4D8               	btfss	status,2,c
 26564  00E2AC  D00D               	goto	i2l345
 26565                           
 26566                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 26567  00E2AE  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26568  00E2B2  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26569  00E2B6  0E48               	movlw	72
 26570  00E2B8  6EDF               	movwf	indf2,c
 26571                           
 26572                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26573  00E2BA  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26574  00E2BE  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26575  00E2C2  0E00               	movlw	0
 26576  00E2C4  8EDB               	bsf	plusw2,7,c
 26577                           
 26578                           ;usb_device.c: 2642: }
 26579  00E2C6  0012               	return	
 26580  00E2C8                     i2l345:
 26581                           
 26582                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 26583  00E2C8  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26584  00E2CC  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26585  00E2D0  0E08               	movlw	8
 26586  00E2D2  6EDF               	movwf	indf2,c
 26587                           
 26588                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26589  00E2D4  C007  FFD9         	movff	_pBDTEntryIn,fsr2l
 26590  00E2D8  C008  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26591  00E2DC  0E00               	movlw	0
 26592  00E2DE  8EDB               	bsf	plusw2,7,c
 26593                           
 26594                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 26595  00E2E0  0012               	return	
 26596  00E2E2                     i2l342:
 26597                           
 26598                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 26599  00E2E2  0101               	movlb	1	; () banked
 26600  00E2E4  BF48               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 26601                           
 26602                           ; BSR set to: 1
 26603                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 26604                           
 26605                           ; BSR set to: 1
 26606                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 26607  00E2E6  9F48               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 26608                           
 26609                           ; BSR set to: 1
 26610                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 26611                           
 26612                           ; BSR set to: 1
 26613  00E2E8  0E00               	movlw	0
 26614  00E2EA  6E29               	movwf	_controlTransferState,c	;volatile
 26615  00E2EC  0012               	return	
 26616  00E2EE                     __end_of_USBCtrlTrfInHandler:
 26617                           	opt stack 0
 26618                           tosu	equ	0xFFF
 26619                           tosh	equ	0xFFE
 26620                           tosl	equ	0xFFD
 26621                           pclatu	equ	0xFFB
 26622                           pclath	equ	0xFFA
 26623                           tblptru	equ	0xFF8
 26624                           tblptrh	equ	0xFF7
 26625                           tblptrl	equ	0xFF6
 26626                           tablat	equ	0xFF5
 26627                           prodh	equ	0xFF4
 26628                           prodl	equ	0xFF3
 26629                           intcon	equ	0xFF2
 26630                           indf0	equ	0xFEF
 26631                           postinc0	equ	0xFEE
 26632                           fsr0h	equ	0xFEA
 26633                           fsr0l	equ	0xFE9
 26634                           wreg	equ	0xFE8
 26635                           indf1	equ	0xFE7
 26636                           postdec1	equ	0xFE5
 26637                           plusw1	equ	0xFE3
 26638                           fsr1h	equ	0xFE2
 26639                           fsr1l	equ	0xFE1
 26640                           indf2	equ	0xFDF
 26641                           postinc2	equ	0xFDE
 26642                           postdec2	equ	0xFDD
 26643                           plusw2	equ	0xFDB
 26644                           fsr2h	equ	0xFDA
 26645                           fsr2l	equ	0xFD9
 26646                           status	equ	0xFD8
 26647                           
 26648 ;; *************** function _USBCtrlTrfTxService *****************
 26649 ;; Defined at:
 26650 ;;		line 1773 in file "usb_device.c"
 26651 ;; Parameters:    Size  Location     Type
 26652 ;;		None
 26653 ;; Auto vars:     Size  Location     Type
 26654 ;;  byteToSend      1    0[COMRAM] unsigned char 
 26655 ;; Return value:  Size  Location     Type
 26656 ;;                  1    wreg      void 
 26657 ;; Registers used:
 26658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 26659 ;; Tracked objects:
 26660 ;;		On entry : 0/0
 26661 ;;		On exit  : 0/0
 26662 ;;		Unchanged: 0/0
 26663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26668 ;;Total ram usage:        1 bytes
 26669 ;; Hardware stack levels used:    1
 26670 ;; This function calls:
 26671 ;;		Nothing
 26672 ;; This function is called by:
 26673 ;;		_USBCtrlEPAllowDataStage
 26674 ;;		_USBCtrlTrfInHandler
 26675 ;; This function uses a non-reentrant model
 26676 ;;
 26677                           
 26678                           	psect	text94
 26679  00DF04                     __ptext94:
 26680                           	opt stack 0
 26681  00DF04                     _USBCtrlTrfTxService:
 26682                           	opt stack 18
 26683                           
 26684                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 26685                           
 26686                           ;incstack = 0
 26687  00DF04  0E08               	movlw	8
 26688  00DF06  6E2E               	movwf	USBCtrlTrfTxService@byteToSend,c
 26689                           
 26690                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 26691  00DF08  5006               	movf	_inPipes+5,w,c	;volatile
 26692  00DF0A  E110               	bnz	i2l10210
 26693  00DF0C  0E08               	movlw	8
 26694  00DF0E  5C05               	subwf	_inPipes+4,w,c	;volatile
 26695  00DF10  B0D8               	btfsc	status,0,c
 26696  00DF12  D00C               	goto	i2l247
 26697                           
 26698                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 26699  00DF14  C005  F02E         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 26700                           
 26701                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 26702  00DF18  502A               	movf	_shortPacketStatus,w,c	;volatile
 26703  00DF1A  A4D8               	btfss	status,2,c
 26704  00DF1C  D002               	goto	i2l245
 26705                           
 26706                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 26707  00DF1E  0E01               	movlw	1
 26708  00DF20  D004               	goto	L55
 26709  00DF22                     i2l245:
 26710                           
 26711                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 26712  00DF22  042A               	decf	_shortPacketStatus,w,c	;volatile
 26713  00DF24  A4D8               	btfss	status,2,c
 26714  00DF26  D002               	goto	i2l247
 26715                           
 26716                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 26717  00DF28  0E02               	movlw	2
 26718  00DF2A                     L55:
 26719  00DF2A  6E2A               	movwf	_shortPacketStatus,c	;volatile
 26720  00DF2C                     i2l247:
 26721  00DF2C                     i2l10210:
 26722                           
 26723                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 26724  00DF2C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26725  00DF2E  5E05               	subwf	_inPipes+4,f,c	;volatile
 26726  00DF30  0E00               	movlw	0
 26727  00DF32  5A06               	subwfb	_inPipes+5,f,c	;volatile
 26728                           
 26729                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 26730  00DF34  EE20 F001          	lfsr	2,1
 26731  00DF38  5007               	movf	_pBDTEntryIn,w,c
 26732  00DF3A  26D9               	addwf	fsr2l,f,c
 26733  00DF3C  5008               	movf	_pBDTEntryIn+1,w,c
 26734  00DF3E  22DA               	addwfc	fsr2h,f,c
 26735  00DF40  C02E  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 26736                           
 26737                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 26738  00DF44  0E38               	movlw	56
 26739  00DF46  0101               	movlb	1	; () banked
 26740  00DF48  6F84               	movwf	_pDst& (0+255),b
 26741  00DF4A  0E0D               	movlw	13
 26742  00DF4C  6F85               	movwf	(_pDst+1)& (0+255),b
 26743                           
 26744                           ; BSR set to: 1
 26745                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 26746  00DF4E  A004               	btfss	_inPipes+3,0,c	;volatile
 26747  00DF50  D01D               	goto	i2l249
 26748  00DF52  D03C               	goto	i2l253
 26749  00DF54                     
 26750                           ; BSR set to: 1
 26751                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 26752                           
 26753                           ; BSR set to: 1
 26754  00DF54  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 26755  00DF58  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26756  00DF5C  0E00               	movlw	low (__mediumconst shr (0+16))
 26757  00DF5E  6EF8               	movwf	tblptru,c
 26758  00DF60  C184  FFD9         	movff	_pDst,fsr2l
 26759  00DF64  C185  FFDA         	movff	_pDst+1,fsr2h
 26760  00DF68  0E0E               	movlw	(high __ramtop+-1)
 26761  00DF6A  64F7               	cpfsgt	tblptrh,c
 26762  00DF6C  D003               	bra	i2u845_47
 26763  00DF6E  0008               	tblrd		*
 26764  00DF70  50F5               	movf	tablat,w,c
 26765  00DF72  D005               	bra	i2u845_40
 26766  00DF74                     i2u845_47:
 26767  00DF74  CFF6 FFE9          	movff	tblptrl,fsr0l
 26768  00DF78  CFF7 FFEA          	movff	tblptrh,fsr0h
 26769  00DF7C  50EF               	movf	indf0,w,c
 26770  00DF7E                     i2u845_40:
 26771  00DF7E  6EDF               	movwf	indf2,c
 26772  00DF80  4A01               	infsnz	_inPipes,f,c	;volatile
 26773  00DF82  2A02               	incf	_inPipes+1,f,c	;volatile
 26774  00DF84  0101               	movlb	1	; () banked
 26775  00DF86  4B84               	infsnz	_pDst& (0+255),f,b
 26776  00DF88  2B85               	incf	(_pDst+1)& (0+255),f,b
 26777                           
 26778                           ; BSR set to: 1
 26779                           ;usb_device.c: 1816: byteToSend--;
 26780  00DF8A  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 26781  00DF8C                     i2l249:
 26782                           
 26783                           ; BSR set to: 1
 26784                           
 26785                           ; BSR set to: 1
 26786  00DF8C  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26787  00DF8E  B4D8               	btfsc	status,2,c
 26788  00DF90  0012               	return	
 26789  00DF92  D7E0               	goto	i2l250
 26790  00DF94                     
 26791                           ; BSR set to: 1
 26792                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 26793                           
 26794                           ; BSR set to: 1
 26795  00DF94  C001  FFF6         	movff	_inPipes,tblptrl	;volatile
 26796  00DF98  C002  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 26797  00DF9C  0E00               	movlw	low (__mediumconst shr (0+16))
 26798  00DF9E  6EF8               	movwf	tblptru,c
 26799  00DFA0  C184  FFD9         	movff	_pDst,fsr2l
 26800  00DFA4  C185  FFDA         	movff	_pDst+1,fsr2h
 26801  00DFA8  0E0E               	movlw	(high __ramtop+-1)
 26802  00DFAA  64F7               	cpfsgt	tblptrh,c
 26803  00DFAC  D003               	bra	i2u847_47
 26804  00DFAE  0008               	tblrd		*
 26805  00DFB0  50F5               	movf	tablat,w,c
 26806  00DFB2  D005               	bra	i2u847_40
 26807  00DFB4                     i2u847_47:
 26808  00DFB4  CFF6 FFE9          	movff	tblptrl,fsr0l
 26809  00DFB8  CFF7 FFEA          	movff	tblptrh,fsr0h
 26810  00DFBC  50EF               	movf	indf0,w,c
 26811  00DFBE                     i2u847_40:
 26812  00DFBE  6EDF               	movwf	indf2,c
 26813  00DFC0  4A01               	infsnz	_inPipes,f,c	;volatile
 26814  00DFC2  2A02               	incf	_inPipes+1,f,c	;volatile
 26815  00DFC4  0101               	movlb	1	; () banked
 26816  00DFC6  4B84               	infsnz	_pDst& (0+255),f,b
 26817  00DFC8  2B85               	incf	(_pDst+1)& (0+255),f,b
 26818                           
 26819                           ; BSR set to: 1
 26820                           ;usb_device.c: 1824: byteToSend--;
 26821  00DFCA  062E               	decf	USBCtrlTrfTxService@byteToSend,f,c
 26822  00DFCC                     i2l253:
 26823                           
 26824                           ; BSR set to: 1
 26825                           
 26826                           ; BSR set to: 1
 26827  00DFCC  502E               	movf	USBCtrlTrfTxService@byteToSend,w,c
 26828  00DFCE  B4D8               	btfsc	status,2,c
 26829  00DFD0  0012               	return	
 26830  00DFD2  D7E0               	goto	i2l254
 26831  00DFD4                     __end_of_USBCtrlTrfTxService:
 26832                           	opt stack 0
 26833                           tosu	equ	0xFFF
 26834                           tosh	equ	0xFFE
 26835                           tosl	equ	0xFFD
 26836                           pclatu	equ	0xFFB
 26837                           pclath	equ	0xFFA
 26838                           tblptru	equ	0xFF8
 26839                           tblptrh	equ	0xFF7
 26840                           tblptrl	equ	0xFF6
 26841                           tablat	equ	0xFF5
 26842                           prodh	equ	0xFF4
 26843                           prodl	equ	0xFF3
 26844                           intcon	equ	0xFF2
 26845                           indf0	equ	0xFEF
 26846                           postinc0	equ	0xFEE
 26847                           fsr0h	equ	0xFEA
 26848                           fsr0l	equ	0xFE9
 26849                           wreg	equ	0xFE8
 26850                           indf1	equ	0xFE7
 26851                           postdec1	equ	0xFE5
 26852                           plusw1	equ	0xFE3
 26853                           fsr1h	equ	0xFE2
 26854                           fsr1l	equ	0xFE1
 26855                           indf2	equ	0xFDF
 26856                           postinc2	equ	0xFDE
 26857                           postdec2	equ	0xFDD
 26858                           plusw2	equ	0xFDB
 26859                           fsr2h	equ	0xFDA
 26860                           fsr2l	equ	0xFD9
 26861                           status	equ	0xFD8
 26862                           tosu	equ	0xFFF
 26863                           tosh	equ	0xFFE
 26864                           tosl	equ	0xFFD
 26865                           pclatu	equ	0xFFB
 26866                           pclath	equ	0xFFA
 26867                           tblptru	equ	0xFF8
 26868                           tblptrh	equ	0xFF7
 26869                           tblptrl	equ	0xFF6
 26870                           tablat	equ	0xFF5
 26871                           prodh	equ	0xFF4
 26872                           prodl	equ	0xFF3
 26873                           intcon	equ	0xFF2
 26874                           indf0	equ	0xFEF
 26875                           postinc0	equ	0xFEE
 26876                           fsr0h	equ	0xFEA
 26877                           fsr0l	equ	0xFE9
 26878                           wreg	equ	0xFE8
 26879                           indf1	equ	0xFE7
 26880                           postdec1	equ	0xFE5
 26881                           plusw1	equ	0xFE3
 26882                           fsr1h	equ	0xFE2
 26883                           fsr1l	equ	0xFE1
 26884                           indf2	equ	0xFDF
 26885                           postinc2	equ	0xFDE
 26886                           postdec2	equ	0xFDD
 26887                           plusw2	equ	0xFDB
 26888                           fsr2h	equ	0xFDA
 26889                           fsr2l	equ	0xFD9
 26890                           status	equ	0xFD8
 26891                           
 26892                           	psect	text95
 26893  000000                     __ptext95:
 26894                           	opt stack 0
 26895                           tosu	equ	0xFFF
 26896                           tosh	equ	0xFFE
 26897                           tosl	equ	0xFFD
 26898                           pclatu	equ	0xFFB
 26899                           pclath	equ	0xFFA
 26900                           tblptru	equ	0xFF8
 26901                           tblptrh	equ	0xFF7
 26902                           tblptrl	equ	0xFF6
 26903                           tablat	equ	0xFF5
 26904                           prodh	equ	0xFF4
 26905                           prodl	equ	0xFF3
 26906                           intcon	equ	0xFF2
 26907                           indf0	equ	0xFEF
 26908                           postinc0	equ	0xFEE
 26909                           fsr0h	equ	0xFEA
 26910                           fsr0l	equ	0xFE9
 26911                           wreg	equ	0xFE8
 26912                           indf1	equ	0xFE7
 26913                           postdec1	equ	0xFE5
 26914                           plusw1	equ	0xFE3
 26915                           fsr1h	equ	0xFE2
 26916                           fsr1l	equ	0xFE1
 26917                           indf2	equ	0xFDF
 26918                           postinc2	equ	0xFDE
 26919                           postdec2	equ	0xFDD
 26920                           plusw2	equ	0xFDB
 26921                           fsr2h	equ	0xFDA
 26922                           fsr2l	equ	0xFD9
 26923                           status	equ	0xFD8
 26924                           
 26925                           	psect	rparam
 26926  0000                     tosu	equ	0xFFF
 26927                           tosh	equ	0xFFE
 26928                           tosl	equ	0xFFD
 26929                           pclatu	equ	0xFFB
 26930                           pclath	equ	0xFFA
 26931                           tblptru	equ	0xFF8
 26932                           tblptrh	equ	0xFF7
 26933                           tblptrl	equ	0xFF6
 26934                           tablat	equ	0xFF5
 26935                           prodh	equ	0xFF4
 26936                           prodl	equ	0xFF3
 26937                           intcon	equ	0xFF2
 26938                           indf0	equ	0xFEF
 26939                           postinc0	equ	0xFEE
 26940                           fsr0h	equ	0xFEA
 26941                           fsr0l	equ	0xFE9
 26942                           wreg	equ	0xFE8
 26943                           indf1	equ	0xFE7
 26944                           postdec1	equ	0xFE5
 26945                           plusw1	equ	0xFE3
 26946                           fsr1h	equ	0xFE2
 26947                           fsr1l	equ	0xFE1
 26948                           indf2	equ	0xFDF
 26949                           postinc2	equ	0xFDE
 26950                           postdec2	equ	0xFDD
 26951                           plusw2	equ	0xFDB
 26952                           fsr2h	equ	0xFDA
 26953                           fsr2l	equ	0xFD9
 26954                           status	equ	0xFD8
 26955                           
 26956                           	psect	temp
 26957  00005B                     btemp:
 26958                           	opt stack 0
 26959  00005B                     	ds	1
 26960  0000                     int$flags	set	btemp
 26961  0000                     wtemp8	set	btemp+1
 26962  0000                     ttemp5	set	btemp+1
 26963  0000                     ttemp6	set	btemp+4
 26964  0000                     ttemp7	set	btemp+8
 26965                           tosu	equ	0xFFF
 26966                           tosh	equ	0xFFE
 26967                           tosl	equ	0xFFD
 26968                           pclatu	equ	0xFFB
 26969                           pclath	equ	0xFFA
 26970                           tblptru	equ	0xFF8
 26971                           tblptrh	equ	0xFF7
 26972                           tblptrl	equ	0xFF6
 26973                           tablat	equ	0xFF5
 26974                           prodh	equ	0xFF4
 26975                           prodl	equ	0xFF3
 26976                           intcon	equ	0xFF2
 26977                           indf0	equ	0xFEF
 26978                           postinc0	equ	0xFEE
 26979                           fsr0h	equ	0xFEA
 26980                           fsr0l	equ	0xFE9
 26981                           wreg	equ	0xFE8
 26982                           indf1	equ	0xFE7
 26983                           postdec1	equ	0xFE5
 26984                           plusw1	equ	0xFE3
 26985                           fsr1h	equ	0xFE2
 26986                           fsr1l	equ	0xFE1
 26987                           indf2	equ	0xFDF
 26988                           postinc2	equ	0xFDE
 26989                           postdec2	equ	0xFDD
 26990                           plusw2	equ	0xFDB
 26991                           fsr2h	equ	0xFDA
 26992                           fsr2l	equ	0xFD9
 26993                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4446
    Data        135
    BSS         937
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160    108     160
    BANK1           256      0     255
    BANK2           256      4     214
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), display_content(BANK1[80]), ToSendDataBuffer(BANK2[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), display_content(BANK1[80]), ToSendDataBuffer(BANK2[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), STR_6(CODE[6]), STR_5(CODE[9]), 
		 -> STR_4(CODE[7]), STR_3(CODE[9]), dc_manual(CODE[80]), dc_zero(CODE[80]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), dc_arc2(CODE[80]), dc_arc1(CODE[80]), 
		 -> dc_divide2(CODE[80]), dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), 
		 -> dc_main(CODE[80]), ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK1[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), display_content(BANK1[80]), ToSendDataBuffer(BANK2[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_schedule_command
    _motor_schedule_command->_motor_nonzero_steps_from_degrees
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    ___flmul->___xxtofl
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  101376
                                            106 BANK0      2     2      0
                                              0 BANK2      4     4      0
                  _SYSTEM_Initialize
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _display_prepare
                     _display_update
               _encoder_statemachine
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   10661
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                       _display_init
                     _display_update
                       _encoder_init
                           _i2c_init
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    3085
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     369
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2586
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    2377
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0    7576
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    5267
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    2417
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    2309
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (5) __i2c_write                                           5     2      3    2272
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     602
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                22    22      0   25905
                                             62 BANK0     22    22      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
         _encoder_next_arc_step_size
      _encoder_next_divide_step_size
        _encoder_next_setup_stepsize
                 _motor_change_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_schedule_command                               7     1      6    5364
                                             55 BANK0      7     1      6
                            ___fltol (ARG)
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          11     5      6     602
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    9833
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    9526
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3401
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_change_speed                                   2     0      2     447
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_next_setup_stepsize                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_next_divide_step_size                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _encoder_next_arc_step_size                           4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   51633
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    7363
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7124
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1828
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     720
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     961
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3099
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6    6967
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    5913
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    5516
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   12731
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    8311
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     650
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    2706
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1849
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     657
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     653
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     198
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _SYS_InterruptHigh                                   14    14      0  141289
                                             31 COMRAM    14    14      0
                     _USBDeviceTasks
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (8) _tmr0_isr                                             0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (9) _encoder_run                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _USBDeviceTasks                                       1     1      0  141289
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPService                                     1     1      0   80921
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (10) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfSetupHandler                              0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (11) _USBCheckStdRequest                                  0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStdSetCfgHandler                                 1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (12) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (12) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _USBStdFeatureReqHandler                             6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (10) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (10) _USBCheckMSDRequest                                  4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (10) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _MSDTransferTerminated                               4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (11) _USBStallEndpoint                                    8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (10) _APP_DeviceMSDInitialize                             0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (11) _USBMSDInit                                          3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (12) _ResetSenseData                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ExternalFlash_MediaInitialize                       2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _ExternalFlash_MediaDetect                           2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _APP_DeviceCustomHIDInitialize                       0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (11) _USBTransferOnePacket                               11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (11) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (12) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (11) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _encoder_next_arc_step_size
     _encoder_next_divide_step_size
     _encoder_next_setup_stepsize
     _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       ___fltol (ARG)
       __motor_run (ARG)
       _motor_items_in_cue (ARG)
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_stop
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _display_init
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _i2c_init
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
               i2_SYSTEM_Initialize
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
       i2_SYSTEM_Initialize
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      4      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      5A       1       95.7%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CF      31        0.0%
DATA                 0      0     4CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 23 23:54:07 2019

                         _motor_next_speed_check 0154                                       _USB_SD_Ptr 9DDC  
                                   ___fldiv@aexp 0086                                     ___fldiv@bexp 0085  
                                   ___fldiv@sign 007E                              __system_timer0_init F4AA  
                                             _os 00CC                                    _USBDeviceInit CB44  
                             _USBCheckHIDRequest DE34                   ?_encoder_next_divide_step_size 002E  
                                   __CFG_CP0$OFF 000000                              __end_of_system_init DBA2  
                       ?_i2c_display_write_fixed 0065             USER_USB_CALLBACK_EVENT_HANDLER@event 003D  
           USER_USB_CALLBACK_EVENT_HANDLER@pdata 003F                      __end_of_USBStdGetDscHandler D2A6  
                                            l851 D058                                              _BDT 000D00  
                                            l853 D140                                              l880 EE38  
                                            l856 D15C                                              l858 D174  
                                            l884 EE4A                                              l877 EE68  
                                            l886 EE56                                              l878 EE2C  
                                            _LBA 0164                                    ?_display_init 002E  
                                            _PR2 000FCB                                              _LUN 0190  
                                            _UIE 000F36                                              _UIR 000F62  
                                     _USBSuspend F44C                           __end_of_display_update F3AC  
                           USBStdSetCfgHandler@i 0045                                              prod 000FF3  
                                            tosl 000FFD                                              wreg 000FE8  
                                 _USBDeviceTasks CDD0                              ?_USBCheckHIDRequest 002E  
                                   __CFG_IESO$ON 000000                                   _USBDeviceState 002B  
                                   ___flmul@aexp 007B                                     ___flmul@bexp 0080  
                                   ___flmul@sign 007A                                     ___flmul@temp 0085  
                                   ___flmul@prod 0081                        __size_of_i2c_display_init 0050  
                          ??_USBCtrlTrfRxService 002E                         USBEnableEndpoint@options 0036  
                           ?__system_timer0_init 002E                                     ___fltol@exp1 0069  
                                           l1114 F0BC                                             l1115 F09E  
                                           l1302 BDE0                                             l1311 BE3A  
                                           l1303 B212                                             l1312 B270  
                                           l1304 B250                                             l1401 BDA2  
                                           l1313 B2B8                                             l1305 B232  
                                           l1250 F124                                             l1410 BE6A  
                                           l1330 B3E6                                             l1322 B310  
                                           l1082 F670                                             l1403 BDB0  
                                           l1323 B342                                             l1315 B2F2  
                                           l1307 B23C                                             l1252 F130  
                                           l1260 DA8E                                             l1412 BE76  
                                           l1340 B524                                             l1332 B422  
                                           l1324 B32E                                             l1316 B2C2  
                                           l1261 DA5E                                             l1405 BDD8  
                                           l1333 B40E                                             l1309 B246  
                                           l1414 BE82                                             l1342 B5B0  
                                           l1326 B338                                             l1271 C804  
                                           l1407 BE54                                             l1351 B6FC  
                                           l1343 B580                                             l1335 B418  
                                           l1327 B356                                             l2311 E53A  
                                           l1423 F382                                             l3120 EFC2  
                                           l1416 BE8E                                             l1408 BE5C  
                                           l1352 B72A                                             l1336 B436  
                                           l1328 B398                                             l3121 EFCC  
                                           l1281 C874                                             l1257 DA30  
                                           l1361 B82C                                             l1353 B71A  
                                           l1345 B63E                                             l1337 B4A4  
                                           l1097 F668                                             l1193 E9CC  
                                           l3130 F25E                                             l1282 C888  
                                           l1258 DA1A                                             l1266 F1C0  
                                           l3210 C35E                                             l3202 C266  
                                           l1418 BE9C                                             l1370 B902  
                                           l1362 B7FC                                             l1354 B73A  
                                           l1346 B60E                                             l1338 B474  
                                           l2330 C9A0                                             l3131 F268  
                                           l1283 C8E8                                             l1275 C7DC  
                                           l3203 C262                                             l1355 B722  
                                           l2331 C9FA                                             l1187 EF74  
                                           l3116 EFA2                                             l3300 F210  
                                           l1284 C8A2                                             l1276 C7FA  
                                           l3212 C384                                             l1380 BAA6  
                                           l1372 B9D8                                             l1364 B860  
                                           l1356 B794                                             l1348 B6E4  
                                           l1188 EF56                                             l3117 EF9A  
                                           l1285 C8E6                                             l1293 D40E  
                                           l3205 C2B0                                             l1373 B9A0  
                                           l1365 B8C8                                             l1357 B764  
                                           l1349 B6B4                                             l3126 F246  
                                           l1278 C890                                             l3222 C3F2  
                                           l1382 BB04                                             l1366 B87E  
                                           l2502 A712                                             l2510 A708  
                                           l3127 F23E                                             l1287 C922  
                                           l3215 C3BA                                             l3207 C2D8  
                                           l1391 BCA8                                             l1383 BBAA  
                                           l1375 BA4C                                             l1367 B8D8  
                                           l1359 B7F2                                             l2335 CA06  
                                           l2327 C974                                             l2503 A6D0  
                                           l3304 E462                                             l1288 C8F2  
                                           l3312 ECFC                                             l3224 C436  
                                           l3216 C39C                                             l3208 C386  
                                           l1392 BC78                                             l1384 BB22  
                                           l1376 BA1C                                             l1368 B88A  
                                           l3232 BED4                                             l2336 CA08  
                                           l2328 C984                                             l2600 B146  
                                           l2520 A7BE                                             l2512 A730  
                                           l2504 A6DA                                             l3313 ECC2  
                                           l3225 C45A                                             l3209 C336  
                                           l1385 BBC0                                             l1369 B932  
                                           l3233 BED0                                             l2337 CA72  
                                           l2329 C998                                             l2601 B16E  
                                           l2513 A742                                             l2505 A6E8  
                                           l2441 A292                                             l3306 E49E  
                                           l3226 C484                                             l1394 BD1A  
                                           l1386 BB2E                                             l1378 BA64  
                                           l2610 EAAA                                             l3250 C13A  
                                           l3234 BEE4                                             l2338 CAAC  
                                           l2434 B1A8                                             l2450 A320  
                                           l3307 E4E0                                             l3227 C490  
                                           l1395 BD42                                             l1387 BB6C  
                                           l1379 BAD6                                             l2611 EAB4  
                                           l3243 C102                                             l2603 B178  
                                           l2531 AA5E                                             l2523 A7E2  
                                           l2515 A76E                                             l2507 A720  
                                           l2451 A330                                             l3324 F30A  
                                           l3228 C492                                             l1388 BC34  
                                           l2620 F486                                             l2612 EABE  
                                           l3252 C17E                                             l3244 C0E4  
                                           l3236 BF14                                             l2292 F104  
                                           l2540 AB92                                             l2532 AAA8  
                                           l2524 A944                                             l2508 A6F0  
                                           l2436 A452                                             l2460 A3C4  
                                           l2444 A2BA                       USBConfigureEndpoint@handle 0034  
                                           l3325 F304                                             l1397 BD50  
                                           l1389 BBFC                                             l2621 F48A  
                                           l2613 EAC8                                             l3253 C19C  
                                           l3237 BF10                                             l2541 AB50  
                                           l2525 A924                                             l2517 A77A  
                                           l2509 A6FA                                             l2445 A2CA  
                                           l2437 A254                                             l2630 EB24  
                                           l2622 F48E                                             l3238 BF24  
                                           l2550 ABBA                                             l2542 AB5A  
                                           l2534 AAD0                                             l2518 A784  
                                           l2462 A3EC                                             l2454 A35E  
                                           l2438 A264                                             l1399 BD78  
                                           l2631 EB2E                                             l2607 EAD2  
                                           l3255 C1C0                                             l3239 BF42  
                                           l2543 AB68                                             l2535 AAF0  
                                           l2519 AAB0                                             l2527 AA36  
                                           l2471 A4D2                                             l2463 A3FC  
                                           l2712 E06C                                             l3280 CCDE  
                                           l2632 EB38                                             l2608 EA9E  
                                           l3256 C1DE                                             l2560 AC96  
                                           l2552 ABFE                                             l2528 A9C6  
                                           l2472 A478                                             l2456 A386  
                                           l2448 A2F8                                             l2713 E07A  
                                           l2705 DFF2                                             l2721 E3FC  
                                           l3281 CCFC                                             l2617 F492  
                                           l2545 ABA0                                             l2537 AB06  
                                           l2481 A4FA                                             l2473 A49A  
                                           l2457 A396                                             l2714 E090  
                                           l2706 E00A                                             l2722 E3F0  
                                           l3290 CD72                                             l2626 EB42  
                                           l2618 F482                                             l2562 AEB6  
                                           l2570 ADC2                                             l2546 AB70  
                                           l2474 A4A8                                             l2466 A42A  
                                           l3283 CD0E                                             l2627 EB0E  
                                           l2563 ACAC                                             l2555 AC42  
                                           l2547 AB7A                                             l2483 A538  
                                           l2708 E038                                             l3284 CD02  
                                           l2580 AF34                                             l2572 ADCA  
                                           l2564 AD92                                             l2548 AB88  
                                           l2492 A5F2                                             l2476 A4E0  
                                           l2709 E02C                                             l2725 E424  
                                           l2645 EE92                                             l2629 EB1A  
                                           l2469 B1FA                                             l2573 AEAE  
                                           l2557 AC64                                             l2477 A4B0  
                                           l2726 E432                                             l2718 E3CA  
                                           l3198 C226                                             l2646 EEA6  
                                           l3286 CD4C                                             l2558 AC76  
                                           l2478 A4BA                                             l2727 E448  
                                           l2719 E3DE                                             l3199 C222  
                                           l3295 CDBE                                             l3287 CD34  
                                           l3279 CCCE                                             l2591 B18A  
                                           l2583 AFE2                                             l2575 AECE  
                                           l2567 ADA0                                             l2487 A6BC  
                                           l2495 A61A                                             l2479 A4C8  
                                           l2592 B0EC                                             l2576 B086  
                                           l2584 B078                                             l2568 ADB4  
                                           l2496 A666                                             l2488 A578  
                                           l3289 CD7E                                             l2593 B118  
                                           l2489 A5C4                                             l2586 B090  
                                           l2579 AF80                                             l2499 A694  
                                           l2932 DC52                                             l2924 DBC2  
                                           l2596 B126                                             l2588 B0BE  
                                           l2933 DC46                                             l2597 B130  
                                           l2926 DC2E                                             l2598 B13E  
                                           l2935 DC6E                                             l2927 DC1E  
                    ?_encoder_next_arc_step_size 0060                    __size_of_encoder_statemachine 0FDE  
                          ??i2_SYSTEM_Initialize 002E                                             STR_1 A214  
                                           STR_2 A21D                                             STR_3 A214  
                                           STR_4 A21D                                             STR_5 A214  
                                           STR_6 A224                                             STR_7 A20B  
                          ??_USBCtrlTrfTxService 002E                                             _UCFG 000F39  
                                           _UEP0 000F26                                             _UEP1 000F27  
                                           _UEIE 000F37                                             _UEIR 000F63  
                                           _UCON 000F65                                             _TMR2 000FCC  
                                 ??_encoder_init 0060                                   _ResetSenseData EC4E  
                                           _enc1 01FE                                             _enc2 01FD  
         USBStdFeatureReqHandler@current_ep_data 0048                                             _pDst 0184  
                                           _main D04E                          _bit_pattern_verticalbar A1D5  
                                           _itoa F1EA                                             fsr0h 000FEA  
                                           fsr1h 000FE2                          __end_of_display_prepare BEA2  
                                           indf0 000FEF                                             fsr2h 000FDA  
                                           fsr0l 000FE9                                             indf1 000FE7  
                                           indf2 000FDF                                             fsr1l 000FE1  
                                           fsr2l 000FD9                                             btemp 005B  
                                           _utoa E45A                           __CFG_DSWDTOSC$T1OSCREF 000000  
                __size_of_motor_schedule_command 00A2                        _ExternalFlash_MediaDetect F67A  
                                           prodh 000FF4                                             prodl 000FF3  
                                           start 9086                  __end_of_APP_DeviceMSDInitialize F646  
                   ?__motor_get_speed_in_degrees 0087                                  ___fldiv@new_exp 007F  
                  motor_steps_from_degrees@steps 008B                             ??_USBCheckHIDRequest 002E  
                     __end_of_USBCheckStdRequest DE34                           ??_USBCtrlTrfOutHandler 0030  
                                   ___param_bank 000000                        ??_USBStdFeatureReqHandler 0045  
                                   _USBOutHandle 017C                    __size_of__display_padded_itoa 00E2  
                       ??_USBStdGetStatusHandler 002E                                   ?_USBDeviceInit 002E  
              motor_speed_from_index@speed_index 0093                         _motor_steps_from_degrees E0A2  
                                  __CFG_PLLDIV$2 000000                       __end_of_motor_speed_lookup 9459  
                  i2c_display_write_fixed@length 0067                                            l17130 F37A  
                                          l17242 F11C                                            l17086 ECC2  
                                          l17248 F128                                            l18160 B390  
                                          l17534 EE38                                            l17278 D40E  
                                          l18174 B3DE                                            l16806 E9C4  
                                          l16496 C484                                            l17538 EE56  
                                          l19090 EAEC                                            l19092 EB02  
                                          l16846 C774                                            l19094 EB5C  
                                          l19096 EB72                                            l16866 C81E  
                                          l16970 CAAC                                            l18618 D140  
                                          l16966 CA72                                    ___fltol@sign1 0068  
                                __end_of___aldiv E0A2                                   ??_display_init 0081  
                                __end_of___almod E45A                                            ?_main 002E  
                                __end_of___fldiv C4AE                                            ?_itoa 0070  
                                          STR_15 A1F6                                            STR_16 A202  
                                          STR_17 A22A                                            STR_18 A1E9  
                                __end_of___flmul C1F4                                 ??__display_clear 0060  
              __size_of_USBCtrlEPServiceComplete 00F6                                  __end_of___fltol DC80  
                                          ?_utoa 0067                           __end_of_USBDeviceTasks CF14  
                                          u16000 EC2E                                            u16010 EC3A  
                                          u16016 EC3C                                            u16008 EC32  
                      ?_USBCtrlEPServiceComplete 002E                                            u16060 EFA6  
                                          u17020 EA12                                            u17120 C832  
                                          u16090 F24A                                            u17130 C88C  
                                          u17220 CA02                                            u18020 A392  
                                          u18030 A3C0                                            u17080 C788  
                                          u16600 C444                                            u17090 C7FE  
                                          u16610 C468                                            u18210 A586  
                                          u17340 E400                                            u16700 BF30  
                                          u18220 A5EE                                            u18060 A3F8  
                                          u16710 C0A6                                            u18070 A426  
                                          u17175 CF48                                            u17520 F15C  
                                          u17280 E03C                                            u16800 C1AA  
                                          u18400 A798                                            u17370 ECE4  
                                          u16570 C3EE                                            u18250 A626  
                                          u16715 C09C                                            u18260 A690  
                                          u16830 DBE0                                            u16760 C136  
                                          u15960 EBF6                                            u17377 ECDA  
                                          u18610 ABEE                                            u15970 EC04  
                                __end_of___lwdiv EFD6                                            u16835 DBD6  
                                          u17900 A260                                            u15980 EC12  
                                          u16870 DC58                                            u16950 CD88  
                                          u16790 C18C                                            u18630 AC30  
                                          u17910 A28E                                            u15990 EC20  
                                          u18631 AC2E                                            u15968 EBFA  
                                          u15978 EC08                                            u17940 A2C6  
                                          u15988 EC16                                            u17950 A2F4  
                                          u15998 EC24                                            u16991 F034  
                                          u17980 A32C                                            u17990 A35A  
                    __size_of_motor_change_speed 000A                                            u19757 F046  
                                          u18990 B3C0                                            u19767 F05A  
                                __end_of___lwmod F272                                            i2l300 E5DC  
                                          i2l220 E692                                            i2l214 E1B2  
                                          i2l222 E6A8                                            i2l231 D966  
                                          i2l232 D910                                            i2l160 CE20  
                                          i2l321 E760                                            i2l145 CB8A  
                                          i2l250 DF54                                            i2l226 E7D2  
                                          i2l322 E75A                                            i2l162 CE46  
                                __end_of_dc_arc1 9F26                                            i2l147 CBB2  
                                          i2l307 F2F6                                            i2l315 F40C  
                                          i2l155 CDE6                                  __end_of_dc_arc2 9ED6  
                                          i2l340 E264                                            i2l260 D51C  
                                          i2l332 EDD8                                            i2l180 F356  
                                          i2l236 D98E                                            i2l308 F2F4  
                                          i2l316 F40A                                            i2l172 CED0  
                                          i2l164 CE5A                                            i2l156 CDF6  
                                  __CFG_WDTEN$ON 000000                                            i2l253 DFCC  
                                          i2l245 DF22                                            i2l341 E268  
                                          i2l261 D4FA                                            i2l149 CBEC  
                                          i2l165 CE66                                            i2l157 CDFE  
                                          i2l254 DF94                                            i2l342 E2E2  
                                          i2l334 EE20                                            i2l174 CEF0  
                                          i2l166 CE8E                                            i2l247 DF2C  
                                          i2l343 E2A8                                            i2l263 D590  
                                          i2l167 CE98                                            i2l159 CE14  
                                          i2l264 D576                                            i2l184 D800  
                                          i2l192 D742                                            i2l432 DEDC  
                                          i2l280 D28E                                            i2l272 DCC8  
                                          i2l360 DD80                                            i2l176 CF0C  
                                          i2l249 DF8C                                            i2l345 E2C8  
                                          i2l425 DE7E                                            i2l281 D18A  
                                          i2l361 DD92                                            i2l169 CEAA  
                                          i2l186 D82A                                            i2l426 DE50  
                                          i2l274 DD3A                                            i2l362 DD98  
                                          i2l179 F348                                            i2l283 D19C  
                                          i2l355 DDF0                                            i2l188 D8A8  
                                          i2l436 DE9C                                            i2l428 DE8E  
                                          i2l372 C4CE                                            i2l284 D226  
                                          i2l364 DD9E                                            i2l356 DD6C  
                                          i2l437 DEB2                                            i2l429 DE6C  
                                          i2l381 C622                                            i2l373 C4D2  
                                          i2l293 E618                                            i2l365 DDBA  
                                          i2l534 D6DC                                            i2l438 DEBC  
                                          i2l550 E36A                                            i2l286 D22C  
                                          i2l294 E5B2                                            i2l366 DDD2  
                                          i2l358 DD74                                            i2l535 D648  
                                          i2l439 DED2                                            i2l391 C6AE  
                                          i2l383 C5EC                                            i2l375 C538  
                                          i2l287 D282                                            i2l359 DD7A  
                                          i2l384 C608                                            i2l537 D6D4  
                                          i2l545 E39C                                            i2l393 C700  
                                          i2l377 C580                                            i2l289 D288  
                                          i2l297 E62E                                            i2l562 E370  
                                          i2l546 E302                                            i2l386 C66E  
                                          i2l298 E5BE                                            i2l387 C67A  
                                          i2l379 C5A2                                            i2l299 E5C2  
                                          i2l820 E926                                            i2l388 C6F4  
                                          i2l821 E92E                                            i2l822 E936  
                                          i2l816 E958                                            i2l824 E940  
                                          i2l826 E94A                                            i2l780 EEF6  
                                          i2l783 EF2C                                            i2l880 EFE4  
                                          _UADDR 000F38                                            i2l884 EFF6  
                                          i2l877 F014                                            i2l886 F002  
                                          i2l878 EFDA                                  __end_of_dc_main A0B6  
                                          _TMR0H 000FD7                                            _TMR0L 000FD6  
                                          _PORTA 000F80                                            _PORTE 000F84  
                                          _RPOR4 000EC4                                            _USTAT 000F64  
                                __end_of_dc_zero 9E86                                  ?_display_update 002E  
             __size_of_USBCtrlEPAllowStatusStage 00C2                              ___lmul@multiplicand 0064  
                                     i2memcpy@d1 002E                                   __CFG_FCMEN$OFF 000000  
                             _USBCheckMSDRequest E2EE                                       i2memcpy@s1 0030  
                __end_of_USBCtrlEPAllowDataStage E6DA                                            _sd000 A1E5  
                                          _sd001 A0F6                                            _sd002 A12A  
                                          _sd003 A199                   ?_USBIncrement1msInternalTimers 002E  
                 __size_of_MSDTransferTerminated 0056                    __end_of_MSDTransferTerminated EF2E  
                                   _gblCBWLength 0188            __i2c_display_send_init_sequence@F6889 02C1  
                          ??__system_timer0_init 0060                           __end_of_ResetSenseData ECB0  
                        __end_of__backlight_init F67A                  __end_of_motor_postscaler_lookup 9A0E  
                 __end_of_motor_prescaler_lookup 9DDC                                            pclath 000FFA  
                     __end_of__display_itoa_long D4CC                                            tablat 000FF5  
                      __size_of_USBStallEndpoint 0106                              ?_USBCheckMSDRequest 002E  
                                _MSDCommandState 001F                                            plusw1 000FE3  
                                          plusw2 000FDB                                      ?_USBMSDInit 002E  
                                          ttemp5 005C                                            ttemp6 005F  
                                          ttemp7 0063                                            utoa@c 006F  
                                          utoa@v 006D                                            status 000FD8  
                              __CFG_DSWDTPS$8192 000000                                            wtemp8 005C  
                               __end_ofi2_memcpy EDCA      i2c_display_program_custom_character@address 007F  
                   __size_of_USBStdSetCfgHandler 00DC                                  __initialization E896  
          __end_of_ExternalFlash_MediaInitialize F60A           __size_of_ExternalFlash_MediaInitialize 001A  
                  _ExternalFlash_MediaInitialize F5F0                                      _system_init DAC4  
                                   __end_of_main D17A                                     __end_of_itoa F22E  
         __end_of__ic2_display_set_ddram_address F576          __size_of__ic2_display_set_ddram_address 0024  
                 __ic2_display_set_ddram_address F552                  __end_of_i2c_display_write_fixed EF82  
                                   __end_of_utoa E504                                 __end_of_i2c_init F5D6  
                     __display_signed_itoa@value 008F                     __motor_run@distance_in_steps 0060  
                           ??_USBCheckMSDRequest 0039                                   __CFG_OSC$HSPLL 000000  
                        _USBCheckMSDRequest$2534 0039                          _USBCheckMSDRequest$2535 003B  
                      __size_of_USBCtrlEPService 0096                                           ??_main 00CA  
                                         ??_itoa 0076                           _motor_schedule_command E504  
                             USBStallEndpoint@ep 0033                                           ??_utoa 006D  
                                  __activetblptr 000003                                  ?_USBDeviceTasks 002E  
             _ExternalFlash_WriteProtectStateGet 000000                                      ?_USBSuspend 002E  
                          _motor_final_stepcount 0158                               _motor_items_in_cue F646  
         __end_of__ic2_display_set_cgram_address F52C          __size_of__ic2_display_set_cgram_address 002A  
                 __ic2_display_set_cgram_address F502                                           _CCPR1L 000FBB  
                                         _EECON2 000FA7                                           _DMABCH 000F66  
                                         _DMABCL 000F67                                  ?_ResetSenseData 002E  
                                     __i2c_start F66E                           SYSTEM_Initialize@state 0060  
                                     __i2c_write F07A                                           i2l1025 F2AA  
                                         i2l1026 F2A0                                           i2l1027 F2B2  
                            ?_motor_items_in_cue 002E                                           i2l2412 D2D6  
                                         i2l2422 D360                                           i2l2415 D2FE  
                                         i2l3312 EDB8                                           i2l3313 ED80  
                                         i2l2425 D388                                           i2l2417 D31C  
                                         i2l2409 D332                                           i2l2418 D32A  
                                         i2l2427 D3A6                                           i2l2428 D3B4  
                                         i2l3318 F4F0                                           i2l3319 F4E0  
                                         i2l9990 DE66                  ??_APP_DeviceCustomHIDInitialize 003A  
                                         _OSCCON 000FD3                                   __CFG_WDTPS$512 000000  
                                         _RPOR21 000ED5                                           _RPOR23 000ED7  
                                 __CFG_WPCFG$OFF 000000                            __display_itoa@missing 00AB  
                               __end_of___xxtofl CDD0                                 ??__i2c_wait_idle 0060  
                               ?_display_prepare 002E                          ?_motor_speed_from_index 0093  
                                 __CFG_WPDIS$OFF 000000                                _shortPacketStatus 002A  
                                 __CFG_XINST$OFF 000000                              _motor_current_speed 00F3  
                                USBDeviceTasks@i 004C                                      i2memcpy@tmp 0038  
                              _motor_process_cue EA26                      USBStdFeatureReqHandler@pUEP 0046  
                       USBTransferOnePacket@data 002F                       USBCtrlTrfInHandler@lastDTS 002F  
                           __size_of_encoder_run 0118                                  ??_USBDeviceInit 0036  
                                         ___lmul EE80                                           _gblCBW 0100  
                                      ??___aldiv 0068                                        ??___almod 0068  
                             __size_of__i2c_send 000A                                        ??___fldiv 0076  
                                 __CFG_STVREN$ON 000000                                        ??___flmul 0076  
                             __size_of__i2c_stop 0008                                        ??___fltol 0064  
    i2SYSTEM_Initialize@pll_startup_counter_3052 0030        SYSTEM_Initialize@pll_startup_counter_3052 0063  
                                      ??___lwdiv 0064                               ?_motor_process_cue 002E  
                                     _SoftDetach 00F8                                        ??___lwmod 0064  
                                         _config 011F                                           _buffer 0800  
                              _USBEnableEndpoint F338                  __size_of_USBStdGetStatusHandler 009C  
                           ??_motor_items_in_cue 0060                                           _memcpy ECB0  
                                         _memset F4D6                                           clear_0 E8DE  
                                         clear_1 E8F0                                           clear_2 E8FC  
                                         clear_3 E908                                           clear_4 E914  
                      _ExternalFlash_SectorWrite 000000                                  __CFG_CLKOEC$OFF 000000  
                               __end_of_inq_resp A17C                                 __motor_run@speed 0064  
                           __end_of_encoder_init F552                               ?_USBEnableEndpoint 0036  
                                         _tx_buf 02CA                            i2c_display_init@F6892 02B8  
                                         _strlen F2FA                          _motor_current_stepcount 000D  
       i2c_display_program_custom_character@cntr 0080                                 __end_of_tmr0_isr F2B6  
                  __size_of_USBTransferOnePacket 0102                              __size_of_USBMSDInit 010A  
                    i2c_display_write_fixed@data 0065                                           itoa@cp 0076  
                            ??_motor_process_cue 006B                    __size_of__display_signed_itoa 0044  
                     __end_of_motor_steps_lookup 9827             __size_of__motor_get_speed_in_degrees 013A  
                                   __mediumconst 908A                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
               __size_of_APP_DeviceMSDInitialize 0010                                  _motor_direction 00F5  
                            ??_USBEnableEndpoint 0037                                 _i2c_display_init F02A  
                                    _CtrlTrfData 000D38                                __system_pin_setup ED10  
                               ?__backlight_init 002E                  ExternalFlash_MediaDetect@config 002E  
                           _controlTransferState 0029                             __CFG_LS48MHZ$SYS48X8 000000  
                                   ___xxtofl@arg 006A                                     ___xxtofl@exp 0069  
                              _SYSTEM_Initialize EE26                                     ___xxtofl@val 0060  
   encoder_statemachine@target_position_in_steps 00A6                               ?__system_pin_setup 002E  
                                     __accesstop 0060                          __end_of__initialization E91A  
                 __end_of_motor_speed_from_index F636                             __end_of_display_init F3E2  
                             ?_SYSTEM_Initialize 002E                           __size_of__display_itoa 0224  
                                  ___rparam_used 000001                         __size_of_USBStallHandler 0044  
                                     ___fltol@f1 0060                        __end_of_motor_process_cue EA9C  
                            __size_of_USBSuspend 0030                              ??__system_pin_setup 0060  
                            _motor_maximum_speed 0178                                   __pcstackCOMRAM 002E  
                      __end_of_USBEnableEndpoint F374                                    __end_of_sd000 A1E9  
                                  __end_of_sd001 A12A                                    __end_of_sd002 A158  
                                  __end_of_sd003 A1B3                                     __pidataBANK1 EB7C  
                                   __pidataBANK2 F5D6                              ??_SYSTEM_Initialize 0060  
                __end_of_bit_pattern_verticalbar A1DD                 __size_of_USBCtrlEPAllowDataStage 0098  
                                _active_protocol 00FE                    __size_of_USBConfigureEndpoint 0094  
             __size_of_ExternalFlash_MediaDetect 0004                      __end_of_USBCtrlTrfInHandler E2EE  
                            display_prepare@cntr 00C9                              display_prepare@temp 00BE  
                                   _gblSenseData 0133                      motor_change_speed@new_speed 0060  
                 ?_ExternalFlash_MediaInitialize 002E                                       _dc_divide1 9F76  
                                     _dc_divide2 9F26                                        ?i2_memcpy 002E  
                      __end_of__system_pin_setup ED6E                         ??_USBCtrlTrfSetupHandler 004B  
                        _USBTicksSinceSuspendEnd 00FB            motor_nonzero_steps_from_degrees@steps 0093  
                      __end_of_SYSTEM_Initialize EE80                                __end_of__i2c_send F65C  
                         _USBStdGetStatusHandler E5A6                              USBStallEndpoint@dir 002E  
                              __end_of__i2c_stop F66E                                      ?__i2c_start 002E  
                ??_encoder_next_divide_step_size 0060                                      ?__i2c_write 0065  
                                     __pbssBANK0 00CC                                       __pbssBANK1 0100  
                                     __pbssBANK2 0200                 __size_of_i2c_display_write_fixed 0054  
                               _USBStallEndpoint D6E4                                       _gblNumBLKS 0160  
                                      ?_i2c_init 002E                                 _mediaInformation 0189  
                    __size_of_USBWakeFromSuspend 0036                       ??_motor_steps_from_degrees 008B  
                                    _pBDTEntryIn 0007                      __size_of_i2c_display_cursor 0022  
               __end_of_USBCtrlEPServiceComplete D9E2            __end_of_APP_DeviceCustomHIDInitialize F44C  
         __size_of_APP_DeviceCustomHIDInitialize 0034                    _APP_DeviceCustomHIDInitialize F418  
                    MSDTransferTerminated@handle 0039                             USBCtrlTrfRxService@i 002E  
                                        ?___lmul 0060                           __display_itoa@decimals 0097  
                   __end_of_encoder_statemachine B20E                                          ?_memcpy 0060  
                                        ?_memset 002E                                       __motor_run C94A  
                                 ___lmul@product 0068                                       _device_dsc A1B3  
                               ??_display_update 0070                                 _USBCtrlEPService E6DA  
                                     _ep_data_in 0175                               __display_clear@col 0063  
                             __display_clear@row 0062                                          ?_strlen 0060  
                    __end_of_USBCtrlTrfRxService D5DA        __ic2_display_set_ddram_address@data_array 006B  
                                  __display_itoa C726                               _USBCheckStdRequest DD5C  
                              _configDescriptor1 A0B6                                          i2l10210 DF2C  
                                        i2l10150 EFE4                                          i2l10154 F002  
                                        i2l10162 F4E0                                          i2l12200 CBE4  
                                        i2l10472 DCC0                                          i2l12148 ED80  
                                        i2l12172 CB82                                          i2l13432 CEA2  
                                        i2l19100 E970                                          i2l19102 E9A4  
                                      ?___xxtofl 0060                      __end_ofi2_SYSTEM_Initialize F02A  
                                     ??i2_memcpy 0034                      __end_of_USBCtrlTrfTxService DFD4  
                            _USBStdSetCfgHandler DC80                                          _RPINR21 000EFC  
                                        _RPINR22 000EFD                                          _SSP1ADD 000FC8  
                  i2c_display_init@init_sequence 006B                                __end_of_dc_manual 9E36  
                   __end_of__display_padded_itoa DAC4                                          _SSP1BUF 000FC9  
                                        _RXADDRH 000F68                                          _RXADDRL 000F69  
                                        _TXADDRH 000F6A                                          _TXADDRL 000F6B  
                            ?_USBCheckStdRequest 002E                     __size_of_USBStdGetDscHandler 012C  
                             _motor_speed_lookup 908B                                __end_of_dc_setup1 A066  
                              __end_of_dc_setup2 A016                                          _UIEbits 000F36  
        motor_nonzero_steps_from_degrees@degrees 008F         __end_of_motor_nonzero_steps_from_degrees F116  
      __size_of_motor_nonzero_steps_from_degrees 004C               ??_motor_nonzero_steps_from_degrees 0093  
              ?_motor_nonzero_steps_from_degrees 008F                 _motor_nonzero_steps_from_degrees F0CA  
                                        _UIRbits 000F62                                       ??_i2c_init 0060  
                               __CFG_CFGPLLEN$ON 000000                         __i2c_write@slave_address 0068  
                                   ??_USBMSDInit 0039           encoder_next_arc_step_size@old_stepsize 0060  
                     __display_padded_itoa@value 0078                       __size_of_motor_process_cue 0076  
                                  __i2c_send@dat 0060                                        ?_tmr0_isr 002E  
                                        __Hparam 0000                  ??_USBIncrement1msInternalTimers 002E  
                           ?_USBStdSetCfgHandler 002E                      __size_of_USBCheckHIDRequest 00D0  
                                        __Lparam 0000                               __display_itoa@text 0098  
                              __end_of_hid_rpt01 A199                       _MSDTransferTerminated$2623 003B  
                     __size_of_USBEnableEndpoint 003C                                     ?_system_init 002E  
                motor_steps_from_degrees@degrees 0087                            __size_of_encoder_init 0026  
                           ??_USBCheckStdRequest 004B                                          ___aldiv DFD4  
                                        ___almod E3AC                    __size_of_USBCtrlTrfOutHandler 005C  
                             __display_itoa_long D3BE              ExternalFlash_MediaInitialize@config 002E  
                                        ___fldiv C1F4                                 _ToSendDataBuffer 0238  
                                __size_of___lmul 0058                                          ___flmul BEA2  
                                        ___fltol DBA2                                 ??_USBDeviceTasks 004C  
                                        ___lwdiv EF82                          ?_motor_schedule_command 0097  
                              ??_USBStallHandler 002E                                          ___lwmod F22E  
                                        _dc_arc1 9ED6                                          _dc_arc2 9E86  
                    motor_schedule_command@speed 009B   i2c_display_program_custom_character@data_array 0074  
                                        _dc_main A066           __ic2_display_set_cgram_address@address 006D  
                     __end_of_motor_change_speed F666                                          _dc_zero 9E36  
                            __size_of__i2c_start 0008                                          __pcinit E896  
                                __size_of_memcpy 0060                              __size_of__i2c_write 0050  
                                __size_of_memset 002C                        __end_of_configDescriptor1 A0F6  
                                        __ramtop 0F00                                          __ptext0 D04E  
                                        __ptext1 DAC4                                          __ptext2 F60A  
                                        __ptext3 F5BA                                          __ptext4 F52C  
                                        __ptext5 F374                                          __ptext6 EF2E  
                                        __ptext7 F576                                          __ptext8 F552  
                                        __ptext9 F3AC                                   ?__display_itoa 0095  
                                        _inPipes 0001                      _USBDeferOUTDataStagePackets 00FC  
                                      _T0CONbits 000FD5                              ?__display_itoa_long 00AD  
                           __motor_run@direction 006A                                  __size_of_strlen 003E  
                    __end_of__system_timer0_init F4D6                                     ??_USBSuspend 0045  
                                      _T2CONbits 000FCA                               __end_of_USBMSDInit D6E4  
                               ??_ResetSenseData 002E                                       ??___xxtofl 0064  
                        _APP_DeviceMSDInitialize F636                                          _msd_cbw 000D40  
                               ___aldiv@dividend 0060                                          _msd_csw 000D80  
                    __display_itoa_long@decimals 00B1                       __size_of__system_pin_setup 005E  
                ?__ic2_display_set_ddram_address 002E                 ??__ic2_display_set_ddram_address 006A  
                             __end_of_USB_CD_Ptr 9DE6                                       _msd_buffer 000600  
                     __size_of_SYSTEM_Initialize 005A                  __size_of_USBCtrlTrfSetupHandler 0092  
                                        main@tmp 02D2                            __size_of_display_init 0036  
                           end_of_initialization E91A                            _MSDTransferTerminated EED8  
                             __end_of_USB_SD_Ptr 9DE4                       __end_of_bit_pattern_degree A1D5  
                                        memcpy@d 0067                                          memcpy@n 0064  
                                        memcpy@s 0069          __motor_get_speed_in_degrees@speed_index 0087  
                            _pBDTEntryEP0OutNext 0017                                          itoa@buf 0070  
                                        memset@c 0030                                          memset@n 0032  
                                        itoa@val 0072                                          memset@p 0034  
                                   _encoder_init F52C                                  _USB1msTickCount 0168  
                           ??__display_itoa_long 00B4                                        i2u1120_40 EDA2  
                                      i2u1120_47 ED98                                        i2u1123_40 CBA6  
                                      i2u1126_40 CC48                         ?_USBStdFeatureReqHandler 002E  
                                      i2u1250_40 CF10       encoder_statemachine@target_divide_position 00AA  
                          ??_USBStdSetCfgHandler 0045                                       ??_tmr0_isr 002E  
                ?__ic2_display_set_cgram_address 002E                 ??__ic2_display_set_cgram_address 006A  
                             __end_of_USBSuspend F47C                              _motor_period_lookup 9A0E  
                        _USBCtrlEPAllowDataStage E642                   __end_of_motor_schedule_command E5A6  
                       __end_of_i2c_display_init F07A                                 ___aldiv@quotient 006A  
                                        postdec1 000FE5                                          postdec2 000FDD  
                   _ExternalFlash_SectorSizeRead 000000                                          postinc0 000FEE  
                                        postinc2 000FDE                                          utoa@buf 0067  
                                     _motor_init F60A                                       _motor_mode 001B  
                       _USBCtrlEPServiceComplete D8EC                                          utoa@val 0069  
                                      _MSD_State 0020                                       _motor_stop F160  
                                    ?__motor_run 0060                                          strlen@s 0060  
                    __size_of_USBCheckMSDRequest 00BE                       _USBStatusStageEnabledFlag1 0022  
                     _USBStatusStageEnabledFlag2 0021                                   _bit_pattern_ae A1C5  
                             USBEnableEndpoint@p 0037                                        _PORTAbits 000F80  
                                      _PORTDbits 000F83                                        _PORTEbits 000F84  
                               __CFG_DSBOREN$OFF 000000                                     _display_init F3AC  
                               __CFG_CPUDIV$OSC1 000000                                    ___xxtofl@sign 0068  
                                      _TRISAbits 000F92                                        _TRISBbits 000F93  
                                      _TRISCbits 000F94                                        _TRISDbits 000F95  
                                      _TRISEbits 000F96                               _ReceivedDataBuffer 0278  
                             _BothEP0OutUOWNsSet 0025                                      ___fldiv@grs 0081  
                                    ___fldiv@rem 007A                                    __pbssBIGRAMll 0800  
                      USBConfigureEndpoint@EPNum 0033                          _i2c_display_write_fixed EF2E  
                              __CFG_SOSCSEL$HIGH 000000                       ?_USBCtrlEPAllowStatusStage 002E  
                           _encoder_statemachine A230              USER_USB_CALLBACK_EVENT_HANDLER@size 0041  
                        __size_of__display_clear 004A                                        _USTATcopy 002C  
                   ?_encoder_next_setup_stepsize 0060                                      ___flmul@grs 007C  
                   __end_of_USBTransferOnePacket D8EC                               _motor_steps_lookup 9459  
                                    _CCP1CONbits 000FBA                     __end_of__display_signed_itoa F1EA  
               __end_of_motor_steps_from_degrees E16C              __end_of__motor_get_speed_in_degrees D04E  
                    __motor_get_speed_in_degrees CF14                           i2c_display_cursor@line 006E  
                               __CFG_IOL1WAY$OFF 000000                                    ??_encoder_run 002E  
                              __CFG_WPEND$PAGE_0 000000                              __CFG_MSSP7B_EN$MSK7 000000  
                         _USBCtrlTrfSetupHandler E804                             __display_padded_itoa D9E2  
                         __end_of_bit_pattern_ae A1CD                         __size_of_display_prepare 0C94  
                  ??__motor_get_speed_in_degrees 0089                            __end_of_USBDeviceInit CC8C  
          __end_of_USBIncrement1msInternalTimers F5BA           __size_of_USBIncrement1msInternalTimers 0022  
                  _USBIncrement1msInternalTimers F598                                   __end_of___lmul EED8  
                                ??__display_itoa 009A                      __size_of_motor_items_in_cue 000C  
                       __end_of_USBStallEndpoint D7EA                                        i2memcpy@d 0034  
                                      i2memcpy@n 0032                                        i2memcpy@s 0036  
                      ??_APP_DeviceMSDInitialize 003C                                   __end_of_memcpy ED10  
                                _MSDRetryAttempt 00F9                                   __end_of_memset F502  
                               __CFG_DSWDTEN$OFF 000000                                _USBBusIsSuspended 0027  
                                 __end_of_strlen F338                     __display_padded_itoa@padding 008E  
                            start_initialization E896                          ?_USBStdGetStatusHandler 002E  
                       i2SYSTEM_Initialize@state 0032                    USBCtrlTrfRxService@byteToRead 002F  
                           display_prepare@space 00C8                        __display_itoa_long@length 00B8  
                              __size_ofi2_memcpy 005C                       i2c_display_cursor@position 006D  
                         ?_MSDTransferTerminated 0039                                  _USBMSDOutHandle 0015  
                   __end_of_USBConfigureEndpoint E804                            ?_encoder_statemachine 002E  
                                   ??__i2c_start 0060                                     ??__i2c_write 0068  
                __end_of_USBStdFeatureReqHandler C726                                USBStallEndpoint@p 0034  
                                  _MSDHostNoData 001D                __end_of_USBCtrlEPAllowStatusStage E22E  
                   ??_encoder_next_arc_step_size 0062                         __end_of_USBCtrlEPService E770  
                            __size_of__motor_run 01FA                                        __i2c_send F652  
                                      __i2c_stop F666                    ??_encoder_next_setup_stepsize 0062  
                              __size_of_i2c_init 001C                        ??_USBCtrlEPAllowDataStage 002F  
                          _motor_cue_write_index 00F6                                   USBDeviceInit@i 0036  
                       __size_of__backlight_init 0004                           _pBDTEntryEP0OutCurrent 0019  
                                    _DMACON1bits 000F88                                      _DMACON2bits 000F86  
                        USBTransferOnePacket@dir 002E                          USBTransferOnePacket@len 0031  
                                       ??___lmul 0068                            ?__display_padded_itoa 0078  
                            _USBStdGetDscHandler D17A                                      ?_motor_init 002E  
                            __end_of_encoder_run D3BE                                __CFG_ADCSEL$BIT10 000000  
                                    __pdataBANK1 0190                                      __pdataBANK2 02B8  
                                    ?_motor_stop 002E                             __size_of_system_init 00DE  
                                       ??_memcpy 0066                          __size_of__i2c_wait_idle 0064  
                                       ??_memset 0034                               __end_of__i2c_start F676  
                             __end_of__i2c_write F0CA                                         ??_strlen 0062  
                         _USBActiveConfiguration 002D                   __end_of_USBStdGetStatusHandler E642  
                                      ___fldiv@a 0072                                        ___fldiv@b 006E  
            __size_of_encoder_next_arc_step_size 0070                                        ___flmul@a 0072  
                                      ___flmul@b 006E                                      __pbssCOMRAM 0001  
                      ??_i2c_display_write_fixed 0068                                    __pcstackBANK0 0060  
                                  __pcstackBANK2 02D2                     __size_of_USBCtrlTrfInHandler 00C0  
                              __size_of___xxtofl 0144                                        _gblBLKLen 015C  
             __end_of_flash_command_pagesize_512 A1E5                       _flash_command_pagesize_512 A1E1  
             __end_of_flash_command_pagesize_528 A1E1                       _flash_command_pagesize_528 A1DD  
                           ?_USBStdGetDscHandler 002E     __end_of_i2c_display_program_custom_character EA26  
  __size_of_i2c_display_program_custom_character 007C           ??_i2c_display_program_custom_character 0070  
          ?_i2c_display_program_custom_character 006E             _i2c_display_program_custom_character E9AA  
                                      _dc_manual 9DE6                       __end_of_USBWakeFromSuspend F418  
                     __end_of_i2c_display_cursor F598                                       ?__i2c_send 002E  
                                      _dc_setup1 A016                                        _dc_setup2 9FC6  
                                _USBStallHandler F2B6                         __display_padded_itoa@len 008C  
                                   _pBDTEntryOut 014E                                       ?__i2c_stop 002E  
                       __display_padded_itoa@pos 008D                         __display_padded_itoa@tmp 0082  
                                      __pnvBANK1 01FD                                 ___lwdiv@dividend 0060  
                           _motor_cue_read_index 00F7                                        __pintcode 9008  
                                  __pmediumconst 908A                                         ?___aldiv 0060  
                              __size_of_tmr0_isr 0044                                         ?___almod 0060  
                                       ?___fldiv 006E                                         ?___flmul 006E  
                                       ?___fltol 0060                                         ?___lwdiv 0060  
                                       ?___lwmod 0060                                        _hid_rpt01 A17C  
                                      _idle_rate 00FF                               display_update@line 0070  
           __size_of_encoder_next_setup_stepsize 0070                                 ___almod@dividend 0060  
                                __i2c_write@data 0065                                  __i2c_write@cntr 0069  
                           _USBTransferOnePacket D7EA                __size_of_motor_steps_from_degrees 00CA  
      __ic2_display_set_cgram_address@data_array 006A                        ?_motor_steps_from_degrees 0087  
                     ?_ExternalFlash_MediaDetect 002E                             __display_signed_itoa F1A6  
                              ??_display_prepare 00BC                             __CFG_RTCOSC$T1OSCREF 000000  
                              __display_itoa@len 00AA                                __display_itoa@pos 00AC  
                              __display_itoa@tmp 00A0                     __end_of_USBCtrlTrfOutHandler EE26  
                         ??_encoder_statemachine 009E                         ??_motor_speed_from_index 0095  
                          ??_USBStdGetDscHandler 002E                                      _ep_data_out 0172  
                               ___lwdiv@quotient 0065                               _motor_change_speed F65C  
                                  _MSDWriteState 001E                     __size_of_USBCtrlTrfRxService 010E  
                  USBConfigureEndpoint@direction 002E                                   __display_clear F116  
                                _config_internal 016F                              __size_of_motor_init 0016  
                   __size_ofi2_SYSTEM_Initialize 0054                                  _config_external 016C  
                            __size_of_motor_stop 0046                                  ___aldiv@divisor 0064  
                   __size_of_USBCtrlTrfTxService 00D0                                  ___aldiv@counter 0068  
                                       _LATAbits 000F89                                         _LATBbits 000F8A  
                                       _LATCbits 000F8B                                         _LATDbits 000F8C  
                     __end_of_USBCheckHIDRequest DF04                              ?_motor_change_speed 0060  
                     ??_USBCtrlEPServiceComplete 002F                                         _IPR2bits 000FA2  
                                       _PIE1bits 000F9D                                         _PIE2bits 000FA0  
                                    _encoder_run D2A6                                         _PIR1bits 000F9E  
                                       _PIR2bits 000FA1                          encoder_statemachine@tmp 00B0  
                         ??__display_padded_itoa 007D                                         i2u811_48 D66C  
                                       i2u811_49 D680                                         i2u813_48 D692  
                                       i2u813_49 D6A8                                         i2u815_44 D6C6  
                                       i2u815_45 D6C0                                         i2u921_40 C694  
                             __end_of_dc_divide1 9FC6                                         i2u827_40 E34C  
                             __end_of_dc_divide2 9F76                                         i2u845_40 DF7E  
                                       i2u845_47 DF74                                         i2u847_40 DFBE  
                                       i2u847_47 DFB4                                         i2u892_40 DCF4  
                                       _RCONbits 000FD0                                         i2u896_40 D1F2  
                                       i2u896_47 D1E8                                         i2u897_40 D222  
                                       i2u897_47 D218                                         i2u899_40 D278  
                                       i2u899_47 D26E                                         _UEP0bits 000F26  
                     _USBDeferINDataStagePackets 00FD                             _active_configuration 0186  
                              ?_i2c_display_init 002E                               _bit_pattern_degree A1CD  
                    __size_of_USBCheckStdRequest 00D8                                         _UCONbits 000F65  
                           _USBConfigureEndpoint E770                                     ??__motor_run 0066  
         __ic2_display_set_ddram_address@address 006A                               ??_i2c_display_init 006A  
                              __i2c_write@length 0067                                ??__backlight_init 0060  
               __size_of_USBStdFeatureReqHandler 0278                                   _USBMSDInHandle 0013  
                          ?_USBTransferOnePacket 002E                             ??_motor_change_speed 0062  
                          ?__display_signed_itoa 008F                                _SYS_InterruptHigh 9008  
                      i2c_display_cursor@address 006F                                 __CFG_WPFP$PAGE_1 000000  
                                   _RemoteWakeup 0028                __end_of_ExternalFlash_MediaDetect F67E  
                                       i2_memcpy ED6E                               ?_SYS_InterruptHigh 002E  
                         __end_of__display_clear F160                          __end_of_USBStallHandler F2FA  
                motor_schedule_command@direction 009D                          __size_of_display_update 0038  
                              ___lmul@multiplier 0060               __end_of_encoder_next_arc_step_size EB7C  
                     _encoder_next_arc_step_size EB0C                                        copy_data0 E8AA  
                                      copy_data1 E8CA                     __size_of__system_timer0_init 002C  
                      __display_signed_itoa@text 0091        encoder_next_divide_step_size@old_stepsize 0060  
                    ??_USBCtrlEPAllowStatusStage 002E                      __end_of_USBStdSetCfgHandler DD5C  
                    __display_padded_itoa@length 007A                                         _i2c_init F5BA  
                            ??_SYS_InterruptHigh 004D                                      ??__i2c_send 0060  
                                   _MSDReadState 00FA                                      ??__i2c_stop 0060  
                             __end_of__motor_run CB44                               __end_of_device_dsc A1C5  
                    __size_of__display_itoa_long 010E          encoder_next_setup_stepsize@old_stepsize 0060  
                        ?_USBCtrlTrfSetupHandler 002E                                       _ANCON0bits 000F48  
                                     _ANCON1bits 000F49                          USBStdGetStatusHandler@p 002F  
                                       __Hrparam 0000                              __display_itoa@value 0095  
                         _motor_prescaler_lookup 9BF5                                        memcpy@tmp 0066  
                                       __Lrparam 0000                           USBTransferOnePacket@ep 0036  
                                       _SetupPkt 000D30                                   _TransferLength 0011  
                     __end_of_USBCheckMSDRequest E3AC                            ?_USBConfigureEndpoint 002E  
                               __size_of___aldiv 00CE                         _ExternalFlash_SectorRead 000000  
                               __size_of___almod 00AE                                   __i2c_wait_idle EBEA  
                               __size_of___fldiv 02BA                                 __size_of___flmul 0352  
                               __size_of___fltol 00DE                                 __size_of___lwdiv 0054  
                 __display_itoa_long@short_value 00B9                                 __size_of___lwmod 0044  
                                    _MSDCBWValid 0187                        __end_of_SYS_InterruptHigh 9086  
                  __display_itoa_long@last_digit 00BB                                ?_USBStallEndpoint 002E  
                     i2c_display_write_fixed@pos 0068                               ??_USBStallEndpoint 002F  
                     _ExternalFlash_CapacityRead 000000                                         ___xxtofl CC8C  
                        ??_MSDTransferTerminated 003B                          __size_of_USBDeviceTasks 0144  
                                ___lwdiv@divisor 0062                                  ?__display_clear 002E  
                                ___lwdiv@counter 0064                                         __ptext10 E9AA  
                                       __ptext11 F502                                         __ptext20 F676  
                                       __ptext12 F02A                                         __ptext21 EA26  
                                       __ptext13 F07A                                         __ptext30 F65C  
                                       __ptext22 A230                                         __ptext14 EBEA  
                                       __ptext31 EA9C                                         __ptext23 F160  
                                       __ptext15 F666                                         __ptext40 C1F4  
                                       __ptext32 F47C                                         __ptext24 E504  
                                       __ptext16 F66E                                         __ptext41 ECB0  
                                       __ptext33 EB0C                                         __ptext25 F646  
                                       __ptext17 F652                                         __ptext50 EF82  
                                       __ptext42 F1A6                                         __ptext34 B20E  
                                       __ptext26 C94A                                         __ptext18 F4AA  
                                       __ptext51 E3AC                                         __ptext43 D9E2  
                                       __ptext35 F620                                         __ptext27 F0CA  
                                       __ptext19 ED10                                         __ptext60 F44C  
                                       __ptext52 DFD4                                         __ptext44 D3BE  
                                       __ptext36 CF14                                         __ptext28 E0A2  
                                       __ptext61 F2B6                                         __ptext53 F116  
                                       __ptext45 C726                                         __ptext37 CC8C  
                                       __ptext29 BEA2                                         __ptext70 DC80  
                                       __ptext62 F598                                         __ptext54 EE26  
                                       __ptext46 F2FA                                         __ptext38 EE80  
                                       __ptext71 F4D6                                         __ptext63 CB44  
                                       __ptext47 F1EA                                         __ptext39 DBA2  
                                       __ptext80 D6E4                                         __ptext72 E5A6  
                                       __ptext64 E6DA                                         __ptext56 F272  
                                       __ptext48 E45A                                         __ptext81 F636  
                                       __ptext73 D17A                                         __ptext65 ED6E  
                                       __ptext57 D2A6                                         __ptext49 F22E  
                                       __ptext90 EDCA                                         __ptext82 D5DA  
                                       __ptext74 C4AE                                         __ptext66 E804  
                                       __ptext58 CDD0                                         __ptext91 D4CC  
                                       __ptext83 EC4E                                         __ptext75 E924  
                                       __ptext67 D8EC                                         __ptext59 F3E2  
                                       __ptext92 E16C                                         __ptext84 F5F0  
                                       __ptext76 EFD6                                         __ptext68 E642  
                                       __ptext93 E22E                                         __ptext85 F67A  
                                       __ptext77 E2EE                                         __ptext69 DD5C  
                                       __ptext94 DF04                                         __ptext86 F418  
                                       __ptext78 DE34                                         __ptext95 0000  
                                       __ptext87 D7EA                                         __ptext79 EED8  
                                       __ptext88 F338                                         __ptext89 E770  
                                   _SSP1CON1bits 000FC6                  __size_of_motor_speed_from_index 0016  
                                   _SSP1CON2bits 000FC5                                     _SSP2CON1bits 000F72  
                                ___almod@divisor 0064                                  ___almod@counter 0068  
                        __size_of_ResetSenseData 0062                   __end_of_USBCtrlTrfSetupHandler E896  
                                  __size_of_main 012C                                ?_USBCtrlEPService 002E  
                                  __size_of_itoa 0044                                         _inq_resp A158  
encoder_statemachine@distance_to_target_in_steps 00AC                                    __size_of_utoa 00AA  
                             ??_USBCtrlEPService 004B                                         _tmr0_isr F272  
                            _USBCtrlTrfInHandler E22E            __end_of_encoder_next_divide_step_size F4AA  
         __size_of_encoder_next_divide_step_size 002E                    _encoder_next_divide_step_size F47C  
                         __end_of__i2c_wait_idle EC4E                       __end_of_motor_items_in_cue F652  
                                       _outPipes 0145  i2c_display_program_custom_character@bit_pattern 006E  
                           _USBCtrlTrfOutHandler EDCA                                         int$flags 005B  
                      _USBCtrlEPAllowStatusStage E16C                                     ??_motor_init 0060  
                                   ??_motor_stop 0060                                     _SSP1STATbits 000FC7  
                         ??_USBTransferOnePacket 0032                      __end_of_motor_period_lookup 9BF5  
                                   _SSP2STATbits 000F73                           ??__display_signed_itoa 0093  
                          __end_of__display_itoa C94A                   ?_APP_DeviceCustomHIDInitialize 002E  
                        _motor_postscaler_lookup 9827                        _USBDeferStatusStagePacket 0023  
                                    _OSCTUNEbits 000F9B                                       _INTCONbits 000FF2  
                           ?_USBCtrlTrfInHandler 002E                                         memcpy@d1 0060  
                                       memcpy@s1 0062                    USBCtrlTrfTxService@byteToSend 002E  
             __motor_get_speed_in_degrees@lookup 008F                        __display_padded_itoa@text 007B  
                                       itoa@base 0074                                         memset@p1 002E  
                               ?_USBStallHandler 002E                         USBStdFeatureReqHandler@p 0049  
                                       intlevel2 0000                           __size_of_USBDeviceInit 0148  
        __end_of_USER_USB_CALLBACK_EVENT_HANDLER E9AA         __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
              ??_USER_USB_CALLBACK_EVENT_HANDLER 0043                 ?_USER_USB_CALLBACK_EVENT_HANDLER 003D  
                _USER_USB_CALLBACK_EVENT_HANDLER E924          motor_schedule_command@distance_in_steps 0097  
                             __end_of_motor_init F620                                 ___lwmod@dividend 0060  
                             __end_of_motor_stop F1A6                         ??_motor_schedule_command 009D  
         i2SYSTEM_Initialize@pll_startup_counter 002E             SYSTEM_Initialize@pll_startup_counter 0061  
                                _display_content 01AD                                    ??_system_init 0081  
                         _motor_speed_from_index F620                           ??_USBConfigureEndpoint 002F  
                                ?__i2c_wait_idle 002E                            ?_USBCtrlTrfOutHandler 002E  
                                _display_prepare B20E                         ?_APP_DeviceMSDInitialize 002E  
                            _USBCtrlTrfRxService D4CC                               _USBWakeFromSuspend F3E2  
                             _i2c_display_cursor F576                          _USBStdFeatureReqHandler C4AE  
                            i2_SYSTEM_Initialize EFD6                              _USBCtrlTrfTxService DF04  
                     __size_of_SYS_InterruptHigh 007E                __motor_get_speed_in_degrees@speed 008B  
                                       utoa@base 006B                                  _gblMediaPresent 017E  
                              _motor_command_cue 0200                              ?_USBWakeFromSuspend 002E  
                                     _PPSCONbits 000EBF                                  ___lwmod@divisor 0062  
                    ??_ExternalFlash_MediaDetect 0030                              ?_i2c_display_cursor 006D  
                          ??_USBCtrlTrfInHandler 002F                                         strlen@cp 0064  
                          _USBAlternateInterface 018E                                  ___lwmod@counter 0064  
                                    _ptrNextData 0182                                     ___aldiv@sign 0069  
                            USBEnableEndpoint@ep 0039                                  _endpoint_number 0026  
                                 _display_update F374                             ?_USBCtrlTrfRxService 002E  
            __end_of_encoder_next_setup_stepsize EB0C                      _encoder_next_setup_stepsize EA9C  
                           ?i2_SYSTEM_Initialize 002E                         ?_USBCtrlEPAllowDataStage 002E  
                                 _MSBBufferIndex 0180                                     ___almod@sign 0069  
                           ?_USBCtrlTrfTxService 002E                                    ?_encoder_init 002E  
                                     _USBMSDInit D5DA                     _USBStatusStageTimeoutCounter 0024  
                ??_ExternalFlash_MediaInitialize 0030                             ??_USBWakeFromSuspend 0045  
                       __display_itoa_long@value 00AD                       USBTransferOnePacket@handle 0037  
                                __backlight_init F676                             ??_i2c_display_cursor 006E  
                                   ?_encoder_run 002E                          __display_itoa_long@text 00B2  
                                     _USB_CD_Ptr 9DE4                                      _power_state 001C  
                                    _USBInHandle 017A  
