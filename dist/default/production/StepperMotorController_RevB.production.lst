

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Dec 20 22:26:13 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258                           	dabs	1,0x600,512,_msd_buffer
   259                           	dabs	1,0xD00,48,_BDT
   260                           	dabs	1,0xD40,31,_msd_cbw
   261                           	dabs	1,0xD80,13,_msd_csw
   262                           	dabs	1,0xD38,8,_CtrlTrfData
   263                           	dabs	1,0xD30,8,_SetupPkt
   264  0000                     
   265                           ; Version 2.00
   266                           ; Generated 27/05/2018 GMT
   267                           ; 
   268                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   269                           ; All rights reserved.
   270                           ; 
   271                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   272                           ; 
   273                           ; Redistribution and use in source and binary forms, with or without modification, are
   274                           ; permitted provided that the following conditions are met:
   275                           ; 
   276                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   277                           ;        conditions and the following disclaimer.
   278                           ; 
   279                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   280                           ;        of conditions and the following disclaimer in the documentation and/or other
   281                           ;        materials provided with the distribution.
   282                           ; 
   283                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   284                           ;        software without specific prior written permission.
   285                           ; 
   286                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   287                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   288                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   289                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   290                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   291                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   292                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   293                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   294                           ; 
   295                           ; 
   296                           ; Code-generator required, PIC18F47J53 Definitions
   297                           ; 
   298                           ; SFR Addresses
   299  0000                     
   300                           	psect	idataBANK2
   301  014CDC                     __pidataBANK2:
   302                           	opt stack 0
   303                           
   304                           ;initializer for _LUN
   305  014CDC  46                 	db	low _ExternalFlash_MediaInitialize
   306  014CDD  57                 	db	high _ExternalFlash_MediaInitialize
   307  014CDE  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   308  014CDF  72                 	db	low _ExternalFlash_CapacityRead
   309  014CE0  58                 	db	high _ExternalFlash_CapacityRead
   310  014CE1  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   311  014CE2  EE                 	db	low _ExternalFlash_SectorSizeRead
   312  014CE3  58                 	db	high _ExternalFlash_SectorSizeRead
   313  014CE4  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   314  014CE5  2E                 	db	low _ExternalFlash_MediaDetect
   315  014CE6  59                 	db	high _ExternalFlash_MediaDetect
   316  014CE7  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   317  014CE8  72                 	db	low _ExternalFlash_SectorRead
   318  014CE9  52                 	db	high _ExternalFlash_SectorRead
   319  014CEA  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   320  014CEB  74                 	db	low _ExternalFlash_WriteProtectStateGet
   321  014CEC  59                 	db	high _ExternalFlash_WriteProtectStateGet
   322  014CED  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   323  014CEE  3E                 	db	low _ExternalFlash_SectorWrite
   324  014CEF  52                 	db	high _ExternalFlash_SectorWrite
   325  014CF0  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   326  014CF1  00                 	db	0
   327  014CF2  00                 	db	0
   328  014CF3  00                 	db	0
   329  014CF4  00                 	db	0
   330  014CF5  00                 	db	0
   331  014CF6  00                 	db	0
   332  014CF7  00                 	db	0
   333  014CF8  00                 	db	0
   334                           
   335                           ;initializer for i2c_display_init@F6942
   336  014CF9  3A                 	db	58
   337  014CFA  1E                 	db	30
   338  014CFB  39                 	db	57
   339  014CFC  0C                 	db	12
   340  014CFD  74                 	db	116
   341  014CFE  5C                 	db	92
   342  014CFF  6D                 	db	109
   343  014D00  0C                 	db	12
   344  014D01  01                 	db	1
   345                           
   346                           ;initializer for __i2c_display_send_init_sequence@F6939
   347  014D02  3A                 	db	58
   348  014D03  1E                 	db	30
   349  014D04  39                 	db	57
   350  014D05  0C                 	db	12
   351  014D06  74                 	db	116
   352  014D07  5C                 	db	92
   353  014D08  6D                 	db	109
   354  014D09  0C                 	db	12
   355  014D0A  01                 	db	1
   356                           
   357                           ;initializer for _tx_buf
   358  014D0B  01                 	db	1
   359  014D0C  02                 	db	2
   360  014D0D  03                 	db	3
   361  014D0E  04                 	db	4
   362  014D0F  05                 	db	5
   363  014D10  06                 	db	6
   364  014D11  07                 	db	7
   365  014D12  08                 	db	8
   366                           
   367                           ;initializer for _configFile_used_name
   368  014D13  55                 	db	85
   369  014D14  53                 	db	83
   370  014D15  45                 	db	69
   371  014D16  44                 	db	68
   372  014D17  43                 	db	67
   373  014D18  4F                 	db	79
   374  014D19  4E                 	db	78
   375  014D1A  46                 	db	70
   376                           
   377                           ;initializer for _configFile_name
   378  014D1B  43                 	db	67
   379  014D1C  4F                 	db	79
   380  014D1D  4E                 	db	78
   381  014D1E  46                 	db	70
   382  014D1F  49                 	db	73
   383  014D20  47                 	db	71
   384  014D21  20                 	db	32
   385  014D22  20                 	db	32
   386                           
   387                           ;initializer for _configFile_used_extention
   388  014D23  54                 	db	84
   389  014D24  58                 	db	88
   390  014D25  54                 	db	84
   391                           
   392                           ;initializer for _configFile_extention
   393  014D26  54                 	db	84
   394  014D27  58                 	db	88
   395  014D28  54                 	db	84
   396                           
   397                           	psect	idataBANK4
   398  014B4C                     __pidataBANK4:
   399                           	opt stack 0
   400                           
   401                           ;initializer for _dc_startup
   402  014B4C  2A                 	db	42
   403  014B4D  20                 	db	32
   404  014B4E  20                 	db	32
   405  014B4F  53                 	db	83
   406  014B50  74                 	db	116
   407  014B51  65                 	db	101
   408  014B52  70                 	db	112
   409  014B53  70                 	db	112
   410  014B54  65                 	db	101
   411  014B55  72                 	db	114
   412  014B56  20                 	db	32
   413  014B57  4D                 	db	77
   414  014B58  6F                 	db	111
   415  014B59  74                 	db	116
   416  014B5A  6F                 	db	111
   417  014B5B  72                 	db	114
   418  014B5C  20                 	db	32
   419  014B5D  20                 	db	32
   420  014B5E  20                 	db	32
   421  014B5F  2A                 	db	42
   422  014B60  2A                 	db	42
   423  014B61  20                 	db	32
   424  014B62  20                 	db	32
   425  014B63  20                 	db	32
   426  014B64  20                 	db	32
   427  014B65  43                 	db	67
   428  014B66  6F                 	db	111
   429  014B67  6E                 	db	110
   430  014B68  74                 	db	116
   431  014B69  72                 	db	114
   432  014B6A  6F                 	db	111
   433  014B6B  6C                 	db	108
   434  014B6C  6C                 	db	108
   435  014B6D  65                 	db	101
   436  014B6E  72                 	db	114
   437  014B6F  20                 	db	32
   438  014B70  20                 	db	32
   439  014B71  20                 	db	32
   440  014B72  20                 	db	32
   441  014B73  2A                 	db	42
   442  014B74  2A                 	db	42
   443  014B75  20                 	db	32
   444  014B76  20                 	db	32
   445  014B77  20                 	db	32
   446  014B78  20                 	db	32
   447  014B79  76                 	db	118
   448  014B7A  20                 	db	32
   449  014B7B  20                 	db	32
   450  014B7C  20                 	db	32
   451  014B7D  20                 	db	32
   452  014B7E  20                 	db	32
   453  014B7F  20                 	db	32
   454  014B80  20                 	db	32
   455  014B81  20                 	db	32
   456  014B82  20                 	db	32
   457  014B83  20                 	db	32
   458  014B84  20                 	db	32
   459  014B85  20                 	db	32
   460  014B86  20                 	db	32
   461  014B87  2A                 	db	42
   462  014B88  2A                 	db	42
   463  014B89  20                 	db	32
   464  014B8A  20                 	db	32
   465  014B8B  73                 	db	115
   466  014B8C  6F                 	db	111
   467  014B8D  6C                 	db	108
   468  014B8E  64                 	db	100
   469  014B8F  65                 	db	101
   470  014B90  72                 	db	114
   471  014B91  6E                 	db	110
   472  014B92  65                 	db	101
   473  014B93  72                 	db	114
   474  014B94  64                 	db	100
   475  014B95  2E                 	db	46
   476  014B96  63                 	db	99
   477  014B97  6F                 	db	111
   478  014B98  6D                 	db	109
   479  014B99  20                 	db	32
   480  014B9A  20                 	db	32
   481  014B9B  2A                 	db	42
   482                           
   483                           	psect	mediumconst
   484  009092                     __pmediumconst:
   485                           	opt stack 0
   486  009092  00                 	db	0
   487  009093                     _motor_speed_lookup:
   488                           	opt stack 0
   489  009093  0008               	dw	8
   490  009095  000C               	dw	12
   491  009097  0010               	dw	16
   492  009099  0013               	dw	19
   493  00909B  0016               	dw	22
   494  00909D  0019               	dw	25
   495  00909F  001C               	dw	28
   496  0090A1  001E               	dw	30
   497  0090A3  0021               	dw	33
   498  0090A5  0023               	dw	35
   499  0090A7  0026               	dw	38
   500  0090A9  0028               	dw	40
   501  0090AB  002A               	dw	42
   502  0090AD  002C               	dw	44
   503  0090AF  002E               	dw	46
   504  0090B1  0030               	dw	48
   505  0090B3  0032               	dw	50
   506  0090B5  0034               	dw	52
   507  0090B7  0036               	dw	54
   508  0090B9  0038               	dw	56
   509  0090BB  003A               	dw	58
   510  0090BD  003C               	dw	60
   511  0090BF  003D               	dw	61
   512  0090C1  003F               	dw	63
   513  0090C3  0041               	dw	65
   514  0090C5  0043               	dw	67
   515  0090C7  0045               	dw	69
   516  0090C9  0046               	dw	70
   517  0090CB  0048               	dw	72
   518  0090CD  0049               	dw	73
   519  0090CF  004B               	dw	75
   520  0090D1  004D               	dw	77
   521  0090D3  004E               	dw	78
   522  0090D5  0050               	dw	80
   523  0090D7  0051               	dw	81
   524  0090D9  0053               	dw	83
   525  0090DB  0054               	dw	84
   526  0090DD  0056               	dw	86
   527  0090DF  0057               	dw	87
   528  0090E1  0059               	dw	89
   529  0090E3  005A               	dw	90
   530  0090E5  005C               	dw	92
   531  0090E7  005D               	dw	93
   532  0090E9  005F               	dw	95
   533  0090EB  0060               	dw	96
   534  0090ED  0062               	dw	98
   535  0090EF  0063               	dw	99
   536  0090F1  0064               	dw	100
   537  0090F3  0066               	dw	102
   538  0090F5  0067               	dw	103
   539  0090F7  0069               	dw	105
   540  0090F9  006A               	dw	106
   541  0090FB  006C               	dw	108
   542  0090FD  006D               	dw	109
   543  0090FF  006E               	dw	110
   544  009101  0070               	dw	112
   545  009103  0071               	dw	113
   546  009105  0072               	dw	114
   547  009107  0073               	dw	115
   548  009109  0074               	dw	116
   549  00910B  0076               	dw	118
   550  00910D  0078               	dw	120
   551  00910F  0079               	dw	121
   552  009111  007A               	dw	122
   553  009113  007B               	dw	123
   554  009115  007D               	dw	125
   555  009117  007E               	dw	126
   556  009119  007F               	dw	127
   557  00911B  0082               	dw	130
   558  00911D  0085               	dw	133
   559  00911F  0087               	dw	135
   560  009121  008A               	dw	138
   561  009123  008C               	dw	140
   562  009125  008F               	dw	143
   563  009127  0091               	dw	145
   564  009129  0092               	dw	146
   565  00912B  0094               	dw	148
   566  00912D  0098               	dw	152
   567  00912F  009A               	dw	154
   568  009131  009C               	dw	156
   569  009133  009E               	dw	158
   570  009135  00A1               	dw	161
   571  009137  00A3               	dw	163
   572  009139  00A5               	dw	165
   573  00913B  00A7               	dw	167
   574  00913D  00AA               	dw	170
   575  00913F  00AC               	dw	172
   576  009141  00AF               	dw	175
   577  009143  00B2               	dw	178
   578  009145  00B4               	dw	180
   579  009147  00B7               	dw	183
   580  009149  00B8               	dw	184
   581  00914B  00BA               	dw	186
   582  00914D  00BC               	dw	188
   583  00914F  00BE               	dw	190
   584  009151  00C0               	dw	192
   585  009153  00C3               	dw	195
   586  009155  00C4               	dw	196
   587  009157  00C6               	dw	198
   588  009159  00C8               	dw	200
   589  00915B  00CA               	dw	202
   590  00915D  00CC               	dw	204
   591  00915F  00CE               	dw	206
   592  009161  00D0               	dw	208
   593  009163  00D2               	dw	210
   594  009165  00D4               	dw	212
   595  009167  00D6               	dw	214
   596  009169  00D8               	dw	216
   597  00916B  00D9               	dw	217
   598  00916D  00DB               	dw	219
   599  00916F  00DD               	dw	221
   600  009171  00DF               	dw	223
   601  009173  00E1               	dw	225
   602  009175  00E2               	dw	226
   603  009177  00E5               	dw	229
   604  009179  00E7               	dw	231
   605  00917B  00E8               	dw	232
   606  00917D  00EA               	dw	234
   607  00917F  00EC               	dw	236
   608  009181  00EE               	dw	238
   609  009183  00EF               	dw	239
   610  009185  00F2               	dw	242
   611  009187  00F3               	dw	243
   612  009189  00F5               	dw	245
   613  00918B  00F7               	dw	247
   614  00918D  00F8               	dw	248
   615  00918F  00FB               	dw	251
   616  009191  00FD               	dw	253
   617  009193  0100               	dw	256
   618  009195  0103               	dw	259
   619  009197  0104               	dw	260
   620  009199  0107               	dw	263
   621  00919B  010A               	dw	266
   622  00919D  010C               	dw	268
   623  00919F  010F               	dw	271
   624  0091A1  0112               	dw	274
   625  0091A3  0114               	dw	276
   626  0091A5  0117               	dw	279
   627  0091A7  0119               	dw	281
   628  0091A9  011C               	dw	284
   629  0091AB  011E               	dw	286
   630  0091AD  0121               	dw	289
   631  0091AF  0123               	dw	291
   632  0091B1  0125               	dw	293
   633  0091B3  0129               	dw	297
   634  0091B5  012B               	dw	299
   635  0091B7  012C               	dw	300
   636  0091B9  012E               	dw	302
   637  0091BB  0132               	dw	306
   638  0091BD  0134               	dw	308
   639  0091BF  0136               	dw	310
   640  0091C1  0138               	dw	312
   641  0091C3  013B               	dw	315
   642  0091C5  013D               	dw	317
   643  0091C7  013F               	dw	319
   644  0091C9  0143               	dw	323
   645  0091CB  0146               	dw	326
   646  0091CD  0148               	dw	328
   647  0091CF  014A               	dw	330
   648  0091D1  014C               	dw	332
   649  0091D3  014F               	dw	335
   650  0091D5  0151               	dw	337
   651  0091D7  0154               	dw	340
   652  0091D9  0156               	dw	342
   653  0091DB  0159               	dw	345
   654  0091DD  015B               	dw	347
   655  0091DF  015E               	dw	350
   656  0091E1  0160               	dw	352
   657  0091E3  0163               	dw	355
   658  0091E5  0166               	dw	358
   659  0091E7  0169               	dw	361
   660  0091E9  016B               	dw	363
   661  0091EB  016E               	dw	366
   662  0091ED  0171               	dw	369
   663  0091EF  0174               	dw	372
   664  0091F1  0177               	dw	375
   665  0091F3  017A               	dw	378
   666  0091F5  017D               	dw	381
   667  0091F7  0180               	dw	384
   668  0091F9  0183               	dw	387
   669  0091FB  0187               	dw	391
   670  0091FD  018A               	dw	394
   671  0091FF  018D               	dw	397
   672  009201  0191               	dw	401
   673  009203  0194               	dw	404
   674  009205  0198               	dw	408
   675  009207  019B               	dw	411
   676  009209  019F               	dw	415
   677  00920B  01A3               	dw	419
   678  00920D  01A6               	dw	422
   679  00920F  01AA               	dw	426
   680  009211  01AE               	dw	430
   681  009213  01B2               	dw	434
   682  009215  01B6               	dw	438
   683  009217  01BA               	dw	442
   684  009219  01BE               	dw	446
   685  00921B  01C3               	dw	451
   686  00921D  01C7               	dw	455
   687  00921F  01CC               	dw	460
   688  009221  01D0               	dw	464
   689  009223  01D5               	dw	469
   690  009225  01D9               	dw	473
   691  009227  01DE               	dw	478
   692  009229  01E3               	dw	483
   693  00922B  01E8               	dw	488
   694  00922D  01ED               	dw	493
   695  00922F  01F3               	dw	499
   696  009231  01F8               	dw	504
   697  009233  01FE               	dw	510
   698  009235  0203               	dw	515
   699  009237  0209               	dw	521
   700  009239  020F               	dw	527
   701  00923B  0215               	dw	533
   702  00923D  021B               	dw	539
   703  00923F  0221               	dw	545
   704  009241  0227               	dw	551
   705  009243  022E               	dw	558
   706  009245  0235               	dw	565
   707  009247  023C               	dw	572
   708  009249  0243               	dw	579
   709  00924B  024A               	dw	586
   710  00924D  0251               	dw	593
   711  00924F  0259               	dw	601
   712  009251  0261               	dw	609
   713  009253  0269               	dw	617
   714  009255  0271               	dw	625
   715  009257  0279               	dw	633
   716  009259  0282               	dw	642
   717  00925B  028B               	dw	651
   718  00925D  0294               	dw	660
   719  00925F  029E               	dw	670
   720  009261  02A7               	dw	679
   721  009263  02B1               	dw	689
   722  009265  02BC               	dw	700
   723  009267  02C6               	dw	710
   724  009269  02D1               	dw	721
   725  00926B  02DC               	dw	732
   726  00926D  02DC               	dw	732
   727  00926F  02DF               	dw	735
   728  009271  02E2               	dw	738
   729  009273  02E5               	dw	741
   730  009275  02E8               	dw	744
   731  009277  02EB               	dw	747
   732  009279  02EE               	dw	750
   733  00927B  02F1               	dw	753
   734  00927D  02F4               	dw	756
   735  00927F  02F7               	dw	759
   736  009281  02FA               	dw	762
   737  009283  02FD               	dw	765
   738  009285  0300               	dw	768
   739  009287  0304               	dw	772
   740  009289  0307               	dw	775
   741  00928B  030A               	dw	778
   742  00928D  030D               	dw	781
   743  00928F  0311               	dw	785
   744  009291  0314               	dw	788
   745  009293  0317               	dw	791
   746  009295  031A               	dw	794
   747  009297  031E               	dw	798
   748  009299  0321               	dw	801
   749  00929B  0325               	dw	805
   750  00929D  0328               	dw	808
   751  00929F  032C               	dw	812
   752  0092A1  032F               	dw	815
   753  0092A3  0333               	dw	819
   754  0092A5  0336               	dw	822
   755  0092A7  033A               	dw	826
   756  0092A9  033E               	dw	830
   757  0092AB  0341               	dw	833
   758  0092AD  0345               	dw	837
   759  0092AF  0349               	dw	841
   760  0092B1  034D               	dw	845
   761  0092B3  0350               	dw	848
   762  0092B5  0354               	dw	852
   763  0092B7  0358               	dw	856
   764  0092B9  035C               	dw	860
   765  0092BB  0360               	dw	864
   766  0092BD  0364               	dw	868
   767  0092BF  0368               	dw	872
   768  0092C1  036C               	dw	876
   769  0092C3  0370               	dw	880
   770  0092C5  0374               	dw	884
   771  0092C7  0379               	dw	889
   772  0092C9  037D               	dw	893
   773  0092CB  0381               	dw	897
   774  0092CD  0385               	dw	901
   775  0092CF  038A               	dw	906
   776  0092D1  038E               	dw	910
   777  0092D3  0393               	dw	915
   778  0092D5  0397               	dw	919
   779  0092D7  039C               	dw	924
   780  0092D9  03A0               	dw	928
   781  0092DB  03A5               	dw	933
   782  0092DD  03AA               	dw	938
   783  0092DF  03AE               	dw	942
   784  0092E1  03B3               	dw	947
   785  0092E3  03B8               	dw	952
   786  0092E5  03BD               	dw	957
   787  0092E7  03C2               	dw	962
   788  0092E9  03C6               	dw	966
   789  0092EB  03CC               	dw	972
   790  0092ED  03D1               	dw	977
   791  0092EF  03D6               	dw	982
   792  0092F1  03DB               	dw	987
   793  0092F3  03E0               	dw	992
   794  0092F5  03E5               	dw	997
   795  0092F7  03EB               	dw	1003
   796  0092F9  03F0               	dw	1008
   797  0092FB  03F6               	dw	1014
   798  0092FD  03FB               	dw	1019
   799  0092FF  0401               	dw	1025
   800  009301  0406               	dw	1030
   801  009303  040C               	dw	1036
   802  009305  0412               	dw	1042
   803  009307  0417               	dw	1047
   804  009309  041D               	dw	1053
   805  00930B  0423               	dw	1059
   806  00930D  0429               	dw	1065
   807  00930F  042F               	dw	1071
   808  009311  0436               	dw	1078
   809  009313  043C               	dw	1084
   810  009315  0442               	dw	1090
   811  009317  0448               	dw	1096
   812  009319  044F               	dw	1103
   813  00931B  0455               	dw	1109
   814  00931D  045C               	dw	1116
   815  00931F  0463               	dw	1123
   816  009321  046A               	dw	1130
   817  009323  0470               	dw	1136
   818  009325  0477               	dw	1143
   819  009327  047E               	dw	1150
   820  009329  0485               	dw	1157
   821  00932B  048D               	dw	1165
   822  00932D  0494               	dw	1172
   823  00932F  049B               	dw	1179
   824  009331  04A3               	dw	1187
   825  009333  04AA               	dw	1194
   826  009335  04B2               	dw	1202
   827  009337  04BA               	dw	1210
   828  009339  04C2               	dw	1218
   829  00933B  04C9               	dw	1225
   830  00933D  04D2               	dw	1234
   831  00933F  04DA               	dw	1242
   832  009341  04E2               	dw	1250
   833  009343  04EA               	dw	1258
   834  009345  04F3               	dw	1267
   835  009347  04FC               	dw	1276
   836  009349  0504               	dw	1284
   837  00934B  050D               	dw	1293
   838  00934D  0516               	dw	1302
   839  00934F  051F               	dw	1311
   840  009351  0528               	dw	1320
   841  009353  0532               	dw	1330
   842  009355  053B               	dw	1339
   843  009357  0545               	dw	1349
   844  009359  054F               	dw	1359
   845  00935B  0559               	dw	1369
   846  00935D  0563               	dw	1379
   847  00935F  056D               	dw	1389
   848  009361  0577               	dw	1399
   849  009363  0582               	dw	1410
   850  009365  058C               	dw	1420
   851  009367  0597               	dw	1431
   852  009369  05A2               	dw	1442
   853  00936B  05AD               	dw	1453
   854  00936D  05B9               	dw	1465
   855  00936F  05C4               	dw	1476
   856  009371  05D0               	dw	1488
   857  009373  05DC               	dw	1500
   858  009375  05E8               	dw	1512
   859  009377  05F4               	dw	1524
   860  009379  0601               	dw	1537
   861  00937B  060E               	dw	1550
   862  00937D  061A               	dw	1562
   863  00937F  0628               	dw	1576
   864  009381  0635               	dw	1589
   865  009383  0643               	dw	1603
   866  009385  0650               	dw	1616
   867  009387  065E               	dw	1630
   868  009389  066D               	dw	1645
   869  00938B  067B               	dw	1659
   870  00938D  068A               	dw	1674
   871  00938F  0699               	dw	1689
   872  009391  06A9               	dw	1705
   873  009393  06B8               	dw	1720
   874  009395  06C8               	dw	1736
   875  009397  06D8               	dw	1752
   876  009399  06E9               	dw	1769
   877  00939B  06FA               	dw	1786
   878  00939D  070B               	dw	1803
   879  00939F  071C               	dw	1820
   880  0093A1  072E               	dw	1838
   881  0093A3  0740               	dw	1856
   882  0093A5  0753               	dw	1875
   883  0093A7  0766               	dw	1894
   884  0093A9  0779               	dw	1913
   885  0093AB  078D               	dw	1933
   886  0093AD  07A1               	dw	1953
   887  0093AF  07B6               	dw	1974
   888  0093B1  07CB               	dw	1995
   889  0093B3  07E0               	dw	2016
   890  0093B5  07F6               	dw	2038
   891  0093B7  080C               	dw	2060
   892  0093B9  0823               	dw	2083
   893  0093BB  083B               	dw	2107
   894  0093BD  0853               	dw	2131
   895  0093BF  086B               	dw	2155
   896  0093C1  0884               	dw	2180
   897  0093C3  089E               	dw	2206
   898  0093C5  08B8               	dw	2232
   899  0093C7  08D3               	dw	2259
   900  0093C9  08EF               	dw	2287
   901  0093CB  090B               	dw	2315
   902  0093CD  0928               	dw	2344
   903  0093CF  0945               	dw	2373
   904  0093D1  0964               	dw	2404
   905  0093D3  0983               	dw	2435
   906  0093D5  09A3               	dw	2467
   907  0093D7  09C4               	dw	2500
   908  0093D9  09E6               	dw	2534
   909  0093DB  0A08               	dw	2568
   910  0093DD  0A2C               	dw	2604
   911  0093DF  0A51               	dw	2641
   912  0093E1  0A77               	dw	2679
   913  0093E3  0A9D               	dw	2717
   914  0093E5  0AC5               	dw	2757
   915  0093E7  0AEF               	dw	2799
   916  0093E9  0B19               	dw	2841
   917  0093EB  0B45               	dw	2885
   918  0093ED  0B72               	dw	2930
   919  0093EF  0B72               	dw	2930
   920  0093F1  0B7D               	dw	2941
   921  0093F3  0B89               	dw	2953
   922  0093F5  0B94               	dw	2964
   923  0093F7  0BA0               	dw	2976
   924  0093F9  0BAC               	dw	2988
   925  0093FB  0BB8               	dw	3000
   926  0093FD  0BC4               	dw	3012
   927  0093FF  0BD0               	dw	3024
   928  009401  0BDC               	dw	3036
   929  009403  0BE9               	dw	3049
   930  009405  0BF5               	dw	3061
   931  009407  0C02               	dw	3074
   932  009409  0C0E               	dw	3086
   933  00940B  0C1B               	dw	3099
   934  00940D  0C28               	dw	3112
   935  00940F  0C35               	dw	3125
   936  009411  0C42               	dw	3138
   937  009413  0C4F               	dw	3151
   938  009415  0C5D               	dw	3165
   939  009417  0C6A               	dw	3178
   940  009419  0C77               	dw	3191
   941  00941B  0C85               	dw	3205
   942  00941D  0C93               	dw	3219
   943  00941F  0CA1               	dw	3233
   944  009421  0CAF               	dw	3247
   945  009423  0CBD               	dw	3261
   946  009425  0CCB               	dw	3275
   947  009427  0CD9               	dw	3289
   948  009429  0CE8               	dw	3304
   949  00942B  0CF7               	dw	3319
   950  00942D  0D05               	dw	3333
   951  00942F  0D14               	dw	3348
   952  009431  0D23               	dw	3363
   953  009433  0D32               	dw	3378
   954  009435  0D42               	dw	3394
   955  009437  0D51               	dw	3409
   956  009439  0D61               	dw	3425
   957  00943B  0D70               	dw	3440
   958  00943D  0D80               	dw	3456
   959  00943F  0D90               	dw	3472
   960  009441  0DA0               	dw	3488
   961  009443  0DB1               	dw	3505
   962  009445  0DC1               	dw	3521
   963  009447  0DD2               	dw	3538
   964  009449  0DE3               	dw	3555
   965  00944B  0DF3               	dw	3571
   966  00944D  0E05               	dw	3589
   967  00944F  0E16               	dw	3606
   968  009451  0E27               	dw	3623
   969  009453  0E39               	dw	3641
   970  009455  0E4B               	dw	3659
   971  009457  0E5C               	dw	3676
   972  009459  0E6F               	dw	3695
   973  00945B  0E81               	dw	3713
   974  00945D  0E93               	dw	3731
   975  00945F  0EA6               	dw	3750
   976  009461                     __end_of_motor_speed_lookup:
   977                           	opt stack 0
   978  009461                     _motor_steps_lookup:
   979                           	opt stack 0
   980  009461  0001               	dw	1
   981  009463  0002               	dw	2
   982  009465  0003               	dw	3
   983  009467  0004               	dw	4
   984  009469  0005               	dw	5
   985  00946B  0006               	dw	6
   986  00946D  0007               	dw	7
   987  00946F  0008               	dw	8
   988  009471  0009               	dw	9
   989  009473  000A               	dw	10
   990  009475  000B               	dw	11
   991  009477  000C               	dw	12
   992  009479  000D               	dw	13
   993  00947B  000E               	dw	14
   994  00947D  000F               	dw	15
   995  00947F  0010               	dw	16
   996  009481  0011               	dw	17
   997  009483  0012               	dw	18
   998  009485  0013               	dw	19
   999  009487  0014               	dw	20
  1000  009489  0015               	dw	21
  1001  00948B  0016               	dw	22
  1002  00948D  0017               	dw	23
  1003  00948F  0018               	dw	24
  1004  009491  0019               	dw	25
  1005  009493  001A               	dw	26
  1006  009495  001B               	dw	27
  1007  009497  001C               	dw	28
  1008  009499  001D               	dw	29
  1009  00949B  001E               	dw	30
  1010  00949D  001F               	dw	31
  1011  00949F  0020               	dw	32
  1012  0094A1  0021               	dw	33
  1013  0094A3  0022               	dw	34
  1014  0094A5  0023               	dw	35
  1015  0094A7  0024               	dw	36
  1016  0094A9  0025               	dw	37
  1017  0094AB  0026               	dw	38
  1018  0094AD  0027               	dw	39
  1019  0094AF  0028               	dw	40
  1020  0094B1  0029               	dw	41
  1021  0094B3  002A               	dw	42
  1022  0094B5  002B               	dw	43
  1023  0094B7  002C               	dw	44
  1024  0094B9  002D               	dw	45
  1025  0094BB  002E               	dw	46
  1026  0094BD  002F               	dw	47
  1027  0094BF  0030               	dw	48
  1028  0094C1  0031               	dw	49
  1029  0094C3  0032               	dw	50
  1030  0094C5  0033               	dw	51
  1031  0094C7  0034               	dw	52
  1032  0094C9  0035               	dw	53
  1033  0094CB  0036               	dw	54
  1034  0094CD  0037               	dw	55
  1035  0094CF  0038               	dw	56
  1036  0094D1  0039               	dw	57
  1037  0094D3  003A               	dw	58
  1038  0094D5  003B               	dw	59
  1039  0094D7  003C               	dw	60
  1040  0094D9  003D               	dw	61
  1041  0094DB  003E               	dw	62
  1042  0094DD  003F               	dw	63
  1043  0094DF  0040               	dw	64
  1044  0094E1  0041               	dw	65
  1045  0094E3  0042               	dw	66
  1046  0094E5  0043               	dw	67
  1047  0094E7  0045               	dw	69
  1048  0094E9  0047               	dw	71
  1049  0094EB  0049               	dw	73
  1050  0094ED  004B               	dw	75
  1051  0094EF  004D               	dw	77
  1052  0094F1  004F               	dw	79
  1053  0094F3  0051               	dw	81
  1054  0094F5  0053               	dw	83
  1055  0094F7  0055               	dw	85
  1056  0094F9  0057               	dw	87
  1057  0094FB  0059               	dw	89
  1058  0094FD  005B               	dw	91
  1059  0094FF  005D               	dw	93
  1060  009501  005F               	dw	95
  1061  009503  0061               	dw	97
  1062  009505  0063               	dw	99
  1063  009507  0065               	dw	101
  1064  009509  0067               	dw	103
  1065  00950B  0069               	dw	105
  1066  00950D  006B               	dw	107
  1067  00950F  006E               	dw	110
  1068  009511  0070               	dw	112
  1069  009513  0073               	dw	115
  1070  009515  0075               	dw	117
  1071  009517  0077               	dw	119
  1072  009519  0079               	dw	121
  1073  00951B  007B               	dw	123
  1074  00951D  007D               	dw	125
  1075  00951F  007F               	dw	127
  1076  009521  0081               	dw	129
  1077  009523  0083               	dw	131
  1078  009525  0085               	dw	133
  1079  009527  0087               	dw	135
  1080  009529  0089               	dw	137
  1081  00952B  008B               	dw	139
  1082  00952D  008D               	dw	141
  1083  00952F  008F               	dw	143
  1084  009531  0091               	dw	145
  1085  009533  0093               	dw	147
  1086  009535  0095               	dw	149
  1087  009537  0097               	dw	151
  1088  009539  0099               	dw	153
  1089  00953B  009B               	dw	155
  1090  00953D  009D               	dw	157
  1091  00953F  009F               	dw	159
  1092  009541  00A1               	dw	161
  1093  009543  00A3               	dw	163
  1094  009545  00A5               	dw	165
  1095  009547  00A7               	dw	167
  1096  009549  00A9               	dw	169
  1097  00954B  00AB               	dw	171
  1098  00954D  00AD               	dw	173
  1099  00954F  00AF               	dw	175
  1100  009551  00B1               	dw	177
  1101  009553  00B3               	dw	179
  1102  009555  00B5               	dw	181
  1103  009557  00B7               	dw	183
  1104  009559  00B9               	dw	185
  1105  00955B  00BB               	dw	187
  1106  00955D  00BD               	dw	189
  1107  00955F  00C0               	dw	192
  1108  009561  00C3               	dw	195
  1109  009563  00C6               	dw	198
  1110  009565  00C9               	dw	201
  1111  009567  00CC               	dw	204
  1112  009569  00CF               	dw	207
  1113  00956B  00D2               	dw	210
  1114  00956D  00D5               	dw	213
  1115  00956F  00D8               	dw	216
  1116  009571  00DB               	dw	219
  1117  009573  00DE               	dw	222
  1118  009575  00E1               	dw	225
  1119  009577  00E4               	dw	228
  1120  009579  00E7               	dw	231
  1121  00957B  00EA               	dw	234
  1122  00957D  00ED               	dw	237
  1123  00957F  00F0               	dw	240
  1124  009581  00F3               	dw	243
  1125  009583  00F6               	dw	246
  1126  009585  00F9               	dw	249
  1127  009587  00FC               	dw	252
  1128  009589  00FF               	dw	255
  1129  00958B  0102               	dw	258
  1130  00958D  0105               	dw	261
  1131  00958F  0108               	dw	264
  1132  009591  010B               	dw	267
  1133  009593  010E               	dw	270
  1134  009595  0111               	dw	273
  1135  009597  0114               	dw	276
  1136  009599  0117               	dw	279
  1137  00959B  011A               	dw	282
  1138  00959D  011D               	dw	285
  1139  00959F  0120               	dw	288
  1140  0095A1  0123               	dw	291
  1141  0095A3  0126               	dw	294
  1142  0095A5  012A               	dw	298
  1143  0095A7  012D               	dw	301
  1144  0095A9  0130               	dw	304
  1145  0095AB  0133               	dw	307
  1146  0095AD  0137               	dw	311
  1147  0095AF  013A               	dw	314
  1148  0095B1  013E               	dw	318
  1149  0095B3  0142               	dw	322
  1150  0095B5  0145               	dw	325
  1151  0095B7  0149               	dw	329
  1152  0095B9  014D               	dw	333
  1153  0095BB  0151               	dw	337
  1154  0095BD  0155               	dw	341
  1155  0095BF  0159               	dw	345
  1156  0095C1  015D               	dw	349
  1157  0095C3  0161               	dw	353
  1158  0095C5  0166               	dw	358
  1159  0095C7  016A               	dw	362
  1160  0095C9  016E               	dw	366
  1161  0095CB  0173               	dw	371
  1162  0095CD  0178               	dw	376
  1163  0095CF  017D               	dw	381
  1164  0095D1  0182               	dw	386
  1165  0095D3  0187               	dw	391
  1166  0095D5  018C               	dw	396
  1167  0095D7  0191               	dw	401
  1168  0095D9  0196               	dw	406
  1169  0095DB  019C               	dw	412
  1170  0095DD  01A1               	dw	417
  1171  0095DF  01A7               	dw	423
  1172  0095E1  01AD               	dw	429
  1173  0095E3  01B3               	dw	435
  1174  0095E5  01B9               	dw	441
  1175  0095E7  01BF               	dw	447
  1176  0095E9  01C6               	dw	454
  1177  0095EB  01CC               	dw	460
  1178  0095ED  01D3               	dw	467
  1179  0095EF  01DA               	dw	474
  1180  0095F1  01E1               	dw	481
  1181  0095F3  01E8               	dw	488
  1182  0095F5  01F0               	dw	496
  1183  0095F7  01F7               	dw	503
  1184  0095F9  01FF               	dw	511
  1185  0095FB  0207               	dw	519
  1186  0095FD  020F               	dw	527
  1187  0095FF  0218               	dw	536
  1188  009601  0221               	dw	545
  1189  009603  022A               	dw	554
  1190  009605  0233               	dw	563
  1191  009607  023D               	dw	573
  1192  009609  0247               	dw	583
  1193  00960B  0251               	dw	593
  1194  00960D  025C               	dw	604
  1195  00960F  0267               	dw	615
  1196  009611  0272               	dw	626
  1197  009613  027E               	dw	638
  1198  009615  028A               	dw	650
  1199  009617  0297               	dw	663
  1200  009619  02A4               	dw	676
  1201  00961B  02B2               	dw	690
  1202  00961D  02C0               	dw	704
  1203  00961F  02CF               	dw	719
  1204  009621  02DF               	dw	735
  1205  009623  02EF               	dw	751
  1206  009625  02FF               	dw	767
  1207  009627  0311               	dw	785
  1208  009629  0323               	dw	803
  1209  00962B  0336               	dw	822
  1210  00962D  0349               	dw	841
  1211  00962F  035E               	dw	862
  1212  009631  0373               	dw	883
  1213  009633  0389               	dw	905
  1214  009635  03A1               	dw	929
  1215  009637  03B9               	dw	953
  1216  009639  03D3               	dw	979
  1217  00963B  03DD               	dw	989
  1218  00963D  03E4               	dw	996
  1219  00963F  03EA               	dw	1002
  1220  009641  03F1               	dw	1009
  1221  009643  03F8               	dw	1016
  1222  009645  03FF               	dw	1023
  1223  009647  0406               	dw	1030
  1224  009649  040D               	dw	1037
  1225  00964B  0415               	dw	1045
  1226  00964D  041C               	dw	1052
  1227  00964F  0424               	dw	1060
  1228  009651  042B               	dw	1067
  1229  009653  0433               	dw	1075
  1230  009655  043B               	dw	1083
  1231  009657  0442               	dw	1090
  1232  009659  044A               	dw	1098
  1233  00965B  0452               	dw	1106
  1234  00965D  045A               	dw	1114
  1235  00965F  0463               	dw	1123
  1236  009661  046B               	dw	1131
  1237  009663  0474               	dw	1140
  1238  009665  047C               	dw	1148
  1239  009667  0485               	dw	1157
  1240  009669  048E               	dw	1166
  1241  00966B  0496               	dw	1174
  1242  00966D  049F               	dw	1183
  1243  00966F  04A9               	dw	1193
  1244  009671  04B2               	dw	1202
  1245  009673  04BB               	dw	1211
  1246  009675  04C5               	dw	1221
  1247  009677  04CE               	dw	1230
  1248  009679  04D8               	dw	1240
  1249  00967B  04E2               	dw	1250
  1250  00967D  04EC               	dw	1260
  1251  00967F  04F6               	dw	1270
  1252  009681  0500               	dw	1280
  1253  009683  050B               	dw	1291
  1254  009685  0515               	dw	1301
  1255  009687  0520               	dw	1312
  1256  009689  052B               	dw	1323
  1257  00968B  0536               	dw	1334
  1258  00968D  0541               	dw	1345
  1259  00968F  054C               	dw	1356
  1260  009691  0558               	dw	1368
  1261  009693  0564               	dw	1380
  1262  009695  056F               	dw	1391
  1263  009697  057B               	dw	1403
  1264  009699  0587               	dw	1415
  1265  00969B  0594               	dw	1428
  1266  00969D  05A0               	dw	1440
  1267  00969F  05AD               	dw	1453
  1268  0096A1  05BA               	dw	1466
  1269  0096A3  05C7               	dw	1479
  1270  0096A5  05D4               	dw	1492
  1271  0096A7  05E2               	dw	1506
  1272  0096A9  05EF               	dw	1519
  1273  0096AB  05FD               	dw	1533
  1274  0096AD  060B               	dw	1547
  1275  0096AF  0619               	dw	1561
  1276  0096B1  0628               	dw	1576
  1277  0096B3  0637               	dw	1591
  1278  0096B5  0646               	dw	1606
  1279  0096B7  0655               	dw	1621
  1280  0096B9  0664               	dw	1636
  1281  0096BB  0674               	dw	1652
  1282  0096BD  0684               	dw	1668
  1283  0096BF  0694               	dw	1684
  1284  0096C1  06A4               	dw	1700
  1285  0096C3  06B5               	dw	1717
  1286  0096C5  06C6               	dw	1734
  1287  0096C7  06D7               	dw	1751
  1288  0096C9  06E9               	dw	1769
  1289  0096CB  06FA               	dw	1786
  1290  0096CD  070C               	dw	1804
  1291  0096CF  071F               	dw	1823
  1292  0096D1  0731               	dw	1841
  1293  0096D3  0744               	dw	1860
  1294  0096D5  0758               	dw	1880
  1295  0096D7  076B               	dw	1899
  1296  0096D9  077F               	dw	1919
  1297  0096DB  0793               	dw	1939
  1298  0096DD  07A8               	dw	1960
  1299  0096DF  07BD               	dw	1981
  1300  0096E1  07D2               	dw	2002
  1301  0096E3  07E8               	dw	2024
  1302  0096E5  07FE               	dw	2046
  1303  0096E7  0815               	dw	2069
  1304  0096E9  082C               	dw	2092
  1305  0096EB  0843               	dw	2115
  1306  0096ED  085B               	dw	2139
  1307  0096EF  0873               	dw	2163
  1308  0096F1  088B               	dw	2187
  1309  0096F3  08A5               	dw	2213
  1310  0096F5  08BE               	dw	2238
  1311  0096F7  08D8               	dw	2264
  1312  0096F9  08F2               	dw	2290
  1313  0096FB  090D               	dw	2317
  1314  0096FD  0929               	dw	2345
  1315  0096FF  0945               	dw	2373
  1316  009701  0961               	dw	2401
  1317  009703  097E               	dw	2430
  1318  009705  099C               	dw	2460
  1319  009707  09BA               	dw	2490
  1320  009709  09D9               	dw	2521
  1321  00970B  09F9               	dw	2553
  1322  00970D  0A19               	dw	2585
  1323  00970F  0A39               	dw	2617
  1324  009711  0A5B               	dw	2651
  1325  009713  0A7D               	dw	2685
  1326  009715  0A9F               	dw	2719
  1327  009717  0AC3               	dw	2755
  1328  009719  0AE7               	dw	2791
  1329  00971B  0B0C               	dw	2828
  1330  00971D  0B31               	dw	2865
  1331  00971F  0B58               	dw	2904
  1332  009721  0B7F               	dw	2943
  1333  009723  0BA7               	dw	2983
  1334  009725  0BD0               	dw	3024
  1335  009727  0BFA               	dw	3066
  1336  009729  0C25               	dw	3109
  1337  00972B  0C51               	dw	3153
  1338  00972D  0C7E               	dw	3198
  1339  00972F  0CAB               	dw	3243
  1340  009731  0CDA               	dw	3290
  1341  009733  0D0A               	dw	3338
  1342  009735  0D3B               	dw	3387
  1343  009737  0D6D               	dw	3437
  1344  009739  0DA0               	dw	3488
  1345  00973B  0DD4               	dw	3540
  1346  00973D  0E0A               	dw	3594
  1347  00973F  0E41               	dw	3649
  1348  009741  0E79               	dw	3705
  1349  009743  0EB3               	dw	3763
  1350  009745  0EEE               	dw	3822
  1351  009747  0F2A               	dw	3882
  1352  009749  0F68               	dw	3944
  1353  00974B  0FA8               	dw	4008
  1354  00974D  0FE9               	dw	4073
  1355  00974F  102C               	dw	4140
  1356  009751  1070               	dw	4208
  1357  009753  10B6               	dw	4278
  1358  009755  10FE               	dw	4350
  1359  009757  1148               	dw	4424
  1360  009759  1194               	dw	4500
  1361  00975B  11E2               	dw	4578
  1362  00975D  1232               	dw	4658
  1363  00975F  1285               	dw	4741
  1364  009761  12D9               	dw	4825
  1365  009763  1330               	dw	4912
  1366  009765  1389               	dw	5001
  1367  009767  13E5               	dw	5093
  1368  009769  1444               	dw	5188
  1369  00976B  14A5               	dw	5285
  1370  00976D  1509               	dw	5385
  1371  00976F  1570               	dw	5488
  1372  009771  15DA               	dw	5594
  1373  009773  1647               	dw	5703
  1374  009775  16B8               	dw	5816
  1375  009777  172B               	dw	5931
  1376  009779  17A3               	dw	6051
  1377  00977B  181E               	dw	6174
  1378  00977D  189D               	dw	6301
  1379  00977F  1921               	dw	6433
  1380  009781  19A8               	dw	6568
  1381  009783  1A34               	dw	6708
  1382  009785  1AC4               	dw	6852
  1383  009787  1B5A               	dw	7002
  1384  009789  1BF4               	dw	7156
  1385  00978B  1C94               	dw	7316
  1386  00978D  1D39               	dw	7481
  1387  00978F  1DE4               	dw	7652
  1388  009791  1E95               	dw	7829
  1389  009793  1F4C               	dw	8012
  1390  009795  200A               	dw	8202
  1391  009797  20CE               	dw	8398
  1392  009799  219A               	dw	8602
  1393  00979B  226E               	dw	8814
  1394  00979D  234A               	dw	9034
  1395  00979F  242E               	dw	9262
  1396  0097A1  251B               	dw	9499
  1397  0097A3  2612               	dw	9746
  1398  0097A5  2712               	dw	10002
  1399  0097A7  281D               	dw	10269
  1400  0097A9  2932               	dw	10546
  1401  0097AB  2A53               	dw	10835
  1402  0097AD  2B81               	dw	11137
  1403  0097AF  2CBB               	dw	11451
  1404  0097B1  2E03               	dw	11779
  1405  0097B3  2F5A               	dw	12122
  1406  0097B5  30C0               	dw	12480
  1407  0097B7  3236               	dw	12854
  1408  0097B9  33BD               	dw	13245
  1409  0097BB  3557               	dw	13655
  1410  0097BD  35F5               	dw	13813
  1411  0097BF  3661               	dw	13921
  1412  0097C1  36CD               	dw	14029
  1413  0097C3  373B               	dw	14139
  1414  0097C5  37AA               	dw	14250
  1415  0097C7  381B               	dw	14363
  1416  0097C9  388C               	dw	14476
  1417  0097CB  3900               	dw	14592
  1418  0097CD  3974               	dw	14708
  1419  0097CF  39EA               	dw	14826
  1420  0097D1  3A62               	dw	14946
  1421  0097D3  3ADB               	dw	15067
  1422  0097D5  3B55               	dw	15189
  1423  0097D7  3BD1               	dw	15313
  1424  0097D9  3C4E               	dw	15438
  1425  0097DB  3CCD               	dw	15565
  1426  0097DD  3D4E               	dw	15694
  1427  0097DF  3DD0               	dw	15824
  1428  0097E1  3E54               	dw	15956
  1429  0097E3  3EDA               	dw	16090
  1430  0097E5  3F61               	dw	16225
  1431  0097E7  3FEA               	dw	16362
  1432  0097E9  4074               	dw	16500
  1433  0097EB  4101               	dw	16641
  1434  0097ED  418F               	dw	16783
  1435  0097EF  421F               	dw	16927
  1436  0097F1  42B1               	dw	17073
  1437  0097F3  4345               	dw	17221
  1438  0097F5  43DB               	dw	17371
  1439  0097F7  4473               	dw	17523
  1440  0097F9  450D               	dw	17677
  1441  0097FB  45A9               	dw	17833
  1442  0097FD  4647               	dw	17991
  1443  0097FF  46E7               	dw	18151
  1444  009801  4789               	dw	18313
  1445  009803  482E               	dw	18478
  1446  009805  48D5               	dw	18645
  1447  009807  497E               	dw	18814
  1448  009809  4A29               	dw	18985
  1449  00980B  4AD7               	dw	19159
  1450  00980D  4B87               	dw	19335
  1451  00980F  4C3A               	dw	19514
  1452  009811  4CEF               	dw	19695
  1453  009813  4DA6               	dw	19878
  1454  009815  4E61               	dw	20065
  1455  009817  4F1E               	dw	20254
  1456  009819  4FDD               	dw	20445
  1457  00981B  50A0               	dw	20640
  1458  00981D  5165               	dw	20837
  1459  00981F  522D               	dw	21037
  1460  009821  52F8               	dw	21240
  1461  009823  53C6               	dw	21446
  1462  009825  5497               	dw	21655
  1463  009827  556B               	dw	21867
  1464  009829  5642               	dw	22082
  1465  00982B  571C               	dw	22300
  1466  00982D  57FA               	dw	22522
  1467  00982F                     __end_of_motor_steps_lookup:
  1468                           	opt stack 0
  1469  00982F                     _motor_postscaler_lookup:
  1470                           	opt stack 0
  1471  00982F  0C                 	db	12
  1472  009830  07                 	db	7
  1473  009831  05                 	db	5
  1474  009832  04                 	db	4
  1475  009833  04                 	db	4
  1476  009834  03                 	db	3
  1477  009835  03                 	db	3
  1478  009836  03                 	db	3
  1479  009837  02                 	db	2
  1480  009838  02                 	db	2
  1481  009839  02                 	db	2
  1482  00983A  02                 	db	2
  1483  00983B  02                 	db	2
  1484  00983C  02                 	db	2
  1485  00983D  01                 	db	1
  1486  00983E  01                 	db	1
  1487  00983F  01                 	db	1
  1488  009840  01                 	db	1
  1489  009841  01                 	db	1
  1490  009842  01                 	db	1
  1491  009843  01                 	db	1
  1492  009844  01                 	db	1
  1493  009845  01                 	db	1
  1494  009846  01                 	db	1
  1495  009847  01                 	db	1
  1496  009848  01                 	db	1
  1497  009849  01                 	db	1
  1498  00984A  01                 	db	1
  1499  00984B  01                 	db	1
  1500  00984C  01                 	db	1
  1501  00984D  01                 	db	1
  1502  00984E  01                 	db	1
  1503  00984F  01                 	db	1
  1504  009850  01                 	db	1
  1505  009851  01                 	db	1
  1506  009852  01                 	db	1
  1507  009853  01                 	db	1
  1508  009854  01                 	db	1
  1509  009855  01                 	db	1
  1510  009856  01                 	db	1
  1511  009857  01                 	db	1
  1512  009858  01                 	db	1
  1513  009859  01                 	db	1
  1514  00985A  01                 	db	1
  1515  00985B  01                 	db	1
  1516  00985C  01                 	db	1
  1517  00985D  01                 	db	1
  1518  00985E  01                 	db	1
  1519  00985F  01                 	db	1
  1520  009860  01                 	db	1
  1521  009861  01                 	db	1
  1522  009862  01                 	db	1
  1523  009863  01                 	db	1
  1524  009864  01                 	db	1
  1525  009865  01                 	db	1
  1526  009866  01                 	db	1
  1527  009867  01                 	db	1
  1528  009868  01                 	db	1
  1529  009869  01                 	db	1
  1530  00986A  01                 	db	1
  1531  00986B  01                 	db	1
  1532  00986C  01                 	db	1
  1533  00986D  01                 	db	1
  1534  00986E  01                 	db	1
  1535  00986F  01                 	db	1
  1536  009870  01                 	db	1
  1537  009871  01                 	db	1
  1538  009872  01                 	db	1
  1539  009873  01                 	db	1
  1540  009874  01                 	db	1
  1541  009875  01                 	db	1
  1542  009876  01                 	db	1
  1543  009877  01                 	db	1
  1544  009878  01                 	db	1
  1545  009879  01                 	db	1
  1546  00987A  01                 	db	1
  1547  00987B  01                 	db	1
  1548  00987C  01                 	db	1
  1549  00987D  01                 	db	1
  1550  00987E  01                 	db	1
  1551  00987F  01                 	db	1
  1552  009880  01                 	db	1
  1553  009881  01                 	db	1
  1554  009882  01                 	db	1
  1555  009883  01                 	db	1
  1556  009884  01                 	db	1
  1557  009885  01                 	db	1
  1558  009886  01                 	db	1
  1559  009887  01                 	db	1
  1560  009888  01                 	db	1
  1561  009889  01                 	db	1
  1562  00988A  00                 	db	0
  1563  00988B  00                 	db	0
  1564  00988C  00                 	db	0
  1565  00988D  00                 	db	0
  1566  00988E  00                 	db	0
  1567  00988F  00                 	db	0
  1568  009890  00                 	db	0
  1569  009891  00                 	db	0
  1570  009892  00                 	db	0
  1571  009893  00                 	db	0
  1572  009894  00                 	db	0
  1573  009895  00                 	db	0
  1574  009896  00                 	db	0
  1575  009897  00                 	db	0
  1576  009898  00                 	db	0
  1577  009899  00                 	db	0
  1578  00989A  00                 	db	0
  1579  00989B  00                 	db	0
  1580  00989C  00                 	db	0
  1581  00989D  00                 	db	0
  1582  00989E  00                 	db	0
  1583  00989F  00                 	db	0
  1584  0098A0  00                 	db	0
  1585  0098A1  00                 	db	0
  1586  0098A2  00                 	db	0
  1587  0098A3  00                 	db	0
  1588  0098A4  00                 	db	0
  1589  0098A5  00                 	db	0
  1590  0098A6  00                 	db	0
  1591  0098A7  00                 	db	0
  1592  0098A8  00                 	db	0
  1593  0098A9  00                 	db	0
  1594  0098AA  00                 	db	0
  1595  0098AB  00                 	db	0
  1596  0098AC  00                 	db	0
  1597  0098AD  00                 	db	0
  1598  0098AE  00                 	db	0
  1599  0098AF  00                 	db	0
  1600  0098B0  00                 	db	0
  1601  0098B1  00                 	db	0
  1602  0098B2  00                 	db	0
  1603  0098B3  00                 	db	0
  1604  0098B4  00                 	db	0
  1605  0098B5  00                 	db	0
  1606  0098B6  00                 	db	0
  1607  0098B7  00                 	db	0
  1608  0098B8  00                 	db	0
  1609  0098B9  00                 	db	0
  1610  0098BA  00                 	db	0
  1611  0098BB  00                 	db	0
  1612  0098BC  00                 	db	0
  1613  0098BD  00                 	db	0
  1614  0098BE  00                 	db	0
  1615  0098BF  00                 	db	0
  1616  0098C0  00                 	db	0
  1617  0098C1  00                 	db	0
  1618  0098C2  00                 	db	0
  1619  0098C3  00                 	db	0
  1620  0098C4  00                 	db	0
  1621  0098C5  00                 	db	0
  1622  0098C6  00                 	db	0
  1623  0098C7  00                 	db	0
  1624  0098C8  00                 	db	0
  1625  0098C9  00                 	db	0
  1626  0098CA  00                 	db	0
  1627  0098CB  00                 	db	0
  1628  0098CC  00                 	db	0
  1629  0098CD  00                 	db	0
  1630  0098CE  00                 	db	0
  1631  0098CF  00                 	db	0
  1632  0098D0  00                 	db	0
  1633  0098D1  00                 	db	0
  1634  0098D2  00                 	db	0
  1635  0098D3  00                 	db	0
  1636  0098D4  00                 	db	0
  1637  0098D5  00                 	db	0
  1638  0098D6  00                 	db	0
  1639  0098D7  00                 	db	0
  1640  0098D8  00                 	db	0
  1641  0098D9  00                 	db	0
  1642  0098DA  00                 	db	0
  1643  0098DB  00                 	db	0
  1644  0098DC  00                 	db	0
  1645  0098DD  00                 	db	0
  1646  0098DE  00                 	db	0
  1647  0098DF  00                 	db	0
  1648  0098E0  00                 	db	0
  1649  0098E1  00                 	db	0
  1650  0098E2  00                 	db	0
  1651  0098E3  00                 	db	0
  1652  0098E4  00                 	db	0
  1653  0098E5  00                 	db	0
  1654  0098E6  00                 	db	0
  1655  0098E7  00                 	db	0
  1656  0098E8  00                 	db	0
  1657  0098E9  00                 	db	0
  1658  0098EA  00                 	db	0
  1659  0098EB  00                 	db	0
  1660  0098EC  00                 	db	0
  1661  0098ED  00                 	db	0
  1662  0098EE  00                 	db	0
  1663  0098EF  00                 	db	0
  1664  0098F0  00                 	db	0
  1665  0098F1  00                 	db	0
  1666  0098F2  00                 	db	0
  1667  0098F3  00                 	db	0
  1668  0098F4  00                 	db	0
  1669  0098F5  00                 	db	0
  1670  0098F6  00                 	db	0
  1671  0098F7  00                 	db	0
  1672  0098F8  00                 	db	0
  1673  0098F9  00                 	db	0
  1674  0098FA  00                 	db	0
  1675  0098FB  00                 	db	0
  1676  0098FC  00                 	db	0
  1677  0098FD  00                 	db	0
  1678  0098FE  00                 	db	0
  1679  0098FF  00                 	db	0
  1680  009900  00                 	db	0
  1681  009901  00                 	db	0
  1682  009902  00                 	db	0
  1683  009903  00                 	db	0
  1684  009904  00                 	db	0
  1685  009905  00                 	db	0
  1686  009906  00                 	db	0
  1687  009907  00                 	db	0
  1688  009908  00                 	db	0
  1689  009909  00                 	db	0
  1690  00990A  00                 	db	0
  1691  00990B  00                 	db	0
  1692  00990C  00                 	db	0
  1693  00990D  00                 	db	0
  1694  00990E  00                 	db	0
  1695  00990F  00                 	db	0
  1696  009910  00                 	db	0
  1697  009911  00                 	db	0
  1698  009912  00                 	db	0
  1699  009913  00                 	db	0
  1700  009914  00                 	db	0
  1701  009915  00                 	db	0
  1702  009916  00                 	db	0
  1703  009917  00                 	db	0
  1704  009918  00                 	db	0
  1705  009919  00                 	db	0
  1706  00991A  00                 	db	0
  1707  00991B  00                 	db	0
  1708  00991C  00                 	db	0
  1709  00991D  00                 	db	0
  1710  00991E  00                 	db	0
  1711  00991F  00                 	db	0
  1712  009920  00                 	db	0
  1713  009921  00                 	db	0
  1714  009922  00                 	db	0
  1715  009923  00                 	db	0
  1716  009924  00                 	db	0
  1717  009925  00                 	db	0
  1718  009926  00                 	db	0
  1719  009927  00                 	db	0
  1720  009928  00                 	db	0
  1721  009929  00                 	db	0
  1722  00992A  00                 	db	0
  1723  00992B  00                 	db	0
  1724  00992C  00                 	db	0
  1725  00992D  00                 	db	0
  1726  00992E  00                 	db	0
  1727  00992F  00                 	db	0
  1728  009930  00                 	db	0
  1729  009931  00                 	db	0
  1730  009932  00                 	db	0
  1731  009933  00                 	db	0
  1732  009934  00                 	db	0
  1733  009935  00                 	db	0
  1734  009936  00                 	db	0
  1735  009937  00                 	db	0
  1736  009938  00                 	db	0
  1737  009939  00                 	db	0
  1738  00993A  00                 	db	0
  1739  00993B  00                 	db	0
  1740  00993C  00                 	db	0
  1741  00993D  00                 	db	0
  1742  00993E  00                 	db	0
  1743  00993F  00                 	db	0
  1744  009940  00                 	db	0
  1745  009941  00                 	db	0
  1746  009942  00                 	db	0
  1747  009943  00                 	db	0
  1748  009944  00                 	db	0
  1749  009945  00                 	db	0
  1750  009946  00                 	db	0
  1751  009947  00                 	db	0
  1752  009948  00                 	db	0
  1753  009949  00                 	db	0
  1754  00994A  00                 	db	0
  1755  00994B  00                 	db	0
  1756  00994C  00                 	db	0
  1757  00994D  00                 	db	0
  1758  00994E  00                 	db	0
  1759  00994F  00                 	db	0
  1760  009950  00                 	db	0
  1761  009951  00                 	db	0
  1762  009952  00                 	db	0
  1763  009953  00                 	db	0
  1764  009954  00                 	db	0
  1765  009955  00                 	db	0
  1766  009956  00                 	db	0
  1767  009957  00                 	db	0
  1768  009958  00                 	db	0
  1769  009959  00                 	db	0
  1770  00995A  00                 	db	0
  1771  00995B  00                 	db	0
  1772  00995C  00                 	db	0
  1773  00995D  00                 	db	0
  1774  00995E  00                 	db	0
  1775  00995F  00                 	db	0
  1776  009960  00                 	db	0
  1777  009961  00                 	db	0
  1778  009962  00                 	db	0
  1779  009963  00                 	db	0
  1780  009964  00                 	db	0
  1781  009965  00                 	db	0
  1782  009966  00                 	db	0
  1783  009967  00                 	db	0
  1784  009968  00                 	db	0
  1785  009969  00                 	db	0
  1786  00996A  00                 	db	0
  1787  00996B  00                 	db	0
  1788  00996C  00                 	db	0
  1789  00996D  00                 	db	0
  1790  00996E  00                 	db	0
  1791  00996F  00                 	db	0
  1792  009970  00                 	db	0
  1793  009971  00                 	db	0
  1794  009972  00                 	db	0
  1795  009973  00                 	db	0
  1796  009974  00                 	db	0
  1797  009975  00                 	db	0
  1798  009976  00                 	db	0
  1799  009977  00                 	db	0
  1800  009978  00                 	db	0
  1801  009979  00                 	db	0
  1802  00997A  00                 	db	0
  1803  00997B  00                 	db	0
  1804  00997C  00                 	db	0
  1805  00997D  00                 	db	0
  1806  00997E  00                 	db	0
  1807  00997F  00                 	db	0
  1808  009980  00                 	db	0
  1809  009981  00                 	db	0
  1810  009982  00                 	db	0
  1811  009983  00                 	db	0
  1812  009984  00                 	db	0
  1813  009985  00                 	db	0
  1814  009986  00                 	db	0
  1815  009987  00                 	db	0
  1816  009988  00                 	db	0
  1817  009989  00                 	db	0
  1818  00998A  00                 	db	0
  1819  00998B  00                 	db	0
  1820  00998C  00                 	db	0
  1821  00998D  00                 	db	0
  1822  00998E  00                 	db	0
  1823  00998F  00                 	db	0
  1824  009990  00                 	db	0
  1825  009991  00                 	db	0
  1826  009992  00                 	db	0
  1827  009993  00                 	db	0
  1828  009994  00                 	db	0
  1829  009995  00                 	db	0
  1830  009996  00                 	db	0
  1831  009997  00                 	db	0
  1832  009998  00                 	db	0
  1833  009999  00                 	db	0
  1834  00999A  00                 	db	0
  1835  00999B  00                 	db	0
  1836  00999C  00                 	db	0
  1837  00999D  00                 	db	0
  1838  00999E  00                 	db	0
  1839  00999F  00                 	db	0
  1840  0099A0  00                 	db	0
  1841  0099A1  00                 	db	0
  1842  0099A2  00                 	db	0
  1843  0099A3  00                 	db	0
  1844  0099A4  00                 	db	0
  1845  0099A5  00                 	db	0
  1846  0099A6  00                 	db	0
  1847  0099A7  00                 	db	0
  1848  0099A8  00                 	db	0
  1849  0099A9  00                 	db	0
  1850  0099AA  00                 	db	0
  1851  0099AB  00                 	db	0
  1852  0099AC  00                 	db	0
  1853  0099AD  00                 	db	0
  1854  0099AE  00                 	db	0
  1855  0099AF  00                 	db	0
  1856  0099B0  00                 	db	0
  1857  0099B1  00                 	db	0
  1858  0099B2  00                 	db	0
  1859  0099B3  00                 	db	0
  1860  0099B4  00                 	db	0
  1861  0099B5  00                 	db	0
  1862  0099B6  00                 	db	0
  1863  0099B7  00                 	db	0
  1864  0099B8  00                 	db	0
  1865  0099B9  00                 	db	0
  1866  0099BA  00                 	db	0
  1867  0099BB  00                 	db	0
  1868  0099BC  00                 	db	0
  1869  0099BD  00                 	db	0
  1870  0099BE  00                 	db	0
  1871  0099BF  00                 	db	0
  1872  0099C0  00                 	db	0
  1873  0099C1  00                 	db	0
  1874  0099C2  00                 	db	0
  1875  0099C3  00                 	db	0
  1876  0099C4  00                 	db	0
  1877  0099C5  00                 	db	0
  1878  0099C6  00                 	db	0
  1879  0099C7  00                 	db	0
  1880  0099C8  00                 	db	0
  1881  0099C9  00                 	db	0
  1882  0099CA  00                 	db	0
  1883  0099CB  00                 	db	0
  1884  0099CC  00                 	db	0
  1885  0099CD  00                 	db	0
  1886  0099CE  00                 	db	0
  1887  0099CF  00                 	db	0
  1888  0099D0  00                 	db	0
  1889  0099D1  00                 	db	0
  1890  0099D2  00                 	db	0
  1891  0099D3  00                 	db	0
  1892  0099D4  00                 	db	0
  1893  0099D5  00                 	db	0
  1894  0099D6  00                 	db	0
  1895  0099D7  00                 	db	0
  1896  0099D8  00                 	db	0
  1897  0099D9  00                 	db	0
  1898  0099DA  00                 	db	0
  1899  0099DB  00                 	db	0
  1900  0099DC  00                 	db	0
  1901  0099DD  00                 	db	0
  1902  0099DE  00                 	db	0
  1903  0099DF  00                 	db	0
  1904  0099E0  00                 	db	0
  1905  0099E1  00                 	db	0
  1906  0099E2  00                 	db	0
  1907  0099E3  00                 	db	0
  1908  0099E4  00                 	db	0
  1909  0099E5  00                 	db	0
  1910  0099E6  00                 	db	0
  1911  0099E7  00                 	db	0
  1912  0099E8  00                 	db	0
  1913  0099E9  00                 	db	0
  1914  0099EA  00                 	db	0
  1915  0099EB  00                 	db	0
  1916  0099EC  00                 	db	0
  1917  0099ED  00                 	db	0
  1918  0099EE  00                 	db	0
  1919  0099EF  00                 	db	0
  1920  0099F0  00                 	db	0
  1921  0099F1  00                 	db	0
  1922  0099F2  00                 	db	0
  1923  0099F3  00                 	db	0
  1924  0099F4  00                 	db	0
  1925  0099F5  00                 	db	0
  1926  0099F6  00                 	db	0
  1927  0099F7  00                 	db	0
  1928  0099F8  00                 	db	0
  1929  0099F9  00                 	db	0
  1930  0099FA  00                 	db	0
  1931  0099FB  00                 	db	0
  1932  0099FC  00                 	db	0
  1933  0099FD  00                 	db	0
  1934  0099FE  00                 	db	0
  1935  0099FF  00                 	db	0
  1936  009A00  00                 	db	0
  1937  009A01  00                 	db	0
  1938  009A02  00                 	db	0
  1939  009A03  00                 	db	0
  1940  009A04  00                 	db	0
  1941  009A05  00                 	db	0
  1942  009A06  00                 	db	0
  1943  009A07  00                 	db	0
  1944  009A08  00                 	db	0
  1945  009A09  00                 	db	0
  1946  009A0A  00                 	db	0
  1947  009A0B  00                 	db	0
  1948  009A0C  00                 	db	0
  1949  009A0D  00                 	db	0
  1950  009A0E  00                 	db	0
  1951  009A0F  00                 	db	0
  1952  009A10  00                 	db	0
  1953  009A11  00                 	db	0
  1954  009A12  00                 	db	0
  1955  009A13  00                 	db	0
  1956  009A14  00                 	db	0
  1957  009A15  00                 	db	0
  1958  009A16                     __end_of_motor_postscaler_lookup:
  1959                           	opt stack 0
  1960  009A16                     _motor_period_lookup:
  1961                           	opt stack 0
  1962  009A16  EC                 	db	236
  1963  009A17  F2                 	db	242
  1964  009A18  F6                 	db	246
  1965  009A19  F4                 	db	244
  1966  009A1A  D2                 	db	210
  1967  009A1B  E8                 	db	232
  1968  009A1C  D2                 	db	210
  1969  009A1D  C0                 	db	192
  1970  009A1E  EC                 	db	236
  1971  009A1F  DC                 	db	220
  1972  009A20  CF                 	db	207
  1973  009A21  C3                 	db	195
  1974  009A22  B9                 	db	185
  1975  009A23  B0                 	db	176
  1976  009A24  FC                 	db	252
  1977  009A25  F2                 	db	242
  1978  009A26  E8                 	db	232
  1979  009A27  DF                 	db	223
  1980  009A28  D7                 	db	215
  1981  009A29  D0                 	db	208
  1982  009A2A  CA                 	db	202
  1983  009A2B  C3                 	db	195
  1984  009A2C  BE                 	db	190
  1985  009A2D  B8                 	db	184
  1986  009A2E  B3                 	db	179
  1987  009A2F  AF                 	db	175
  1988  009A30  AA                 	db	170
  1989  009A31  A6                 	db	166
  1990  009A32  A2                 	db	162
  1991  009A33  9F                 	db	159
  1992  009A34  9B                 	db	155
  1993  009A35  98                 	db	152
  1994  009A36  95                 	db	149
  1995  009A37  92                 	db	146
  1996  009A38  8F                 	db	143
  1997  009A39  8C                 	db	140
  1998  009A3A  8A                 	db	138
  1999  009A3B  87                 	db	135
  2000  009A3C  85                 	db	133
  2001  009A3D  83                 	db	131
  2002  009A3E  81                 	db	129
  2003  009A3F  7F                 	db	127
  2004  009A40  7D                 	db	125
  2005  009A41  7B                 	db	123
  2006  009A42  79                 	db	121
  2007  009A43  77                 	db	119
  2008  009A44  75                 	db	117
  2009  009A45  74                 	db	116
  2010  009A46  72                 	db	114
  2011  009A47  71                 	db	113
  2012  009A48  6F                 	db	111
  2013  009A49  6E                 	db	110
  2014  009A4A  6C                 	db	108
  2015  009A4B  6B                 	db	107
  2016  009A4C  6A                 	db	106
  2017  009A4D  68                 	db	104
  2018  009A4E  67                 	db	103
  2019  009A4F  66                 	db	102
  2020  009A50  65                 	db	101
  2021  009A51  64                 	db	100
  2022  009A52  62                 	db	98
  2023  009A53  61                 	db	97
  2024  009A54  60                 	db	96
  2025  009A55  5F                 	db	95
  2026  009A56  5E                 	db	94
  2027  009A57  5D                 	db	93
  2028  009A58  5C                 	db	92
  2029  009A59  5B                 	db	91
  2030  009A5A  59                 	db	89
  2031  009A5B  57                 	db	87
  2032  009A5C  56                 	db	86
  2033  009A5D  54                 	db	84
  2034  009A5E  53                 	db	83
  2035  009A5F  51                 	db	81
  2036  009A60  50                 	db	80
  2037  009A61  4F                 	db	79
  2038  009A62  4E                 	db	78
  2039  009A63  4C                 	db	76
  2040  009A64  4B                 	db	75
  2041  009A65  4A                 	db	74
  2042  009A66  49                 	db	73
  2043  009A67  48                 	db	72
  2044  009A68  47                 	db	71
  2045  009A69  46                 	db	70
  2046  009A6A  45                 	db	69
  2047  009A6B  44                 	db	68
  2048  009A6C  43                 	db	67
  2049  009A6D  42                 	db	66
  2050  009A6E  41                 	db	65
  2051  009A6F  40                 	db	64
  2052  009A70  3F                 	db	63
  2053  009A71  FE                 	db	254
  2054  009A72  FB                 	db	251
  2055  009A73  F8                 	db	248
  2056  009A74  F6                 	db	246
  2057  009A75  F3                 	db	243
  2058  009A76  F0                 	db	240
  2059  009A77  EE                 	db	238
  2060  009A78  EC                 	db	236
  2061  009A79  E9                 	db	233
  2062  009A7A  E7                 	db	231
  2063  009A7B  E5                 	db	229
  2064  009A7C  E3                 	db	227
  2065  009A7D  E0                 	db	224
  2066  009A7E  DE                 	db	222
  2067  009A7F  DC                 	db	220
  2068  009A80  DA                 	db	218
  2069  009A81  D8                 	db	216
  2070  009A82  D7                 	db	215
  2071  009A83  D5                 	db	213
  2072  009A84  D3                 	db	211
  2073  009A85  D1                 	db	209
  2074  009A86  CF                 	db	207
  2075  009A87  CE                 	db	206
  2076  009A88  CC                 	db	204
  2077  009A89  CA                 	db	202
  2078  009A8A  C9                 	db	201
  2079  009A8B  C7                 	db	199
  2080  009A8C  C6                 	db	198
  2081  009A8D  C4                 	db	196
  2082  009A8E  C3                 	db	195
  2083  009A8F  C1                 	db	193
  2084  009A90  C0                 	db	192
  2085  009A91  BE                 	db	190
  2086  009A92  BD                 	db	189
  2087  009A93  BC                 	db	188
  2088  009A94  BA                 	db	186
  2089  009A95  B8                 	db	184
  2090  009A96  B6                 	db	182
  2091  009A97  B4                 	db	180
  2092  009A98  B3                 	db	179
  2093  009A99  B1                 	db	177
  2094  009A9A  AF                 	db	175
  2095  009A9B  AE                 	db	174
  2096  009A9C  AC                 	db	172
  2097  009A9D  AA                 	db	170
  2098  009A9E  A9                 	db	169
  2099  009A9F  A7                 	db	167
  2100  009AA0  A6                 	db	166
  2101  009AA1  A4                 	db	164
  2102  009AA2  A3                 	db	163
  2103  009AA3  A1                 	db	161
  2104  009AA4  A0                 	db	160
  2105  009AA5  9F                 	db	159
  2106  009AA6  9D                 	db	157
  2107  009AA7  9C                 	db	156
  2108  009AA8  9B                 	db	155
  2109  009AA9  9A                 	db	154
  2110  009AAA  98                 	db	152
  2111  009AAB  97                 	db	151
  2112  009AAC  96                 	db	150
  2113  009AAD  95                 	db	149
  2114  009AAE  94                 	db	148
  2115  009AAF  93                 	db	147
  2116  009AB0  92                 	db	146
  2117  009AB1  90                 	db	144
  2118  009AB2  8F                 	db	143
  2119  009AB3  8E                 	db	142
  2120  009AB4  8D                 	db	141
  2121  009AB5  8C                 	db	140
  2122  009AB6  8B                 	db	139
  2123  009AB7  8A                 	db	138
  2124  009AB8  89                 	db	137
  2125  009AB9  88                 	db	136
  2126  009ABA  87                 	db	135
  2127  009ABB  86                 	db	134
  2128  009ABC  85                 	db	133
  2129  009ABD  84                 	db	132
  2130  009ABE  83                 	db	131
  2131  009ABF  82                 	db	130
  2132  009AC0  81                 	db	129
  2133  009AC1  80                 	db	128
  2134  009AC2  7F                 	db	127
  2135  009AC3  7E                 	db	126
  2136  009AC4  7D                 	db	125
  2137  009AC5  7C                 	db	124
  2138  009AC6  7B                 	db	123
  2139  009AC7  7A                 	db	122
  2140  009AC8  79                 	db	121
  2141  009AC9  78                 	db	120
  2142  009ACA  77                 	db	119
  2143  009ACB  76                 	db	118
  2144  009ACC  75                 	db	117
  2145  009ACD  74                 	db	116
  2146  009ACE  73                 	db	115
  2147  009ACF  72                 	db	114
  2148  009AD0  71                 	db	113
  2149  009AD1  70                 	db	112
  2150  009AD2  6F                 	db	111
  2151  009AD3  6E                 	db	110
  2152  009AD4  6D                 	db	109
  2153  009AD5  6C                 	db	108
  2154  009AD6  6B                 	db	107
  2155  009AD7  6A                 	db	106
  2156  009AD8  69                 	db	105
  2157  009AD9  68                 	db	104
  2158  009ADA  67                 	db	103
  2159  009ADB  66                 	db	102
  2160  009ADC  65                 	db	101
  2161  009ADD  64                 	db	100
  2162  009ADE  63                 	db	99
  2163  009ADF  62                 	db	98
  2164  009AE0  61                 	db	97
  2165  009AE1  60                 	db	96
  2166  009AE2  5F                 	db	95
  2167  009AE3  5E                 	db	94
  2168  009AE4  5D                 	db	93
  2169  009AE5  5C                 	db	92
  2170  009AE6  5B                 	db	91
  2171  009AE7  5A                 	db	90
  2172  009AE8  59                 	db	89
  2173  009AE9  58                 	db	88
  2174  009AEA  57                 	db	87
  2175  009AEB  56                 	db	86
  2176  009AEC  55                 	db	85
  2177  009AED  54                 	db	84
  2178  009AEE  53                 	db	83
  2179  009AEF  52                 	db	82
  2180  009AF0  51                 	db	81
  2181  009AF1  50                 	db	80
  2182  009AF2  4F                 	db	79
  2183  009AF3  4E                 	db	78
  2184  009AF4  4D                 	db	77
  2185  009AF5  4C                 	db	76
  2186  009AF6  4B                 	db	75
  2187  009AF7  4A                 	db	74
  2188  009AF8  49                 	db	73
  2189  009AF9  48                 	db	72
  2190  009AFA  47                 	db	71
  2191  009AFB  46                 	db	70
  2192  009AFC  45                 	db	69
  2193  009AFD  44                 	db	68
  2194  009AFE  43                 	db	67
  2195  009AFF  42                 	db	66
  2196  009B00  41                 	db	65
  2197  009B01  40                 	db	64
  2198  009B02  3F                 	db	63
  2199  009B03  FF                 	db	255
  2200  009B04  FE                 	db	254
  2201  009B05  FD                 	db	253
  2202  009B06  FC                 	db	252
  2203  009B07  FB                 	db	251
  2204  009B08  FA                 	db	250
  2205  009B09  F9                 	db	249
  2206  009B0A  F8                 	db	248
  2207  009B0B  F7                 	db	247
  2208  009B0C  F6                 	db	246
  2209  009B0D  F5                 	db	245
  2210  009B0E  F4                 	db	244
  2211  009B0F  F3                 	db	243
  2212  009B10  F2                 	db	242
  2213  009B11  F1                 	db	241
  2214  009B12  F0                 	db	240
  2215  009B13  EF                 	db	239
  2216  009B14  EE                 	db	238
  2217  009B15  ED                 	db	237
  2218  009B16  EC                 	db	236
  2219  009B17  EB                 	db	235
  2220  009B18  EA                 	db	234
  2221  009B19  E9                 	db	233
  2222  009B1A  E8                 	db	232
  2223  009B1B  E7                 	db	231
  2224  009B1C  E6                 	db	230
  2225  009B1D  E5                 	db	229
  2226  009B1E  E4                 	db	228
  2227  009B1F  E3                 	db	227
  2228  009B20  E2                 	db	226
  2229  009B21  E1                 	db	225
  2230  009B22  E0                 	db	224
  2231  009B23  DF                 	db	223
  2232  009B24  DE                 	db	222
  2233  009B25  DD                 	db	221
  2234  009B26  DC                 	db	220
  2235  009B27  DB                 	db	219
  2236  009B28  DA                 	db	218
  2237  009B29  D9                 	db	217
  2238  009B2A  D8                 	db	216
  2239  009B2B  D7                 	db	215
  2240  009B2C  D6                 	db	214
  2241  009B2D  D5                 	db	213
  2242  009B2E  D4                 	db	212
  2243  009B2F  D3                 	db	211
  2244  009B30  D2                 	db	210
  2245  009B31  D1                 	db	209
  2246  009B32  D0                 	db	208
  2247  009B33  CF                 	db	207
  2248  009B34  CE                 	db	206
  2249  009B35  CD                 	db	205
  2250  009B36  CC                 	db	204
  2251  009B37  CB                 	db	203
  2252  009B38  CA                 	db	202
  2253  009B39  C9                 	db	201
  2254  009B3A  C8                 	db	200
  2255  009B3B  C7                 	db	199
  2256  009B3C  C6                 	db	198
  2257  009B3D  C5                 	db	197
  2258  009B3E  C4                 	db	196
  2259  009B3F  C3                 	db	195
  2260  009B40  C2                 	db	194
  2261  009B41  C1                 	db	193
  2262  009B42  C0                 	db	192
  2263  009B43  BF                 	db	191
  2264  009B44  BE                 	db	190
  2265  009B45  BD                 	db	189
  2266  009B46  BC                 	db	188
  2267  009B47  BB                 	db	187
  2268  009B48  BA                 	db	186
  2269  009B49  B9                 	db	185
  2270  009B4A  B8                 	db	184
  2271  009B4B  B7                 	db	183
  2272  009B4C  B6                 	db	182
  2273  009B4D  B5                 	db	181
  2274  009B4E  B4                 	db	180
  2275  009B4F  B3                 	db	179
  2276  009B50  B2                 	db	178
  2277  009B51  B1                 	db	177
  2278  009B52  B0                 	db	176
  2279  009B53  AF                 	db	175
  2280  009B54  AE                 	db	174
  2281  009B55  AD                 	db	173
  2282  009B56  AC                 	db	172
  2283  009B57  AB                 	db	171
  2284  009B58  AA                 	db	170
  2285  009B59  A9                 	db	169
  2286  009B5A  A8                 	db	168
  2287  009B5B  A7                 	db	167
  2288  009B5C  A6                 	db	166
  2289  009B5D  A5                 	db	165
  2290  009B5E  A4                 	db	164
  2291  009B5F  A3                 	db	163
  2292  009B60  A2                 	db	162
  2293  009B61  A1                 	db	161
  2294  009B62  A0                 	db	160
  2295  009B63  9F                 	db	159
  2296  009B64  9E                 	db	158
  2297  009B65  9D                 	db	157
  2298  009B66  9C                 	db	156
  2299  009B67  9B                 	db	155
  2300  009B68  9A                 	db	154
  2301  009B69  99                 	db	153
  2302  009B6A  98                 	db	152
  2303  009B6B  97                 	db	151
  2304  009B6C  96                 	db	150
  2305  009B6D  95                 	db	149
  2306  009B6E  94                 	db	148
  2307  009B6F  93                 	db	147
  2308  009B70  92                 	db	146
  2309  009B71  91                 	db	145
  2310  009B72  90                 	db	144
  2311  009B73  8F                 	db	143
  2312  009B74  8E                 	db	142
  2313  009B75  8D                 	db	141
  2314  009B76  8C                 	db	140
  2315  009B77  8B                 	db	139
  2316  009B78  8A                 	db	138
  2317  009B79  89                 	db	137
  2318  009B7A  88                 	db	136
  2319  009B7B  87                 	db	135
  2320  009B7C  86                 	db	134
  2321  009B7D  85                 	db	133
  2322  009B7E  84                 	db	132
  2323  009B7F  83                 	db	131
  2324  009B80  82                 	db	130
  2325  009B81  81                 	db	129
  2326  009B82  80                 	db	128
  2327  009B83  7F                 	db	127
  2328  009B84  7E                 	db	126
  2329  009B85  7D                 	db	125
  2330  009B86  7C                 	db	124
  2331  009B87  7B                 	db	123
  2332  009B88  7A                 	db	122
  2333  009B89  79                 	db	121
  2334  009B8A  78                 	db	120
  2335  009B8B  77                 	db	119
  2336  009B8C  76                 	db	118
  2337  009B8D  75                 	db	117
  2338  009B8E  74                 	db	116
  2339  009B8F  73                 	db	115
  2340  009B90  72                 	db	114
  2341  009B91  71                 	db	113
  2342  009B92  70                 	db	112
  2343  009B93  6F                 	db	111
  2344  009B94  6E                 	db	110
  2345  009B95  6D                 	db	109
  2346  009B96  6C                 	db	108
  2347  009B97  6B                 	db	107
  2348  009B98  6A                 	db	106
  2349  009B99  69                 	db	105
  2350  009B9A  68                 	db	104
  2351  009B9B  67                 	db	103
  2352  009B9C  66                 	db	102
  2353  009B9D  65                 	db	101
  2354  009B9E  64                 	db	100
  2355  009B9F  63                 	db	99
  2356  009BA0  62                 	db	98
  2357  009BA1  61                 	db	97
  2358  009BA2  60                 	db	96
  2359  009BA3  5F                 	db	95
  2360  009BA4  5E                 	db	94
  2361  009BA5  5D                 	db	93
  2362  009BA6  5C                 	db	92
  2363  009BA7  5B                 	db	91
  2364  009BA8  5A                 	db	90
  2365  009BA9  59                 	db	89
  2366  009BAA  58                 	db	88
  2367  009BAB  57                 	db	87
  2368  009BAC  56                 	db	86
  2369  009BAD  55                 	db	85
  2370  009BAE  54                 	db	84
  2371  009BAF  53                 	db	83
  2372  009BB0  52                 	db	82
  2373  009BB1  51                 	db	81
  2374  009BB2  50                 	db	80
  2375  009BB3  4F                 	db	79
  2376  009BB4  4E                 	db	78
  2377  009BB5  4D                 	db	77
  2378  009BB6  4C                 	db	76
  2379  009BB7  4B                 	db	75
  2380  009BB8  4A                 	db	74
  2381  009BB9  49                 	db	73
  2382  009BBA  48                 	db	72
  2383  009BBB  47                 	db	71
  2384  009BBC  46                 	db	70
  2385  009BBD  45                 	db	69
  2386  009BBE  44                 	db	68
  2387  009BBF  43                 	db	67
  2388  009BC0  42                 	db	66
  2389  009BC1  41                 	db	65
  2390  009BC2  40                 	db	64
  2391  009BC3  3F                 	db	63
  2392  009BC4  FF                 	db	255
  2393  009BC5  FE                 	db	254
  2394  009BC6  FD                 	db	253
  2395  009BC7  FC                 	db	252
  2396  009BC8  FB                 	db	251
  2397  009BC9  FA                 	db	250
  2398  009BCA  F9                 	db	249
  2399  009BCB  F8                 	db	248
  2400  009BCC  F7                 	db	247
  2401  009BCD  F6                 	db	246
  2402  009BCE  F5                 	db	245
  2403  009BCF  F4                 	db	244
  2404  009BD0  F3                 	db	243
  2405  009BD1  F2                 	db	242
  2406  009BD2  F1                 	db	241
  2407  009BD3  F0                 	db	240
  2408  009BD4  EF                 	db	239
  2409  009BD5  EE                 	db	238
  2410  009BD6  ED                 	db	237
  2411  009BD7  EC                 	db	236
  2412  009BD8  EB                 	db	235
  2413  009BD9  EA                 	db	234
  2414  009BDA  E9                 	db	233
  2415  009BDB  E8                 	db	232
  2416  009BDC  E7                 	db	231
  2417  009BDD  E6                 	db	230
  2418  009BDE  E5                 	db	229
  2419  009BDF  E4                 	db	228
  2420  009BE0  E3                 	db	227
  2421  009BE1  E2                 	db	226
  2422  009BE2  E1                 	db	225
  2423  009BE3  E0                 	db	224
  2424  009BE4  DF                 	db	223
  2425  009BE5  DE                 	db	222
  2426  009BE6  DD                 	db	221
  2427  009BE7  DC                 	db	220
  2428  009BE8  DB                 	db	219
  2429  009BE9  DA                 	db	218
  2430  009BEA  D9                 	db	217
  2431  009BEB  D8                 	db	216
  2432  009BEC  D7                 	db	215
  2433  009BED  D6                 	db	214
  2434  009BEE  D5                 	db	213
  2435  009BEF  D4                 	db	212
  2436  009BF0  D3                 	db	211
  2437  009BF1  D2                 	db	210
  2438  009BF2  D1                 	db	209
  2439  009BF3  D0                 	db	208
  2440  009BF4  CF                 	db	207
  2441  009BF5  CE                 	db	206
  2442  009BF6  CD                 	db	205
  2443  009BF7  CC                 	db	204
  2444  009BF8  CB                 	db	203
  2445  009BF9  CA                 	db	202
  2446  009BFA  C9                 	db	201
  2447  009BFB  C8                 	db	200
  2448  009BFC  C7                 	db	199
  2449  009BFD                     __end_of_motor_period_lookup:
  2450                           	opt stack 0
  2451  009BFD                     _motor_prescaler_lookup:
  2452                           	opt stack 0
  2453  009BFD  02                 	db	2
  2454  009BFE  02                 	db	2
  2455  009BFF  02                 	db	2
  2456  009C00  02                 	db	2
  2457  009C01  02                 	db	2
  2458  009C02  02                 	db	2
  2459  009C03  02                 	db	2
  2460  009C04  02                 	db	2
  2461  009C05  02                 	db	2
  2462  009C06  02                 	db	2
  2463  009C07  02                 	db	2
  2464  009C08  02                 	db	2
  2465  009C09  02                 	db	2
  2466  009C0A  02                 	db	2
  2467  009C0B  02                 	db	2
  2468  009C0C  02                 	db	2
  2469  009C0D  02                 	db	2
  2470  009C0E  02                 	db	2
  2471  009C0F  02                 	db	2
  2472  009C10  02                 	db	2
  2473  009C11  02                 	db	2
  2474  009C12  02                 	db	2
  2475  009C13  02                 	db	2
  2476  009C14  02                 	db	2
  2477  009C15  02                 	db	2
  2478  009C16  02                 	db	2
  2479  009C17  02                 	db	2
  2480  009C18  02                 	db	2
  2481  009C19  02                 	db	2
  2482  009C1A  02                 	db	2
  2483  009C1B  02                 	db	2
  2484  009C1C  02                 	db	2
  2485  009C1D  02                 	db	2
  2486  009C1E  02                 	db	2
  2487  009C1F  02                 	db	2
  2488  009C20  02                 	db	2
  2489  009C21  02                 	db	2
  2490  009C22  02                 	db	2
  2491  009C23  02                 	db	2
  2492  009C24  02                 	db	2
  2493  009C25  02                 	db	2
  2494  009C26  02                 	db	2
  2495  009C27  02                 	db	2
  2496  009C28  02                 	db	2
  2497  009C29  02                 	db	2
  2498  009C2A  02                 	db	2
  2499  009C2B  02                 	db	2
  2500  009C2C  02                 	db	2
  2501  009C2D  02                 	db	2
  2502  009C2E  02                 	db	2
  2503  009C2F  02                 	db	2
  2504  009C30  02                 	db	2
  2505  009C31  02                 	db	2
  2506  009C32  02                 	db	2
  2507  009C33  02                 	db	2
  2508  009C34  02                 	db	2
  2509  009C35  02                 	db	2
  2510  009C36  02                 	db	2
  2511  009C37  02                 	db	2
  2512  009C38  02                 	db	2
  2513  009C39  02                 	db	2
  2514  009C3A  02                 	db	2
  2515  009C3B  02                 	db	2
  2516  009C3C  02                 	db	2
  2517  009C3D  02                 	db	2
  2518  009C3E  02                 	db	2
  2519  009C3F  02                 	db	2
  2520  009C40  02                 	db	2
  2521  009C41  02                 	db	2
  2522  009C42  02                 	db	2
  2523  009C43  02                 	db	2
  2524  009C44  02                 	db	2
  2525  009C45  02                 	db	2
  2526  009C46  02                 	db	2
  2527  009C47  02                 	db	2
  2528  009C48  02                 	db	2
  2529  009C49  02                 	db	2
  2530  009C4A  02                 	db	2
  2531  009C4B  02                 	db	2
  2532  009C4C  02                 	db	2
  2533  009C4D  02                 	db	2
  2534  009C4E  02                 	db	2
  2535  009C4F  02                 	db	2
  2536  009C50  02                 	db	2
  2537  009C51  02                 	db	2
  2538  009C52  02                 	db	2
  2539  009C53  02                 	db	2
  2540  009C54  02                 	db	2
  2541  009C55  02                 	db	2
  2542  009C56  02                 	db	2
  2543  009C57  02                 	db	2
  2544  009C58  02                 	db	2
  2545  009C59  02                 	db	2
  2546  009C5A  02                 	db	2
  2547  009C5B  02                 	db	2
  2548  009C5C  02                 	db	2
  2549  009C5D  02                 	db	2
  2550  009C5E  02                 	db	2
  2551  009C5F  02                 	db	2
  2552  009C60  02                 	db	2
  2553  009C61  02                 	db	2
  2554  009C62  02                 	db	2
  2555  009C63  02                 	db	2
  2556  009C64  02                 	db	2
  2557  009C65  02                 	db	2
  2558  009C66  02                 	db	2
  2559  009C67  02                 	db	2
  2560  009C68  02                 	db	2
  2561  009C69  02                 	db	2
  2562  009C6A  02                 	db	2
  2563  009C6B  02                 	db	2
  2564  009C6C  02                 	db	2
  2565  009C6D  02                 	db	2
  2566  009C6E  02                 	db	2
  2567  009C6F  02                 	db	2
  2568  009C70  02                 	db	2
  2569  009C71  02                 	db	2
  2570  009C72  02                 	db	2
  2571  009C73  02                 	db	2
  2572  009C74  02                 	db	2
  2573  009C75  02                 	db	2
  2574  009C76  02                 	db	2
  2575  009C77  02                 	db	2
  2576  009C78  02                 	db	2
  2577  009C79  02                 	db	2
  2578  009C7A  02                 	db	2
  2579  009C7B  02                 	db	2
  2580  009C7C  02                 	db	2
  2581  009C7D  02                 	db	2
  2582  009C7E  02                 	db	2
  2583  009C7F  02                 	db	2
  2584  009C80  02                 	db	2
  2585  009C81  02                 	db	2
  2586  009C82  02                 	db	2
  2587  009C83  02                 	db	2
  2588  009C84  02                 	db	2
  2589  009C85  02                 	db	2
  2590  009C86  02                 	db	2
  2591  009C87  02                 	db	2
  2592  009C88  02                 	db	2
  2593  009C89  02                 	db	2
  2594  009C8A  02                 	db	2
  2595  009C8B  02                 	db	2
  2596  009C8C  02                 	db	2
  2597  009C8D  02                 	db	2
  2598  009C8E  02                 	db	2
  2599  009C8F  02                 	db	2
  2600  009C90  02                 	db	2
  2601  009C91  02                 	db	2
  2602  009C92  02                 	db	2
  2603  009C93  02                 	db	2
  2604  009C94  02                 	db	2
  2605  009C95  02                 	db	2
  2606  009C96  02                 	db	2
  2607  009C97  02                 	db	2
  2608  009C98  02                 	db	2
  2609  009C99  02                 	db	2
  2610  009C9A  02                 	db	2
  2611  009C9B  02                 	db	2
  2612  009C9C  02                 	db	2
  2613  009C9D  02                 	db	2
  2614  009C9E  02                 	db	2
  2615  009C9F  02                 	db	2
  2616  009CA0  02                 	db	2
  2617  009CA1  02                 	db	2
  2618  009CA2  02                 	db	2
  2619  009CA3  02                 	db	2
  2620  009CA4  02                 	db	2
  2621  009CA5  02                 	db	2
  2622  009CA6  02                 	db	2
  2623  009CA7  02                 	db	2
  2624  009CA8  02                 	db	2
  2625  009CA9  02                 	db	2
  2626  009CAA  02                 	db	2
  2627  009CAB  02                 	db	2
  2628  009CAC  02                 	db	2
  2629  009CAD  02                 	db	2
  2630  009CAE  02                 	db	2
  2631  009CAF  02                 	db	2
  2632  009CB0  02                 	db	2
  2633  009CB1  02                 	db	2
  2634  009CB2  02                 	db	2
  2635  009CB3  02                 	db	2
  2636  009CB4  02                 	db	2
  2637  009CB5  02                 	db	2
  2638  009CB6  02                 	db	2
  2639  009CB7  02                 	db	2
  2640  009CB8  02                 	db	2
  2641  009CB9  02                 	db	2
  2642  009CBA  02                 	db	2
  2643  009CBB  02                 	db	2
  2644  009CBC  02                 	db	2
  2645  009CBD  02                 	db	2
  2646  009CBE  02                 	db	2
  2647  009CBF  02                 	db	2
  2648  009CC0  02                 	db	2
  2649  009CC1  02                 	db	2
  2650  009CC2  02                 	db	2
  2651  009CC3  02                 	db	2
  2652  009CC4  02                 	db	2
  2653  009CC5  02                 	db	2
  2654  009CC6  02                 	db	2
  2655  009CC7  02                 	db	2
  2656  009CC8  02                 	db	2
  2657  009CC9  02                 	db	2
  2658  009CCA  02                 	db	2
  2659  009CCB  02                 	db	2
  2660  009CCC  02                 	db	2
  2661  009CCD  02                 	db	2
  2662  009CCE  02                 	db	2
  2663  009CCF  02                 	db	2
  2664  009CD0  02                 	db	2
  2665  009CD1  02                 	db	2
  2666  009CD2  02                 	db	2
  2667  009CD3  02                 	db	2
  2668  009CD4  02                 	db	2
  2669  009CD5  02                 	db	2
  2670  009CD6  02                 	db	2
  2671  009CD7  02                 	db	2
  2672  009CD8  02                 	db	2
  2673  009CD9  02                 	db	2
  2674  009CDA  02                 	db	2
  2675  009CDB  02                 	db	2
  2676  009CDC  02                 	db	2
  2677  009CDD  02                 	db	2
  2678  009CDE  02                 	db	2
  2679  009CDF  02                 	db	2
  2680  009CE0  02                 	db	2
  2681  009CE1  02                 	db	2
  2682  009CE2  02                 	db	2
  2683  009CE3  02                 	db	2
  2684  009CE4  02                 	db	2
  2685  009CE5  02                 	db	2
  2686  009CE6  02                 	db	2
  2687  009CE7  02                 	db	2
  2688  009CE8  02                 	db	2
  2689  009CE9  02                 	db	2
  2690  009CEA  01                 	db	1
  2691  009CEB  01                 	db	1
  2692  009CEC  01                 	db	1
  2693  009CED  01                 	db	1
  2694  009CEE  01                 	db	1
  2695  009CEF  01                 	db	1
  2696  009CF0  01                 	db	1
  2697  009CF1  01                 	db	1
  2698  009CF2  01                 	db	1
  2699  009CF3  01                 	db	1
  2700  009CF4  01                 	db	1
  2701  009CF5  01                 	db	1
  2702  009CF6  01                 	db	1
  2703  009CF7  01                 	db	1
  2704  009CF8  01                 	db	1
  2705  009CF9  01                 	db	1
  2706  009CFA  01                 	db	1
  2707  009CFB  01                 	db	1
  2708  009CFC  01                 	db	1
  2709  009CFD  01                 	db	1
  2710  009CFE  01                 	db	1
  2711  009CFF  01                 	db	1
  2712  009D00  01                 	db	1
  2713  009D01  01                 	db	1
  2714  009D02  01                 	db	1
  2715  009D03  01                 	db	1
  2716  009D04  01                 	db	1
  2717  009D05  01                 	db	1
  2718  009D06  01                 	db	1
  2719  009D07  01                 	db	1
  2720  009D08  01                 	db	1
  2721  009D09  01                 	db	1
  2722  009D0A  01                 	db	1
  2723  009D0B  01                 	db	1
  2724  009D0C  01                 	db	1
  2725  009D0D  01                 	db	1
  2726  009D0E  01                 	db	1
  2727  009D0F  01                 	db	1
  2728  009D10  01                 	db	1
  2729  009D11  01                 	db	1
  2730  009D12  01                 	db	1
  2731  009D13  01                 	db	1
  2732  009D14  01                 	db	1
  2733  009D15  01                 	db	1
  2734  009D16  01                 	db	1
  2735  009D17  01                 	db	1
  2736  009D18  01                 	db	1
  2737  009D19  01                 	db	1
  2738  009D1A  01                 	db	1
  2739  009D1B  01                 	db	1
  2740  009D1C  01                 	db	1
  2741  009D1D  01                 	db	1
  2742  009D1E  01                 	db	1
  2743  009D1F  01                 	db	1
  2744  009D20  01                 	db	1
  2745  009D21  01                 	db	1
  2746  009D22  01                 	db	1
  2747  009D23  01                 	db	1
  2748  009D24  01                 	db	1
  2749  009D25  01                 	db	1
  2750  009D26  01                 	db	1
  2751  009D27  01                 	db	1
  2752  009D28  01                 	db	1
  2753  009D29  01                 	db	1
  2754  009D2A  01                 	db	1
  2755  009D2B  01                 	db	1
  2756  009D2C  01                 	db	1
  2757  009D2D  01                 	db	1
  2758  009D2E  01                 	db	1
  2759  009D2F  01                 	db	1
  2760  009D30  01                 	db	1
  2761  009D31  01                 	db	1
  2762  009D32  01                 	db	1
  2763  009D33  01                 	db	1
  2764  009D34  01                 	db	1
  2765  009D35  01                 	db	1
  2766  009D36  01                 	db	1
  2767  009D37  01                 	db	1
  2768  009D38  01                 	db	1
  2769  009D39  01                 	db	1
  2770  009D3A  01                 	db	1
  2771  009D3B  01                 	db	1
  2772  009D3C  01                 	db	1
  2773  009D3D  01                 	db	1
  2774  009D3E  01                 	db	1
  2775  009D3F  01                 	db	1
  2776  009D40  01                 	db	1
  2777  009D41  01                 	db	1
  2778  009D42  01                 	db	1
  2779  009D43  01                 	db	1
  2780  009D44  01                 	db	1
  2781  009D45  01                 	db	1
  2782  009D46  01                 	db	1
  2783  009D47  01                 	db	1
  2784  009D48  01                 	db	1
  2785  009D49  01                 	db	1
  2786  009D4A  01                 	db	1
  2787  009D4B  01                 	db	1
  2788  009D4C  01                 	db	1
  2789  009D4D  01                 	db	1
  2790  009D4E  01                 	db	1
  2791  009D4F  01                 	db	1
  2792  009D50  01                 	db	1
  2793  009D51  01                 	db	1
  2794  009D52  01                 	db	1
  2795  009D53  01                 	db	1
  2796  009D54  01                 	db	1
  2797  009D55  01                 	db	1
  2798  009D56  01                 	db	1
  2799  009D57  01                 	db	1
  2800  009D58  01                 	db	1
  2801  009D59  01                 	db	1
  2802  009D5A  01                 	db	1
  2803  009D5B  01                 	db	1
  2804  009D5C  01                 	db	1
  2805  009D5D  01                 	db	1
  2806  009D5E  01                 	db	1
  2807  009D5F  01                 	db	1
  2808  009D60  01                 	db	1
  2809  009D61  01                 	db	1
  2810  009D62  01                 	db	1
  2811  009D63  01                 	db	1
  2812  009D64  01                 	db	1
  2813  009D65  01                 	db	1
  2814  009D66  01                 	db	1
  2815  009D67  01                 	db	1
  2816  009D68  01                 	db	1
  2817  009D69  01                 	db	1
  2818  009D6A  01                 	db	1
  2819  009D6B  01                 	db	1
  2820  009D6C  01                 	db	1
  2821  009D6D  01                 	db	1
  2822  009D6E  01                 	db	1
  2823  009D6F  01                 	db	1
  2824  009D70  01                 	db	1
  2825  009D71  01                 	db	1
  2826  009D72  01                 	db	1
  2827  009D73  01                 	db	1
  2828  009D74  01                 	db	1
  2829  009D75  01                 	db	1
  2830  009D76  01                 	db	1
  2831  009D77  01                 	db	1
  2832  009D78  01                 	db	1
  2833  009D79  01                 	db	1
  2834  009D7A  01                 	db	1
  2835  009D7B  01                 	db	1
  2836  009D7C  01                 	db	1
  2837  009D7D  01                 	db	1
  2838  009D7E  01                 	db	1
  2839  009D7F  01                 	db	1
  2840  009D80  01                 	db	1
  2841  009D81  01                 	db	1
  2842  009D82  01                 	db	1
  2843  009D83  01                 	db	1
  2844  009D84  01                 	db	1
  2845  009D85  01                 	db	1
  2846  009D86  01                 	db	1
  2847  009D87  01                 	db	1
  2848  009D88  01                 	db	1
  2849  009D89  01                 	db	1
  2850  009D8A  01                 	db	1
  2851  009D8B  01                 	db	1
  2852  009D8C  01                 	db	1
  2853  009D8D  01                 	db	1
  2854  009D8E  01                 	db	1
  2855  009D8F  01                 	db	1
  2856  009D90  01                 	db	1
  2857  009D91  01                 	db	1
  2858  009D92  01                 	db	1
  2859  009D93  01                 	db	1
  2860  009D94  01                 	db	1
  2861  009D95  01                 	db	1
  2862  009D96  01                 	db	1
  2863  009D97  01                 	db	1
  2864  009D98  01                 	db	1
  2865  009D99  01                 	db	1
  2866  009D9A  01                 	db	1
  2867  009D9B  01                 	db	1
  2868  009D9C  01                 	db	1
  2869  009D9D  01                 	db	1
  2870  009D9E  01                 	db	1
  2871  009D9F  01                 	db	1
  2872  009DA0  01                 	db	1
  2873  009DA1  01                 	db	1
  2874  009DA2  01                 	db	1
  2875  009DA3  01                 	db	1
  2876  009DA4  01                 	db	1
  2877  009DA5  01                 	db	1
  2878  009DA6  01                 	db	1
  2879  009DA7  01                 	db	1
  2880  009DA8  01                 	db	1
  2881  009DA9  01                 	db	1
  2882  009DAA  01                 	db	1
  2883  009DAB  00                 	db	0
  2884  009DAC  00                 	db	0
  2885  009DAD  00                 	db	0
  2886  009DAE  00                 	db	0
  2887  009DAF  00                 	db	0
  2888  009DB0  00                 	db	0
  2889  009DB1  00                 	db	0
  2890  009DB2  00                 	db	0
  2891  009DB3  00                 	db	0
  2892  009DB4  00                 	db	0
  2893  009DB5  00                 	db	0
  2894  009DB6  00                 	db	0
  2895  009DB7  00                 	db	0
  2896  009DB8  00                 	db	0
  2897  009DB9  00                 	db	0
  2898  009DBA  00                 	db	0
  2899  009DBB  00                 	db	0
  2900  009DBC  00                 	db	0
  2901  009DBD  00                 	db	0
  2902  009DBE  00                 	db	0
  2903  009DBF  00                 	db	0
  2904  009DC0  00                 	db	0
  2905  009DC1  00                 	db	0
  2906  009DC2  00                 	db	0
  2907  009DC3  00                 	db	0
  2908  009DC4  00                 	db	0
  2909  009DC5  00                 	db	0
  2910  009DC6  00                 	db	0
  2911  009DC7  00                 	db	0
  2912  009DC8  00                 	db	0
  2913  009DC9  00                 	db	0
  2914  009DCA  00                 	db	0
  2915  009DCB  00                 	db	0
  2916  009DCC  00                 	db	0
  2917  009DCD  00                 	db	0
  2918  009DCE  00                 	db	0
  2919  009DCF  00                 	db	0
  2920  009DD0  00                 	db	0
  2921  009DD1  00                 	db	0
  2922  009DD2  00                 	db	0
  2923  009DD3  00                 	db	0
  2924  009DD4  00                 	db	0
  2925  009DD5  00                 	db	0
  2926  009DD6  00                 	db	0
  2927  009DD7  00                 	db	0
  2928  009DD8  00                 	db	0
  2929  009DD9  00                 	db	0
  2930  009DDA  00                 	db	0
  2931  009DDB  00                 	db	0
  2932  009DDC  00                 	db	0
  2933  009DDD  00                 	db	0
  2934  009DDE  00                 	db	0
  2935  009DDF  00                 	db	0
  2936  009DE0  00                 	db	0
  2937  009DE1  00                 	db	0
  2938  009DE2  00                 	db	0
  2939  009DE3  00                 	db	0
  2940  009DE4                     __end_of_motor_prescaler_lookup:
  2941                           	opt stack 0
  2942  009DE4                     _USB_SD_Ptr:
  2943                           	opt stack 0
  2944  009DE4  E5                 	db	low _sd000
  2945  009DE5  A2                 	db	high _sd000
  2946  009DE6  FE                 	db	low _sd001
  2947  009DE7  A0                 	db	high _sd001
  2948  009DE8  32                 	db	low _sd002
  2949  009DE9  A1                 	db	high _sd002
  2950  009DEA  A1                 	db	low _sd003
  2951  009DEB  A1                 	db	high _sd003
  2952  009DEC                     __end_of_USB_SD_Ptr:
  2953                           	opt stack 0
  2954  009DEC                     _USB_CD_Ptr:
  2955                           	opt stack 0
  2956  009DEC  BE                 	db	low _configDescriptor1
  2957  009DED  A0                 	db	high _configDescriptor1
  2958  009DEE                     __end_of_USB_CD_Ptr:
  2959                           	opt stack 0
  2960  009DEE                     _dc_manual:
  2961                           	opt stack 0
  2962  009DEE  4D                 	db	77
  2963  009DEF  61                 	db	97
  2964  009DF0  6E                 	db	110
  2965  009DF1  75                 	db	117
  2966  009DF2  61                 	db	97
  2967  009DF3  6C                 	db	108
  2968  009DF4  20                 	db	32
  2969  009DF5  4D                 	db	77
  2970  009DF6  6F                 	db	111
  2971  009DF7  64                 	db	100
  2972  009DF8  65                 	db	101
  2973  009DF9  20                 	db	32
  2974  009DFA  20                 	db	32
  2975  009DFB  20                 	db	32
  2976  009DFC  20                 	db	32
  2977  009DFD  20                 	db	32
  2978  009DFE  20                 	db	32
  2979  009DFF  20                 	db	32
  2980  009E00  20                 	db	32
  2981  009E01  20                 	db	32
  2982  009E02  43                 	db	67
  2983  009E03  75                 	db	117
  2984  009E04  72                 	db	114
  2985  009E05  72                 	db	114
  2986  009E06  65                 	db	101
  2987  009E07  6E                 	db	110
  2988  009E08  74                 	db	116
  2989  009E09  20                 	db	32
  2990  009E0A  70                 	db	112
  2991  009E0B  6F                 	db	111
  2992  009E0C  73                 	db	115
  2993  009E0D  3A                 	db	58
  2994  009E0E  20                 	db	32
  2995  009E0F  20                 	db	32
  2996  009E10  20                 	db	32
  2997  009E11  20                 	db	32
  2998  009E12  20                 	db	32
  2999  009E13  20                 	db	32
  3000  009E14  20                 	db	32
  3001  009E15  01                 	db	1
  3002  009E16  54                 	db	84
  3003  009E17  75                 	db	117
  3004  009E18  72                 	db	114
  3005  009E19  6E                 	db	110
  3006  009E1A  20                 	db	32
  3007  009E1B  43                 	db	67
  3008  009E1C  43                 	db	67
  3009  009E1D  57                 	db	87
  3010  009E1E  20                 	db	32
  3011  009E1F  00                 	db	0
  3012  009E20  20                 	db	32
  3013  009E21  53                 	db	83
  3014  009E22  70                 	db	112
  3015  009E23  65                 	db	101
  3016  009E24  65                 	db	101
  3017  009E25  64                 	db	100
  3018  009E26  20                 	db	32
  3019  009E27  20                 	db	32
  3020  009E28  20                 	db	32
  3021  009E29  20                 	db	32
  3022  009E2A  53                 	db	83
  3023  009E2B  74                 	db	116
  3024  009E2C  61                 	db	97
  3025  009E2D  72                 	db	114
  3026  009E2E  74                 	db	116
  3027  009E2F  20                 	db	32
  3028  009E30  20                 	db	32
  3029  009E31  20                 	db	32
  3030  009E32  20                 	db	32
  3031  009E33  00                 	db	0
  3032  009E34  20                 	db	32
  3033  009E35  20                 	db	32
  3034  009E36  20                 	db	32
  3035  009E37  20                 	db	32
  3036  009E38  20                 	db	32
  3037  009E39  20                 	db	32
  3038  009E3A  20                 	db	32
  3039  009E3B  20                 	db	32
  3040  009E3C  20                 	db	32
  3041  009E3D  20                 	db	32
  3042  009E3E                     __end_of_dc_manual:
  3043                           	opt stack 0
  3044  009E3E                     _dc_zero:
  3045                           	opt stack 0
  3046  009E3E  52                 	db	82
  3047  009E3F  65                 	db	101
  3048  009E40  74                 	db	116
  3049  009E41  75                 	db	117
  3050  009E42  72                 	db	114
  3051  009E43  6E                 	db	110
  3052  009E44  20                 	db	32
  3053  009E45  74                 	db	116
  3054  009E46  6F                 	db	111
  3055  009E47  20                 	db	32
  3056  009E48  5A                 	db	90
  3057  009E49  65                 	db	101
  3058  009E4A  72                 	db	114
  3059  009E4B  6F                 	db	111
  3060  009E4C  3F                 	db	63
  3061  009E4D  20                 	db	32
  3062  009E4E  20                 	db	32
  3063  009E4F  20                 	db	32
  3064  009E50  20                 	db	32
  3065  009E51  20                 	db	32
  3066  009E52  43                 	db	67
  3067  009E53  75                 	db	117
  3068  009E54  72                 	db	114
  3069  009E55  72                 	db	114
  3070  009E56  65                 	db	101
  3071  009E57  6E                 	db	110
  3072  009E58  74                 	db	116
  3073  009E59  20                 	db	32
  3074  009E5A  70                 	db	112
  3075  009E5B  6F                 	db	111
  3076  009E5C  73                 	db	115
  3077  009E5D  3A                 	db	58
  3078  009E5E  20                 	db	32
  3079  009E5F  20                 	db	32
  3080  009E60  20                 	db	32
  3081  009E61  20                 	db	32
  3082  009E62  20                 	db	32
  3083  009E63  20                 	db	32
  3084  009E64  20                 	db	32
  3085  009E65  20                 	db	32
  3086  009E66  20                 	db	32
  3087  009E67  20                 	db	32
  3088  009E68  20                 	db	32
  3089  009E69  20                 	db	32
  3090  009E6A  20                 	db	32
  3091  009E6B  20                 	db	32
  3092  009E6C  20                 	db	32
  3093  009E6D  20                 	db	32
  3094  009E6E  20                 	db	32
  3095  009E6F  20                 	db	32
  3096  009E70  20                 	db	32
  3097  009E71  20                 	db	32
  3098  009E72  20                 	db	32
  3099  009E73  20                 	db	32
  3100  009E74  20                 	db	32
  3101  009E75  20                 	db	32
  3102  009E76  20                 	db	32
  3103  009E77  20                 	db	32
  3104  009E78  20                 	db	32
  3105  009E79  20                 	db	32
  3106  009E7A  20                 	db	32
  3107  009E7B  59                 	db	89
  3108  009E7C  65                 	db	101
  3109  009E7D  73                 	db	115
  3110  009E7E  20                 	db	32
  3111  009E7F  20                 	db	32
  3112  009E80  20                 	db	32
  3113  009E81  20                 	db	32
  3114  009E82  20                 	db	32
  3115  009E83  20                 	db	32
  3116  009E84  20                 	db	32
  3117  009E85  20                 	db	32
  3118  009E86  20                 	db	32
  3119  009E87  20                 	db	32
  3120  009E88  20                 	db	32
  3121  009E89  20                 	db	32
  3122  009E8A  4E                 	db	78
  3123  009E8B  6F                 	db	111
  3124  009E8C  20                 	db	32
  3125  009E8D  20                 	db	32
  3126  009E8E                     __end_of_dc_zero:
  3127                           	opt stack 0
  3128  009E8E                     _dc_arc2:
  3129                           	opt stack 0
  3130  009E8E  41                 	db	65
  3131  009E8F  72                 	db	114
  3132  009E90  63                 	db	99
  3133  009E91  3A                 	db	58
  3134  009E92  20                 	db	32
  3135  009E93  53                 	db	83
  3136  009E94  69                 	db	105
  3137  009E95  7A                 	db	122
  3138  009E96  65                 	db	101
  3139  009E97  3D                 	db	61
  3140  009E98  20                 	db	32
  3141  009E99  20                 	db	32
  3142  009E9A  20                 	db	32
  3143  009E9B  20                 	db	32
  3144  009E9C  20                 	db	32
  3145  009E9D  20                 	db	32
  3146  009E9E  20                 	db	32
  3147  009E9F  20                 	db	32
  3148  009EA0  20                 	db	32
  3149  009EA1  20                 	db	32
  3150  009EA2  43                 	db	67
  3151  009EA3  75                 	db	117
  3152  009EA4  72                 	db	114
  3153  009EA5  72                 	db	114
  3154  009EA6  65                 	db	101
  3155  009EA7  6E                 	db	110
  3156  009EA8  74                 	db	116
  3157  009EA9  20                 	db	32
  3158  009EAA  70                 	db	112
  3159  009EAB  6F                 	db	111
  3160  009EAC  73                 	db	115
  3161  009EAD  3A                 	db	58
  3162  009EAE  20                 	db	32
  3163  009EAF  20                 	db	32
  3164  009EB0  20                 	db	32
  3165  009EB1  20                 	db	32
  3166  009EB2  20                 	db	32
  3167  009EB3  20                 	db	32
  3168  009EB4  20                 	db	32
  3169  009EB5  01                 	db	1
  3170  009EB6  54                 	db	84
  3171  009EB7  75                 	db	117
  3172  009EB8  72                 	db	114
  3173  009EB9  6E                 	db	110
  3174  009EBA  20                 	db	32
  3175  009EBB  43                 	db	67
  3176  009EBC  43                 	db	67
  3177  009EBD  57                 	db	87
  3178  009EBE  20                 	db	32
  3179  009EBF  00                 	db	0
  3180  009EC0  20                 	db	32
  3181  009EC1  53                 	db	83
  3182  009EC2  70                 	db	112
  3183  009EC3  65                 	db	101
  3184  009EC4  65                 	db	101
  3185  009EC5  64                 	db	100
  3186  009EC6  20                 	db	32
  3187  009EC7  20                 	db	32
  3188  009EC8  20                 	db	32
  3189  009EC9  20                 	db	32
  3190  009ECA  53                 	db	83
  3191  009ECB  74                 	db	116
  3192  009ECC  61                 	db	97
  3193  009ECD  72                 	db	114
  3194  009ECE  74                 	db	116
  3195  009ECF  20                 	db	32
  3196  009ED0  20                 	db	32
  3197  009ED1  20                 	db	32
  3198  009ED2  20                 	db	32
  3199  009ED3  00                 	db	0
  3200  009ED4  20                 	db	32
  3201  009ED5  20                 	db	32
  3202  009ED6  20                 	db	32
  3203  009ED7  20                 	db	32
  3204  009ED8  20                 	db	32
  3205  009ED9  20                 	db	32
  3206  009EDA  20                 	db	32
  3207  009EDB  20                 	db	32
  3208  009EDC  20                 	db	32
  3209  009EDD  20                 	db	32
  3210  009EDE                     __end_of_dc_arc2:
  3211                           	opt stack 0
  3212  009EDE                     _dc_arc1:
  3213                           	opt stack 0
  3214  009EDE  41                 	db	65
  3215  009EDF  72                 	db	114
  3216  009EE0  63                 	db	99
  3217  009EE1  3A                 	db	58
  3218  009EE2  20                 	db	32
  3219  009EE3  53                 	db	83
  3220  009EE4  65                 	db	101
  3221  009EE5  74                 	db	116
  3222  009EE6  20                 	db	32
  3223  009EE7  61                 	db	97
  3224  009EE8  72                 	db	114
  3225  009EE9  63                 	db	99
  3226  009EEA  20                 	db	32
  3227  009EEB  73                 	db	115
  3228  009EEC  69                 	db	105
  3229  009EED  7A                 	db	122
  3230  009EEE  65                 	db	101
  3231  009EEF  20                 	db	32
  3232  009EF0  20                 	db	32
  3233  009EF1  20                 	db	32
  3234  009EF2  41                 	db	65
  3235  009EF3  72                 	db	114
  3236  009EF4  63                 	db	99
  3237  009EF5  20                 	db	32
  3238  009EF6  73                 	db	115
  3239  009EF7  69                 	db	105
  3240  009EF8  7A                 	db	122
  3241  009EF9  65                 	db	101
  3242  009EFA  3A                 	db	58
  3243  009EFB  20                 	db	32
  3244  009EFC  20                 	db	32
  3245  009EFD  20                 	db	32
  3246  009EFE  20                 	db	32
  3247  009EFF  20                 	db	32
  3248  009F00  20                 	db	32
  3249  009F01  20                 	db	32
  3250  009F02  20                 	db	32
  3251  009F03  20                 	db	32
  3252  009F04  20                 	db	32
  3253  009F05  20                 	db	32
  3254  009F06  53                 	db	83
  3255  009F07  74                 	db	116
  3256  009F08  65                 	db	101
  3257  009F09  70                 	db	112
  3258  009F0A  20                 	db	32
  3259  009F0B  73                 	db	115
  3260  009F0C  69                 	db	105
  3261  009F0D  7A                 	db	122
  3262  009F0E  65                 	db	101
  3263  009F0F  20                 	db	32
  3264  009F10  00                 	db	0
  3265  009F11  20                 	db	32
  3266  009F12  20                 	db	32
  3267  009F13  43                 	db	67
  3268  009F14  6F                 	db	111
  3269  009F15  6E                 	db	110
  3270  009F16  66                 	db	102
  3271  009F17  69                 	db	105
  3272  009F18  72                 	db	114
  3273  009F19  6D                 	db	109
  3274  009F1A  20                 	db	32
  3275  009F1B  20                 	db	32
  3276  009F1C  20                 	db	32
  3277  009F1D  20                 	db	32
  3278  009F1E  20                 	db	32
  3279  009F1F  20                 	db	32
  3280  009F20  20                 	db	32
  3281  009F21  20                 	db	32
  3282  009F22  20                 	db	32
  3283  009F23  20                 	db	32
  3284  009F24  00                 	db	0
  3285  009F25  20                 	db	32
  3286  009F26  20                 	db	32
  3287  009F27  43                 	db	67
  3288  009F28  61                 	db	97
  3289  009F29  6E                 	db	110
  3290  009F2A  63                 	db	99
  3291  009F2B  65                 	db	101
  3292  009F2C  6C                 	db	108
  3293  009F2D  20                 	db	32
  3294  009F2E                     __end_of_dc_arc1:
  3295                           	opt stack 0
  3296  009F2E                     _dc_divide2:
  3297                           	opt stack 0
  3298  009F2E  44                 	db	68
  3299  009F2F  69                 	db	105
  3300  009F30  76                 	db	118
  3301  009F31  69                 	db	105
  3302  009F32  64                 	db	100
  3303  009F33  65                 	db	101
  3304  009F34  3A                 	db	58
  3305  009F35  20                 	db	32
  3306  009F36  20                 	db	32
  3307  009F37  20                 	db	32
  3308  009F38  20                 	db	32
  3309  009F39  20                 	db	32
  3310  009F3A  20                 	db	32
  3311  009F3B  20                 	db	32
  3312  009F3C  20                 	db	32
  3313  009F3D  20                 	db	32
  3314  009F3E  20                 	db	32
  3315  009F3F  20                 	db	32
  3316  009F40  20                 	db	32
  3317  009F41  20                 	db	32
  3318  009F42  50                 	db	80
  3319  009F43  6F                 	db	111
  3320  009F44  73                 	db	115
  3321  009F45  3A                 	db	58
  3322  009F46  20                 	db	32
  3323  009F47  20                 	db	32
  3324  009F48  20                 	db	32
  3325  009F49  20                 	db	32
  3326  009F4A  20                 	db	32
  3327  009F4B  20                 	db	32
  3328  009F4C  20                 	db	32
  3329  009F4D  20                 	db	32
  3330  009F4E  20                 	db	32
  3331  009F4F  20                 	db	32
  3332  009F50  20                 	db	32
  3333  009F51  20                 	db	32
  3334  009F52  20                 	db	32
  3335  009F53  20                 	db	32
  3336  009F54  20                 	db	32
  3337  009F55  20                 	db	32
  3338  009F56  4A                 	db	74
  3339  009F57  75                 	db	117
  3340  009F58  6D                 	db	109
  3341  009F59  70                 	db	112
  3342  009F5A  20                 	db	32
  3343  009F5B  73                 	db	115
  3344  009F5C  69                 	db	105
  3345  009F5D  7A                 	db	122
  3346  009F5E  65                 	db	101
  3347  009F5F  3A                 	db	58
  3348  009F60  20                 	db	32
  3349  009F61  20                 	db	32
  3350  009F62  20                 	db	32
  3351  009F63  20                 	db	32
  3352  009F64  20                 	db	32
  3353  009F65  20                 	db	32
  3354  009F66  20                 	db	32
  3355  009F67  20                 	db	32
  3356  009F68  20                 	db	32
  3357  009F69  20                 	db	32
  3358  009F6A  50                 	db	80
  3359  009F6B  72                 	db	114
  3360  009F6C  65                 	db	101
  3361  009F6D  73                 	db	115
  3362  009F6E  73                 	db	115
  3363  009F6F  54                 	db	84
  3364  009F70  6F                 	db	111
  3365  009F71  4A                 	db	74
  3366  009F72  75                 	db	117
  3367  009F73  6D                 	db	109
  3368  009F74  70                 	db	112
  3369  009F75  20                 	db	32
  3370  009F76  00                 	db	0
  3371  009F77  20                 	db	32
  3372  009F78  43                 	db	67
  3373  009F79  61                 	db	97
  3374  009F7A  6E                 	db	110
  3375  009F7B  63                 	db	99
  3376  009F7C  65                 	db	101
  3377  009F7D  6C                 	db	108
  3378  009F7E                     __end_of_dc_divide2:
  3379                           	opt stack 0
  3380  009F7E                     _dc_divide1:
  3381                           	opt stack 0
  3382  009F7E  44                 	db	68
  3383  009F7F  69                 	db	105
  3384  009F80  76                 	db	118
  3385  009F81  69                 	db	105
  3386  009F82  64                 	db	100
  3387  009F83  65                 	db	101
  3388  009F84  3A                 	db	58
  3389  009F85  20                 	db	32
  3390  009F86  53                 	db	83
  3391  009F87  65                 	db	101
  3392  009F88  74                 	db	116
  3393  009F89  20                 	db	32
  3394  009F8A  64                 	db	100
  3395  009F8B  69                 	db	105
  3396  009F8C  76                 	db	118
  3397  009F8D  69                 	db	105
  3398  009F8E  73                 	db	115
  3399  009F8F  69                 	db	105
  3400  009F90  6F                 	db	111
  3401  009F91  6E                 	db	110
  3402  009F92  20                 	db	32
  3403  009F93  20                 	db	32
  3404  009F94  20                 	db	32
  3405  009F95  20                 	db	32
  3406  009F96  20                 	db	32
  3407  009F97  20                 	db	32
  3408  009F98  20                 	db	32
  3409  009F99  20                 	db	32
  3410  009F9A  20                 	db	32
  3411  009F9B  20                 	db	32
  3412  009F9C  20                 	db	32
  3413  009F9D  20                 	db	32
  3414  009F9E  20                 	db	32
  3415  009F9F  20                 	db	32
  3416  009FA0  20                 	db	32
  3417  009FA1  20                 	db	32
  3418  009FA2  20                 	db	32
  3419  009FA3  20                 	db	32
  3420  009FA4  20                 	db	32
  3421  009FA5  20                 	db	32
  3422  009FA6  20                 	db	32
  3423  009FA7  20                 	db	32
  3424  009FA8  20                 	db	32
  3425  009FA9  2F                 	db	47
  3426  009FAA  73                 	db	115
  3427  009FAB  74                 	db	116
  3428  009FAC  65                 	db	101
  3429  009FAD  70                 	db	112
  3430  009FAE  20                 	db	32
  3431  009FAF  20                 	db	32
  3432  009FB0  00                 	db	0
  3433  009FB1  20                 	db	32
  3434  009FB2  20                 	db	32
  3435  009FB3  43                 	db	67
  3436  009FB4  6F                 	db	111
  3437  009FB5  6E                 	db	110
  3438  009FB6  66                 	db	102
  3439  009FB7  69                 	db	105
  3440  009FB8  72                 	db	114
  3441  009FB9  6D                 	db	109
  3442  009FBA  31                 	db	49
  3443  009FBB  32                 	db	50
  3444  009FBC  33                 	db	51
  3445  009FBD  34                 	db	52
  3446  009FBE  20                 	db	32
  3447  009FBF  20                 	db	32
  3448  009FC0  20                 	db	32
  3449  009FC1  20                 	db	32
  3450  009FC2  20                 	db	32
  3451  009FC3  20                 	db	32
  3452  009FC4  00                 	db	0
  3453  009FC5  20                 	db	32
  3454  009FC6  20                 	db	32
  3455  009FC7  43                 	db	67
  3456  009FC8  61                 	db	97
  3457  009FC9  6E                 	db	110
  3458  009FCA  63                 	db	99
  3459  009FCB  65                 	db	101
  3460  009FCC  6C                 	db	108
  3461  009FCD  20                 	db	32
  3462  009FCE                     __end_of_dc_divide1:
  3463                           	opt stack 0
  3464  009FCE                     _dc_setup2:
  3465                           	opt stack 0
  3466  009FCE  53                 	db	83
  3467  009FCF  65                 	db	101
  3468  009FD0  74                 	db	116
  3469  009FD1  75                 	db	117
  3470  009FD2  70                 	db	112
  3471  009FD3  3A                 	db	58
  3472  009FD4  20                 	db	32
  3473  009FD5  53                 	db	83
  3474  009FD6  65                 	db	101
  3475  009FD7  74                 	db	116
  3476  009FD8  20                 	db	32
  3477  009FD9  64                 	db	100
  3478  009FDA  69                 	db	105
  3479  009FDB  72                 	db	114
  3480  009FDC  65                 	db	101
  3481  009FDD  63                 	db	99
  3482  009FDE  74                 	db	116
  3483  009FDF  69                 	db	105
  3484  009FE0  6F                 	db	111
  3485  009FE1  6E                 	db	110
  3486  009FE2  20                 	db	32
  3487  009FE3  20                 	db	32
  3488  009FE4  20                 	db	32
  3489  009FE5  20                 	db	32
  3490  009FE6  20                 	db	32
  3491  009FE7  20                 	db	32
  3492  009FE8  20                 	db	32
  3493  009FE9  20                 	db	32
  3494  009FEA  20                 	db	32
  3495  009FEB  20                 	db	32
  3496  009FEC  20                 	db	32
  3497  009FED  20                 	db	32
  3498  009FEE  20                 	db	32
  3499  009FEF  20                 	db	32
  3500  009FF0  20                 	db	32
  3501  009FF1  20                 	db	32
  3502  009FF2  20                 	db	32
  3503  009FF3  20                 	db	32
  3504  009FF4  20                 	db	32
  3505  009FF5  20                 	db	32
  3506  009FF6  20                 	db	32
  3507  009FF7  43                 	db	67
  3508  009FF8  6F                 	db	111
  3509  009FF9  75                 	db	117
  3510  009FFA  6E                 	db	110
  3511  009FFB  74                 	db	116
  3512  009FFC  65                 	db	101
  3513  009FFD  72                 	db	114
  3514  009FFE  43                 	db	67
  3515  009FFF  6C                 	db	108
  3516  00A000  6F                 	db	111
  3517  00A001  63                 	db	99
  3518  00A002  6B                 	db	107
  3519  00A003  77                 	db	119
  3520  00A004  69                 	db	105
  3521  00A005  73                 	db	115
  3522  00A006  65                 	db	101
  3523  00A007  20                 	db	32
  3524  00A008  20                 	db	32
  3525  00A009  20                 	db	32
  3526  00A00A  20                 	db	32
  3527  00A00B  43                 	db	67
  3528  00A00C  6C                 	db	108
  3529  00A00D  6F                 	db	111
  3530  00A00E  63                 	db	99
  3531  00A00F  6B                 	db	107
  3532  00A010  77                 	db	119
  3533  00A011  69                 	db	105
  3534  00A012  73                 	db	115
  3535  00A013  65                 	db	101
  3536  00A014  20                 	db	32
  3537  00A015  20                 	db	32
  3538  00A016  20                 	db	32
  3539  00A017  20                 	db	32
  3540  00A018  20                 	db	32
  3541  00A019  20                 	db	32
  3542  00A01A  20                 	db	32
  3543  00A01B  20                 	db	32
  3544  00A01C  20                 	db	32
  3545  00A01D  20                 	db	32
  3546  00A01E                     __end_of_dc_setup2:
  3547                           	opt stack 0
  3548  00A01E                     _dc_setup1:
  3549                           	opt stack 0
  3550  00A01E  53                 	db	83
  3551  00A01F  65                 	db	101
  3552  00A020  74                 	db	116
  3553  00A021  75                 	db	117
  3554  00A022  70                 	db	112
  3555  00A023  3A                 	db	58
  3556  00A024  20                 	db	32
  3557  00A025  53                 	db	83
  3558  00A026  65                 	db	101
  3559  00A027  74                 	db	116
  3560  00A028  20                 	db	32
  3561  00A029  7A                 	db	122
  3562  00A02A  65                 	db	101
  3563  00A02B  72                 	db	114
  3564  00A02C  6F                 	db	111
  3565  00A02D  20                 	db	32
  3566  00A02E  70                 	db	112
  3567  00A02F  6F                 	db	111
  3568  00A030  73                 	db	115
  3569  00A031  2E                 	db	46
  3570  00A032  20                 	db	32
  3571  00A033  20                 	db	32
  3572  00A034  20                 	db	32
  3573  00A035  20                 	db	32
  3574  00A036  20                 	db	32
  3575  00A037  20                 	db	32
  3576  00A038  20                 	db	32
  3577  00A039  20                 	db	32
  3578  00A03A  20                 	db	32
  3579  00A03B  20                 	db	32
  3580  00A03C  20                 	db	32
  3581  00A03D  20                 	db	32
  3582  00A03E  20                 	db	32
  3583  00A03F  20                 	db	32
  3584  00A040  20                 	db	32
  3585  00A041  20                 	db	32
  3586  00A042  20                 	db	32
  3587  00A043  20                 	db	32
  3588  00A044  20                 	db	32
  3589  00A045  20                 	db	32
  3590  00A046  53                 	db	83
  3591  00A047  74                 	db	116
  3592  00A048  65                 	db	101
  3593  00A049  70                 	db	112
  3594  00A04A  20                 	db	32
  3595  00A04B  73                 	db	115
  3596  00A04C  69                 	db	105
  3597  00A04D  7A                 	db	122
  3598  00A04E  65                 	db	101
  3599  00A04F  20                 	db	32
  3600  00A050  00                 	db	0
  3601  00A051  20                 	db	32
  3602  00A052  20                 	db	32
  3603  00A053  43                 	db	67
  3604  00A054  6F                 	db	111
  3605  00A055  6E                 	db	110
  3606  00A056  66                 	db	102
  3607  00A057  69                 	db	105
  3608  00A058  72                 	db	114
  3609  00A059  6D                 	db	109
  3610  00A05A  20                 	db	32
  3611  00A05B  78                 	db	120
  3612  00A05C  2E                 	db	46
  3613  00A05D  78                 	db	120
  3614  00A05E  78                 	db	120
  3615  00A05F  01                 	db	1
  3616  00A060  20                 	db	32
  3617  00A061  20                 	db	32
  3618  00A062  20                 	db	32
  3619  00A063  20                 	db	32
  3620  00A064  00                 	db	0
  3621  00A065  20                 	db	32
  3622  00A066  20                 	db	32
  3623  00A067  43                 	db	67
  3624  00A068  61                 	db	97
  3625  00A069  6E                 	db	110
  3626  00A06A  63                 	db	99
  3627  00A06B  65                 	db	101
  3628  00A06C  6C                 	db	108
  3629  00A06D  20                 	db	32
  3630  00A06E                     __end_of_dc_setup1:
  3631                           	opt stack 0
  3632  00A06E                     _dc_main:
  3633                           	opt stack 0
  3634  00A06E  4D                 	db	77
  3635  00A06F  61                 	db	97
  3636  00A070  69                 	db	105
  3637  00A071  6E                 	db	110
  3638  00A072  20                 	db	32
  3639  00A073  4D                 	db	77
  3640  00A074  65                 	db	101
  3641  00A075  6E                 	db	110
  3642  00A076  75                 	db	117
  3643  00A077  3A                 	db	58
  3644  00A078  20                 	db	32
  3645  00A079  20                 	db	32
  3646  00A07A  20                 	db	32
  3647  00A07B  20                 	db	32
  3648  00A07C  20                 	db	32
  3649  00A07D  20                 	db	32
  3650  00A07E  20                 	db	32
  3651  00A07F  20                 	db	32
  3652  00A080  20                 	db	32
  3653  00A081  20                 	db	32
  3654  00A082  20                 	db	32
  3655  00A083  53                 	db	83
  3656  00A084  65                 	db	101
  3657  00A085  74                 	db	116
  3658  00A086  75                 	db	117
  3659  00A087  70                 	db	112
  3660  00A088  20                 	db	32
  3661  00A089  20                 	db	32
  3662  00A08A  20                 	db	32
  3663  00A08B  20                 	db	32
  3664  00A08C  44                 	db	68
  3665  00A08D  69                 	db	105
  3666  00A08E  76                 	db	118
  3667  00A08F  69                 	db	105
  3668  00A090  64                 	db	100
  3669  00A091  65                 	db	101
  3670  00A092  20                 	db	32
  3671  00A093  20                 	db	32
  3672  00A094  20                 	db	32
  3673  00A095  20                 	db	32
  3674  00A096  20                 	db	32
  3675  00A097  41                 	db	65
  3676  00A098  72                 	db	114
  3677  00A099  63                 	db	99
  3678  00A09A  20                 	db	32
  3679  00A09B  20                 	db	32
  3680  00A09C  20                 	db	32
  3681  00A09D  20                 	db	32
  3682  00A09E  20                 	db	32
  3683  00A09F  20                 	db	32
  3684  00A0A0  4D                 	db	77
  3685  00A0A1  61                 	db	97
  3686  00A0A2  6E                 	db	110
  3687  00A0A3  75                 	db	117
  3688  00A0A4  61                 	db	97
  3689  00A0A5  6C                 	db	108
  3690  00A0A6  20                 	db	32
  3691  00A0A7  20                 	db	32
  3692  00A0A8  20                 	db	32
  3693  00A0A9  20                 	db	32
  3694  00A0AA  20                 	db	32
  3695  00A0AB  47                 	db	71
  3696  00A0AC  6F                 	db	111
  3697  00A0AD  32                 	db	50
  3698  00A0AE  5A                 	db	90
  3699  00A0AF  65                 	db	101
  3700  00A0B0  72                 	db	114
  3701  00A0B1  6F                 	db	111
  3702  00A0B2  20                 	db	32
  3703  00A0B3  20                 	db	32
  3704  00A0B4  20                 	db	32
  3705  00A0B5  20                 	db	32
  3706  00A0B6  20                 	db	32
  3707  00A0B7  20                 	db	32
  3708  00A0B8  20                 	db	32
  3709  00A0B9  20                 	db	32
  3710  00A0BA  20                 	db	32
  3711  00A0BB  20                 	db	32
  3712  00A0BC  20                 	db	32
  3713  00A0BD  20                 	db	32
  3714  00A0BE                     __end_of_dc_main:
  3715                           	opt stack 0
  3716  00A0BE                     _configDescriptor1:
  3717                           	opt stack 0
  3718  00A0BE  09                 	db	9
  3719  00A0BF  02                 	db	2
  3720  00A0C0  40                 	db	64
  3721  00A0C1  00                 	db	0
  3722  00A0C2  02                 	db	2
  3723  00A0C3  01                 	db	1
  3724  00A0C4  00                 	db	0
  3725  00A0C5  C0                 	db	192
  3726  00A0C6  32                 	db	50
  3727  00A0C7  09                 	db	9
  3728  00A0C8  04                 	db	4
  3729  00A0C9  00                 	db	0
  3730  00A0CA  00                 	db	0
  3731  00A0CB  02                 	db	2
  3732  00A0CC  03                 	db	3
  3733  00A0CD  00                 	db	0
  3734  00A0CE  00                 	db	0
  3735  00A0CF  00                 	db	0
  3736  00A0D0  09                 	db	9
  3737  00A0D1  21                 	db	33
  3738  00A0D2  11                 	db	17
  3739  00A0D3  01                 	db	1
  3740  00A0D4  00                 	db	0
  3741  00A0D5  01                 	db	1
  3742  00A0D6  22                 	db	34
  3743  00A0D7  1D                 	db	29
  3744  00A0D8  00                 	db	0
  3745  00A0D9  07                 	db	7
  3746  00A0DA  05                 	db	5
  3747  00A0DB  81                 	db	129
  3748  00A0DC  03                 	db	3
  3749  00A0DD  40                 	db	64
  3750  00A0DE  00                 	db	0
  3751  00A0DF  01                 	db	1
  3752  00A0E0  07                 	db	7
  3753  00A0E1  05                 	db	5
  3754  00A0E2  01                 	db	1
  3755  00A0E3  03                 	db	3
  3756  00A0E4  40                 	db	64
  3757  00A0E5  00                 	db	0
  3758  00A0E6  01                 	db	1
  3759  00A0E7  09                 	db	9
  3760  00A0E8  04                 	db	4
  3761  00A0E9  01                 	db	1
  3762  00A0EA  00                 	db	0
  3763  00A0EB  02                 	db	2
  3764  00A0EC  08                 	db	8
  3765  00A0ED  06                 	db	6
  3766  00A0EE  50                 	db	80
  3767  00A0EF  00                 	db	0
  3768  00A0F0  07                 	db	7
  3769  00A0F1  05                 	db	5
  3770  00A0F2  82                 	db	130
  3771  00A0F3  02                 	db	2
  3772  00A0F4  40                 	db	64
  3773  00A0F5  00                 	db	0
  3774  00A0F6  01                 	db	1
  3775  00A0F7  07                 	db	7
  3776  00A0F8  05                 	db	5
  3777  00A0F9  02                 	db	2
  3778  00A0FA  02                 	db	2
  3779  00A0FB  40                 	db	64
  3780  00A0FC  00                 	db	0
  3781  00A0FD  01                 	db	1
  3782  00A0FE                     __end_of_configDescriptor1:
  3783                           	opt stack 0
  3784  00A0FE                     _sd001:
  3785                           	opt stack 0
  3786  00A0FE  34                 	db	52
  3787  00A0FF  03                 	db	3
  3788  00A100  0053               	dw	83
  3789  00A102  006F               	dw	111
  3790  00A104  006C               	dw	108
  3791  00A106  0064               	dw	100
  3792  00A108  0065               	dw	101
  3793  00A10A  0072               	dw	114
  3794  00A10C  006E               	dw	110
  3795  00A10E  0065               	dw	101
  3796  00A110  0072               	dw	114
  3797  00A112  0064               	dw	100
  3798  00A114  002E               	dw	46
  3799  00A116  0063               	dw	99
  3800  00A118  006F               	dw	111
  3801  00A11A  006D               	dw	109
  3802  00A11C  0020               	dw	32
  3803  00A11E  0020               	dw	32
  3804  00A120  0020               	dw	32
  3805  00A122  0020               	dw	32
  3806  00A124  0020               	dw	32
  3807  00A126  0020               	dw	32
  3808  00A128  0020               	dw	32
  3809  00A12A  0020               	dw	32
  3810  00A12C  0020               	dw	32
  3811  00A12E  0020               	dw	32
  3812  00A130  0020               	dw	32
  3813  00A132                     __end_of_sd001:
  3814                           	opt stack 0
  3815  00A132                     _sd002:
  3816                           	opt stack 0
  3817  00A132  2E                 	db	46
  3818  00A133  03                 	db	3
  3819  00A134  0053               	dw	83
  3820  00A136  0074               	dw	116
  3821  00A138  0065               	dw	101
  3822  00A13A  0070               	dw	112
  3823  00A13C  0070               	dw	112
  3824  00A13E  0065               	dw	101
  3825  00A140  0072               	dw	114
  3826  00A142  004D               	dw	77
  3827  00A144  006F               	dw	111
  3828  00A146  0074               	dw	116
  3829  00A148  006F               	dw	111
  3830  00A14A  0072               	dw	114
  3831  00A14C  0043               	dw	67
  3832  00A14E  006F               	dw	111
  3833  00A150  006E               	dw	110
  3834  00A152  0074               	dw	116
  3835  00A154  0072               	dw	114
  3836  00A156  006F               	dw	111
  3837  00A158  006C               	dw	108
  3838  00A15A  006C               	dw	108
  3839  00A15C  0065               	dw	101
  3840  00A15E  0072               	dw	114
  3841  00A160                     __end_of_sd002:
  3842                           	opt stack 0
  3843  00A160                     _inq_resp:
  3844                           	opt stack 0
  3845  00A160  00                 	db	0
  3846  00A161  80                 	db	128
  3847  00A162  04                 	db	4
  3848  00A163  02                 	db	2
  3849  00A164  20                 	db	32
  3850  00A165  00                 	db	0
  3851  00A166  00                 	db	0
  3852  00A167  00                 	db	0
  3853  00A168  4D                 	db	77
  3854  00A169  69                 	db	105
  3855  00A16A  63                 	db	99
  3856  00A16B  72                 	db	114
  3857  00A16C  6F                 	db	111
  3858  00A16D  63                 	db	99
  3859  00A16E  68                 	db	104
  3860  00A16F  70                 	db	112
  3861  00A170  4D                 	db	77
  3862  00A171  61                 	db	97
  3863  00A172  73                 	db	115
  3864  00A173  73                 	db	115
  3865  00A174  20                 	db	32
  3866  00A175  53                 	db	83
  3867  00A176  74                 	db	116
  3868  00A177  6F                 	db	111
  3869  00A178  72                 	db	114
  3870  00A179  61                 	db	97
  3871  00A17A  67                 	db	103
  3872  00A17B  65                 	db	101
  3873  00A17C  20                 	db	32
  3874  00A17D  20                 	db	32
  3875  00A17E  20                 	db	32
  3876  00A17F  20                 	db	32
  3877  00A180  30                 	db	48
  3878  00A181  30                 	db	48
  3879  00A182  30                 	db	48
  3880  00A183  31                 	db	49
  3881  00A184                     __end_of_inq_resp:
  3882                           	opt stack 0
  3883  00A184                     _hid_rpt01:
  3884                           	opt stack 0
  3885  00A184  06                 	db	6
  3886  00A185  00                 	db	0
  3887  00A186  FF                 	db	255
  3888  00A187  09                 	db	9
  3889  00A188  01                 	db	1
  3890  00A189  A1                 	db	161
  3891  00A18A  01                 	db	1
  3892  00A18B  19                 	db	25
  3893  00A18C  01                 	db	1
  3894  00A18D  29                 	db	41
  3895  00A18E  40                 	db	64
  3896  00A18F  15                 	db	21
  3897  00A190  00                 	db	0
  3898  00A191  26                 	db	38
  3899  00A192  FF                 	db	255
  3900  00A193  00                 	db	0
  3901  00A194  75                 	db	117
  3902  00A195  08                 	db	8
  3903  00A196  95                 	db	149
  3904  00A197  40                 	db	64
  3905  00A198  81                 	db	129
  3906  00A199  00                 	db	0
  3907  00A19A  19                 	db	25
  3908  00A19B  01                 	db	1
  3909  00A19C  29                 	db	41
  3910  00A19D  40                 	db	64
  3911  00A19E  91                 	db	145
  3912  00A19F  00                 	db	0
  3913  00A1A0  C0                 	db	192
  3914  00A1A1                     __end_of_hid_rpt01:
  3915                           	opt stack 0
  3916  00A1A1                     _sd003:
  3917                           	opt stack 0
  3918  00A1A1  1A                 	db	26
  3919  00A1A2  03                 	db	3
  3920  00A1A3  0031               	dw	49
  3921  00A1A5  0032               	dw	50
  3922  00A1A7  0033               	dw	51
  3923  00A1A9  0034               	dw	52
  3924  00A1AB  0035               	dw	53
  3925  00A1AD  0036               	dw	54
  3926  00A1AF  0037               	dw	55
  3927  00A1B1  0038               	dw	56
  3928  00A1B3  0039               	dw	57
  3929  00A1B5  0030               	dw	48
  3930  00A1B7  0039               	dw	57
  3931  00A1B9  0039               	dw	57
  3932  00A1BB                     __end_of_sd003:
  3933                           	opt stack 0
  3934  00A1BB                     _overshoot_cost_in_steps_string:
  3935                           	opt stack 0
  3936  00A1BB  4F                 	db	79
  3937  00A1BC  56                 	db	86
  3938  00A1BD  45                 	db	69
  3939  00A1BE  52                 	db	82
  3940  00A1BF  53                 	db	83
  3941  00A1C0  48                 	db	72
  3942  00A1C1  4F                 	db	79
  3943  00A1C2  4F                 	db	79
  3944  00A1C3  54                 	db	84
  3945  00A1C4  5F                 	db	95
  3946  00A1C5  43                 	db	67
  3947  00A1C6  4F                 	db	79
  3948  00A1C7  53                 	db	83
  3949  00A1C8  54                 	db	84
  3950  00A1C9  5F                 	db	95
  3951  00A1CA  49                 	db	73
  3952  00A1CB  4E                 	db	78
  3953  00A1CC  5F                 	db	95
  3954  00A1CD  53                 	db	83
  3955  00A1CE  54                 	db	84
  3956  00A1CF  45                 	db	69
  3957  00A1D0  50                 	db	80
  3958  00A1D1  53                 	db	83
  3959  00A1D2  00                 	db	0
  3960  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3961                           	opt stack 0
  3962  00A1D3                     _maximum_speed_manual_string:
  3963                           	opt stack 0
  3964  00A1D3  4D                 	db	77
  3965  00A1D4  41                 	db	65
  3966  00A1D5  58                 	db	88
  3967  00A1D6  49                 	db	73
  3968  00A1D7  4D                 	db	77
  3969  00A1D8  55                 	db	85
  3970  00A1D9  4D                 	db	77
  3971  00A1DA  5F                 	db	95
  3972  00A1DB  53                 	db	83
  3973  00A1DC  50                 	db	80
  3974  00A1DD  45                 	db	69
  3975  00A1DE  45                 	db	69
  3976  00A1DF  44                 	db	68
  3977  00A1E0  5F                 	db	95
  3978  00A1E1  4D                 	db	77
  3979  00A1E2  41                 	db	65
  3980  00A1E3  4E                 	db	78
  3981  00A1E4  55                 	db	85
  3982  00A1E5  41                 	db	65
  3983  00A1E6  4C                 	db	76
  3984  00A1E7  00                 	db	0
  3985  00A1E8                     __end_of_maximum_speed_manual_string:
  3986                           	opt stack 0
  3987  00A1E8                     _initial_speed_manual_string:
  3988                           	opt stack 0
  3989  00A1E8  49                 	db	73
  3990  00A1E9  4E                 	db	78
  3991  00A1EA  49                 	db	73
  3992  00A1EB  54                 	db	84
  3993  00A1EC  49                 	db	73
  3994  00A1ED  41                 	db	65
  3995  00A1EE  4C                 	db	76
  3996  00A1EF  5F                 	db	95
  3997  00A1F0  53                 	db	83
  3998  00A1F1  50                 	db	80
  3999  00A1F2  45                 	db	69
  4000  00A1F3  45                 	db	69
  4001  00A1F4  44                 	db	68
  4002  00A1F5  5F                 	db	95
  4003  00A1F6  4D                 	db	77
  4004  00A1F7  41                 	db	65
  4005  00A1F8  4E                 	db	78
  4006  00A1F9  55                 	db	85
  4007  00A1FA  41                 	db	65
  4008  00A1FB  4C                 	db	76
  4009  00A1FC  00                 	db	0
  4010  00A1FD                     __end_of_initial_speed_manual_string:
  4011                           	opt stack 0
  4012  00A1FD                     _full_circle_in_steps_string:
  4013                           	opt stack 0
  4014  00A1FD  46                 	db	70
  4015  00A1FE  55                 	db	85
  4016  00A1FF  4C                 	db	76
  4017  00A200  4C                 	db	76
  4018  00A201  5F                 	db	95
  4019  00A202  43                 	db	67
  4020  00A203  49                 	db	73
  4021  00A204  52                 	db	82
  4022  00A205  43                 	db	67
  4023  00A206  4C                 	db	76
  4024  00A207  45                 	db	69
  4025  00A208  5F                 	db	95
  4026  00A209  49                 	db	73
  4027  00A20A  4E                 	db	78
  4028  00A20B  5F                 	db	95
  4029  00A20C  53                 	db	83
  4030  00A20D  54                 	db	84
  4031  00A20E  45                 	db	69
  4032  00A20F  50                 	db	80
  4033  00A210  53                 	db	83
  4034  00A211  00                 	db	0
  4035  00A212                     __end_of_full_circle_in_steps_string:
  4036                           	opt stack 0
  4037  00A212                     _overshoot_in_steps_string:
  4038                           	opt stack 0
  4039  00A212  4F                 	db	79
  4040  00A213  56                 	db	86
  4041  00A214  45                 	db	69
  4042  00A215  52                 	db	82
  4043  00A216  53                 	db	83
  4044  00A217  48                 	db	72
  4045  00A218  4F                 	db	79
  4046  00A219  4F                 	db	79
  4047  00A21A  54                 	db	84
  4048  00A21B  5F                 	db	95
  4049  00A21C  49                 	db	73
  4050  00A21D  4E                 	db	78
  4051  00A21E  5F                 	db	95
  4052  00A21F  53                 	db	83
  4053  00A220  54                 	db	84
  4054  00A221  45                 	db	69
  4055  00A222  50                 	db	80
  4056  00A223  53                 	db	83
  4057  00A224  00                 	db	0
  4058  00A225                     __end_of_overshoot_in_steps_string:
  4059                           	opt stack 0
  4060  00A225                     _maximum_speed_arc_string:
  4061                           	opt stack 0
  4062  00A225  4D                 	db	77
  4063  00A226  41                 	db	65
  4064  00A227  58                 	db	88
  4065  00A228  49                 	db	73
  4066  00A229  4D                 	db	77
  4067  00A22A  55                 	db	85
  4068  00A22B  4D                 	db	77
  4069  00A22C  5F                 	db	95
  4070  00A22D  53                 	db	83
  4071  00A22E  50                 	db	80
  4072  00A22F  45                 	db	69
  4073  00A230  45                 	db	69
  4074  00A231  44                 	db	68
  4075  00A232  5F                 	db	95
  4076  00A233  41                 	db	65
  4077  00A234  52                 	db	82
  4078  00A235  43                 	db	67
  4079  00A236  00                 	db	0
  4080  00A237                     __end_of_maximum_speed_arc_string:
  4081                           	opt stack 0
  4082  00A237                     _initial_speed_arc_string:
  4083                           	opt stack 0
  4084  00A237  49                 	db	73
  4085  00A238  4E                 	db	78
  4086  00A239  49                 	db	73
  4087  00A23A  54                 	db	84
  4088  00A23B  49                 	db	73
  4089  00A23C  41                 	db	65
  4090  00A23D  4C                 	db	76
  4091  00A23E  5F                 	db	95
  4092  00A23F  53                 	db	83
  4093  00A240  50                 	db	80
  4094  00A241  45                 	db	69
  4095  00A242  45                 	db	69
  4096  00A243  44                 	db	68
  4097  00A244  5F                 	db	95
  4098  00A245  41                 	db	65
  4099  00A246  52                 	db	82
  4100  00A247  43                 	db	67
  4101  00A248  00                 	db	0
  4102  00A249                     __end_of_initial_speed_arc_string:
  4103                           	opt stack 0
  4104  00A249                     _inverse_direction_string:
  4105                           	opt stack 0
  4106  00A249  49                 	db	73
  4107  00A24A  4E                 	db	78
  4108  00A24B  56                 	db	86
  4109  00A24C  45                 	db	69
  4110  00A24D  52                 	db	82
  4111  00A24E  53                 	db	83
  4112  00A24F  45                 	db	69
  4113  00A250  5F                 	db	95
  4114  00A251  44                 	db	68
  4115  00A252  49                 	db	73
  4116  00A253  52                 	db	82
  4117  00A254  45                 	db	69
  4118  00A255  43                 	db	67
  4119  00A256  54                 	db	84
  4120  00A257  49                 	db	73
  4121  00A258  4F                 	db	79
  4122  00A259  4E                 	db	78
  4123  00A25A  00                 	db	0
  4124  00A25B                     __end_of_inverse_direction_string:
  4125                           	opt stack 0
  4126  00A25B                     _device_dsc:
  4127                           	opt stack 0
  4128  00A25B  12                 	db	18
  4129  00A25C  01                 	db	1
  4130  00A25D  0200               	dw	512
  4131  00A25F  00                 	db	0
  4132  00A260  00                 	db	0
  4133  00A261  00                 	db	0
  4134  00A262  08                 	db	8
  4135  00A263  04D8               	dw	1240
  4136  00A265  EDCF               	dw	60879
  4137  00A267  0100               	dw	256
  4138  00A269  01                 	db	1
  4139  00A26A  02                 	db	2
  4140  00A26B  00                 	db	0
  4141  00A26C  01                 	db	1
  4142  00A26D                     __end_of_device_dsc:
  4143                           	opt stack 0
  4144  00A26D                     _use_ccw_limit_string:
  4145                           	opt stack 0
  4146  00A26D  55                 	db	85
  4147  00A26E  53                 	db	83
  4148  00A26F  45                 	db	69
  4149  00A270  5F                 	db	95
  4150  00A271  43                 	db	67
  4151  00A272  43                 	db	67
  4152  00A273  57                 	db	87
  4153  00A274  5F                 	db	95
  4154  00A275  4C                 	db	76
  4155  00A276  49                 	db	73
  4156  00A277  4D                 	db	77
  4157  00A278  49                 	db	73
  4158  00A279  54                 	db	84
  4159  00A27A  00                 	db	0
  4160  00A27B                     __end_of_use_ccw_limit_string:
  4161                           	opt stack 0
  4162  00A27B                     _beep_duration_string:
  4163                           	opt stack 0
  4164  00A27B  42                 	db	66
  4165  00A27C  45                 	db	69
  4166  00A27D  45                 	db	69
  4167  00A27E  50                 	db	80
  4168  00A27F  5F                 	db	95
  4169  00A280  44                 	db	68
  4170  00A281  55                 	db	85
  4171  00A282  52                 	db	82
  4172  00A283  41                 	db	65
  4173  00A284  54                 	db	84
  4174  00A285  49                 	db	73
  4175  00A286  4F                 	db	79
  4176  00A287  4E                 	db	78
  4177  00A288  00                 	db	0
  4178  00A289                     __end_of_beep_duration_string:
  4179                           	opt stack 0
  4180  00A289                     _maximum_speed_string:
  4181                           	opt stack 0
  4182  00A289  4D                 	db	77
  4183  00A28A  41                 	db	65
  4184  00A28B  58                 	db	88
  4185  00A28C  49                 	db	73
  4186  00A28D  4D                 	db	77
  4187  00A28E  55                 	db	85
  4188  00A28F  4D                 	db	77
  4189  00A290  5F                 	db	95
  4190  00A291  53                 	db	83
  4191  00A292  50                 	db	80
  4192  00A293  45                 	db	69
  4193  00A294  45                 	db	69
  4194  00A295  44                 	db	68
  4195  00A296  00                 	db	0
  4196  00A297                     __end_of_maximum_speed_string:
  4197                           	opt stack 0
  4198  00A297                     _minimum_speed_string:
  4199                           	opt stack 0
  4200  00A297  4D                 	db	77
  4201  00A298  49                 	db	73
  4202  00A299  4E                 	db	78
  4203  00A29A  49                 	db	73
  4204  00A29B  4D                 	db	77
  4205  00A29C  55                 	db	85
  4206  00A29D  4D                 	db	77
  4207  00A29E  5F                 	db	95
  4208  00A29F  53                 	db	83
  4209  00A2A0  50                 	db	80
  4210  00A2A1  45                 	db	69
  4211  00A2A2  45                 	db	69
  4212  00A2A3  44                 	db	68
  4213  00A2A4  00                 	db	0
  4214  00A2A5                     __end_of_minimum_speed_string:
  4215                           	opt stack 0
  4216  00A2A5                     _use_cw_limit_string:
  4217                           	opt stack 0
  4218  00A2A5  55                 	db	85
  4219  00A2A6  53                 	db	83
  4220  00A2A7  45                 	db	69
  4221  00A2A8  5F                 	db	95
  4222  00A2A9  43                 	db	67
  4223  00A2AA  57                 	db	87
  4224  00A2AB  5F                 	db	95
  4225  00A2AC  4C                 	db	76
  4226  00A2AD  49                 	db	73
  4227  00A2AE  4D                 	db	77
  4228  00A2AF  49                 	db	73
  4229  00A2B0  54                 	db	84
  4230  00A2B1  00                 	db	0
  4231  00A2B2                     __end_of_use_cw_limit_string:
  4232                           	opt stack 0
  4233  00A2B2                     _ccw_limit_string:
  4234                           	opt stack 0
  4235  00A2B2  43                 	db	67
  4236  00A2B3  43                 	db	67
  4237  00A2B4  57                 	db	87
  4238  00A2B5  5F                 	db	95
  4239  00A2B6  4C                 	db	76
  4240  00A2B7  49                 	db	73
  4241  00A2B8  4D                 	db	77
  4242  00A2B9  49                 	db	73
  4243  00A2BA  54                 	db	84
  4244  00A2BB  00                 	db	0
  4245  00A2BC                     __end_of_ccw_limit_string:
  4246                           	opt stack 0
  4247  00A2BC                     _cw_limit_string:
  4248                           	opt stack 0
  4249  00A2BC  43                 	db	67
  4250  00A2BD  57                 	db	87
  4251  00A2BE  5F                 	db	95
  4252  00A2BF  4C                 	db	76
  4253  00A2C0  49                 	db	73
  4254  00A2C1  4D                 	db	77
  4255  00A2C2  49                 	db	73
  4256  00A2C3  54                 	db	84
  4257  00A2C4  00                 	db	0
  4258  00A2C5                     __end_of_cw_limit_string:
  4259                           	opt stack 0
  4260  00A2C5                     _bit_pattern_ae:
  4261                           	opt stack 0
  4262  00A2C5  0A                 	db	10
  4263  00A2C6  00                 	db	0
  4264  00A2C7  0E                 	db	14
  4265  00A2C8  01                 	db	1
  4266  00A2C9  0F                 	db	15
  4267  00A2CA  11                 	db	17
  4268  00A2CB  0F                 	db	15
  4269  00A2CC  00                 	db	0
  4270  00A2CD                     __end_of_bit_pattern_ae:
  4271                           	opt stack 0
  4272  00A2CD                     _bit_pattern_degree:
  4273                           	opt stack 0
  4274  00A2CD  18                 	db	24
  4275  00A2CE  18                 	db	24
  4276  00A2CF  00                 	db	0
  4277  00A2D0  00                 	db	0
  4278  00A2D1  00                 	db	0
  4279  00A2D2  00                 	db	0
  4280  00A2D3  00                 	db	0
  4281  00A2D4  00                 	db	0
  4282  00A2D5                     __end_of_bit_pattern_degree:
  4283                           	opt stack 0
  4284  00A2D5                     _bit_pattern_verticalbar:
  4285                           	opt stack 0
  4286  00A2D5  04                 	db	4
  4287  00A2D6  04                 	db	4
  4288  00A2D7  04                 	db	4
  4289  00A2D8  04                 	db	4
  4290  00A2D9  04                 	db	4
  4291  00A2DA  04                 	db	4
  4292  00A2DB  04                 	db	4
  4293  00A2DC  04                 	db	4
  4294  00A2DD                     __end_of_bit_pattern_verticalbar:
  4295                           	opt stack 0
  4296  00A2DD                     _flash_command_pagesize_528:
  4297                           	opt stack 0
  4298  00A2DD  3D                 	db	61
  4299  00A2DE  2A                 	db	42
  4300  00A2DF  80                 	db	128
  4301  00A2E0  A7                 	db	167
  4302  00A2E1                     __end_of_flash_command_pagesize_528:
  4303                           	opt stack 0
  4304  00A2E1                     _flash_command_pagesize_512:
  4305                           	opt stack 0
  4306  00A2E1  3D                 	db	61
  4307  00A2E2  2A                 	db	42
  4308  00A2E3  80                 	db	128
  4309  00A2E4  A6                 	db	166
  4310  00A2E5                     __end_of_flash_command_pagesize_512:
  4311                           	opt stack 0
  4312  00A2E5                     _sd000:
  4313                           	opt stack 0
  4314  00A2E5  04                 	db	4
  4315  00A2E6  03                 	db	3
  4316  00A2E7  0409               	dw	1033
  4317  00A2E9                     __end_of_sd000:
  4318                           	opt stack 0
  4319  0000                     _RPINR22	set	3837
  4320  0000                     _RPOR23	set	3799
  4321  0000                     _RPOR21	set	3797
  4322  0000                     _RPINR21	set	3836
  4323  0000                     _RPOR4	set	3780
  4324  0000                     _PPSCONbits	set	3775
  4325  0000                     _CCPTMRS0bits	set	3922
  4326  0000                     _ANCON0bits	set	3912
  4327  0000                     _ANCON1bits	set	3913
  4328  0000                     _UEP0bits	set	3878
  4329  0000                     _UIEbits	set	3894
  4330  0000                     _UADDR	set	3896
  4331  0000                     _UIE	set	3894
  4332  0000                     _UEIE	set	3895
  4333  0000                     _UCFG	set	3897
  4334  0000                     _UEP1	set	3879
  4335  0000                     _UEP0	set	3878
  4336  0000                     _ADRESL	set	4035
  4337  0000                     _ADRESH	set	4036
  4338  0000                     _ADCON1bits	set	4033
  4339  0000                     _ADCON0bits	set	4034
  4340  0000                     _PORTA	set	3968
  4341  0000                     _PORTE	set	3972
  4342  0000                     _TMR2	set	4044
  4343  0000                     _PIE1bits	set	3997
  4344  0000                     _CCPR1L	set	4027
  4345  0000                     _PR2	set	4043
  4346  0000                     _T2CONbits	set	4042
  4347  0000                     _CCP1CONbits	set	4026
  4348  0000                     _RXADDRL	set	3945
  4349  0000                     _RXADDRH	set	3944
  4350  0000                     _DMABCL	set	3943
  4351  0000                     _DMABCH	set	3942
  4352  0000                     _TXADDRL	set	3947
  4353  0000                     _TXADDRH	set	3946
  4354  0000                     _DMACON2bits	set	3974
  4355  0000                     _DMACON1bits	set	3976
  4356  0000                     _SSP2CON1bits	set	3954
  4357  0000                     _SSP2STATbits	set	3955
  4358  0000                     _PORTDbits	set	3971
  4359  0000                     _PORTEbits	set	3972
  4360  0000                     _SSP1BUF	set	4041
  4361  0000                     _SSP1CON2bits	set	4037
  4362  0000                     _SSP1CON1bits	set	4038
  4363  0000                     _SSP1ADD	set	4040
  4364  0000                     _SSP1STATbits	set	4039
  4365  0000                     _PORTAbits	set	3968
  4366  0000                     _T0CONbits	set	4053
  4367  0000                     _TRISEbits	set	3990
  4368  0000                     _EECON2	set	4007
  4369  0000                     _LATBbits	set	3978
  4370  0000                     _LATAbits	set	3977
  4371  0000                     _TRISAbits	set	3986
  4372  0000                     _LATCbits	set	3979
  4373  0000                     _TRISCbits	set	3988
  4374  0000                     _TRISBbits	set	3987
  4375  0000                     _LATDbits	set	3980
  4376  0000                     _TRISDbits	set	3989
  4377  0000                     _TMR0L	set	4054
  4378  0000                     _TMR0H	set	4055
  4379  0000                     _PIR1bits	set	3998
  4380  0000                     _OSCCON	set	4051
  4381  0000                     _OSCTUNEbits	set	3995
  4382  0000                     _INTCONbits	set	4082
  4383  0000                     _IPR2bits	set	4002
  4384  0000                     _RCONbits	set	4048
  4385  0000                     _UCON	set	3941
  4386  0000                     _USTAT	set	3940
  4387  0000                     _PIR2bits	set	4001
  4388  0000                     _UIRbits	set	3938
  4389  0000                     _UCONbits	set	3941
  4390  0000                     _UIR	set	3938
  4391  0000                     _UEIR	set	3939
  4392  0000                     _PIE2bits	set	4000
  4393  00A2E9                     STR_18:
  4394                           
  4395                           ; BSR set to: 1
  4396  00A2E9  68                 	db	104	;'h'
  4397  00A2EA  65                 	db	101	;'e'
  4398  00A2EB  6C                 	db	108	;'l'
  4399  00A2EC  6C                 	db	108	;'l'
  4400  00A2ED  6F                 	db	111	;'o'
  4401  00A2EE  20                 	db	32
  4402  00A2EF  77                 	db	119	;'w'
  4403  00A2F0  6F                 	db	111	;'o'
  4404  00A2F1  72                 	db	114	;'r'
  4405  00A2F2  6C                 	db	108	;'l'
  4406  00A2F3  64                 	db	100	;'d'
  4407  00A2F4  21                 	db	33
  4408  00A2F5  00                 	db	0
  4409  00A2F6                     STR_15:
  4410                           
  4411                           ; BSR set to: 1
  4412  00A2F6  53                 	db	83	;'S'
  4413  00A2F7  74                 	db	116	;'t'
  4414  00A2F8  65                 	db	101	;'e'
  4415  00A2F9  70                 	db	112	;'p'
  4416  00A2FA  70                 	db	112	;'p'
  4417  00A2FB  65                 	db	101	;'e'
  4418  00A2FC  72                 	db	114	;'r'
  4419  00A2FD  43                 	db	67	;'C'
  4420  00A2FE  74                 	db	116	;'t'
  4421  00A2FF  72                 	db	114	;'r'
  4422  00A300  6C                 	db	108	;'l'
  4423  00A301  00                 	db	0
  4424  00A302                     STR_16:
  4425                           
  4426                           ; BSR set to: 1
  4427  00A302  46                 	db	70	;'F'
  4428  00A303  49                 	db	73	;'I'
  4429  00A304  4C                 	db	76	;'L'
  4430  00A305  45                 	db	69	;'E'
  4431  00A306  20                 	db	32
  4432  00A307  20                 	db	32
  4433  00A308  20                 	db	32
  4434  00A309  20                 	db	32
  4435  00A30A  00                 	db	0
  4436  00A30B                     STR_7:
  4437                           
  4438                           ; BSR set to: 1
  4439  00A30B  4D                 	db	77	;'M'
  4440  00A30C  53                 	db	83	;'S'
  4441  00A30D  44                 	db	68	;'D'
  4442  00A30E  4F                 	db	79	;'O'
  4443  00A30F  53                 	db	83	;'S'
  4444  00A310  35                 	db	53	;'5'
  4445  00A311  2E                 	db	46
  4446  00A312  30                 	db	48	;'0'
  4447  00A313  00                 	db	0
  4448  00A314                     STR_1:
  4449                           
  4450                           ; BSR set to: 1
  4451  00A314  20                 	db	32
  4452  00A315  20                 	db	32
  4453  00A316  20                 	db	32
  4454  00A317  20                 	db	32
  4455  00A318  20                 	db	32
  4456  00A319  20                 	db	32
  4457  00A31A  20                 	db	32
  4458  00A31B  20                 	db	32
  4459  00A31C  00                 	db	0
  4460  00A31D                     STR_2:
  4461                           
  4462                           ; BSR set to: 1
  4463  00A31D  43                 	db	67	;'C'
  4464  00A31E  61                 	db	97	;'a'
  4465  00A31F  6E                 	db	110	;'n'
  4466  00A320  63                 	db	99	;'c'
  4467  00A321  65                 	db	101	;'e'
  4468  00A322  6C                 	db	108	;'l'
  4469  00A323  00                 	db	0
  4470  00A324                     STR_6:
  4471                           
  4472                           ; BSR set to: 1
  4473  00A324  53                 	db	83	;'S'
  4474  00A325  74                 	db	116	;'t'
  4475  00A326  6F                 	db	111	;'o'
  4476  00A327  70                 	db	112	;'p'
  4477  00A328  20                 	db	32
  4478  00A329  00                 	db	0
  4479  00A32A                     STR_17:
  4480                           
  4481                           ; BSR set to: 1
  4482  00A32A  54                 	db	84	;'T'
  4483  00A32B  58                 	db	88	;'X'
  4484  00A32C  54                 	db	84	;'T'
  4485  00A32D  00                 	db	0
  4486  0000                     
  4487                           ; #config settings
  4488  00A32E  00                 	db	0	; dummy byte at the end
  4489  0000                     
  4490                           	psect	cinit
  4491  013526                     __pcinit:
  4492                           	opt stack 0
  4493  013526                     start_initialization:
  4494                           	opt stack 0
  4495  013526                     __initialization:
  4496                           	opt stack 0
  4497                           
  4498                           ; Initialize objects allocated to BANK4 (80 bytes)
  4499                           ; load TBLPTR registers with __pidataBANK4
  4500  013526  0E4C               	movlw	low __pidataBANK4
  4501  013528  6EF6               	movwf	tblptrl,c
  4502  01352A  0E4B               	movlw	high __pidataBANK4
  4503  01352C  6EF7               	movwf	tblptrh,c
  4504  01352E  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4505  013530  6EF8               	movwf	tblptru,c
  4506  013532  EE04  F000         	lfsr	0,__pdataBANK4
  4507  013536  EE10 F050          	lfsr	1,80
  4508  01353A                     copy_data0:
  4509  01353A  0009               	tblrd		*+
  4510  01353C  CFF5 FFEE          	movff	tablat,postinc0
  4511  013540  50E5               	movf	postdec1,w,c
  4512  013542  50E1               	movf	fsr1l,w,c
  4513  013544  E1FA               	bnz	copy_data0
  4514                           
  4515                           ; Initialize objects allocated to BANK2 (77 bytes)
  4516                           ; load TBLPTR registers with __pidataBANK2
  4517  013546  0EDC               	movlw	low __pidataBANK2
  4518  013548  6EF6               	movwf	tblptrl,c
  4519  01354A  0E4C               	movlw	high __pidataBANK2
  4520  01354C  6EF7               	movwf	tblptrh,c
  4521  01354E  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4522  013550  6EF8               	movwf	tblptru,c
  4523  013552  EE02  F089         	lfsr	0,__pdataBANK2
  4524  013556  EE10 F04D          	lfsr	1,77
  4525  01355A                     copy_data1:
  4526  01355A  0009               	tblrd		*+
  4527  01355C  CFF5 FFEE          	movff	tablat,postinc0
  4528  013560  50E5               	movf	postdec1,w,c
  4529  013562  50E1               	movf	fsr1l,w,c
  4530  013564  E1FA               	bnz	copy_data1
  4531                           
  4532                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4533  013566  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4534  01356A  EE14 F000          	lfsr	1,1024
  4535  01356E                     clear_0:
  4536  01356E  6AEE               	clrf	postinc0,c
  4537  013570  50E5               	movf	postdec1,w,c
  4538  013572  50E1               	movf	fsr1l,w,c
  4539  013574  E1FC               	bnz	clear_0
  4540  013576  50E2               	movf	fsr1h,w,c
  4541  013578  E1FA               	bnz	clear_0
  4542                           
  4543                           ; Clear objects allocated to BANK3 (184 bytes)
  4544  01357A  EE03  F000         	lfsr	0,__pbssBANK3
  4545  01357E  0EB8               	movlw	184
  4546  013580                     clear_1:
  4547  013580  6AEE               	clrf	postinc0,c
  4548  013582  06E8               	decf	wreg,f,c
  4549  013584  E1FD               	bnz	clear_1
  4550                           
  4551                           ; Clear objects allocated to BANK2 (137 bytes)
  4552  013586  EE02  F000         	lfsr	0,__pbssBANK2
  4553  01358A  0E89               	movlw	137
  4554  01358C                     clear_2:
  4555  01358C  6AEE               	clrf	postinc0,c
  4556  01358E  06E8               	decf	wreg,f,c
  4557  013590  E1FD               	bnz	clear_2
  4558                           
  4559                           ; Clear objects allocated to BANK1 (195 bytes)
  4560  013592  EE01  F000         	lfsr	0,__pbssBANK1
  4561  013596  0EC3               	movlw	195
  4562  013598                     clear_3:
  4563  013598  6AEE               	clrf	postinc0,c
  4564  01359A  06E8               	decf	wreg,f,c
  4565  01359C  E1FD               	bnz	clear_3
  4566                           
  4567                           ; Clear objects allocated to BANK0 (2 bytes)
  4568  01359E  0100               	movlb	0
  4569  0135A0  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4570  0135A2  6BFE               	clrf	__pbssBANK0& (0+255),b
  4571                           
  4572                           ; Clear objects allocated to COMRAM (13 bytes)
  4573  0135A4  EE00  F052         	lfsr	0,__pbssCOMRAM
  4574  0135A8  0E0D               	movlw	13
  4575  0135AA                     clear_4:
  4576  0135AA  6AEE               	clrf	postinc0,c
  4577  0135AC  06E8               	decf	wreg,f,c
  4578  0135AE  E1FD               	bnz	clear_4
  4579  0135B0                     end_of_initialization:
  4580                           	opt stack 0
  4581  0135B0                     __end_of__initialization:
  4582                           	opt stack 0
  4583  0135B0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4584  0135B2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4585  0135B4  0100               	movlb	0
  4586  0135B6  EF01  F09C         	goto	_main	;jump to C main() function
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           
  4597                           	psect	bssCOMRAM
  4598  000052                     __pbssCOMRAM:
  4599                           	opt stack 0
  4600  000052                     _inPipes:
  4601                           	opt stack 0
  4602  000052                     	ds	6
  4603  000058                     _motor_current_stepcount:
  4604                           	opt stack 0
  4605  000058                     	ds	4
  4606  00005C                     _pBDTEntryEP0OutNext:
  4607                           	opt stack 0
  4608  00005C                     	ds	2
  4609  00005E                     _USBDeviceState:
  4610                           	opt stack 0
  4611  00005E                     	ds	1
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           postinc0	equ	0xFEE
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           
  4622                           	psect	bssBANK0
  4623  0000FE                     __pbssBANK0:
  4624                           	opt stack 0
  4625  0000FE                     _motor_current_speed:
  4626                           	opt stack 0
  4627  0000FE                     	ds	2
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           postdec1	equ	0xFE5
  4635                           fsr1h	equ	0xFE2
  4636                           fsr1l	equ	0xFE1
  4637                           
  4638                           	psect	bssBANK1
  4639  000100                     __pbssBANK1:
  4640                           	opt stack 0
  4641  000100                     _gblSenseData:
  4642                           	opt stack 0
  4643  000100                     	ds	18
  4644  000112                     _outPipes:
  4645                           	opt stack 0
  4646  000112                     	ds	9
  4647  00011B                     _pBDTEntryIn:
  4648                           	opt stack 0
  4649  00011B                     	ds	6
  4650  000121                     _pBDTEntryOut:
  4651                           	opt stack 0
  4652  000121                     	ds	6
  4653  000127                     _motor_final_stepcount:
  4654                           	opt stack 0
  4655  000127                     	ds	4
  4656  00012B                     _LBA:
  4657                           	opt stack 0
  4658  00012B                     	ds	4
  4659  00012F                     _USB1msTickCount:
  4660                           	opt stack 0
  4661  00012F                     	ds	4
  4662  000133                     _config_external:
  4663                           	opt stack 0
  4664  000133                     	ds	3
  4665  000136                     _config_internal:
  4666                           	opt stack 0
  4667  000136                     	ds	3
  4668  000139                     _ep_data_out:
  4669                           	opt stack 0
  4670  000139                     	ds	3
  4671  00013C                     _ep_data_in:
  4672                           	opt stack 0
  4673  00013C                     	ds	3
  4674  00013F                     _motor_maximum_speed:
  4675                           	opt stack 0
  4676  00013F                     	ds	2
  4677  000141                     _USBInHandle:
  4678                           	opt stack 0
  4679  000141                     	ds	2
  4680  000143                     _USBOutHandle:
  4681                           	opt stack 0
  4682  000143                     	ds	2
  4683  000145                     _TransferLength:
  4684                           	opt stack 0
  4685  000145                     	ds	2
  4686  000147                     _gblMediaPresent:
  4687                           	opt stack 0
  4688  000147                     	ds	2
  4689  000149                     _USBMSDInHandle:
  4690                           	opt stack 0
  4691  000149                     	ds	2
  4692  00014B                     _USBMSDOutHandle:
  4693                           	opt stack 0
  4694  00014B                     	ds	2
  4695  00014D                     _ptrNextData:
  4696                           	opt stack 0
  4697  00014D                     	ds	2
  4698  00014F                     _pDst:
  4699                           	opt stack 0
  4700  00014F                     	ds	2
  4701  000151                     _pBDTEntryEP0OutCurrent:
  4702                           	opt stack 0
  4703  000151                     	ds	2
  4704  000153                     _enc2:
  4705                           	opt stack 0
  4706  000153                     	ds	1
  4707  000154                     _enc1:
  4708                           	opt stack 0
  4709  000154                     	ds	1
  4710  000155                     _motor_direction:
  4711                           	opt stack 0
  4712  000155                     	ds	1
  4713  000156                     _motor_mode:
  4714                           	opt stack 0
  4715  000156                     	ds	1
  4716  000157                     _motor_cue_write_index:
  4717                           	opt stack 0
  4718  000157                     	ds	1
  4719  000158                     _motor_cue_read_index:
  4720                           	opt stack 0
  4721  000158                     	ds	1
  4722  000159                     _active_configuration:
  4723                           	opt stack 0
  4724  000159                     	ds	1
  4725  00015A                     _power_state:
  4726                           	opt stack 0
  4727  00015A                     	ds	1
  4728  00015B                     _MSDCBWValid:
  4729                           	opt stack 0
  4730  00015B                     	ds	1
  4731  00015C                     _MSDHostNoData:
  4732                           	opt stack 0
  4733  00015C                     	ds	1
  4734  00015D                     _SoftDetach:
  4735                           	opt stack 0
  4736  00015D                     	ds	1
  4737  00015E                     _gblCBWLength:
  4738                           	opt stack 0
  4739  00015E                     	ds	1
  4740  00015F                     _MSDRetryAttempt:
  4741                           	opt stack 0
  4742  00015F                     	ds	1
  4743  000160                     _MSDWriteState:
  4744                           	opt stack 0
  4745  000160                     	ds	1
  4746  000161                     _MSDReadState:
  4747                           	opt stack 0
  4748  000161                     	ds	1
  4749  000162                     _MSDCommandState:
  4750                           	opt stack 0
  4751  000162                     	ds	1
  4752  000163                     _MSD_State:
  4753                           	opt stack 0
  4754  000163                     	ds	1
  4755  000164                     _USBTicksSinceSuspendEnd:
  4756                           	opt stack 0
  4757  000164                     	ds	1
  4758  000165                     _USBDeferOUTDataStagePackets:
  4759                           	opt stack 0
  4760  000165                     	ds	1
  4761  000166                     _USBDeferINDataStagePackets:
  4762                           	opt stack 0
  4763  000166                     	ds	1
  4764  000167                     _USBStatusStageEnabledFlag2:
  4765                           	opt stack 0
  4766  000167                     	ds	1
  4767  000168                     _USBStatusStageEnabledFlag1:
  4768                           	opt stack 0
  4769  000168                     	ds	1
  4770  000169                     _USBDeferStatusStagePacket:
  4771                           	opt stack 0
  4772  000169                     	ds	1
  4773  00016A                     _USBStatusStageTimeoutCounter:
  4774                           	opt stack 0
  4775  00016A                     	ds	1
  4776  00016B                     _BothEP0OutUOWNsSet:
  4777                           	opt stack 0
  4778  00016B                     	ds	1
  4779  00016C                     _endpoint_number:
  4780                           	opt stack 0
  4781  00016C                     	ds	1
  4782  00016D                     _USBBusIsSuspended:
  4783                           	opt stack 0
  4784  00016D                     	ds	1
  4785  00016E                     _RemoteWakeup:
  4786                           	opt stack 0
  4787  00016E                     	ds	1
  4788  00016F                     _controlTransferState:
  4789                           	opt stack 0
  4790  00016F                     	ds	1
  4791  000170                     _shortPacketStatus:
  4792                           	opt stack 0
  4793  000170                     	ds	1
  4794  000171                     _os:
  4795                           	opt stack 0
  4796  000171                     	ds	48
  4797  0001A1                     _config:
  4798                           	opt stack 0
  4799  0001A1                     	ds	28
  4800  0001BD                     _USBAlternateInterface:
  4801                           	opt stack 0
  4802  0001BD                     	ds	2
  4803  0001BF                     _active_protocol:
  4804                           	opt stack 0
  4805  0001BF                     	ds	1
  4806  0001C0                     _idle_rate:
  4807                           	opt stack 0
  4808  0001C0                     	ds	1
  4809  0001C1                     _USTATcopy:
  4810                           	opt stack 0
  4811  0001C1                     	ds	1
  4812  0001C2                     _USBActiveConfiguration:
  4813                           	opt stack 0
  4814  0001C2                     	ds	1
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           postdec1	equ	0xFE5
  4822                           fsr1h	equ	0xFE2
  4823                           fsr1l	equ	0xFE1
  4824                           
  4825                           	psect	bssBANK2
  4826  000200                     __pbssBANK2:
  4827                           	opt stack 0
  4828  000200                     _gblCBW:
  4829                           	opt stack 0
  4830  000200                     	ds	31
  4831  00021F                     _params:
  4832                           	opt stack 0
  4833  00021F                     	ds	7
  4834  000226                     _motor_next_speed_check:
  4835                           	opt stack 0
  4836  000226                     	ds	4
  4837  00022A                     _gblBLKLen:
  4838                           	opt stack 0
  4839  00022A                     	ds	4
  4840  00022E                     _gblNumBLKS:
  4841                           	opt stack 0
  4842  00022E                     	ds	4
  4843  000232                     _MSBBufferIndex:
  4844                           	opt stack 0
  4845  000232                     	ds	2
  4846  000234                     _display_content:
  4847                           	opt stack 0
  4848  000234                     	ds	80
  4849  000284                     _mediaInformation:
  4850                           	opt stack 0
  4851  000284                     	ds	5
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           
  4862                           	psect	dataBANK2
  4863  000289                     __pdataBANK2:
  4864                           	opt stack 0
  4865  000289                     _LUN:
  4866                           	opt stack 0
  4867  000289                     	ds	29
  4868  0002A6                     i2c_display_init@F6942:
  4869                           	opt stack 0
  4870  0002A6                     	ds	9
  4871  0002AF                     __i2c_display_send_init_sequence@F6939:
  4872                           	opt stack 0
  4873  0002AF                     	ds	9
  4874  0002B8                     	ds	8
  4875  0002C0                     _configFile_used_name:
  4876                           	opt stack 0
  4877  0002C0                     	ds	8
  4878  0002C8                     _configFile_name:
  4879                           	opt stack 0
  4880  0002C8                     	ds	8
  4881  0002D0                     _configFile_used_extention:
  4882                           	opt stack 0
  4883  0002D0                     	ds	3
  4884  0002D3                     _configFile_extention:
  4885                           	opt stack 0
  4886  0002D3                     	ds	3
  4887                           tblptru	equ	0xFF8
  4888                           tblptrh	equ	0xFF7
  4889                           tblptrl	equ	0xFF6
  4890                           tablat	equ	0xFF5
  4891                           postinc0	equ	0xFEE
  4892                           wreg	equ	0xFE8
  4893                           postdec1	equ	0xFE5
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           
  4897                           	psect	bssBANK3
  4898  000300                     __pbssBANK3:
  4899                           	opt stack 0
  4900  000300                     _motor_command_cue:
  4901                           	opt stack 0
  4902  000300                     	ds	56
  4903  000338                     _ToSendDataBuffer:
  4904                           	opt stack 0
  4905  000338                     	ds	64
  4906  000378                     _ReceivedDataBuffer:
  4907                           	opt stack 0
  4908  000378                     	ds	64
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           postinc0	equ	0xFEE
  4914                           wreg	equ	0xFE8
  4915                           postdec1	equ	0xFE5
  4916                           fsr1h	equ	0xFE2
  4917                           fsr1l	equ	0xFE1
  4918                           
  4919                           	psect	dataBANK4
  4920  000400                     __pdataBANK4:
  4921                           	opt stack 0
  4922  000400                     _dc_startup:
  4923                           	opt stack 0
  4924  000400                     	ds	80
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           postdec1	equ	0xFE5
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           
  4935                           	psect	bssBIGRAMll
  4936  000800                     __pbssBIGRAMll:
  4937                           	opt stack 0
  4938  000800                     _ConfigFile_buffer:
  4939                           	opt stack 0
  4940  000800                     	ds	512
  4941  000A00                     _buffer:
  4942                           	opt stack 0
  4943  000A00                     	ds	512
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           postdec1	equ	0xFE5
  4951                           fsr1h	equ	0xFE2
  4952                           fsr1l	equ	0xFE1
  4953                           
  4954                           	psect	cstackBANK1
  4955  0001C3                     __pcstackBANK1:
  4956                           	opt stack 0
  4957  0001C3                     ??_configFile_read:
  4958                           
  4959                           ; 1 bytes @ 0x0
  4960  0001C3                     	ds	8
  4961  0001CB                     configFile_read@item_string:
  4962                           	opt stack 0
  4963                           
  4964                           ; 31 bytes @ 0x8
  4965  0001CB                     	ds	31
  4966  0001EA                     configFile_read@value_string:
  4967                           	opt stack 0
  4968                           
  4969                           ; 12 bytes @ 0x27
  4970  0001EA                     	ds	12
  4971  0001F6                     configFile_read@file_size:
  4972                           	opt stack 0
  4973                           
  4974                           ; 4 bytes @ 0x33
  4975  0001F6                     	ds	4
  4976  0001FA                     configFile_read@file_number:
  4977                           	opt stack 0
  4978                           
  4979                           ; 1 bytes @ 0x37
  4980  0001FA                     	ds	1
  4981  0001FB                     configFile_read@position:
  4982                           	opt stack 0
  4983                           
  4984                           ; 4 bytes @ 0x38
  4985  0001FB                     	ds	4
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           postdec1	equ	0xFE5
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           
  4996                           	psect	cstackBANK0
  4997  000060                     __pcstackBANK0:
  4998                           	opt stack 0
  4999  000060                     ??_motor_stop:
  5000  000060                     ??_isdigit:
  5001  000060                     ??__i2c_wait_idle:
  5002  000060                     ??__display_clear:
  5003  000060                     ??__divide_jump_size_increment:
  5004  000060                     ??__divide_jump_size_decrement:
  5005  000060                     ?_USBTransferOnePacket:
  5006                           	opt stack 0
  5007  000060                     ?_ExternalFlash_MediaInitialize:
  5008                           	opt stack 0
  5009  000060                     ?_ExternalFlash_SectorSizeRead:
  5010                           	opt stack 0
  5011  000060                     ?_strlen:
  5012                           	opt stack 0
  5013  000060                     ?_strncmp:
  5014                           	opt stack 0
  5015  000060                     ?__sector_from_file_number:
  5016                           	opt stack 0
  5017  000060                     ?__offset_from_file_number:
  5018                           	opt stack 0
  5019  000060                     ?__data_sector_from_cluster:
  5020                           	opt stack 0
  5021  000060                     ?__fat_sector_from_cluster:
  5022                           	opt stack 0
  5023  000060                     ?__fat_offset_from_cluster:
  5024                           	opt stack 0
  5025  000060                     ?__cluster_from_sector_and_offset:
  5026                           	opt stack 0
  5027  000060                     ?__get_available_offset_from_buffer:
  5028                           	opt stack 0
  5029  000060                     ?__read_value_from_offset:
  5030                           	opt stack 0
  5031  000060                     ?__get_time:
  5032                           	opt stack 0
  5033  000060                     ?__get_date:
  5034                           	opt stack 0
  5035  000060                     ?__encoder_next_setup_stepsize:
  5036                           	opt stack 0
  5037  000060                     ?__encoder_next_arc_step_size:
  5038                           	opt stack 0
  5039  000060                     ?___wmul:
  5040                           	opt stack 0
  5041  000060                     ?___lwdiv:
  5042                           	opt stack 0
  5043  000060                     ?___lwmod:
  5044                           	opt stack 0
  5045  000060                     ?_ExternalFlash_CapacityRead:
  5046                           	opt stack 0
  5047  000060                     ?___lmul:
  5048                           	opt stack 0
  5049  000060                     ?___lldiv:
  5050                           	opt stack 0
  5051  000060                     ?___aldiv:
  5052                           	opt stack 0
  5053  000060                     ?___almod:
  5054                           	opt stack 0
  5055  000060                     ?___fltol:
  5056                           	opt stack 0
  5057  000060                     ?___llmod:
  5058                           	opt stack 0
  5059  000060                     ?___xxtofl:
  5060                           	opt stack 0
  5061  000060                     USBTransferOnePacket@dir:
  5062                           	opt stack 0
  5063  000060                     USBStallEndpoint@dir:
  5064                           	opt stack 0
  5065  000060                     __i2c_send@dat:
  5066                           	opt stack 0
  5067  000060                     display_get_character@position:
  5068                           	opt stack 0
  5069  000060                     __encoder_next_divide_step_size@old_stepsize:
  5070                           	opt stack 0
  5071  000060                     toupper@c:
  5072                           	opt stack 0
  5073  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5074                           	opt stack 0
  5075  000060                     SYSTEM_Initialize@pll_startup_counter:
  5076                           	opt stack 0
  5077  000060                     ExternalFlash_MediaInitialize@config:
  5078                           	opt stack 0
  5079  000060                     ExternalFlash_SectorSizeRead@config:
  5080                           	opt stack 0
  5081  000060                     ExternalFlash_CapacityRead@config:
  5082                           	opt stack 0
  5083  000060                     ExternalFlash_MediaDetect@config:
  5084                           	opt stack 0
  5085  000060                     ExternalFlash_WriteProtectStateGet@config:
  5086                           	opt stack 0
  5087  000060                     __data_sector_from_cluster@fat_cluster:
  5088                           	opt stack 0
  5089  000060                     __fat_sector_from_cluster@cluster:
  5090                           	opt stack 0
  5091  000060                     __fat_offset_from_cluster@cluster:
  5092                           	opt stack 0
  5093  000060                     __cluster_from_sector_and_offset@sector:
  5094                           	opt stack 0
  5095  000060                     __get_available_offset_from_buffer@minimum_offset:
  5096                           	opt stack 0
  5097  000060                     __read_value_from_offset@offset:
  5098                           	opt stack 0
  5099  000060                     __write_value_to_offset@offset:
  5100                           	opt stack 0
  5101  000060                     __get_mbr@idx:
  5102                           	opt stack 0
  5103  000060                     __get_fbr@idx:
  5104                           	opt stack 0
  5105  000060                     __get_fat@idx:
  5106                           	opt stack 0
  5107  000060                     __get_root@idx:
  5108                           	opt stack 0
  5109  000060                     __get_data@idx:
  5110                           	opt stack 0
  5111  000060                     spi_tx@data:
  5112                           	opt stack 0
  5113  000060                     spi_tx_tx@command:
  5114                           	opt stack 0
  5115  000060                     spi_tx_rx@command:
  5116                           	opt stack 0
  5117  000060                     __fill_buffer_get_mode_details@outBuffer:
  5118                           	opt stack 0
  5119  000060                     motor_change_speed@new_speed:
  5120                           	opt stack 0
  5121  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5122                           	opt stack 0
  5123  000060                     __encoder_next_arc_step_size@old_stepsize:
  5124                           	opt stack 0
  5125  000060                     __get_item@item_string:
  5126                           	opt stack 0
  5127  000060                     ___wmul@multiplier:
  5128                           	opt stack 0
  5129  000060                     ___lwdiv@dividend:
  5130                           	opt stack 0
  5131  000060                     ___lwmod@dividend:
  5132                           	opt stack 0
  5133  000060                     memcpy@d1:
  5134                           	opt stack 0
  5135  000060                     memset@p1:
  5136                           	opt stack 0
  5137  000060                     strlen@s:
  5138                           	opt stack 0
  5139  000060                     strncmp@s1:
  5140                           	opt stack 0
  5141  000060                     __spi_init@details:
  5142                           	opt stack 0
  5143  000060                     ___lmul@multiplier:
  5144                           	opt stack 0
  5145  000060                     ___lldiv@dividend:
  5146                           	opt stack 0
  5147  000060                     ___aldiv@dividend:
  5148                           	opt stack 0
  5149  000060                     ___almod@dividend:
  5150                           	opt stack 0
  5151  000060                     ___fltol@f1:
  5152                           	opt stack 0
  5153  000060                     ___llmod@dividend:
  5154                           	opt stack 0
  5155  000060                     ___xxtofl@val:
  5156                           	opt stack 0
  5157                           
  5158                           ; 4 bytes @ 0x0
  5159  000060                     	ds	1
  5160  000061                     ??_USBStallEndpoint:
  5161  000061                     ??_display_get_character:
  5162  000061                     ?_stricmp:
  5163                           	opt stack 0
  5164  000061                     _isdigit$8180:
  5165                           	opt stack 0
  5166  000061                     USBTransferOnePacket@data:
  5167                           	opt stack 0
  5168  000061                     stricmp@s1:
  5169                           	opt stack 0
  5170                           
  5171                           ; 2 bytes @ 0x1
  5172  000061                     	ds	1
  5173  000062                     ??_MSDComputeDeviceInAndResidue:
  5174  000062                     ??_strlen:
  5175  000062                     ??__fill_buffer_get_mode_details:
  5176  000062                     ??__get_mbr:
  5177  000062                     ??__get_fbr:
  5178  000062                     ??__get_fat:
  5179  000062                     ??__get_root:
  5180  000062                     ??__encoder_next_setup_stepsize:
  5181  000062                     ??__encoder_next_arc_step_size:
  5182  000062                     __display_clear@row:
  5183                           	opt stack 0
  5184  000062                     __sector_from_file_number@file_number:
  5185                           	opt stack 0
  5186  000062                     __offset_from_file_number@file_number:
  5187                           	opt stack 0
  5188  000062                     isdigit@c:
  5189                           	opt stack 0
  5190  000062                     SYSTEM_Initialize@pll_startup_counter_3132:
  5191                           	opt stack 0
  5192  000062                     __cluster_from_sector_and_offset@offset:
  5193                           	opt stack 0
  5194  000062                     __get_available_offset_from_buffer@buffer:
  5195                           	opt stack 0
  5196  000062                     __read_value_from_offset@buffer:
  5197                           	opt stack 0
  5198  000062                     __write_value_to_offset@buffer:
  5199                           	opt stack 0
  5200  000062                     spi_tx@length:
  5201                           	opt stack 0
  5202  000062                     spi_tx_tx@command_length:
  5203                           	opt stack 0
  5204  000062                     spi_tx_rx@command_length:
  5205                           	opt stack 0
  5206  000062                     motor_set_manual_speed@new_speed:
  5207                           	opt stack 0
  5208  000062                     __get_item@value_string:
  5209                           	opt stack 0
  5210  000062                     ___wmul@multiplicand:
  5211                           	opt stack 0
  5212  000062                     ___lwdiv@divisor:
  5213                           	opt stack 0
  5214  000062                     ___lwmod@divisor:
  5215                           	opt stack 0
  5216  000062                     memcpy@s1:
  5217                           	opt stack 0
  5218  000062                     memset@c:
  5219                           	opt stack 0
  5220  000062                     strncmp@s2:
  5221                           	opt stack 0
  5222                           
  5223                           ; 2 bytes @ 0x2
  5224  000062                     	ds	1
  5225  000063                     USBTransferOnePacket@len:
  5226                           	opt stack 0
  5227  000063                     __display_clear@col:
  5228                           	opt stack 0
  5229  000063                     display_get_character@line:
  5230                           	opt stack 0
  5231  000063                     spi_init@configuration:
  5232                           	opt stack 0
  5233  000063                     __sector_from_file_number@sector:
  5234                           	opt stack 0
  5235  000063                     __offset_from_file_number@offset:
  5236                           	opt stack 0
  5237  000063                     stricmp@s2:
  5238                           	opt stack 0
  5239                           
  5240                           ; 2 bytes @ 0x3
  5241  000063                     	ds	1
  5242  000064                     ??_USBTransferOnePacket:
  5243  000064                     ??_spi_tx:
  5244  000064                     ??__get_available_offset_from_buffer:
  5245  000064                     ??__read_value_from_offset:
  5246  000064                     ??___fltol:
  5247  000064                     ??___xxtofl:
  5248  000064                     SYSTEM_Initialize@state:
  5249                           	opt stack 0
  5250  000064                     ___lwmod@counter:
  5251                           	opt stack 0
  5252  000064                     __write_value_to_offset@value:
  5253                           	opt stack 0
  5254  000064                     spi_tx_tx@data:
  5255                           	opt stack 0
  5256  000064                     spi_tx_rx@data:
  5257                           	opt stack 0
  5258  000064                     __fill_buffer_get_display@outBuffer:
  5259                           	opt stack 0
  5260  000064                     __parse_set_manual_speed@data:
  5261                           	opt stack 0
  5262  000064                     __get_item@buffer:
  5263                           	opt stack 0
  5264  000064                     ___wmul@product:
  5265                           	opt stack 0
  5266  000064                     ___lwdiv@quotient:
  5267                           	opt stack 0
  5268  000064                     memcpy@n:
  5269                           	opt stack 0
  5270  000064                     memset@n:
  5271                           	opt stack 0
  5272  000064                     strlen@cp:
  5273                           	opt stack 0
  5274  000064                     strncmp@len:
  5275                           	opt stack 0
  5276  000064                     ___lmul@multiplicand:
  5277                           	opt stack 0
  5278  000064                     ___lldiv@divisor:
  5279                           	opt stack 0
  5280  000064                     ___aldiv@divisor:
  5281                           	opt stack 0
  5282  000064                     ___almod@divisor:
  5283                           	opt stack 0
  5284  000064                     ___llmod@divisor:
  5285                           	opt stack 0
  5286                           
  5287                           ; 4 bytes @ 0x4
  5288  000064                     	ds	1
  5289  000065                     ??_stricmp:
  5290  000065                     USBStallEndpoint@ep:
  5291                           	opt stack 0
  5292  000065                     __i2c_eeprom_busy@busy:
  5293                           	opt stack 0
  5294  000065                     __i2c_write@data:
  5295                           	opt stack 0
  5296  000065                     __i2c_read@data:
  5297                           	opt stack 0
  5298  000065                     i2c_display_write_fixed@data:
  5299                           	opt stack 0
  5300                           
  5301                           ; 2 bytes @ 0x5
  5302  000065                     	ds	1
  5303  000066                     ??_strncmp:
  5304  000066                     ??__write_value_to_offset:
  5305  000066                     ??__get_item:
  5306  000066                     ?_atoi:
  5307                           	opt stack 0
  5308  000066                     __fill_buffer_get_display@secondHalf:
  5309                           	opt stack 0
  5310  000066                     ___lwdiv@counter:
  5311                           	opt stack 0
  5312  000066                     stricmp@r:
  5313                           	opt stack 0
  5314  000066                     USBStallEndpoint@p:
  5315                           	opt stack 0
  5316  000066                     __get_available_offset_from_buffer@offset:
  5317                           	opt stack 0
  5318  000066                     spi_tx_tx@data_length:
  5319                           	opt stack 0
  5320  000066                     spi_tx_rx@data_length:
  5321                           	opt stack 0
  5322  000066                     __parse_set_manual_speed@out_buffer:
  5323                           	opt stack 0
  5324  000066                     atoi@s:
  5325                           	opt stack 0
  5326  000066                     memcpy@d:
  5327                           	opt stack 0
  5328  000066                     memset@p:
  5329                           	opt stack 0
  5330                           
  5331                           ; 2 bytes @ 0x6
  5332  000066                     	ds	1
  5333  000067                     ??__fill_buffer_get_display:
  5334  000067                     __i2c_write@length:
  5335                           	opt stack 0
  5336  000067                     __i2c_read@length:
  5337                           	opt stack 0
  5338  000067                     i2c_display_write_fixed@length:
  5339                           	opt stack 0
  5340  000067                     __read_value_from_offset@value:
  5341                           	opt stack 0
  5342  000067                     utoa@buf:
  5343                           	opt stack 0
  5344                           
  5345                           ; 2 bytes @ 0x7
  5346  000067                     	ds	1
  5347  000068                     ??_spi_tx_rx:
  5348  000068                     ??_spi_tx_tx:
  5349  000068                     ??_atoi:
  5350  000068                     ??__i2c_read:
  5351  000068                     USBDeviceInit@i:
  5352                           	opt stack 0
  5353  000068                     USBTransferOnePacket@ep:
  5354                           	opt stack 0
  5355  000068                     MSDErrorHandler@ErrorCase:
  5356                           	opt stack 0
  5357  000068                     __i2c_write@slave_address:
  5358                           	opt stack 0
  5359  000068                     i2c_display_write_fixed@pos:
  5360                           	opt stack 0
  5361  000068                     __flash_wakeup@command:
  5362                           	opt stack 0
  5363  000068                     ___aldiv@counter:
  5364                           	opt stack 0
  5365  000068                     ___almod@counter:
  5366                           	opt stack 0
  5367  000068                     ___fltol@sign1:
  5368                           	opt stack 0
  5369  000068                     ___llmod@counter:
  5370                           	opt stack 0
  5371  000068                     ___xxtofl@sign:
  5372                           	opt stack 0
  5373  000068                     __parse_set_manual_speed@out_idx_ptr:
  5374                           	opt stack 0
  5375  000068                     memcpy@s:
  5376                           	opt stack 0
  5377  000068                     ___lmul@product:
  5378                           	opt stack 0
  5379  000068                     ___lldiv@quotient:
  5380                           	opt stack 0
  5381                           
  5382                           ; 4 bytes @ 0x8
  5383  000068                     	ds	1
  5384  000069                     MSDErrorHandler@OldMSD_State:
  5385                           	opt stack 0
  5386  000069                     __i2c_write@cntr:
  5387                           	opt stack 0
  5388  000069                     __get_item@value_ctr:
  5389                           	opt stack 0
  5390  000069                     ___aldiv@sign:
  5391                           	opt stack 0
  5392  000069                     ___almod@sign:
  5393                           	opt stack 0
  5394  000069                     ___fltol@exp1:
  5395                           	opt stack 0
  5396  000069                     ___xxtofl@exp:
  5397                           	opt stack 0
  5398  000069                     USBTransferOnePacket@handle:
  5399                           	opt stack 0
  5400  000069                     utoa@val:
  5401                           	opt stack 0
  5402                           
  5403                           ; 2 bytes @ 0x9
  5404  000069                     	ds	1
  5405  00006A                     ??__parse_set_manual_speed:
  5406  00006A                     ??_i2c_display_init:
  5407  00006A                     __ic2_display_set_ddram_address@address:
  5408                           	opt stack 0
  5409  00006A                     __get_item@item_ctr:
  5410                           	opt stack 0
  5411  00006A                     atoi@sign:
  5412                           	opt stack 0
  5413  00006A                     memcpy@tmp:
  5414                           	opt stack 0
  5415  00006A                     __ic2_display_set_cgram_address@data_array:
  5416                           	opt stack 0
  5417  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5418                           	opt stack 0
  5419  00006A                     ___aldiv@quotient:
  5420                           	opt stack 0
  5421  00006A                     ___xxtofl@arg:
  5422                           	opt stack 0
  5423                           
  5424                           ; 4 bytes @ 0xA
  5425  00006A                     	ds	1
  5426  00006B                     __ic2_display_set_ddram_address@data_array:
  5427                           	opt stack 0
  5428  00006B                     __fill_buffer_get_status@outBuffer:
  5429                           	opt stack 0
  5430  00006B                     __parse_set_manual_speed@new_speed:
  5431                           	opt stack 0
  5432  00006B                     atoi@a:
  5433                           	opt stack 0
  5434  00006B                     utoa@base:
  5435                           	opt stack 0
  5436  00006B                     i2c_display_init@init_sequence:
  5437                           	opt stack 0
  5438                           
  5439                           ; 9 bytes @ 0xB
  5440  00006B                     	ds	1
  5441  00006C                     ?__flash_get_status:
  5442                           	opt stack 0
  5443  00006C                     ?_atol:
  5444                           	opt stack 0
  5445  00006C                     __fill_buffer_get_display@cntr:
  5446                           	opt stack 0
  5447  00006C                     ___lldiv@counter:
  5448                           	opt stack 0
  5449  00006C                     atol@s:
  5450                           	opt stack 0
  5451                           
  5452                           ; 2 bytes @ 0xC
  5453  00006C                     	ds	1
  5454  00006D                     __ic2_display_set_cgram_address@address:
  5455                           	opt stack 0
  5456  00006D                     i2c_display_cursor@position:
  5457                           	opt stack 0
  5458  00006D                     __fill_buffer_get_display@line:
  5459                           	opt stack 0
  5460  00006D                     utoa@v:
  5461                           	opt stack 0
  5462  00006D                     ultoa@buf:
  5463                           	opt stack 0
  5464                           
  5465                           ; 2 bytes @ 0xD
  5466  00006D                     	ds	1
  5467  00006E                     ?___fldiv:
  5468                           	opt stack 0
  5469  00006E                     ?___flmul:
  5470                           	opt stack 0
  5471  00006E                     ?___flneg:
  5472                           	opt stack 0
  5473  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5474                           	opt stack 0
  5475  00006E                     i2c_display_cursor@line:
  5476                           	opt stack 0
  5477  00006E                     __flash_get_status@command:
  5478                           	opt stack 0
  5479  00006E                     __fill_buffer_get_display@start_line:
  5480                           	opt stack 0
  5481  00006E                     i2c_display_program_custom_character@bit_pattern:
  5482                           	opt stack 0
  5483  00006E                     ___flneg@f1:
  5484                           	opt stack 0
  5485  00006E                     ___fldiv@b:
  5486                           	opt stack 0
  5487  00006E                     ___flmul@b:
  5488                           	opt stack 0
  5489                           
  5490                           ; 4 bytes @ 0xE
  5491  00006E                     	ds	1
  5492  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5493                           	opt stack 0
  5494  00006F                     __i2c_read@slave_address:
  5495                           	opt stack 0
  5496  00006F                     i2c_display_cursor@address:
  5497                           	opt stack 0
  5498  00006F                     __fill_buffer_get_display@position:
  5499                           	opt stack 0
  5500  00006F                     utoa@c:
  5501                           	opt stack 0
  5502  00006F                     __flash_get_status@status:
  5503                           	opt stack 0
  5504  00006F                     ultoa@val:
  5505                           	opt stack 0
  5506                           
  5507                           ; 4 bytes @ 0xF
  5508  00006F                     	ds	1
  5509  000070                     ??_atol:
  5510  000070                     ??_i2c_display_program_custom_character:
  5511  000070                     MSDCheckForErrorCases@DeviceNoData:
  5512                           	opt stack 0
  5513  000070                     __i2c_read@cntr:
  5514                           	opt stack 0
  5515  000070                     display_update@line:
  5516                           	opt stack 0
  5517  000070                     api_prepare@inBuffer:
  5518                           	opt stack 0
  5519  000070                     itoa@buf:
  5520                           	opt stack 0
  5521                           
  5522                           ; 2 bytes @ 0x10
  5523  000070                     	ds	1
  5524  000071                     i2c_eeprom_read@address:
  5525                           	opt stack 0
  5526  000071                     __flash_is_busy@status:
  5527                           	opt stack 0
  5528                           
  5529                           ; 2 bytes @ 0x11
  5530  000071                     	ds	1
  5531  000072                     ?___fladd:
  5532                           	opt stack 0
  5533  000072                     api_prepare@outBuffer:
  5534                           	opt stack 0
  5535  000072                     itoa@val:
  5536                           	opt stack 0
  5537  000072                     ___fladd@b:
  5538                           	opt stack 0
  5539  000072                     ___fldiv@a:
  5540                           	opt stack 0
  5541  000072                     ___flmul@a:
  5542                           	opt stack 0
  5543                           
  5544                           ; 4 bytes @ 0x12
  5545  000072                     	ds	1
  5546  000073                     i2c_eeprom_read@data:
  5547                           	opt stack 0
  5548  000073                     __flash_copy_page_to_buffer@page:
  5549                           	opt stack 0
  5550  000073                     __flash_compare_page_to_buffer@page:
  5551                           	opt stack 0
  5552  000073                     __flash_write_to_buffer@start:
  5553                           	opt stack 0
  5554  000073                     __flash_write_page_from_buffer@page:
  5555                           	opt stack 0
  5556  000073                     __flash_partial_read@page:
  5557                           	opt stack 0
  5558  000073                     ultoa@base:
  5559                           	opt stack 0
  5560  000073                     __flash_set_page_size@command:
  5561                           	opt stack 0
  5562                           
  5563                           ; 4 bytes @ 0x13
  5564  000073                     	ds	1
  5565  000074                     api_prepare@command:
  5566                           	opt stack 0
  5567  000074                     atol@sign:
  5568                           	opt stack 0
  5569  000074                     itoa@base:
  5570                           	opt stack 0
  5571  000074                     i2c_display_program_custom_character@data_array:
  5572                           	opt stack 0
  5573                           
  5574                           ; 11 bytes @ 0x14
  5575  000074                     	ds	1
  5576  000075                     i2c_eeprom_read@length:
  5577                           	opt stack 0
  5578  000075                     __flash_copy_page_to_buffer@buffer:
  5579                           	opt stack 0
  5580  000075                     __flash_compare_page_to_buffer@buffer:
  5581                           	opt stack 0
  5582  000075                     __flash_write_page_from_buffer@buffer:
  5583                           	opt stack 0
  5584  000075                     __flash_write_to_buffer@data:
  5585                           	opt stack 0
  5586  000075                     __flash_partial_read@start:
  5587                           	opt stack 0
  5588  000075                     atol@a:
  5589                           	opt stack 0
  5590  000075                     ultoa@v:
  5591                           	opt stack 0
  5592                           
  5593                           ; 4 bytes @ 0x15
  5594  000075                     	ds	1
  5595  000076                     ??_i2c_eeprom_read:
  5596  000076                     ??___fldiv:
  5597  000076                     ??___flmul:
  5598  000076                     ??__flash_copy_page_to_buffer:
  5599  000076                     ??__flash_compare_page_to_buffer:
  5600  000076                     ??__flash_write_page_from_buffer:
  5601  000076                     itoa@cp:
  5602                           	opt stack 0
  5603  000076                     ___fladd@a:
  5604                           	opt stack 0
  5605                           
  5606                           ; 4 bytes @ 0x16
  5607  000076                     	ds	1
  5608  000077                     i2c_eeprom_read@addr:
  5609                           	opt stack 0
  5610  000077                     __flash_set_page_size@size:
  5611                           	opt stack 0
  5612  000077                     __flash_write_to_buffer@data_length:
  5613                           	opt stack 0
  5614  000077                     __flash_partial_read@length:
  5615                           	opt stack 0
  5616                           
  5617                           ; 2 bytes @ 0x17
  5618  000077                     	ds	1
  5619  000078                     i2c_eeprom_read@slave_address:
  5620                           	opt stack 0
  5621  000078                     __display_padded_itoa@value:
  5622                           	opt stack 0
  5623  000078                     __display_itoa_u16@value:
  5624                           	opt stack 0
  5625                           
  5626                           ; 2 bytes @ 0x18
  5627  000078                     	ds	1
  5628  000079                     ?_i2c_eeprom_readUint32:
  5629                           	opt stack 0
  5630  000079                     __flash_write_to_buffer@buffer:
  5631                           	opt stack 0
  5632  000079                     atol@c:
  5633                           	opt stack 0
  5634  000079                     ultoa@c:
  5635                           	opt stack 0
  5636  000079                     i2c_eeprom_readUint32@address:
  5637                           	opt stack 0
  5638  000079                     __flash_compare_page_to_buffer@status:
  5639                           	opt stack 0
  5640  000079                     __flash_partial_read@data:
  5641                           	opt stack 0
  5642  000079                     __flash_copy_page_to_buffer@command:
  5643                           	opt stack 0
  5644  000079                     __flash_write_page_from_buffer@command:
  5645                           	opt stack 0
  5646                           
  5647                           ; 4 bytes @ 0x19
  5648  000079                     	ds	1
  5649  00007A                     ??___fladd:
  5650  00007A                     __display_padded_itoa@length:
  5651                           	opt stack 0
  5652  00007A                     ___flmul@sign:
  5653                           	opt stack 0
  5654  00007A                     __display_itoa_u16@text:
  5655                           	opt stack 0
  5656  00007A                     __parse_item@item_string:
  5657                           	opt stack 0
  5658  00007A                     ltoa@buf:
  5659                           	opt stack 0
  5660  00007A                     __flash_write_to_buffer@command:
  5661                           	opt stack 0
  5662  00007A                     ___fldiv@rem:
  5663                           	opt stack 0
  5664                           
  5665                           ; 4 bytes @ 0x1A
  5666  00007A                     	ds	1
  5667  00007B                     ??__flash_partial_read:
  5668  00007B                     __display_padded_itoa@text:
  5669                           	opt stack 0
  5670  00007B                     __flash_compare_page_to_buffer@command:
  5671                           	opt stack 0
  5672  00007B                     ___flmul@grs:
  5673                           	opt stack 0
  5674                           
  5675                           ; 4 bytes @ 0x1B
  5676  00007B                     	ds	1
  5677  00007C                     __display_start@cntr:
  5678                           	opt stack 0
  5679  00007C                     __parse_item@value_string:
  5680                           	opt stack 0
  5681  00007C                     ltoa@val:
  5682                           	opt stack 0
  5683                           
  5684                           ; 4 bytes @ 0x1C
  5685  00007C                     	ds	1
  5686  00007D                     ??__display_padded_itoa:
  5687  00007D                     i2c_eeprom_readUint32@data:
  5688                           	opt stack 0
  5689                           
  5690                           ; 4 bytes @ 0x1D
  5691  00007D                     	ds	1
  5692  00007E                     ___fldiv@sign:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0x1E
  5696  00007E                     	ds	1
  5697  00007F                     i2c_display_program_custom_character@address:
  5698                           	opt stack 0
  5699  00007F                     ___flmul@aexp:
  5700                           	opt stack 0
  5701  00007F                     flash_sector_write@page:
  5702                           	opt stack 0
  5703  00007F                     flash_partial_write@page:
  5704                           	opt stack 0
  5705  00007F                     ___fldiv@new_exp:
  5706                           	opt stack 0
  5707  00007F                     __flash_partial_read@command:
  5708                           	opt stack 0
  5709                           
  5710                           ; 4 bytes @ 0x1F
  5711  00007F                     	ds	1
  5712  000080                     i2c_display_program_custom_character@cntr:
  5713                           	opt stack 0
  5714  000080                     ___flmul@bexp:
  5715                           	opt stack 0
  5716  000080                     ltoa@base:
  5717                           	opt stack 0
  5718                           
  5719                           ; 2 bytes @ 0x20
  5720  000080                     	ds	1
  5721  000081                     flash_sector_write@data:
  5722                           	opt stack 0
  5723  000081                     flash_partial_write@start:
  5724                           	opt stack 0
  5725  000081                     ___fldiv@grs:
  5726                           	opt stack 0
  5727  000081                     ___flmul@prod:
  5728                           	opt stack 0
  5729                           
  5730                           ; 4 bytes @ 0x21
  5731  000081                     	ds	1
  5732  000082                     ___fladd@signs:
  5733                           	opt stack 0
  5734  000082                     ltoa@cp:
  5735                           	opt stack 0
  5736  000082                     __display_padded_itoa@tmp:
  5737                           	opt stack 0
  5738                           
  5739                           ; 10 bytes @ 0x22
  5740  000082                     	ds	1
  5741  000083                     flash_sector_write@match:
  5742                           	opt stack 0
  5743  000083                     ___fladd@aexp:
  5744                           	opt stack 0
  5745  000083                     flash_partial_write@length:
  5746                           	opt stack 0
  5747  000083                     __flash_partial_read@address:
  5748                           	opt stack 0
  5749                           
  5750                           ; 4 bytes @ 0x23
  5751  000083                     	ds	1
  5752  000084                     ___fladd@bexp:
  5753                           	opt stack 0
  5754  000084                     ExternalFlash_SectorWrite@config:
  5755                           	opt stack 0
  5756  000084                     fat_format@cntr:
  5757                           	opt stack 0
  5758  000084                     __add_item@item_string:
  5759                           	opt stack 0
  5760                           
  5761                           ; 2 bytes @ 0x24
  5762  000084                     	ds	1
  5763  000085                     ___fladd@grs:
  5764                           	opt stack 0
  5765  000085                     ___fldiv@bexp:
  5766                           	opt stack 0
  5767  000085                     flash_partial_write@data:
  5768                           	opt stack 0
  5769  000085                     ___flmul@temp:
  5770                           	opt stack 0
  5771                           
  5772                           ; 2 bytes @ 0x25
  5773  000085                     	ds	1
  5774  000086                     ___fldiv@aexp:
  5775                           	opt stack 0
  5776  000086                     ExternalFlash_SectorWrite@sector_addr:
  5777                           	opt stack 0
  5778  000086                     __add_item@value:
  5779                           	opt stack 0
  5780                           
  5781                           ; 4 bytes @ 0x26
  5782  000086                     	ds	1
  5783  000087                     ??_adc_read_temperature:
  5784  000087                     ?__motor_get_speed_in_degrees:
  5785                           	opt stack 0
  5786  000087                     ?_motor_steps_from_degrees:
  5787                           	opt stack 0
  5788  000087                     ?__step_position_from_divide_position:
  5789                           	opt stack 0
  5790  000087                     flash_partial_write@match:
  5791                           	opt stack 0
  5792  000087                     flash_sector_read@page:
  5793                           	opt stack 0
  5794  000087                     flash_partial_read@page:
  5795                           	opt stack 0
  5796  000087                     motor_steps_from_degrees@degrees:
  5797                           	opt stack 0
  5798  000087                     __motor_get_speed_in_degrees@speed_index:
  5799                           	opt stack 0
  5800  000087                     __step_position_from_divide_position@divide_position:
  5801                           	opt stack 0
  5802  000087                     motor_calculate_position_in_degrees@tmp:
  5803                           	opt stack 0
  5804                           
  5805                           ; 4 bytes @ 0x27
  5806  000087                     	ds	1
  5807  000088                     __write_root@data:
  5808                           	opt stack 0
  5809                           
  5810                           ; 2 bytes @ 0x28
  5811  000088                     	ds	1
  5812  000089                     ??__motor_get_speed_in_degrees:
  5813  000089                     flash_sector_read@data:
  5814                           	opt stack 0
  5815  000089                     flash_partial_read@start:
  5816                           	opt stack 0
  5817  000089                     adc_read_temperature@adc_result:
  5818                           	opt stack 0
  5819                           
  5820                           ; 2 bytes @ 0x29
  5821  000089                     	ds	1
  5822  00008A                     ExternalFlash_SectorWrite@buffer:
  5823                           	opt stack 0
  5824  00008A                     __write_root@sector:
  5825                           	opt stack 0
  5826  00008A                     __add_item@buffer:
  5827                           	opt stack 0
  5828                           
  5829                           ; 2 bytes @ 0x2A
  5830  00008A                     	ds	1
  5831  00008B                     ??_fat_get_format_status:
  5832  00008B                     ?__get_available_cluster:
  5833                           	opt stack 0
  5834  00008B                     flash_partial_read@length:
  5835                           	opt stack 0
  5836  00008B                     ExternalFlash_SectorRead@config:
  5837                           	opt stack 0
  5838  00008B                     __get_available_cluster@first_sector:
  5839                           	opt stack 0
  5840  00008B                     fat_find_file@name:
  5841                           	opt stack 0
  5842  00008B                     motor_steps_from_degrees@steps:
  5843                           	opt stack 0
  5844  00008B                     __motor_get_speed_in_degrees@speed:
  5845                           	opt stack 0
  5846  00008B                     __step_position_from_divide_position@target_position:
  5847                           	opt stack 0
  5848  00008B                     adc_read_temperature@temperature:
  5849                           	opt stack 0
  5850                           
  5851                           ; 4 bytes @ 0x2B
  5852  00008B                     	ds	1
  5853  00008C                     ??__add_item:
  5854  00008C                     __display_padded_itoa@len:
  5855                           	opt stack 0
  5856  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5857                           	opt stack 0
  5858  00008C                     __write_root@offset:
  5859                           	opt stack 0
  5860                           
  5861                           ; 2 bytes @ 0x2C
  5862  00008C                     	ds	1
  5863  00008D                     __display_padded_itoa@pos:
  5864                           	opt stack 0
  5865  00008D                     flash_partial_read@data:
  5866                           	opt stack 0
  5867  00008D                     ExternalFlash_SectorWrite@page:
  5868                           	opt stack 0
  5869  00008D                     __get_available_cluster@skip_sector:
  5870                           	opt stack 0
  5871  00008D                     fat_find_file@extension:
  5872                           	opt stack 0
  5873  00008D                     fat_get_format_status@cntr:
  5874                           	opt stack 0
  5875  00008D                     ExternalFlash_SectorRead@sector_addr:
  5876                           	opt stack 0
  5877                           
  5878                           ; 4 bytes @ 0x2D
  5879  00008D                     	ds	1
  5880  00008E                     __display_padded_itoa@padding:
  5881                           	opt stack 0
  5882  00008E                     __write_root@file_number:
  5883                           	opt stack 0
  5884  00008E                     __add_item@length:
  5885                           	opt stack 0
  5886                           
  5887                           ; 1 bytes @ 0x2E
  5888  00008E                     	ds	1
  5889  00008F                     ??_MSDWriteHandler:
  5890  00008F                     ??_fat_find_file:
  5891  00008F                     ?__read_fat:
  5892                           	opt stack 0
  5893  00008F                     ?_motor_nonzero_steps_from_degrees:
  5894                           	opt stack 0
  5895  00008F                     __display_signed_itoa@value:
  5896                           	opt stack 0
  5897  00008F                     __get_available_cluster@cluster:
  5898                           	opt stack 0
  5899  00008F                     __root_is_available@root_sector:
  5900                           	opt stack 0
  5901  00008F                     __read_fat@cluster:
  5902                           	opt stack 0
  5903  00008F                     fat_get_file_information@data:
  5904                           	opt stack 0
  5905  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5906                           	opt stack 0
  5907  00008F                     __motor_get_speed_in_degrees@lookup:
  5908                           	opt stack 0
  5909  00008F                     __motor_run@distance_in_steps:
  5910                           	opt stack 0
  5911                           
  5912                           ; 4 bytes @ 0x2F
  5913  00008F                     	ds	2
  5914  000091                     fat_find_file@file_number:
  5915                           	opt stack 0
  5916  000091                     __display_signed_itoa@text:
  5917                           	opt stack 0
  5918  000091                     ExternalFlash_SectorRead@buffer:
  5919                           	opt stack 0
  5920  000091                     __get_available_cluster@offset:
  5921                           	opt stack 0
  5922  000091                     __root_is_available@offset:
  5923                           	opt stack 0
  5924  000091                     __read_fat@sector:
  5925                           	opt stack 0
  5926                           
  5927                           ; 2 bytes @ 0x31
  5928  000091                     	ds	1
  5929  000092                     fat_find_file@sector:
  5930                           	opt stack 0
  5931  000092                     fat_get_file_information@root_sector:
  5932                           	opt stack 0
  5933                           
  5934                           ; 2 bytes @ 0x32
  5935  000092                     	ds	1
  5936  000093                     ?_motor_speed_from_index:
  5937                           	opt stack 0
  5938  000093                     __root_is_available@file_number:
  5939                           	opt stack 0
  5940  000093                     ExternalFlash_SectorRead@page:
  5941                           	opt stack 0
  5942  000093                     __get_available_cluster@sector:
  5943                           	opt stack 0
  5944  000093                     __read_fat@offset:
  5945                           	opt stack 0
  5946  000093                     motor_speed_from_index@speed_index:
  5947                           	opt stack 0
  5948  000093                     __motor_run@speed:
  5949                           	opt stack 0
  5950  000093                     motor_nonzero_steps_from_degrees@steps:
  5951                           	opt stack 0
  5952                           
  5953                           ; 4 bytes @ 0x33
  5954  000093                     	ds	1
  5955  000094                     __root_is_available@first_byte:
  5956                           	opt stack 0
  5957  000094                     fat_find_file@offset:
  5958                           	opt stack 0
  5959  000094                     fat_get_file_information@offset:
  5960                           	opt stack 0
  5961                           
  5962                           ; 2 bytes @ 0x34
  5963  000094                     	ds	1
  5964  000095                     ??_MSDReadHandler:
  5965  000095                     ??__motor_run:
  5966  000095                     ?__make_cluster_chain:
  5967                           	opt stack 0
  5968  000095                     ?_fat_get_file_size:
  5969                           	opt stack 0
  5970  000095                     __get_available_root_entry@file_number:
  5971                           	opt stack 0
  5972  000095                     __display_itoa@value:
  5973                           	opt stack 0
  5974  000095                     __make_cluster_chain@first_cluster:
  5975                           	opt stack 0
  5976  000095                     __read_fat@value:
  5977                           	opt stack 0
  5978                           
  5979                           ; 2 bytes @ 0x35
  5980  000095                     	ds	1
  5981  000096                     fat_get_file_information@file_number:
  5982                           	opt stack 0
  5983                           
  5984                           ; 1 bytes @ 0x36
  5985  000096                     	ds	1
  5986  000097                     ?__find_nth_cluster:
  5987                           	opt stack 0
  5988  000097                     __display_itoa@decimals:
  5989                           	opt stack 0
  5990  000097                     __find_nth_cluster@cluster:
  5991                           	opt stack 0
  5992  000097                     __make_cluster_chain@number_of_clusters:
  5993                           	opt stack 0
  5994                           
  5995                           ; 2 bytes @ 0x37
  5996  000097                     	ds	1
  5997  000098                     __display_itoa@text:
  5998                           	opt stack 0
  5999                           
  6000                           ; 2 bytes @ 0x38
  6001  000098                     	ds	1
  6002  000099                     ??_MSDProcessCommandMediaPresent:
  6003  000099                     ??__make_cluster_chain:
  6004  000099                     __motor_run@direction:
  6005                           	opt stack 0
  6006  000099                     __find_nth_cluster@n:
  6007                           	opt stack 0
  6008  000099                     fat_get_file_size@sector:
  6009                           	opt stack 0
  6010                           
  6011                           ; 2 bytes @ 0x39
  6012  000099                     	ds	1
  6013  00009A                     ??__display_itoa:
  6014  00009A                     __motor_run@maximum_distance_in_degrees:
  6015                           	opt stack 0
  6016                           
  6017                           ; 2 bytes @ 0x3A
  6018  00009A                     	ds	1
  6019  00009B                     _MSDProcessCommandMediaPresent$2606:
  6020                           	opt stack 0
  6021  00009B                     __find_nth_cluster@offset:
  6022                           	opt stack 0
  6023  00009B                     __make_cluster_chain@next_offset:
  6024                           	opt stack 0
  6025  00009B                     fat_get_file_size@offset:
  6026                           	opt stack 0
  6027                           
  6028                           ; 2 bytes @ 0x3B
  6029  00009B                     	ds	1
  6030  00009C                     __motor_run@maximum_distance_in_steps:
  6031                           	opt stack 0
  6032                           
  6033                           ; 4 bytes @ 0x3C
  6034  00009C                     	ds	1
  6035  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6036                           	opt stack 0
  6037  00009D                     __find_nth_cluster@sector_in_buffer:
  6038                           	opt stack 0
  6039  00009D                     __make_cluster_chain@minimum_sector:
  6040                           	opt stack 0
  6041  00009D                     fat_get_file_size@file_size:
  6042                           	opt stack 0
  6043                           
  6044                           ; 4 bytes @ 0x3D
  6045  00009D                     	ds	1
  6046  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6047                           	opt stack 0
  6048                           
  6049                           ; 4 bytes @ 0x3E
  6050  00009E                     	ds	1
  6051  00009F                     __find_nth_cluster@sector:
  6052                           	opt stack 0
  6053  00009F                     __make_cluster_chain@different_sector_cluster:
  6054                           	opt stack 0
  6055                           
  6056                           ; 2 bytes @ 0x3F
  6057  00009F                     	ds	1
  6058  0000A0                     motor_schedule_command@distance_in_steps:
  6059                           	opt stack 0
  6060  0000A0                     __display_itoa@tmp:
  6061                           	opt stack 0
  6062                           
  6063                           ; 10 bytes @ 0x40
  6064  0000A0                     	ds	1
  6065  0000A1                     __make_cluster_chain@data_changed:
  6066                           	opt stack 0
  6067  0000A1                     fat_get_file_size@file_number:
  6068                           	opt stack 0
  6069  0000A1                     fat_read_from_file_fast@start_byte:
  6070                           	opt stack 0
  6071  0000A1                     fat_modify_file@start_byte:
  6072                           	opt stack 0
  6073                           
  6074                           ; 4 bytes @ 0x41
  6075  0000A1                     	ds	1
  6076  0000A2                     __make_cluster_chain@remaining_clusters:
  6077                           	opt stack 0
  6078  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6079                           	opt stack 0
  6080                           
  6081                           ; 4 bytes @ 0x42
  6082  0000A2                     	ds	2
  6083  0000A4                     __make_cluster_chain@sector:
  6084                           	opt stack 0
  6085  0000A4                     motor_schedule_command@speed:
  6086                           	opt stack 0
  6087                           
  6088                           ; 2 bytes @ 0x44
  6089  0000A4                     	ds	1
  6090  0000A5                     fat_modify_file@length:
  6091                           	opt stack 0
  6092  0000A5                     fat_read_from_file_fast@length:
  6093                           	opt stack 0
  6094                           
  6095                           ; 4 bytes @ 0x45
  6096  0000A5                     	ds	1
  6097  0000A6                     MSDProcessCommandMediaPresent@i:
  6098                           	opt stack 0
  6099  0000A6                     motor_schedule_command@direction:
  6100                           	opt stack 0
  6101  0000A6                     __make_cluster_chain@sector_in_buffer:
  6102                           	opt stack 0
  6103                           
  6104                           ; 2 bytes @ 0x46
  6105  0000A6                     	ds	1
  6106  0000A7                     ??_MSDProcessCommand:
  6107  0000A7                     motor_set_zero@direction:
  6108                           	opt stack 0
  6109  0000A7                     fat_modify_file@data:
  6110                           	opt stack 0
  6111  0000A7                     __parse_jump_steps@data:
  6112                           	opt stack 0
  6113  0000A7                     motor_go_to_steps_position@target_position:
  6114                           	opt stack 0
  6115  0000A7                     _motor_arc_move$8784:
  6116                           	opt stack 0
  6117                           
  6118                           ; 4 bytes @ 0x47
  6119  0000A7                     	ds	1
  6120  0000A8                     __make_cluster_chain@offset:
  6121                           	opt stack 0
  6122                           
  6123                           ; 2 bytes @ 0x48
  6124  0000A8                     	ds	1
  6125  0000A9                     ??_fat_modify_file:
  6126  0000A9                     fat_read_from_file_fast@data:
  6127                           	opt stack 0
  6128  0000A9                     __parse_jump_steps@out_buffer:
  6129                           	opt stack 0
  6130                           
  6131                           ; 2 bytes @ 0x49
  6132  0000A9                     	ds	1
  6133  0000AA                     __display_itoa@len:
  6134                           	opt stack 0
  6135  0000AA                     __make_cluster_chain@next_cluster:
  6136                           	opt stack 0
  6137                           
  6138                           ; 2 bytes @ 0x4A
  6139  0000AA                     	ds	1
  6140  0000AB                     ??_motor_go_to_steps_position:
  6141  0000AB                     __display_itoa@missing:
  6142                           	opt stack 0
  6143  0000AB                     motor_arc_move@direction:
  6144                           	opt stack 0
  6145  0000AB                     fat_read_from_file_fast@cluster:
  6146                           	opt stack 0
  6147  0000AB                     __parse_jump_steps@out_idx_ptr:
  6148                           	opt stack 0
  6149                           
  6150                           ; 2 bytes @ 0x4B
  6151  0000AB                     	ds	1
  6152  0000AC                     ??_MSDTasks:
  6153  0000AC                     __display_itoa@pos:
  6154                           	opt stack 0
  6155  0000AC                     fat_create_file@name:
  6156                           	opt stack 0
  6157  0000AC                     fat_resize_file@new_file_size:
  6158                           	opt stack 0
  6159  0000AC                     motor_arc_move@arc_in_steps:
  6160                           	opt stack 0
  6161                           
  6162                           ; 4 bytes @ 0x4C
  6163  0000AC                     	ds	1
  6164  0000AD                     ??__parse_jump_steps:
  6165  0000AD                     _MSDTasks$2588:
  6166                           	opt stack 0
  6167  0000AD                     fat_read_from_file_fast@cluster_number:
  6168                           	opt stack 0
  6169  0000AD                     __display_itoa_long@value:
  6170                           	opt stack 0
  6171                           
  6172                           ; 4 bytes @ 0x4D
  6173  0000AD                     	ds	1
  6174  0000AE                     __parse_jump_steps@return_value:
  6175                           	opt stack 0
  6176  0000AE                     fat_create_file@extension:
  6177                           	opt stack 0
  6178                           
  6179                           ; 2 bytes @ 0x4E
  6180  0000AE                     	ds	1
  6181  0000AF                     ??_fat_read_from_file_fast:
  6182  0000AF                     _MSDTasks$2589:
  6183                           	opt stack 0
  6184  0000AF                     __parse_jump_steps@number_of_steps:
  6185                           	opt stack 0
  6186                           
  6187                           ; 4 bytes @ 0x4F
  6188  0000AF                     	ds	1
  6189  0000B0                     ??_fat_resize_file:
  6190  0000B0                     fat_create_file@size:
  6191                           	opt stack 0
  6192                           
  6193                           ; 4 bytes @ 0x50
  6194  0000B0                     	ds	1
  6195  0000B1                     MSDTasks@i:
  6196                           	opt stack 0
  6197  0000B1                     __display_itoa_long@decimals:
  6198                           	opt stack 0
  6199                           
  6200                           ; 1 bytes @ 0x51
  6201  0000B1                     	ds	1
  6202  0000B2                     __display_itoa_long@text:
  6203                           	opt stack 0
  6204                           
  6205                           ; 2 bytes @ 0x52
  6206  0000B2                     	ds	1
  6207  0000B3                     __parse_command_long@data:
  6208                           	opt stack 0
  6209  0000B3                     motor_go_to_steps_position@overhead_cw:
  6210                           	opt stack 0
  6211                           
  6212                           ; 4 bytes @ 0x53
  6213  0000B3                     	ds	1
  6214  0000B4                     ??__display_itoa_long:
  6215  0000B4                     ??_fat_create_file:
  6216  0000B4                     fat_resize_file@old_number_of_clusters:
  6217                           	opt stack 0
  6218                           
  6219                           ; 2 bytes @ 0x54
  6220  0000B4                     	ds	1
  6221  0000B5                     fat_modify_file@sector:
  6222                           	opt stack 0
  6223  0000B5                     __parse_command_long@out_buffer:
  6224                           	opt stack 0
  6225                           
  6226                           ; 2 bytes @ 0x55
  6227  0000B5                     	ds	1
  6228  0000B6                     fat_resize_file@new_number_of_clusters:
  6229                           	opt stack 0
  6230                           
  6231                           ; 2 bytes @ 0x56
  6232  0000B6                     	ds	1
  6233  0000B7                     fat_modify_file@file_number:
  6234                           	opt stack 0
  6235  0000B7                     __parse_command_long@out_idx_ptr:
  6236                           	opt stack 0
  6237  0000B7                     motor_go_to_steps_position@overhead_ccw:
  6238                           	opt stack 0
  6239                           
  6240                           ; 4 bytes @ 0x57
  6241  0000B7                     	ds	1
  6242  0000B8                     __display_itoa_long@length:
  6243                           	opt stack 0
  6244  0000B8                     fat_modify_file@return_code:
  6245                           	opt stack 0
  6246  0000B8                     fat_create_file@number_of_clusters:
  6247                           	opt stack 0
  6248  0000B8                     fat_resize_file@first_cluster:
  6249                           	opt stack 0
  6250                           
  6251                           ; 2 bytes @ 0x58
  6252  0000B8                     	ds	1
  6253  0000B9                     __parse_command_long@length:
  6254                           	opt stack 0
  6255  0000B9                     __display_itoa_long@short_value:
  6256                           	opt stack 0
  6257  0000B9                     fat_modify_file@cluster:
  6258                           	opt stack 0
  6259                           
  6260                           ; 2 bytes @ 0x59
  6261  0000B9                     	ds	1
  6262  0000BA                     fat_resize_file@file_number:
  6263                           	opt stack 0
  6264  0000BA                     fat_create_file@first_cluster:
  6265                           	opt stack 0
  6266                           
  6267                           ; 2 bytes @ 0x5A
  6268  0000BA                     	ds	1
  6269  0000BB                     __display_itoa_long@last_digit:
  6270                           	opt stack 0
  6271  0000BB                     fat_read_from_file_fast@sector:
  6272                           	opt stack 0
  6273  0000BB                     fat_modify_file@offset:
  6274                           	opt stack 0
  6275  0000BB                     motor_go_to_steps_position@distance_cw:
  6276                           	opt stack 0
  6277  0000BB                     fat_resize_file@root:
  6278                           	opt stack 0
  6279                           
  6280                           ; 32 bytes @ 0x5B
  6281  0000BB                     	ds	1
  6282  0000BC                     ??_display_prepare:
  6283  0000BC                     fat_create_file@file_number:
  6284                           	opt stack 0
  6285                           
  6286                           ; 1 bytes @ 0x5C
  6287  0000BC                     	ds	1
  6288  0000BD                     fat_read_from_file_fast@working_cluster:
  6289                           	opt stack 0
  6290  0000BD                     fat_modify_file@number_of_bytes:
  6291                           	opt stack 0
  6292  0000BD                     fat_create_file@root_entry:
  6293                           	opt stack 0
  6294                           
  6295                           ; 32 bytes @ 0x5D
  6296  0000BD                     	ds	1
  6297  0000BE                     display_prepare@temp:
  6298                           	opt stack 0
  6299                           
  6300                           ; 10 bytes @ 0x5E
  6301  0000BE                     	ds	1
  6302  0000BF                     fat_read_from_file_fast@offset:
  6303                           	opt stack 0
  6304  0000BF                     fat_modify_file@position:
  6305                           	opt stack 0
  6306  0000BF                     motor_go_to_steps_position@distance_ccw:
  6307                           	opt stack 0
  6308                           
  6309                           ; 4 bytes @ 0x5F
  6310  0000BF                     	ds	2
  6311  0000C1                     fat_read_from_file_fast@needed_cluster:
  6312                           	opt stack 0
  6313                           
  6314                           ; 2 bytes @ 0x61
  6315  0000C1                     	ds	2
  6316  0000C3                     ??_motor_divide_jump:
  6317  0000C3                     __parse_command_short@cmd:
  6318                           	opt stack 0
  6319  0000C3                     fat_read_from_file_fast@read_length:
  6320                           	opt stack 0
  6321  0000C3                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6322                           	opt stack 0
  6323  0000C3                     fat_modify_file@root:
  6324                           	opt stack 0
  6325                           
  6326                           ; 32 bytes @ 0x63
  6327  0000C3                     	ds	1
  6328  0000C4                     api_parse@inBuffer:
  6329                           	opt stack 0
  6330  0000C4                     motor_divide_jump@target_position_in_steps:
  6331                           	opt stack 0
  6332                           
  6333                           ; 4 bytes @ 0x64
  6334  0000C4                     	ds	1
  6335  0000C5                     fat_read_from_file_fast@position:
  6336                           	opt stack 0
  6337                           
  6338                           ; 4 bytes @ 0x65
  6339  0000C5                     	ds	1
  6340  0000C6                     api_parse@receivedDataLength:
  6341                           	opt stack 0
  6342                           
  6343                           ; 1 bytes @ 0x66
  6344  0000C6                     	ds	1
  6345  0000C7                     api_parse@outBuffer:
  6346                           	opt stack 0
  6347  0000C7                     motor_divide_jump_to_nearest@nearest_divide_position:
  6348                           	opt stack 0
  6349                           
  6350                           ; 2 bytes @ 0x67
  6351  0000C7                     	ds	1
  6352  0000C8                     display_prepare@space:
  6353                           	opt stack 0
  6354  0000C8                     motor_divide_jump@target_divide_position:
  6355                           	opt stack 0
  6356                           
  6357                           ; 2 bytes @ 0x68
  6358  0000C8                     	ds	1
  6359  0000C9                     ??_api_parse:
  6360  0000C9                     display_prepare@cntr:
  6361                           	opt stack 0
  6362  0000C9                     fat_read_from_file@start_byte:
  6363                           	opt stack 0
  6364  0000C9                     motor_divide_jump_to_nearest@divide_position_float:
  6365                           	opt stack 0
  6366                           
  6367                           ; 4 bytes @ 0x69
  6368  0000C9                     	ds	2
  6369  0000CB                     api_parse@out_idx_ptr:
  6370                           	opt stack 0
  6371                           
  6372                           ; 2 bytes @ 0x6B
  6373  0000CB                     	ds	2
  6374  0000CD                     ??_encoder_statemachine:
  6375  0000CD                     api_parse@out_idx:
  6376                           	opt stack 0
  6377  0000CD                     fat_read_from_file@length:
  6378                           	opt stack 0
  6379                           
  6380                           ; 4 bytes @ 0x6D
  6381  0000CD                     	ds	1
  6382  0000CE                     api_parse@in_idx:
  6383                           	opt stack 0
  6384                           
  6385                           ; 1 bytes @ 0x6E
  6386  0000CE                     	ds	1
  6387  0000CF                     
  6388                           ; 1 bytes @ 0x6F
  6389  0000CF                     	ds	2
  6390  0000D1                     fat_read_from_file@data:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x71
  6394  0000D1                     	ds	2
  6395  0000D3                     ??_fat_read_from_file:
  6396                           
  6397                           ; 1 bytes @ 0x73
  6398  0000D3                     	ds	4
  6399  0000D7                     fat_read_from_file@file_number:
  6400                           	opt stack 0
  6401                           
  6402                           ; 1 bytes @ 0x77
  6403  0000D7                     	ds	1
  6404  0000D8                     fat_read_from_file@return_code:
  6405                           	opt stack 0
  6406                           
  6407                           ; 1 bytes @ 0x78
  6408  0000D8                     	ds	1
  6409  0000D9                     fat_read_from_file@cluster:
  6410                           	opt stack 0
  6411                           
  6412                           ; 2 bytes @ 0x79
  6413  0000D9                     	ds	2
  6414  0000DB                     fat_read_from_file@cluster_number:
  6415                           	opt stack 0
  6416                           
  6417                           ; 2 bytes @ 0x7B
  6418  0000DB                     	ds	2
  6419  0000DD                     fat_read_from_file@root:
  6420                           	opt stack 0
  6421                           
  6422                           ; 32 bytes @ 0x7D
  6423  0000DD                     	ds	6
  6424  0000E3                     ??_configFile_write:
  6425                           
  6426                           ; 1 bytes @ 0x83
  6427  0000E3                     	ds	1
  6428  0000E4                     configFile_write@file_number:
  6429                           	opt stack 0
  6430                           
  6431                           ; 1 bytes @ 0x84
  6432  0000E4                     	ds	1
  6433  0000E5                     configFile_write@file_size:
  6434                           	opt stack 0
  6435                           
  6436                           ; 4 bytes @ 0x85
  6437  0000E5                     	ds	24
  6438  0000FD                     main@startup_timer:
  6439                           	opt stack 0
  6440                           
  6441                           ; 1 bytes @ 0x9D
  6442  0000FD                     	ds	1
  6443                           tblptru	equ	0xFF8
  6444                           tblptrh	equ	0xFF7
  6445                           tblptrl	equ	0xFF6
  6446                           tablat	equ	0xFF5
  6447                           postinc0	equ	0xFEE
  6448                           wreg	equ	0xFE8
  6449                           postdec1	equ	0xFE5
  6450                           fsr1h	equ	0xFE2
  6451                           fsr1l	equ	0xFE1
  6452                           
  6453                           	psect	cstackCOMRAM
  6454  000001                     __pcstackCOMRAM:
  6455                           	opt stack 0
  6456  000001                     ??_USBStdGetDscHandler:
  6457  000001                     ??_USBStdGetStatusHandler:
  6458  000001                     ??i2__i2c_wait_idle:
  6459  000001                     ?i2_USBTransferOnePacket:
  6460                           	opt stack 0
  6461  000001                     ?i2_ExternalFlash_MediaInitialize:
  6462                           	opt stack 0
  6463  000001                     USBConfigureEndpoint@direction:
  6464                           	opt stack 0
  6465  000001                     USBCtrlTrfTxService@byteToSend:
  6466                           	opt stack 0
  6467  000001                     USBCtrlTrfRxService@i:
  6468                           	opt stack 0
  6469  000001                     i2USBTransferOnePacket@dir:
  6470                           	opt stack 0
  6471  000001                     i2USBStallEndpoint@dir:
  6472                           	opt stack 0
  6473  000001                     i2__i2c_send@dat:
  6474                           	opt stack 0
  6475  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6476                           	opt stack 0
  6477  000001                     i2ExternalFlash_MediaInitialize@config:
  6478                           	opt stack 0
  6479  000001                     i2ExternalFlash_MediaDetect@config:
  6480                           	opt stack 0
  6481  000001                     i2memcpy@d1:
  6482                           	opt stack 0
  6483  000001                     i2memset@p1:
  6484                           	opt stack 0
  6485                           
  6486                           ; 2 bytes @ 0x0
  6487  000001                     	ds	1
  6488  000002                     ??_USBConfigureEndpoint:
  6489  000002                     ??i2_USBStallEndpoint:
  6490  000002                     USBCtrlTrfRxService@byteToRead:
  6491                           	opt stack 0
  6492  000002                     USBCtrlTrfInHandler@lastDTS:
  6493                           	opt stack 0
  6494  000002                     USBStdGetStatusHandler@p:
  6495                           	opt stack 0
  6496  000002                     i2USBTransferOnePacket@data:
  6497                           	opt stack 0
  6498                           
  6499                           ; 2 bytes @ 0x1
  6500  000002                     	ds	1
  6501  000003                     i2SYSTEM_Initialize@pll_startup_counter_3132:
  6502                           	opt stack 0
  6503  000003                     i2memcpy@s1:
  6504                           	opt stack 0
  6505  000003                     i2memset@c:
  6506                           	opt stack 0
  6507                           
  6508                           ; 2 bytes @ 0x2
  6509  000003                     	ds	1
  6510  000004                     i2USBTransferOnePacket@len:
  6511                           	opt stack 0
  6512                           
  6513                           ; 1 bytes @ 0x3
  6514  000004                     	ds	1
  6515  000005                     ??i2_USBTransferOnePacket:
  6516  000005                     i2SYSTEM_Initialize@state:
  6517                           	opt stack 0
  6518  000005                     i2memcpy@n:
  6519                           	opt stack 0
  6520  000005                     i2memset@n:
  6521                           	opt stack 0
  6522                           
  6523                           ; 2 bytes @ 0x4
  6524  000005                     	ds	1
  6525  000006                     USBConfigureEndpoint@EPNum:
  6526                           	opt stack 0
  6527  000006                     i2USBStallEndpoint@ep:
  6528                           	opt stack 0
  6529  000006                     i2__i2c_eeprom_busy@busy:
  6530                           	opt stack 0
  6531  000006                     i2__i2c_write@data:
  6532                           	opt stack 0
  6533                           
  6534                           ; 2 bytes @ 0x5
  6535  000006                     	ds	1
  6536  000007                     USBConfigureEndpoint@handle:
  6537                           	opt stack 0
  6538  000007                     i2USBStallEndpoint@p:
  6539                           	opt stack 0
  6540  000007                     i2memcpy@d:
  6541                           	opt stack 0
  6542  000007                     i2memset@p:
  6543                           	opt stack 0
  6544                           
  6545                           ; 2 bytes @ 0x6
  6546  000007                     	ds	1
  6547  000008                     i2__i2c_write@length:
  6548                           	opt stack 0
  6549                           
  6550                           ; 1 bytes @ 0x7
  6551  000008                     	ds	1
  6552  000009                     USBEnableEndpoint@options:
  6553                           	opt stack 0
  6554  000009                     i2USBDeviceInit@i:
  6555                           	opt stack 0
  6556  000009                     i2USBTransferOnePacket@ep:
  6557                           	opt stack 0
  6558  000009                     i2__i2c_write@slave_address:
  6559                           	opt stack 0
  6560  000009                     i2memcpy@s:
  6561                           	opt stack 0
  6562                           
  6563                           ; 2 bytes @ 0x8
  6564  000009                     	ds	1
  6565  00000A                     i2__i2c_write@cntr:
  6566                           	opt stack 0
  6567  00000A                     USBEnableEndpoint@p:
  6568                           	opt stack 0
  6569  00000A                     i2USBTransferOnePacket@handle:
  6570                           	opt stack 0
  6571                           
  6572                           ; 2 bytes @ 0x9
  6573  00000A                     	ds	1
  6574  00000B                     i2memcpy@tmp:
  6575                           	opt stack 0
  6576  00000B                     i2c_eeprom_write@address:
  6577                           	opt stack 0
  6578                           
  6579                           ; 2 bytes @ 0xA
  6580  00000B                     	ds	1
  6581  00000C                     ??_USBMSDInit:
  6582  00000C                     USBEnableEndpoint@ep:
  6583                           	opt stack 0
  6584  00000C                     _USBCheckMSDRequest$2534:
  6585                           	opt stack 0
  6586  00000C                     MSDTransferTerminated@handle:
  6587                           	opt stack 0
  6588                           
  6589                           ; 2 bytes @ 0xB
  6590  00000C                     	ds	1
  6591  00000D                     i2c_eeprom_write@data:
  6592                           	opt stack 0
  6593                           
  6594                           ; 2 bytes @ 0xC
  6595  00000D                     	ds	1
  6596  00000E                     _USBCheckMSDRequest$2535:
  6597                           	opt stack 0
  6598  00000E                     _MSDTransferTerminated$2623:
  6599                           	opt stack 0
  6600                           
  6601                           ; 2 bytes @ 0xD
  6602  00000E                     	ds	1
  6603  00000F                     i2c_eeprom_write@length:
  6604                           	opt stack 0
  6605                           
  6606                           ; 1 bytes @ 0xE
  6607  00000F                     	ds	1
  6608  000010                     ??_i2c_eeprom_write:
  6609  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6610                           	opt stack 0
  6611                           
  6612                           ; 2 bytes @ 0xF
  6613  000010                     	ds	2
  6614  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6615                           	opt stack 0
  6616                           
  6617                           ; 2 bytes @ 0x11
  6618  000012                     	ds	1
  6619  000013                     i2c_eeprom_write@dat:
  6620                           	opt stack 0
  6621                           
  6622                           ; 17 bytes @ 0x12
  6623  000013                     	ds	1
  6624  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6625                           	opt stack 0
  6626                           
  6627                           ; 2 bytes @ 0x13
  6628  000014                     	ds	2
  6629  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6630                           
  6631                           ; 1 bytes @ 0x15
  6632  000016                     	ds	2
  6633  000018                     ??_USBStdFeatureReqHandler:
  6634  000018                     USBStdSetCfgHandler@i:
  6635                           	opt stack 0
  6636                           
  6637                           ; 1 bytes @ 0x17
  6638  000018                     	ds	1
  6639  000019                     USBStdFeatureReqHandler@pUEP:
  6640                           	opt stack 0
  6641                           
  6642                           ; 2 bytes @ 0x18
  6643  000019                     	ds	2
  6644  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6645                           	opt stack 0
  6646                           
  6647                           ; 1 bytes @ 0x1A
  6648  00001B                     	ds	1
  6649  00001C                     USBStdFeatureReqHandler@p:
  6650                           	opt stack 0
  6651                           
  6652                           ; 2 bytes @ 0x1B
  6653  00001C                     	ds	2
  6654  00001E                     ??_USBCtrlEPService:
  6655  00001E                     
  6656                           ; 1 bytes @ 0x1D
  6657  00001E                     	ds	1
  6658  00001F                     USBDeviceTasks@i:
  6659                           	opt stack 0
  6660                           
  6661                           ; 1 bytes @ 0x1E
  6662  00001F                     	ds	5
  6663  000024                     i2c_eeprom_write@slave_address:
  6664                           	opt stack 0
  6665                           
  6666                           ; 1 bytes @ 0x23
  6667  000024                     	ds	1
  6668  000025                     i2c_eeprom_write@cntr:
  6669                           	opt stack 0
  6670                           
  6671                           ; 1 bytes @ 0x24
  6672  000025                     	ds	1
  6673  000026                     i2c_eeprom_writeUint32@address:
  6674                           	opt stack 0
  6675                           
  6676                           ; 2 bytes @ 0x25
  6677  000026                     	ds	2
  6678  000028                     i2c_eeprom_writeUint32@data:
  6679                           	opt stack 0
  6680                           
  6681                           ; 4 bytes @ 0x27
  6682  000028                     	ds	4
  6683  00002C                     ??_motor_isr:
  6684  00002C                     
  6685                           ; 1 bytes @ 0x2B
  6686  00002C                     	ds	16
  6687  00003C                     motor_isr@steps_until_standstill:
  6688                           	opt stack 0
  6689                           
  6690                           ; 2 bytes @ 0x3B
  6691  00003C                     	ds	2
  6692  00003E                     motor_isr@steps_until_standstill_if_accelerate:
  6693                           	opt stack 0
  6694                           
  6695                           ; 2 bytes @ 0x3D
  6696  00003E                     	ds	2
  6697  000040                     motor_isr@steps_remaining:
  6698                           	opt stack 0
  6699                           
  6700                           ; 4 bytes @ 0x3F
  6701  000040                     	ds	4
  6702  000044                     ??_SYS_InterruptHigh:
  6703                           
  6704                           ; 1 bytes @ 0x43
  6705  000044                     	ds	14
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           postinc0	equ	0xFEE
  6711                           wreg	equ	0xFE8
  6712                           postdec1	equ	0xFE5
  6713                           fsr1h	equ	0xFE2
  6714                           fsr1l	equ	0xFE1
  6715                           
  6716 ;;
  6717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6718 ;;
  6719 ;; *************** function _main *****************
  6720 ;; Defined at:
  6721 ;;		line 49 in file "main.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;Total ram usage:        1 bytes
  6740 ;; Hardware stack levels required when called:   22
  6741 ;; This function calls:
  6742 ;;		_APP_DeviceCustomHIDTasks
  6743 ;;		_APP_DeviceMSDTasks
  6744 ;;		_SYSTEM_Initialize
  6745 ;;		_USBDeviceAttach
  6746 ;;		_USBDeviceInit
  6747 ;;		_adc_read_temperature
  6748 ;;		_display_prepare
  6749 ;;		_display_update
  6750 ;;		_encoder_statemachine
  6751 ;;		_motor_calculate_position_in_degrees
  6752 ;;		_motor_process_cue
  6753 ;;		_system_init
  6754 ;; This function is called by:
  6755 ;;		Startup code after reset
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text0
  6760  013802                     __ptext0:
  6761                           	opt stack 0
  6762  013802                     _main:
  6763                           	opt stack 9
  6764                           
  6765                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6766                           
  6767                           ;incstack = 0
  6768  013802  EC5C  F08C         	call	_system_init	;wreg free
  6769                           
  6770                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6771  013806  0E00               	movlw	0
  6772  013808  ECF0  F0A2         	call	_SYSTEM_Initialize
  6773                           
  6774                           ;main.c: 59: USBDeviceInit();
  6775  01380C  EC2B  F07F         	call	_USBDeviceInit	;wreg free
  6776                           
  6777                           ;main.c: 60: USBDeviceAttach();
  6778  013810  EC87  F0A9         	call	_USBDeviceAttach	;wreg free
  6779                           
  6780                           ;main.c: 63: startup_timer = 150;
  6781  013814  0E96               	movlw	150
  6782  013816  0100               	movlb	0	; () banked
  6783  013818  6FFD               	movwf	main@startup_timer& (0+255),b
  6784                           
  6785                           ;main.c: 64: while(startup_timer)
  6786  01381A  D009               	goto	l863
  6787  01381C                     
  6788                           ; BSR set to: 0
  6789                           ;main.c: 65: {;main.c: 66: if(!os.done)
  6790                           
  6791                           ; BSR set to: 0
  6792  01381C  0101               	movlb	1	; () banked
  6793  01381E  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6794  013820  A4D8               	btfss	status,2,c
  6795  013822  D005               	goto	l863
  6796                           
  6797                           ; BSR set to: 1
  6798                           ;main.c: 67: {;main.c: 68: --startup_timer;
  6799  013824  0100               	movlb	0	; () banked
  6800  013826  07FD               	decf	main@startup_timer& (0+255),f,b
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;main.c: 69: os.done = 1;
  6804  013828  0E01               	movlw	1
  6805  01382A  0101               	movlb	1	; () banked
  6806  01382C  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6807  01382E                     l863:
  6808                           
  6809                           ; BSR set to: 1
  6810                           
  6811                           ; BSR set to: 1
  6812  01382E  0100               	movlb	0	; () banked
  6813  013830  51FD               	movf	main@startup_timer& (0+255),w,b
  6814  013832  A4D8               	btfss	status,2,c
  6815  013834  D7F3               	goto	l862
  6816  013836                     u18700:
  6817                           
  6818                           ;main.c: 74: {;main.c: 76: APP_DeviceMSDTasks();
  6819                           
  6820                           ; BSR set to: 0
  6821                           
  6822                           ;main.c: 70: };main.c: 71: };main.c: 73: while(1)
  6823                           
  6824                           ; BSR set to: 0
  6825  013836  EC43  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6826                           
  6827                           ;main.c: 78: if(!os.done)
  6828  01383A  0101               	movlb	1	; () banked
  6829  01383C  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6830  01383E  A4D8               	btfss	status,2,c
  6831  013840  D7FA               	goto	u18700
  6832                           
  6833                           ; BSR set to: 1
  6834  013842  0004               	clrwdt		;# 
  6835                           
  6836                           ;main.c: 84: APP_DeviceCustomHIDTasks();
  6837  013844  ECB6  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6838                           
  6839                           ;main.c: 87: encoder_statemachine();
  6840  013848  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6841                           
  6842                           ;main.c: 90: motor_process_cue();
  6843  01384C  ECC3  F09E         	call	_motor_process_cue	;wreg free
  6844                           
  6845                           ;main.c: 93: adc_read_temperature();
  6846  013850  EC17  F079         	call	_adc_read_temperature	;wreg free
  6847                           
  6848                           ;main.c: 96: switch(os.timeSlot)
  6849  013854  D008               	goto	l867
  6850  013856                     
  6851                           ;main.c: 107: motor_calculate_position_in_degrees();
  6852  013856  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
  6853  01385A                     
  6854                           ;main.c: 110: display_prepare();
  6855  01385A  EC98  F051         	call	_display_prepare	;wreg free
  6856                           
  6857                           ;main.c: 111: break;
  6858  01385E  D014               	goto	l869
  6859  013860                     
  6860                           ;main.c: 114: display_update();
  6861  013860  ECCC  F0A8         	call	_display_update	;wreg free
  6862                           
  6863                           ;main.c: 116: }
  6864                           
  6865                           ;main.c: 115: break;
  6866  013864  D011               	goto	l869
  6867  013866                     l867:
  6868  013866  0101               	movlb	1	; () banked
  6869  013868  5172               	movf	(_os+1)& (0+255),w,b	;volatile
  6870                           
  6871                           ; Switch size 1, requested type "space"
  6872                           ; Number of cases is 5, Range of values is 0 to 7
  6873                           ; switch strategies available:
  6874                           ; Name         Instructions Cycles
  6875                           ; simple_byte           16     9 (average)
  6876                           ;	Chosen strategy is simple_byte
  6877  01386A  0A00               	xorlw	0	; case 0
  6878  01386C  B4D8               	btfsc	status,2,c
  6879  01386E  D00C               	goto	l869
  6880  013870  0A01               	xorlw	1	; case 1
  6881  013872  B4D8               	btfsc	status,2,c
  6882  013874  D009               	goto	l869
  6883  013876  0A04               	xorlw	4	; case 5
  6884  013878  B4D8               	btfsc	status,2,c
  6885  01387A  D7ED               	goto	l871
  6886  01387C  0A03               	xorlw	3	; case 6
  6887  01387E  B4D8               	btfsc	status,2,c
  6888  013880  D7EC               	goto	l872
  6889  013882  0A01               	xorlw	1	; case 7
  6890  013884  B4D8               	btfsc	status,2,c
  6891  013886  D7EC               	goto	l873
  6892  013888                     l869:
  6893                           
  6894                           ;main.c: 118: os.done = 1;
  6895                           
  6896                           ; BSR set to: 1
  6897  013888  0E01               	movlw	1
  6898  01388A  0101               	movlb	1	; () banked
  6899  01388C  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6900                           
  6901                           ; BSR set to: 1
  6902                           
  6903                           ; BSR set to: 1
  6904  01388E  D7D3               	goto	u18700
  6905  013890                     __end_of_main:
  6906                           	opt stack 0
  6907                           tblptru	equ	0xFF8
  6908                           tblptrh	equ	0xFF7
  6909                           tblptrl	equ	0xFF6
  6910                           tablat	equ	0xFF5
  6911                           postinc0	equ	0xFEE
  6912                           wreg	equ	0xFE8
  6913                           postdec1	equ	0xFE5
  6914                           fsr1h	equ	0xFE2
  6915                           fsr1l	equ	0xFE1
  6916                           status	equ	0xFD8
  6917                           
  6918 ;; *************** function _system_init *****************
  6919 ;; Defined at:
  6920 ;;		line 177 in file "os.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:   20
  6941 ;; This function calls:
  6942 ;;		__backlight_init
  6943 ;;		__system_pin_setup
  6944 ;;		__system_timer0_init
  6945 ;;		_adc_init
  6946 ;;		_configFile_read
  6947 ;;		_configFile_readDefault
  6948 ;;		_configFile_write
  6949 ;;		_display_init
  6950 ;;		_display_update
  6951 ;;		_encoder_init
  6952 ;;		_fat_init
  6953 ;;		_flash_init
  6954 ;;		_i2c_eeprom_readUint32
  6955 ;;		_i2c_init
  6956 ;;		_motor_calculate_position_in_degrees
  6957 ;;		_motor_init
  6958 ;; This function is called by:
  6959 ;;		_main
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text1
  6964  0118B8                     __ptext1:
  6965                           	opt stack 0
  6966  0118B8                     _system_init:
  6967                           	opt stack 10
  6968                           
  6969                           ;os.c: 180: _system_pin_setup();
  6970                           
  6971                           ; BSR set to: 1
  6972                           ;incstack = 0
  6973  0118B8  EC48  F0A0         	call	__system_pin_setup	;wreg free
  6974                           
  6975                           ;os.c: 183: adc_init();
  6976  0118BC  ECCF  F0A3         	call	_adc_init	;wreg free
  6977                           
  6978                           ;os.c: 186: flash_init();
  6979  0118C0  EC64  F0AC         	call	_flash_init	;wreg free
  6980                           
  6981                           ;os.c: 189: fat_init();
  6982  0118C4  EC4C  F0AC         	call	_fat_init	;wreg free
  6983                           
  6984                           ;os.c: 192: encoder_init();
  6985  0118C8  EC3A  F0AB         	call	_encoder_init	;wreg free
  6986                           
  6987                           ;os.c: 195: i2c_init();
  6988  0118CC  ECD3  F0AB         	call	_i2c_init	;wreg free
  6989                           
  6990                           ;os.c: 198: display_init();
  6991  0118D0  EC76  F0A8         	call	_display_init	;wreg free
  6992                           
  6993                           ;os.c: 199: display_update();
  6994  0118D4  ECCC  F0A8         	call	_display_update	;wreg free
  6995                           
  6996                           ;os.c: 200: _backlight_init();
  6997  0118D8  ECB8  F0AC         	call	__backlight_init	;wreg free
  6998                           
  6999                           ;os.c: 203: motor_init();
  7000  0118DC  ECC4  F0AB         	call	_motor_init	;wreg free
  7001                           
  7002                           ;os.c: 206: configFile_readDefault();
  7003  0118E0  ECE3  F0A0         	call	_configFile_readDefault	;wreg free
  7004                           
  7005                           ;os.c: 209: configFile_read();
  7006  0118E4  ECDD  F07A         	call	_configFile_read	;wreg free
  7007                           
  7008                           ;os.c: 212: configFile_write();
  7009  0118E8  ECCA  F060         	call	_configFile_write	;wreg free
  7010                           
  7011                           ;os.c: 215: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7012  0118EC  0E01               	movlw	1
  7013  0118EE  0101               	movlb	1	; () banked
  7014  0118F0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  7015                           
  7016                           ; BSR set to: 1
  7017                           ;os.c: 216: os.busy = 0;
  7018  0118F2  0E00               	movlw	0
  7019  0118F4  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
  7020                           
  7021                           ; BSR set to: 1
  7022                           ;os.c: 218: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7023  0118F6  0E01               	movlw	1
  7024  0118F8  6F80               	movwf	(_os+15)& (0+255),b	;volatile
  7025                           
  7026                           ; BSR set to: 1
  7027                           ;os.c: 219: os.setup_step_size = 1000;
  7028  0118FA  0E03               	movlw	3
  7029  0118FC  6F82               	movwf	(_os+17)& (0+255),b	;volatile
  7030  0118FE  0EE8               	movlw	232
  7031  011900  6F81               	movwf	(_os+16)& (0+255),b	;volatile
  7032                           
  7033                           ; BSR set to: 1
  7034                           ;os.c: 220: os.approach_direction = MOTOR_DIRECTION_CW;
  7035  011902  0E01               	movlw	1
  7036  011904  6F83               	movwf	(_os+18)& (0+255),b	;volatile
  7037                           
  7038                           ; BSR set to: 1
  7039                           ;os.c: 221: os.division = 36;
  7040  011906  0E00               	movlw	0
  7041  011908  6F85               	movwf	(_os+20)& (0+255),b	;volatile
  7042  01190A  0E24               	movlw	36
  7043  01190C  6F84               	movwf	(_os+19)& (0+255),b	;volatile
  7044                           
  7045                           ; BSR set to: 1
  7046                           ;os.c: 222: os.divide_step_size = 10;
  7047  01190E  0E0A               	movlw	10
  7048  011910  6F86               	movwf	(_os+21)& (0+255),b	;volatile
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;os.c: 223: os.divide_position = 0;
  7052  011912  0E00               	movlw	0
  7053  011914  6F88               	movwf	(_os+23)& (0+255),b	;volatile
  7054  011916  0E00               	movlw	0
  7055  011918  6F87               	movwf	(_os+22)& (0+255),b	;volatile
  7056                           
  7057                           ; BSR set to: 1
  7058                           ;os.c: 224: os.divide_jump_size = 1;
  7059  01191A  0E00               	movlw	0
  7060  01191C  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
  7061  01191E  0E01               	movlw	1
  7062  011920  6F89               	movwf	(_os+24)& (0+255),b	;volatile
  7063                           
  7064                           ; BSR set to: 1
  7065                           ;os.c: 225: os.arc_step_size = 1000;
  7066  011922  0E03               	movlw	3
  7067  011924  6F8C               	movwf	(_os+27)& (0+255),b	;volatile
  7068  011926  0EE8               	movlw	232
  7069  011928  6F8B               	movwf	(_os+26)& (0+255),b	;volatile
  7070                           
  7071                           ; BSR set to: 1
  7072                           ;os.c: 226: os.arc_size = 1000;
  7073  01192A  0EE8               	movlw	232
  7074  01192C  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
  7075  01192E  0E03               	movlw	3
  7076  011930  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
  7077  011932  0E00               	movlw	0
  7078  011934  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
  7079  011936  0E00               	movlw	0
  7080  011938  6F90               	movwf	(_os+31)& (0+255),b	;volatile
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;os.c: 227: os.arc_speed = config.initial_speed_arc;
  7084  01193A  C1AE  F191         	movff	_config+13,_os+32	;volatile
  7085  01193E  C1AF  F192         	movff	_config+14,_os+33	;volatile
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;os.c: 228: os.arc_direction = MOTOR_DIRECTION_CW;
  7089  011942  0E01               	movlw	1
  7090  011944  6F93               	movwf	(_os+34)& (0+255),b	;volatile
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;os.c: 229: os.manual_speed = config.initial_speed_manual;
  7094  011946  C1B2  F194         	movff	_config+17,_os+35	;volatile
  7095  01194A  C1B3  F195         	movff	_config+18,_os+36	;volatile
  7096                           
  7097                           ; BSR set to: 1
  7098                           ;os.c: 230: os.manual_direction = MOTOR_DIRECTION_CW;
  7099  01194E  0E01               	movlw	1
  7100  011950  6F96               	movwf	(_os+37)& (0+255),b	;volatile
  7101                           
  7102                           ; BSR set to: 1
  7103                           ;os.c: 231: os.beep_count = 0;
  7104  011952  0E00               	movlw	0
  7105  011954  6F97               	movwf	(_os+38)& (0+255),b	;volatile
  7106                           
  7107                           ; BSR set to: 1
  7108                           ;os.c: 234: os.current_position_in_steps = i2c_eeprom_readUint32(0x200);
  7109  011956  0E02               	movlw	2
  7110  011958  0100               	movlb	0	; () banked
  7111  01195A  6F7A               	movwf	(i2c_eeprom_readUint32@address+1)& (0+255),b
  7112  01195C  0E00               	movlw	0
  7113  01195E  6F79               	movwf	i2c_eeprom_readUint32@address& (0+255),b
  7114  011960  EC2E  F0AA         	call	_i2c_eeprom_readUint32	;wreg free
  7115  011964  C079  F178         	movff	?_i2c_eeprom_readUint32,_os+7	;volatile
  7116  011968  C07A  F179         	movff	?_i2c_eeprom_readUint32+1,_os+8	;volatile
  7117  01196C  C07B  F17A         	movff	?_i2c_eeprom_readUint32+2,_os+9	;volatile
  7118  011970  C07C  F17B         	movff	?_i2c_eeprom_readUint32+3,_os+10	;volatile
  7119                           
  7120                           ;os.c: 235: if(os.current_position_in_steps>config.full_circle_in_steps)
  7121  011974  0101               	movlb	1	; () banked
  7122  011976  5178               	movf	(_os+7)& (0+255),w,b	;volatile
  7123  011978  5DA1               	subwf	_config& (0+255),w,b
  7124  01197A  5179               	movf	(_os+8)& (0+255),w,b	;volatile
  7125  01197C  59A2               	subwfb	(_config+1)& (0+255),w,b
  7126  01197E  517A               	movf	(_os+9)& (0+255),w,b	;volatile
  7127  011980  59A3               	subwfb	(_config+2)& (0+255),w,b
  7128  011982  517B               	movf	(_os+10)& (0+255),w,b	;volatile
  7129  011984  59A4               	subwfb	(_config+3)& (0+255),w,b
  7130  011986  B0D8               	btfsc	status,0,c
  7131  011988  D008               	goto	l1082
  7132                           
  7133                           ; BSR set to: 1
  7134                           ;os.c: 236: {;os.c: 237: os.current_position_in_steps = 0;
  7135  01198A  0E00               	movlw	0
  7136  01198C  6F78               	movwf	(_os+7)& (0+255),b	;volatile
  7137  01198E  0E00               	movlw	0
  7138  011990  6F79               	movwf	(_os+8)& (0+255),b	;volatile
  7139  011992  0E00               	movlw	0
  7140  011994  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
  7141  011996  0E00               	movlw	0
  7142  011998  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
  7143  01199A                     l1082:
  7144                           
  7145                           ; BSR set to: 1
  7146                           ;os.c: 238: };os.c: 239: motor_calculate_position_in_degrees();
  7147                           
  7148                           ; BSR set to: 1
  7149  01199A  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
  7150                           
  7151                           ;os.c: 242: _system_timer0_init();
  7152  01199E  EC44  F0AA         	call	__system_timer0_init	;wreg free
  7153  0119A2  0012               	return		;funcret
  7154  0119A4                     __end_of_system_init:
  7155                           	opt stack 0
  7156                           tblptru	equ	0xFF8
  7157                           tblptrh	equ	0xFF7
  7158                           tblptrl	equ	0xFF6
  7159                           tablat	equ	0xFF5
  7160                           postinc0	equ	0xFEE
  7161                           wreg	equ	0xFE8
  7162                           postdec1	equ	0xFE5
  7163                           fsr1h	equ	0xFE2
  7164                           fsr1l	equ	0xFE1
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _motor_init *****************
  7168 ;; Defined at:
  7169 ;;		line 184 in file "motor.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:   10
  7190 ;; This function calls:
  7191 ;;		Nothing
  7192 ;; This function is called by:
  7193 ;;		_system_init
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text2
  7198  015788                     __ptext2:
  7199                           	opt stack 0
  7200  015788                     _motor_init:
  7201                           	opt stack 19
  7202                           
  7203                           ;motor.c: 187: motor_cue_read_index = 0;
  7204                           
  7205                           ;incstack = 0
  7206  015788  0E00               	movlw	0
  7207  01578A  0101               	movlb	1	; () banked
  7208  01578C  6F58               	movwf	_motor_cue_read_index& (0+255),b
  7209                           
  7210                           ;motor.c: 188: motor_cue_write_index = 0;
  7211  01578E  0E00               	movlw	0
  7212  015790  6F57               	movwf	_motor_cue_write_index& (0+255),b
  7213                           
  7214                           ; BSR set to: 1
  7215                           ;motor.c: 194: CCPTMRS0bits.C2TSEL = 0b000;
  7216  015792  010F               	movlb	15	; () banked
  7217  015794  9752               	bcf	82,3,b	;volatile
  7218  015796  9952               	bcf	82,4,b	;volatile
  7219  015798  9B52               	bcf	82,5,b	;volatile
  7220                           
  7221                           ;motor.c: 199: CCP1CONbits.P1M = 0b00;
  7222  01579A  0E3F               	movlw	-193
  7223  01579C  16BA               	andwf	4026,f,c	;volatile
  7224                           
  7225                           ;motor.c: 202: CCP1CONbits.DC1B = 0b00;
  7226  01579E  0ECF               	movlw	-49
  7227  0157A0  16BA               	andwf	4026,f,c	;volatile
  7228                           
  7229                           ; BSR set to: 15
  7230                           ;motor.c: 205: LATBbits.LB0 = 0;
  7231  0157A2  908A               	bcf	3978,0,c	;volatile
  7232                           
  7233                           ; BSR set to: 15
  7234  0157A4  0012               	return		;funcret
  7235  0157A6                     __end_of_motor_init:
  7236                           	opt stack 0
  7237                           tblptru	equ	0xFF8
  7238                           tblptrh	equ	0xFF7
  7239                           tblptrl	equ	0xFF6
  7240                           tablat	equ	0xFF5
  7241                           postinc0	equ	0xFEE
  7242                           wreg	equ	0xFE8
  7243                           postdec1	equ	0xFE5
  7244                           fsr1h	equ	0xFE2
  7245                           fsr1l	equ	0xFE1
  7246                           status	equ	0xFD8
  7247                           
  7248 ;; *************** function _i2c_init *****************
  7249 ;; Defined at:
  7250 ;;		line 24 in file "i2c.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      void 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:   10
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_system_init
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text3
  7279  0157A6                     __ptext3:
  7280                           	opt stack 0
  7281  0157A6                     _i2c_init:
  7282                           	opt stack 19
  7283                           
  7284                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  7285                           
  7286                           ; BSR set to: 15
  7287                           ;incstack = 0
  7288  0157A6  8A93               	bsf	3987,5,c	;volatile
  7289                           
  7290                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  7291  0157A8  8893               	bsf	3987,4,c	;volatile
  7292                           
  7293                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  7294  0157AA  8EC7               	bsf	4039,7,c	;volatile
  7295                           
  7296                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  7297  0157AC  9CC7               	bcf	4039,6,c	;volatile
  7298                           
  7299                           ;i2c.c: 32: SSP1ADD = 119;
  7300  0157AE  0E77               	movlw	119
  7301  0157B0  6EC8               	movwf	4040,c	;volatile
  7302                           
  7303                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  7304  0157B2  9EC6               	bcf	4038,7,c	;volatile
  7305                           
  7306                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  7307  0157B4  9CC6               	bcf	4038,6,c	;volatile
  7308                           
  7309                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  7310  0157B6  50C6               	movf	4038,w,c	;volatile
  7311  0157B8  0BF0               	andlw	-16
  7312  0157BA  0908               	iorlw	8
  7313  0157BC  6EC6               	movwf	4038,c	;volatile
  7314                           
  7315                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  7316  0157BE  8AC6               	bsf	4038,5,c	;volatile
  7317  0157C0  0012               	return		;funcret
  7318  0157C2                     __end_of_i2c_init:
  7319                           	opt stack 0
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           postinc0	equ	0xFEE
  7325                           wreg	equ	0xFE8
  7326                           postdec1	equ	0xFE5
  7327                           fsr1h	equ	0xFE2
  7328                           fsr1l	equ	0xFE1
  7329                           status	equ	0xFD8
  7330                           
  7331 ;; *************** function _i2c_eeprom_readUint32 *****************
  7332 ;; Defined at:
  7333 ;;		line 235 in file "i2c.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  address         2   25[BANK0 ] unsigned int 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  data            4   29[BANK0 ] unsigned long 
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  4   25[BANK0 ] unsigned long 
  7340 ;; Registers used:
  7341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7348 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;Total ram usage:        8 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:   13
  7354 ;; This function calls:
  7355 ;;		_i2c_eeprom_read
  7356 ;; This function is called by:
  7357 ;;		_system_init
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           	psect	text4
  7362  01545C                     __ptext4:
  7363                           	opt stack 0
  7364  01545C                     _i2c_eeprom_readUint32:
  7365                           	opt stack 16
  7366                           
  7367                           ;i2c.c: 237: uint32_t data;;i2c.c: 238: i2c_eeprom_read(address, &data, 4);
  7368                           
  7369                           ;incstack = 0
  7370  01545C  C079  F071         	movff	i2c_eeprom_readUint32@address,i2c_eeprom_read@address
  7371  015460  C07A  F072         	movff	i2c_eeprom_readUint32@address+1,i2c_eeprom_read@address+1
  7372  015464  0E7D               	movlw	low i2c_eeprom_readUint32@data
  7373  015466  0100               	movlb	0	; () banked
  7374  015468  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7375  01546A  0E00               	movlw	high i2c_eeprom_readUint32@data
  7376  01546C  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7377  01546E  0E04               	movlw	4
  7378  015470  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7379  015472  EC7F  F0A4         	call	_i2c_eeprom_read	;wreg free
  7380                           
  7381                           ;i2c.c: 239: return data;
  7382  015476  C07D  F079         	movff	i2c_eeprom_readUint32@data,?_i2c_eeprom_readUint32
  7383  01547A  C07E  F07A         	movff	i2c_eeprom_readUint32@data+1,?_i2c_eeprom_readUint32+1
  7384  01547E  C07F  F07B         	movff	i2c_eeprom_readUint32@data+2,?_i2c_eeprom_readUint32+2
  7385  015482  C080  F07C         	movff	i2c_eeprom_readUint32@data+3,?_i2c_eeprom_readUint32+3
  7386  015486  0012               	return	
  7387  015488                     __end_of_i2c_eeprom_readUint32:
  7388                           	opt stack 0
  7389                           tblptru	equ	0xFF8
  7390                           tblptrh	equ	0xFF7
  7391                           tblptrl	equ	0xFF6
  7392                           tablat	equ	0xFF5
  7393                           postinc0	equ	0xFEE
  7394                           wreg	equ	0xFE8
  7395                           postdec1	equ	0xFE5
  7396                           fsr1h	equ	0xFE2
  7397                           fsr1l	equ	0xFE1
  7398                           status	equ	0xFD8
  7399                           
  7400 ;; *************** function _i2c_eeprom_read *****************
  7401 ;; Defined at:
  7402 ;;		line 263 in file "i2c.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  address         2   17[BANK0 ] unsigned int 
  7405 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7406 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), 
  7407 ;;  length          1   21[BANK0 ] unsigned char 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7410 ;;  addr            1   23[BANK0 ] unsigned char 
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7420 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;Total ram usage:        8 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:   12
  7427 ;; This function calls:
  7428 ;;		__i2c_eeprom_busy
  7429 ;;		__i2c_read
  7430 ;;		__i2c_write
  7431 ;; This function is called by:
  7432 ;;		_i2c_eeprom_readUint32
  7433 ;;		_i2c_eeprom_readUint16
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text5
  7438  0148FE                     __ptext5:
  7439                           	opt stack 0
  7440  0148FE                     _i2c_eeprom_read:
  7441                           	opt stack 16
  7442                           
  7443                           ;i2c.c: 265: uint8_t slave_address;;i2c.c: 266: uint8_t addr;;i2c.c: 267: addr = address
      +                           & 0xFF;
  7444                           
  7445                           ;incstack = 0
  7446  0148FE  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7447                           
  7448                           ;i2c.c: 268: address &= 0b0000011100000000;
  7449  014902  0100               	movlb	0	; () banked
  7450  014904  0E00               	movlw	0
  7451  014906  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7452  014908  0E07               	movlw	7
  7453  01490A  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7454                           
  7455                           ;i2c.c: 269: address >>= 7;
  7456  01490C  0E07               	movlw	7
  7457  01490E  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7458  014910                     u14115:
  7459  014910  90D8               	bcf	status,0,c
  7460  014912  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7461  014914  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7462  014916  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7463  014918  D7FB               	goto	u14115
  7464                           
  7465                           ;i2c.c: 270: slave_address = 0b10100000 | address;
  7466  01491A  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7467  01491C  09A0               	iorlw	160
  7468  01491E  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7469  014920                     
  7470                           ; BSR set to: 0
  7471                           
  7472                           ; BSR set to: 0
  7473  014920  ECC4  F0AA         	call	__i2c_eeprom_busy	;wreg free
  7474  014924  0900               	iorlw	0
  7475  014926  A4D8               	btfss	status,2,c
  7476  014928  D7FB               	goto	l1213
  7477                           
  7478                           ;i2c.c: 275: _i2c_write(slave_address, &addr, 1);
  7479  01492A  0E77               	movlw	low i2c_eeprom_read@addr
  7480  01492C  0100               	movlb	0	; () banked
  7481  01492E  6F65               	movwf	__i2c_write@data& (0+255),b
  7482  014930  0E00               	movlw	high i2c_eeprom_read@addr
  7483  014932  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7484  014934  0E01               	movlw	1
  7485  014936  6F67               	movwf	__i2c_write@length& (0+255),b
  7486  014938  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7487  01493A  ECF6  F0A5         	call	__i2c_write
  7488                           
  7489                           ;i2c.c: 276: _i2c_read(slave_address, &data[0], length);
  7490  01493E  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7491  014942  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7492  014946  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7493  01494A  0100               	movlb	0	; () banked
  7494  01494C  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7495  01494E  ECDD  F09A         	call	__i2c_read
  7496  014952  0012               	return		;funcret
  7497  014954                     __end_of_i2c_eeprom_read:
  7498                           	opt stack 0
  7499                           tblptru	equ	0xFF8
  7500                           tblptrh	equ	0xFF7
  7501                           tblptrl	equ	0xFF6
  7502                           tablat	equ	0xFF5
  7503                           postinc0	equ	0xFEE
  7504                           wreg	equ	0xFE8
  7505                           postdec1	equ	0xFE5
  7506                           fsr1h	equ	0xFE2
  7507                           fsr1l	equ	0xFE1
  7508                           status	equ	0xFD8
  7509                           
  7510 ;; *************** function __i2c_read *****************
  7511 ;; Defined at:
  7512 ;;		line 103 in file "i2c.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  slave_addres    1    wreg     unsigned char 
  7515 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7516 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@addr(1), 
  7517 ;;  length          1    7[BANK0 ] unsigned char 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7520 ;;  cntr            1   16[BANK0 ] unsigned char 
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7530 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;Total ram usage:       12 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:   11
  7537 ;; This function calls:
  7538 ;;		__i2c_acknowledge
  7539 ;;		__i2c_get
  7540 ;;		__i2c_not_acknowledge
  7541 ;;		__i2c_send
  7542 ;;		__i2c_start
  7543 ;;		__i2c_stop
  7544 ;;		__i2c_wait_idle
  7545 ;; This function is called by:
  7546 ;;		_i2c_eeprom_read
  7547 ;;		_i2c_eeprom_readByte
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text6
  7552  0135BA                     __ptext6:
  7553                           	opt stack 0
  7554  0135BA                     __i2c_read:
  7555                           	opt stack 16
  7556                           
  7557                           ;incstack = 0
  7558                           ;__i2c_read@slave_address stored from wreg
  7559  0135BA  0100               	movlb	0	; () banked
  7560  0135BC  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7561                           
  7562                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
  7563  0135BE  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
  7564                           
  7565                           ;i2c.c: 108: _i2c_start();
  7566  0135C2  ECA5  F0AC         	call	__i2c_start	;wreg free
  7567                           
  7568                           ;i2c.c: 109: _i2c_wait_idle();
  7569  0135C6  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
  7570                           
  7571                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
  7572  0135CA  0100               	movlb	0	; () banked
  7573  0135CC  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7574  0135CE  0901               	iorlw	1
  7575  0135D0  EC92  F0AC         	call	__i2c_send
  7576                           
  7577                           ;i2c.c: 111: _i2c_wait_idle();
  7578  0135D4  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
  7579                           
  7580                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
  7581  0135D8  0E00               	movlw	0
  7582  0135DA  0100               	movlb	0	; () banked
  7583  0135DC  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7584  0135DE  D00F               	goto	l1164
  7585  0135E0                     
  7586                           ; BSR set to: 0
  7587                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
  7588                           
  7589                           ; BSR set to: 0
  7590  0135E0  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7591  0135E2  0D01               	mullw	1
  7592  0135E4  50F3               	movf	prodl,w,c
  7593  0135E6  2565               	addwf	__i2c_read@data& (0+255),w,b
  7594  0135E8  6ED9               	movwf	fsr2l,c
  7595  0135EA  50F4               	movf	prodh,w,c
  7596  0135EC  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7597  0135EE  6EDA               	movwf	fsr2h,c
  7598  0135F0  EC88  F0AC         	call	__i2c_get	;wreg free
  7599  0135F4  6EDF               	movwf	indf2,c
  7600                           
  7601                           ;i2c.c: 124: _i2c_acknowledge();
  7602  0135F6  EC8D  F0AC         	call	__i2c_acknowledge	;wreg free
  7603  0135FA  0100               	movlb	0	; () banked
  7604  0135FC  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7605  0135FE                     l1164:
  7606                           
  7607                           ; BSR set to: 0
  7608                           
  7609                           ; BSR set to: 0
  7610  0135FE  0EFF               	movlw	255
  7611  013600  6F68               	movwf	??__i2c_read& (0+255),b
  7612  013602  0EFF               	movlw	255
  7613  013604  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7614  013606  5167               	movf	__i2c_read@length& (0+255),w,b
  7615  013608  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7616  01360A  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7617  01360C  5168               	movf	??__i2c_read& (0+255),w,b
  7618  01360E  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7619  013610  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7620  013612  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7621  013614  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7622  013616  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7623  013618  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7624  01361A  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7625  01361C  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7626  01361E  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7627  013620  0A80               	xorlw	128
  7628  013622  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7629  013624  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7630  013626  0A80               	xorlw	128
  7631  013628  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7632  01362A  A0D8               	btfss	status,0,c
  7633  01362C  D7D9               	goto	l1165
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
  7637                           
  7638                           ; BSR set to: 0
  7639  01362E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7640  013630  0D01               	mullw	1
  7641  013632  50F3               	movf	prodl,w,c
  7642  013634  2565               	addwf	__i2c_read@data& (0+255),w,b
  7643  013636  6ED9               	movwf	fsr2l,c
  7644  013638  50F4               	movf	prodh,w,c
  7645  01363A  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7646  01363C  6EDA               	movwf	fsr2h,c
  7647  01363E  EC88  F0AC         	call	__i2c_get	;wreg free
  7648  013642  6EDF               	movwf	indf2,c
  7649                           
  7650                           ;i2c.c: 127: _i2c_not_acknowledge();
  7651  013644  EC83  F0AC         	call	__i2c_not_acknowledge	;wreg free
  7652                           
  7653                           ;i2c.c: 129: _i2c_stop();
  7654  013648  ECA1  F0AC         	call	__i2c_stop	;wreg free
  7655  01364C  0012               	return		;funcret
  7656  01364E                     __end_of__i2c_read:
  7657                           	opt stack 0
  7658                           tblptru	equ	0xFF8
  7659                           tblptrh	equ	0xFF7
  7660                           tblptrl	equ	0xFF6
  7661                           tablat	equ	0xFF5
  7662                           prodh	equ	0xFF4
  7663                           prodl	equ	0xFF3
  7664                           postinc0	equ	0xFEE
  7665                           wreg	equ	0xFE8
  7666                           postdec1	equ	0xFE5
  7667                           fsr1h	equ	0xFE2
  7668                           fsr1l	equ	0xFE1
  7669                           indf2	equ	0xFDF
  7670                           fsr2h	equ	0xFDA
  7671                           fsr2l	equ	0xFD9
  7672                           status	equ	0xFD8
  7673                           
  7674 ;; *************** function __i2c_not_acknowledge *****************
  7675 ;; Defined at:
  7676 ;;		line 76 in file "i2c.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      void 
  7683 ;; Registers used:
  7684 ;;		None
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;Total ram usage:        0 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:   10
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		__i2c_read
  7701 ;;		_i2c_adc_read
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text7
  7706  015906                     __ptext7:
  7707                           	opt stack 0
  7708  015906                     __i2c_not_acknowledge:
  7709                           	opt stack 16
  7710                           
  7711                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
  7712                           
  7713                           ;incstack = 0
  7714  015906  8AC5               	bsf	4037,5,c	;volatile
  7715                           
  7716                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
  7717  015908  88C5               	bsf	4037,4,c	;volatile
  7718  01590A  A8C5               	btfss	4037,4,c	;volatile
  7719  01590C  0012               	return	
  7720  01590E  D7FD               	goto	l1153
  7721  015910                     __end_of__i2c_not_acknowledge:
  7722                           	opt stack 0
  7723                           tblptru	equ	0xFF8
  7724                           tblptrh	equ	0xFF7
  7725                           tblptrl	equ	0xFF6
  7726                           tablat	equ	0xFF5
  7727                           prodh	equ	0xFF4
  7728                           prodl	equ	0xFF3
  7729                           postinc0	equ	0xFEE
  7730                           wreg	equ	0xFE8
  7731                           postdec1	equ	0xFE5
  7732                           fsr1h	equ	0xFE2
  7733                           fsr1l	equ	0xFE1
  7734                           indf2	equ	0xFDF
  7735                           fsr2h	equ	0xFDA
  7736                           fsr2l	equ	0xFD9
  7737                           status	equ	0xFD8
  7738                           
  7739 ;; *************** function __i2c_get *****************
  7740 ;; Defined at:
  7741 ;;		line 56 in file "i2c.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      unsigned char 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:   10
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		__i2c_read
  7766 ;;		_i2c_adc_read
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text8
  7771  015910                     __ptext8:
  7772                           	opt stack 0
  7773  015910                     __i2c_get:
  7774                           	opt stack 16
  7775                           
  7776                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
  7777                           
  7778                           ;incstack = 0
  7779  015910  86C5               	bsf	4037,3,c	;volatile
  7780  015912  B6C5               	btfsc	4037,3,c	;volatile
  7781  015914  D7FE               	goto	l1135
  7782                           
  7783                           ;i2c.c: 60: return SSP1BUF;
  7784  015916  50C9               	movf	4041,w,c	;volatile
  7785  015918  0012               	return	
  7786  01591A                     __end_of__i2c_get:
  7787                           	opt stack 0
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           prodh	equ	0xFF4
  7793                           prodl	equ	0xFF3
  7794                           postinc0	equ	0xFEE
  7795                           wreg	equ	0xFE8
  7796                           postdec1	equ	0xFE5
  7797                           fsr1h	equ	0xFE2
  7798                           fsr1l	equ	0xFE1
  7799                           indf2	equ	0xFDF
  7800                           fsr2h	equ	0xFDA
  7801                           fsr2l	equ	0xFD9
  7802                           status	equ	0xFD8
  7803                           
  7804 ;; *************** function __i2c_acknowledge *****************
  7805 ;; Defined at:
  7806 ;;		line 69 in file "i2c.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      void 
  7813 ;; Registers used:
  7814 ;;		None
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:   10
  7827 ;; This function calls:
  7828 ;;		Nothing
  7829 ;; This function is called by:
  7830 ;;		__i2c_read
  7831 ;;		_i2c_adc_read
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           	psect	text9
  7836  01591A                     __ptext9:
  7837                           	opt stack 0
  7838  01591A                     __i2c_acknowledge:
  7839                           	opt stack 16
  7840                           
  7841                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
  7842                           
  7843                           ;incstack = 0
  7844  01591A  9AC5               	bcf	4037,5,c	;volatile
  7845                           
  7846                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
  7847  01591C  88C5               	bsf	4037,4,c	;volatile
  7848  01591E  A8C5               	btfss	4037,4,c	;volatile
  7849  015920  0012               	return	
  7850  015922  D7FD               	goto	l1147
  7851  015924                     __end_of__i2c_acknowledge:
  7852                           	opt stack 0
  7853                           tblptru	equ	0xFF8
  7854                           tblptrh	equ	0xFF7
  7855                           tblptrl	equ	0xFF6
  7856                           tablat	equ	0xFF5
  7857                           prodh	equ	0xFF4
  7858                           prodl	equ	0xFF3
  7859                           postinc0	equ	0xFEE
  7860                           wreg	equ	0xFE8
  7861                           postdec1	equ	0xFE5
  7862                           fsr1h	equ	0xFE2
  7863                           fsr1l	equ	0xFE1
  7864                           indf2	equ	0xFDF
  7865                           fsr2h	equ	0xFDA
  7866                           fsr2l	equ	0xFD9
  7867                           status	equ	0xFD8
  7868                           
  7869 ;; *************** function __i2c_eeprom_busy *****************
  7870 ;; Defined at:
  7871 ;;		line 169 in file "i2c.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;		None
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  busy            1    5[BANK0 ] unsigned char 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      unsigned char 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;Total ram usage:        1 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:   11
  7892 ;; This function calls:
  7893 ;;		__i2c_send
  7894 ;;		__i2c_start
  7895 ;;		__i2c_stop
  7896 ;;		__i2c_wait_idle
  7897 ;; This function is called by:
  7898 ;;		_i2c_eeprom_read
  7899 ;;		_i2c_eeprom_writeByte
  7900 ;;		_i2c_eeprom_readByte
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           	psect	text10
  7905  015588                     __ptext10:
  7906                           	opt stack 0
  7907  015588                     __i2c_eeprom_busy:
  7908                           	opt stack 16
  7909                           
  7910                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
  7911                           
  7912                           ;incstack = 0
  7913  015588  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
  7914                           
  7915                           ;i2c.c: 173: _i2c_start();
  7916  01558C  ECA5  F0AC         	call	__i2c_start	;wreg free
  7917                           
  7918                           ;i2c.c: 174: _i2c_wait_idle();
  7919  015590  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
  7920                           
  7921                           ;i2c.c: 175: _i2c_send(0b10100000);
  7922  015594  0EA0               	movlw	160
  7923  015596  EC92  F0AC         	call	__i2c_send
  7924                           
  7925                           ;i2c.c: 176: _i2c_wait_idle();
  7926  01559A  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
  7927                           
  7928                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
  7929  01559E  0E00               	movlw	0
  7930  0155A0  BCC5               	btfsc	4037,6,c	;volatile
  7931  0155A2  0E01               	movlw	1
  7932  0155A4  0100               	movlb	0	; () banked
  7933  0155A6  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;i2c.c: 181: _i2c_stop();
  7937  0155A8  ECA1  F0AC         	call	__i2c_stop	;wreg free
  7938                           
  7939                           ;i2c.c: 183: return 0;
  7940  0155AC  0E00               	movlw	0
  7941  0155AE  0012               	return	
  7942  0155B0                     __end_of__i2c_eeprom_busy:
  7943                           	opt stack 0
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           prodh	equ	0xFF4
  7949                           prodl	equ	0xFF3
  7950                           postinc0	equ	0xFEE
  7951                           wreg	equ	0xFE8
  7952                           postdec1	equ	0xFE5
  7953                           fsr1h	equ	0xFE2
  7954                           fsr1l	equ	0xFE1
  7955                           indf2	equ	0xFDF
  7956                           fsr2h	equ	0xFDA
  7957                           fsr2l	equ	0xFD9
  7958                           status	equ	0xFD8
  7959                           
  7960 ;; *************** function _flash_init *****************
  7961 ;; Defined at:
  7962 ;;		line 361 in file "flash.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;		None
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;		None
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;Total ram usage:        0 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:   14
  7983 ;; This function calls:
  7984 ;;		__flash_set_page_size
  7985 ;;		_spi_init
  7986 ;; This function is called by:
  7987 ;;		_system_init
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text11
  7992  0158C8                     __ptext11:
  7993                           	opt stack 0
  7994  0158C8                     _flash_init:
  7995                           	opt stack 15
  7996                           
  7997                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  7998                           
  7999                           ;incstack = 0
  8000  0158C8  0E00               	movlw	0
  8001  0158CA  ECF9  F0A7         	call	_spi_init
  8002                           
  8003                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8004  0158CE  0E00               	movlw	0
  8005  0158D0  EC6E  F09F         	call	__flash_set_page_size
  8006  0158D4  0012               	return		;funcret
  8007  0158D6                     __end_of_flash_init:
  8008                           	opt stack 0
  8009                           tblptru	equ	0xFF8
  8010                           tblptrh	equ	0xFF7
  8011                           tblptrl	equ	0xFF6
  8012                           tablat	equ	0xFF5
  8013                           prodh	equ	0xFF4
  8014                           prodl	equ	0xFF3
  8015                           postinc0	equ	0xFEE
  8016                           wreg	equ	0xFE8
  8017                           postdec1	equ	0xFE5
  8018                           fsr1h	equ	0xFE2
  8019                           fsr1l	equ	0xFE1
  8020                           indf2	equ	0xFDF
  8021                           fsr2h	equ	0xFDA
  8022                           fsr2l	equ	0xFD9
  8023                           status	equ	0xFD8
  8024                           
  8025 ;; *************** function _spi_init *****************
  8026 ;; Defined at:
  8027 ;;		line 89 in file "spi.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  configuratio    1    wreg     enum E6823
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  configuratio    1    3[BANK0 ] enum E6823
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, status,2, status,0, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8044 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;Total ram usage:        1 bytes
  8046 ;; Hardware stack levels used:    1
  8047 ;; Hardware stack levels required when called:   11
  8048 ;; This function calls:
  8049 ;;		__spi_init
  8050 ;; This function is called by:
  8051 ;;		_flash_init
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           
  8055                           	psect	text12
  8056  014FF2                     __ptext12:
  8057                           	opt stack 0
  8058  014FF2                     _spi_init:
  8059                           	opt stack 17
  8060                           
  8061                           ;incstack = 0
  8062                           ;spi_init@configuration stored from wreg
  8063  014FF2  0100               	movlb	0	; () banked
  8064  014FF4  6F63               	movwf	spi_init@configuration& (0+255),b
  8065                           
  8066                           ;spi.c: 91: switch(configuration)
  8067  014FF6  D012               	goto	l2164
  8068  014FF8                     
  8069                           ;spi.c: 94: _spi_init(config_internal);
  8070  014FF8  C136  F060         	movff	_config_internal,__spi_init@details
  8071  014FFC  C137  F061         	movff	_config_internal+1,__spi_init@details+1
  8072  015000  C138  F062         	movff	_config_internal+2,__spi_init@details+2
  8073  015004  ECB0  F0A8         	call	__spi_init	;wreg free
  8074                           
  8075                           ;spi.c: 95: break;
  8076  015008  D011               	goto	l2166
  8077  01500A                     
  8078                           ;spi.c: 98: _spi_init(config_external);
  8079  01500A  C133  F060         	movff	_config_external,__spi_init@details
  8080  01500E  C134  F061         	movff	_config_external+1,__spi_init@details+1
  8081  015012  C135  F062         	movff	_config_external+2,__spi_init@details+2
  8082  015016  ECB0  F0A8         	call	__spi_init	;wreg free
  8083                           
  8084                           ;spi.c: 100: }
  8085                           
  8086                           ;spi.c: 99: break;
  8087  01501A  D008               	goto	l2166
  8088  01501C                     l2164:
  8089  01501C  0100               	movlb	0	; () banked
  8090  01501E  5163               	movf	spi_init@configuration& (0+255),w,b
  8091                           
  8092                           ; Switch size 1, requested type "space"
  8093                           ; Number of cases is 2, Range of values is 0 to 1
  8094                           ; switch strategies available:
  8095                           ; Name         Instructions Cycles
  8096                           ; simple_byte            7     4 (average)
  8097                           ;	Chosen strategy is simple_byte
  8098  015020  0A00               	xorlw	0	; case 0
  8099  015022  B4D8               	btfsc	status,2,c
  8100  015024  D7E9               	goto	l2165
  8101  015026  0A01               	xorlw	1	; case 1
  8102  015028  B4D8               	btfsc	status,2,c
  8103  01502A  D7EF               	goto	l2167
  8104  01502C                     l2166:
  8105                           
  8106                           ;spi.c: 102: active_configuration = configuration;
  8107  01502C  C063  F159         	movff	spi_init@configuration,_active_configuration
  8108  015030  0012               	return		;funcret
  8109  015032                     __end_of_spi_init:
  8110                           	opt stack 0
  8111                           tblptru	equ	0xFF8
  8112                           tblptrh	equ	0xFF7
  8113                           tblptrl	equ	0xFF6
  8114                           tablat	equ	0xFF5
  8115                           prodh	equ	0xFF4
  8116                           prodl	equ	0xFF3
  8117                           postinc0	equ	0xFEE
  8118                           wreg	equ	0xFE8
  8119                           postdec1	equ	0xFE5
  8120                           fsr1h	equ	0xFE2
  8121                           fsr1l	equ	0xFE1
  8122                           indf2	equ	0xFDF
  8123                           fsr2h	equ	0xFDA
  8124                           fsr2l	equ	0xFD9
  8125                           status	equ	0xFD8
  8126                           
  8127 ;; *************** function __spi_init *****************
  8128 ;; Defined at:
  8129 ;;		line 24 in file "spi.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  details         3    0[BANK0 ] struct .
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, status,2
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8143 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;Total ram usage:        3 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:   10
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_spi_init
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text13
  8158  015160                     __ptext13:
  8159                           	opt stack 0
  8160  015160                     __spi_init:
  8161                           	opt stack 17
  8162                           
  8163                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8164                           
  8165                           ;incstack = 0
  8166  015160  0E55               	movlw	85
  8167  015162  6EA7               	movwf	4007,c	;volsfr
  8168  015164  0EAA               	movlw	170
  8169  015166  6EA7               	movwf	4007,c	;volsfr
  8170  015168  010E               	movlb	14	; () banked
  8171  01516A  91BF               	bcf	191,0,b	;volatile
  8172                           
  8173                           ;spi.c: 31: RPINR21 = 22;
  8174  01516C  0E16               	movlw	22
  8175  01516E  6FFC               	movwf	252,b	;volatile
  8176                           
  8177                           ;spi.c: 32: RPOR21 = 10;
  8178  015170  0E0A               	movlw	10
  8179  015172  6FD5               	movwf	213,b	;volatile
  8180                           
  8181                           ;spi.c: 34: RPOR23 = 11;
  8182  015174  0E0B               	movlw	11
  8183  015176  6FD7               	movwf	215,b	;volatile
  8184                           
  8185                           ;spi.c: 35: RPINR22 = 23;
  8186  015178  0E17               	movlw	23
  8187  01517A  6FFD               	movwf	253,b	;volatile
  8188                           
  8189                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8190  01517C  0E55               	movlw	85
  8191  01517E  6EA7               	movwf	4007,c	;volsfr
  8192  015180  0EAA               	movlw	170
  8193  015182  6EA7               	movwf	4007,c	;volsfr
  8194                           
  8195                           ; BSR set to: 14
  8196  015184  81BF               	bsf	191,0,b	;volatile
  8197                           
  8198                           ; BSR set to: 14
  8199                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8200  015186  8E73               	bsf	3955,7,c	;volatile
  8201                           
  8202                           ; BSR set to: 14
  8203                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8204  015188  8C73               	bsf	3955,6,c	;volatile
  8205                           
  8206                           ; BSR set to: 14
  8207                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8208  01518A  9872               	bcf	3954,4,c	;volatile
  8209                           
  8210                           ; BSR set to: 14
  8211                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8212  01518C  9072               	bcf	3954,0,c	;volatile
  8213  01518E  9272               	bcf	3954,1,c	;volatile
  8214  015190  9472               	bcf	3954,2,c	;volatile
  8215  015192  9672               	bcf	3954,3,c	;volatile
  8216                           
  8217                           ; BSR set to: 14
  8218                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8219  015194  8A72               	bsf	3954,5,c	;volatile
  8220                           
  8221                           ; BSR set to: 14
  8222  015196  0012               	return		;funcret
  8223  015198                     __end_of__spi_init:
  8224                           	opt stack 0
  8225                           tblptru	equ	0xFF8
  8226                           tblptrh	equ	0xFF7
  8227                           tblptrl	equ	0xFF6
  8228                           tablat	equ	0xFF5
  8229                           prodh	equ	0xFF4
  8230                           prodl	equ	0xFF3
  8231                           postinc0	equ	0xFEE
  8232                           wreg	equ	0xFE8
  8233                           postdec1	equ	0xFE5
  8234                           fsr1h	equ	0xFE2
  8235                           fsr1l	equ	0xFE1
  8236                           indf2	equ	0xFDF
  8237                           fsr2h	equ	0xFDA
  8238                           fsr2l	equ	0xFD9
  8239                           status	equ	0xFD8
  8240                           
  8241 ;; *************** function __flash_set_page_size *****************
  8242 ;; Defined at:
  8243 ;;		line 99 in file "flash.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;  size            1    wreg     enum E6996
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  size            1   23[BANK0 ] enum E6996
  8248 ;;  command         4   19[BANK0 ] unsigned char [4]
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;Total ram usage:        5 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:   13
  8265 ;; This function calls:
  8266 ;;		__flash_is_busy
  8267 ;;		_memcpy
  8268 ;;		_spi_tx
  8269 ;; This function is called by:
  8270 ;;		_flash_init
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text14
  8275  013EDC                     __ptext14:
  8276                           	opt stack 0
  8277  013EDC                     __flash_set_page_size:
  8278                           	opt stack 15
  8279                           
  8280                           ; BSR set to: 14
  8281                           ;incstack = 0
  8282                           ;__flash_set_page_size@size stored from wreg
  8283  013EDC  0100               	movlb	0	; () banked
  8284  013EDE  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8285  013EE0                     
  8286                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8287  013EE0  EC5E  F0AB         	call	__flash_is_busy	;wreg free
  8288  013EE4  0900               	iorlw	0
  8289  013EE6  A4D8               	btfss	status,2,c
  8290  013EE8  D7FB               	goto	l15516
  8291                           
  8292                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8293  013EEA  0100               	movlb	0	; () banked
  8294  013EEC  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8295  013EEE  A4D8               	btfss	status,2,c
  8296  013EF0  D00E               	goto	l1522
  8297                           
  8298                           ; BSR set to: 0
  8299                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8300  013EF2  0E73               	movlw	low __flash_set_page_size@command
  8301  013EF4  6F60               	movwf	memcpy@d1& (0+255),b
  8302  013EF6  0E00               	movlw	high __flash_set_page_size@command
  8303  013EF8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8304  013EFA  0EE1               	movlw	low _flash_command_pagesize_512
  8305  013EFC  6F62               	movwf	memcpy@s1& (0+255),b
  8306  013EFE  0EA2               	movlw	high _flash_command_pagesize_512
  8307  013F00  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8308  013F02  0E00               	movlw	0
  8309  013F04  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8310  013F06  0E04               	movlw	4
  8311  013F08  6F64               	movwf	memcpy@n& (0+255),b
  8312  013F0A  ECD9  F0A1         	call	_memcpy	;wreg free
  8313  013F0E                     l1522:
  8314                           
  8315                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8316  013F0E  0100               	movlb	0	; () banked
  8317  013F10  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8318  013F12  A4D8               	btfss	status,2,c
  8319  013F14  D00E               	goto	l1523
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8323  013F16  0E73               	movlw	low __flash_set_page_size@command
  8324  013F18  6F60               	movwf	memcpy@d1& (0+255),b
  8325  013F1A  0E00               	movlw	high __flash_set_page_size@command
  8326  013F1C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8327  013F1E  0EDD               	movlw	low _flash_command_pagesize_528
  8328  013F20  6F62               	movwf	memcpy@s1& (0+255),b
  8329  013F22  0EA2               	movlw	high _flash_command_pagesize_528
  8330  013F24  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8331  013F26  0E00               	movlw	0
  8332  013F28  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8333  013F2A  0E04               	movlw	4
  8334  013F2C  6F64               	movwf	memcpy@n& (0+255),b
  8335  013F2E  ECD9  F0A1         	call	_memcpy	;wreg free
  8336  013F32                     l1523:
  8337                           
  8338                           ;flash.c: 113: spi_tx(command, 4);
  8339  013F32  0E73               	movlw	low __flash_set_page_size@command
  8340  013F34  0100               	movlb	0	; () banked
  8341  013F36  6F60               	movwf	spi_tx@data& (0+255),b
  8342  013F38  0E00               	movlw	high __flash_set_page_size@command
  8343  013F3A  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8344  013F3C  0E00               	movlw	0
  8345  013F3E  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8346  013F40  0E04               	movlw	4
  8347  013F42  6F62               	movwf	spi_tx@length& (0+255),b
  8348  013F44  EC4A  F0A3         	call	_spi_tx	;wreg free
  8349  013F48  0012               	return		;funcret
  8350  013F4A                     __end_of__flash_set_page_size:
  8351                           	opt stack 0
  8352                           tblptru	equ	0xFF8
  8353                           tblptrh	equ	0xFF7
  8354                           tblptrl	equ	0xFF6
  8355                           tablat	equ	0xFF5
  8356                           prodh	equ	0xFF4
  8357                           prodl	equ	0xFF3
  8358                           postinc0	equ	0xFEE
  8359                           wreg	equ	0xFE8
  8360                           postdec1	equ	0xFE5
  8361                           fsr1h	equ	0xFE2
  8362                           fsr1l	equ	0xFE1
  8363                           indf2	equ	0xFDF
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function _fat_init *****************
  8369 ;; Defined at:
  8370 ;;		line 1382 in file "fat16.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:   16
  8391 ;; This function calls:
  8392 ;;		_fat_format
  8393 ;;		_fat_get_format_status
  8394 ;; This function is called by:
  8395 ;;		_system_init
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text15
  8400  015898                     __ptext15:
  8401                           	opt stack 0
  8402  015898                     _fat_init:
  8403                           	opt stack 13
  8404                           
  8405                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8406                           
  8407                           ;incstack = 0
  8408  015898  ECB3  F096         	call	_fat_get_format_status	;wreg free
  8409  01589C  0900               	iorlw	0
  8410  01589E  A4D8               	btfss	status,2,c
  8411  0158A0  0012               	return	
  8412                           
  8413                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  8414  0158A2  EC1F  F076         	call	_fat_format	;wreg free
  8415  0158A6  0012               	return	
  8416  0158A8                     __end_of_fat_init:
  8417                           	opt stack 0
  8418                           tblptru	equ	0xFF8
  8419                           tblptrh	equ	0xFF7
  8420                           tblptrl	equ	0xFF6
  8421                           tablat	equ	0xFF5
  8422                           prodh	equ	0xFF4
  8423                           prodl	equ	0xFF3
  8424                           postinc0	equ	0xFEE
  8425                           wreg	equ	0xFE8
  8426                           postdec1	equ	0xFE5
  8427                           fsr1h	equ	0xFE2
  8428                           fsr1l	equ	0xFE1
  8429                           indf2	equ	0xFDF
  8430                           fsr2h	equ	0xFDA
  8431                           fsr2l	equ	0xFD9
  8432                           status	equ	0xFD8
  8433                           
  8434 ;; *************** function _fat_get_format_status *****************
  8435 ;; Defined at:
  8436 ;;		line 1292 in file "fat16.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  cntr            2   45[BANK0 ] unsigned int 
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      enum E6970
  8443 ;; Registers used:
  8444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8454 ;;Total ram usage:        4 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; Hardware stack levels required when called:   15
  8457 ;; This function calls:
  8458 ;;		__get_fbr
  8459 ;;		__get_mbr
  8460 ;;		_flash_sector_read
  8461 ;; This function is called by:
  8462 ;;		_fat_init
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           	psect	text16
  8467  012D66                     __ptext16:
  8468                           	opt stack 0
  8469  012D66                     _fat_get_format_status:
  8470                           	opt stack 13
  8471                           
  8472                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  8473                           
  8474                           ;incstack = 0
  8475  012D66  0E00               	movlw	0
  8476  012D68  0100               	movlb	0	; () banked
  8477  012D6A  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8478  012D6C  0E00               	movlw	0
  8479  012D6E  6F87               	movwf	flash_sector_read@page& (0+255),b
  8480  012D70  0E00               	movlw	low _buffer
  8481  012D72  6F89               	movwf	flash_sector_read@data& (0+255),b
  8482  012D74  0E0A               	movlw	high _buffer
  8483  012D76  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8484  012D78  EC00  F0AB         	call	_flash_sector_read	;wreg free
  8485                           
  8486                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  8487  012D7C  0E00               	movlw	0
  8488  012D7E  0100               	movlb	0	; () banked
  8489  012D80  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8490  012D82  0E00               	movlw	0
  8491  012D84  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8492  012D86                     l15708:
  8493                           
  8494                           ; BSR set to: 0
  8495  012D86  0E02               	movlw	2
  8496  012D88  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8497  012D8A  B0D8               	btfsc	status,0,c
  8498  012D8C  D017               	goto	u14570
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  8502                           
  8503                           ; BSR set to: 0
  8504                           
  8505                           ; BSR set to: 0
  8506  012D8E  0E00               	movlw	low _buffer
  8507  012D90  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8508  012D92  6ED9               	movwf	fsr2l,c
  8509  012D94  0E0A               	movlw	high _buffer
  8510  012D96  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8511  012D98  6EDA               	movwf	fsr2h,c
  8512  012D9A  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8513  012D9E  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8514  012DA2  ECEC  F092         	call	__get_mbr	;wreg free
  8515  012DA6  0100               	movlb	0	; () banked
  8516  012DA8  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8517  012DAA  50DE               	movf	postinc2,w,c
  8518  012DAC  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8519  012DAE  B4D8               	btfsc	status,2,c
  8520  012DB0  D002               	goto	l2046
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  8524  012DB2  0E00               	movlw	0
  8525                           
  8526                           ; BSR set to: 0
  8527  012DB4  0012               	return	
  8528  012DB6                     l2046:
  8529                           
  8530                           ; BSR set to: 0
  8531                           
  8532                           ; BSR set to: 0
  8533  012DB6  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8534  012DB8  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8535  012DBA  D7E5               	goto	l15708
  8536  012DBC                     u14570:
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  8540                           
  8541                           ; BSR set to: 0
  8542  012DBC  0E00               	movlw	0
  8543  012DBE  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8544  012DC0  0E01               	movlw	1
  8545  012DC2  6F87               	movwf	flash_sector_read@page& (0+255),b
  8546  012DC4  0E00               	movlw	low _buffer
  8547  012DC6  6F89               	movwf	flash_sector_read@data& (0+255),b
  8548  012DC8  0E0A               	movlw	high _buffer
  8549  012DCA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8550  012DCC  EC00  F0AB         	call	_flash_sector_read	;wreg free
  8551                           
  8552                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  8553  012DD0  0E00               	movlw	0
  8554  012DD2  0100               	movlb	0	; () banked
  8555  012DD4  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8556  012DD6  0E00               	movlw	0
  8557  012DD8  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8558  012DDA                     l15726:
  8559                           
  8560                           ; BSR set to: 0
  8561  012DDA  0E02               	movlw	2
  8562  012DDC  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8563  012DDE  B0D8               	btfsc	status,0,c
  8564  012DE0  D017               	goto	u14600
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  8568                           
  8569                           ; BSR set to: 0
  8570                           
  8571                           ; BSR set to: 0
  8572  012DE2  0E00               	movlw	low _buffer
  8573  012DE4  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8574  012DE6  6ED9               	movwf	fsr2l,c
  8575  012DE8  0E0A               	movlw	high _buffer
  8576  012DEA  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8577  012DEC  6EDA               	movwf	fsr2h,c
  8578  012DEE  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  8579  012DF2  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  8580  012DF6  EC71  F070         	call	__get_fbr	;wreg free
  8581  012DFA  0100               	movlb	0	; () banked
  8582  012DFC  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8583  012DFE  50DE               	movf	postinc2,w,c
  8584  012E00  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8585  012E02  B4D8               	btfsc	status,2,c
  8586  012E04  D002               	goto	l2050
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  8590  012E06  0E00               	movlw	0
  8591                           
  8592                           ; BSR set to: 0
  8593  012E08  0012               	return	
  8594  012E0A                     l2050:
  8595                           
  8596                           ; BSR set to: 0
  8597                           
  8598                           ; BSR set to: 0
  8599  012E0A  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8600  012E0C  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8601  012E0E  D7E5               	goto	l15726
  8602  012E10                     u14600:
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  8606                           
  8607                           ; BSR set to: 0
  8608  012E10  0E01               	movlw	1
  8609  012E12  0012               	return	
  8610  012E14                     __end_of_fat_get_format_status:
  8611                           	opt stack 0
  8612                           tblptru	equ	0xFF8
  8613                           tblptrh	equ	0xFF7
  8614                           tblptrl	equ	0xFF6
  8615                           tablat	equ	0xFF5
  8616                           prodh	equ	0xFF4
  8617                           prodl	equ	0xFF3
  8618                           postinc0	equ	0xFEE
  8619                           wreg	equ	0xFE8
  8620                           postdec1	equ	0xFE5
  8621                           fsr1h	equ	0xFE2
  8622                           fsr1l	equ	0xFE1
  8623                           indf2	equ	0xFDF
  8624                           postinc2	equ	0xFDE
  8625                           fsr2h	equ	0xFDA
  8626                           fsr2l	equ	0xFD9
  8627                           status	equ	0xFD8
  8628                           
  8629 ;; *************** function _fat_format *****************
  8630 ;; Defined at:
  8631 ;;		line 1320 in file "fat16.c"
  8632 ;; Parameters:    Size  Location     Type
  8633 ;;		None
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  cntr            2   36[BANK0 ] unsigned int 
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      unsigned char 
  8638 ;; Registers used:
  8639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;Total ram usage:        2 bytes
  8650 ;; Hardware stack levels used:    1
  8651 ;; Hardware stack levels required when called:   15
  8652 ;; This function calls:
  8653 ;;		__get_data
  8654 ;;		__get_fat
  8655 ;;		__get_fbr
  8656 ;;		__get_mbr
  8657 ;;		__get_root
  8658 ;;		_flash_sector_write
  8659 ;; This function is called by:
  8660 ;;		_fat_init
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text17
  8665  00EC3E                     __ptext17:
  8666                           	opt stack 0
  8667  00EC3E                     _fat_format:
  8668                           	opt stack 13
  8669                           
  8670                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;incstack = 0
  8674  00EC3E  0E00               	movlw	0
  8675  00EC40  0100               	movlb	0	; () banked
  8676  00EC42  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8677  00EC44  0E00               	movlw	0
  8678  00EC46  6F84               	movwf	fat_format@cntr& (0+255),b
  8679  00EC48                     l15746:
  8680                           
  8681                           ; BSR set to: 0
  8682  00EC48  0E02               	movlw	2
  8683  00EC4A  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8684  00EC4C  B0D8               	btfsc	status,0,c
  8685  00EC4E  D011               	goto	u14620
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  8689                           
  8690                           ; BSR set to: 0
  8691                           
  8692                           ; BSR set to: 0
  8693  00EC50  0E00               	movlw	low _buffer
  8694  00EC52  2584               	addwf	fat_format@cntr& (0+255),w,b
  8695  00EC54  6ED9               	movwf	fsr2l,c
  8696  00EC56  0E0A               	movlw	high _buffer
  8697  00EC58  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8698  00EC5A  6EDA               	movwf	fsr2h,c
  8699  00EC5C  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  8700  00EC60  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  8701  00EC64  ECEC  F092         	call	__get_mbr	;wreg free
  8702  00EC68  6EDF               	movwf	indf2,c
  8703  00EC6A  0100               	movlb	0	; () banked
  8704  00EC6C  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8705  00EC6E  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8706  00EC70  D7EB               	goto	l15746
  8707  00EC72                     u14620:
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  8711                           
  8712                           ; BSR set to: 0
  8713  00EC72  0E00               	movlw	0
  8714  00EC74  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8715  00EC76  0E00               	movlw	0
  8716  00EC78  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8717  00EC7A  0E00               	movlw	low _buffer
  8718  00EC7C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8719  00EC7E  0E0A               	movlw	high _buffer
  8720  00EC80  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8721  00EC82  EC1E  F0A6         	call	_flash_sector_write	;wreg free
  8722                           
  8723                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  8724  00EC86  0E00               	movlw	0
  8725  00EC88  0100               	movlb	0	; () banked
  8726  00EC8A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8727  00EC8C  0E00               	movlw	0
  8728  00EC8E  6F84               	movwf	fat_format@cntr& (0+255),b
  8729  00EC90                     l15760:
  8730                           
  8731                           ; BSR set to: 0
  8732  00EC90  0E02               	movlw	2
  8733  00EC92  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8734  00EC94  B0D8               	btfsc	status,0,c
  8735  00EC96  D011               	goto	u14640
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  8739                           
  8740                           ; BSR set to: 0
  8741                           
  8742                           ; BSR set to: 0
  8743  00EC98  0E00               	movlw	low _buffer
  8744  00EC9A  2584               	addwf	fat_format@cntr& (0+255),w,b
  8745  00EC9C  6ED9               	movwf	fsr2l,c
  8746  00EC9E  0E0A               	movlw	high _buffer
  8747  00ECA0  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8748  00ECA2  6EDA               	movwf	fsr2h,c
  8749  00ECA4  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  8750  00ECA8  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  8751  00ECAC  EC71  F070         	call	__get_fbr	;wreg free
  8752  00ECB0  6EDF               	movwf	indf2,c
  8753  00ECB2  0100               	movlb	0	; () banked
  8754  00ECB4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8755  00ECB6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8756  00ECB8  D7EB               	goto	l15760
  8757  00ECBA                     u14640:
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  8761                           
  8762                           ; BSR set to: 0
  8763  00ECBA  0E00               	movlw	0
  8764  00ECBC  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8765  00ECBE  0E01               	movlw	1
  8766  00ECC0  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8767  00ECC2  0E00               	movlw	low _buffer
  8768  00ECC4  6F81               	movwf	flash_sector_write@data& (0+255),b
  8769  00ECC6  0E0A               	movlw	high _buffer
  8770  00ECC8  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8771  00ECCA  EC1E  F0A6         	call	_flash_sector_write	;wreg free
  8772                           
  8773                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  8774  00ECCE  0E00               	movlw	0
  8775  00ECD0  0100               	movlb	0	; () banked
  8776  00ECD2  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8777  00ECD4  0E00               	movlw	0
  8778  00ECD6  6F84               	movwf	fat_format@cntr& (0+255),b
  8779  00ECD8                     l15774:
  8780                           
  8781                           ; BSR set to: 0
  8782  00ECD8  0E02               	movlw	2
  8783  00ECDA  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8784  00ECDC  B0D8               	btfsc	status,0,c
  8785  00ECDE  D011               	goto	u14660
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  8789                           
  8790                           ; BSR set to: 0
  8791                           
  8792                           ; BSR set to: 0
  8793  00ECE0  0E00               	movlw	low _buffer
  8794  00ECE2  2584               	addwf	fat_format@cntr& (0+255),w,b
  8795  00ECE4  6ED9               	movwf	fsr2l,c
  8796  00ECE6  0E0A               	movlw	high _buffer
  8797  00ECE8  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8798  00ECEA  6EDA               	movwf	fsr2h,c
  8799  00ECEC  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  8800  00ECF0  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  8801  00ECF4  EC77  F0A3         	call	__get_fat	;wreg free
  8802  00ECF8  6EDF               	movwf	indf2,c
  8803  00ECFA  0100               	movlb	0	; () banked
  8804  00ECFC  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8805  00ECFE  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8806  00ED00  D7EB               	goto	l15774
  8807  00ED02                     u14660:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  8811                           
  8812                           ; BSR set to: 0
  8813  00ED02  0E00               	movlw	0
  8814  00ED04  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8815  00ED06  0E02               	movlw	2
  8816  00ED08  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8817  00ED0A  0E00               	movlw	low _buffer
  8818  00ED0C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8819  00ED0E  0E0A               	movlw	high _buffer
  8820  00ED10  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8821  00ED12  EC1E  F0A6         	call	_flash_sector_write	;wreg free
  8822                           
  8823                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  8824  00ED16  0E00               	movlw	0
  8825  00ED18  0100               	movlb	0	; () banked
  8826  00ED1A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8827  00ED1C  0E00               	movlw	0
  8828  00ED1E  6F84               	movwf	fat_format@cntr& (0+255),b
  8829  00ED20                     l15788:
  8830                           
  8831                           ; BSR set to: 0
  8832  00ED20  0E02               	movlw	2
  8833  00ED22  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8834  00ED24  B0D8               	btfsc	status,0,c
  8835  00ED26  D00B               	goto	u14680
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  8839                           
  8840                           ; BSR set to: 0
  8841                           
  8842                           ; BSR set to: 0
  8843  00ED28  0E00               	movlw	low _buffer
  8844  00ED2A  2584               	addwf	fat_format@cntr& (0+255),w,b
  8845  00ED2C  6ED9               	movwf	fsr2l,c
  8846  00ED2E  0E0A               	movlw	high _buffer
  8847  00ED30  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8848  00ED32  6EDA               	movwf	fsr2h,c
  8849  00ED34  0E00               	movlw	0
  8850  00ED36  6EDF               	movwf	indf2,c
  8851                           
  8852                           ; BSR set to: 0
  8853  00ED38  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8854  00ED3A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8855  00ED3C  D7F1               	goto	l15788
  8856  00ED3E                     u14680:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  8860                           
  8861                           ; BSR set to: 0
  8862  00ED3E  0E00               	movlw	0
  8863  00ED40  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8864  00ED42  0E03               	movlw	3
  8865  00ED44  6F84               	movwf	fat_format@cntr& (0+255),b
  8866  00ED46                     l15800:
  8867                           
  8868                           ; BSR set to: 0
  8869  00ED46  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8870  00ED48  E112               	bnz	l15810
  8871  00ED4A  0E22               	movlw	34
  8872  00ED4C  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8873  00ED4E  B0D8               	btfsc	status,0,c
  8874  00ED50  D00E               	goto	u14700
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  8878                           
  8879                           ; BSR set to: 0
  8880                           
  8881                           ; BSR set to: 0
  8882  00ED52  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  8883  00ED56  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  8884  00ED5A  0E00               	movlw	low _buffer
  8885  00ED5C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8886  00ED5E  0E0A               	movlw	high _buffer
  8887  00ED60  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8888  00ED62  EC1E  F0A6         	call	_flash_sector_write	;wreg free
  8889  00ED66  0100               	movlb	0	; () banked
  8890  00ED68  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8891  00ED6A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8892  00ED6C  D7EC               	goto	l15800
  8893  00ED6E                     u14700:
  8894  00ED6E                     l15810:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  8898  00ED6E  0E00               	movlw	0
  8899  00ED70  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8900  00ED72  0E00               	movlw	0
  8901  00ED74  6F84               	movwf	fat_format@cntr& (0+255),b
  8902  00ED76                     l15812:
  8903                           
  8904                           ; BSR set to: 0
  8905  00ED76  0E02               	movlw	2
  8906  00ED78  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8907  00ED7A  B0D8               	btfsc	status,0,c
  8908  00ED7C  D011               	goto	u14720
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  8912                           
  8913                           ; BSR set to: 0
  8914                           
  8915                           ; BSR set to: 0
  8916  00ED7E  0E00               	movlw	low _buffer
  8917  00ED80  2584               	addwf	fat_format@cntr& (0+255),w,b
  8918  00ED82  6ED9               	movwf	fsr2l,c
  8919  00ED84  0E0A               	movlw	high _buffer
  8920  00ED86  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8921  00ED88  6EDA               	movwf	fsr2h,c
  8922  00ED8A  C084  F060         	movff	fat_format@cntr,__get_root@idx
  8923  00ED8E  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  8924  00ED92  ECAF  F07B         	call	__get_root	;wreg free
  8925  00ED96  6EDF               	movwf	indf2,c
  8926  00ED98  0100               	movlb	0	; () banked
  8927  00ED9A  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8928  00ED9C  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8929  00ED9E  D7EB               	goto	l15812
  8930  00EDA0                     u14720:
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  8934                           
  8935                           ; BSR set to: 0
  8936  00EDA0  0E00               	movlw	0
  8937  00EDA2  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8938  00EDA4  0E22               	movlw	34
  8939  00EDA6  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8940  00EDA8  0E00               	movlw	low _buffer
  8941  00EDAA  6F81               	movwf	flash_sector_write@data& (0+255),b
  8942  00EDAC  0E0A               	movlw	high _buffer
  8943  00EDAE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8944  00EDB0  EC1E  F0A6         	call	_flash_sector_write	;wreg free
  8945                           
  8946                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  8947  00EDB4  0E00               	movlw	0
  8948  00EDB6  0100               	movlb	0	; () banked
  8949  00EDB8  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8950  00EDBA  0E00               	movlw	0
  8951  00EDBC  6F84               	movwf	fat_format@cntr& (0+255),b
  8952  00EDBE                     l15826:
  8953                           
  8954                           ; BSR set to: 0
  8955  00EDBE  0E02               	movlw	2
  8956  00EDC0  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8957  00EDC2  B0D8               	btfsc	status,0,c
  8958  00EDC4  D00B               	goto	u14740
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  8962                           
  8963                           ; BSR set to: 0
  8964                           
  8965                           ; BSR set to: 0
  8966  00EDC6  0E00               	movlw	low _buffer
  8967  00EDC8  2584               	addwf	fat_format@cntr& (0+255),w,b
  8968  00EDCA  6ED9               	movwf	fsr2l,c
  8969  00EDCC  0E0A               	movlw	high _buffer
  8970  00EDCE  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8971  00EDD0  6EDA               	movwf	fsr2h,c
  8972  00EDD2  0E00               	movlw	0
  8973  00EDD4  6EDF               	movwf	indf2,c
  8974                           
  8975                           ; BSR set to: 0
  8976  00EDD6  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8977  00EDD8  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8978  00EDDA  D7F1               	goto	l15826
  8979  00EDDC                     u14740:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  8983                           
  8984                           ; BSR set to: 0
  8985  00EDDC  0E00               	movlw	0
  8986  00EDDE  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8987  00EDE0  0E23               	movlw	35
  8988  00EDE2  6F84               	movwf	fat_format@cntr& (0+255),b
  8989  00EDE4                     l15838:
  8990                           
  8991                           ; BSR set to: 0
  8992  00EDE4  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8993  00EDE6  E112               	bnz	l15848
  8994  00EDE8  0E26               	movlw	38
  8995  00EDEA  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8996  00EDEC  B0D8               	btfsc	status,0,c
  8997  00EDEE  D00E               	goto	u14760
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  9001                           
  9002                           ; BSR set to: 0
  9003                           
  9004                           ; BSR set to: 0
  9005  00EDF0  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  9006  00EDF4  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  9007  00EDF8  0E00               	movlw	low _buffer
  9008  00EDFA  6F81               	movwf	flash_sector_write@data& (0+255),b
  9009  00EDFC  0E0A               	movlw	high _buffer
  9010  00EDFE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9011  00EE00  EC1E  F0A6         	call	_flash_sector_write	;wreg free
  9012  00EE04  0100               	movlb	0	; () banked
  9013  00EE06  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9014  00EE08  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9015  00EE0A  D7EC               	goto	l15838
  9016  00EE0C                     u14760:
  9017  00EE0C                     l15848:
  9018                           
  9019                           ; BSR set to: 0
  9020                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  9021  00EE0C  0E00               	movlw	0
  9022  00EE0E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  9023  00EE10  0E00               	movlw	0
  9024  00EE12  6F84               	movwf	fat_format@cntr& (0+255),b
  9025  00EE14                     l15850:
  9026                           
  9027                           ; BSR set to: 0
  9028  00EE14  0E02               	movlw	2
  9029  00EE16  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  9030  00EE18  B0D8               	btfsc	status,0,c
  9031  00EE1A  D011               	goto	u14780
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  9035                           
  9036                           ; BSR set to: 0
  9037                           
  9038                           ; BSR set to: 0
  9039  00EE1C  0E00               	movlw	low _buffer
  9040  00EE1E  2584               	addwf	fat_format@cntr& (0+255),w,b
  9041  00EE20  6ED9               	movwf	fsr2l,c
  9042  00EE22  0E0A               	movlw	high _buffer
  9043  00EE24  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  9044  00EE26  6EDA               	movwf	fsr2h,c
  9045  00EE28  C084  F060         	movff	fat_format@cntr,__get_data@idx
  9046  00EE2C  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  9047  00EE30  EC70  F0AA         	call	__get_data	;wreg free
  9048  00EE34  6EDF               	movwf	indf2,c
  9049  00EE36  0100               	movlb	0	; () banked
  9050  00EE38  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9051  00EE3A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9052  00EE3C  D7EB               	goto	l15850
  9053  00EE3E                     u14780:
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  9057                           
  9058                           ; BSR set to: 0
  9059  00EE3E  0E00               	movlw	0
  9060  00EE40  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9061  00EE42  0E26               	movlw	38
  9062  00EE44  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9063  00EE46  0E00               	movlw	low _buffer
  9064  00EE48  6F81               	movwf	flash_sector_write@data& (0+255),b
  9065  00EE4A  0E0A               	movlw	high _buffer
  9066  00EE4C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9067  00EE4E  EC1E  F0A6         	call	_flash_sector_write	;wreg free
  9068  00EE52  0012               	return	
  9069  00EE54                     __end_of_fat_format:
  9070                           	opt stack 0
  9071                           tblptru	equ	0xFF8
  9072                           tblptrh	equ	0xFF7
  9073                           tblptrl	equ	0xFF6
  9074                           tablat	equ	0xFF5
  9075                           prodh	equ	0xFF4
  9076                           prodl	equ	0xFF3
  9077                           postinc0	equ	0xFEE
  9078                           wreg	equ	0xFE8
  9079                           postdec1	equ	0xFE5
  9080                           fsr1h	equ	0xFE2
  9081                           fsr1l	equ	0xFE1
  9082                           indf2	equ	0xFDF
  9083                           postinc2	equ	0xFDE
  9084                           fsr2h	equ	0xFDA
  9085                           fsr2l	equ	0xFD9
  9086                           status	equ	0xFD8
  9087                           
  9088 ;; *************** function __get_root *****************
  9089 ;; Defined at:
  9090 ;;		line 1210 in file "fat16.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;  idx             2    0[BANK0 ] unsigned int 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;		None
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      unsigned char 
  9097 ;; Registers used:
  9098 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9107 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9108 ;;Total ram usage:        6 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:   10
  9111 ;; This function calls:
  9112 ;;		Nothing
  9113 ;; This function is called by:
  9114 ;;		_fat_format
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text18
  9119  00F75E                     __ptext18:
  9120                           	opt stack 0
  9121  00F75E                     __get_root:
  9122                           	opt stack 17
  9123                           
  9124                           ;fat16.c: 1212: if(idx < 0x20)
  9125                           
  9126                           ;incstack = 0
  9127  00F75E  0100               	movlb	0	; () banked
  9128  00F760  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9129  00F762  E11D               	bnz	l14832
  9130  00F764  0E20               	movlw	32
  9131  00F766  5D60               	subwf	__get_root@idx& (0+255),w,b
  9132  00F768  B0D8               	btfsc	status,0,c
  9133  00F76A  D019               	goto	l2011
  9134                           
  9135                           ; BSR set to: 0
  9136                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  9137  00F76C  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9138  00F76E  E110               	bnz	l14826
  9139  00F770  0E0B               	movlw	11
  9140  00F772  5D60               	subwf	__get_root@idx& (0+255),w,b
  9141  00F774  B0D8               	btfsc	status,0,c
  9142  00F776  D00C               	goto	l2009
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
  9146  00F778  0EF6               	movlw	low STR_15
  9147  00F77A  2560               	addwf	__get_root@idx& (0+255),w,b
  9148  00F77C  6EF6               	movwf	tblptrl,c
  9149  00F77E  0EA2               	movlw	high STR_15
  9150  00F780  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9151  00F782  6EF7               	movwf	tblptrh,c
  9152  00F784                     	if	1	;There are 3 active tblptr bytes
  9153  00F784  6AF8               	clrf	tblptru,c
  9154  00F786  0E00               	movlw	low (__mediumconst shr (0+16))
  9155  00F788  22F8               	addwfc	tblptru,f,c
  9156  00F78A                     	endif
  9157  00F78A  0008               	tblrd		*
  9158  00F78C  50F5               	movf	tablat,w,c
  9159                           
  9160                           ; BSR set to: 0
  9161  00F78E  0012               	return	
  9162  00F790                     l2009:
  9163  00F790                     l14826:
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  9167  00F790  0E0B               	movlw	11
  9168  00F792  1960               	xorwf	__get_root@idx& (0+255),w,b
  9169  00F794  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  9170  00F796  A4D8               	btfss	status,2,c
  9171  00F798  D002               	goto	l2011
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  9175  00F79A  0E08               	movlw	8
  9176                           
  9177                           ; BSR set to: 0
  9178  00F79C  0012               	return	
  9179  00F79E                     l2011:
  9180  00F79E                     l14832:
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  9184  00F79E  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9185  00F7A0  E103               	bnz	u13531
  9186  00F7A2  0E40               	movlw	64
  9187  00F7A4  5D60               	subwf	__get_root@idx& (0+255),w,b
  9188  00F7A6  B0D8               	btfsc	status,0,c
  9189  00F7A8                     u13531:
  9190  00F7A8  D0A4               	goto	l2037
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  9194  00F7AA  0E20               	movlw	32
  9195  00F7AC  5F60               	subwf	__get_root@idx& (0+255),f,b
  9196  00F7AE  0E00               	movlw	0
  9197  00F7B0  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  9198                           
  9199                           ;fat16.c: 1226: if(idx < 0+8)
  9200  00F7B2  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9201  00F7B4  E110               	bnz	l14840
  9202  00F7B6  0E08               	movlw	8
  9203  00F7B8  5D60               	subwf	__get_root@idx& (0+255),w,b
  9204  00F7BA  B0D8               	btfsc	status,0,c
  9205  00F7BC  D00C               	goto	l2013
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  9209  00F7BE  0E02               	movlw	low STR_16
  9210  00F7C0  2560               	addwf	__get_root@idx& (0+255),w,b
  9211  00F7C2  6EF6               	movwf	tblptrl,c
  9212  00F7C4  0EA3               	movlw	high STR_16
  9213  00F7C6  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9214  00F7C8  6EF7               	movwf	tblptrh,c
  9215  00F7CA                     	if	1	;There are 3 active tblptr bytes
  9216  00F7CA  6AF8               	clrf	tblptru,c
  9217  00F7CC  0E00               	movlw	low (__mediumconst shr (0+16))
  9218  00F7CE  22F8               	addwfc	tblptru,f,c
  9219  00F7D0                     	endif
  9220  00F7D0  0008               	tblrd		*
  9221  00F7D2  50F5               	movf	tablat,w,c
  9222                           
  9223                           ; BSR set to: 0
  9224  00F7D4  0012               	return	
  9225  00F7D6                     l2013:
  9226  00F7D6                     l14840:
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  9230  00F7D6  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9231  00F7D8  E146               	bnz	l14932
  9232  00F7DA  0E0B               	movlw	11
  9233  00F7DC  5D60               	subwf	__get_root@idx& (0+255),w,b
  9234  00F7DE  B0D8               	btfsc	status,0,c
  9235  00F7E0  D042               	goto	l2015
  9236                           
  9237                           ; BSR set to: 0
  9238                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  9239  00F7E2  0EF8               	movlw	248
  9240  00F7E4  6F62               	movwf	??__get_root& (0+255),b
  9241  00F7E6  0EFF               	movlw	255
  9242  00F7E8  6F63               	movwf	(??__get_root+1)& (0+255),b
  9243  00F7EA  C060  F064         	movff	__get_root@idx,??__get_root+2
  9244  00F7EE  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  9245  00F7F2  5162               	movf	??__get_root& (0+255),w,b
  9246  00F7F4  2764               	addwf	(??__get_root+2)& (0+255),f,b
  9247  00F7F6  5163               	movf	(??__get_root+1)& (0+255),w,b
  9248  00F7F8  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  9249  00F7FA  0E2A               	movlw	low STR_17
  9250  00F7FC  2564               	addwf	(??__get_root+2)& (0+255),w,b
  9251  00F7FE  6EF6               	movwf	tblptrl,c
  9252  00F800  0EA3               	movlw	high STR_17
  9253  00F802  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  9254  00F804  6EF7               	movwf	tblptrh,c
  9255  00F806                     	if	1	;There are 3 active tblptr bytes
  9256  00F806  6AF8               	clrf	tblptru,c
  9257  00F808  0E00               	movlw	low (__mediumconst shr (0+16))
  9258  00F80A  22F8               	addwfc	tblptru,f,c
  9259  00F80C                     	endif
  9260  00F80C  0008               	tblrd		*
  9261  00F80E  50F5               	movf	tablat,w,c
  9262                           
  9263                           ; BSR set to: 0
  9264  00F810  0012               	return	
  9265  00F812                     
  9266                           ; BSR set to: 0
  9267                           ;fat16.c: 1237: return 0x20;
  9268                           
  9269                           ; BSR set to: 0
  9270  00F812  0E20               	movlw	32
  9271                           
  9272                           ; BSR set to: 0
  9273  00F814  0012               	return	
  9274  00F816                     
  9275                           ; BSR set to: 0
  9276                           ;fat16.c: 1239: return 0x06;
  9277                           
  9278                           ; BSR set to: 0
  9279  00F816  0E06               	movlw	6
  9280                           
  9281                           ; BSR set to: 0
  9282  00F818  0012               	return	
  9283  00F81A                     
  9284                           ; BSR set to: 0
  9285                           ;fat16.c: 1241: return 0x28;
  9286                           
  9287                           ; BSR set to: 0
  9288  00F81A  0E28               	movlw	40
  9289                           
  9290                           ; BSR set to: 0
  9291  00F81C  0012               	return	
  9292  00F81E                     
  9293                           ; BSR set to: 0
  9294                           ;fat16.c: 1243: return 0x78;
  9295                           
  9296                           ; BSR set to: 0
  9297  00F81E  0E78               	movlw	120
  9298                           
  9299                           ; BSR set to: 0
  9300  00F820  0012               	return	
  9301  00F822                     
  9302                           ; BSR set to: 0
  9303                           ;fat16.c: 1245: return 0xDE;
  9304                           
  9305                           ; BSR set to: 0
  9306  00F822  0EDE               	movlw	222
  9307                           
  9308                           ; BSR set to: 0
  9309  00F824  0012               	return	
  9310  00F826                     
  9311                           ; BSR set to: 0
  9312                           ;fat16.c: 1247: return 0x38;
  9313                           
  9314                           ; BSR set to: 0
  9315  00F826  0E38               	movlw	56
  9316                           
  9317                           ; BSR set to: 0
  9318  00F828  0012               	return	
  9319  00F82A                     
  9320                           ; BSR set to: 0
  9321                           ;fat16.c: 1249: return 0x5F;
  9322                           
  9323                           ; BSR set to: 0
  9324  00F82A  0E5F               	movlw	95
  9325                           
  9326                           ; BSR set to: 0
  9327  00F82C  0012               	return	
  9328  00F82E                     
  9329                           ; BSR set to: 0
  9330                           ;fat16.c: 1251: return 0x4B;
  9331                           
  9332                           ; BSR set to: 0
  9333  00F82E  0E4B               	movlw	75
  9334                           
  9335                           ; BSR set to: 0
  9336  00F830  0012               	return	
  9337  00F832                     
  9338                           ; BSR set to: 0
  9339                           ;fat16.c: 1253: return 0x00;
  9340                           
  9341                           ; BSR set to: 0
  9342  00F832  0E00               	movlw	0
  9343                           
  9344                           ; BSR set to: 0
  9345  00F834  0012               	return	
  9346  00F836                     
  9347                           ; BSR set to: 0
  9348                           ;fat16.c: 1255: return 0x00;
  9349                           
  9350                           ; BSR set to: 0
  9351  00F836  0E00               	movlw	0
  9352                           
  9353                           ; BSR set to: 0
  9354  00F838  0012               	return	
  9355  00F83A                     
  9356                           ; BSR set to: 0
  9357                           ;fat16.c: 1257: return 0x04;
  9358                           
  9359                           ; BSR set to: 0
  9360  00F83A  0E04               	movlw	4
  9361                           
  9362                           ; BSR set to: 0
  9363  00F83C  0012               	return	
  9364  00F83E                     
  9365                           ; BSR set to: 0
  9366                           ;fat16.c: 1259: return 0x77;
  9367                           
  9368                           ; BSR set to: 0
  9369  00F83E  0E77               	movlw	119
  9370                           
  9371                           ; BSR set to: 0
  9372  00F840  0012               	return	
  9373  00F842                     
  9374                           ; BSR set to: 0
  9375                           ;fat16.c: 1261: return 0xDE;
  9376                           
  9377                           ; BSR set to: 0
  9378  00F842  0EDE               	movlw	222
  9379                           
  9380                           ; BSR set to: 0
  9381  00F844  0012               	return	
  9382  00F846                     
  9383                           ; BSR set to: 0
  9384                           ;fat16.c: 1263: return 0x38;
  9385                           
  9386                           ; BSR set to: 0
  9387  00F846  0E38               	movlw	56
  9388                           
  9389                           ; BSR set to: 0
  9390  00F848  0012               	return	
  9391  00F84A                     
  9392                           ; BSR set to: 0
  9393                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  9394                           
  9395                           ; BSR set to: 0
  9396  00F84A  0E02               	movlw	2
  9397                           
  9398                           ; BSR set to: 0
  9399  00F84C  0012               	return	
  9400  00F84E                     
  9401                           ; BSR set to: 0
  9402                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  9403                           
  9404                           ; BSR set to: 0
  9405  00F84E  0E00               	movlw	0
  9406                           
  9407                           ; BSR set to: 0
  9408  00F850  0012               	return	
  9409  00F852                     
  9410                           ; BSR set to: 0
  9411                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  9412                           
  9413                           ; BSR set to: 0
  9414  00F852  0E0C               	movlw	12
  9415                           
  9416                           ; BSR set to: 0
  9417  00F854  0012               	return	
  9418  00F856                     
  9419                           ; BSR set to: 0
  9420                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  9421                           
  9422                           ; BSR set to: 0
  9423  00F856  0E00               	movlw	0
  9424                           
  9425                           ; BSR set to: 0
  9426  00F858  0012               	return	
  9427  00F85A                     
  9428                           ; BSR set to: 0
  9429                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  9430                           
  9431                           ; BSR set to: 0
  9432  00F85A  0E00               	movlw	0
  9433                           
  9434                           ; BSR set to: 0
  9435  00F85C  0012               	return	
  9436  00F85E                     
  9437                           ; BSR set to: 0
  9438                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9439                           
  9440                           ; BSR set to: 0
  9441  00F85E  0E00               	movlw	0
  9442                           
  9443                           ; BSR set to: 0
  9444  00F860  0012               	return	
  9445  00F862                     
  9446                           ; BSR set to: 0
  9447                           ;fat16.c: 1277: return 0x00;
  9448                           
  9449                           ; BSR set to: 0
  9450  00F862  0E00               	movlw	0
  9451                           
  9452                           ; BSR set to: 0
  9453  00F864  0012               	return	
  9454  00F866                     l2015:
  9455  00F866                     l14932:
  9456                           
  9457                           ; BSR set to: 0
  9458  00F866  C060  F062         	movff	__get_root@idx,??__get_root
  9459  00F86A  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  9460                           
  9461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9462                           ; Switch size 1, requested type "space"
  9463                           ; Number of cases is 1, Range of values is 0 to 0
  9464                           ; switch strategies available:
  9465                           ; Name         Instructions Cycles
  9466                           ; simple_byte            4     3 (average)
  9467                           ;	Chosen strategy is simple_byte
  9468  00F86E  5163               	movf	(??__get_root+1)& (0+255),w,b
  9469  00F870  0A00               	xorlw	0	; case 0
  9470  00F872  A4D8               	btfss	status,2,c
  9471  00F874  D7F6               	goto	l2036
  9472                           
  9473                           ; BSR set to: 0
  9474                           ; Switch size 1, requested type "space"
  9475                           ; Number of cases is 20, Range of values is 11 to 31
  9476                           ; switch strategies available:
  9477                           ; Name         Instructions Cycles
  9478                           ; simple_byte           61    31 (average)
  9479                           ;	Chosen strategy is simple_byte
  9480  00F876  5162               	movf	??__get_root& (0+255),w,b
  9481  00F878  0A0B               	xorlw	11	; case 11
  9482  00F87A  B4D8               	btfsc	status,2,c
  9483  00F87C  D7CA               	goto	l2016
  9484  00F87E  0A06               	xorlw	6	; case 13
  9485  00F880  B4D8               	btfsc	status,2,c
  9486  00F882  D7C9               	goto	l2017
  9487  00F884  0A03               	xorlw	3	; case 14
  9488  00F886  B4D8               	btfsc	status,2,c
  9489  00F888  D7C8               	goto	l2018
  9490  00F88A  0A01               	xorlw	1	; case 15
  9491  00F88C  B4D8               	btfsc	status,2,c
  9492  00F88E  D7C7               	goto	l2019
  9493  00F890  0A1F               	xorlw	31	; case 16
  9494  00F892  B4D8               	btfsc	status,2,c
  9495  00F894  D7C6               	goto	l2020
  9496  00F896  0A01               	xorlw	1	; case 17
  9497  00F898  B4D8               	btfsc	status,2,c
  9498  00F89A  D7C5               	goto	l2021
  9499  00F89C  0A03               	xorlw	3	; case 18
  9500  00F89E  B4D8               	btfsc	status,2,c
  9501  00F8A0  D7C4               	goto	l2022
  9502  00F8A2  0A01               	xorlw	1	; case 19
  9503  00F8A4  B4D8               	btfsc	status,2,c
  9504  00F8A6  D7C3               	goto	l2023
  9505  00F8A8  0A07               	xorlw	7	; case 20
  9506  00F8AA  B4D8               	btfsc	status,2,c
  9507  00F8AC  D7C2               	goto	l2024
  9508  00F8AE  0A01               	xorlw	1	; case 21
  9509  00F8B0  B4D8               	btfsc	status,2,c
  9510  00F8B2  D7C1               	goto	l2025
  9511  00F8B4  0A03               	xorlw	3	; case 22
  9512  00F8B6  B4D8               	btfsc	status,2,c
  9513  00F8B8  D7C0               	goto	l2026
  9514  00F8BA  0A01               	xorlw	1	; case 23
  9515  00F8BC  B4D8               	btfsc	status,2,c
  9516  00F8BE  D7BF               	goto	l2027
  9517  00F8C0  0A0F               	xorlw	15	; case 24
  9518  00F8C2  B4D8               	btfsc	status,2,c
  9519  00F8C4  D7BE               	goto	l2028
  9520  00F8C6  0A01               	xorlw	1	; case 25
  9521  00F8C8  B4D8               	btfsc	status,2,c
  9522  00F8CA  D7BD               	goto	l2029
  9523  00F8CC  0A03               	xorlw	3	; case 26
  9524  00F8CE  B4D8               	btfsc	status,2,c
  9525  00F8D0  D7BC               	goto	l2030
  9526  00F8D2  0A01               	xorlw	1	; case 27
  9527  00F8D4  B4D8               	btfsc	status,2,c
  9528  00F8D6  D7BB               	goto	l2031
  9529  00F8D8  0A07               	xorlw	7	; case 28
  9530  00F8DA  B4D8               	btfsc	status,2,c
  9531  00F8DC  D7BA               	goto	l2032
  9532  00F8DE  0A01               	xorlw	1	; case 29
  9533  00F8E0  B4D8               	btfsc	status,2,c
  9534  00F8E2  D7B9               	goto	l2033
  9535  00F8E4  0A03               	xorlw	3	; case 30
  9536  00F8E6  B4D8               	btfsc	status,2,c
  9537  00F8E8  D7B8               	goto	l2034
  9538  00F8EA  0A01               	xorlw	1	; case 31
  9539  00F8EC  B4D8               	btfsc	status,2,c
  9540  00F8EE  D7B7               	goto	l2035
  9541  00F8F0  D7B8               	goto	l2036
  9542  00F8F2                     l2037:
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  9546                           
  9547                           ; BSR set to: 0
  9548                           
  9549                           ; BSR set to: 0
  9550  00F8F2  0E00               	movlw	0
  9551  00F8F4  0012               	return	
  9552  00F8F6                     __end_of__get_root:
  9553                           	opt stack 0
  9554                           tblptru	equ	0xFF8
  9555                           tblptrh	equ	0xFF7
  9556                           tblptrl	equ	0xFF6
  9557                           tablat	equ	0xFF5
  9558                           prodh	equ	0xFF4
  9559                           prodl	equ	0xFF3
  9560                           postinc0	equ	0xFEE
  9561                           wreg	equ	0xFE8
  9562                           postdec1	equ	0xFE5
  9563                           fsr1h	equ	0xFE2
  9564                           fsr1l	equ	0xFE1
  9565                           indf2	equ	0xFDF
  9566                           postinc2	equ	0xFDE
  9567                           fsr2h	equ	0xFDA
  9568                           fsr2l	equ	0xFD9
  9569                           status	equ	0xFD8
  9570                           
  9571 ;; *************** function __get_mbr *****************
  9572 ;; Defined at:
  9573 ;;		line 1037 in file "fat16.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;  idx             2    0[BANK0 ] unsigned int 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;		None
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  1    wreg      unsigned char 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9590 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9591 ;;Total ram usage:        4 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:   10
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_fat_get_format_status
  9598 ;;		_fat_format
  9599 ;; This function uses a non-reentrant model
  9600 ;;
  9601                           
  9602                           	psect	text19
  9603  0125D8                     __ptext19:
  9604                           	opt stack 0
  9605  0125D8                     __get_mbr:
  9606                           	opt stack 17
  9607                           
  9608                           ;fat16.c: 1039: switch (idx)
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;incstack = 0
  9612  0125D8  D026               	goto	l1918
  9613  0125DA                     
  9614                           ;fat16.c: 1042: return 0x80;
  9615  0125DA  0E80               	movlw	128
  9616  0125DC  0012               	return	
  9617  0125DE                     
  9618                           ;fat16.c: 1044: return 0;
  9619  0125DE  0E00               	movlw	0
  9620  0125E0  0012               	return	
  9621  0125E2                     
  9622                           ;fat16.c: 1046: return 2;
  9623  0125E2  0E02               	movlw	2
  9624  0125E4  0012               	return	
  9625  0125E6                     
  9626                           ;fat16.c: 1048: return 0;
  9627  0125E6  0E00               	movlw	0
  9628  0125E8  0012               	return	
  9629  0125EA                     
  9630                           ;fat16.c: 1050: return 0x04;
  9631  0125EA  0E04               	movlw	4
  9632  0125EC  0012               	return	
  9633  0125EE                     
  9634                           ;fat16.c: 1052: return 2;
  9635  0125EE  0E02               	movlw	2
  9636  0125F0  0012               	return	
  9637  0125F2                     
  9638                           ;fat16.c: 1054: return 3;
  9639  0125F2  0E03               	movlw	3
  9640  0125F4  0012               	return	
  9641  0125F6                     
  9642                           ;fat16.c: 1056: return 8;
  9643  0125F6  0E08               	movlw	8
  9644  0125F8  0012               	return	
  9645  0125FA                     
  9646                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9647  0125FA  0E01               	movlw	1
  9648  0125FC  0012               	return	
  9649  0125FE                     
  9650                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9651  0125FE  0E00               	movlw	0
  9652  012600  0012               	return	
  9653  012602                     
  9654                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9655  012602  0E00               	movlw	0
  9656  012604  0012               	return	
  9657  012606                     
  9658                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9659  012606  0E00               	movlw	0
  9660  012608  0012               	return	
  9661  01260A                     
  9662                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9663  01260A  0EFF               	movlw	255
  9664  01260C  0012               	return	
  9665  01260E                     
  9666                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9667  01260E  0E1F               	movlw	31
  9668  012610  0012               	return	
  9669  012612                     
  9670                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9671  012612  0E00               	movlw	0
  9672  012614  0012               	return	
  9673  012616                     
  9674                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9675  012616  0E00               	movlw	0
  9676  012618  0012               	return	
  9677  01261A                     
  9678                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9679  01261A  0E55               	movlw	85
  9680  01261C  0012               	return	
  9681  01261E                     
  9682                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9683  01261E  0EAA               	movlw	170
  9684  012620  0012               	return	
  9685  012622                     
  9686                           ;fat16.c: 1078: return 0X00;
  9687  012622  0E00               	movlw	0
  9688                           
  9689                           ;fat16.c: 1079: }
  9690  012624  0012               	return	
  9691  012626                     l1918:
  9692  012626  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9693  01262A  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9694                           
  9695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9696                           ; Switch size 1, requested type "space"
  9697                           ; Number of cases is 1, Range of values is 1 to 1
  9698                           ; switch strategies available:
  9699                           ; Name         Instructions Cycles
  9700                           ; simple_byte            4     3 (average)
  9701                           ;	Chosen strategy is simple_byte
  9702  01262E  0100               	movlb	0	; () banked
  9703  012630  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9704  012632  0A01               	xorlw	1	; case 1
  9705  012634  A4D8               	btfss	status,2,c
  9706  012636  D7F5               	goto	l1938
  9707                           
  9708                           ; BSR set to: 0
  9709                           ; Switch size 1, requested type "space"
  9710                           ; Number of cases is 18, Range of values is 190 to 255
  9711                           ; switch strategies available:
  9712                           ; Name         Instructions Cycles
  9713                           ; simple_byte           55    28 (average)
  9714                           ;	Chosen strategy is simple_byte
  9715  012638  5162               	movf	??__get_mbr& (0+255),w,b
  9716  01263A  0ABE               	xorlw	190	; case 190
  9717  01263C  B4D8               	btfsc	status,2,c
  9718  01263E  D7CD               	goto	l1919
  9719  012640  0A01               	xorlw	1	; case 191
  9720  012642  B4D8               	btfsc	status,2,c
  9721  012644  D7CC               	goto	l1921
  9722  012646  0A7F               	xorlw	127	; case 192
  9723  012648  B4D8               	btfsc	status,2,c
  9724  01264A  D7CB               	goto	l1922
  9725  01264C  0A01               	xorlw	1	; case 193
  9726  01264E  B4D8               	btfsc	status,2,c
  9727  012650  D7CA               	goto	l1923
  9728  012652  0A03               	xorlw	3	; case 194
  9729  012654  B4D8               	btfsc	status,2,c
  9730  012656  D7C9               	goto	l1924
  9731  012658  0A01               	xorlw	1	; case 195
  9732  01265A  B4D8               	btfsc	status,2,c
  9733  01265C  D7C8               	goto	l1925
  9734  01265E  0A07               	xorlw	7	; case 196
  9735  012660  B4D8               	btfsc	status,2,c
  9736  012662  D7C7               	goto	l1926
  9737  012664  0A01               	xorlw	1	; case 197
  9738  012666  B4D8               	btfsc	status,2,c
  9739  012668  D7C6               	goto	l1927
  9740  01266A  0A03               	xorlw	3	; case 198
  9741  01266C  B4D8               	btfsc	status,2,c
  9742  01266E  D7C5               	goto	l1928
  9743  012670  0A01               	xorlw	1	; case 199
  9744  012672  B4D8               	btfsc	status,2,c
  9745  012674  D7C4               	goto	l1929
  9746  012676  0A0F               	xorlw	15	; case 200
  9747  012678  B4D8               	btfsc	status,2,c
  9748  01267A  D7C3               	goto	l1930
  9749  01267C  0A01               	xorlw	1	; case 201
  9750  01267E  B4D8               	btfsc	status,2,c
  9751  012680  D7C2               	goto	l1931
  9752  012682  0A03               	xorlw	3	; case 202
  9753  012684  B4D8               	btfsc	status,2,c
  9754  012686  D7C1               	goto	l1932
  9755  012688  0A01               	xorlw	1	; case 203
  9756  01268A  B4D8               	btfsc	status,2,c
  9757  01268C  D7C0               	goto	l1933
  9758  01268E  0A07               	xorlw	7	; case 204
  9759  012690  B4D8               	btfsc	status,2,c
  9760  012692  D7BF               	goto	l1934
  9761  012694  0A01               	xorlw	1	; case 205
  9762  012696  B4D8               	btfsc	status,2,c
  9763  012698  D7BE               	goto	l1935
  9764  01269A  0A33               	xorlw	51	; case 254
  9765  01269C  B4D8               	btfsc	status,2,c
  9766  01269E  D7BD               	goto	l1936
  9767  0126A0  0A01               	xorlw	1	; case 255
  9768  0126A2  B4D8               	btfsc	status,2,c
  9769  0126A4  D7BC               	goto	l1937
  9770  0126A6  D7BD               	goto	l1938
  9771  0126A8                     __end_of__get_mbr:
  9772                           	opt stack 0
  9773                           tblptru	equ	0xFF8
  9774                           tblptrh	equ	0xFF7
  9775                           tblptrl	equ	0xFF6
  9776                           tablat	equ	0xFF5
  9777                           prodh	equ	0xFF4
  9778                           prodl	equ	0xFF3
  9779                           postinc0	equ	0xFEE
  9780                           wreg	equ	0xFE8
  9781                           postdec1	equ	0xFE5
  9782                           fsr1h	equ	0xFE2
  9783                           fsr1l	equ	0xFE1
  9784                           indf2	equ	0xFDF
  9785                           postinc2	equ	0xFDE
  9786                           fsr2h	equ	0xFDA
  9787                           fsr2l	equ	0xFD9
  9788                           status	equ	0xFD8
  9789                           
  9790 ;; *************** function __get_fbr *****************
  9791 ;; Defined at:
  9792 ;;		line 1082 in file "fat16.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  idx             2    0[BANK0 ] unsigned int 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;                  1    wreg      unsigned char 
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9809 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9810 ;;Total ram usage:        4 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:   10
  9813 ;; This function calls:
  9814 ;;		Nothing
  9815 ;; This function is called by:
  9816 ;;		_fat_get_format_status
  9817 ;;		_fat_format
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text20
  9822  00E0E2                     __ptext20:
  9823                           	opt stack 0
  9824  00E0E2                     __get_fbr:
  9825                           	opt stack 17
  9826                           
  9827                           ;fat16.c: 1084: switch (idx)
  9828                           
  9829                           ;incstack = 0
  9830  00E0E2  D098               	goto	l1942
  9831  00E0E4                     
  9832                           ;fat16.c: 1087: return 0xEB;
  9833  00E0E4  0EEB               	movlw	235
  9834  00E0E6  0012               	return	
  9835  00E0E8                     
  9836                           ;fat16.c: 1089: return 0x3C;
  9837  00E0E8  0E3C               	movlw	60
  9838  00E0EA  0012               	return	
  9839  00E0EC                     
  9840                           ;fat16.c: 1091: return 0x90;
  9841  00E0EC  0E90               	movlw	144
  9842  00E0EE  0012               	return	
  9843  00E0F0                     
  9844                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  9845  00E0F0  0E0B               	movlw	low STR_7
  9846  00E0F2  6EF6               	movwf	tblptrl,c
  9847  00E0F4                     	if	1	;There is more than 1 active tblptr byte
  9848  00E0F4  0EA3               	movlw	high STR_7
  9849  00E0F6  6EF7               	movwf	tblptrh,c
  9850  00E0F8                     	endif
  9851  00E0F8                     	if	1	;There are 3 active tblptr bytes
  9852  00E0F8  0E00               	movlw	low (STR_7 shr (0+16))
  9853  00E0FA  6EF8               	movwf	tblptru,c
  9854  00E0FC                     	endif
  9855  00E0FC  0008               	tblrd		*
  9856  00E0FE  50F5               	movf	tablat,w,c
  9857  00E100  0012               	return	
  9858  00E102                     
  9859                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  9860  00E102  0E0C               	movlw	low (STR_7+1)
  9861  00E104  6EF6               	movwf	tblptrl,c
  9862  00E106  0EA3               	movlw	high (STR_7+1)
  9863  00E108  6EF7               	movwf	tblptrh,c
  9864  00E10A                     	if	0	;tblptru may be non-zero
  9865  00E10A                     	endif
  9866  00E10A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9867  00E10A  0E00               	movlw	low (__mediumconst shr (0+16))
  9868  00E10C  6EF8               	movwf	tblptru,c
  9869  00E10E                     	endif
  9870  00E10E  0008               	tblrd		*
  9871  00E110  50F5               	movf	tablat,w,c
  9872  00E112  0012               	return	
  9873  00E114                     
  9874                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  9875  00E114  0E0D               	movlw	low (STR_7+2)
  9876  00E116  6EF6               	movwf	tblptrl,c
  9877  00E118  0EA3               	movlw	high (STR_7+2)
  9878  00E11A  6EF7               	movwf	tblptrh,c
  9879  00E11C                     	if	0	;tblptru may be non-zero
  9880  00E11C                     	endif
  9881  00E11C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9882  00E11C  0E00               	movlw	low (__mediumconst shr (0+16))
  9883  00E11E  6EF8               	movwf	tblptru,c
  9884  00E120                     	endif
  9885  00E120  0008               	tblrd		*
  9886  00E122  50F5               	movf	tablat,w,c
  9887  00E124  0012               	return	
  9888  00E126                     
  9889                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  9890  00E126  0E0E               	movlw	low (STR_7+3)
  9891  00E128  6EF6               	movwf	tblptrl,c
  9892  00E12A  0EA3               	movlw	high (STR_7+3)
  9893  00E12C  6EF7               	movwf	tblptrh,c
  9894  00E12E                     	if	0	;tblptru may be non-zero
  9895  00E12E                     	endif
  9896  00E12E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9897  00E12E  0E00               	movlw	low (__mediumconst shr (0+16))
  9898  00E130  6EF8               	movwf	tblptru,c
  9899  00E132                     	endif
  9900  00E132  0008               	tblrd		*
  9901  00E134  50F5               	movf	tablat,w,c
  9902  00E136  0012               	return	
  9903  00E138                     
  9904                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  9905  00E138  0E0F               	movlw	low (STR_7+4)
  9906  00E13A  6EF6               	movwf	tblptrl,c
  9907  00E13C  0EA3               	movlw	high (STR_7+4)
  9908  00E13E  6EF7               	movwf	tblptrh,c
  9909  00E140                     	if	0	;tblptru may be non-zero
  9910  00E140                     	endif
  9911  00E140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9912  00E140  0E00               	movlw	low (__mediumconst shr (0+16))
  9913  00E142  6EF8               	movwf	tblptru,c
  9914  00E144                     	endif
  9915  00E144  0008               	tblrd		*
  9916  00E146  50F5               	movf	tablat,w,c
  9917  00E148  0012               	return	
  9918  00E14A                     
  9919                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  9920  00E14A  0E10               	movlw	low (STR_7+5)
  9921  00E14C  6EF6               	movwf	tblptrl,c
  9922  00E14E  0EA3               	movlw	high (STR_7+5)
  9923  00E150  6EF7               	movwf	tblptrh,c
  9924  00E152                     	if	0	;tblptru may be non-zero
  9925  00E152                     	endif
  9926  00E152                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9927  00E152  0E00               	movlw	low (__mediumconst shr (0+16))
  9928  00E154  6EF8               	movwf	tblptru,c
  9929  00E156                     	endif
  9930  00E156  0008               	tblrd		*
  9931  00E158  50F5               	movf	tablat,w,c
  9932  00E15A  0012               	return	
  9933  00E15C                     
  9934                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  9935  00E15C  0E11               	movlw	low (STR_7+6)
  9936  00E15E  6EF6               	movwf	tblptrl,c
  9937  00E160  0EA3               	movlw	high (STR_7+6)
  9938  00E162  6EF7               	movwf	tblptrh,c
  9939  00E164                     	if	0	;tblptru may be non-zero
  9940  00E164                     	endif
  9941  00E164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9942  00E164  0E00               	movlw	low (__mediumconst shr (0+16))
  9943  00E166  6EF8               	movwf	tblptru,c
  9944  00E168                     	endif
  9945  00E168  0008               	tblrd		*
  9946  00E16A  50F5               	movf	tablat,w,c
  9947  00E16C  0012               	return	
  9948  00E16E                     
  9949                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  9950  00E16E  0E12               	movlw	low (STR_7+7)
  9951  00E170  6EF6               	movwf	tblptrl,c
  9952  00E172  0EA3               	movlw	high (STR_7+7)
  9953  00E174  6EF7               	movwf	tblptrh,c
  9954  00E176                     	if	0	;tblptru may be non-zero
  9955  00E176                     	endif
  9956  00E176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9957  00E176  0E00               	movlw	low (__mediumconst shr (0+16))
  9958  00E178  6EF8               	movwf	tblptru,c
  9959  00E17A                     	endif
  9960  00E17A  0008               	tblrd		*
  9961  00E17C  50F5               	movf	tablat,w,c
  9962  00E17E  0012               	return	
  9963  00E180                     
  9964                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  9965  00E180  0E00               	movlw	0
  9966  00E182  0012               	return	
  9967  00E184                     
  9968                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9969  00E184  0E02               	movlw	2
  9970  00E186  0012               	return	
  9971  00E188                     
  9972                           ;fat16.c: 1113: return 1;
  9973  00E188  0E01               	movlw	1
  9974  00E18A  0012               	return	
  9975  00E18C                     
  9976                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  9977  00E18C  0E01               	movlw	1
  9978  00E18E  0012               	return	
  9979  00E190                     
  9980                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9981  00E190  0E00               	movlw	0
  9982  00E192  0012               	return	
  9983  00E194                     
  9984                           ;fat16.c: 1119: return 1;
  9985  00E194  0E01               	movlw	1
  9986  00E196  0012               	return	
  9987  00E198                     
  9988                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  9989  00E198  0E40               	movlw	64
  9990  00E19A  0012               	return	
  9991  00E19C                     
  9992                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9993  00E19C  0E00               	movlw	0
  9994  00E19E  0012               	return	
  9995  00E1A0                     
  9996                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9997  00E1A0  0EFF               	movlw	255
  9998  00E1A2  0012               	return	
  9999  00E1A4                     
 10000                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 10001  00E1A4  0E1F               	movlw	31
 10002  00E1A6  0012               	return	
 10003  00E1A8                     
 10004                           ;fat16.c: 1129: return 0XF8;
 10005  00E1A8  0EF8               	movlw	248
 10006  00E1AA  0012               	return	
 10007  00E1AC                     
 10008                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 10009  00E1AC  0E20               	movlw	32
 10010  00E1AE  0012               	return	
 10011  00E1B0                     
 10012                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 10013  00E1B0  0E00               	movlw	0
 10014  00E1B2  0012               	return	
 10015  00E1B4                     
 10016                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 10017  00E1B4  0E3F               	movlw	63
 10018  00E1B6  0012               	return	
 10019  00E1B8                     
 10020                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 10021  00E1B8  0E00               	movlw	0
 10022  00E1BA  0012               	return	
 10023  00E1BC                     
 10024                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 10025  00E1BC  0E10               	movlw	16
 10026  00E1BE  0012               	return	
 10027  00E1C0                     
 10028                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 10029  00E1C0  0E00               	movlw	0
 10030  00E1C2  0012               	return	
 10031  00E1C4                     
 10032                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 10033  00E1C4  0E00               	movlw	0
 10034  00E1C6  0012               	return	
 10035  00E1C8                     
 10036                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 10037  00E1C8  0E00               	movlw	0
 10038  00E1CA  0012               	return	
 10039  00E1CC                     
 10040                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 10041  00E1CC  0E00               	movlw	0
 10042  00E1CE  0012               	return	
 10043  00E1D0                     
 10044                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 10045  00E1D0  0E00               	movlw	0
 10046  00E1D2  0012               	return	
 10047  00E1D4                     
 10048                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 10049  00E1D4  0E01               	movlw	1
 10050  00E1D6  0012               	return	
 10051  00E1D8                     
 10052                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 10053  00E1D8  0E00               	movlw	0
 10054  00E1DA  0012               	return	
 10055  00E1DC                     
 10056                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 10057  00E1DC  0E22               	movlw	34
 10058  00E1DE  0012               	return	
 10059  00E1E0                     
 10060                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 10061  00E1E0  0E00               	movlw	0
 10062  00E1E2  0012               	return	
 10063  00E1E4                     
 10064                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 10065                           
 10066                           ;fat16.c: 1160: case 0x2F:
 10067  00E1E4  0E00               	movlw	0
 10068  00E1E6  0012               	return	
 10069  00E1E8                     
 10070                           ;fat16.c: 1163: return 'F';
 10071  00E1E8  0E46               	movlw	70
 10072  00E1EA  0012               	return	
 10073  00E1EC                     
 10074                           ;fat16.c: 1165: return 'A';
 10075  00E1EC  0E41               	movlw	65
 10076  00E1EE  0012               	return	
 10077  00E1F0                     
 10078                           ;fat16.c: 1167: return 'T';
 10079  00E1F0  0E54               	movlw	84
 10080  00E1F2  0012               	return	
 10081  00E1F4                     
 10082                           ;fat16.c: 1169: return '1';
 10083  00E1F4  0E31               	movlw	49
 10084  00E1F6  0012               	return	
 10085  00E1F8                     
 10086                           ;fat16.c: 1171: return '6';
 10087  00E1F8  0E36               	movlw	54
 10088  00E1FA  0012               	return	
 10089  00E1FC                     
 10090                           ;fat16.c: 1173: return ' ';
 10091  00E1FC  0E20               	movlw	32
 10092  00E1FE  0012               	return	
 10093  00E200                     
 10094                           ;fat16.c: 1175: return ' ';
 10095  00E200  0E20               	movlw	32
 10096  00E202  0012               	return	
 10097  00E204                     
 10098                           ;fat16.c: 1177: return ' ';
 10099  00E204  0E20               	movlw	32
 10100  00E206  0012               	return	
 10101  00E208                     
 10102                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 10103  00E208  0E55               	movlw	85
 10104  00E20A  0012               	return	
 10105  00E20C                     
 10106                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 10107  00E20C  0EAA               	movlw	170
 10108  00E20E  0012               	return	
 10109  00E210                     
 10110                           ;fat16.c: 1183: return 0X00;
 10111  00E210  0E00               	movlw	0
 10112                           
 10113                           ;fat16.c: 1184: }
 10114  00E212  0012               	return	
 10115  00E214                     l1942:
 10116  00E214  C060  F062         	movff	__get_fbr@idx,??__get_fbr
 10117  00E218  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
 10118                           
 10119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10120                           ; Switch size 1, requested type "space"
 10121                           ; Number of cases is 2, Range of values is 0 to 1
 10122                           ; switch strategies available:
 10123                           ; Name         Instructions Cycles
 10124                           ; simple_byte            7     4 (average)
 10125                           ;	Chosen strategy is simple_byte
 10126  00E21C  0100               	movlb	0	; () banked
 10127  00E21E  5163               	movf	(??__get_fbr+1)& (0+255),w,b
 10128  00E220  0A00               	xorlw	0	; case 0
 10129  00E222  B4D8               	btfsc	status,2,c
 10130  00E224  D004               	goto	l19344
 10131  00E226  0A01               	xorlw	1	; case 1
 10132  00E228  B4D8               	btfsc	status,2,c
 10133  00E22A  D08D               	goto	l19346
 10134  00E22C  D7F1               	goto	l1992
 10135  00E22E                     l19344:
 10136                           
 10137                           ; BSR set to: 0
 10138                           ; Switch size 1, requested type "space"
 10139                           ; Number of cases is 46, Range of values is 0 to 61
 10140                           ; switch strategies available:
 10141                           ; Name         Instructions Cycles
 10142                           ; simple_byte          139    70 (average)
 10143                           ;	Chosen strategy is simple_byte
 10144  00E22E  5162               	movf	??__get_fbr& (0+255),w,b
 10145  00E230  0A00               	xorlw	0	; case 0
 10146  00E232  B4D8               	btfsc	status,2,c
 10147  00E234  D757               	goto	l1943
 10148  00E236  0A01               	xorlw	1	; case 1
 10149  00E238  B4D8               	btfsc	status,2,c
 10150  00E23A  D756               	goto	l1945
 10151  00E23C  0A03               	xorlw	3	; case 2
 10152  00E23E  B4D8               	btfsc	status,2,c
 10153  00E240  D755               	goto	l1946
 10154  00E242  0A01               	xorlw	1	; case 3
 10155  00E244  B4D8               	btfsc	status,2,c
 10156  00E246  D754               	goto	l1947
 10157  00E248  0A07               	xorlw	7	; case 4
 10158  00E24A  B4D8               	btfsc	status,2,c
 10159  00E24C  D75A               	goto	l1948
 10160  00E24E  0A01               	xorlw	1	; case 5
 10161  00E250  B4D8               	btfsc	status,2,c
 10162  00E252  D760               	goto	l1949
 10163  00E254  0A03               	xorlw	3	; case 6
 10164  00E256  B4D8               	btfsc	status,2,c
 10165  00E258  D766               	goto	l1950
 10166  00E25A  0A01               	xorlw	1	; case 7
 10167  00E25C  B4D8               	btfsc	status,2,c
 10168  00E25E  D76C               	goto	l1951
 10169  00E260  0A0F               	xorlw	15	; case 8
 10170  00E262  B4D8               	btfsc	status,2,c
 10171  00E264  D772               	goto	l1952
 10172  00E266  0A01               	xorlw	1	; case 9
 10173  00E268  B4D8               	btfsc	status,2,c
 10174  00E26A  D778               	goto	l1953
 10175  00E26C  0A03               	xorlw	3	; case 10
 10176  00E26E  B4D8               	btfsc	status,2,c
 10177  00E270  D77E               	goto	l1954
 10178  00E272  0A01               	xorlw	1	; case 11
 10179  00E274  B4D8               	btfsc	status,2,c
 10180  00E276  D784               	goto	l1955
 10181  00E278  0A07               	xorlw	7	; case 12
 10182  00E27A  B4D8               	btfsc	status,2,c
 10183  00E27C  D783               	goto	l1956
 10184  00E27E  0A01               	xorlw	1	; case 13
 10185  00E280  B4D8               	btfsc	status,2,c
 10186  00E282  D782               	goto	l1957
 10187  00E284  0A03               	xorlw	3	; case 14
 10188  00E286  B4D8               	btfsc	status,2,c
 10189  00E288  D781               	goto	l1958
 10190  00E28A  0A01               	xorlw	1	; case 15
 10191  00E28C  B4D8               	btfsc	status,2,c
 10192  00E28E  D780               	goto	l1959
 10193  00E290  0A1F               	xorlw	31	; case 16
 10194  00E292  B4D8               	btfsc	status,2,c
 10195  00E294  D77F               	goto	l1960
 10196  00E296  0A01               	xorlw	1	; case 17
 10197  00E298  B4D8               	btfsc	status,2,c
 10198  00E29A  D77E               	goto	l1961
 10199  00E29C  0A03               	xorlw	3	; case 18
 10200  00E29E  B4D8               	btfsc	status,2,c
 10201  00E2A0  D77D               	goto	l1962
 10202  00E2A2  0A01               	xorlw	1	; case 19
 10203  00E2A4  B4D8               	btfsc	status,2,c
 10204  00E2A6  D77C               	goto	l1963
 10205  00E2A8  0A07               	xorlw	7	; case 20
 10206  00E2AA  B4D8               	btfsc	status,2,c
 10207  00E2AC  D77B               	goto	l1964
 10208  00E2AE  0A01               	xorlw	1	; case 21
 10209  00E2B0  B4D8               	btfsc	status,2,c
 10210  00E2B2  D77A               	goto	l1965
 10211  00E2B4  0A03               	xorlw	3	; case 22
 10212  00E2B6  B4D8               	btfsc	status,2,c
 10213  00E2B8  D779               	goto	l1966
 10214  00E2BA  0A01               	xorlw	1	; case 23
 10215  00E2BC  B4D8               	btfsc	status,2,c
 10216  00E2BE  D778               	goto	l1967
 10217  00E2C0  0A0F               	xorlw	15	; case 24
 10218  00E2C2  B4D8               	btfsc	status,2,c
 10219  00E2C4  D777               	goto	l1968
 10220  00E2C6  0A01               	xorlw	1	; case 25
 10221  00E2C8  B4D8               	btfsc	status,2,c
 10222  00E2CA  D776               	goto	l1969
 10223  00E2CC  0A03               	xorlw	3	; case 26
 10224  00E2CE  B4D8               	btfsc	status,2,c
 10225  00E2D0  D775               	goto	l1970
 10226  00E2D2  0A01               	xorlw	1	; case 27
 10227  00E2D4  B4D8               	btfsc	status,2,c
 10228  00E2D6  D774               	goto	l1971
 10229  00E2D8  0A07               	xorlw	7	; case 28
 10230  00E2DA  B4D8               	btfsc	status,2,c
 10231  00E2DC  D773               	goto	l1972
 10232  00E2DE  0A01               	xorlw	1	; case 29
 10233  00E2E0  B4D8               	btfsc	status,2,c
 10234  00E2E2  D772               	goto	l1973
 10235  00E2E4  0A03               	xorlw	3	; case 30
 10236  00E2E6  B4D8               	btfsc	status,2,c
 10237  00E2E8  D771               	goto	l1974
 10238  00E2EA  0A01               	xorlw	1	; case 31
 10239  00E2EC  B4D8               	btfsc	status,2,c
 10240  00E2EE  D770               	goto	l1975
 10241  00E2F0  0A37               	xorlw	55	; case 40
 10242  00E2F2  B4D8               	btfsc	status,2,c
 10243  00E2F4  D76F               	goto	l1976
 10244  00E2F6  0A01               	xorlw	1	; case 41
 10245  00E2F8  B4D8               	btfsc	status,2,c
 10246  00E2FA  D76E               	goto	l1977
 10247  00E2FC  0A05               	xorlw	5	; case 44
 10248  00E2FE  B4D8               	btfsc	status,2,c
 10249  00E300  D76D               	goto	l1978
 10250  00E302  0A01               	xorlw	1	; case 45
 10251  00E304  B4D8               	btfsc	status,2,c
 10252  00E306  D76C               	goto	l1979
 10253  00E308  0A03               	xorlw	3	; case 46
 10254  00E30A  B4D8               	btfsc	status,2,c
 10255  00E30C  D76B               	goto	l1980
 10256  00E30E  0A01               	xorlw	1	; case 47
 10257  00E310  B4D8               	btfsc	status,2,c
 10258  00E312  D768               	goto	l1980
 10259  00E314  0A19               	xorlw	25	; case 54
 10260  00E316  B4D8               	btfsc	status,2,c
 10261  00E318  D767               	goto	l1982
 10262  00E31A  0A01               	xorlw	1	; case 55
 10263  00E31C  B4D8               	btfsc	status,2,c
 10264  00E31E  D766               	goto	l1983
 10265  00E320  0A0F               	xorlw	15	; case 56
 10266  00E322  B4D8               	btfsc	status,2,c
 10267  00E324  D765               	goto	l1984
 10268  00E326  0A01               	xorlw	1	; case 57
 10269  00E328  B4D8               	btfsc	status,2,c
 10270  00E32A  D764               	goto	l1985
 10271  00E32C  0A03               	xorlw	3	; case 58
 10272  00E32E  B4D8               	btfsc	status,2,c
 10273  00E330  D763               	goto	l1986
 10274  00E332  0A01               	xorlw	1	; case 59
 10275  00E334  B4D8               	btfsc	status,2,c
 10276  00E336  D762               	goto	l1987
 10277  00E338  0A07               	xorlw	7	; case 60
 10278  00E33A  B4D8               	btfsc	status,2,c
 10279  00E33C  D761               	goto	l1988
 10280  00E33E  0A01               	xorlw	1	; case 61
 10281  00E340  B4D8               	btfsc	status,2,c
 10282  00E342  D760               	goto	l1989
 10283  00E344  D765               	goto	l1992
 10284  00E346                     l19346:
 10285                           
 10286                           ; BSR set to: 0
 10287                           ; Switch size 1, requested type "space"
 10288                           ; Number of cases is 2, Range of values is 254 to 255
 10289                           ; switch strategies available:
 10290                           ; Name         Instructions Cycles
 10291                           ; simple_byte            7     4 (average)
 10292                           ;	Chosen strategy is simple_byte
 10293  00E346  5162               	movf	??__get_fbr& (0+255),w,b
 10294  00E348  0AFE               	xorlw	254	; case 254
 10295  00E34A  B4D8               	btfsc	status,2,c
 10296  00E34C  D75D               	goto	l1990
 10297  00E34E  0A01               	xorlw	1	; case 255
 10298  00E350  B4D8               	btfsc	status,2,c
 10299  00E352  D75C               	goto	l1991
 10300  00E354  D75D               	goto	l1992
 10301  00E356                     __end_of__get_fbr:
 10302                           	opt stack 0
 10303                           tblptru	equ	0xFF8
 10304                           tblptrh	equ	0xFF7
 10305                           tblptrl	equ	0xFF6
 10306                           tablat	equ	0xFF5
 10307                           prodh	equ	0xFF4
 10308                           prodl	equ	0xFF3
 10309                           postinc0	equ	0xFEE
 10310                           wreg	equ	0xFE8
 10311                           postdec1	equ	0xFE5
 10312                           fsr1h	equ	0xFE2
 10313                           fsr1l	equ	0xFE1
 10314                           indf2	equ	0xFDF
 10315                           postinc2	equ	0xFDE
 10316                           fsr2h	equ	0xFDA
 10317                           fsr2l	equ	0xFD9
 10318                           status	equ	0xFD8
 10319                           
 10320 ;; *************** function __get_fat *****************
 10321 ;; Defined at:
 10322 ;;		line 1187 in file "fat16.c"
 10323 ;; Parameters:    Size  Location     Type
 10324 ;;  idx             2    0[BANK0 ] unsigned int 
 10325 ;; Auto vars:     Size  Location     Type
 10326 ;;		None
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      unsigned char 
 10329 ;; Registers used:
 10330 ;;		wreg, status,2, status,0
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10339 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10340 ;;Total ram usage:        4 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:   10
 10343 ;; This function calls:
 10344 ;;		Nothing
 10345 ;; This function is called by:
 10346 ;;		_fat_format
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text21
 10351  0146EE                     __ptext21:
 10352                           	opt stack 0
 10353  0146EE                     __get_fat:
 10354                           	opt stack 17
 10355                           
 10356                           ;fat16.c: 1189: switch (idx)
 10357                           
 10358                           ;incstack = 0
 10359  0146EE  D00E               	goto	l1996
 10360  0146F0                     
 10361                           ;fat16.c: 1193: return 0xF8;
 10362  0146F0  0EF8               	movlw	248
 10363  0146F2  0012               	return	
 10364  0146F4                     
 10365                           ;fat16.c: 1195: return 0xFF;
 10366  0146F4  0EFF               	movlw	255
 10367  0146F6  0012               	return	
 10368  0146F8                     
 10369                           ;fat16.c: 1197: return 0xFF;
 10370  0146F8  0EFF               	movlw	255
 10371  0146FA  0012               	return	
 10372  0146FC                     
 10373                           ;fat16.c: 1199: return 0xFF;
 10374  0146FC  0EFF               	movlw	255
 10375  0146FE  0012               	return	
 10376  014700                     
 10377                           ;fat16.c: 1202: return 0xFF;
 10378  014700  0EFF               	movlw	255
 10379  014702  0012               	return	
 10380  014704                     
 10381                           ;fat16.c: 1204: return 0xFF;
 10382  014704  0EFF               	movlw	255
 10383  014706  0012               	return	
 10384  014708                     
 10385                           ;fat16.c: 1206: return 0X00;
 10386  014708  0E00               	movlw	0
 10387                           
 10388                           ;fat16.c: 1207: }
 10389  01470A  0012               	return	
 10390  01470C                     l1996:
 10391  01470C  C060  F062         	movff	__get_fat@idx,??__get_fat
 10392  014710  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
 10393                           
 10394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10395                           ; Switch size 1, requested type "space"
 10396                           ; Number of cases is 1, Range of values is 0 to 0
 10397                           ; switch strategies available:
 10398                           ; Name         Instructions Cycles
 10399                           ; simple_byte            4     3 (average)
 10400                           ;	Chosen strategy is simple_byte
 10401  014714  0100               	movlb	0	; () banked
 10402  014716  5163               	movf	(??__get_fat+1)& (0+255),w,b
 10403  014718  0A00               	xorlw	0	; case 0
 10404  01471A  A4D8               	btfss	status,2,c
 10405  01471C  D7F5               	goto	l2004
 10406                           
 10407                           ; BSR set to: 0
 10408                           ; Switch size 1, requested type "space"
 10409                           ; Number of cases is 6, Range of values is 0 to 5
 10410                           ; switch strategies available:
 10411                           ; Name         Instructions Cycles
 10412                           ; simple_byte           19    10 (average)
 10413                           ;	Chosen strategy is simple_byte
 10414  01471E  5162               	movf	??__get_fat& (0+255),w,b
 10415  014720  0A00               	xorlw	0	; case 0
 10416  014722  B4D8               	btfsc	status,2,c
 10417  014724  D7E5               	goto	l1997
 10418  014726  0A01               	xorlw	1	; case 1
 10419  014728  B4D8               	btfsc	status,2,c
 10420  01472A  D7E4               	goto	l1999
 10421  01472C  0A03               	xorlw	3	; case 2
 10422  01472E  B4D8               	btfsc	status,2,c
 10423  014730  D7E3               	goto	l2000
 10424  014732  0A01               	xorlw	1	; case 3
 10425  014734  B4D8               	btfsc	status,2,c
 10426  014736  D7E2               	goto	l2001
 10427  014738  0A07               	xorlw	7	; case 4
 10428  01473A  B4D8               	btfsc	status,2,c
 10429  01473C  D7E1               	goto	l2002
 10430  01473E  0A01               	xorlw	1	; case 5
 10431  014740  B4D8               	btfsc	status,2,c
 10432  014742  D7E0               	goto	l2003
 10433  014744  D7E1               	goto	l2004
 10434  014746                     __end_of__get_fat:
 10435                           	opt stack 0
 10436                           tblptru	equ	0xFF8
 10437                           tblptrh	equ	0xFF7
 10438                           tblptrl	equ	0xFF6
 10439                           tablat	equ	0xFF5
 10440                           prodh	equ	0xFF4
 10441                           prodl	equ	0xFF3
 10442                           postinc0	equ	0xFEE
 10443                           wreg	equ	0xFE8
 10444                           postdec1	equ	0xFE5
 10445                           fsr1h	equ	0xFE2
 10446                           fsr1l	equ	0xFE1
 10447                           indf2	equ	0xFDF
 10448                           postinc2	equ	0xFDE
 10449                           fsr2h	equ	0xFDA
 10450                           fsr2l	equ	0xFD9
 10451                           status	equ	0xFD8
 10452                           
 10453 ;; *************** function __get_data *****************
 10454 ;; Defined at:
 10455 ;;		line 1283 in file "fat16.c"
 10456 ;; Parameters:    Size  Location     Type
 10457 ;;  idx             2    0[BANK0 ] unsigned int 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      unsigned char 
 10462 ;; Registers used:
 10463 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10472 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10473 ;;Total ram usage:        2 bytes
 10474 ;; Hardware stack levels used:    1
 10475 ;; Hardware stack levels required when called:   10
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_fat_format
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	text22
 10484  0154E0                     __ptext22:
 10485                           	opt stack 0
 10486  0154E0                     __get_data:
 10487                           	opt stack 17
 10488                           
 10489                           ;fat16.c: 1285: if(idx < 12)
 10490                           
 10491                           ;incstack = 0
 10492  0154E0  0100               	movlb	0	; () banked
 10493  0154E2  5161               	movf	(__get_data@idx+1)& (0+255),w,b
 10494  0154E4  E110               	bnz	l14950
 10495  0154E6  0E0C               	movlw	12
 10496  0154E8  5D60               	subwf	__get_data@idx& (0+255),w,b
 10497  0154EA  B0D8               	btfsc	status,0,c
 10498  0154EC  D00C               	goto	l2040
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 10502  0154EE  0EE9               	movlw	low STR_18
 10503  0154F0  2560               	addwf	__get_data@idx& (0+255),w,b
 10504  0154F2  6EF6               	movwf	tblptrl,c
 10505  0154F4  0EA2               	movlw	high STR_18
 10506  0154F6  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
 10507  0154F8  6EF7               	movwf	tblptrh,c
 10508  0154FA                     	if	1	;There are 3 active tblptr bytes
 10509  0154FA  6AF8               	clrf	tblptru,c
 10510  0154FC  0E00               	movlw	low (__mediumconst shr (0+16))
 10511  0154FE  22F8               	addwfc	tblptru,f,c
 10512  015500                     	endif
 10513  015500  0008               	tblrd		*
 10514  015502  50F5               	movf	tablat,w,c
 10515                           
 10516                           ; BSR set to: 0
 10517  015504  0012               	return	
 10518  015506                     l2040:
 10519  015506                     l14950:
 10520                           
 10521                           ; BSR set to: 0
 10522                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 10523  015506  0E00               	movlw	0
 10524  015508  0012               	return	
 10525  01550A                     __end_of__get_data:
 10526                           	opt stack 0
 10527                           tblptru	equ	0xFF8
 10528                           tblptrh	equ	0xFF7
 10529                           tblptrl	equ	0xFF6
 10530                           tablat	equ	0xFF5
 10531                           prodh	equ	0xFF4
 10532                           prodl	equ	0xFF3
 10533                           postinc0	equ	0xFEE
 10534                           wreg	equ	0xFE8
 10535                           postdec1	equ	0xFE5
 10536                           fsr1h	equ	0xFE2
 10537                           fsr1l	equ	0xFE1
 10538                           indf2	equ	0xFDF
 10539                           postinc2	equ	0xFDE
 10540                           fsr2h	equ	0xFDA
 10541                           fsr2l	equ	0xFD9
 10542                           status	equ	0xFD8
 10543                           
 10544 ;; *************** function _encoder_init *****************
 10545 ;; Defined at:
 10546 ;;		line 92 in file "encoder.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;		None
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;		None
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      void 
 10553 ;; Registers used:
 10554 ;;		wreg, status,2, status,0
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;Total ram usage:        0 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:   10
 10567 ;; This function calls:
 10568 ;;		Nothing
 10569 ;; This function is called by:
 10570 ;;		_system_init
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text23
 10575  015674                     __ptext23:
 10576                           	opt stack 0
 10577  015674                     _encoder_init:
 10578                           	opt stack 19
 10579                           
 10580                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;incstack = 0
 10584  015674  5084               	movf	3972,w,c	;volatile
 10585  015676  0B07               	andlw	7
 10586  015678  0101               	movlb	1	; () banked
 10587  01567A  6F54               	movwf	_enc1& (0+255),b
 10588                           
 10589                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
 10590  01567C  5080               	movf	3968,w,c	;volatile
 10591  01567E  0B07               	andlw	7
 10592  015680  6F53               	movwf	_enc2& (0+255),b
 10593                           
 10594                           ; BSR set to: 1
 10595                           ;encoder.c: 96: os.encoder1Count = 0;
 10596  015682  0E00               	movlw	0
 10597  015684  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 10598                           
 10599                           ; BSR set to: 1
 10600                           ;encoder.c: 97: os.encoder2Count = 0;
 10601  015686  0E00               	movlw	0
 10602  015688  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 10603                           
 10604                           ; BSR set to: 1
 10605                           ;encoder.c: 98: os.button1 = 0;
 10606  01568A  0E00               	movlw	0
 10607  01568C  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 10608                           
 10609                           ; BSR set to: 1
 10610                           ;encoder.c: 99: os.button2 = 0;
 10611  01568E  0E00               	movlw	0
 10612  015690  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 10613                           
 10614                           ; BSR set to: 1
 10615                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10616  015692  0E01               	movlw	1
 10617  015694  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 10618                           
 10619                           ; BSR set to: 1
 10620  015696  0012               	return		;funcret
 10621  015698                     __end_of_encoder_init:
 10622                           	opt stack 0
 10623                           tblptru	equ	0xFF8
 10624                           tblptrh	equ	0xFF7
 10625                           tblptrl	equ	0xFF6
 10626                           tablat	equ	0xFF5
 10627                           prodh	equ	0xFF4
 10628                           prodl	equ	0xFF3
 10629                           postinc0	equ	0xFEE
 10630                           wreg	equ	0xFE8
 10631                           postdec1	equ	0xFE5
 10632                           fsr1h	equ	0xFE2
 10633                           fsr1l	equ	0xFE1
 10634                           indf2	equ	0xFDF
 10635                           postinc2	equ	0xFDE
 10636                           fsr2h	equ	0xFDA
 10637                           fsr2l	equ	0xFD9
 10638                           status	equ	0xFD8
 10639                           
 10640 ;; *************** function _display_update *****************
 10641 ;; Defined at:
 10642 ;;		line 618 in file "display.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;  line            1   16[BANK0 ] unsigned char 
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;Total ram usage:        1 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:   14
 10663 ;; This function calls:
 10664 ;;		_i2c_display_cursor
 10665 ;;		_i2c_display_write_fixed
 10666 ;; This function is called by:
 10667 ;;		_main
 10668 ;;		_system_init
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text24
 10673  015198                     __ptext24:
 10674                           	opt stack 0
 10675  015198                     _display_update:
 10676                           	opt stack 15
 10677                           
 10678                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
 10679                           
 10680                           ; BSR set to: 1
 10681                           ;incstack = 0
 10682  015198  0E00               	movlw	0
 10683  01519A  0100               	movlb	0	; () banked
 10684  01519C  6F70               	movwf	display_update@line& (0+255),b
 10685  01519E                     l16734:
 10686                           
 10687                           ; BSR set to: 0
 10688  01519E  0E03               	movlw	3
 10689  0151A0  6570               	cpfsgt	display_update@line& (0+255),b
 10690  0151A2  D001               	goto	l1485
 10691  0151A4  0012               	return	
 10692  0151A6                     l1485:
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
 10696                           
 10697                           ; BSR set to: 0
 10698  0151A6  0E00               	movlw	0
 10699  0151A8  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10700  0151AA  5170               	movf	display_update@line& (0+255),w,b
 10701  0151AC  EC70  F0AB         	call	_i2c_display_cursor
 10702                           
 10703                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
 10704  0151B0  0100               	movlb	0	; () banked
 10705  0151B2  5170               	movf	display_update@line& (0+255),w,b
 10706  0151B4  0D14               	mullw	20
 10707  0151B6  0E34               	movlw	low _display_content
 10708  0151B8  24F3               	addwf	prodl,w,c
 10709  0151BA  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10710  0151BC  0E02               	movlw	high _display_content
 10711  0151BE  20F4               	addwfc	prodh,w,c
 10712  0151C0  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10713  0151C2  0E14               	movlw	20
 10714  0151C4  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10715  0151C6  ECD5  F0A4         	call	_i2c_display_write_fixed	;wreg free
 10716  0151CA  0100               	movlb	0	; () banked
 10717  0151CC  2B70               	incf	display_update@line& (0+255),f,b
 10718  0151CE  D7E7               	goto	l16734
 10719  0151D0                     __end_of_display_update:
 10720                           	opt stack 0
 10721                           tblptru	equ	0xFF8
 10722                           tblptrh	equ	0xFF7
 10723                           tblptrl	equ	0xFF6
 10724                           tablat	equ	0xFF5
 10725                           prodh	equ	0xFF4
 10726                           prodl	equ	0xFF3
 10727                           postinc0	equ	0xFEE
 10728                           wreg	equ	0xFE8
 10729                           postdec1	equ	0xFE5
 10730                           fsr1h	equ	0xFE2
 10731                           fsr1l	equ	0xFE1
 10732                           indf2	equ	0xFDF
 10733                           postinc2	equ	0xFDE
 10734                           fsr2h	equ	0xFDA
 10735                           fsr2l	equ	0xFD9
 10736                           status	equ	0xFD8
 10737                           
 10738 ;; *************** function _i2c_display_write_fixed *****************
 10739 ;; Defined at:
 10740 ;;		line 419 in file "i2c.c"
 10741 ;; Parameters:    Size  Location     Type
 10742 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10743 ;;		 -> display_content(80), 
 10744 ;;  length          1    7[BANK0 ] unsigned char 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;  pos             1    8[BANK0 ] unsigned char 
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10756 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10759 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;Total ram usage:        4 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:   11
 10763 ;; This function calls:
 10764 ;;		__i2c_send
 10765 ;;		__i2c_start
 10766 ;;		__i2c_stop
 10767 ;;		__i2c_wait_idle
 10768 ;; This function is called by:
 10769 ;;		_display_update
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           	psect	text25
 10774  0149AA                     __ptext25:
 10775                           	opt stack 0
 10776  0149AA                     _i2c_display_write_fixed:
 10777                           	opt stack 17
 10778                           
 10779                           ;i2c.c: 421: uint8_t pos;;i2c.c: 426: _i2c_wait_idle();
 10780                           
 10781                           ; BSR set to: 0
 10782                           ;incstack = 0
 10783  0149AA  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 10784                           
 10785                           ;i2c.c: 427: _i2c_start();
 10786  0149AE  ECA5  F0AC         	call	__i2c_start	;wreg free
 10787                           
 10788                           ;i2c.c: 428: _i2c_wait_idle();
 10789  0149B2  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 10790                           
 10791                           ;i2c.c: 429: _i2c_send(0b01111000);
 10792  0149B6  0E78               	movlw	120
 10793  0149B8  EC92  F0AC         	call	__i2c_send
 10794                           
 10795                           ;i2c.c: 430: _i2c_wait_idle();
 10796  0149BC  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 10797                           
 10798                           ;i2c.c: 431: _i2c_send(0b01000000);
 10799  0149C0  0E40               	movlw	64
 10800  0149C2  EC92  F0AC         	call	__i2c_send
 10801                           
 10802                           ;i2c.c: 432: _i2c_wait_idle();
 10803  0149C6  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 10804                           
 10805                           ;i2c.c: 435: for(pos=0; pos<length; ++pos)
 10806  0149CA  0E00               	movlw	0
 10807  0149CC  0100               	movlb	0	; () banked
 10808  0149CE  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10809  0149D0  D00F               	goto	l1243
 10810  0149D2                     
 10811                           ; BSR set to: 0
 10812                           ;i2c.c: 436: {;i2c.c: 437: _i2c_send(data[pos]);
 10813                           
 10814                           ; BSR set to: 0
 10815  0149D2  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10816  0149D4  0D01               	mullw	1
 10817  0149D6  50F3               	movf	prodl,w,c
 10818  0149D8  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10819  0149DA  6ED9               	movwf	fsr2l,c
 10820  0149DC  50F4               	movf	prodh,w,c
 10821  0149DE  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10822  0149E0  6EDA               	movwf	fsr2h,c
 10823  0149E2  50DF               	movf	indf2,w,c
 10824  0149E4  EC92  F0AC         	call	__i2c_send
 10825                           
 10826                           ;i2c.c: 438: _i2c_wait_idle();
 10827  0149E8  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 10828  0149EC  0100               	movlb	0	; () banked
 10829  0149EE  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10830  0149F0                     l1243:
 10831                           
 10832                           ; BSR set to: 0
 10833                           
 10834                           ; BSR set to: 0
 10835  0149F0  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10836  0149F2  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10837  0149F4  A0D8               	btfss	status,0,c
 10838  0149F6  D7ED               	goto	l1244
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;i2c.c: 439: };i2c.c: 441: _i2c_stop();
 10842                           
 10843                           ; BSR set to: 0
 10844  0149F8  ECA1  F0AC         	call	__i2c_stop	;wreg free
 10845  0149FC  0012               	return		;funcret
 10846  0149FE                     __end_of_i2c_display_write_fixed:
 10847                           	opt stack 0
 10848                           tblptru	equ	0xFF8
 10849                           tblptrh	equ	0xFF7
 10850                           tblptrl	equ	0xFF6
 10851                           tablat	equ	0xFF5
 10852                           prodh	equ	0xFF4
 10853                           prodl	equ	0xFF3
 10854                           postinc0	equ	0xFEE
 10855                           wreg	equ	0xFE8
 10856                           postdec1	equ	0xFE5
 10857                           fsr1h	equ	0xFE2
 10858                           fsr1l	equ	0xFE1
 10859                           indf2	equ	0xFDF
 10860                           postinc2	equ	0xFDE
 10861                           fsr2h	equ	0xFDA
 10862                           fsr2l	equ	0xFD9
 10863                           status	equ	0xFD8
 10864                           
 10865 ;; *************** function _i2c_display_cursor *****************
 10866 ;; Defined at:
 10867 ;;		line 379 in file "i2c.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  line            1    wreg     unsigned char 
 10870 ;;  position        1   13[BANK0 ] unsigned char 
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;  line            1   14[BANK0 ] unsigned char 
 10873 ;;  address         1   15[BANK0 ] unsigned char 
 10874 ;; Return value:  Size  Location     Type
 10875 ;;                  1    wreg      void 
 10876 ;; Registers used:
 10877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10883 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10884 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10887 ;;Total ram usage:        3 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; Hardware stack levels required when called:   13
 10890 ;; This function calls:
 10891 ;;		__ic2_display_set_ddram_address
 10892 ;; This function is called by:
 10893 ;;		_display_update
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text26
 10898  0156E0                     __ptext26:
 10899                           	opt stack 0
 10900  0156E0                     _i2c_display_cursor:
 10901                           	opt stack 15
 10902                           
 10903                           ;incstack = 0
 10904                           ;i2c_display_cursor@line stored from wreg
 10905  0156E0  0100               	movlb	0	; () banked
 10906  0156E2  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10907                           
 10908                           ;i2c.c: 381: uint8_t address;;i2c.c: 384: line &= 0b11;
 10909  0156E4  0E03               	movlw	3
 10910  0156E6  0100               	movlb	0	; () banked
 10911  0156E8  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10912                           
 10913                           ;i2c.c: 385: address = line<<5;
 10914  0156EA  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10915  0156EC  46E8               	rlncf	wreg,f,c
 10916  0156EE  0BE0               	andlw	224
 10917  0156F0  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10918                           
 10919                           ;i2c.c: 386: position &= 0b11111;
 10920  0156F2  0E1F               	movlw	31
 10921  0156F4  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10922                           
 10923                           ;i2c.c: 387: address |= position;
 10924  0156F6  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10925  0156F8  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;i2c.c: 393: _ic2_display_set_ddram_address(address);
 10929  0156FA  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10930  0156FC  EC4C  F0AB         	call	__ic2_display_set_ddram_address
 10931  015700  0012               	return		;funcret
 10932  015702                     __end_of_i2c_display_cursor:
 10933                           	opt stack 0
 10934                           tblptru	equ	0xFF8
 10935                           tblptrh	equ	0xFF7
 10936                           tblptrl	equ	0xFF6
 10937                           tablat	equ	0xFF5
 10938                           prodh	equ	0xFF4
 10939                           prodl	equ	0xFF3
 10940                           postinc0	equ	0xFEE
 10941                           wreg	equ	0xFE8
 10942                           postdec1	equ	0xFE5
 10943                           fsr1h	equ	0xFE2
 10944                           fsr1l	equ	0xFE1
 10945                           indf2	equ	0xFDF
 10946                           postinc2	equ	0xFDE
 10947                           fsr2h	equ	0xFDA
 10948                           fsr2l	equ	0xFD9
 10949                           status	equ	0xFD8
 10950                           
 10951 ;; *************** function __ic2_display_set_ddram_address *****************
 10952 ;; Defined at:
 10953 ;;		line 350 in file "i2c.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  address         1    wreg     unsigned char 
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;  address         1   10[BANK0 ] unsigned char 
 10958 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  1    wreg      void 
 10961 ;; Registers used:
 10962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10969 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10971 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10972 ;;Total ram usage:        3 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:   12
 10975 ;; This function calls:
 10976 ;;		__i2c_write
 10977 ;; This function is called by:
 10978 ;;		_i2c_display_cursor
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text27
 10983  015698                     __ptext27:
 10984                           	opt stack 0
 10985  015698                     __ic2_display_set_ddram_address:
 10986                           	opt stack 15
 10987                           
 10988                           ;incstack = 0
 10989                           ;__ic2_display_set_ddram_address@address stored from wreg
 10990  015698  0100               	movlb	0	; () banked
 10991  01569A  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10992                           
 10993                           ;i2c.c: 352: uint8_t data_array[2];;i2c.c: 353: data_array[0] = 0b00000000;
 10994  01569C  0E00               	movlw	0
 10995  01569E  0100               	movlb	0	; () banked
 10996  0156A0  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;i2c.c: 354: data_array[1] = 0b10000000 | address;
 11000  0156A2  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 11001  0156A4  0980               	iorlw	128
 11002  0156A6  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;i2c.c: 360: _i2c_write(0b01111000, &data_array[0], 2);
 11006  0156A8  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 11007  0156AA  6F65               	movwf	__i2c_write@data& (0+255),b
 11008  0156AC  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 11009  0156AE  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11010  0156B0  0E02               	movlw	2
 11011  0156B2  6F67               	movwf	__i2c_write@length& (0+255),b
 11012  0156B4  0E78               	movlw	120
 11013  0156B6  ECF6  F0A5         	call	__i2c_write
 11014  0156BA  0012               	return		;funcret
 11015  0156BC                     __end_of__ic2_display_set_ddram_address:
 11016                           	opt stack 0
 11017                           tblptru	equ	0xFF8
 11018                           tblptrh	equ	0xFF7
 11019                           tblptrl	equ	0xFF6
 11020                           tablat	equ	0xFF5
 11021                           prodh	equ	0xFF4
 11022                           prodl	equ	0xFF3
 11023                           postinc0	equ	0xFEE
 11024                           wreg	equ	0xFE8
 11025                           postdec1	equ	0xFE5
 11026                           fsr1h	equ	0xFE2
 11027                           fsr1l	equ	0xFE1
 11028                           indf2	equ	0xFDF
 11029                           postinc2	equ	0xFDE
 11030                           fsr2h	equ	0xFDA
 11031                           fsr2l	equ	0xFD9
 11032                           status	equ	0xFD8
 11033                           
 11034 ;; *************** function _display_init *****************
 11035 ;; Defined at:
 11036 ;;		line 256 in file "display.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;		None
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;		None
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11054 ;;Total ram usage:        0 bytes
 11055 ;; Hardware stack levels used:    1
 11056 ;; Hardware stack levels required when called:   15
 11057 ;; This function calls:
 11058 ;;		__display_start
 11059 ;;		_i2c_display_init
 11060 ;;		_i2c_display_program_custom_character
 11061 ;; This function is called by:
 11062 ;;		_system_init
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066                           	psect	text28
 11067  0150EC                     __ptext28:
 11068                           	opt stack 0
 11069  0150EC                     _display_init:
 11070                           	opt stack 14
 11071                           
 11072                           ;display.c: 258: i2c_display_init();
 11073                           
 11074                           ;incstack = 0
 11075  0150EC  ECCE  F0A5         	call	_i2c_display_init	;wreg free
 11076                           
 11077                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 11078  0150F0  0ED5               	movlw	low _bit_pattern_verticalbar
 11079  0150F2  0100               	movlb	0	; () banked
 11080  0150F4  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11081  0150F6  0EA2               	movlw	high _bit_pattern_verticalbar
 11082  0150F8  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11083  0150FA  0E00               	movlw	0
 11084  0150FC  EC90  F09D         	call	_i2c_display_program_custom_character
 11085                           
 11086                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 11087  015100  0ECD               	movlw	low _bit_pattern_degree
 11088  015102  0100               	movlb	0	; () banked
 11089  015104  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11090  015106  0EA2               	movlw	high _bit_pattern_degree
 11091  015108  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11092  01510A  0E01               	movlw	1
 11093  01510C  EC90  F09D         	call	_i2c_display_program_custom_character
 11094                           
 11095                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 11096  015110  0EC5               	movlw	low _bit_pattern_ae
 11097  015112  0100               	movlb	0	; () banked
 11098  015114  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11099  015116  0EA2               	movlw	high _bit_pattern_ae
 11100  015118  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11101  01511A  0E02               	movlw	2
 11102  01511C  EC90  F09D         	call	_i2c_display_program_custom_character
 11103                           
 11104                           ;display.c: 263: _display_start();
 11105  015120  EC5A  F096         	call	__display_start	;wreg free
 11106  015124  0012               	return		;funcret
 11107  015126                     __end_of_display_init:
 11108                           	opt stack 0
 11109                           tblptru	equ	0xFF8
 11110                           tblptrh	equ	0xFF7
 11111                           tblptrl	equ	0xFF6
 11112                           tablat	equ	0xFF5
 11113                           prodh	equ	0xFF4
 11114                           prodl	equ	0xFF3
 11115                           postinc0	equ	0xFEE
 11116                           wreg	equ	0xFE8
 11117                           postdec1	equ	0xFE5
 11118                           fsr1h	equ	0xFE2
 11119                           fsr1l	equ	0xFE1
 11120                           indf2	equ	0xFDF
 11121                           postinc2	equ	0xFDE
 11122                           fsr2h	equ	0xFDA
 11123                           fsr2l	equ	0xFD9
 11124                           status	equ	0xFD8
 11125                           
 11126 ;; *************** function _i2c_display_program_custom_character *****************
 11127 ;; Defined at:
 11128 ;;		line 444 in file "i2c.c"
 11129 ;; Parameters:    Size  Location     Type
 11130 ;;  address         1    wreg     unsigned char 
 11131 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 11132 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  address         1   31[BANK0 ] unsigned char 
 11135 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 11136 ;;  cntr            1   32[BANK0 ] unsigned char 
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  1    wreg      void 
 11139 ;; Registers used:
 11140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11147 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11148 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11150 ;;Total ram usage:       19 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:   13
 11153 ;; This function calls:
 11154 ;;		__i2c_write
 11155 ;;		__ic2_display_set_cgram_address
 11156 ;; This function is called by:
 11157 ;;		_display_init
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           
 11161                           	psect	text29
 11162  013B20                     __ptext29:
 11163                           	opt stack 0
 11164  013B20                     _i2c_display_program_custom_character:
 11165                           	opt stack 15
 11166                           
 11167                           ;incstack = 0
 11168                           ;i2c_display_program_custom_character@address stored from wreg
 11169  013B20  0100               	movlb	0	; () banked
 11170  013B22  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 11171                           
 11172                           ;i2c.c: 446: uint8_t cntr;;i2c.c: 447: uint8_t data_array[11];;i2c.c: 450: _ic2_display_
      +                          set_cgram_address(address<<3);
 11173  013B24  0100               	movlb	0	; () banked
 11174  013B26  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 11175  013B28  42E8               	rrncf	wreg,f,c
 11176  013B2A  0BF8               	andlw	248
 11177  013B2C  EC85  F0AA         	call	__ic2_display_set_cgram_address
 11178                           
 11179                           ;i2c.c: 453: data_array[0] = 0b01000000;
 11180  013B30  0E40               	movlw	64
 11181  013B32  0100               	movlb	0	; () banked
 11182  013B34  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;i2c.c: 454: for(cntr=0; cntr<8; ++cntr)
 11186  013B36  0E00               	movlw	0
 11187  013B38  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 11188  013B3A                     l15400:
 11189                           
 11190                           ; BSR set to: 0
 11191  013B3A  0E07               	movlw	7
 11192  013B3C  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 11193  013B3E  D001               	goto	l1249
 11194  013B40  D023               	goto	u14160
 11195  013B42                     l1249:
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;i2c.c: 455: {;i2c.c: 456: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 11199                           
 11200                           ; BSR set to: 0
 11201  013B42  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11202  013B44  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 11203  013B46  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 11204  013B48  0E01               	movlw	1
 11205  013B4A  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 11206  013B4C  0E00               	movlw	0
 11207  013B4E  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 11208  013B50  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11209  013B52  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 11210  013B54  6ED9               	movwf	fsr2l,c
 11211  013B56  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11212  013B58  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 11213  013B5A  6EDA               	movwf	fsr2h,c
 11214  013B5C  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11215  013B5E  0D01               	mullw	1
 11216  013B60  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 11217  013B64  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 11218  013B68  50F3               	movf	prodl,w,c
 11219  013B6A  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 11220  013B6C  50F4               	movf	prodh,w,c
 11221  013B6E  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 11222  013B70  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 11223  013B74  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 11224  013B78                     	if	0	;tblptru may be non-zero
 11225  013B78                     	endif
 11226  013B78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11227  013B78  0E00               	movlw	low (__mediumconst shr (0+16))
 11228  013B7A  6EF8               	movwf	tblptru,c
 11229  013B7C                     	endif
 11230  013B7C  0008               	tblrd		*
 11231  013B7E  50F5               	movf	tablat,w,c
 11232  013B80  0B1F               	andlw	31
 11233  013B82  6EDF               	movwf	indf2,c
 11234                           
 11235                           ; BSR set to: 0
 11236  013B84  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 11237  013B86  D7D9               	goto	l15400
 11238  013B88                     u14160:
 11239                           
 11240                           ; BSR set to: 0
 11241                           ;i2c.c: 457: };i2c.c: 458: _i2c_write(0b01111000, data_array, 9);
 11242                           
 11243                           ; BSR set to: 0
 11244  013B88  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11245  013B8A  6F65               	movwf	__i2c_write@data& (0+255),b
 11246  013B8C  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11247  013B8E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11248  013B90  0E09               	movlw	9
 11249  013B92  6F67               	movwf	__i2c_write@length& (0+255),b
 11250  013B94  0E78               	movlw	120
 11251  013B96  ECF6  F0A5         	call	__i2c_write
 11252  013B9A  0012               	return		;funcret
 11253  013B9C                     __end_of_i2c_display_program_custom_character:
 11254                           	opt stack 0
 11255                           tblptru	equ	0xFF8
 11256                           tblptrh	equ	0xFF7
 11257                           tblptrl	equ	0xFF6
 11258                           tablat	equ	0xFF5
 11259                           prodh	equ	0xFF4
 11260                           prodl	equ	0xFF3
 11261                           postinc0	equ	0xFEE
 11262                           wreg	equ	0xFE8
 11263                           postdec1	equ	0xFE5
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           fsr2h	equ	0xFDA
 11269                           fsr2l	equ	0xFD9
 11270                           status	equ	0xFD8
 11271                           
 11272 ;; *************** function __ic2_display_set_cgram_address *****************
 11273 ;; Defined at:
 11274 ;;		line 363 in file "i2c.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  address         1    wreg     unsigned char 
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;  address         1   13[BANK0 ] unsigned char 
 11279 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 11280 ;; Return value:  Size  Location     Type
 11281 ;;                  1    wreg      void 
 11282 ;; Registers used:
 11283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11284 ;; Tracked objects:
 11285 ;;		On entry : 0/0
 11286 ;;		On exit  : 0/0
 11287 ;;		Unchanged: 0/0
 11288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11290 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11292 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11293 ;;Total ram usage:        4 bytes
 11294 ;; Hardware stack levels used:    1
 11295 ;; Hardware stack levels required when called:   12
 11296 ;; This function calls:
 11297 ;;		__i2c_write
 11298 ;; This function is called by:
 11299 ;;		_i2c_display_program_custom_character
 11300 ;; This function uses a non-reentrant model
 11301 ;;
 11302                           
 11303                           	psect	text30
 11304  01550A                     __ptext30:
 11305                           	opt stack 0
 11306  01550A                     __ic2_display_set_cgram_address:
 11307                           	opt stack 15
 11308                           
 11309                           ;incstack = 0
 11310                           ;__ic2_display_set_cgram_address@address stored from wreg
 11311  01550A  0100               	movlb	0	; () banked
 11312  01550C  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 11313                           
 11314                           ;i2c.c: 365: uint8_t data_array[3];;i2c.c: 370: address &= 0b001111111;
 11315  01550E  0100               	movlb	0	; () banked
 11316  015510  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;i2c.c: 371: data_array[0] = 0b00000000;
 11320  015512  0E00               	movlw	0
 11321  015514  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;i2c.c: 372: data_array[1] = 0b00111000;
 11325  015516  0E38               	movlw	56
 11326  015518  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 11327                           
 11328                           ;i2c.c: 373: data_array[2] = 0b01000000 | address;
 11329  01551A  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 11330  01551C  0940               	iorlw	64
 11331  01551E  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;i2c.c: 376: _i2c_write(0b01111000, data_array, 3);
 11335  015520  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 11336  015522  6F65               	movwf	__i2c_write@data& (0+255),b
 11337  015524  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 11338  015526  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11339  015528  0E03               	movlw	3
 11340  01552A  6F67               	movwf	__i2c_write@length& (0+255),b
 11341  01552C  0E78               	movlw	120
 11342  01552E  ECF6  F0A5         	call	__i2c_write
 11343  015532  0012               	return		;funcret
 11344  015534                     __end_of__ic2_display_set_cgram_address:
 11345                           	opt stack 0
 11346                           tblptru	equ	0xFF8
 11347                           tblptrh	equ	0xFF7
 11348                           tblptrl	equ	0xFF6
 11349                           tablat	equ	0xFF5
 11350                           prodh	equ	0xFF4
 11351                           prodl	equ	0xFF3
 11352                           postinc0	equ	0xFEE
 11353                           wreg	equ	0xFE8
 11354                           postdec1	equ	0xFE5
 11355                           fsr1h	equ	0xFE2
 11356                           fsr1l	equ	0xFE1
 11357                           indf2	equ	0xFDF
 11358                           postinc2	equ	0xFDE
 11359                           fsr2h	equ	0xFDA
 11360                           fsr2l	equ	0xFD9
 11361                           status	equ	0xFD8
 11362                           
 11363 ;; *************** function _i2c_display_init *****************
 11364 ;; Defined at:
 11365 ;;		line 321 in file "i2c.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;		None
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 11370 ;; Return value:  Size  Location     Type
 11371 ;;                  1    wreg      void 
 11372 ;; Registers used:
 11373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11374 ;; Tracked objects:
 11375 ;;		On entry : 0/0
 11376 ;;		On exit  : 0/0
 11377 ;;		Unchanged: 0/0
 11378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11380 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11382 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11383 ;;Total ram usage:       10 bytes
 11384 ;; Hardware stack levels used:    1
 11385 ;; Hardware stack levels required when called:   12
 11386 ;; This function calls:
 11387 ;;		__i2c_write
 11388 ;; This function is called by:
 11389 ;;		_display_init
 11390 ;; This function uses a non-reentrant model
 11391 ;;
 11392                           
 11393                           	psect	text31
 11394  014B9C                     __ptext31:
 11395                           	opt stack 0
 11396  014B9C                     _i2c_display_init:
 11397                           	opt stack 16
 11398                           
 11399                           ;i2c.c: 323: uint8_t init_sequence[9] = {;i2c.c: 324: 0x3A,;i2c.c: 326: 0b00011110,;i2c.
      +                          c: 327: 0x39,;i2c.c: 329: 0b00001100,;i2c.c: 330: 0x74,;i2c.c: 331: 0b1011100,;i2c.c: 33
      +                          2: 0x6d,;i2c.c: 333: 0x0c,;i2c.c: 334: 0x01;i2c.c: 335: };
 11400                           
 11401                           ;incstack = 0
 11402  014B9C  EE22  F0A6         	lfsr	2,i2c_display_init@F6942
 11403  014BA0  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 11404  014BA4  0E08               	movlw	8
 11405  014BA6                     u14131:
 11406  014BA6  CFDB FFE3          	movff	plusw2,plusw1
 11407  014BAA  06E8               	decf	wreg,f,c
 11408  014BAC  E2FC               	bc	u14131
 11409                           
 11410                           ;i2c.c: 338: LATAbits.LA3 = 0;
 11411  014BAE  9689               	bcf	3977,3,c	;volatile
 11412                           
 11413                           ;i2c.c: 339: _delay((unsigned long)((10)*(8000000/4000.0)));
 11414  014BB0  0E1A               	movlw	26
 11415  014BB2  0100               	movlb	0	; () banked
 11416  014BB4  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11417  014BB6  0EF8               	movlw	248
 11418  014BB8                     u19097:
 11419  014BB8  2EE8               	decfsz	wreg,f,c
 11420  014BBA  D7FE               	bra	u19097
 11421  014BBC  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11422  014BBE  D7FC               	bra	u19097
 11423  014BC0  F000               	nop	
 11424                           
 11425                           ;i2c.c: 340: LATAbits.LA3 = 1;
 11426  014BC2  8689               	bsf	3977,3,c	;volatile
 11427                           
 11428                           ;i2c.c: 341: _delay((unsigned long)((50)*(8000000/4000.0)));
 11429  014BC4  0E82               	movlw	130
 11430  014BC6  0100               	movlb	0	; () banked
 11431  014BC8  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11432  014BCA  0EDD               	movlw	221
 11433  014BCC                     u19107:
 11434  014BCC  2EE8               	decfsz	wreg,f,c
 11435  014BCE  D7FE               	bra	u19107
 11436  014BD0  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11437  014BD2  D7FC               	bra	u19107
 11438  014BD4  D000               	nop2	
 11439                           
 11440                           ;i2c.c: 347: _i2c_write(0b01111000, &init_sequence[0], 9);
 11441  014BD6  0E6B               	movlw	low i2c_display_init@init_sequence
 11442  014BD8  0100               	movlb	0	; () banked
 11443  014BDA  6F65               	movwf	__i2c_write@data& (0+255),b
 11444  014BDC  0E00               	movlw	high i2c_display_init@init_sequence
 11445  014BDE  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11446  014BE0  0E09               	movlw	9
 11447  014BE2  6F67               	movwf	__i2c_write@length& (0+255),b
 11448  014BE4  0E78               	movlw	120
 11449  014BE6  ECF6  F0A5         	call	__i2c_write
 11450  014BEA  0012               	return		;funcret
 11451  014BEC                     __end_of_i2c_display_init:
 11452                           	opt stack 0
 11453                           tblptru	equ	0xFF8
 11454                           tblptrh	equ	0xFF7
 11455                           tblptrl	equ	0xFF6
 11456                           tablat	equ	0xFF5
 11457                           prodh	equ	0xFF4
 11458                           prodl	equ	0xFF3
 11459                           postinc0	equ	0xFEE
 11460                           wreg	equ	0xFE8
 11461                           postdec1	equ	0xFE5
 11462                           plusw1	equ	0xFE3
 11463                           fsr1h	equ	0xFE2
 11464                           fsr1l	equ	0xFE1
 11465                           indf2	equ	0xFDF
 11466                           postinc2	equ	0xFDE
 11467                           plusw2	equ	0xFDB
 11468                           fsr2h	equ	0xFDA
 11469                           fsr2l	equ	0xFD9
 11470                           status	equ	0xFD8
 11471                           
 11472 ;; *************** function __i2c_write *****************
 11473 ;; Defined at:
 11474 ;;		line 84 in file "i2c.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;  slave_addres    1    wreg     unsigned char 
 11477 ;;  data            2    5[BANK0 ] PTR unsigned char 
 11478 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 11479 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 11480 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 11481 ;;  length          1    7[BANK0 ] unsigned char 
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 11484 ;;  cntr            1    9[BANK0 ] unsigned char 
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  1    wreg      void 
 11487 ;; Registers used:
 11488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11494 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;Total ram usage:        5 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; Hardware stack levels required when called:   11
 11501 ;; This function calls:
 11502 ;;		__i2c_send
 11503 ;;		__i2c_start
 11504 ;;		__i2c_stop
 11505 ;;		__i2c_wait_idle
 11506 ;; This function is called by:
 11507 ;;		_i2c_eeprom_read
 11508 ;;		_i2c_display_init
 11509 ;;		__ic2_display_set_ddram_address
 11510 ;;		__ic2_display_set_cgram_address
 11511 ;;		_i2c_display_program_custom_character
 11512 ;;		_i2c_adc_start
 11513 ;;		_i2c_eeprom_writeByte
 11514 ;;		_i2c_eeprom_readByte
 11515 ;;		__i2c_display_send_init_sequence
 11516 ;; This function uses a non-reentrant model
 11517 ;;
 11518                           
 11519                           	psect	text32
 11520  014BEC                     __ptext32:
 11521                           	opt stack 0
 11522  014BEC                     __i2c_write:
 11523                           	opt stack 16
 11524                           
 11525                           ;incstack = 0
 11526                           ;__i2c_write@slave_address stored from wreg
 11527  014BEC  0100               	movlb	0	; () banked
 11528  014BEE  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 11529                           
 11530                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 11531  014BF0  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 11532                           
 11533                           ;i2c.c: 89: _i2c_start();
 11534  014BF4  ECA5  F0AC         	call	__i2c_start	;wreg free
 11535                           
 11536                           ;i2c.c: 90: _i2c_wait_idle();
 11537  014BF8  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 11538                           
 11539                           ;i2c.c: 91: _i2c_send(slave_address);
 11540  014BFC  0100               	movlb	0	; () banked
 11541  014BFE  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 11542  014C00  EC92  F0AC         	call	__i2c_send
 11543                           
 11544                           ;i2c.c: 92: _i2c_wait_idle();
 11545  014C04  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 11546                           
 11547                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 11548  014C08  0E00               	movlw	0
 11549  014C0A  0100               	movlb	0	; () banked
 11550  014C0C  6F69               	movwf	__i2c_write@cntr& (0+255),b
 11551  014C0E  D00F               	goto	l1158
 11552  014C10                     
 11553                           ; BSR set to: 0
 11554                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 11555                           
 11556                           ; BSR set to: 0
 11557  014C10  5169               	movf	__i2c_write@cntr& (0+255),w,b
 11558  014C12  0D01               	mullw	1
 11559  014C14  50F3               	movf	prodl,w,c
 11560  014C16  2565               	addwf	__i2c_write@data& (0+255),w,b
 11561  014C18  6ED9               	movwf	fsr2l,c
 11562  014C1A  50F4               	movf	prodh,w,c
 11563  014C1C  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 11564  014C1E  6EDA               	movwf	fsr2h,c
 11565  014C20  50DF               	movf	indf2,w,c
 11566  014C22  EC92  F0AC         	call	__i2c_send
 11567                           
 11568                           ;i2c.c: 97: _i2c_wait_idle();
 11569  014C26  ECB1  F0A0         	call	__i2c_wait_idle	;wreg free
 11570  014C2A  0100               	movlb	0	; () banked
 11571  014C2C  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 11572  014C2E                     l1158:
 11573                           
 11574                           ; BSR set to: 0
 11575                           
 11576                           ; BSR set to: 0
 11577  014C2E  5167               	movf	__i2c_write@length& (0+255),w,b
 11578  014C30  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 11579  014C32  A0D8               	btfss	status,0,c
 11580  014C34  D7ED               	goto	l1159
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 11584                           
 11585                           ; BSR set to: 0
 11586  014C36  ECA1  F0AC         	call	__i2c_stop	;wreg free
 11587  014C3A  0012               	return		;funcret
 11588  014C3C                     __end_of__i2c_write:
 11589                           	opt stack 0
 11590                           tblptru	equ	0xFF8
 11591                           tblptrh	equ	0xFF7
 11592                           tblptrl	equ	0xFF6
 11593                           tablat	equ	0xFF5
 11594                           prodh	equ	0xFF4
 11595                           prodl	equ	0xFF3
 11596                           postinc0	equ	0xFEE
 11597                           wreg	equ	0xFE8
 11598                           postdec1	equ	0xFE5
 11599                           plusw1	equ	0xFE3
 11600                           fsr1h	equ	0xFE2
 11601                           fsr1l	equ	0xFE1
 11602                           indf2	equ	0xFDF
 11603                           postinc2	equ	0xFDE
 11604                           plusw2	equ	0xFDB
 11605                           fsr2h	equ	0xFDA
 11606                           fsr2l	equ	0xFD9
 11607                           status	equ	0xFD8
 11608                           
 11609 ;; *************** function __i2c_wait_idle *****************
 11610 ;; Defined at:
 11611 ;;		line 40 in file "i2c.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;		None
 11614 ;; Auto vars:     Size  Location     Type
 11615 ;;		None
 11616 ;; Return value:  Size  Location     Type
 11617 ;;                  1    wreg      void 
 11618 ;; Registers used:
 11619 ;;		wreg, status,2, status,0
 11620 ;; Tracked objects:
 11621 ;;		On entry : 0/0
 11622 ;;		On exit  : 0/0
 11623 ;;		Unchanged: 0/0
 11624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11627 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11628 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11629 ;;Total ram usage:        5 bytes
 11630 ;; Hardware stack levels used:    1
 11631 ;; Hardware stack levels required when called:   10
 11632 ;; This function calls:
 11633 ;;		Nothing
 11634 ;; This function is called by:
 11635 ;;		__i2c_write
 11636 ;;		__i2c_read
 11637 ;;		__i2c_eeprom_busy
 11638 ;;		_i2c_display_write_fixed
 11639 ;;		_i2c_adc_read
 11640 ;;		_i2c_display_write
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           	psect	text33
 11645  014162                     __ptext33:
 11646                           	opt stack 0
 11647  014162                     __i2c_wait_idle:
 11648                           	opt stack 16
 11649                           
 11650                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11651                           
 11652                           ;incstack = 0
 11653  014162  A4C7               	btfss	4039,2,c	;volatile
 11654  014164  D004               	goto	u11460
 11655  014166  0100               	movlb	0	; () banked
 11656  014168  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11657  01416A  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11658  01416C  D002               	goto	u11468
 11659  01416E                     u11460:
 11660  01416E  0100               	movlb	0	; () banked
 11661  014170  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11662  014172                     u11468:
 11663  014172  A0C5               	btfss	4037,0,c	;volatile
 11664  014174  D003               	goto	u11470
 11665  014176  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11666  014178  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11667  01417A  D002               	goto	u11478
 11668  01417C                     u11470:
 11669  01417C  0100               	movlb	0	; () banked
 11670  01417E  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11671  014180                     u11478:
 11672  014180  A2C5               	btfss	4037,1,c	;volatile
 11673  014182  D003               	goto	u11480
 11674  014184  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11675  014186  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11676  014188  D002               	goto	u11488
 11677  01418A                     u11480:
 11678  01418A  0100               	movlb	0	; () banked
 11679  01418C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11680  01418E                     u11488:
 11681  01418E  A4C5               	btfss	4037,2,c	;volatile
 11682  014190  D003               	goto	u11490
 11683  014192  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11684  014194  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11685  014196  D002               	goto	u11498
 11686  014198                     u11490:
 11687  014198  0100               	movlb	0	; () banked
 11688  01419A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11689  01419C                     u11498:
 11690  01419C  A6C5               	btfss	4037,3,c	;volatile
 11691  01419E  D003               	goto	u11500
 11692  0141A0  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11693  0141A2  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11694  0141A4  D002               	goto	u11508
 11695  0141A6                     u11500:
 11696  0141A6  0100               	movlb	0	; () banked
 11697  0141A8  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11698  0141AA                     u11508:
 11699  0141AA  A8C5               	btfss	4037,4,c	;volatile
 11700  0141AC  D002               	goto	u11510
 11701  0141AE  0E01               	movlw	1
 11702  0141B0  D001               	goto	u11516
 11703  0141B2                     u11510:
 11704  0141B2  0E00               	movlw	0
 11705  0141B4                     u11516:
 11706  0141B4  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11707  0141B6  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11708  0141B8  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11709  0141BA  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11710  0141BC  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11711  0141BE  0900               	iorlw	0
 11712  0141C0  B4D8               	btfsc	status,2,c
 11713  0141C2  0012               	return	
 11714  0141C4  D7CE               	goto	__i2c_wait_idle
 11715  0141C6                     __end_of__i2c_wait_idle:
 11716                           	opt stack 0
 11717                           tblptru	equ	0xFF8
 11718                           tblptrh	equ	0xFF7
 11719                           tblptrl	equ	0xFF6
 11720                           tablat	equ	0xFF5
 11721                           prodh	equ	0xFF4
 11722                           prodl	equ	0xFF3
 11723                           postinc0	equ	0xFEE
 11724                           wreg	equ	0xFE8
 11725                           postdec1	equ	0xFE5
 11726                           plusw1	equ	0xFE3
 11727                           fsr1h	equ	0xFE2
 11728                           fsr1l	equ	0xFE1
 11729                           indf2	equ	0xFDF
 11730                           postinc2	equ	0xFDE
 11731                           plusw2	equ	0xFDB
 11732                           fsr2h	equ	0xFDA
 11733                           fsr2l	equ	0xFD9
 11734                           status	equ	0xFD8
 11735                           
 11736 ;; *************** function __i2c_stop *****************
 11737 ;; Defined at:
 11738 ;;		line 63 in file "i2c.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;		None
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  1    wreg      void 
 11745 ;; Registers used:
 11746 ;;		None
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11756 ;;Total ram usage:        0 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:   10
 11759 ;; This function calls:
 11760 ;;		Nothing
 11761 ;; This function is called by:
 11762 ;;		__i2c_write
 11763 ;;		__i2c_read
 11764 ;;		__i2c_eeprom_busy
 11765 ;;		_i2c_display_write_fixed
 11766 ;;		_i2c_adc_read
 11767 ;;		_i2c_display_write
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text34
 11772  015942                     __ptext34:
 11773                           	opt stack 0
 11774  015942                     __i2c_stop:
 11775                           	opt stack 16
 11776                           
 11777                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 11778                           
 11779                           ; BSR set to: 0
 11780                           ;incstack = 0
 11781  015942  84C5               	bsf	4037,2,c	;volatile
 11782  015944  A4C5               	btfss	4037,2,c	;volatile
 11783  015946  0012               	return	
 11784  015948  D7FD               	goto	l1141
 11785  01594A                     __end_of__i2c_stop:
 11786                           	opt stack 0
 11787                           tblptru	equ	0xFF8
 11788                           tblptrh	equ	0xFF7
 11789                           tblptrl	equ	0xFF6
 11790                           tablat	equ	0xFF5
 11791                           prodh	equ	0xFF4
 11792                           prodl	equ	0xFF3
 11793                           postinc0	equ	0xFEE
 11794                           wreg	equ	0xFE8
 11795                           postdec1	equ	0xFE5
 11796                           plusw1	equ	0xFE3
 11797                           fsr1h	equ	0xFE2
 11798                           fsr1l	equ	0xFE1
 11799                           indf2	equ	0xFDF
 11800                           postinc2	equ	0xFDE
 11801                           plusw2	equ	0xFDB
 11802                           fsr2h	equ	0xFDA
 11803                           fsr2l	equ	0xFD9
 11804                           status	equ	0xFD8
 11805                           
 11806 ;; *************** function __i2c_start *****************
 11807 ;; Defined at:
 11808 ;;		line 45 in file "i2c.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;		None
 11811 ;; Auto vars:     Size  Location     Type
 11812 ;;		None
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  1    wreg      void 
 11815 ;; Registers used:
 11816 ;;		None
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11826 ;;Total ram usage:        0 bytes
 11827 ;; Hardware stack levels used:    1
 11828 ;; Hardware stack levels required when called:   10
 11829 ;; This function calls:
 11830 ;;		Nothing
 11831 ;; This function is called by:
 11832 ;;		__i2c_write
 11833 ;;		__i2c_read
 11834 ;;		__i2c_eeprom_busy
 11835 ;;		_i2c_display_write_fixed
 11836 ;;		_i2c_adc_read
 11837 ;;		_i2c_display_write
 11838 ;; This function uses a non-reentrant model
 11839 ;;
 11840                           
 11841                           	psect	text35
 11842  01594A                     __ptext35:
 11843                           	opt stack 0
 11844  01594A                     __i2c_start:
 11845                           	opt stack 16
 11846                           
 11847                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 11848                           
 11849                           ;incstack = 0
 11850  01594A  80C5               	bsf	4037,0,c	;volatile
 11851  01594C  A0C5               	btfss	4037,0,c	;volatile
 11852  01594E  0012               	return	
 11853  015950  D7FD               	goto	l1126
 11854  015952                     __end_of__i2c_start:
 11855                           	opt stack 0
 11856                           tblptru	equ	0xFF8
 11857                           tblptrh	equ	0xFF7
 11858                           tblptrl	equ	0xFF6
 11859                           tablat	equ	0xFF5
 11860                           prodh	equ	0xFF4
 11861                           prodl	equ	0xFF3
 11862                           postinc0	equ	0xFEE
 11863                           wreg	equ	0xFE8
 11864                           postdec1	equ	0xFE5
 11865                           plusw1	equ	0xFE3
 11866                           fsr1h	equ	0xFE2
 11867                           fsr1l	equ	0xFE1
 11868                           indf2	equ	0xFDF
 11869                           postinc2	equ	0xFDE
 11870                           plusw2	equ	0xFDB
 11871                           fsr2h	equ	0xFDA
 11872                           fsr2l	equ	0xFD9
 11873                           status	equ	0xFD8
 11874                           
 11875 ;; *************** function __i2c_send *****************
 11876 ;; Defined at:
 11877 ;;		line 51 in file "i2c.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  dat             1    wreg     unsigned char 
 11880 ;; Auto vars:     Size  Location     Type
 11881 ;;  dat             1    0[BANK0 ] unsigned char 
 11882 ;; Return value:  Size  Location     Type
 11883 ;;                  1    wreg      void 
 11884 ;; Registers used:
 11885 ;;		wreg
 11886 ;; Tracked objects:
 11887 ;;		On entry : 0/0
 11888 ;;		On exit  : 0/0
 11889 ;;		Unchanged: 0/0
 11890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11895 ;;Total ram usage:        1 bytes
 11896 ;; Hardware stack levels used:    1
 11897 ;; Hardware stack levels required when called:   10
 11898 ;; This function calls:
 11899 ;;		Nothing
 11900 ;; This function is called by:
 11901 ;;		__i2c_write
 11902 ;;		__i2c_read
 11903 ;;		__i2c_eeprom_busy
 11904 ;;		_i2c_display_write_fixed
 11905 ;;		_i2c_adc_read
 11906 ;;		_i2c_display_write
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text36
 11911  015924                     __ptext36:
 11912                           	opt stack 0
 11913  015924                     __i2c_send:
 11914                           	opt stack 16
 11915                           
 11916                           ;incstack = 0
 11917                           ;__i2c_send@dat stored from wreg
 11918  015924  0100               	movlb	0	; () banked
 11919  015926  6F60               	movwf	__i2c_send@dat& (0+255),b
 11920                           
 11921                           ;i2c.c: 53: SSP1BUF = dat;
 11922  015928  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11923  01592C  0012               	return		;funcret
 11924  01592E                     __end_of__i2c_send:
 11925                           	opt stack 0
 11926                           tblptru	equ	0xFF8
 11927                           tblptrh	equ	0xFF7
 11928                           tblptrl	equ	0xFF6
 11929                           tablat	equ	0xFF5
 11930                           prodh	equ	0xFF4
 11931                           prodl	equ	0xFF3
 11932                           postinc0	equ	0xFEE
 11933                           wreg	equ	0xFE8
 11934                           postdec1	equ	0xFE5
 11935                           plusw1	equ	0xFE3
 11936                           fsr1h	equ	0xFE2
 11937                           fsr1l	equ	0xFE1
 11938                           indf2	equ	0xFDF
 11939                           postinc2	equ	0xFDE
 11940                           plusw2	equ	0xFDB
 11941                           fsr2h	equ	0xFDA
 11942                           fsr2l	equ	0xFD9
 11943                           status	equ	0xFD8
 11944                           
 11945 ;; *************** function __display_start *****************
 11946 ;; Defined at:
 11947 ;;		line 266 in file "display.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;  cntr            1   28[BANK0 ] unsigned char 
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      void 
 11954 ;; Registers used:
 11955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11962 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11965 ;;Total ram usage:        1 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:   14
 11968 ;; This function calls:
 11969 ;;		__display_itoa_u16
 11970 ;;		_memcpy
 11971 ;; This function is called by:
 11972 ;;		_display_init
 11973 ;; This function uses a non-reentrant model
 11974 ;;
 11975                           
 11976                           	psect	text37
 11977  012CB4                     __ptext37:
 11978                           	opt stack 0
 11979  012CB4                     __display_start:
 11980                           	opt stack 14
 11981                           
 11982                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11983                           
 11984                           ;incstack = 0
 11985  012CB4  0E34               	movlw	low _display_content
 11986  012CB6  0100               	movlb	0	; () banked
 11987  012CB8  6F60               	movwf	memcpy@d1& (0+255),b
 11988  012CBA  0E02               	movlw	high _display_content
 11989  012CBC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11990  012CBE  0E00               	movlw	low _dc_startup
 11991  012CC0  6F62               	movwf	memcpy@s1& (0+255),b
 11992  012CC2  0E04               	movlw	high _dc_startup
 11993  012CC4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11994  012CC6  0E00               	movlw	0
 11995  012CC8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11996  012CCA  0E50               	movlw	80
 11997  012CCC  6F64               	movwf	memcpy@n& (0+255),b
 11998  012CCE  ECD9  F0A1         	call	_memcpy	;wreg free
 11999                           
 12000                           ;display.c: 270: cntr = 6;
 12001  012CD2  0E06               	movlw	6
 12002  012CD4  0100               	movlb	0	; () banked
 12003  012CD6  6F7C               	movwf	__display_start@cntr& (0+255),b
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 12007  012CD8  0E00               	movlw	0
 12008  012CDA  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12009  012CDC  0E00               	movlw	0
 12010  012CDE  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12011  012CE0  517C               	movf	__display_start@cntr& (0+255),w,b
 12012  012CE2  0D01               	mullw	1
 12013  012CE4  0E5C               	movlw	low (_display_content+40)
 12014  012CE6  24F3               	addwf	prodl,w,c
 12015  012CE8  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12016  012CEA  0E02               	movlw	high (_display_content+40)
 12017  012CEC  20F4               	addwfc	prodh,w,c
 12018  012CEE  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12019  012CF0  EC00  F096         	call	__display_itoa_u16	;wreg free
 12020  012CF4  0100               	movlb	0	; () banked
 12021  012CF6  277C               	addwf	__display_start@cntr& (0+255),f,b
 12022                           
 12023                           ; BSR set to: 0
 12024                           ;display.c: 272: display_content[2][cntr++] = '.';
 12025  012CF8  517C               	movf	__display_start@cntr& (0+255),w,b
 12026  012CFA  0D01               	mullw	1
 12027  012CFC  0E5C               	movlw	low (_display_content+40)
 12028  012CFE  24F3               	addwf	prodl,w,c
 12029  012D00  6ED9               	movwf	fsr2l,c
 12030  012D02  0E02               	movlw	high (_display_content+40)
 12031  012D04  20F4               	addwfc	prodh,w,c
 12032  012D06  6EDA               	movwf	fsr2h,c
 12033  012D08  0E2E               	movlw	46
 12034  012D0A  6EDF               	movwf	indf2,c
 12035                           
 12036                           ; BSR set to: 0
 12037  012D0C  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12038                           
 12039                           ; BSR set to: 0
 12040                           ;display.c: 273: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 12041  012D0E  0E00               	movlw	0
 12042  012D10  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12043  012D12  0E05               	movlw	5
 12044  012D14  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12045  012D16  517C               	movf	__display_start@cntr& (0+255),w,b
 12046  012D18  0D01               	mullw	1
 12047  012D1A  0E5C               	movlw	low (_display_content+40)
 12048  012D1C  24F3               	addwf	prodl,w,c
 12049  012D1E  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12050  012D20  0E02               	movlw	high (_display_content+40)
 12051  012D22  20F4               	addwfc	prodh,w,c
 12052  012D24  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12053  012D26  EC00  F096         	call	__display_itoa_u16	;wreg free
 12054  012D2A  0100               	movlb	0	; () banked
 12055  012D2C  277C               	addwf	__display_start@cntr& (0+255),f,b
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;display.c: 274: display_content[2][cntr++] = '.';
 12059  012D2E  517C               	movf	__display_start@cntr& (0+255),w,b
 12060  012D30  0D01               	mullw	1
 12061  012D32  0E5C               	movlw	low (_display_content+40)
 12062  012D34  24F3               	addwf	prodl,w,c
 12063  012D36  6ED9               	movwf	fsr2l,c
 12064  012D38  0E02               	movlw	high (_display_content+40)
 12065  012D3A  20F4               	addwfc	prodh,w,c
 12066  012D3C  6EDA               	movwf	fsr2h,c
 12067  012D3E  0E2E               	movlw	46
 12068  012D40  6EDF               	movwf	indf2,c
 12069                           
 12070                           ; BSR set to: 0
 12071  012D42  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;display.c: 275: cntr += _display_itoa_u16(0x02, &display_content[2][cntr]);
 12075  012D44  0E00               	movlw	0
 12076  012D46  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12077  012D48  0E02               	movlw	2
 12078  012D4A  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12079  012D4C  517C               	movf	__display_start@cntr& (0+255),w,b
 12080  012D4E  0D01               	mullw	1
 12081  012D50  0E5C               	movlw	low (_display_content+40)
 12082  012D52  24F3               	addwf	prodl,w,c
 12083  012D54  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12084  012D56  0E02               	movlw	high (_display_content+40)
 12085  012D58  20F4               	addwfc	prodh,w,c
 12086  012D5A  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12087  012D5C  EC00  F096         	call	__display_itoa_u16	;wreg free
 12088  012D60  0100               	movlb	0	; () banked
 12089  012D62  277C               	addwf	__display_start@cntr& (0+255),f,b
 12090                           
 12091                           ; BSR set to: 0
 12092  012D64  0012               	return		;funcret
 12093  012D66                     __end_of__display_start:
 12094                           	opt stack 0
 12095                           tblptru	equ	0xFF8
 12096                           tblptrh	equ	0xFF7
 12097                           tblptrl	equ	0xFF6
 12098                           tablat	equ	0xFF5
 12099                           prodh	equ	0xFF4
 12100                           prodl	equ	0xFF3
 12101                           postinc0	equ	0xFEE
 12102                           wreg	equ	0xFE8
 12103                           postdec1	equ	0xFE5
 12104                           plusw1	equ	0xFE3
 12105                           fsr1h	equ	0xFE2
 12106                           fsr1l	equ	0xFE1
 12107                           indf2	equ	0xFDF
 12108                           postinc2	equ	0xFDE
 12109                           plusw2	equ	0xFDB
 12110                           fsr2h	equ	0xFDA
 12111                           fsr2l	equ	0xFD9
 12112                           status	equ	0xFD8
 12113                           
 12114 ;; *************** function __display_itoa_u16 *****************
 12115 ;; Defined at:
 12116 ;;		line 226 in file "display.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;  value           2   24[BANK0 ] unsigned int 
 12119 ;;  text            2   26[BANK0 ] PTR unsigned char 
 12120 ;;		 -> display_content(80), 
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;		None
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      unsigned char 
 12125 ;; Registers used:
 12126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12132 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12136 ;;Total ram usage:        4 bytes
 12137 ;; Hardware stack levels used:    1
 12138 ;; Hardware stack levels required when called:   13
 12139 ;; This function calls:
 12140 ;;		_itoa
 12141 ;; This function is called by:
 12142 ;;		__display_start
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text38
 12147  012C00                     __ptext38:
 12148                           	opt stack 0
 12149  012C00                     __display_itoa_u16:
 12150                           	opt stack 14
 12151                           
 12152                           ;display.c: 228: itoa(text, value, 10);
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;incstack = 0
 12156  012C00  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 12157  012C04  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 12158  012C08  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 12159  012C0C  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 12160  012C10  0E00               	movlw	0
 12161  012C12  0100               	movlb	0	; () banked
 12162  012C14  6F75               	movwf	(itoa@base+1)& (0+255),b
 12163  012C16  0E0A               	movlw	10
 12164  012C18  6F74               	movwf	itoa@base& (0+255),b
 12165  012C1A  EC93  F0A7         	call	_itoa	;wreg free
 12166                           
 12167                           ;display.c: 229: if(value>9999)
 12168  012C1E  0E10               	movlw	16
 12169  012C20  0100               	movlb	0	; () banked
 12170  012C22  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12171  012C24  0E27               	movlw	39
 12172  012C26  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12173  012C28  A0D8               	btfss	status,0,c
 12174  012C2A  D00A               	goto	l1359
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 12178  012C2C  EE20 F005          	lfsr	2,5
 12179  012C30  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12180  012C32  26D9               	addwf	fsr2l,f,c
 12181  012C34  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12182  012C36  22DA               	addwfc	fsr2h,f,c
 12183  012C38  0E20               	movlw	32
 12184  012C3A  6EDF               	movwf	indf2,c
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;display.c: 232: return 5;
 12188  012C3C  0E05               	movlw	5
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;display.c: 233: }
 12192                           
 12193                           ; BSR set to: 0
 12194  012C3E  0012               	return	
 12195  012C40                     l1359:
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;display.c: 234: else if (value>999)
 12199                           
 12200                           ; BSR set to: 0
 12201  012C40  0EE8               	movlw	232
 12202  012C42  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12203  012C44  0E03               	movlw	3
 12204  012C46  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12205  012C48  A0D8               	btfss	status,0,c
 12206  012C4A  D00A               	goto	l1362
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 12210  012C4C  EE20 F004          	lfsr	2,4
 12211  012C50  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12212  012C52  26D9               	addwf	fsr2l,f,c
 12213  012C54  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12214  012C56  22DA               	addwfc	fsr2h,f,c
 12215  012C58  0E20               	movlw	32
 12216  012C5A  6EDF               	movwf	indf2,c
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;display.c: 237: return 4;
 12220  012C5C  0E04               	movlw	4
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;display.c: 238: }
 12224                           
 12225                           ; BSR set to: 0
 12226  012C5E  0012               	return	
 12227  012C60                     l1362:
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;display.c: 239: else if (value>99)
 12231                           
 12232                           ; BSR set to: 0
 12233  012C60  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12234  012C62  E104               	bnz	u13110
 12235  012C64  0E64               	movlw	100
 12236  012C66  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12237  012C68  A0D8               	btfss	status,0,c
 12238  012C6A  D00A               	goto	l1364
 12239  012C6C                     u13110:
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 12243  012C6C  EE20 F003          	lfsr	2,3
 12244  012C70  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12245  012C72  26D9               	addwf	fsr2l,f,c
 12246  012C74  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12247  012C76  22DA               	addwfc	fsr2h,f,c
 12248  012C78  0E20               	movlw	32
 12249  012C7A  6EDF               	movwf	indf2,c
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;display.c: 242: return 3;
 12253  012C7C  0E03               	movlw	3
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;display.c: 243: }
 12257                           
 12258                           ; BSR set to: 0
 12259  012C7E  0012               	return	
 12260  012C80                     l1364:
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;display.c: 244: else if (value>9)
 12264                           
 12265                           ; BSR set to: 0
 12266  012C80  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12267  012C82  E104               	bnz	u13120
 12268  012C84  0E0A               	movlw	10
 12269  012C86  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12270  012C88  A0D8               	btfss	status,0,c
 12271  012C8A  D00A               	goto	l1366
 12272  012C8C                     u13120:
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 12276  012C8C  EE20 F002          	lfsr	2,2
 12277  012C90  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12278  012C92  26D9               	addwf	fsr2l,f,c
 12279  012C94  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12280  012C96  22DA               	addwfc	fsr2h,f,c
 12281  012C98  0E20               	movlw	32
 12282  012C9A  6EDF               	movwf	indf2,c
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;display.c: 247: return 2;
 12286  012C9C  0E02               	movlw	2
 12287                           
 12288                           ; BSR set to: 0
 12289                           ;display.c: 248: }
 12290                           
 12291                           ; BSR set to: 0
 12292  012C9E  0012               	return	
 12293  012CA0                     l1366:
 12294                           
 12295                           ; BSR set to: 0
 12296                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 12297                           
 12298                           ; BSR set to: 0
 12299  012CA0  EE20 F001          	lfsr	2,1
 12300  012CA4  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12301  012CA6  26D9               	addwf	fsr2l,f,c
 12302  012CA8  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12303  012CAA  22DA               	addwfc	fsr2h,f,c
 12304  012CAC  0E20               	movlw	32
 12305  012CAE  6EDF               	movwf	indf2,c
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;display.c: 252: return 1;
 12309  012CB0  0E01               	movlw	1
 12310                           
 12311                           ; BSR set to: 0
 12312                           
 12313                           ; BSR set to: 0
 12314                           
 12315                           ; BSR set to: 0
 12316                           
 12317                           ; BSR set to: 0
 12318  012CB2  0012               	return	
 12319  012CB4                     __end_of__display_itoa_u16:
 12320                           	opt stack 0
 12321                           tblptru	equ	0xFF8
 12322                           tblptrh	equ	0xFF7
 12323                           tblptrl	equ	0xFF6
 12324                           tablat	equ	0xFF5
 12325                           prodh	equ	0xFF4
 12326                           prodl	equ	0xFF3
 12327                           postinc0	equ	0xFEE
 12328                           wreg	equ	0xFE8
 12329                           postdec1	equ	0xFE5
 12330                           plusw1	equ	0xFE3
 12331                           fsr1h	equ	0xFE2
 12332                           fsr1l	equ	0xFE1
 12333                           indf2	equ	0xFDF
 12334                           postinc2	equ	0xFDE
 12335                           plusw2	equ	0xFDB
 12336                           fsr2h	equ	0xFDA
 12337                           fsr2l	equ	0xFD9
 12338                           status	equ	0xFD8
 12339                           
 12340 ;; *************** function _configFile_write *****************
 12341 ;; Defined at:
 12342 ;;		line 270 in file "config_file.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  file_size       4  133[BANK0 ] unsigned long 
 12347 ;;  file_number     1  132[BANK0 ] unsigned char 
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  1    wreg      void 
 12350 ;; Registers used:
 12351 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12358 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12359 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12360 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12361 ;;Total ram usage:        6 bytes
 12362 ;; Hardware stack levels used:    1
 12363 ;; Hardware stack levels required when called:   18
 12364 ;; This function calls:
 12365 ;;		__add_item
 12366 ;;		_fat_create_file
 12367 ;;		_fat_find_file
 12368 ;;		_fat_modify_file
 12369 ;;		_fat_resize_file
 12370 ;; This function is called by:
 12371 ;;		_system_init
 12372 ;; This function uses a non-reentrant model
 12373 ;;
 12374                           
 12375                           	psect	text39
 12376  00C194                     __ptext39:
 12377                           	opt stack 0
 12378  00C194                     _configFile_write:
 12379                           	opt stack 11
 12380                           
 12381                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 275: file_size = 0;
 12382                           
 12383                           ; BSR set to: 0
 12384                           ;incstack = 0
 12385  00C194  0E00               	movlw	0
 12386  00C196  0100               	movlb	0	; () banked
 12387  00C198  6FE5               	movwf	configFile_write@file_size& (0+255),b
 12388  00C19A  0E00               	movlw	0
 12389  00C19C  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 12390  00C19E  0E00               	movlw	0
 12391  00C1A0  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 12392  00C1A2  0E00               	movlw	0
 12393  00C1A4  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;config_file.c: 276: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 12397  00C1A6  0EFD               	movlw	low _full_circle_in_steps_string
 12398  00C1A8  6F84               	movwf	__add_item@item_string& (0+255),b
 12399  00C1AA  0EA1               	movlw	high _full_circle_in_steps_string
 12400  00C1AC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12401  00C1AE  C1A1  F086         	movff	_config,__add_item@value
 12402  00C1B2  C1A2  F087         	movff	_config+1,__add_item@value+1
 12403  00C1B6  C1A3  F088         	movff	_config+2,__add_item@value+2
 12404  00C1BA  C1A4  F089         	movff	_config+3,__add_item@value+3
 12405  00C1BE  0E00               	movlw	low _ConfigFile_buffer
 12406  00C1C0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12407  00C1C2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12408  00C1C4  0E08               	movlw	high _ConfigFile_buffer
 12409  00C1C6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12410  00C1C8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12411  00C1CA  EC2F  F08E         	call	__add_item	;wreg free
 12412  00C1CE  0100               	movlb	0	; () banked
 12413  00C1D0  6FE3               	movwf	??_configFile_write& (0+255),b
 12414  00C1D2  51E3               	movf	??_configFile_write& (0+255),w,b
 12415  00C1D4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12416  00C1D6  0E00               	movlw	0
 12417  00C1D8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12418  00C1DA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12419  00C1DC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;config_file.c: 277: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 12423  00C1DE  0E49               	movlw	low _inverse_direction_string
 12424  00C1E0  6F84               	movwf	__add_item@item_string& (0+255),b
 12425  00C1E2  0EA2               	movlw	high _inverse_direction_string
 12426  00C1E4  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12427  00C1E6  0101               	movlb	1	; () banked
 12428  00C1E8  51A5               	movf	(_config+4)& (0+255),w,b
 12429  00C1EA  0100               	movlb	0	; () banked
 12430  00C1EC  6F86               	movwf	__add_item@value& (0+255),b
 12431  00C1EE  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12432  00C1F0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12433  00C1F2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12434  00C1F4  0E00               	movlw	low _ConfigFile_buffer
 12435  00C1F6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12436  00C1F8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12437  00C1FA  0E08               	movlw	high _ConfigFile_buffer
 12438  00C1FC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12439  00C1FE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12440  00C200  EC2F  F08E         	call	__add_item	;wreg free
 12441  00C204  0100               	movlb	0	; () banked
 12442  00C206  6FE3               	movwf	??_configFile_write& (0+255),b
 12443  00C208  51E3               	movf	??_configFile_write& (0+255),w,b
 12444  00C20A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12445  00C20C  0E00               	movlw	0
 12446  00C20E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12447  00C210  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12448  00C212  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12449                           
 12450                           ; BSR set to: 0
 12451                           ;config_file.c: 278: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 12452  00C214  0E12               	movlw	low _overshoot_in_steps_string
 12453  00C216  6F84               	movwf	__add_item@item_string& (0+255),b
 12454  00C218  0EA2               	movlw	high _overshoot_in_steps_string
 12455  00C21A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12456  00C21C  C1A6  F086         	movff	_config+5,__add_item@value
 12457  00C220  C1A7  F087         	movff	_config+6,__add_item@value+1
 12458  00C224  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12459  00C226  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12460  00C228  0E00               	movlw	low _ConfigFile_buffer
 12461  00C22A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12462  00C22C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12463  00C22E  0E08               	movlw	high _ConfigFile_buffer
 12464  00C230  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12465  00C232  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12466  00C234  EC2F  F08E         	call	__add_item	;wreg free
 12467  00C238  0100               	movlb	0	; () banked
 12468  00C23A  6FE3               	movwf	??_configFile_write& (0+255),b
 12469  00C23C  51E3               	movf	??_configFile_write& (0+255),w,b
 12470  00C23E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12471  00C240  0E00               	movlw	0
 12472  00C242  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12473  00C244  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12474  00C246  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;config_file.c: 279: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 12478  00C248  0EBB               	movlw	low _overshoot_cost_in_steps_string
 12479  00C24A  6F84               	movwf	__add_item@item_string& (0+255),b
 12480  00C24C  0EA1               	movlw	high _overshoot_cost_in_steps_string
 12481  00C24E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12482  00C250  C1A8  F086         	movff	_config+7,__add_item@value
 12483  00C254  C1A9  F087         	movff	_config+8,__add_item@value+1
 12484  00C258  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12485  00C25A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12486  00C25C  0E00               	movlw	low _ConfigFile_buffer
 12487  00C25E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12488  00C260  6F8A               	movwf	__add_item@buffer& (0+255),b
 12489  00C262  0E08               	movlw	high _ConfigFile_buffer
 12490  00C264  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12491  00C266  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12492  00C268  EC2F  F08E         	call	__add_item	;wreg free
 12493  00C26C  0100               	movlb	0	; () banked
 12494  00C26E  6FE3               	movwf	??_configFile_write& (0+255),b
 12495  00C270  51E3               	movf	??_configFile_write& (0+255),w,b
 12496  00C272  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12497  00C274  0E00               	movlw	0
 12498  00C276  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12499  00C278  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12500  00C27A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;config_file.c: 280: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12504  00C27C  0E97               	movlw	low _minimum_speed_string
 12505  00C27E  6F84               	movwf	__add_item@item_string& (0+255),b
 12506  00C280  0EA2               	movlw	high _minimum_speed_string
 12507  00C282  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12508  00C284  C1AA  F086         	movff	_config+9,__add_item@value
 12509  00C288  C1AB  F087         	movff	_config+10,__add_item@value+1
 12510  00C28C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12511  00C28E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12512  00C290  0E00               	movlw	low _ConfigFile_buffer
 12513  00C292  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12514  00C294  6F8A               	movwf	__add_item@buffer& (0+255),b
 12515  00C296  0E08               	movlw	high _ConfigFile_buffer
 12516  00C298  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12517  00C29A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12518  00C29C  EC2F  F08E         	call	__add_item	;wreg free
 12519  00C2A0  0100               	movlb	0	; () banked
 12520  00C2A2  6FE3               	movwf	??_configFile_write& (0+255),b
 12521  00C2A4  51E3               	movf	??_configFile_write& (0+255),w,b
 12522  00C2A6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12523  00C2A8  0E00               	movlw	0
 12524  00C2AA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12525  00C2AC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12526  00C2AE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;config_file.c: 281: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12530  00C2B0  0E89               	movlw	low _maximum_speed_string
 12531  00C2B2  6F84               	movwf	__add_item@item_string& (0+255),b
 12532  00C2B4  0EA2               	movlw	high _maximum_speed_string
 12533  00C2B6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12534  00C2B8  C1AC  F086         	movff	_config+11,__add_item@value
 12535  00C2BC  C1AD  F087         	movff	_config+12,__add_item@value+1
 12536  00C2C0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12537  00C2C2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12538  00C2C4  0E00               	movlw	low _ConfigFile_buffer
 12539  00C2C6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12540  00C2C8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12541  00C2CA  0E08               	movlw	high _ConfigFile_buffer
 12542  00C2CC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12543  00C2CE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12544  00C2D0  EC2F  F08E         	call	__add_item	;wreg free
 12545  00C2D4  0100               	movlb	0	; () banked
 12546  00C2D6  6FE3               	movwf	??_configFile_write& (0+255),b
 12547  00C2D8  51E3               	movf	??_configFile_write& (0+255),w,b
 12548  00C2DA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12549  00C2DC  0E00               	movlw	0
 12550  00C2DE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12551  00C2E0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12552  00C2E2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;config_file.c: 282: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 12556  00C2E4  0E37               	movlw	low _initial_speed_arc_string
 12557  00C2E6  6F84               	movwf	__add_item@item_string& (0+255),b
 12558  00C2E8  0EA2               	movlw	high _initial_speed_arc_string
 12559  00C2EA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12560  00C2EC  C1AE  F086         	movff	_config+13,__add_item@value
 12561  00C2F0  C1AF  F087         	movff	_config+14,__add_item@value+1
 12562  00C2F4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12563  00C2F6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12564  00C2F8  0E00               	movlw	low _ConfigFile_buffer
 12565  00C2FA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12566  00C2FC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12567  00C2FE  0E08               	movlw	high _ConfigFile_buffer
 12568  00C300  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12569  00C302  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12570  00C304  EC2F  F08E         	call	__add_item	;wreg free
 12571  00C308  0100               	movlb	0	; () banked
 12572  00C30A  6FE3               	movwf	??_configFile_write& (0+255),b
 12573  00C30C  51E3               	movf	??_configFile_write& (0+255),w,b
 12574  00C30E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12575  00C310  0E00               	movlw	0
 12576  00C312  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12577  00C314  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12578  00C316  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;config_file.c: 283: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 12582  00C318  0E25               	movlw	low _maximum_speed_arc_string
 12583  00C31A  6F84               	movwf	__add_item@item_string& (0+255),b
 12584  00C31C  0EA2               	movlw	high _maximum_speed_arc_string
 12585  00C31E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12586  00C320  C1B0  F086         	movff	_config+15,__add_item@value
 12587  00C324  C1B1  F087         	movff	_config+16,__add_item@value+1
 12588  00C328  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12589  00C32A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12590  00C32C  0E00               	movlw	low _ConfigFile_buffer
 12591  00C32E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12592  00C330  6F8A               	movwf	__add_item@buffer& (0+255),b
 12593  00C332  0E08               	movlw	high _ConfigFile_buffer
 12594  00C334  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12595  00C336  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12596  00C338  EC2F  F08E         	call	__add_item	;wreg free
 12597  00C33C  0100               	movlb	0	; () banked
 12598  00C33E  6FE3               	movwf	??_configFile_write& (0+255),b
 12599  00C340  51E3               	movf	??_configFile_write& (0+255),w,b
 12600  00C342  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12601  00C344  0E00               	movlw	0
 12602  00C346  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12603  00C348  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12604  00C34A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;config_file.c: 284: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 12608  00C34C  0EE8               	movlw	low _initial_speed_manual_string
 12609  00C34E  6F84               	movwf	__add_item@item_string& (0+255),b
 12610  00C350  0EA1               	movlw	high _initial_speed_manual_string
 12611  00C352  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12612  00C354  C1B2  F086         	movff	_config+17,__add_item@value
 12613  00C358  C1B3  F087         	movff	_config+18,__add_item@value+1
 12614  00C35C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12615  00C35E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12616  00C360  0E00               	movlw	low _ConfigFile_buffer
 12617  00C362  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12618  00C364  6F8A               	movwf	__add_item@buffer& (0+255),b
 12619  00C366  0E08               	movlw	high _ConfigFile_buffer
 12620  00C368  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12621  00C36A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12622  00C36C  EC2F  F08E         	call	__add_item	;wreg free
 12623  00C370  0100               	movlb	0	; () banked
 12624  00C372  6FE3               	movwf	??_configFile_write& (0+255),b
 12625  00C374  51E3               	movf	??_configFile_write& (0+255),w,b
 12626  00C376  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12627  00C378  0E00               	movlw	0
 12628  00C37A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12629  00C37C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12630  00C37E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;config_file.c: 285: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 12634  00C380  0ED3               	movlw	low _maximum_speed_manual_string
 12635  00C382  6F84               	movwf	__add_item@item_string& (0+255),b
 12636  00C384  0EA1               	movlw	high _maximum_speed_manual_string
 12637  00C386  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12638  00C388  C1B4  F086         	movff	_config+19,__add_item@value
 12639  00C38C  C1B5  F087         	movff	_config+20,__add_item@value+1
 12640  00C390  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12641  00C392  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12642  00C394  0E00               	movlw	low _ConfigFile_buffer
 12643  00C396  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12644  00C398  6F8A               	movwf	__add_item@buffer& (0+255),b
 12645  00C39A  0E08               	movlw	high _ConfigFile_buffer
 12646  00C39C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12647  00C39E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12648  00C3A0  EC2F  F08E         	call	__add_item	;wreg free
 12649  00C3A4  0100               	movlb	0	; () banked
 12650  00C3A6  6FE3               	movwf	??_configFile_write& (0+255),b
 12651  00C3A8  51E3               	movf	??_configFile_write& (0+255),w,b
 12652  00C3AA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12653  00C3AC  0E00               	movlw	0
 12654  00C3AE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12655  00C3B0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12656  00C3B2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12657                           
 12658                           ; BSR set to: 0
 12659                           ;config_file.c: 286: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12660  00C3B4  0E6D               	movlw	low _use_ccw_limit_string
 12661  00C3B6  6F84               	movwf	__add_item@item_string& (0+255),b
 12662  00C3B8  0EA2               	movlw	high _use_ccw_limit_string
 12663  00C3BA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12664  00C3BC  0101               	movlb	1	; () banked
 12665  00C3BE  51BA               	movf	(_config+25)& (0+255),w,b
 12666  00C3C0  0100               	movlb	0	; () banked
 12667  00C3C2  6F86               	movwf	__add_item@value& (0+255),b
 12668  00C3C4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12669  00C3C6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12670  00C3C8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12671  00C3CA  0E00               	movlw	low _ConfigFile_buffer
 12672  00C3CC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12673  00C3CE  6F8A               	movwf	__add_item@buffer& (0+255),b
 12674  00C3D0  0E08               	movlw	high _ConfigFile_buffer
 12675  00C3D2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12676  00C3D4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12677  00C3D6  EC2F  F08E         	call	__add_item	;wreg free
 12678  00C3DA  0100               	movlb	0	; () banked
 12679  00C3DC  6FE3               	movwf	??_configFile_write& (0+255),b
 12680  00C3DE  51E3               	movf	??_configFile_write& (0+255),w,b
 12681  00C3E0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12682  00C3E2  0E00               	movlw	0
 12683  00C3E4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12684  00C3E6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12685  00C3E8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;config_file.c: 287: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12689  00C3EA  0EB2               	movlw	low _ccw_limit_string
 12690  00C3EC  6F84               	movwf	__add_item@item_string& (0+255),b
 12691  00C3EE  0EA2               	movlw	high _ccw_limit_string
 12692  00C3F0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12693  00C3F2  C1BB  F086         	movff	_config+26,__add_item@value
 12694  00C3F6  C1BC  F087         	movff	_config+27,__add_item@value+1
 12695  00C3FA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12696  00C3FC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12697  00C3FE  0E00               	movlw	low _ConfigFile_buffer
 12698  00C400  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12699  00C402  6F8A               	movwf	__add_item@buffer& (0+255),b
 12700  00C404  0E08               	movlw	high _ConfigFile_buffer
 12701  00C406  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12702  00C408  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12703  00C40A  EC2F  F08E         	call	__add_item	;wreg free
 12704  00C40E  0100               	movlb	0	; () banked
 12705  00C410  6FE3               	movwf	??_configFile_write& (0+255),b
 12706  00C412  51E3               	movf	??_configFile_write& (0+255),w,b
 12707  00C414  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12708  00C416  0E00               	movlw	0
 12709  00C418  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12710  00C41A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12711  00C41C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;config_file.c: 288: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12715  00C41E  0EA5               	movlw	low _use_cw_limit_string
 12716  00C420  6F84               	movwf	__add_item@item_string& (0+255),b
 12717  00C422  0EA2               	movlw	high _use_cw_limit_string
 12718  00C424  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12719  00C426  0101               	movlb	1	; () banked
 12720  00C428  51B7               	movf	(_config+22)& (0+255),w,b
 12721  00C42A  0100               	movlb	0	; () banked
 12722  00C42C  6F86               	movwf	__add_item@value& (0+255),b
 12723  00C42E  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12724  00C430  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12725  00C432  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12726  00C434  0E00               	movlw	low _ConfigFile_buffer
 12727  00C436  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12728  00C438  6F8A               	movwf	__add_item@buffer& (0+255),b
 12729  00C43A  0E08               	movlw	high _ConfigFile_buffer
 12730  00C43C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12731  00C43E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12732  00C440  EC2F  F08E         	call	__add_item	;wreg free
 12733  00C444  0100               	movlb	0	; () banked
 12734  00C446  6FE3               	movwf	??_configFile_write& (0+255),b
 12735  00C448  51E3               	movf	??_configFile_write& (0+255),w,b
 12736  00C44A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12737  00C44C  0E00               	movlw	0
 12738  00C44E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12739  00C450  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12740  00C452  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;config_file.c: 289: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12744  00C454  0EBC               	movlw	low _cw_limit_string
 12745  00C456  6F84               	movwf	__add_item@item_string& (0+255),b
 12746  00C458  0EA2               	movlw	high _cw_limit_string
 12747  00C45A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12748  00C45C  C1B8  F086         	movff	_config+23,__add_item@value
 12749  00C460  C1B9  F087         	movff	_config+24,__add_item@value+1
 12750  00C464  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12751  00C466  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12752  00C468  0E00               	movlw	low _ConfigFile_buffer
 12753  00C46A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12754  00C46C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12755  00C46E  0E08               	movlw	high _ConfigFile_buffer
 12756  00C470  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12757  00C472  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12758  00C474  EC2F  F08E         	call	__add_item	;wreg free
 12759  00C478  0100               	movlb	0	; () banked
 12760  00C47A  6FE3               	movwf	??_configFile_write& (0+255),b
 12761  00C47C  51E3               	movf	??_configFile_write& (0+255),w,b
 12762  00C47E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12763  00C480  0E00               	movlw	0
 12764  00C482  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12765  00C484  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12766  00C486  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;config_file.c: 290: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12770  00C488  0E7B               	movlw	low _beep_duration_string
 12771  00C48A  6F84               	movwf	__add_item@item_string& (0+255),b
 12772  00C48C  0EA2               	movlw	high _beep_duration_string
 12773  00C48E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12774  00C490  0101               	movlb	1	; () banked
 12775  00C492  51B6               	movf	(_config+21)& (0+255),w,b
 12776  00C494  0100               	movlb	0	; () banked
 12777  00C496  6F86               	movwf	__add_item@value& (0+255),b
 12778  00C498  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12779  00C49A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12780  00C49C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12781  00C49E  0E00               	movlw	low _ConfigFile_buffer
 12782  00C4A0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12783  00C4A2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12784  00C4A4  0E08               	movlw	high _ConfigFile_buffer
 12785  00C4A6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12786  00C4A8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12787  00C4AA  EC2F  F08E         	call	__add_item	;wreg free
 12788  00C4AE  0100               	movlb	0	; () banked
 12789  00C4B0  6FE3               	movwf	??_configFile_write& (0+255),b
 12790  00C4B2  51E3               	movf	??_configFile_write& (0+255),w,b
 12791  00C4B4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12792  00C4B6  0E00               	movlw	0
 12793  00C4B8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12794  00C4BA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12795  00C4BC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;config_file.c: 293: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12799  00C4BE  0EC0               	movlw	low _configFile_used_name
 12800  00C4C0  6F8B               	movwf	fat_find_file@name& (0+255),b
 12801  00C4C2  0E02               	movlw	high _configFile_used_name
 12802  00C4C4  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12803  00C4C6  0ED0               	movlw	low _configFile_used_extention
 12804  00C4C8  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12805  00C4CA  0E02               	movlw	high _configFile_used_extention
 12806  00C4CC  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12807  00C4CE  EC48  F08D         	call	_fat_find_file	;wreg free
 12808  00C4D2  0100               	movlb	0	; () banked
 12809  00C4D4  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;config_file.c: 294: if(file_number==0xFF)
 12813  00C4D6  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12814  00C4D8  A4D8               	btfss	status,2,c
 12815  00C4DA  D015               	goto	l2967
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;config_file.c: 295: {;config_file.c: 296: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12819  00C4DC  0EC0               	movlw	low _configFile_used_name
 12820  00C4DE  6FAC               	movwf	fat_create_file@name& (0+255),b
 12821  00C4E0  0E02               	movlw	high _configFile_used_name
 12822  00C4E2  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12823  00C4E4  0ED0               	movlw	low _configFile_used_extention
 12824  00C4E6  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12825  00C4E8  0E02               	movlw	high _configFile_used_extention
 12826  00C4EA  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12827  00C4EC  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12828  00C4F0  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12829  00C4F4  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12830  00C4F8  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12831  00C4FC  ECB9  F081         	call	_fat_create_file	;wreg free
 12832  00C500  0100               	movlb	0	; () banked
 12833  00C502  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12834                           
 12835                           ;config_file.c: 297: }
 12836  00C504  D00B               	goto	l2968
 12837  00C506                     l2967:
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 300: fat_resize_file(file
      +                          _number, file_size);
 12841                           
 12842                           ; BSR set to: 0
 12843  00C506  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12844  00C50A  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12845  00C50E  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12846  00C512  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12847  00C516  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12848  00C518  EC71  F089         	call	_fat_resize_file
 12849  00C51C                     l2968:
 12850                           
 12851                           ;config_file.c: 301: };config_file.c: 304: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12852  00C51C  0E00               	movlw	0
 12853  00C51E  0100               	movlb	0	; () banked
 12854  00C520  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12855  00C522  0E00               	movlw	0
 12856  00C524  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12857  00C526  0E00               	movlw	0
 12858  00C528  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12859  00C52A  0E00               	movlw	0
 12860  00C52C  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12861  00C52E  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12862  00C532  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12863  00C536  0E00               	movlw	low _ConfigFile_buffer
 12864  00C538  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12865  00C53A  0E08               	movlw	high _ConfigFile_buffer
 12866  00C53C  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12867  00C53E  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12868  00C540  ECE0  F072         	call	_fat_modify_file
 12869  00C544  0012               	return		;funcret
 12870  00C546                     __end_of_configFile_write:
 12871                           	opt stack 0
 12872                           tblptru	equ	0xFF8
 12873                           tblptrh	equ	0xFF7
 12874                           tblptrl	equ	0xFF6
 12875                           tablat	equ	0xFF5
 12876                           prodh	equ	0xFF4
 12877                           prodl	equ	0xFF3
 12878                           postinc0	equ	0xFEE
 12879                           wreg	equ	0xFE8
 12880                           postdec1	equ	0xFE5
 12881                           plusw1	equ	0xFE3
 12882                           fsr1h	equ	0xFE2
 12883                           fsr1l	equ	0xFE1
 12884                           indf2	equ	0xFDF
 12885                           postinc2	equ	0xFDE
 12886                           plusw2	equ	0xFDB
 12887                           fsr2h	equ	0xFDA
 12888                           fsr2l	equ	0xFD9
 12889                           status	equ	0xFD8
 12890                           
 12891 ;; *************** function _fat_resize_file *****************
 12892 ;; Defined at:
 12893 ;;		line 910 in file "fat16.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  file_number     1    wreg     unsigned char 
 12896 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12897 ;; Auto vars:     Size  Location     Type
 12898 ;;  file_number     1   90[BANK0 ] unsigned char 
 12899 ;;  root           32   91[BANK0 ] struct .
 12900 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12901 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12902 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12903 ;; Return value:  Size  Location     Type
 12904 ;;                  1    wreg      unsigned char 
 12905 ;; Registers used:
 12906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12907 ;; Tracked objects:
 12908 ;;		On entry : 0/0
 12909 ;;		On exit  : 0/0
 12910 ;;		Unchanged: 0/0
 12911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12913 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12915 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12916 ;;Total ram usage:       47 bytes
 12917 ;; Hardware stack levels used:    1
 12918 ;; Hardware stack levels required when called:   17
 12919 ;; This function calls:
 12920 ;;		__make_cluster_chain
 12921 ;;		__root_is_available
 12922 ;;		__write_root
 12923 ;;		_fat_get_file_information
 12924 ;; This function is called by:
 12925 ;;		_configFile_write
 12926 ;;		_fat_append_to_file
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text40
 12931  0112E2                     __ptext40:
 12932                           	opt stack 0
 12933  0112E2                     _fat_resize_file:
 12934                           	opt stack 11
 12935                           
 12936                           ;incstack = 0
 12937                           ;fat_resize_file@file_number stored from wreg
 12938  0112E2  0100               	movlb	0	; () banked
 12939  0112E4  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12940                           
 12941                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 12942  0112E6  0E3F               	movlw	63
 12943  0112E8  0100               	movlb	0	; () banked
 12944  0112EA  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12945  0112EC  D002               	goto	l1900
 12946                           
 12947                           ; BSR set to: 0
 12948                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 12949  0112EE  0EFF               	movlw	255
 12950                           
 12951                           ; BSR set to: 0
 12952  0112F0  0012               	return	
 12953  0112F2                     l1900:
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 12957                           
 12958                           ; BSR set to: 0
 12959  0112F2  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12960  0112F4  EC12  F0A0         	call	__root_is_available
 12961  0112F8  0900               	iorlw	0
 12962  0112FA  B4D8               	btfsc	status,2,c
 12963  0112FC  D002               	goto	l1902
 12964                           
 12965                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 12966  0112FE  0EFE               	movlw	254
 12967  011300  0012               	return	
 12968  011302                     l1902:
 12969                           
 12970                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 12971  011302  0EBB               	movlw	low fat_resize_file@root
 12972  011304  0100               	movlb	0	; () banked
 12973  011306  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12974  011308  0E00               	movlw	high fat_resize_file@root
 12975  01130A  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12976  01130C  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12977  01130E  EC0C  F09E         	call	_fat_get_file_information
 12978                           
 12979                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12980  011312  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12981  011316  0EFF               	movlw	255
 12982  011318  24DE               	addwf	postinc2,w,c
 12983  01131A  0100               	movlb	0	; () banked
 12984  01131C  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12985  01131E  0E01               	movlw	1
 12986  011320  20DE               	addwfc	postinc2,w,c
 12987  011322  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12988  011324  0E00               	movlw	0
 12989  011326  20DE               	addwfc	postinc2,w,c
 12990  011328  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12991  01132A  0E00               	movlw	0
 12992  01132C  20DE               	addwfc	postinc2,w,c
 12993  01132E  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12994  011330  0E0A               	movlw	10
 12995  011332  D005               	goto	u14410
 12996  011334                     u14415:
 12997  011334  90D8               	bcf	status,0,c
 12998  011336  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12999  011338  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13000  01133A  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13001  01133C  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13002  01133E                     u14410:
 13003  01133E  2EE8               	decfsz	wreg,f,c
 13004  011340  D7F9               	goto	u14415
 13005  011342  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 13006  011346  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 13010  01134A  0EFF               	movlw	255
 13011  01134C  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 13012  01134E  6FB0               	movwf	??_fat_resize_file& (0+255),b
 13013  011350  0E01               	movlw	1
 13014  011352  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 13015  011354  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 13016  011356  0E00               	movlw	0
 13017  011358  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 13018  01135A  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 13019  01135C  0E00               	movlw	0
 13020  01135E  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 13021  011360  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 13022  011362  0E0A               	movlw	10
 13023  011364  D005               	goto	u14420
 13024  011366                     u14425:
 13025  011366  90D8               	bcf	status,0,c
 13026  011368  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13027  01136A  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13028  01136C  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13029  01136E  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13030  011370                     u14420:
 13031  011370  2EE8               	decfsz	wreg,f,c
 13032  011372  D7F9               	goto	u14425
 13033  011374  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 13034  011378  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 13038  01137C  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 13039  01137E  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 13040  011380  E104               	bnz	u14430
 13041  011382  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 13042  011384  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 13043  011386  B4D8               	btfsc	status,2,c
 13044  011388  D01A               	goto	l1903
 13045  01138A                     u14430:
 13046                           
 13047                           ; BSR set to: 0
 13048                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 13049  01138A  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 13050  01138E  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 13051  011392  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 13052  011396  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 13053  01139A  EC6B  F06C         	call	__make_cluster_chain	;wreg free
 13054  01139E  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 13055  0113A2  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 13056                           
 13057                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 13058  0113A6  0100               	movlb	0	; () banked
 13059  0113A8  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 13060  0113AA  E105               	bnz	l1904
 13061  0113AC  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 13062  0113AE  A4D8               	btfss	status,2,c
 13063  0113B0  D002               	goto	l1904
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 13067  0113B2  0EFD               	movlw	253
 13068                           
 13069                           ; BSR set to: 0
 13070  0113B4  0012               	return	
 13071  0113B6                     l1904:
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 13075  0113B6  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 13076  0113BA  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 13077  0113BE                     l1903:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 13081  0113BE  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 13082  0113C2  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 13083  0113C6  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 13084  0113CA  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 13085                           
 13086                           ; BSR set to: 0
 13087                           ;fat16.c: 956: _write_root(file_number, &root);
 13088  0113CE  0EBB               	movlw	low fat_resize_file@root
 13089  0113D0  6F88               	movwf	__write_root@data& (0+255),b
 13090  0113D2  0E00               	movlw	high fat_resize_file@root
 13091  0113D4  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13092  0113D6  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 13093  0113D8  EC95  F0A6         	call	__write_root
 13094                           
 13095                           ;fat16.c: 959: return 0x00;
 13096  0113DC  0E00               	movlw	0
 13097  0113DE  0012               	return	
 13098  0113E0                     __end_of_fat_resize_file:
 13099                           	opt stack 0
 13100                           tblptru	equ	0xFF8
 13101                           tblptrh	equ	0xFF7
 13102                           tblptrl	equ	0xFF6
 13103                           tablat	equ	0xFF5
 13104                           prodh	equ	0xFF4
 13105                           prodl	equ	0xFF3
 13106                           postinc0	equ	0xFEE
 13107                           wreg	equ	0xFE8
 13108                           postdec1	equ	0xFE5
 13109                           plusw1	equ	0xFE3
 13110                           fsr1h	equ	0xFE2
 13111                           fsr1l	equ	0xFE1
 13112                           indf2	equ	0xFDF
 13113                           postinc2	equ	0xFDE
 13114                           plusw2	equ	0xFDB
 13115                           fsr2h	equ	0xFDA
 13116                           fsr2l	equ	0xFD9
 13117                           status	equ	0xFD8
 13118                           
 13119 ;; *************** function _fat_modify_file *****************
 13120 ;; Defined at:
 13121 ;;		line 962 in file "fat16.c"
 13122 ;; Parameters:    Size  Location     Type
 13123 ;;  file_number     1    wreg     unsigned char 
 13124 ;;  start_byte      4   65[BANK0 ] unsigned long 
 13125 ;;  length          2   69[BANK0 ] unsigned int 
 13126 ;;  data            2   71[BANK0 ] PTR unsigned char 
 13127 ;;		 -> ConfigFile_buffer(512), 
 13128 ;; Auto vars:     Size  Location     Type
 13129 ;;  file_number     1   87[BANK0 ] unsigned char 
 13130 ;;  root           32   99[BANK0 ] struct .
 13131 ;;  position        4   95[BANK0 ] unsigned long 
 13132 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 13133 ;;  offset          2   91[BANK0 ] unsigned int 
 13134 ;;  cluster         2   89[BANK0 ] unsigned int 
 13135 ;;  sector          2   85[BANK0 ] unsigned int 
 13136 ;;  return_code     1   88[BANK0 ] unsigned char 
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  1    wreg      unsigned char 
 13139 ;; Registers used:
 13140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13146 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13147 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13148 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13149 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13150 ;;Total ram usage:       66 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:   17
 13153 ;; This function calls:
 13154 ;;		__data_sector_from_cluster
 13155 ;;		__find_nth_cluster
 13156 ;;		__read_fat
 13157 ;;		_fat_get_file_information
 13158 ;;		_flash_partial_write
 13159 ;; This function is called by:
 13160 ;;		_configFile_write
 13161 ;;		_fat_append_to_file
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           	psect	text41
 13166  00E5C0                     __ptext41:
 13167                           	opt stack 0
 13168  00E5C0                     _fat_modify_file:
 13169                           	opt stack 11
 13170                           
 13171                           ;incstack = 0
 13172                           ;fat_modify_file@file_number stored from wreg
 13173  00E5C0  0100               	movlb	0	; () banked
 13174  00E5C2  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 13175                           
 13176                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 13177  00E5C4  0EC3               	movlw	low fat_modify_file@root
 13178  00E5C6  0100               	movlb	0	; () banked
 13179  00E5C8  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 13180  00E5CA  0E00               	movlw	high fat_modify_file@root
 13181  00E5CC  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 13182  00E5CE  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 13183  00E5D0  EC0C  F09E         	call	_fat_get_file_information
 13184  00E5D4  0100               	movlb	0	; () banked
 13185  00E5D6  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;fat16.c: 974: if(return_code!=0x00)
 13189  00E5D8  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 13190  00E5DA  A4D8               	btfss	status,2,c
 13191  00E5DC  0012               	return	
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 13195                           
 13196                           ; BSR set to: 0
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;fat16.c: 975: {;fat16.c: 977: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 13200  00E5DE  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13201  00E5E0  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13202  00E5E2  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13203  00E5E4  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13204  00E5E6  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13205  00E5E8  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13206  00E5EA  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13207  00E5EC  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13208  00E5EE  A0D8               	btfss	status,0,c
 13209  00E5F0  0012               	return	
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 13213                           
 13214                           ; BSR set to: 0
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 13218  00E5F2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13219  00E5F4  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 13220  00E5F6  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13221  00E5F8  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13222  00E5FA  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 13223  00E5FC  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13224  00E5FE  0E00               	movlw	0
 13225  00E600  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 13226  00E602  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 13227  00E604  0E00               	movlw	0
 13228  00E606  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 13229  00E608  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 13230  00E60A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13231  00E60C  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13232  00E60E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13233  00E610  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13234  00E612  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13235  00E614  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13236  00E616  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13237  00E618  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13238  00E61A  B0D8               	btfsc	status,0,c
 13239  00E61C  D00E               	goto	l1910
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 13243  00E61E  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13244  00E622  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13245  00E626  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13246  00E628  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13247  00E62A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13248  00E62C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13249  00E62E  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 13250  00E630  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13251  00E632  6FA5               	movwf	fat_modify_file@length& (0+255),b
 13252  00E634  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 13253  00E636  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13254  00E638  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 13255  00E63A                     l1910:
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 13259                           
 13260                           ; BSR set to: 0
 13261  00E63A  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 13262  00E63E  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 13263  00E642  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13264  00E646  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13265  00E64A  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 13266  00E64E  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 13267  00E652  0E0A               	movlw	10
 13268  00E654  D005               	goto	u14480
 13269  00E656                     u14485:
 13270  00E656  90D8               	bcf	status,0,c
 13271  00E658  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 13272  00E65A  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 13273  00E65C  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 13274  00E65E  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 13275  00E660                     u14480:
 13276  00E660  2EE8               	decfsz	wreg,f,c
 13277  00E662  D7F9               	goto	u14485
 13278  00E664  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 13279  00E668  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 13280  00E66C  EC0A  F099         	call	__find_nth_cluster	;wreg free
 13281  00E670  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 13282  00E674  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 13283                           
 13284                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 13285  00E678  0E00               	movlw	0
 13286  00E67A  0100               	movlb	0	; () banked
 13287  00E67C  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 13288  00E67E  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13289  00E680  0EFE               	movlw	254
 13290  00E682  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13291  00E684  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13292  00E686  0EFF               	movlw	255
 13293  00E688  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13294  00E68A  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13295  00E68C  0EFF               	movlw	255
 13296  00E68E  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13297  00E690  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 13301  00E692  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13302  00E696  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13303  00E69A  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13304  00E69C  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13305  00E69E  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13306  00E6A0  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13307  00E6A2  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13308  00E6A4  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13309  00E6A6  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13310  00E6A8  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13311  00E6AA  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13312  00E6AC  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13313                           
 13314                           ; BSR set to: 0
 13315                           ;fat16.c: 1003: position = 0;
 13316  00E6AE  0E00               	movlw	0
 13317  00E6B0  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13318  00E6B2  0E00               	movlw	0
 13319  00E6B4  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13320  00E6B6  0E00               	movlw	0
 13321  00E6B8  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13322  00E6BA  0E00               	movlw	0
 13323  00E6BC  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13324                           
 13325                           ;fat16.c: 1004: while(position < length)
 13326  00E6BE  D089               	goto	l1911
 13327  00E6C0                     
 13328                           ; BSR set to: 0
 13329                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 13330                           
 13331                           ; BSR set to: 0
 13332  00E6C0  0E02               	movlw	2
 13333  00E6C2  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 13334  00E6C4  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 13335  00E6C6  A4D8               	btfss	status,2,c
 13336  00E6C8  D00F               	goto	l1913
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 13340  00E6CA  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 13341  00E6CE  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 13342  00E6D2  ECA3  F0A3         	call	__read_fat	;wreg free
 13343  00E6D6  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 13344  00E6DA  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 13345                           
 13346                           ;fat16.c: 1012: offset = 0;
 13347  00E6DE  0E00               	movlw	0
 13348  00E6E0  0100               	movlb	0	; () banked
 13349  00E6E2  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13350  00E6E4  0E00               	movlw	0
 13351  00E6E6  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13352  00E6E8                     l1913:
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 13356                           
 13357                           ; BSR set to: 0
 13358  00E6E8  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 13359  00E6EC  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 13360  00E6F0  EC54  F0AC         	call	__data_sector_from_cluster	;wreg free
 13361  00E6F4  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 13362  00E6F8  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 13363                           
 13364                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 13365  00E6FC  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 13366  00E700  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 13367  00E704  0100               	movlb	0	; () banked
 13368  00E706  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13369  00E708  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13370  00E70A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13371  00E70C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13372  00E70E  0E00               	movlw	0
 13373  00E710  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13374  00E712  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13375  00E714  0E02               	movlw	2
 13376  00E716  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13377  00E718  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 13381  00E71A  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13382  00E71C  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13383  00E71E  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13384  00E720  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13385  00E722  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13386  00E724  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13387  00E726  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 13388  00E72A  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 13389  00E72E  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 13390  00E732  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 13391  00E736  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 13392  00E738  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 13393  00E73A  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 13394  00E73C  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 13395  00E73E  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 13396  00E740  0E00               	movlw	0
 13397  00E742  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 13398  00E744  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 13399  00E746  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 13400  00E748  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13401  00E74A  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 13402  00E74C  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 13403  00E74E  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13404  00E750  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 13405  00E752  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 13406  00E754  0E00               	movlw	0
 13407  00E756  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 13408  00E758  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 13409  00E75A  0E00               	movlw	0
 13410  00E75C  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 13411  00E75E  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 13412  00E760  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13413  00E762  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 13414  00E764  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13415  00E766  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 13416  00E768  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13417  00E76A  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 13418  00E76C  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13419  00E76E  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 13420  00E770  B0D8               	btfsc	status,0,c
 13421  00E772  D00E               	goto	l1914
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 13425  00E774  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13426  00E778  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13427  00E77C  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13428  00E77E  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13429  00E780  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13430  00E782  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13431  00E784  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13432  00E786  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13433  00E788  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13434  00E78A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13435  00E78C  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13436  00E78E  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13437  00E790                     l1914:
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 13441                           
 13442                           ; BSR set to: 0
 13443  00E790  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 13444  00E794  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 13445  00E798  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 13446  00E79C  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 13447  00E7A0  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 13448  00E7A4  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 13449  00E7A8  51BF               	movf	fat_modify_file@position& (0+255),w,b
 13450  00E7AA  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 13451  00E7AC  6F85               	movwf	flash_partial_write@data& (0+255),b
 13452  00E7AE  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 13453  00E7B0  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 13454  00E7B2  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 13455  00E7B4  ECDC  F09F         	call	_flash_partial_write	;wreg free
 13456                           
 13457                           ;fat16.c: 1029: position += number_of_bytes;
 13458  00E7B8  0100               	movlb	0	; () banked
 13459  00E7BA  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13460  00E7BC  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 13461  00E7BE  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13462  00E7C0  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 13463  00E7C2  0E00               	movlw	0
 13464  00E7C4  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 13465  00E7C6  0E00               	movlw	0
 13466  00E7C8  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 13467                           
 13468                           ; BSR set to: 0
 13469                           ;fat16.c: 1030: offset += number_of_bytes;
 13470  00E7CA  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13471  00E7CC  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 13472  00E7CE  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13473  00E7D0  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 13474  00E7D2                     l1911:
 13475                           
 13476                           ; BSR set to: 0
 13477                           
 13478                           ; BSR set to: 0
 13479  00E7D2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13480  00E7D4  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13481  00E7D6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13482  00E7D8  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13483  00E7DA  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13484  00E7DC  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13485  00E7DE  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13486  00E7E0  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 13487  00E7E2  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13488  00E7E4  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 13489  00E7E6  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13490  00E7E8  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 13491  00E7EA  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13492  00E7EC  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 13493  00E7EE  B0D8               	btfsc	status,0,c
 13494  00E7F0  0012               	return	
 13495  00E7F2  D766               	goto	l1912
 13496  00E7F4                     __end_of_fat_modify_file:
 13497                           	opt stack 0
 13498                           tblptru	equ	0xFF8
 13499                           tblptrh	equ	0xFF7
 13500                           tblptrl	equ	0xFF6
 13501                           tablat	equ	0xFF5
 13502                           prodh	equ	0xFF4
 13503                           prodl	equ	0xFF3
 13504                           postinc0	equ	0xFEE
 13505                           wreg	equ	0xFE8
 13506                           postdec1	equ	0xFE5
 13507                           plusw1	equ	0xFE3
 13508                           fsr1h	equ	0xFE2
 13509                           fsr1l	equ	0xFE1
 13510                           indf2	equ	0xFDF
 13511                           postinc2	equ	0xFDE
 13512                           plusw2	equ	0xFDB
 13513                           fsr2h	equ	0xFDA
 13514                           fsr2l	equ	0xFD9
 13515                           status	equ	0xFD8
 13516                           
 13517 ;; *************** function _fat_create_file *****************
 13518 ;; Defined at:
 13519 ;;		line 586 in file "fat16.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;  name            2   76[BANK0 ] PTR unsigned char 
 13522 ;;		 -> configFile_used_name(8), 
 13523 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 13524 ;;		 -> configFile_used_extention(3), 
 13525 ;;  size            4   80[BANK0 ] unsigned long 
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;  root_entry     32   93[BANK0 ] struct .
 13528 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 13529 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 13530 ;;  file_number     1   92[BANK0 ] unsigned char 
 13531 ;; Return value:  Size  Location     Type
 13532 ;;                  1    wreg      unsigned char 
 13533 ;; Registers used:
 13534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13535 ;; Tracked objects:
 13536 ;;		On entry : 0/0
 13537 ;;		On exit  : 0/0
 13538 ;;		Unchanged: 0/0
 13539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13540 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13541 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13544 ;;Total ram usage:       49 bytes
 13545 ;; Hardware stack levels used:    1
 13546 ;; Hardware stack levels required when called:   17
 13547 ;; This function calls:
 13548 ;;		__get_available_root_entry
 13549 ;;		__get_date
 13550 ;;		__get_time
 13551 ;;		__make_cluster_chain
 13552 ;;		__write_root
 13553 ;;		_fat_find_file
 13554 ;;		_memcpy
 13555 ;; This function is called by:
 13556 ;;		_configFile_write
 13557 ;;		_fat_copy_file
 13558 ;; This function uses a non-reentrant model
 13559 ;;
 13560                           
 13561                           	psect	text42
 13562  010372                     __ptext42:
 13563                           	opt stack 0
 13564  010372                     _fat_create_file:
 13565                           	opt stack 11
 13566                           
 13567                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;incstack = 0
 13571  010372  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 13572  010376  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 13573  01037A  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 13574  01037E  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13575  010382  EC48  F08D         	call	_fat_find_file	;wreg free
 13576  010386  0AFF               	xorlw	255
 13577  010388  B4D8               	btfsc	status,2,c
 13578  01038A  D002               	goto	l1849
 13579                           
 13580                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 13581  01038C  0EFF               	movlw	255
 13582  01038E  0012               	return	
 13583  010390                     l1849:
 13584                           
 13585                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 13586  010390  EC9A  F0AA         	call	__get_available_root_entry	;wreg free
 13587  010394  0100               	movlb	0	; () banked
 13588  010396  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;fat16.c: 605: if(file_number == 0xFF)
 13592  010398  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 13593  01039A  A4D8               	btfss	status,2,c
 13594  01039C  D002               	goto	l1851
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 13598  01039E  0EFE               	movlw	254
 13599                           
 13600                           ; BSR set to: 0
 13601  0103A0  0012               	return	
 13602  0103A2                     l1851:
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 13606                           
 13607                           ; BSR set to: 0
 13608  0103A2  0EFF               	movlw	255
 13609  0103A4  25B0               	addwf	fat_create_file@size& (0+255),w,b
 13610  0103A6  6FB4               	movwf	??_fat_create_file& (0+255),b
 13611  0103A8  0E01               	movlw	1
 13612  0103AA  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 13613  0103AC  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 13614  0103AE  0E00               	movlw	0
 13615  0103B0  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13616  0103B2  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13617  0103B4  0E00               	movlw	0
 13618  0103B6  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13619  0103B8  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13620  0103BA  0E0A               	movlw	10
 13621  0103BC  D005               	goto	u14370
 13622  0103BE                     u14375:
 13623  0103BE  90D8               	bcf	status,0,c
 13624  0103C0  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13625  0103C2  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13626  0103C4  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13627  0103C6  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13628  0103C8                     u14370:
 13629  0103C8  2EE8               	decfsz	wreg,f,c
 13630  0103CA  D7F9               	goto	u14375
 13631  0103CC  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13632  0103D0  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13636  0103D4  0E00               	movlw	0
 13637  0103D6  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13638  0103D8  0E00               	movlw	0
 13639  0103DA  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13640  0103DC  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13641  0103E0  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13642  0103E4  EC6B  F06C         	call	__make_cluster_chain	;wreg free
 13643  0103E8  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13644  0103EC  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13645                           
 13646                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 13647  0103F0  0100               	movlb	0	; () banked
 13648  0103F2  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13649  0103F4  E105               	bnz	l15574
 13650  0103F6  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13651  0103F8  A4D8               	btfss	status,2,c
 13652  0103FA  D002               	goto	l1852
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 13656  0103FC  0EFD               	movlw	253
 13657                           
 13658                           ; BSR set to: 0
 13659  0103FE  0012               	return	
 13660  010400                     l1852:
 13661  010400                     l15574:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 13665  010400  0EBD               	movlw	low fat_create_file@root_entry
 13666  010402  6F60               	movwf	memcpy@d1& (0+255),b
 13667  010404  0E00               	movlw	high fat_create_file@root_entry
 13668  010406  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13669  010408  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13670  01040C  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13671  010410  0E00               	movlw	0
 13672  010412  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13673  010414  0E08               	movlw	8
 13674  010416  6F64               	movwf	memcpy@n& (0+255),b
 13675  010418  ECD9  F0A1         	call	_memcpy	;wreg free
 13676                           
 13677                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 13678  01041C  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13679  01041E  0100               	movlb	0	; () banked
 13680  010420  6F60               	movwf	memcpy@d1& (0+255),b
 13681  010422  0E00               	movlw	high (fat_create_file@root_entry+8)
 13682  010424  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13683  010426  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13684  01042A  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13685  01042E  0E00               	movlw	0
 13686  010430  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13687  010432  0E03               	movlw	3
 13688  010434  6F64               	movwf	memcpy@n& (0+255),b
 13689  010436  ECD9  F0A1         	call	_memcpy	;wreg free
 13690                           
 13691                           ;fat16.c: 629: root_entry.attributes = 0x00;
 13692  01043A  0E00               	movlw	0
 13693  01043C  0100               	movlb	0	; () banked
 13694  01043E  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 13698  010440  0E00               	movlw	0
 13699  010442  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 13703  010444  0E00               	movlw	0
 13704  010446  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 13708  010448  EC6B  F0AC         	call	__get_time	;wreg free
 13709  01044C  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13710  010450  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13711                           
 13712                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 13713  010454  EC71  F0AC         	call	__get_date	;wreg free
 13714  010458  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13715  01045C  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13716                           
 13717                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 13718  010460  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13719  010464  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13720                           
 13721                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 13722  010468  0E00               	movlw	0
 13723  01046A  0100               	movlb	0	; () banked
 13724  01046C  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13725  01046E  0E00               	movlw	0
 13726  010470  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13727                           
 13728                           ; BSR set to: 0
 13729                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 13730  010472  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13731  010476  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 13735  01047A  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13736  01047E  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 13740  010482  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13741  010486  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;fat16.c: 639: root_entry.fileSize = size;
 13745  01048A  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13746  01048E  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13747  010492  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13748  010496  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 13752  01049A  0EBD               	movlw	low fat_create_file@root_entry
 13753  01049C  6F88               	movwf	__write_root@data& (0+255),b
 13754  01049E  0E00               	movlw	high fat_create_file@root_entry
 13755  0104A0  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13756  0104A2  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13757  0104A4  EC95  F0A6         	call	__write_root
 13758                           
 13759                           ;fat16.c: 644: return file_number;
 13760  0104A8  0100               	movlb	0	; () banked
 13761  0104AA  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13762  0104AC  0012               	return	
 13763  0104AE                     __end_of_fat_create_file:
 13764                           	opt stack 0
 13765                           tblptru	equ	0xFF8
 13766                           tblptrh	equ	0xFF7
 13767                           tblptrl	equ	0xFF6
 13768                           tablat	equ	0xFF5
 13769                           prodh	equ	0xFF4
 13770                           prodl	equ	0xFF3
 13771                           postinc0	equ	0xFEE
 13772                           wreg	equ	0xFE8
 13773                           postdec1	equ	0xFE5
 13774                           plusw1	equ	0xFE3
 13775                           fsr1h	equ	0xFE2
 13776                           fsr1l	equ	0xFE1
 13777                           indf2	equ	0xFDF
 13778                           postinc2	equ	0xFDE
 13779                           plusw2	equ	0xFDB
 13780                           fsr2h	equ	0xFDA
 13781                           fsr2l	equ	0xFD9
 13782                           status	equ	0xFD8
 13783                           
 13784 ;; *************** function __write_root *****************
 13785 ;; Defined at:
 13786 ;;		line 473 in file "fat16.c"
 13787 ;; Parameters:    Size  Location     Type
 13788 ;;  file_number     1    wreg     unsigned char 
 13789 ;;  data            2   40[BANK0 ] PTR struct .
 13790 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13791 ;; Auto vars:     Size  Location     Type
 13792 ;;  file_number     1   46[BANK0 ] unsigned char 
 13793 ;;  offset          2   44[BANK0 ] unsigned int 
 13794 ;;  sector          2   42[BANK0 ] unsigned int 
 13795 ;; Return value:  Size  Location     Type
 13796 ;;                  1    wreg      void 
 13797 ;; Registers used:
 13798 ;;		wreg, status,2, status,0, cstack
 13799 ;; Tracked objects:
 13800 ;;		On entry : 0/0
 13801 ;;		On exit  : 0/0
 13802 ;;		Unchanged: 0/0
 13803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13805 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13807 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13808 ;;Total ram usage:        7 bytes
 13809 ;; Hardware stack levels used:    1
 13810 ;; Hardware stack levels required when called:   15
 13811 ;; This function calls:
 13812 ;;		__offset_from_file_number
 13813 ;;		__sector_from_file_number
 13814 ;;		_flash_partial_write
 13815 ;; This function is called by:
 13816 ;;		_fat_create_file
 13817 ;;		_fat_resize_file
 13818 ;;		_fat_rename_file
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           	psect	text43
 13823  014D2A                     __ptext43:
 13824                           	opt stack 0
 13825  014D2A                     __write_root:
 13826                           	opt stack 12
 13827                           
 13828                           ;incstack = 0
 13829                           ;__write_root@file_number stored from wreg
 13830  014D2A  0100               	movlb	0	; () banked
 13831  014D2C  6F8E               	movwf	__write_root@file_number& (0+255),b
 13832                           
 13833                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 13834  014D2E  0100               	movlb	0	; () banked
 13835  014D30  518E               	movf	__write_root@file_number& (0+255),w,b
 13836  014D32  ECA0  F0A9         	call	__sector_from_file_number
 13837  014D36  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13838  014D3A  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13839                           
 13840                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 13841  014D3E  0100               	movlb	0	; () banked
 13842  014D40  518E               	movf	__write_root@file_number& (0+255),w,b
 13843  014D42  ECAF  F0AA         	call	__offset_from_file_number
 13844  014D46  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13845  014D4A  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13846                           
 13847                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 13848  014D4E  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13849  014D52  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13850  014D56  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13851  014D5A  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13852  014D5E  0E00               	movlw	0
 13853  014D60  0100               	movlb	0	; () banked
 13854  014D62  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13855  014D64  0E20               	movlw	32
 13856  014D66  6F83               	movwf	flash_partial_write@length& (0+255),b
 13857  014D68  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13858  014D6C  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13859  014D70  ECDC  F09F         	call	_flash_partial_write	;wreg free
 13860  014D74  0012               	return		;funcret
 13861  014D76                     __end_of__write_root:
 13862                           	opt stack 0
 13863                           tblptru	equ	0xFF8
 13864                           tblptrh	equ	0xFF7
 13865                           tblptrl	equ	0xFF6
 13866                           tablat	equ	0xFF5
 13867                           prodh	equ	0xFF4
 13868                           prodl	equ	0xFF3
 13869                           postinc0	equ	0xFEE
 13870                           wreg	equ	0xFE8
 13871                           postdec1	equ	0xFE5
 13872                           plusw1	equ	0xFE3
 13873                           fsr1h	equ	0xFE2
 13874                           fsr1l	equ	0xFE1
 13875                           indf2	equ	0xFDF
 13876                           postinc2	equ	0xFDE
 13877                           plusw2	equ	0xFDB
 13878                           fsr2h	equ	0xFDA
 13879                           fsr2l	equ	0xFD9
 13880                           status	equ	0xFD8
 13881                           
 13882 ;; *************** function _flash_partial_write *****************
 13883 ;; Defined at:
 13884 ;;		line 460 in file "flash.c"
 13885 ;; Parameters:    Size  Location     Type
 13886 ;;  page            2   31[BANK0 ] unsigned int 
 13887 ;;  start           2   33[BANK0 ] unsigned int 
 13888 ;;  length          2   35[BANK0 ] unsigned int 
 13889 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13890 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13891 ;;		 -> _delete_root@deleted_value(1), 
 13892 ;; Auto vars:     Size  Location     Type
 13893 ;;  match           1   39[BANK0 ] enum E7004
 13894 ;; Return value:  Size  Location     Type
 13895 ;;                  1    wreg      void 
 13896 ;; Registers used:
 13897 ;;		wreg, status,2, status,0, cstack
 13898 ;; Tracked objects:
 13899 ;;		On entry : 0/0
 13900 ;;		On exit  : 0/0
 13901 ;;		Unchanged: 0/0
 13902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13906 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13907 ;;Total ram usage:        9 bytes
 13908 ;; Hardware stack levels used:    1
 13909 ;; Hardware stack levels required when called:   14
 13910 ;; This function calls:
 13911 ;;		__flash_compare_page_to_buffer
 13912 ;;		__flash_copy_page_to_buffer
 13913 ;;		__flash_is_busy
 13914 ;;		__flash_write_page_from_buffer
 13915 ;;		__flash_write_to_buffer
 13916 ;; This function is called by:
 13917 ;;		__write_root
 13918 ;;		_fat_modify_file
 13919 ;;		__delete_root
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text44
 13924  013FB8                     __ptext44:
 13925                           	opt stack 0
 13926  013FB8                     _flash_partial_write:
 13927                           	opt stack 12
 13928                           
 13929                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13930                           
 13931                           ;incstack = 0
 13932  013FB8  EC5E  F0AB         	call	__flash_is_busy	;wreg free
 13933  013FBC  0900               	iorlw	0
 13934  013FBE  A4D8               	btfss	status,2,c
 13935  013FC0  D7FB               	goto	_flash_partial_write
 13936                           
 13937                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13938  013FC2  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13939  013FC6  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13940  013FCA  0E00               	movlw	0
 13941  013FCC  0100               	movlb	0	; () banked
 13942  013FCE  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13943  013FD0  EC96  F0A2         	call	__flash_copy_page_to_buffer	;wreg free
 13944                           
 13945                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13946  013FD4  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13947  013FD8  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13948  013FDC  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13949  013FE0  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13950  013FE4  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13951  013FE8  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13952  013FEC  0E00               	movlw	0
 13953  013FEE  0100               	movlb	0	; () banked
 13954  013FF0  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13955  013FF2  EC7D  F0A5         	call	__flash_write_to_buffer	;wreg free
 13956                           
 13957                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13958  013FF6  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13959  013FFA  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13960  013FFE  0E00               	movlw	0
 13961  014000  0100               	movlb	0	; () banked
 13962  014002  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13963  014004  ECCE  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 13964  014008  0100               	movlb	0	; () banked
 13965  01400A  6F87               	movwf	flash_partial_write@match& (0+255),b
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13969  01400C  0587               	decf	flash_partial_write@match& (0+255),w,b
 13970  01400E  A4D8               	btfss	status,2,c
 13971  014010  0012               	return	
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13975  014012  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13976  014016  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13977  01401A  0E00               	movlw	0
 13978  01401C  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13979  01401E  EC1D  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 13980  014022  0012               	return	
 13981  014024                     __end_of_flash_partial_write:
 13982                           	opt stack 0
 13983                           tblptru	equ	0xFF8
 13984                           tblptrh	equ	0xFF7
 13985                           tblptrl	equ	0xFF6
 13986                           tablat	equ	0xFF5
 13987                           prodh	equ	0xFF4
 13988                           prodl	equ	0xFF3
 13989                           postinc0	equ	0xFEE
 13990                           wreg	equ	0xFE8
 13991                           postdec1	equ	0xFE5
 13992                           plusw1	equ	0xFE3
 13993                           fsr1h	equ	0xFE2
 13994                           fsr1l	equ	0xFE1
 13995                           indf2	equ	0xFDF
 13996                           postinc2	equ	0xFDE
 13997                           plusw2	equ	0xFDB
 13998                           fsr2h	equ	0xFDA
 13999                           fsr2l	equ	0xFD9
 14000                           status	equ	0xFD8
 14001                           
 14002 ;; *************** function __flash_copy_page_to_buffer *****************
 14003 ;; Defined at:
 14004 ;;		line 154 in file "flash.c"
 14005 ;; Parameters:    Size  Location     Type
 14006 ;;  page            2   19[BANK0 ] unsigned int 
 14007 ;;  buffer          1   21[BANK0 ] enum E7000
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  command         4   25[BANK0 ] unsigned char [4]
 14010 ;; Return value:  Size  Location     Type
 14011 ;;                  1    wreg      void 
 14012 ;; Registers used:
 14013 ;;		wreg, status,2, status,0, cstack
 14014 ;; Tracked objects:
 14015 ;;		On entry : 0/0
 14016 ;;		On exit  : 0/0
 14017 ;;		Unchanged: 0/0
 14018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14019 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14020 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14021 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14022 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14023 ;;Total ram usage:       10 bytes
 14024 ;; Hardware stack levels used:    1
 14025 ;; Hardware stack levels required when called:   13
 14026 ;; This function calls:
 14027 ;;		__flash_is_busy
 14028 ;;		_spi_tx
 14029 ;; This function is called by:
 14030 ;;		_flash_partial_write
 14031 ;;		_flash_copy_page_to_buffer
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text45
 14036  01452C                     __ptext45:
 14037                           	opt stack 0
 14038  01452C                     __flash_copy_page_to_buffer:
 14039                           	opt stack 12
 14040                           
 14041                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 14042                           
 14043                           ;incstack = 0
 14044  01452C  EC5E  F0AB         	call	__flash_is_busy	;wreg free
 14045  014530  0900               	iorlw	0
 14046  014532  A4D8               	btfss	status,2,c
 14047  014534  D7FB               	goto	__flash_copy_page_to_buffer
 14048                           
 14049                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 14050  014536  0100               	movlb	0	; () banked
 14051  014538  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14052  01453A  A4D8               	btfss	status,2,c
 14053  01453C  D002               	goto	l1540
 14054                           
 14055                           ; BSR set to: 0
 14056                           ;flash.c: 163: command[0] = 0x53;
 14057  01453E  0E53               	movlw	83
 14058  014540  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14059  014542                     l1540:
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 14063                           
 14064                           ; BSR set to: 0
 14065  014542  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14066  014544  A4D8               	btfss	status,2,c
 14067  014546  D002               	goto	l1541
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;flash.c: 165: command[0] = 0x55;
 14071  014548  0E55               	movlw	85
 14072  01454A  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14073  01454C                     l1541:
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 14077                           
 14078                           ; BSR set to: 0
 14079  01454C  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 14080  014550  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 14081  014554  0E07               	movlw	7
 14082  014556  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 14083  014558                     u11585:
 14084  014558  90D8               	bcf	status,0,c
 14085  01455A  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 14086  01455C  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 14087  01455E  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 14088  014560  D7FB               	goto	u11585
 14089  014562  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 14090  014564  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 14091                           
 14092                           ; BSR set to: 0
 14093                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 14094  014566  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14095  014568  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14096  01456A  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 14097                           
 14098                           ;flash.c: 169: command[3] = 0x00;
 14099  01456C  0E00               	movlw	0
 14100  01456E  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;flash.c: 172: spi_tx(command, 4);
 14104  014570  0E79               	movlw	low __flash_copy_page_to_buffer@command
 14105  014572  6F60               	movwf	spi_tx@data& (0+255),b
 14106  014574  0E00               	movlw	high __flash_copy_page_to_buffer@command
 14107  014576  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 14108  014578  0E00               	movlw	0
 14109  01457A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 14110  01457C  0E04               	movlw	4
 14111  01457E  6F62               	movwf	spi_tx@length& (0+255),b
 14112  014580  EC4A  F0A3         	call	_spi_tx	;wreg free
 14113  014584  0012               	return		;funcret
 14114  014586                     __end_of__flash_copy_page_to_buffer:
 14115                           	opt stack 0
 14116                           tblptru	equ	0xFF8
 14117                           tblptrh	equ	0xFF7
 14118                           tblptrl	equ	0xFF6
 14119                           tablat	equ	0xFF5
 14120                           prodh	equ	0xFF4
 14121                           prodl	equ	0xFF3
 14122                           postinc0	equ	0xFEE
 14123                           wreg	equ	0xFE8
 14124                           postdec1	equ	0xFE5
 14125                           plusw1	equ	0xFE3
 14126                           fsr1h	equ	0xFE2
 14127                           fsr1l	equ	0xFE1
 14128                           indf2	equ	0xFDF
 14129                           postinc2	equ	0xFDE
 14130                           plusw2	equ	0xFDB
 14131                           fsr2h	equ	0xFDA
 14132                           fsr2l	equ	0xFD9
 14133                           status	equ	0xFD8
 14134                           
 14135 ;; *************** function __make_cluster_chain *****************
 14136 ;; Defined at:
 14137 ;;		line 213 in file "fat16.c"
 14138 ;; Parameters:    Size  Location     Type
 14139 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 14140 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 14143 ;;  offset          2   72[BANK0 ] unsigned int 
 14144 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 14145 ;;  sector          2   68[BANK0 ] unsigned int 
 14146 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 14147 ;;  different_se    2   63[BANK0 ] unsigned int 
 14148 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 14149 ;;  next_offset     2   59[BANK0 ] unsigned int 
 14150 ;;  data_changed    1   65[BANK0 ] unsigned char 
 14151 ;; Return value:  Size  Location     Type
 14152 ;;                  2   53[BANK0 ] unsigned int 
 14153 ;; Registers used:
 14154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14160 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14161 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14163 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14164 ;;Total ram usage:       23 bytes
 14165 ;; Hardware stack levels used:    1
 14166 ;; Hardware stack levels required when called:   16
 14167 ;; This function calls:
 14168 ;;		__fat_offset_from_cluster
 14169 ;;		__fat_sector_from_cluster
 14170 ;;		__get_available_cluster
 14171 ;;		__get_available_offset_from_buffer
 14172 ;;		__read_value_from_offset
 14173 ;;		__write_value_to_offset
 14174 ;;		_flash_sector_read
 14175 ;;		_flash_sector_write
 14176 ;; This function is called by:
 14177 ;;		_fat_create_file
 14178 ;;		_fat_resize_file
 14179 ;;		_fat_delete_file
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           	psect	text46
 14184  00D8D6                     __ptext46:
 14185                           	opt stack 0
 14186  00D8D6                     __make_cluster_chain:
 14187                           	opt stack 11
 14188                           
 14189                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 14190                           
 14191                           ;incstack = 0
 14192  00D8D6  0E00               	movlw	0
 14193  00D8D8  0100               	movlb	0	; () banked
 14194  00D8DA  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 14195  00D8DC  0E00               	movlw	0
 14196  00D8DE  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 14200  00D8E0  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 14201  00D8E4  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 14202                           
 14203                           ;fat16.c: 228: minimum_sector = 2;
 14204  00D8E8  0E00               	movlw	0
 14205  00D8EA  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 14206  00D8EC  0E02               	movlw	2
 14207  00D8EE  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 14208                           
 14209                           ;fat16.c: 229: data_changed = 0;
 14210  00D8F0  0E00               	movlw	0
 14211  00D8F2  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 14215  00D8F4  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14216  00D8F6  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14217  00D8F8  A4D8               	btfss	status,2,c
 14218  00D8FA  D024               	goto	l1774
 14219                           
 14220                           ; BSR set to: 0
 14221  00D8FC  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14222  00D8FE  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14223  00D900  B4D8               	btfsc	status,2,c
 14224  00D902  D020               	goto	l1774
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 14228  00D904  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14229  00D908  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14230  00D90C  0E00               	movlw	0
 14231  00D90E  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 14232  00D910  0E00               	movlw	0
 14233  00D912  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 14234  00D914  EC54  F093         	call	__get_available_cluster	;wreg free
 14235  00D918  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 14236  00D91C  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 14237                           
 14238                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 14239  00D920  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 14240  00D924  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 14241  00D928  ECE1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14242  00D92C  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14243  00D930  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14244                           
 14245                           ;fat16.c: 237: if(first_cluster == 0)
 14246  00D934  0100               	movlb	0	; () banked
 14247  00D936  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14248  00D938  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14249  00D93A  A4D8               	btfss	status,2,c
 14250  00D93C  D003               	goto	l1774
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 14254  00D93E  6995               	setf	?__make_cluster_chain& (0+255),b
 14255  00D940  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14256  00D942  0012               	return	
 14257  00D944                     l1774:
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 14261                           
 14262                           ; BSR set to: 0
 14263  00D944  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 14264  00D948  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 14265                           
 14266                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 14267  00D94C  D103               	goto	l1791
 14268  00D94E                     
 14269                           ; BSR set to: 0
 14270                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 14271                           
 14272                           ; BSR set to: 0
 14273  00D94E  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 14274  00D952  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 14275  00D956  ECE1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14276  00D95A  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 14277  00D95E  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 14278                           
 14279                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 14280  00D962  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 14281  00D966  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 14282  00D96A  ECEE  F0AB         	call	__fat_offset_from_cluster	;wreg free
 14283  00D96E  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 14284  00D972  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 14285                           
 14286                           ;fat16.c: 263: if(sector != sector_in_buffer)
 14287  00D976  0100               	movlb	0	; () banked
 14288  00D978  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14289  00D97A  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 14290  00D97C  E104               	bnz	u13160
 14291  00D97E  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14292  00D980  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 14293  00D982  B4D8               	btfsc	status,2,c
 14294  00D984  D037               	goto	l1778
 14295  00D986                     u13160:
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 14299  00D986  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14300  00D988  B4D8               	btfsc	status,2,c
 14301  00D98A  D00A               	goto	l1779
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 14305  00D98C  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14306  00D990  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14307  00D994  0E00               	movlw	low _buffer
 14308  00D996  6F81               	movwf	flash_sector_write@data& (0+255),b
 14309  00D998  0E0A               	movlw	high _buffer
 14310  00D99A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14311  00D99C  EC1E  F0A6         	call	_flash_sector_write	;wreg free
 14312  00D9A0                     l1779:
 14313                           
 14314                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 14315  00D9A0  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14316  00D9A4  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14317  00D9A8  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 14318  00D9AC  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 14319  00D9B0  EC54  F093         	call	__get_available_cluster	;wreg free
 14320  00D9B4  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 14321  00D9B8  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 14322                           
 14323                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 14324  00D9BC  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 14325  00D9C0  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 14326  00D9C4  ECE1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 14327  00D9C8  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14328  00D9CC  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14329                           
 14330                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 14331  00D9D0  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 14332  00D9D4  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 14333  00D9D8  0E00               	movlw	low _buffer
 14334  00D9DA  0100               	movlb	0	; () banked
 14335  00D9DC  6F89               	movwf	flash_sector_read@data& (0+255),b
 14336  00D9DE  0E0A               	movlw	high _buffer
 14337  00D9E0  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14338  00D9E2  EC00  F0AB         	call	_flash_sector_read	;wreg free
 14339                           
 14340                           ;fat16.c: 279: sector_in_buffer = sector;
 14341  00D9E6  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 14342  00D9EA  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 14343                           
 14344                           ;fat16.c: 280: data_changed = 0;
 14345  00D9EE  0E00               	movlw	0
 14346  00D9F0  0100               	movlb	0	; () banked
 14347  00D9F2  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14348  00D9F4                     l1778:
 14349                           
 14350                           ; BSR set to: 0
 14351                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 14352                           
 14353                           ; BSR set to: 0
 14354  00D9F4  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14355  00D9F6  E104               	bnz	u13180
 14356  00D9F8  0E02               	movlw	2
 14357  00D9FA  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14358  00D9FC  A0D8               	btfss	status,0,c
 14359  00D9FE  D05E               	goto	l1780
 14360  00DA00                     u13180:
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 14364  00DA00  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14365  00DA04  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14366  00DA08  0E00               	movlw	low _buffer
 14367  00DA0A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14368  00DA0C  0E0A               	movlw	high _buffer
 14369  00DA0E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14370  00DA10  EC06  F0A7         	call	__read_value_from_offset	;wreg free
 14371  00DA14  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14372  00DA18  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14373                           
 14374                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 14375  00DA1C  0100               	movlb	0	; () banked
 14376  00DA1E  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14377  00DA20  E104               	bnz	u13190
 14378  00DA22  0E02               	movlw	2
 14379  00DA24  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14380  00DA26  A0D8               	btfss	status,0,c
 14381  00DA28  D006               	goto	u13200
 14382  00DA2A                     u13190:
 14383                           
 14384                           ; BSR set to: 0
 14385  00DA2A  0EDA               	movlw	218
 14386  00DA2C  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14387  00DA2E  0E1F               	movlw	31
 14388  00DA30  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14389  00DA32  A0D8               	btfss	status,0,c
 14390  00DA34  D06B               	goto	l1790
 14391  00DA36                     u13200:
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 14395                           
 14396                           ; BSR set to: 0
 14397  00DA36  0E02               	movlw	2
 14398  00DA38  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 14399  00DA3A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14400  00DA3C  0E00               	movlw	0
 14401  00DA3E  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 14402  00DA40  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14403  00DA42  0E00               	movlw	low _buffer
 14404  00DA44  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14405  00DA46  0E0A               	movlw	high _buffer
 14406  00DA48  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14407  00DA4A  EC39  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14408  00DA4E  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 14409  00DA52  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 14410                           
 14411                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 14412  00DA56  0100               	movlb	0	; () banked
 14413  00DA58  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 14414  00DA5A  E103               	bnz	u13210
 14415  00DA5C  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14416  00DA5E  B4D8               	btfsc	status,2,c
 14417  00DA60  D013               	goto	l1784
 14418  00DA62                     u13210:
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 14422  00DA62  0EFE               	movlw	254
 14423  00DA64  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14424  00DA66  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 14425  00DA68  0EFF               	movlw	255
 14426  00DA6A  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14427  00DA6C  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14428                           
 14429                           ; BSR set to: 0
 14430                           ;fat16.c: 299: next_cluster <<= 8;
 14431  00DA6E  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 14432  00DA70  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14433  00DA72  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 14437  00DA74  90D8               	bcf	status,0,c
 14438  00DA76  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14439  00DA78  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 14440  00DA7A  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 14441  00DA7C  6F99               	movwf	??__make_cluster_chain& (0+255),b
 14442  00DA7E  5199               	movf	??__make_cluster_chain& (0+255),w,b
 14443  00DA80  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 14444  00DA82  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 14445  00DA84  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 14446                           
 14447                           ;fat16.c: 301: }
 14448  00DA86  D00B               	goto	l1787
 14449  00DA88                     l1784:
 14450                           
 14451                           ; BSR set to: 0
 14452                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 14453                           
 14454                           ; BSR set to: 0
 14455  00DA88  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 14456  00DA8A  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 14457  00DA8C  A4D8               	btfss	status,2,c
 14458  00DA8E  D003               	goto	l1786
 14459                           
 14460                           ; BSR set to: 0
 14461                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 14462  00DA90  6995               	setf	?__make_cluster_chain& (0+255),b
 14463  00DA92  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14464  00DA94  0012               	return	
 14465  00DA96                     l1786:
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 14469  00DA96  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 14470  00DA9A  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 14471  00DA9E                     l1787:
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 14475                           
 14476                           ; BSR set to: 0
 14477                           
 14478                           ; BSR set to: 0
 14479  00DA9E  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14480  00DAA2  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14481  00DAA6  0E00               	movlw	low _buffer
 14482  00DAA8  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14483  00DAAA  0E0A               	movlw	high _buffer
 14484  00DAAC  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14485  00DAAE  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 14486  00DAB2  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 14487  00DAB6  EC04  F0A9         	call	__write_value_to_offset	;wreg free
 14488  00DABA  D025               	goto	L90
 14489  00DABC                     l1780:
 14490                           
 14491                           ; BSR set to: 0
 14492                           ;fat16.c: 326: else if(remaining_clusters == 1)
 14493                           
 14494                           ; BSR set to: 0
 14495  00DABC  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14496  00DABE  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14497  00DAC0  A4D8               	btfss	status,2,c
 14498  00DAC2  D028               	goto	l1789
 14499                           
 14500                           ; BSR set to: 0
 14501                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 14502  00DAC4  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14503  00DAC8  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14504  00DACC  0E00               	movlw	low _buffer
 14505  00DACE  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14506  00DAD0  0E0A               	movlw	high _buffer
 14507  00DAD2  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14508  00DAD4  EC06  F0A7         	call	__read_value_from_offset	;wreg free
 14509  00DAD8  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14510  00DADC  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14511                           
 14512                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 14513  00DAE0  0100               	movlb	0	; () banked
 14514  00DAE2  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 14515  00DAE4  E103               	bnz	u13240
 14516  00DAE6  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14517  00DAE8  B4D8               	btfsc	status,2,c
 14518  00DAEA  D010               	goto	l1790
 14519  00DAEC                     u13240:
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 14523  00DAEC  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14524  00DAF0  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14525  00DAF4  0E00               	movlw	low _buffer
 14526  00DAF6  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14527  00DAF8  0E0A               	movlw	high _buffer
 14528  00DAFA  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14529  00DAFC  0EFF               	movlw	255
 14530  00DAFE  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14531  00DB00  6964               	setf	__write_value_to_offset@value& (0+255),b
 14532  00DB02  EC04  F0A9         	call	__write_value_to_offset	;wreg free
 14533  00DB06                     L90:
 14534                           
 14535                           ;fat16.c: 336: data_changed = 1;
 14536  00DB06  0E01               	movlw	1
 14537  00DB08  0100               	movlb	0	; () banked
 14538  00DB0A  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14539  00DB0C                     l1790:
 14540                           
 14541                           ; BSR set to: 0
 14542                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 14543                           
 14544                           ; BSR set to: 0
 14545  00DB0C  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 14546  00DB0E  A0D8               	btfss	status,0,c
 14547  00DB10  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 14548                           
 14549                           ;fat16.c: 341: }
 14550  00DB12  D020               	goto	l1791
 14551  00DB14                     l1789:
 14552                           
 14553                           ; BSR set to: 0
 14554                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 14555                           
 14556                           ; BSR set to: 0
 14557  00DB14  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14558  00DB18  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14559  00DB1C  0E00               	movlw	low _buffer
 14560  00DB1E  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14561  00DB20  0E0A               	movlw	high _buffer
 14562  00DB22  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14563  00DB24  EC06  F0A7         	call	__read_value_from_offset	;wreg free
 14564  00DB28  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14565  00DB2C  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14566                           
 14567                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 14568  00DB30  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14569  00DB34  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14570  00DB38  0E00               	movlw	low _buffer
 14571  00DB3A  0100               	movlb	0	; () banked
 14572  00DB3C  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14573  00DB3E  0E0A               	movlw	high _buffer
 14574  00DB40  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14575  00DB42  0E00               	movlw	0
 14576  00DB44  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14577  00DB46  0E00               	movlw	0
 14578  00DB48  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14579  00DB4A  EC04  F0A9         	call	__write_value_to_offset	;wreg free
 14580                           
 14581                           ;fat16.c: 352: data_changed = 1;
 14582  00DB4E  0E01               	movlw	1
 14583  00DB50  0100               	movlb	0	; () banked
 14584  00DB52  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14585  00DB54                     l1791:
 14586                           
 14587                           ; BSR set to: 0
 14588                           
 14589                           ; BSR set to: 0
 14590                           
 14591                           ; BSR set to: 0
 14592                           
 14593                           ; BSR set to: 0
 14594  00DB54  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14595  00DB56  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14596  00DB58  A4D8               	btfss	status,2,c
 14597  00DB5A  D6F9               	goto	l1777
 14598                           
 14599                           ; BSR set to: 0
 14600  00DB5C  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14601  00DB5E  E104               	bnz	u13260
 14602  00DB60  0E02               	movlw	2
 14603  00DB62  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14604  00DB64  A0D8               	btfss	status,0,c
 14605  00DB66  D006               	goto	u13270
 14606  00DB68                     u13260:
 14607                           
 14608                           ; BSR set to: 0
 14609  00DB68  0EDA               	movlw	218
 14610  00DB6A  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14611  00DB6C  0E1F               	movlw	31
 14612  00DB6E  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14613  00DB70  A0D8               	btfss	status,0,c
 14614  00DB72  D6ED               	goto	l1777
 14615  00DB74                     u13270:
 14616                           
 14617                           ; BSR set to: 0
 14618                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 14619                           
 14620                           ; BSR set to: 0
 14621                           
 14622                           ; BSR set to: 0
 14623  00DB74  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14624  00DB76  B4D8               	btfsc	status,2,c
 14625  00DB78  D00A               	goto	l1795
 14626                           
 14627                           ; BSR set to: 0
 14628                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 14629  00DB7A  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14630  00DB7E  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14631  00DB82  0E00               	movlw	low _buffer
 14632  00DB84  6F81               	movwf	flash_sector_write@data& (0+255),b
 14633  00DB86  0E0A               	movlw	high _buffer
 14634  00DB88  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14635  00DB8A  EC1E  F0A6         	call	_flash_sector_write	;wreg free
 14636  00DB8E                     l1795:
 14637                           
 14638                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 14639  00DB8E  0100               	movlb	0	; () banked
 14640  00DB90  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14641  00DB92  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14642  00DB94  B4D8               	btfsc	status,2,c
 14643  00DB96  D005               	goto	l1796
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 14647  00DB98  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14648  00DB9C  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14649                           
 14650                           ; BSR set to: 0
 14651                           ;fat16.c: 367: }
 14652  00DBA0  0012               	return	
 14653  00DBA2                     l1796:
 14654                           
 14655                           ; BSR set to: 0
 14656                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 14657                           
 14658                           ; BSR set to: 0
 14659  00DBA2  0E00               	movlw	0
 14660  00DBA4  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14661  00DBA6  0E00               	movlw	0
 14662  00DBA8  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14663                           
 14664                           ; BSR set to: 0
 14665  00DBAA  0012               	return	
 14666  00DBAC                     __end_of__make_cluster_chain:
 14667                           	opt stack 0
 14668                           tblptru	equ	0xFF8
 14669                           tblptrh	equ	0xFF7
 14670                           tblptrl	equ	0xFF6
 14671                           tablat	equ	0xFF5
 14672                           prodh	equ	0xFF4
 14673                           prodl	equ	0xFF3
 14674                           postinc0	equ	0xFEE
 14675                           wreg	equ	0xFE8
 14676                           postdec1	equ	0xFE5
 14677                           plusw1	equ	0xFE3
 14678                           fsr1h	equ	0xFE2
 14679                           fsr1l	equ	0xFE1
 14680                           indf2	equ	0xFDF
 14681                           postinc2	equ	0xFDE
 14682                           plusw2	equ	0xFDB
 14683                           fsr2h	equ	0xFDA
 14684                           fsr2l	equ	0xFD9
 14685                           status	equ	0xFD8
 14686                           
 14687 ;; *************** function __write_value_to_offset *****************
 14688 ;; Defined at:
 14689 ;;		line 123 in file "fat16.c"
 14690 ;; Parameters:    Size  Location     Type
 14691 ;;  offset          2    0[BANK0 ] unsigned int 
 14692 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14693 ;;		 -> buffer(512), 
 14694 ;;  value           2    4[BANK0 ] unsigned int 
 14695 ;; Auto vars:     Size  Location     Type
 14696 ;;		None
 14697 ;; Return value:  Size  Location     Type
 14698 ;;                  1    wreg      void 
 14699 ;; Registers used:
 14700 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14701 ;; Tracked objects:
 14702 ;;		On entry : 0/0
 14703 ;;		On exit  : 0/0
 14704 ;;		Unchanged: 0/0
 14705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14706 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14708 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14709 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14710 ;;Total ram usage:        8 bytes
 14711 ;; Hardware stack levels used:    1
 14712 ;; Hardware stack levels required when called:   10
 14713 ;; This function calls:
 14714 ;;		Nothing
 14715 ;; This function is called by:
 14716 ;;		__make_cluster_chain
 14717 ;; This function uses a non-reentrant model
 14718 ;;
 14719                           
 14720                           	psect	text47
 14721  015208                     __ptext47:
 14722                           	opt stack 0
 14723  015208                     __write_value_to_offset:
 14724                           	opt stack 16
 14725                           
 14726                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 14727                           
 14728                           ; BSR set to: 0
 14729                           ;incstack = 0
 14730  015208  0100               	movlb	0	; () banked
 14731  01520A  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14732  01520C  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14733  01520E  6ED9               	movwf	fsr2l,c
 14734  015210  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14735  015212  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14736  015214  6EDA               	movwf	fsr2h,c
 14737  015216  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14738                           
 14739                           ; BSR set to: 0
 14740                           ;fat16.c: 126: value >>= 8;
 14741  01521A  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14742  01521C  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14743  01521E  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14747  015220  0E01               	movlw	1
 14748  015222  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14749  015224  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14750  015226  0E00               	movlw	0
 14751  015228  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14752  01522A  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14753  01522C  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14754  01522E  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14755  015230  6ED9               	movwf	fsr2l,c
 14756  015232  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14757  015234  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14758  015236  6EDA               	movwf	fsr2h,c
 14759  015238  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14760                           
 14761                           ; BSR set to: 0
 14762  01523C  0012               	return		;funcret
 14763  01523E                     __end_of__write_value_to_offset:
 14764                           	opt stack 0
 14765                           tblptru	equ	0xFF8
 14766                           tblptrh	equ	0xFF7
 14767                           tblptrl	equ	0xFF6
 14768                           tablat	equ	0xFF5
 14769                           prodh	equ	0xFF4
 14770                           prodl	equ	0xFF3
 14771                           postinc0	equ	0xFEE
 14772                           wreg	equ	0xFE8
 14773                           postdec1	equ	0xFE5
 14774                           plusw1	equ	0xFE3
 14775                           fsr1h	equ	0xFE2
 14776                           fsr1l	equ	0xFE1
 14777                           indf2	equ	0xFDF
 14778                           postinc2	equ	0xFDE
 14779                           plusw2	equ	0xFDB
 14780                           fsr2h	equ	0xFDA
 14781                           fsr2l	equ	0xFD9
 14782                           status	equ	0xFD8
 14783                           
 14784 ;; *************** function __get_available_cluster *****************
 14785 ;; Defined at:
 14786 ;;		line 130 in file "fat16.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14789 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;  sector          2   51[BANK0 ] unsigned int 
 14792 ;;  offset          2   49[BANK0 ] unsigned int 
 14793 ;;  cluster         2   47[BANK0 ] unsigned int 
 14794 ;; Return value:  Size  Location     Type
 14795 ;;                  2   43[BANK0 ] unsigned int 
 14796 ;; Registers used:
 14797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14798 ;; Tracked objects:
 14799 ;;		On entry : 0/0
 14800 ;;		On exit  : 0/0
 14801 ;;		Unchanged: 0/0
 14802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14804 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14806 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14807 ;;Total ram usage:       10 bytes
 14808 ;; Hardware stack levels used:    1
 14809 ;; Hardware stack levels required when called:   15
 14810 ;; This function calls:
 14811 ;;		__cluster_from_sector_and_offset
 14812 ;;		__get_available_offset_from_buffer
 14813 ;;		_flash_sector_read
 14814 ;; This function is called by:
 14815 ;;		__make_cluster_chain
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text48
 14820  0126A8                     __ptext48:
 14821                           	opt stack 0
 14822  0126A8                     __get_available_cluster:
 14823                           	opt stack 11
 14824                           
 14825                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;incstack = 0
 14829  0126A8  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14830  0126AC  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14831  0126B0  0100               	movlb	0	; () banked
 14832  0126B2  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14833  0126B4  E15B               	bnz	l13782
 14834  0126B6  0E22               	movlw	34
 14835  0126B8  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14836  0126BA  B0D8               	btfsc	status,0,c
 14837  0126BC  D057               	goto	u12610
 14838                           
 14839                           ; BSR set to: 0
 14840                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 14841                           
 14842                           ; BSR set to: 0
 14843                           
 14844                           ; BSR set to: 0
 14845  0126BE  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14846  0126C0  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14847  0126C2  E104               	bnz	l13758
 14848  0126C4  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14849  0126C6  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14850  0126C8  B4D8               	btfsc	status,2,c
 14851  0126CA  D04D               	goto	l1762
 14852  0126CC                     l13758:
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 14856  0126CC  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14857  0126D0  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14858  0126D4  0E00               	movlw	low _buffer
 14859  0126D6  6F89               	movwf	flash_sector_read@data& (0+255),b
 14860  0126D8  0E0A               	movlw	high _buffer
 14861  0126DA  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14862  0126DC  EC00  F0AB         	call	_flash_sector_read	;wreg free
 14863                           
 14864                           ;fat16.c: 149: if(sector == 2)
 14865  0126E0  0E02               	movlw	2
 14866  0126E2  0100               	movlb	0	; () banked
 14867  0126E4  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14868  0126E6  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14869  0126E8  A4D8               	btfss	status,2,c
 14870  0126EA  D00B               	goto	l1757
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 14874  0126EC  0E00               	movlw	0
 14875  0126EE  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14876  0126F0  0E04               	movlw	4
 14877  0126F2  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14878  0126F4  0E00               	movlw	low _buffer
 14879  0126F6  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14880  0126F8  0E0A               	movlw	high _buffer
 14881  0126FA  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14882  0126FC  EC39  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14883  012700  D00B               	goto	L1
 14884  012702                     l1757:
 14885                           
 14886                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14887  012702  0E00               	movlw	0
 14888  012704  0100               	movlb	0	; () banked
 14889  012706  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14890  012708  0E00               	movlw	0
 14891  01270A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14892  01270C  0E00               	movlw	low _buffer
 14893  01270E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14894  012710  0E0A               	movlw	high _buffer
 14895  012712  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14896  012714  EC39  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14897  012718                     L1:
 14898  012718  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14899  01271C  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14900                           
 14901                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 14902  012720  0100               	movlb	0	; () banked
 14903  012722  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14904  012724  E103               	bnz	u12590
 14905  012726  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14906  012728  B4D8               	btfsc	status,2,c
 14907  01272A  D01D               	goto	l1762
 14908  01272C                     u12590:
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14912  01272C  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14913  012730  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14914  012734  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14915  012738  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14916  01273C  ECD8  F0AA         	call	__cluster_from_sector_and_offset	;wreg free
 14917  012740  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14918  012744  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14919                           
 14920                           ;fat16.c: 165: if(cluster > 8191)
 14921  012748  0E20               	movlw	32
 14922  01274A  0100               	movlb	0	; () banked
 14923  01274C  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14924  01274E  A0D8               	btfss	status,0,c
 14925  012750  D005               	goto	l1760
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 14929  012752  0E00               	movlw	0
 14930  012754  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14931  012756  0E00               	movlw	0
 14932  012758  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14933                           
 14934                           ; BSR set to: 0
 14935  01275A  0012               	return	
 14936  01275C                     l1760:
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 14940  01275C  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14941  012760  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14942  012764  0012               	return	
 14943  012766                     l1762:
 14944                           
 14945                           ; BSR set to: 0
 14946                           
 14947                           ; BSR set to: 0
 14948                           
 14949                           ; BSR set to: 0
 14950                           
 14951                           ; BSR set to: 0
 14952  012766  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14953  012768  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14954  01276A  D7A3               	goto	L2
 14955  01276C                     u12610:
 14956  01276C                     l13782:
 14957                           
 14958                           ; BSR set to: 0
 14959                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 14960  01276C  0E00               	movlw	0
 14961  01276E  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14962  012770  0E00               	movlw	0
 14963  012772  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14964  012774  0012               	return	
 14965  012776                     __end_of__get_available_cluster:
 14966                           	opt stack 0
 14967                           tblptru	equ	0xFF8
 14968                           tblptrh	equ	0xFF7
 14969                           tblptrl	equ	0xFF6
 14970                           tablat	equ	0xFF5
 14971                           prodh	equ	0xFF4
 14972                           prodl	equ	0xFF3
 14973                           postinc0	equ	0xFEE
 14974                           wreg	equ	0xFE8
 14975                           postdec1	equ	0xFE5
 14976                           plusw1	equ	0xFE3
 14977                           fsr1h	equ	0xFE2
 14978                           fsr1l	equ	0xFE1
 14979                           indf2	equ	0xFDF
 14980                           postinc2	equ	0xFDE
 14981                           plusw2	equ	0xFDB
 14982                           fsr2h	equ	0xFDA
 14983                           fsr2l	equ	0xFD9
 14984                           status	equ	0xFD8
 14985                           
 14986 ;; *************** function __get_available_offset_from_buffer *****************
 14987 ;; Defined at:
 14988 ;;		line 98 in file "fat16.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14991 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14992 ;;		 -> buffer(512), 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;  offset          2    6[BANK0 ] unsigned int 
 14995 ;; Return value:  Size  Location     Type
 14996 ;;                  2    0[BANK0 ] unsigned int 
 14997 ;; Registers used:
 14998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15004 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15006 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15007 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15008 ;;Total ram usage:        8 bytes
 15009 ;; Hardware stack levels used:    1
 15010 ;; Hardware stack levels required when called:   10
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		__get_available_cluster
 15015 ;;		__make_cluster_chain
 15016 ;; This function uses a non-reentrant model
 15017 ;;
 15018                           
 15019                           	psect	text49
 15020  014472                     __ptext49:
 15021                           	opt stack 0
 15022  014472                     __get_available_offset_from_buffer:
 15023                           	opt stack 16
 15024                           
 15025                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 15026                           
 15027                           ; BSR set to: 0
 15028                           ;incstack = 0
 15029  014472  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 15030  014476  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 15031  01447A  0E02               	movlw	2
 15032  01447C  0100               	movlb	0	; () banked
 15033  01447E  D022               	goto	L3
 15034  014480                     
 15035                           ; BSR set to: 0
 15036                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 15037                           
 15038                           ; BSR set to: 0
 15039  014480  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15040  014482  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15041  014484  6ED9               	movwf	fsr2l,c
 15042  014486  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15043  014488  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15044  01448A  6EDA               	movwf	fsr2h,c
 15045  01448C  50DF               	movf	indf2,w,c
 15046  01448E  A4D8               	btfss	status,2,c
 15047  014490  D014               	goto	l1743
 15048                           
 15049                           ; BSR set to: 0
 15050  014492  0E01               	movlw	1
 15051  014494  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15052  014496  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 15053  014498  0E00               	movlw	0
 15054  01449A  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15055  01449C  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 15056  01449E  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 15057  0144A0  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15058  0144A2  6ED9               	movwf	fsr2l,c
 15059  0144A4  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 15060  0144A6  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15061  0144A8  6EDA               	movwf	fsr2h,c
 15062  0144AA  50DF               	movf	indf2,w,c
 15063  0144AC  A4D8               	btfss	status,2,c
 15064  0144AE  D005               	goto	l1743
 15065                           
 15066                           ; BSR set to: 0
 15067                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 15068  0144B0  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 15069  0144B4  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 15070  0144B8  0012               	return	
 15071  0144BA                     l1743:
 15072                           
 15073                           ; BSR set to: 0
 15074                           
 15075                           ; BSR set to: 0
 15076  0144BA  0E02               	movlw	2
 15077  0144BC  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 15078  0144BE  0E00               	movlw	0
 15079  0144C0  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 15080  0144C2  0E02               	movlw	2
 15081  0144C4                     L3:
 15082  0144C4  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15083  0144C6  A0D8               	btfss	status,0,c
 15084  0144C8  D7DB               	goto	l1741
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 15088  0144CA  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 15089  0144CC  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 15090                           
 15091                           ; BSR set to: 0
 15092  0144CE  0012               	return		;funcret
 15093  0144D0                     __end_of__get_available_offset_from_buffer:
 15094                           	opt stack 0
 15095                           tblptru	equ	0xFF8
 15096                           tblptrh	equ	0xFF7
 15097                           tblptrl	equ	0xFF6
 15098                           tablat	equ	0xFF5
 15099                           prodh	equ	0xFF4
 15100                           prodl	equ	0xFF3
 15101                           postinc0	equ	0xFEE
 15102                           wreg	equ	0xFE8
 15103                           postdec1	equ	0xFE5
 15104                           plusw1	equ	0xFE3
 15105                           fsr1h	equ	0xFE2
 15106                           fsr1l	equ	0xFE1
 15107                           indf2	equ	0xFDF
 15108                           postinc2	equ	0xFDE
 15109                           plusw2	equ	0xFDB
 15110                           fsr2h	equ	0xFDA
 15111                           fsr2l	equ	0xFD9
 15112                           status	equ	0xFD8
 15113                           
 15114 ;; *************** function __cluster_from_sector_and_offset *****************
 15115 ;; Defined at:
 15116 ;;		line 89 in file "fat16.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;  sector          2    0[BANK0 ] unsigned int 
 15119 ;;  offset          2    2[BANK0 ] unsigned int 
 15120 ;; Auto vars:     Size  Location     Type
 15121 ;;		None
 15122 ;; Return value:  Size  Location     Type
 15123 ;;                  2    0[BANK0 ] unsigned int 
 15124 ;; Registers used:
 15125 ;;		wreg, status,2, status,0
 15126 ;; Tracked objects:
 15127 ;;		On entry : 0/0
 15128 ;;		On exit  : 0/0
 15129 ;;		Unchanged: 0/0
 15130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15134 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15135 ;;Total ram usage:        4 bytes
 15136 ;; Hardware stack levels used:    1
 15137 ;; Hardware stack levels required when called:   10
 15138 ;; This function calls:
 15139 ;;		Nothing
 15140 ;; This function is called by:
 15141 ;;		__get_available_cluster
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text50
 15146  0155B0                     __ptext50:
 15147                           	opt stack 0
 15148  0155B0                     __cluster_from_sector_and_offset:
 15149                           	opt stack 15
 15150                           
 15151                           ;fat16.c: 91: offset >>= 1;
 15152                           
 15153                           ; BSR set to: 0
 15154                           ;incstack = 0
 15155  0155B0  0100               	movlb	0	; () banked
 15156  0155B2  90D8               	bcf	status,0,c
 15157  0155B4  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 15158  0155B6  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 15159                           
 15160                           ; BSR set to: 0
 15161                           ;fat16.c: 92: sector -= 2;
 15162  0155B8  0E02               	movlw	2
 15163  0155BA  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15164  0155BC  0E00               	movlw	0
 15165  0155BE  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15166                           
 15167                           ; BSR set to: 0
 15168                           ;fat16.c: 93: sector <<= 8;
 15169  0155C0  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 15170  0155C2  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 15171  0155C4  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 15172                           
 15173                           ; BSR set to: 0
 15174                           ;fat16.c: 94: sector |= offset;
 15175  0155C6  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 15176  0155C8  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15177  0155CA  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 15178  0155CC  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;fat16.c: 95: return sector;
 15182  0155CE  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 15183  0155D2  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 15184  0155D6  0012               	return	
 15185  0155D8                     __end_of__cluster_from_sector_and_offset:
 15186                           	opt stack 0
 15187                           tblptru	equ	0xFF8
 15188                           tblptrh	equ	0xFF7
 15189                           tblptrl	equ	0xFF6
 15190                           tablat	equ	0xFF5
 15191                           prodh	equ	0xFF4
 15192                           prodl	equ	0xFF3
 15193                           postinc0	equ	0xFEE
 15194                           wreg	equ	0xFE8
 15195                           postdec1	equ	0xFE5
 15196                           plusw1	equ	0xFE3
 15197                           fsr1h	equ	0xFE2
 15198                           fsr1l	equ	0xFE1
 15199                           indf2	equ	0xFDF
 15200                           postinc2	equ	0xFDE
 15201                           plusw2	equ	0xFDB
 15202                           fsr2h	equ	0xFDA
 15203                           fsr2l	equ	0xFD9
 15204                           status	equ	0xFD8
 15205                           
 15206 ;; *************** function __get_time *****************
 15207 ;; Defined at:
 15208 ;;		line 376 in file "fat16.c"
 15209 ;; Parameters:    Size  Location     Type
 15210 ;;		None
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;		None
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  2    0[BANK0 ] unsigned int 
 15215 ;; Registers used:
 15216 ;;		wreg, status,2
 15217 ;; Tracked objects:
 15218 ;;		On entry : 0/0
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15222 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15225 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15226 ;;Total ram usage:        2 bytes
 15227 ;; Hardware stack levels used:    1
 15228 ;; Hardware stack levels required when called:   10
 15229 ;; This function calls:
 15230 ;;		Nothing
 15231 ;; This function is called by:
 15232 ;;		_fat_create_file
 15233 ;; This function uses a non-reentrant model
 15234 ;;
 15235                           
 15236                           	psect	text51
 15237  0158D6                     __ptext51:
 15238                           	opt stack 0
 15239  0158D6                     __get_time:
 15240                           	opt stack 17
 15241                           
 15242                           ;fat16.c: 388: return 0x0000;
 15243                           
 15244                           ; BSR set to: 0
 15245                           ;incstack = 0
 15246  0158D6  0E00               	movlw	0
 15247  0158D8  0100               	movlb	0	; () banked
 15248  0158DA  6F61               	movwf	(?__get_time+1)& (0+255),b
 15249  0158DC  0E00               	movlw	0
 15250  0158DE  6F60               	movwf	?__get_time& (0+255),b
 15251  0158E0  0012               	return	
 15252  0158E2                     __end_of__get_time:
 15253                           	opt stack 0
 15254                           tblptru	equ	0xFF8
 15255                           tblptrh	equ	0xFF7
 15256                           tblptrl	equ	0xFF6
 15257                           tablat	equ	0xFF5
 15258                           prodh	equ	0xFF4
 15259                           prodl	equ	0xFF3
 15260                           postinc0	equ	0xFEE
 15261                           wreg	equ	0xFE8
 15262                           postdec1	equ	0xFE5
 15263                           plusw1	equ	0xFE3
 15264                           fsr1h	equ	0xFE2
 15265                           fsr1l	equ	0xFE1
 15266                           indf2	equ	0xFDF
 15267                           postinc2	equ	0xFDE
 15268                           plusw2	equ	0xFDB
 15269                           fsr2h	equ	0xFDA
 15270                           fsr2l	equ	0xFD9
 15271                           status	equ	0xFD8
 15272                           
 15273 ;; *************** function __get_date *****************
 15274 ;; Defined at:
 15275 ;;		line 392 in file "fat16.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;		None
 15278 ;; Auto vars:     Size  Location     Type
 15279 ;;		None
 15280 ;; Return value:  Size  Location     Type
 15281 ;;                  2    0[BANK0 ] unsigned int 
 15282 ;; Registers used:
 15283 ;;		wreg, status,2
 15284 ;; Tracked objects:
 15285 ;;		On entry : 0/0
 15286 ;;		On exit  : 0/0
 15287 ;;		Unchanged: 0/0
 15288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15289 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15292 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15293 ;;Total ram usage:        2 bytes
 15294 ;; Hardware stack levels used:    1
 15295 ;; Hardware stack levels required when called:   10
 15296 ;; This function calls:
 15297 ;;		Nothing
 15298 ;; This function is called by:
 15299 ;;		_fat_create_file
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text52
 15304  0158E2                     __ptext52:
 15305                           	opt stack 0
 15306  0158E2                     __get_date:
 15307                           	opt stack 17
 15308                           
 15309                           ;fat16.c: 404: return 0x0000;
 15310                           
 15311                           ; BSR set to: 0
 15312                           ;incstack = 0
 15313  0158E2  0E00               	movlw	0
 15314  0158E4  0100               	movlb	0	; () banked
 15315  0158E6  6F61               	movwf	(?__get_date+1)& (0+255),b
 15316  0158E8  0E00               	movlw	0
 15317  0158EA  6F60               	movwf	?__get_date& (0+255),b
 15318  0158EC  0012               	return	
 15319  0158EE                     __end_of__get_date:
 15320                           	opt stack 0
 15321                           tblptru	equ	0xFF8
 15322                           tblptrh	equ	0xFF7
 15323                           tblptrl	equ	0xFF6
 15324                           tablat	equ	0xFF5
 15325                           prodh	equ	0xFF4
 15326                           prodl	equ	0xFF3
 15327                           postinc0	equ	0xFEE
 15328                           wreg	equ	0xFE8
 15329                           postdec1	equ	0xFE5
 15330                           plusw1	equ	0xFE3
 15331                           fsr1h	equ	0xFE2
 15332                           fsr1l	equ	0xFE1
 15333                           indf2	equ	0xFDF
 15334                           postinc2	equ	0xFDE
 15335                           plusw2	equ	0xFDB
 15336                           fsr2h	equ	0xFDA
 15337                           fsr2l	equ	0xFD9
 15338                           status	equ	0xFD8
 15339                           
 15340 ;; *************** function __get_available_root_entry *****************
 15341 ;; Defined at:
 15342 ;;		line 442 in file "fat16.c"
 15343 ;; Parameters:    Size  Location     Type
 15344 ;;		None
 15345 ;; Auto vars:     Size  Location     Type
 15346 ;;  file_number     1   53[BANK0 ] unsigned char 
 15347 ;; Return value:  Size  Location     Type
 15348 ;;                  1    wreg      unsigned char 
 15349 ;; Registers used:
 15350 ;;		wreg, status,2, status,0, cstack
 15351 ;; Tracked objects:
 15352 ;;		On entry : 0/0
 15353 ;;		On exit  : 0/0
 15354 ;;		Unchanged: 0/0
 15355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15359 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15360 ;;Total ram usage:        1 bytes
 15361 ;; Hardware stack levels used:    1
 15362 ;; Hardware stack levels required when called:   16
 15363 ;; This function calls:
 15364 ;;		__root_is_available
 15365 ;; This function is called by:
 15366 ;;		_fat_create_file
 15367 ;; This function uses a non-reentrant model
 15368 ;;
 15369                           
 15370                           	psect	text53
 15371  015534                     __ptext53:
 15372                           	opt stack 0
 15373  015534                     __get_available_root_entry:
 15374                           	opt stack 11
 15375                           
 15376                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 15377                           
 15378                           ; BSR set to: 0
 15379                           ;incstack = 0
 15380  015534  0E00               	movlw	0
 15381  015536  0100               	movlb	0	; () banked
 15382  015538  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 15383  01553A                     l14354:
 15384                           
 15385                           ; BSR set to: 0
 15386  01553A  0E3F               	movlw	63
 15387  01553C  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 15388  01553E  D001               	goto	l1814
 15389  015540  D00C               	goto	u13320
 15390  015542                     l1814:
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 15394                           
 15395                           ; BSR set to: 0
 15396  015542  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15397  015544  EC12  F0A0         	call	__root_is_available
 15398  015548  0900               	iorlw	0
 15399  01554A  B4D8               	btfsc	status,2,c
 15400  01554C  D003               	goto	l1816
 15401                           
 15402                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 15403  01554E  0100               	movlb	0	; () banked
 15404  015550  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15405                           
 15406                           ; BSR set to: 0
 15407  015552  0012               	return	
 15408  015554                     l1816:
 15409                           
 15410                           ; BSR set to: 0
 15411  015554  0100               	movlb	0	; () banked
 15412  015556  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 15413  015558  D7F0               	goto	l14354
 15414  01555A                     u13320:
 15415                           
 15416                           ; BSR set to: 0
 15417                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 15418                           
 15419                           ; BSR set to: 0
 15420  01555A  0EFF               	movlw	255
 15421  01555C  0012               	return	
 15422  01555E                     __end_of__get_available_root_entry:
 15423                           	opt stack 0
 15424                           tblptru	equ	0xFF8
 15425                           tblptrh	equ	0xFF7
 15426                           tblptrl	equ	0xFF6
 15427                           tablat	equ	0xFF5
 15428                           prodh	equ	0xFF4
 15429                           prodl	equ	0xFF3
 15430                           postinc0	equ	0xFEE
 15431                           wreg	equ	0xFE8
 15432                           postdec1	equ	0xFE5
 15433                           plusw1	equ	0xFE3
 15434                           fsr1h	equ	0xFE2
 15435                           fsr1l	equ	0xFE1
 15436                           indf2	equ	0xFDF
 15437                           postinc2	equ	0xFDE
 15438                           plusw2	equ	0xFDB
 15439                           fsr2h	equ	0xFDA
 15440                           fsr2l	equ	0xFD9
 15441                           status	equ	0xFD8
 15442                           
 15443 ;; *************** function __add_item *****************
 15444 ;; Defined at:
 15445 ;;		line 39 in file "config_file.c"
 15446 ;; Parameters:    Size  Location     Type
 15447 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 15448 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 15449 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 15450 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 15451 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 15452 ;;  value           4   38[BANK0 ] long 
 15453 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 15454 ;;		 -> ConfigFile_buffer(512), 
 15455 ;; Auto vars:     Size  Location     Type
 15456 ;;  length          1   46[BANK0 ] unsigned char 
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      unsigned char 
 15459 ;; Registers used:
 15460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15466 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15467 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15468 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15469 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15470 ;;Total ram usage:       11 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:   13
 15473 ;; This function calls:
 15474 ;;		_ltoa
 15475 ;; This function is called by:
 15476 ;;		_configFile_write
 15477 ;; This function uses a non-reentrant model
 15478 ;;
 15479                           
 15480                           	psect	text54
 15481  011C5E                     __ptext54:
 15482                           	opt stack 0
 15483  011C5E                     __add_item:
 15484                           	opt stack 15
 15485                           
 15486                           ;config_file.c: 41: uint8_t length = 0;
 15487                           
 15488                           ; BSR set to: 0
 15489                           ;incstack = 0
 15490  011C5E  0E00               	movlw	0
 15491  011C60  0100               	movlb	0	; () banked
 15492  011C62  6F8E               	movwf	__add_item@length& (0+255),b
 15493                           
 15494                           ;config_file.c: 44: while(item_string[length])
 15495  011C64  D01C               	goto	l2912
 15496  011C66                     
 15497                           ; BSR set to: 0
 15498                           ;config_file.c: 45: {;config_file.c: 46: buffer[length] = item_string[length];
 15499                           
 15500                           ; BSR set to: 0
 15501  011C66  518E               	movf	__add_item@length& (0+255),w,b
 15502  011C68  0D01               	mullw	1
 15503  011C6A  C084  F08C         	movff	__add_item@item_string,??__add_item
 15504  011C6E  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15505  011C72  50F3               	movf	prodl,w,c
 15506  011C74  278C               	addwf	??__add_item& (0+255),f,b
 15507  011C76  50F4               	movf	prodh,w,c
 15508  011C78  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15509  011C7A  C08C  FFF6         	movff	??__add_item,tblptrl
 15510  011C7E  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15511  011C82                     	if	0	;tblptru may be non-zero
 15512  011C82                     	endif
 15513  011C82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15514  011C82  0E00               	movlw	low (__mediumconst shr (0+16))
 15515  011C84  6EF8               	movwf	tblptru,c
 15516  011C86                     	endif
 15517  011C86  518E               	movf	__add_item@length& (0+255),w,b
 15518  011C88  0D01               	mullw	1
 15519  011C8A  50F3               	movf	prodl,w,c
 15520  011C8C  258A               	addwf	__add_item@buffer& (0+255),w,b
 15521  011C8E  6ED9               	movwf	fsr2l,c
 15522  011C90  50F4               	movf	prodh,w,c
 15523  011C92  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15524  011C94  6EDA               	movwf	fsr2h,c
 15525  011C96  0008               	tblrd		*
 15526  011C98  CFF5 FFDF          	movff	tablat,indf2
 15527                           
 15528                           ; BSR set to: 0
 15529                           ;config_file.c: 47: ++length;
 15530  011C9C  2B8E               	incf	__add_item@length& (0+255),f,b
 15531  011C9E                     l2912:
 15532                           
 15533                           ; BSR set to: 0
 15534                           
 15535                           ; BSR set to: 0
 15536  011C9E  518E               	movf	__add_item@length& (0+255),w,b
 15537  011CA0  0D01               	mullw	1
 15538  011CA2  C084  F08C         	movff	__add_item@item_string,??__add_item
 15539  011CA6  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15540  011CAA  50F3               	movf	prodl,w,c
 15541  011CAC  278C               	addwf	??__add_item& (0+255),f,b
 15542  011CAE  50F4               	movf	prodh,w,c
 15543  011CB0  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15544  011CB2  C08C  FFF6         	movff	??__add_item,tblptrl
 15545  011CB6  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15546  011CBA                     	if	0	;tblptru may be non-zero
 15547  011CBA                     	endif
 15548  011CBA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15549  011CBA  0E00               	movlw	low (__mediumconst shr (0+16))
 15550  011CBC  6EF8               	movwf	tblptru,c
 15551  011CBE                     	endif
 15552  011CBE  0008               	tblrd		*
 15553  011CC0  50F5               	movf	tablat,w,c
 15554  011CC2  0900               	iorlw	0
 15555  011CC4  A4D8               	btfss	status,2,c
 15556  011CC6  D7CF               	goto	l2913
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;config_file.c: 48: };config_file.c: 51: buffer[length++] = '=';
 15560                           
 15561                           ; BSR set to: 0
 15562  011CC8  518E               	movf	__add_item@length& (0+255),w,b
 15563  011CCA  0D01               	mullw	1
 15564  011CCC  50F3               	movf	prodl,w,c
 15565  011CCE  258A               	addwf	__add_item@buffer& (0+255),w,b
 15566  011CD0  6ED9               	movwf	fsr2l,c
 15567  011CD2  50F4               	movf	prodh,w,c
 15568  011CD4  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15569  011CD6  6EDA               	movwf	fsr2h,c
 15570  011CD8  0E3D               	movlw	61
 15571  011CDA  6EDF               	movwf	indf2,c
 15572                           
 15573                           ; BSR set to: 0
 15574  011CDC  2B8E               	incf	__add_item@length& (0+255),f,b
 15575                           
 15576                           ; BSR set to: 0
 15577                           ;config_file.c: 54: ltoa(&buffer[length], value, 10);
 15578  011CDE  518E               	movf	__add_item@length& (0+255),w,b
 15579  011CE0  0D01               	mullw	1
 15580  011CE2  50F3               	movf	prodl,w,c
 15581  011CE4  258A               	addwf	__add_item@buffer& (0+255),w,b
 15582  011CE6  6F7A               	movwf	ltoa@buf& (0+255),b
 15583  011CE8  50F4               	movf	prodh,w,c
 15584  011CEA  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15585  011CEC  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 15586  011CEE  C086  F07C         	movff	__add_item@value,ltoa@val
 15587  011CF2  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 15588  011CF6  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 15589  011CFA  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 15590  011CFE  0E00               	movlw	0
 15591  011D00  6F81               	movwf	(ltoa@base+1)& (0+255),b
 15592  011D02  0E0A               	movlw	10
 15593  011D04  6F80               	movwf	ltoa@base& (0+255),b
 15594  011D06  ECFF  F0A4         	call	_ltoa	;wreg free
 15595                           
 15596                           ;config_file.c: 55: while(buffer[length])
 15597  011D0A  D002               	goto	l2915
 15598  011D0C                     
 15599                           ;config_file.c: 56: {;config_file.c: 57: ++length;
 15600  011D0C  0100               	movlb	0	; () banked
 15601  011D0E  2B8E               	incf	__add_item@length& (0+255),f,b
 15602  011D10                     l2915:
 15603                           
 15604                           ; BSR set to: 0
 15605  011D10  0100               	movlb	0	; () banked
 15606  011D12  518E               	movf	__add_item@length& (0+255),w,b
 15607  011D14  0D01               	mullw	1
 15608  011D16  50F3               	movf	prodl,w,c
 15609  011D18  258A               	addwf	__add_item@buffer& (0+255),w,b
 15610  011D1A  6ED9               	movwf	fsr2l,c
 15611  011D1C  50F4               	movf	prodh,w,c
 15612  011D1E  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15613  011D20  6EDA               	movwf	fsr2h,c
 15614  011D22  50DF               	movf	indf2,w,c
 15615  011D24  A4D8               	btfss	status,2,c
 15616  011D26  D7F2               	goto	l2916
 15617                           
 15618                           ; BSR set to: 0
 15619                           ;config_file.c: 58: };config_file.c: 61: buffer[length++] = '\n';
 15620                           
 15621                           ; BSR set to: 0
 15622  011D28  518E               	movf	__add_item@length& (0+255),w,b
 15623  011D2A  0D01               	mullw	1
 15624  011D2C  50F3               	movf	prodl,w,c
 15625  011D2E  258A               	addwf	__add_item@buffer& (0+255),w,b
 15626  011D30  6ED9               	movwf	fsr2l,c
 15627  011D32  50F4               	movf	prodh,w,c
 15628  011D34  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15629  011D36  6EDA               	movwf	fsr2h,c
 15630  011D38  0E0A               	movlw	10
 15631  011D3A  6EDF               	movwf	indf2,c
 15632                           
 15633                           ; BSR set to: 0
 15634  011D3C  2B8E               	incf	__add_item@length& (0+255),f,b
 15635                           
 15636                           ; BSR set to: 0
 15637                           ;config_file.c: 64: return length;
 15638  011D3E  518E               	movf	__add_item@length& (0+255),w,b
 15639  011D40  0012               	return	
 15640  011D42                     __end_of__add_item:
 15641                           	opt stack 0
 15642                           tblptru	equ	0xFF8
 15643                           tblptrh	equ	0xFF7
 15644                           tblptrl	equ	0xFF6
 15645                           tablat	equ	0xFF5
 15646                           prodh	equ	0xFF4
 15647                           prodl	equ	0xFF3
 15648                           postinc0	equ	0xFEE
 15649                           wreg	equ	0xFE8
 15650                           postdec1	equ	0xFE5
 15651                           plusw1	equ	0xFE3
 15652                           fsr1h	equ	0xFE2
 15653                           fsr1l	equ	0xFE1
 15654                           indf2	equ	0xFDF
 15655                           postinc2	equ	0xFDE
 15656                           plusw2	equ	0xFDB
 15657                           fsr2h	equ	0xFDA
 15658                           fsr2l	equ	0xFD9
 15659                           status	equ	0xFD8
 15660                           
 15661 ;; *************** function _ltoa *****************
 15662 ;; Defined at:
 15663 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15666 ;;		 -> ConfigFile_buffer(512), 
 15667 ;;  val             4   28[BANK0 ] long 
 15668 ;;  base            2   32[BANK0 ] int 
 15669 ;; Auto vars:     Size  Location     Type
 15670 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15671 ;;		 -> ConfigFile_buffer(512), 
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  2   26[BANK0 ] PTR unsigned char 
 15674 ;; Registers used:
 15675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15676 ;; Tracked objects:
 15677 ;;		On entry : 0/0
 15678 ;;		On exit  : 0/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15681 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15684 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15685 ;;Total ram usage:       10 bytes
 15686 ;; Hardware stack levels used:    1
 15687 ;; Hardware stack levels required when called:   12
 15688 ;; This function calls:
 15689 ;;		_ultoa
 15690 ;; This function is called by:
 15691 ;;		__add_item
 15692 ;; This function uses a non-reentrant model
 15693 ;;
 15694                           
 15695                           	psect	text55
 15696  0149FE                     __ptext55:
 15697                           	opt stack 0
 15698  0149FE                     _ltoa:
 15699                           	opt stack 15
 15700                           
 15701                           ; BSR set to: 0
 15702                           ;incstack = 0
 15703  0149FE  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15704  014A02  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15705  014A06  0100               	movlb	0	; () banked
 15706  014A08  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15707  014A0A  D010               	goto	l3684
 15708                           
 15709                           ; BSR set to: 0
 15710  014A0C  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15711  014A10  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15712  014A14  0E2D               	movlw	45
 15713  014A16  6EDF               	movwf	indf2,c
 15714                           
 15715                           ; BSR set to: 0
 15716  014A18  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15717  014A1A  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15718                           
 15719                           ; BSR set to: 0
 15720  014A1C  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15721  014A1E  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15722  014A20  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15723  014A22  6D7C               	negf	ltoa@val& (0+255),b
 15724  014A24  0E00               	movlw	0
 15725  014A26  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15726  014A28  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15727  014A2A  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15728  014A2C                     l3684:
 15729                           
 15730                           ; BSR set to: 0
 15731                           
 15732                           ; BSR set to: 0
 15733  014A2C  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15734  014A30  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15735  014A34  C07C  F06F         	movff	ltoa@val,ultoa@val
 15736  014A38  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15737  014A3C  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15738  014A40  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15739  014A44  C080  F073         	movff	ltoa@base,ultoa@base
 15740  014A48  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15741  014A4C  ECF0  F089         	call	_ultoa	;wreg free
 15742  014A50  0012               	return	
 15743  014A52                     __end_of_ltoa:
 15744                           	opt stack 0
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           postinc0	equ	0xFEE
 15752                           wreg	equ	0xFE8
 15753                           postdec1	equ	0xFE5
 15754                           plusw1	equ	0xFE3
 15755                           fsr1h	equ	0xFE2
 15756                           fsr1l	equ	0xFE1
 15757                           indf2	equ	0xFDF
 15758                           postinc2	equ	0xFDE
 15759                           plusw2	equ	0xFDB
 15760                           fsr2h	equ	0xFDA
 15761                           fsr2l	equ	0xFD9
 15762                           status	equ	0xFD8
 15763                           
 15764 ;; *************** function _ultoa *****************
 15765 ;; Defined at:
 15766 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15767 ;; Parameters:    Size  Location     Type
 15768 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15769 ;;		 -> ConfigFile_buffer(512), 
 15770 ;;  val             4   15[BANK0 ] unsigned long 
 15771 ;;  base            2   19[BANK0 ] int 
 15772 ;; Auto vars:     Size  Location     Type
 15773 ;;  v               4   21[BANK0 ] unsigned long 
 15774 ;;  c               1   25[BANK0 ] unsigned char 
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  2   13[BANK0 ] PTR unsigned char 
 15777 ;; Registers used:
 15778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15779 ;; Tracked objects:
 15780 ;;		On entry : 0/0
 15781 ;;		On exit  : 0/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15784 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15785 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15787 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15788 ;;Total ram usage:       13 bytes
 15789 ;; Hardware stack levels used:    1
 15790 ;; Hardware stack levels required when called:   11
 15791 ;; This function calls:
 15792 ;;		___lldiv
 15793 ;;		___llmod
 15794 ;; This function is called by:
 15795 ;;		_ltoa
 15796 ;; This function uses a non-reentrant model
 15797 ;;
 15798                           
 15799                           	psect	text56
 15800  0113E0                     __ptext56:
 15801                           	opt stack 0
 15802  0113E0                     _ultoa:
 15803                           	opt stack 15
 15804                           
 15805                           ;incstack = 0
 15806  0113E0  C06F  F075         	movff	ultoa@val,ultoa@v
 15807  0113E4  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15808  0113E8  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15809  0113EC  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15810  0113F0  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15811  0113F4  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15812  0113F8  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15813  0113FC  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15814  011400  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15815  011404  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15816  011408  0100               	movlb	0	; () banked
 15817  01140A  0E00               	movlw	0
 15818  01140C  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15819  01140E  0EFF               	movlw	-1
 15820  011410  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15821  011412  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15822  011414  EC8B  F09C         	call	___lldiv	;wreg free
 15823  011418  C060  F075         	movff	?___lldiv,ultoa@v
 15824  01141C  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15825  011420  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15826  011424  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15827  011428  0100               	movlb	0	; () banked
 15828  01142A  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15829  01142C  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15830                           
 15831                           ; BSR set to: 0
 15832  01142E  5175               	movf	ultoa@v& (0+255),w,b
 15833  011430  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15834  011432  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15835  011434  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15836  011436  A4D8               	btfss	status,2,c
 15837  011438  D7DB               	goto	l3688
 15838                           
 15839                           ; BSR set to: 0
 15840                           
 15841                           ; BSR set to: 0
 15842  01143A  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15843  01143E  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15844  011442  0E00               	movlw	0
 15845  011444  6EDF               	movwf	indf2,c
 15846                           
 15847                           ; BSR set to: 0
 15848  011446  076D               	decf	ultoa@buf& (0+255),f,b
 15849  011448  A0D8               	btfss	status,0,c
 15850  01144A  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15851  01144C                     
 15852                           ; BSR set to: 0
 15853                           
 15854                           ; BSR set to: 0
 15855  01144C  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15856  011450  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15857  011454  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15858  011458  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15859  01145C  C073  F064         	movff	ultoa@base,___llmod@divisor
 15860  011460  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15861  011464  0E00               	movlw	0
 15862  011466  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15863  011468  0EFF               	movlw	-1
 15864  01146A  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15865  01146C  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15866  01146E  EC7D  F0A0         	call	___llmod	;wreg free
 15867  011472  0100               	movlb	0	; () banked
 15868  011474  5160               	movf	?___llmod& (0+255),w,b
 15869  011476  6F79               	movwf	ultoa@c& (0+255),b
 15870                           
 15871                           ; BSR set to: 0
 15872  011478  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15873  01147C  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15874  011480  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15875  011484  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15876  011488  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15877  01148C  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15878  011490  0E00               	movlw	0
 15879  011492  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15880  011494  0EFF               	movlw	-1
 15881  011496  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15882  011498  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15883  01149A  EC8B  F09C         	call	___lldiv	;wreg free
 15884  01149E  C060  F06F         	movff	?___lldiv,ultoa@val
 15885  0114A2  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15886  0114A6  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15887  0114AA  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15888  0114AE  0E09               	movlw	9
 15889  0114B0  0100               	movlb	0	; () banked
 15890  0114B2  6579               	cpfsgt	ultoa@c& (0+255),b
 15891  0114B4  D002               	goto	l3691
 15892                           
 15893                           ; BSR set to: 0
 15894  0114B6  0E07               	movlw	7
 15895  0114B8  2779               	addwf	ultoa@c& (0+255),f,b
 15896  0114BA                     l3691:
 15897                           
 15898                           ; BSR set to: 0
 15899  0114BA  0E30               	movlw	48
 15900  0114BC  2779               	addwf	ultoa@c& (0+255),f,b
 15901                           
 15902                           ; BSR set to: 0
 15903  0114BE  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15904  0114C2  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15905  0114C6  C079  FFDF         	movff	ultoa@c,indf2
 15906                           
 15907                           ; BSR set to: 0
 15908  0114CA  076D               	decf	ultoa@buf& (0+255),f,b
 15909  0114CC  A0D8               	btfss	status,0,c
 15910  0114CE  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15911                           
 15912                           ; BSR set to: 0
 15913  0114D0  516F               	movf	ultoa@val& (0+255),w,b
 15914  0114D2  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15915  0114D4  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15916  0114D6  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15917  0114D8  B4D8               	btfsc	status,2,c
 15918  0114DA  0012               	return	
 15919  0114DC  D7B7               	goto	l3690
 15920  0114DE                     __end_of_ultoa:
 15921                           	opt stack 0
 15922                           tblptru	equ	0xFF8
 15923                           tblptrh	equ	0xFF7
 15924                           tblptrl	equ	0xFF6
 15925                           tablat	equ	0xFF5
 15926                           prodh	equ	0xFF4
 15927                           prodl	equ	0xFF3
 15928                           postinc0	equ	0xFEE
 15929                           wreg	equ	0xFE8
 15930                           postdec1	equ	0xFE5
 15931                           plusw1	equ	0xFE3
 15932                           fsr1h	equ	0xFE2
 15933                           fsr1l	equ	0xFE1
 15934                           indf2	equ	0xFDF
 15935                           postinc2	equ	0xFDE
 15936                           plusw2	equ	0xFDB
 15937                           fsr2h	equ	0xFDA
 15938                           fsr2l	equ	0xFD9
 15939                           status	equ	0xFD8
 15940                           
 15941 ;; *************** function ___llmod *****************
 15942 ;; Defined at:
 15943 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15944 ;; Parameters:    Size  Location     Type
 15945 ;;  dividend        4    0[BANK0 ] unsigned long 
 15946 ;;  divisor         4    4[BANK0 ] unsigned long 
 15947 ;; Auto vars:     Size  Location     Type
 15948 ;;  counter         1    8[BANK0 ] unsigned char 
 15949 ;; Return value:  Size  Location     Type
 15950 ;;                  4    0[BANK0 ] unsigned long 
 15951 ;; Registers used:
 15952 ;;		wreg, status,2, status,0
 15953 ;; Tracked objects:
 15954 ;;		On entry : 0/0
 15955 ;;		On exit  : 0/0
 15956 ;;		Unchanged: 0/0
 15957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15958 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15959 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15961 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15962 ;;Total ram usage:        9 bytes
 15963 ;; Hardware stack levels used:    1
 15964 ;; Hardware stack levels required when called:   10
 15965 ;; This function calls:
 15966 ;;		Nothing
 15967 ;; This function is called by:
 15968 ;;		_ultoa
 15969 ;; This function uses a non-reentrant model
 15970 ;;
 15971                           
 15972                           	psect	text57
 15973  0140FA                     __ptext57:
 15974                           	opt stack 0
 15975  0140FA                     ___llmod:
 15976                           	opt stack 15
 15977                           
 15978                           ; BSR set to: 0
 15979                           ;incstack = 0
 15980  0140FA  0100               	movlb	0	; () banked
 15981  0140FC  5164               	movf	___llmod@divisor& (0+255),w,b
 15982  0140FE  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15983  014100  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15984  014102  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15985  014104  B4D8               	btfsc	status,2,c
 15986  014106  D024               	goto	l3386
 15987                           
 15988                           ; BSR set to: 0
 15989  014108  0E01               	movlw	1
 15990  01410A  6F68               	movwf	___llmod@counter& (0+255),b
 15991  01410C  D006               	goto	l3381
 15992  01410E                     
 15993                           ; BSR set to: 0
 15994                           
 15995                           ; BSR set to: 0
 15996  01410E  90D8               	bcf	status,0,c
 15997  014110  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15998  014112  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15999  014114  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 16000  014116  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 16001  014118  2B68               	incf	___llmod@counter& (0+255),f,b
 16002  01411A                     l3381:
 16003                           
 16004                           ; BSR set to: 0
 16005                           
 16006                           ; BSR set to: 0
 16007  01411A  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 16008  01411C  D7F8               	goto	l3382
 16009  01411E                     u11840:
 16010                           
 16011                           ; BSR set to: 0
 16012                           
 16013                           ; BSR set to: 0
 16014                           
 16015                           ; BSR set to: 0
 16016  01411E  5164               	movf	___llmod@divisor& (0+255),w,b
 16017  014120  5D60               	subwf	___llmod@dividend& (0+255),w,b
 16018  014122  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16019  014124  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16020  014126  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16021  014128  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16022  01412A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16023  01412C  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16024  01412E  A0D8               	btfss	status,0,c
 16025  014130  D008               	goto	l3385
 16026                           
 16027                           ; BSR set to: 0
 16028  014132  5164               	movf	___llmod@divisor& (0+255),w,b
 16029  014134  5F60               	subwf	___llmod@dividend& (0+255),f,b
 16030  014136  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16031  014138  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16032  01413A  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16033  01413C  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16034  01413E  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16035  014140  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16036  014142                     l3385:
 16037                           
 16038                           ; BSR set to: 0
 16039                           
 16040                           ; BSR set to: 0
 16041  014142  90D8               	bcf	status,0,c
 16042  014144  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16043  014146  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16044  014148  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16045  01414A  3364               	rrcf	___llmod@divisor& (0+255),f,b
 16046                           
 16047                           ; BSR set to: 0
 16048  01414C  2F68               	decfsz	___llmod@counter& (0+255),f,b
 16049  01414E  D7E7               	goto	u11840
 16050  014150                     l3386:
 16051                           
 16052                           ; BSR set to: 0
 16053                           
 16054                           ; BSR set to: 0
 16055  014150  C060  F060         	movff	___llmod@dividend,?___llmod
 16056  014154  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 16057  014158  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 16058  01415C  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 16059                           
 16060                           ; BSR set to: 0
 16061  014160  0012               	return		;funcret
 16062  014162                     __end_of___llmod:
 16063                           	opt stack 0
 16064                           tblptru	equ	0xFF8
 16065                           tblptrh	equ	0xFF7
 16066                           tblptrl	equ	0xFF6
 16067                           tablat	equ	0xFF5
 16068                           prodh	equ	0xFF4
 16069                           prodl	equ	0xFF3
 16070                           postinc0	equ	0xFEE
 16071                           wreg	equ	0xFE8
 16072                           postdec1	equ	0xFE5
 16073                           plusw1	equ	0xFE3
 16074                           fsr1h	equ	0xFE2
 16075                           fsr1l	equ	0xFE1
 16076                           indf2	equ	0xFDF
 16077                           postinc2	equ	0xFDE
 16078                           plusw2	equ	0xFDB
 16079                           fsr2h	equ	0xFDA
 16080                           fsr2l	equ	0xFD9
 16081                           status	equ	0xFD8
 16082                           
 16083 ;; *************** function ___lldiv *****************
 16084 ;; Defined at:
 16085 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 16086 ;; Parameters:    Size  Location     Type
 16087 ;;  dividend        4    0[BANK0 ] unsigned long 
 16088 ;;  divisor         4    4[BANK0 ] unsigned long 
 16089 ;; Auto vars:     Size  Location     Type
 16090 ;;  quotient        4    8[BANK0 ] unsigned long 
 16091 ;;  counter         1   12[BANK0 ] unsigned char 
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  4    0[BANK0 ] unsigned long 
 16094 ;; Registers used:
 16095 ;;		wreg, status,2, status,0
 16096 ;; Tracked objects:
 16097 ;;		On entry : 0/0
 16098 ;;		On exit  : 0/0
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16101 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16102 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16104 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16105 ;;Total ram usage:       13 bytes
 16106 ;; Hardware stack levels used:    1
 16107 ;; Hardware stack levels required when called:   10
 16108 ;; This function calls:
 16109 ;;		Nothing
 16110 ;; This function is called by:
 16111 ;;		_ultoa
 16112 ;; This function uses a non-reentrant model
 16113 ;;
 16114                           
 16115                           	psect	text58
 16116  013916                     __ptext58:
 16117                           	opt stack 0
 16118  013916                     ___lldiv:
 16119                           	opt stack 15
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;incstack = 0
 16123  013916  0E00               	movlw	0
 16124  013918  0100               	movlb	0	; () banked
 16125  01391A  6F68               	movwf	___lldiv@quotient& (0+255),b
 16126  01391C  0E00               	movlw	0
 16127  01391E  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 16128  013920  0E00               	movlw	0
 16129  013922  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 16130  013924  0E00               	movlw	0
 16131  013926  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 16132                           
 16133                           ; BSR set to: 0
 16134  013928  5164               	movf	___lldiv@divisor& (0+255),w,b
 16135  01392A  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16136  01392C  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16137  01392E  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16138  013930  B4D8               	btfsc	status,2,c
 16139  013932  D02A               	goto	l3005
 16140                           
 16141                           ; BSR set to: 0
 16142  013934  0E01               	movlw	1
 16143  013936  6F6C               	movwf	___lldiv@counter& (0+255),b
 16144  013938  D006               	goto	l3000
 16145  01393A                     
 16146                           ; BSR set to: 0
 16147                           
 16148                           ; BSR set to: 0
 16149  01393A  90D8               	bcf	status,0,c
 16150  01393C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 16151  01393E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16152  013940  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16153  013942  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16154  013944  2B6C               	incf	___lldiv@counter& (0+255),f,b
 16155  013946                     l3000:
 16156                           
 16157                           ; BSR set to: 0
 16158                           
 16159                           ; BSR set to: 0
 16160  013946  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16161  013948  D7F8               	goto	l3001
 16162  01394A                     u11810:
 16163                           
 16164                           ; BSR set to: 0
 16165                           
 16166                           ; BSR set to: 0
 16167                           
 16168                           ; BSR set to: 0
 16169  01394A  90D8               	bcf	status,0,c
 16170  01394C  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 16171  01394E  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16172  013950  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16173  013952  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16174                           
 16175                           ; BSR set to: 0
 16176  013954  5164               	movf	___lldiv@divisor& (0+255),w,b
 16177  013956  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 16178  013958  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16179  01395A  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16180  01395C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16181  01395E  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16182  013960  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16183  013962  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16184  013964  A0D8               	btfss	status,0,c
 16185  013966  D009               	goto	l3004
 16186                           
 16187                           ; BSR set to: 0
 16188  013968  5164               	movf	___lldiv@divisor& (0+255),w,b
 16189  01396A  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 16190  01396C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16191  01396E  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16192  013970  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16193  013972  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16194  013974  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16195  013976  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16196                           
 16197                           ; BSR set to: 0
 16198  013978  8168               	bsf	___lldiv@quotient& (0+255),0,b
 16199  01397A                     l3004:
 16200                           
 16201                           ; BSR set to: 0
 16202                           
 16203                           ; BSR set to: 0
 16204  01397A  90D8               	bcf	status,0,c
 16205  01397C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16206  01397E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16207  013980  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16208  013982  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 16209                           
 16210                           ; BSR set to: 0
 16211  013984  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 16212  013986  D7E1               	goto	u11810
 16213  013988                     l3005:
 16214                           
 16215                           ; BSR set to: 0
 16216                           
 16217                           ; BSR set to: 0
 16218  013988  C068  F060         	movff	___lldiv@quotient,?___lldiv
 16219  01398C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 16220  013990  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 16221  013994  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 16222                           
 16223                           ; BSR set to: 0
 16224  013998  0012               	return		;funcret
 16225  01399A                     __end_of___lldiv:
 16226                           	opt stack 0
 16227                           tblptru	equ	0xFF8
 16228                           tblptrh	equ	0xFF7
 16229                           tblptrl	equ	0xFF6
 16230                           tablat	equ	0xFF5
 16231                           prodh	equ	0xFF4
 16232                           prodl	equ	0xFF3
 16233                           postinc0	equ	0xFEE
 16234                           wreg	equ	0xFE8
 16235                           postdec1	equ	0xFE5
 16236                           plusw1	equ	0xFE3
 16237                           fsr1h	equ	0xFE2
 16238                           fsr1l	equ	0xFE1
 16239                           indf2	equ	0xFDF
 16240                           postinc2	equ	0xFDE
 16241                           plusw2	equ	0xFDB
 16242                           fsr2h	equ	0xFDA
 16243                           fsr2l	equ	0xFD9
 16244                           status	equ	0xFD8
 16245                           
 16246 ;; *************** function _configFile_readDefault *****************
 16247 ;; Defined at:
 16248 ;;		line 209 in file "config_file.c"
 16249 ;; Parameters:    Size  Location     Type
 16250 ;;		None
 16251 ;; Auto vars:     Size  Location     Type
 16252 ;;		None
 16253 ;; Return value:  Size  Location     Type
 16254 ;;                  1    wreg      void 
 16255 ;; Registers used:
 16256 ;;		wreg, status,2
 16257 ;; Tracked objects:
 16258 ;;		On entry : 0/0
 16259 ;;		On exit  : 0/0
 16260 ;;		Unchanged: 0/0
 16261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16266 ;;Total ram usage:        0 bytes
 16267 ;; Hardware stack levels used:    1
 16268 ;; Hardware stack levels required when called:   10
 16269 ;; This function calls:
 16270 ;;		Nothing
 16271 ;; This function is called by:
 16272 ;;		_system_init
 16273 ;; This function uses a non-reentrant model
 16274 ;;
 16275                           
 16276                           	psect	text59
 16277  0141C6                     __ptext59:
 16278                           	opt stack 0
 16279  0141C6                     _configFile_readDefault:
 16280                           	opt stack 19
 16281                           
 16282                           ;config_file.c: 211: config.full_circle_in_steps = 576000;
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;incstack = 0
 16286  0141C6  0E00               	movlw	0
 16287  0141C8  0101               	movlb	1	; () banked
 16288  0141CA  6FA1               	movwf	_config& (0+255),b
 16289  0141CC  0ECA               	movlw	202
 16290  0141CE  6FA2               	movwf	(_config+1)& (0+255),b
 16291  0141D0  0E08               	movlw	8
 16292  0141D2  6FA3               	movwf	(_config+2)& (0+255),b
 16293  0141D4  0E00               	movlw	0
 16294  0141D6  6FA4               	movwf	(_config+3)& (0+255),b
 16295                           
 16296                           ;config_file.c: 212: config.inverse_direction = 1;
 16297  0141D8  0E01               	movlw	1
 16298  0141DA  6FA5               	movwf	(_config+4)& (0+255),b
 16299                           
 16300                           ;config_file.c: 213: config.overshoot_in_steps = 6400;
 16301  0141DC  0E19               	movlw	25
 16302  0141DE  6FA7               	movwf	(_config+6)& (0+255),b
 16303  0141E0  0E00               	movlw	0
 16304  0141E2  6FA6               	movwf	(_config+5)& (0+255),b
 16305                           
 16306                           ;config_file.c: 214: config.overshoot_cost_in_steps = 3000;
 16307  0141E4  0E0B               	movlw	11
 16308  0141E6  6FA9               	movwf	(_config+8)& (0+255),b
 16309  0141E8  0EB8               	movlw	184
 16310  0141EA  6FA8               	movwf	(_config+7)& (0+255),b
 16311                           
 16312                           ;config_file.c: 215: config.minimum_speed = 1;
 16313  0141EC  0E00               	movlw	0
 16314  0141EE  6FAB               	movwf	(_config+10)& (0+255),b
 16315  0141F0  0E01               	movlw	1
 16316  0141F2  6FAA               	movwf	(_config+9)& (0+255),b
 16317                           
 16318                           ;config_file.c: 216: config.maximum_speed = 380;
 16319  0141F4  0E01               	movlw	1
 16320  0141F6  6FAD               	movwf	(_config+12)& (0+255),b
 16321  0141F8  0E7C               	movlw	124
 16322  0141FA  6FAC               	movwf	(_config+11)& (0+255),b
 16323                           
 16324                           ;config_file.c: 217: config.maximum_speed_arc = 305;
 16325  0141FC  0E01               	movlw	1
 16326  0141FE  6FB1               	movwf	(_config+16)& (0+255),b
 16327  014200  0E31               	movlw	49
 16328  014202  6FB0               	movwf	(_config+15)& (0+255),b
 16329                           
 16330                           ;config_file.c: 218: config.maximum_speed_manual = 305;
 16331  014204  0E01               	movlw	1
 16332  014206  6FB5               	movwf	(_config+20)& (0+255),b
 16333  014208  0E31               	movlw	49
 16334  01420A  6FB4               	movwf	(_config+19)& (0+255),b
 16335                           
 16336                           ;config_file.c: 219: config.use_ccw_limit = 0;
 16337  01420C  0E00               	movlw	0
 16338  01420E  6FBA               	movwf	(_config+25)& (0+255),b
 16339                           
 16340                           ;config_file.c: 220: config.ccw_limit = 35500;
 16341  014210  0E8A               	movlw	138
 16342  014212  6FBC               	movwf	(_config+27)& (0+255),b
 16343  014214  0EAC               	movlw	172
 16344  014216  6FBB               	movwf	(_config+26)& (0+255),b
 16345                           
 16346                           ;config_file.c: 221: config.use_cw_limit = 0;
 16347  014218  0E00               	movlw	0
 16348  01421A  6FB7               	movwf	(_config+22)& (0+255),b
 16349                           
 16350                           ;config_file.c: 222: config.cw_limit = 500;
 16351  01421C  0E01               	movlw	1
 16352  01421E  6FB9               	movwf	(_config+24)& (0+255),b
 16353  014220  0EF4               	movlw	244
 16354  014222  6FB8               	movwf	(_config+23)& (0+255),b
 16355                           
 16356                           ;config_file.c: 223: config.beep_duration = 10;
 16357  014224  0E0A               	movlw	10
 16358  014226  6FB6               	movwf	(_config+21)& (0+255),b
 16359                           
 16360                           ; BSR set to: 1
 16361  014228  0012               	return		;funcret
 16362  01422A                     __end_of_configFile_readDefault:
 16363                           	opt stack 0
 16364                           tblptru	equ	0xFF8
 16365                           tblptrh	equ	0xFF7
 16366                           tblptrl	equ	0xFF6
 16367                           tablat	equ	0xFF5
 16368                           prodh	equ	0xFF4
 16369                           prodl	equ	0xFF3
 16370                           postinc0	equ	0xFEE
 16371                           wreg	equ	0xFE8
 16372                           postdec1	equ	0xFE5
 16373                           plusw1	equ	0xFE3
 16374                           fsr1h	equ	0xFE2
 16375                           fsr1l	equ	0xFE1
 16376                           indf2	equ	0xFDF
 16377                           postinc2	equ	0xFDE
 16378                           plusw2	equ	0xFDB
 16379                           fsr2h	equ	0xFDA
 16380                           fsr2l	equ	0xFD9
 16381                           status	equ	0xFD8
 16382                           
 16383 ;; *************** function _configFile_read *****************
 16384 ;; Defined at:
 16385 ;;		line 227 in file "config_file.c"
 16386 ;; Parameters:    Size  Location     Type
 16387 ;;		None
 16388 ;; Auto vars:     Size  Location     Type
 16389 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 16390 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 16391 ;;  position        4   56[BANK1 ] unsigned long 
 16392 ;;  file_size       4   51[BANK1 ] unsigned long 
 16393 ;;  file_number     1   55[BANK1 ] unsigned char 
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  1    wreg      void 
 16396 ;; Registers used:
 16397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16404 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16405 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16406 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16407 ;;Total ram usage:       60 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; Hardware stack levels required when called:   19
 16410 ;; This function calls:
 16411 ;;		__get_item
 16412 ;;		__parse_item
 16413 ;;		_fat_find_file
 16414 ;;		_fat_get_file_size
 16415 ;;		_fat_read_from_file
 16416 ;; This function is called by:
 16417 ;;		_system_init
 16418 ;; This function uses a non-reentrant model
 16419 ;;
 16420                           
 16421                           	psect	text60
 16422  00F5BA                     __ptext60:
 16423                           	opt stack 0
 16424  00F5BA                     _configFile_read:
 16425                           	opt stack 10
 16426                           
 16427                           ;config_file.c: 229: uint8_t file_number;;config_file.c: 230: uint32_t file_size;;config
      +                          _file.c: 231: uint32_t position;;config_file.c: 232: char item_string[31];;config_file.c
      +                          : 233: char value_string[12];;config_file.c: 236: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 16428                           
 16429                           ; BSR set to: 1
 16430                           ;incstack = 0
 16431  00F5BA  0EC8               	movlw	low _configFile_name
 16432  00F5BC  0100               	movlb	0	; () banked
 16433  00F5BE  6F8B               	movwf	fat_find_file@name& (0+255),b
 16434  00F5C0  0E02               	movlw	high _configFile_name
 16435  00F5C2  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 16436  00F5C4  0ED3               	movlw	low _configFile_extention
 16437  00F5C6  6F8D               	movwf	fat_find_file@extension& (0+255),b
 16438  00F5C8  0E02               	movlw	high _configFile_extention
 16439  00F5CA  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 16440  00F5CC  EC48  F08D         	call	_fat_find_file	;wreg free
 16441  00F5D0  0101               	movlb	1	; () banked
 16442  00F5D2  6FFA               	movwf	configFile_read@file_number& (0+255),b
 16443                           
 16444                           ; BSR set to: 1
 16445                           ;config_file.c: 237: if(file_number==0xFF)
 16446  00F5D4  29FA               	incf	configFile_read@file_number& (0+255),w,b
 16447  00F5D6  B4D8               	btfsc	status,2,c
 16448  00F5D8  0012               	return	
 16449                           
 16450                           ; BSR set to: 1
 16451                           ;config_file.c: 241: };config_file.c: 244: file_size = fat_get_file_size(file_number);
 16452                           
 16453                           ; BSR set to: 1
 16454                           
 16455                           ; BSR set to: 1
 16456                           ;config_file.c: 238: {;config_file.c: 240: return;
 16457  00F5DA  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16458  00F5DC  EC49  F09E         	call	_fat_get_file_size
 16459  00F5E0  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 16460  00F5E4  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 16461  00F5E8  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 16462  00F5EC  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 16463                           
 16464                           ;config_file.c: 247: position = 0;
 16465  00F5F0  0E00               	movlw	0
 16466  00F5F2  0101               	movlb	1	; () banked
 16467  00F5F4  6FFB               	movwf	configFile_read@position& (0+255),b
 16468  00F5F6  0E00               	movlw	0
 16469  00F5F8  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 16470  00F5FA  0E00               	movlw	0
 16471  00F5FC  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 16472  00F5FE  0E00               	movlw	0
 16473  00F600  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 16474                           
 16475                           ;config_file.c: 248: while((file_size-position)>3)
 16476  00F602  D086               	goto	l2960
 16477  00F604                     
 16478                           ; BSR set to: 1
 16479                           ;config_file.c: 249: {;config_file.c: 250: if((position+45) > file_size)
 16480                           
 16481                           ; BSR set to: 1
 16482  00F604  0E2D               	movlw	45
 16483  00F606  25FB               	addwf	configFile_read@position& (0+255),w,b
 16484  00F608  6FC3               	movwf	??_configFile_read& (0+255),b
 16485  00F60A  0E00               	movlw	0
 16486  00F60C  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 16487  00F60E  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 16488  00F610  0E00               	movlw	0
 16489  00F612  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 16490  00F614  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 16491  00F616  0E00               	movlw	0
 16492  00F618  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 16493  00F61A  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 16494  00F61C  51C3               	movf	??_configFile_read& (0+255),w,b
 16495  00F61E  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 16496  00F620  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 16497  00F622  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 16498  00F624  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 16499  00F626  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 16500  00F628  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 16501  00F62A  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 16502  00F62C  B0D8               	btfsc	status,0,c
 16503  00F62E  D035               	goto	l2962
 16504                           
 16505                           ; BSR set to: 1
 16506                           ;config_file.c: 251: {;config_file.c: 253: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 16507  00F630  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16508  00F634  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16509  00F638  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16510  00F63C  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16511  00F640  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16512  00F644  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16513  00F648  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16514  00F64C  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16515  00F650  1FC3               	comf	??_configFile_read& (0+255),f,b
 16516  00F652  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16517  00F654  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16518  00F656  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16519  00F658  2BC3               	incf	??_configFile_read& (0+255),f,b
 16520  00F65A  0E00               	movlw	0
 16521  00F65C  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16522  00F65E  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16523  00F660  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16524  00F662  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16525  00F664  25C3               	addwf	??_configFile_read& (0+255),w,b
 16526  00F666  0100               	movlb	0	; () banked
 16527  00F668  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16528  00F66A  0101               	movlb	1	; () banked
 16529  00F66C  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16530  00F66E  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16531  00F670  0100               	movlb	0	; () banked
 16532  00F672  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16533  00F674  0101               	movlb	1	; () banked
 16534  00F676  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16535  00F678  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16536  00F67A  0100               	movlb	0	; () banked
 16537  00F67C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16538  00F67E  0101               	movlb	1	; () banked
 16539  00F680  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16540  00F682  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16541  00F684  0100               	movlb	0	; () banked
 16542  00F686  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16543  00F688  0E00               	movlw	low _ConfigFile_buffer
 16544  00F68A  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16545  00F68C  0E08               	movlw	high _ConfigFile_buffer
 16546  00F68E  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16547  00F690  0101               	movlb	1	; () banked
 16548  00F692  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16549  00F694  ECBC  F08D         	call	_fat_read_from_file
 16550                           
 16551                           ;config_file.c: 254: }
 16552  00F698  D019               	goto	l2963
 16553  00F69A                     l2962:
 16554                           
 16555                           ;config_file.c: 255: else;config_file.c: 256: {;config_file.c: 258: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 16556  00F69A  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16557  00F69E  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16558  00F6A2  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16559  00F6A6  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16560  00F6AA  0E2D               	movlw	45
 16561  00F6AC  0100               	movlb	0	; () banked
 16562  00F6AE  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16563  00F6B0  0E00               	movlw	0
 16564  00F6B2  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16565  00F6B4  0E00               	movlw	0
 16566  00F6B6  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16567  00F6B8  0E00               	movlw	0
 16568  00F6BA  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16569  00F6BC  0E00               	movlw	low _ConfigFile_buffer
 16570  00F6BE  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16571  00F6C0  0E08               	movlw	high _ConfigFile_buffer
 16572  00F6C2  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16573  00F6C4  0101               	movlb	1	; () banked
 16574  00F6C6  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16575  00F6C8  ECBC  F08D         	call	_fat_read_from_file
 16576  00F6CC                     l2963:
 16577                           
 16578                           ;config_file.c: 259: };config_file.c: 262: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 16579  00F6CC  0ECB               	movlw	low configFile_read@item_string
 16580  00F6CE  0100               	movlb	0	; () banked
 16581  00F6D0  6F60               	movwf	__get_item@item_string& (0+255),b
 16582  00F6D2  0E01               	movlw	high configFile_read@item_string
 16583  00F6D4  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 16584  00F6D6  0EEA               	movlw	low configFile_read@value_string
 16585  00F6D8  6F62               	movwf	__get_item@value_string& (0+255),b
 16586  00F6DA  0E01               	movlw	high configFile_read@value_string
 16587  00F6DC  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 16588  00F6DE  0E00               	movlw	low _ConfigFile_buffer
 16589  00F6E0  6F64               	movwf	__get_item@buffer& (0+255),b
 16590  00F6E2  0E08               	movlw	high _ConfigFile_buffer
 16591  00F6E4  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16592  00F6E6  EC35  F07D         	call	__get_item	;wreg free
 16593  00F6EA  0101               	movlb	1	; () banked
 16594  00F6EC  6FC3               	movwf	??_configFile_read& (0+255),b
 16595  00F6EE  51C3               	movf	??_configFile_read& (0+255),w,b
 16596  00F6F0  27FB               	addwf	configFile_read@position& (0+255),f,b
 16597  00F6F2  0E00               	movlw	0
 16598  00F6F4  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16599  00F6F6  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16600  00F6F8  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16601                           
 16602                           ; BSR set to: 1
 16603                           ;config_file.c: 265: _parse_item(&item_string[0], &value_string[0]);
 16604  00F6FA  0ECB               	movlw	low configFile_read@item_string
 16605  00F6FC  0100               	movlb	0	; () banked
 16606  00F6FE  6F7A               	movwf	__parse_item@item_string& (0+255),b
 16607  00F700  0E01               	movlw	high configFile_read@item_string
 16608  00F702  6F7B               	movwf	(__parse_item@item_string+1)& (0+255),b
 16609  00F704  0EEA               	movlw	low configFile_read@value_string
 16610  00F706  6F7C               	movwf	__parse_item@value_string& (0+255),b
 16611  00F708  0E01               	movlw	high configFile_read@value_string
 16612  00F70A  6F7D               	movwf	(__parse_item@value_string+1)& (0+255),b
 16613  00F70C  EC6A  F064         	call	__parse_item	;wreg free
 16614  00F710                     l2960:
 16615  00F710  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16616  00F714  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16617  00F718  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16618  00F71C  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16619  00F720  0101               	movlb	1	; () banked
 16620  00F722  1FC3               	comf	??_configFile_read& (0+255),f,b
 16621  00F724  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16622  00F726  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16623  00F728  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16624  00F72A  2BC3               	incf	??_configFile_read& (0+255),f,b
 16625  00F72C  0E00               	movlw	0
 16626  00F72E  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16627  00F730  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16628  00F732  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16629  00F734  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16630  00F736  25C3               	addwf	??_configFile_read& (0+255),w,b
 16631  00F738  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 16632  00F73A  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16633  00F73C  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16634  00F73E  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 16635  00F740  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16636  00F742  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16637  00F744  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 16638  00F746  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16639  00F748  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16640  00F74A  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 16641  00F74C  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 16642  00F74E  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16643  00F750  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16644  00F752  E104               	bnz	u16451
 16645  00F754  0E04               	movlw	4
 16646  00F756  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 16647  00F758  A0D8               	btfss	status,0,c
 16648  00F75A  0012               	return	
 16649  00F75C                     u16451:
 16650  00F75C  D753               	goto	l2961
 16651  00F75E                     __end_of_configFile_read:
 16652                           	opt stack 0
 16653                           tblptru	equ	0xFF8
 16654                           tblptrh	equ	0xFF7
 16655                           tblptrl	equ	0xFF6
 16656                           tablat	equ	0xFF5
 16657                           prodh	equ	0xFF4
 16658                           prodl	equ	0xFF3
 16659                           postinc0	equ	0xFEE
 16660                           wreg	equ	0xFE8
 16661                           postdec1	equ	0xFE5
 16662                           plusw1	equ	0xFE3
 16663                           fsr1h	equ	0xFE2
 16664                           fsr1l	equ	0xFE1
 16665                           indf2	equ	0xFDF
 16666                           postinc2	equ	0xFDE
 16667                           plusw2	equ	0xFDB
 16668                           fsr2h	equ	0xFDA
 16669                           fsr2l	equ	0xFD9
 16670                           status	equ	0xFD8
 16671                           
 16672 ;; *************** function _fat_read_from_file *****************
 16673 ;; Defined at:
 16674 ;;		line 751 in file "fat16.c"
 16675 ;; Parameters:    Size  Location     Type
 16676 ;;  file_number     1    wreg     unsigned char 
 16677 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16678 ;;  length          4  109[BANK0 ] unsigned long 
 16679 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16680 ;;		 -> ConfigFile_buffer(512), 
 16681 ;; Auto vars:     Size  Location     Type
 16682 ;;  file_number     1  119[BANK0 ] unsigned char 
 16683 ;;  root           32  125[BANK0 ] struct .
 16684 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16685 ;;  cluster         2  121[BANK0 ] unsigned int 
 16686 ;;  return_code     1  120[BANK0 ] unsigned char 
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      unsigned char 
 16689 ;; Registers used:
 16690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16696 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16697 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16698 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16699 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16700 ;;Total ram usage:       52 bytes
 16701 ;; Hardware stack levels used:    1
 16702 ;; Hardware stack levels required when called:   18
 16703 ;; This function calls:
 16704 ;;		_fat_get_file_information
 16705 ;;		_fat_read_from_file_fast
 16706 ;; This function is called by:
 16707 ;;		_configFile_read
 16708 ;; This function uses a non-reentrant model
 16709 ;;
 16710                           
 16711                           	psect	text61
 16712  011B78                     __ptext61:
 16713                           	opt stack 0
 16714  011B78                     _fat_read_from_file:
 16715                           	opt stack 10
 16716                           
 16717                           ; BSR set to: 1
 16718                           ;incstack = 0
 16719                           ;fat_read_from_file@file_number stored from wreg
 16720  011B78  0100               	movlb	0	; () banked
 16721  011B7A  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16722                           
 16723                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16724  011B7C  0EDD               	movlw	low fat_read_from_file@root
 16725  011B7E  0100               	movlb	0	; () banked
 16726  011B80  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16727  011B82  0E00               	movlw	high fat_read_from_file@root
 16728  011B84  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16729  011B86  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16730  011B88  EC0C  F09E         	call	_fat_get_file_information
 16731  011B8C  0100               	movlb	0	; () banked
 16732  011B8E  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16733                           
 16734                           ; BSR set to: 0
 16735                           ;fat16.c: 760: if(return_code!=0x00)
 16736  011B90  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16737  011B92  A4D8               	btfss	status,2,c
 16738  011B94  0012               	return	
 16739                           
 16740                           ; BSR set to: 0
 16741                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 16742                           
 16743                           ; BSR set to: 0
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;fat16.c: 761: {;fat16.c: 763: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16747  011B96  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16748  011B98  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16749  011B9A  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16750  011B9C  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16751  011B9E  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16752  011BA0  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16753  011BA2  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16754  011BA4  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16755  011BA6  A0D8               	btfss	status,0,c
 16756  011BA8  0012               	return	
 16757                           
 16758                           ; BSR set to: 0
 16759                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 16760                           
 16761                           ; BSR set to: 0
 16762                           
 16763                           ; BSR set to: 0
 16764                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16765  011BAA  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16766  011BAC  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16767  011BAE  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16768  011BB0  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16769  011BB2  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16770  011BB4  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16771  011BB6  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16772  011BB8  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16773  011BBA  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16774  011BBC  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16775  011BBE  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16776  011BC0  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16777  011BC2  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16778  011BC4  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16779  011BC6  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16780  011BC8  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16781  011BCA  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16782  011BCC  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16783  011BCE  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16784  011BD0  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16785  011BD2  B0D8               	btfsc	status,0,c
 16786  011BD4  D01D               	goto	l1877
 16787                           
 16788                           ; BSR set to: 0
 16789                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 16790  011BD6  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16791  011BDA  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16792  011BDE  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16793  011BE2  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16794  011BE6  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16795  011BE8  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16796  011BEA  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16797  011BEC  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16798  011BEE  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16799  011BF0  0E00               	movlw	0
 16800  011BF2  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16801  011BF4  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16802  011BF6  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16803  011BF8  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16804  011BFA  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16805  011BFC  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16806  011BFE  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16807  011C00  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16808  011C02  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16809  011C04  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16810  011C06  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16811  011C08  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16812  011C0A  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16813  011C0C  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16814  011C0E  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16815  011C10                     l1877:
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 16819                           
 16820                           ; BSR set to: 0
 16821  011C10  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16822  011C14  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16823                           
 16824                           ; BSR set to: 0
 16825                           ;fat16.c: 781: cluster_number = 0;
 16826  011C18  0E00               	movlw	0
 16827  011C1A  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16828  011C1C  0E00               	movlw	0
 16829  011C1E  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16830                           
 16831                           ; BSR set to: 0
 16832                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16833  011C20  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16834  011C24  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16835  011C28  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16836  011C2C  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16837  011C30  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16838  011C34  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16839  011C38  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16840  011C3C  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16841  011C40  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16842  011C44  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16843  011C48  0ED9               	movlw	low fat_read_from_file@cluster
 16844  011C4A  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16845  011C4C  0E00               	movlw	high fat_read_from_file@cluster
 16846  011C4E  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16847  011C50  0EDB               	movlw	low fat_read_from_file@cluster_number
 16848  011C52  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16849  011C54  0E00               	movlw	high fat_read_from_file@cluster_number
 16850  011C56  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16851  011C58  ECFA  F073         	call	_fat_read_from_file_fast	;wreg free
 16852  011C5C  0012               	return	
 16853  011C5E                     __end_of_fat_read_from_file:
 16854                           	opt stack 0
 16855                           tblptru	equ	0xFF8
 16856                           tblptrh	equ	0xFF7
 16857                           tblptrl	equ	0xFF6
 16858                           tablat	equ	0xFF5
 16859                           prodh	equ	0xFF4
 16860                           prodl	equ	0xFF3
 16861                           postinc0	equ	0xFEE
 16862                           wreg	equ	0xFE8
 16863                           postdec1	equ	0xFE5
 16864                           plusw1	equ	0xFE3
 16865                           fsr1h	equ	0xFE2
 16866                           fsr1l	equ	0xFE1
 16867                           indf2	equ	0xFDF
 16868                           postinc2	equ	0xFDE
 16869                           plusw2	equ	0xFDB
 16870                           fsr2h	equ	0xFDA
 16871                           fsr2l	equ	0xFD9
 16872                           status	equ	0xFD8
 16873                           
 16874 ;; *************** function _fat_read_from_file_fast *****************
 16875 ;; Defined at:
 16876 ;;		line 787 in file "fat16.c"
 16877 ;; Parameters:    Size  Location     Type
 16878 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16879 ;;  length          4   69[BANK0 ] unsigned long 
 16880 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16881 ;;		 -> ConfigFile_buffer(512), 
 16882 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16883 ;;		 -> fat_read_from_file@cluster(2), 
 16884 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16885 ;;		 -> fat_read_from_file@cluster_number(2), 
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;  position        4  101[BANK0 ] unsigned long 
 16888 ;;  read_length     2   99[BANK0 ] unsigned int 
 16889 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16890 ;;  offset          2   95[BANK0 ] unsigned int 
 16891 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16892 ;;  sector          2   91[BANK0 ] unsigned int 
 16893 ;; Return value:  Size  Location     Type
 16894 ;;                  1    wreg      unsigned char 
 16895 ;; Registers used:
 16896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16897 ;; Tracked objects:
 16898 ;;		On entry : 0/0
 16899 ;;		On exit  : 0/0
 16900 ;;		Unchanged: 0/0
 16901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16902 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16903 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16904 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16905 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16906 ;;Total ram usage:       40 bytes
 16907 ;; Hardware stack levels used:    1
 16908 ;; Hardware stack levels required when called:   17
 16909 ;; This function calls:
 16910 ;;		__data_sector_from_cluster
 16911 ;;		__find_nth_cluster
 16912 ;;		__read_fat
 16913 ;;		_flash_partial_read
 16914 ;; This function is called by:
 16915 ;;		_fat_read_from_file
 16916 ;; This function uses a non-reentrant model
 16917 ;;
 16918                           
 16919                           	psect	text62
 16920  00E7F4                     __ptext62:
 16921                           	opt stack 0
 16922  00E7F4                     _fat_read_from_file_fast:
 16923                           	opt stack 10
 16924                           
 16925                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16926                           
 16927                           ;incstack = 0
 16928  00E7F4  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16929  00E7F8  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16930  00E7FC  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16931  00E800  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16932  00E804  0E0A               	movlw	10
 16933  00E806  D006               	goto	u13440
 16934  00E808                     u13445:
 16935  00E808  0100               	movlb	0	; () banked
 16936  00E80A  90D8               	bcf	status,0,c
 16937  00E80C  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16938  00E80E  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16939  00E810  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16940  00E812  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16941  00E814                     u13440:
 16942  00E814  2EE8               	decfsz	wreg,f,c
 16943  00E816  D7F8               	goto	u13445
 16944  00E818  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16945  00E81C  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16946                           
 16947                           ; BSR set to: 0
 16948                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 16949  00E820  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16950  00E824  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16951  00E828  50DE               	movf	postinc2,w,c
 16952  00E82A  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16953  00E82C  50DE               	movf	postinc2,w,c
 16954  00E82E  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16955  00E830  B0D8               	btfsc	status,0,c
 16956  00E832  D002               	goto	l1880
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 16960  00E834  0EFF               	movlw	255
 16961                           
 16962                           ; BSR set to: 0
 16963  00E836  0012               	return	
 16964  00E838                     l1880:
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16968                           
 16969                           ; BSR set to: 0
 16970  00E838  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16971  00E83C  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16972  00E840  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16973  00E844  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16974  00E848  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16975  00E84C  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16976  00E850  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16977  00E854  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16978  00E858  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16979  00E85A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16980  00E85C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16981  00E85E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16982  00E860  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16983  00E862  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16984  00E864  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16985  00E866  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16986  00E868  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16987  00E86A  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16988  00E86C  EC0A  F099         	call	__find_nth_cluster	;wreg free
 16989  00E870  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16990  00E874  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16991  00E878  0100               	movlb	0	; () banked
 16992  00E87A  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16993  00E87E  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 16997  00E882  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16998  00E886  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16999  00E88A  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 17000  00E88E  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 17001                           
 17002                           ; BSR set to: 0
 17003                           ;fat16.c: 813: working_cluster = (*cluster);
 17004  00E892  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 17005  00E896  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 17006  00E89A  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 17007  00E89E  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;fat16.c: 816: position = (needed_cluster << 9);
 17011  00E8A2  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 17012  00E8A6  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 17013  00E8AA  0E09               	movlw	9
 17014  00E8AC                     u13465:
 17015  00E8AC  90D8               	bcf	status,0,c
 17016  00E8AE  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 17017  00E8B0  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17018  00E8B2  2EE8               	decfsz	wreg,f,c
 17019  00E8B4  D7FB               	goto	u13465
 17020  00E8B6  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 17021  00E8BA  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 17022  00E8BE  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 17023  00E8C0  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 17024                           
 17025                           ; BSR set to: 0
 17026                           ;fat16.c: 817: offset = start_byte - position;
 17027  00E8C2  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17028  00E8C6  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17029  00E8CA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17030  00E8CC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17031  00E8CE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17032  00E8D0  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17033  00E8D2  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 17034  00E8D4  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17035  00E8D6  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17036  00E8D8  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 17037  00E8DA  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17038  00E8DC  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17039                           
 17040                           ; BSR set to: 0
 17041                           ;fat16.c: 820: position = 0;
 17042  00E8DE  0E00               	movlw	0
 17043  00E8E0  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 17044  00E8E2  0E00               	movlw	0
 17045  00E8E4  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 17046  00E8E6  0E00               	movlw	0
 17047  00E8E8  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 17048  00E8EA  0E00               	movlw	0
 17049  00E8EC  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 17050                           
 17051                           ;fat16.c: 821: while(position < length)
 17052  00E8EE  D089               	goto	l1882
 17053  00E8F0                     
 17054                           ; BSR set to: 0
 17055                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 17056                           
 17057                           ; BSR set to: 0
 17058  00E8F0  0E02               	movlw	2
 17059  00E8F2  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 17060  00E8F4  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 17061  00E8F6  A4D8               	btfss	status,2,c
 17062  00E8F8  D00F               	goto	l1884
 17063                           
 17064                           ; BSR set to: 0
 17065                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 17066  00E8FA  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 17067  00E8FE  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 17068  00E902  ECA3  F0A3         	call	__read_fat	;wreg free
 17069  00E906  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 17070  00E90A  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 17071                           
 17072                           ;fat16.c: 828: offset = 0;
 17073  00E90E  0E00               	movlw	0
 17074  00E910  0100               	movlb	0	; () banked
 17075  00E912  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17076  00E914  0E00               	movlw	0
 17077  00E916  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17078  00E918                     l1884:
 17079                           
 17080                           ; BSR set to: 0
 17081                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 17082                           
 17083                           ; BSR set to: 0
 17084  00E918  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 17085  00E91C  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 17086  00E920  EC54  F0AC         	call	__data_sector_from_cluster	;wreg free
 17087  00E924  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 17088  00E928  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 17089                           
 17090                           ;fat16.c: 835: read_length = 512 - offset;
 17091  00E92C  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 17092  00E930  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 17093  00E934  0100               	movlb	0	; () banked
 17094  00E936  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17095  00E938  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17096  00E93A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17097  00E93C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17098  00E93E  0E00               	movlw	0
 17099  00E940  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17100  00E942  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17101  00E944  0E02               	movlw	2
 17102  00E946  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17103  00E948  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;fat16.c: 836: if(read_length > (length-position))
 17107  00E94A  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17108  00E94C  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 17109  00E94E  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17110  00E950  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 17111  00E952  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 17112  00E954  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 17113  00E956  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 17114  00E95A  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 17115  00E95E  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 17116  00E962  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 17117  00E966  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17118  00E968  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17119  00E96A  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17120  00E96C  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17121  00E96E  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17122  00E970  0E00               	movlw	0
 17123  00E972  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17124  00E974  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17125  00E976  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17126  00E978  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17127  00E97A  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 17128  00E97C  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 17129  00E97E  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17130  00E980  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 17131  00E982  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 17132  00E984  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17133  00E986  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 17134  00E988  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 17135  00E98A  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17136  00E98C  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 17137  00E98E  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 17138  00E990  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 17139  00E992  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 17140  00E994  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17141  00E996  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 17142  00E998  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 17143  00E99A  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 17144  00E99C  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 17145  00E99E  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 17146  00E9A0  B0D8               	btfsc	status,0,c
 17147  00E9A2  D00E               	goto	l1885
 17148                           
 17149                           ; BSR set to: 0
 17150                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 17151  00E9A4  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17152  00E9A8  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17153  00E9AC  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17154  00E9AE  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17155  00E9B0  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17156  00E9B2  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17157  00E9B4  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17158  00E9B6  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17159  00E9B8  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17160  00E9BA  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17161  00E9BC  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17162  00E9BE  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17163  00E9C0                     l1885:
 17164                           
 17165                           ; BSR set to: 0
 17166                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 17167                           
 17168                           ; BSR set to: 0
 17169  00E9C0  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 17170  00E9C4  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 17171  00E9C8  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 17172  00E9CC  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 17173  00E9D0  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 17174  00E9D4  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 17175  00E9D8  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 17176  00E9DA  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 17177  00E9DC  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17178  00E9DE  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17179  00E9E0  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 17180  00E9E2  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17181  00E9E4  EC14  F0AB         	call	_flash_partial_read	;wreg free
 17182                           
 17183                           ;fat16.c: 846: position += read_length;
 17184  00E9E8  0100               	movlb	0	; () banked
 17185  00E9EA  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17186  00E9EC  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 17187  00E9EE  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17188  00E9F0  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 17189  00E9F2  0E00               	movlw	0
 17190  00E9F4  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 17191  00E9F6  0E00               	movlw	0
 17192  00E9F8  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 17193                           
 17194                           ; BSR set to: 0
 17195                           ;fat16.c: 847: offset += read_length;
 17196  00E9FA  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17197  00E9FC  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 17198  00E9FE  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17199  00EA00  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 17200  00EA02                     l1882:
 17201                           
 17202                           ; BSR set to: 0
 17203                           
 17204                           ; BSR set to: 0
 17205  00EA02  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17206  00EA04  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 17207  00EA06  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17208  00EA08  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17209  00EA0A  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17210  00EA0C  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 17211  00EA0E  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17212  00EA10  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 17213  00EA12  A0D8               	btfss	status,0,c
 17214  00EA14  D76D               	goto	l1883
 17215                           
 17216                           ; BSR set to: 0
 17217                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 17218                           
 17219                           ; BSR set to: 0
 17220  00EA16  0E00               	movlw	0
 17221  00EA18  0012               	return	
 17222  00EA1A                     __end_of_fat_read_from_file_fast:
 17223                           	opt stack 0
 17224                           tblptru	equ	0xFF8
 17225                           tblptrh	equ	0xFF7
 17226                           tblptrl	equ	0xFF6
 17227                           tablat	equ	0xFF5
 17228                           prodh	equ	0xFF4
 17229                           prodl	equ	0xFF3
 17230                           postinc0	equ	0xFEE
 17231                           wreg	equ	0xFE8
 17232                           postdec1	equ	0xFE5
 17233                           plusw1	equ	0xFE3
 17234                           fsr1h	equ	0xFE2
 17235                           fsr1l	equ	0xFE1
 17236                           indf2	equ	0xFDF
 17237                           postinc2	equ	0xFDE
 17238                           postdec2	equ	0xFDD
 17239                           plusw2	equ	0xFDB
 17240                           fsr2h	equ	0xFDA
 17241                           fsr2l	equ	0xFD9
 17242                           status	equ	0xFD8
 17243                           
 17244 ;; *************** function __find_nth_cluster *****************
 17245 ;; Defined at:
 17246 ;;		line 182 in file "fat16.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;  cluster         2   55[BANK0 ] unsigned int 
 17249 ;;  n               2   57[BANK0 ] unsigned int 
 17250 ;; Auto vars:     Size  Location     Type
 17251 ;;  sector          2   63[BANK0 ] unsigned int 
 17252 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 17253 ;;  offset          2   59[BANK0 ] unsigned int 
 17254 ;; Return value:  Size  Location     Type
 17255 ;;                  2   55[BANK0 ] unsigned int 
 17256 ;; Registers used:
 17257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17258 ;; Tracked objects:
 17259 ;;		On entry : 0/0
 17260 ;;		On exit  : 0/0
 17261 ;;		Unchanged: 0/0
 17262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17264 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17266 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17267 ;;Total ram usage:       10 bytes
 17268 ;; Hardware stack levels used:    1
 17269 ;; Hardware stack levels required when called:   16
 17270 ;; This function calls:
 17271 ;;		__fat_offset_from_cluster
 17272 ;;		__fat_sector_from_cluster
 17273 ;;		__read_fat
 17274 ;;		__read_value_from_offset
 17275 ;;		_flash_sector_read
 17276 ;; This function is called by:
 17277 ;;		_fat_read_from_file_fast
 17278 ;;		_fat_modify_file
 17279 ;;		_fat_copy_sector_to_buffer
 17280 ;; This function uses a non-reentrant model
 17281 ;;
 17282                           
 17283                           	psect	text63
 17284  013214                     __ptext63:
 17285                           	opt stack 0
 17286  013214                     __find_nth_cluster:
 17287                           	opt stack 11
 17288                           
 17289                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;incstack = 0
 17293  013214  0E00               	movlw	0
 17294  013216  0100               	movlb	0	; () banked
 17295  013218  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 17296  01321A  0E00               	movlw	0
 17297  01321C  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;fat16.c: 189: if(n==1)
 17301  01321E  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 17302  013220  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17303  013222  A4D8               	btfss	status,2,c
 17304  013224  D040               	goto	l1767
 17305                           
 17306                           ; BSR set to: 0
 17307                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 17308  013226  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 17309  01322A  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 17310  01322E  ECA3  F0A3         	call	__read_fat	;wreg free
 17311  013232  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 17312  013236  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 17313  01323A  0012               	return	
 17314  01323C                     
 17315                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 17316  01323C  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 17317  013240  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 17318  013244  ECE1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 17319  013248  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 17320  01324C  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 17321                           
 17322                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 17323  013250  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 17324  013254  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 17325  013258  ECEE  F0AB         	call	__fat_offset_from_cluster	;wreg free
 17326  01325C  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 17327  013260  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 17328                           
 17329                           ;fat16.c: 201: if(sector != sector_in_buffer)
 17330  013264  0100               	movlb	0	; () banked
 17331  013266  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 17332  013268  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 17333  01326A  E104               	bnz	u12630
 17334  01326C  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 17335  01326E  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 17336  013270  B4D8               	btfsc	status,2,c
 17337  013272  D00A               	goto	l1769
 17338  013274                     u12630:
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 17342  013274  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 17343  013278  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 17344  01327C  0E00               	movlw	low _buffer
 17345  01327E  6F89               	movwf	flash_sector_read@data& (0+255),b
 17346  013280  0E0A               	movlw	high _buffer
 17347  013282  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17348  013284  EC00  F0AB         	call	_flash_sector_read	;wreg free
 17349  013288                     l1769:
 17350                           
 17351                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 17352  013288  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 17353  01328C  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 17354  013290  0E00               	movlw	low _buffer
 17355  013292  0100               	movlb	0	; () banked
 17356  013294  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 17357  013296  0E0A               	movlw	high _buffer
 17358  013298  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 17359  01329A  EC06  F0A7         	call	__read_value_from_offset	;wreg free
 17360  01329E  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 17361  0132A2  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 17362  0132A6                     l1767:
 17363  0132A6  0100               	movlb	0	; () banked
 17364  0132A8  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 17365  0132AA  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17366  0132AC  A4D8               	btfss	status,2,c
 17367  0132AE  D7C6               	goto	l1768
 17368                           
 17369                           ; BSR set to: 0
 17370                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 17371  0132B0  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 17372  0132B4  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 17373  0132B8  0012               	return		;funcret
 17374  0132BA                     __end_of__find_nth_cluster:
 17375                           	opt stack 0
 17376                           tblptru	equ	0xFF8
 17377                           tblptrh	equ	0xFF7
 17378                           tblptrl	equ	0xFF6
 17379                           tablat	equ	0xFF5
 17380                           prodh	equ	0xFF4
 17381                           prodl	equ	0xFF3
 17382                           postinc0	equ	0xFEE
 17383                           wreg	equ	0xFE8
 17384                           postdec1	equ	0xFE5
 17385                           plusw1	equ	0xFE3
 17386                           fsr1h	equ	0xFE2
 17387                           fsr1l	equ	0xFE1
 17388                           indf2	equ	0xFDF
 17389                           postinc2	equ	0xFDE
 17390                           postdec2	equ	0xFDD
 17391                           plusw2	equ	0xFDB
 17392                           fsr2h	equ	0xFDA
 17393                           fsr2l	equ	0xFD9
 17394                           status	equ	0xFD8
 17395                           
 17396 ;; *************** function __read_value_from_offset *****************
 17397 ;; Defined at:
 17398 ;;		line 114 in file "fat16.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  offset          2    0[BANK0 ] unsigned int 
 17401 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 17402 ;;		 -> buffer(512), 
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;  value           2    7[BANK0 ] unsigned int 
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  2    0[BANK0 ] unsigned int 
 17407 ;; Registers used:
 17408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17414 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17415 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17416 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17417 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17418 ;;Total ram usage:        9 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:   10
 17421 ;; This function calls:
 17422 ;;		Nothing
 17423 ;; This function is called by:
 17424 ;;		__find_nth_cluster
 17425 ;;		__make_cluster_chain
 17426 ;; This function uses a non-reentrant model
 17427 ;;
 17428                           
 17429                           	psect	text64
 17430  014E0C                     __ptext64:
 17431                           	opt stack 0
 17432  014E0C                     __read_value_from_offset:
 17433                           	opt stack 16
 17434                           
 17435                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 17436                           
 17437                           ;incstack = 0
 17438  014E0C  0E01               	movlw	1
 17439  014E0E  0100               	movlb	0	; () banked
 17440  014E10  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 17441  014E12  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17442  014E14  0E00               	movlw	0
 17443  014E16  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 17444  014E18  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 17445  014E1A  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17446  014E1C  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17447  014E1E  6ED9               	movwf	fsr2l,c
 17448  014E20  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 17449  014E22  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17450  014E24  6EDA               	movwf	fsr2h,c
 17451  014E26  50DF               	movf	indf2,w,c
 17452  014E28  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 17453  014E2A  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 17454  014E2C  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 17455  014E2E  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 17456                           
 17457                           ; BSR set to: 0
 17458                           ;fat16.c: 118: value <<= 8;
 17459  014E30  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 17460  014E32  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 17461  014E34  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;fat16.c: 119: value |= buffer[offset];
 17465  014E36  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 17466  014E38  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17467  014E3A  6ED9               	movwf	fsr2l,c
 17468  014E3C  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 17469  014E3E  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17470  014E40  6EDA               	movwf	fsr2h,c
 17471  014E42  50DF               	movf	indf2,w,c
 17472  014E44  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17473  014E46  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17474  014E48  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 17475                           
 17476                           ; BSR set to: 0
 17477                           ;fat16.c: 120: return value;
 17478  014E4A  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 17479  014E4E  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 17480  014E52  0012               	return	
 17481  014E54                     __end_of__read_value_from_offset:
 17482                           	opt stack 0
 17483                           tblptru	equ	0xFF8
 17484                           tblptrh	equ	0xFF7
 17485                           tblptrl	equ	0xFF6
 17486                           tablat	equ	0xFF5
 17487                           prodh	equ	0xFF4
 17488                           prodl	equ	0xFF3
 17489                           postinc0	equ	0xFEE
 17490                           wreg	equ	0xFE8
 17491                           postdec1	equ	0xFE5
 17492                           plusw1	equ	0xFE3
 17493                           fsr1h	equ	0xFE2
 17494                           fsr1l	equ	0xFE1
 17495                           indf2	equ	0xFDF
 17496                           postinc2	equ	0xFDE
 17497                           postdec2	equ	0xFDD
 17498                           plusw2	equ	0xFDB
 17499                           fsr2h	equ	0xFDA
 17500                           fsr2l	equ	0xFD9
 17501                           status	equ	0xFD8
 17502                           
 17503 ;; *************** function __read_fat *****************
 17504 ;; Defined at:
 17505 ;;		line 456 in file "fat16.c"
 17506 ;; Parameters:    Size  Location     Type
 17507 ;;  cluster         2   47[BANK0 ] unsigned int 
 17508 ;; Auto vars:     Size  Location     Type
 17509 ;;  value           2   53[BANK0 ] unsigned int 
 17510 ;;  offset          2   51[BANK0 ] unsigned int 
 17511 ;;  sector          2   49[BANK0 ] unsigned int 
 17512 ;; Return value:  Size  Location     Type
 17513 ;;                  2   47[BANK0 ] unsigned int 
 17514 ;; Registers used:
 17515 ;;		wreg, status,2, status,0, cstack
 17516 ;; Tracked objects:
 17517 ;;		On entry : 0/0
 17518 ;;		On exit  : 0/0
 17519 ;;		Unchanged: 0/0
 17520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17522 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17525 ;;Total ram usage:        8 bytes
 17526 ;; Hardware stack levels used:    1
 17527 ;; Hardware stack levels required when called:   15
 17528 ;; This function calls:
 17529 ;;		__fat_offset_from_cluster
 17530 ;;		__fat_sector_from_cluster
 17531 ;;		_flash_partial_read
 17532 ;; This function is called by:
 17533 ;;		__find_nth_cluster
 17534 ;;		_fat_read_from_file_fast
 17535 ;;		_fat_modify_file
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           	psect	text65
 17540  014746                     __ptext65:
 17541                           	opt stack 0
 17542  014746                     __read_fat:
 17543                           	opt stack 12
 17544                           
 17545                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;incstack = 0
 17549  014746  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 17550  01474A  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 17551  01474E  ECE1  F0AB         	call	__fat_sector_from_cluster	;wreg free
 17552  014752  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 17553  014756  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 17554                           
 17555                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 17556  01475A  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 17557  01475E  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 17558  014762  ECEE  F0AB         	call	__fat_offset_from_cluster	;wreg free
 17559  014766  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 17560  01476A  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 17561                           
 17562                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 17563  01476E  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 17564  014772  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 17565  014776  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 17566  01477A  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17567  01477E  0E00               	movlw	0
 17568  014780  0100               	movlb	0	; () banked
 17569  014782  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17570  014784  0E02               	movlw	2
 17571  014786  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17572  014788  0E95               	movlw	low __read_fat@value
 17573  01478A  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17574  01478C  0E00               	movlw	high __read_fat@value
 17575  01478E  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17576  014790  EC14  F0AB         	call	_flash_partial_read	;wreg free
 17577                           
 17578                           ;fat16.c: 470: return value;
 17579  014794  C095  F08F         	movff	__read_fat@value,?__read_fat
 17580  014798  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 17581  01479C  0012               	return	
 17582  01479E                     __end_of__read_fat:
 17583                           	opt stack 0
 17584                           tblptru	equ	0xFF8
 17585                           tblptrh	equ	0xFF7
 17586                           tblptrl	equ	0xFF6
 17587                           tablat	equ	0xFF5
 17588                           prodh	equ	0xFF4
 17589                           prodl	equ	0xFF3
 17590                           postinc0	equ	0xFEE
 17591                           wreg	equ	0xFE8
 17592                           postdec1	equ	0xFE5
 17593                           plusw1	equ	0xFE3
 17594                           fsr1h	equ	0xFE2
 17595                           fsr1l	equ	0xFE1
 17596                           indf2	equ	0xFDF
 17597                           postinc2	equ	0xFDE
 17598                           postdec2	equ	0xFDD
 17599                           plusw2	equ	0xFDB
 17600                           fsr2h	equ	0xFDA
 17601                           fsr2l	equ	0xFD9
 17602                           status	equ	0xFD8
 17603                           
 17604 ;; *************** function __fat_sector_from_cluster *****************
 17605 ;; Defined at:
 17606 ;;		line 75 in file "fat16.c"
 17607 ;; Parameters:    Size  Location     Type
 17608 ;;  cluster         2    0[BANK0 ] unsigned int 
 17609 ;; Auto vars:     Size  Location     Type
 17610 ;;		None
 17611 ;; Return value:  Size  Location     Type
 17612 ;;                  2    0[BANK0 ] unsigned int 
 17613 ;; Registers used:
 17614 ;;		wreg, status,2, status,0
 17615 ;; Tracked objects:
 17616 ;;		On entry : 0/0
 17617 ;;		On exit  : 0/0
 17618 ;;		Unchanged: 0/0
 17619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17620 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17624 ;;Total ram usage:        2 bytes
 17625 ;; Hardware stack levels used:    1
 17626 ;; Hardware stack levels required when called:   10
 17627 ;; This function calls:
 17628 ;;		Nothing
 17629 ;; This function is called by:
 17630 ;;		__find_nth_cluster
 17631 ;;		__make_cluster_chain
 17632 ;;		__read_fat
 17633 ;; This function uses a non-reentrant model
 17634 ;;
 17635                           
 17636                           	psect	text66
 17637  0157C2                     __ptext66:
 17638                           	opt stack 0
 17639  0157C2                     __fat_sector_from_cluster:
 17640                           	opt stack 16
 17641                           
 17642                           ;fat16.c: 77: cluster >>= 8;
 17643                           
 17644                           ;incstack = 0
 17645  0157C2  0100               	movlb	0	; () banked
 17646  0157C4  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17647  0157C6  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17648  0157C8  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17649                           
 17650                           ; BSR set to: 0
 17651                           ;fat16.c: 78: cluster += 2;
 17652  0157CA  0E02               	movlw	2
 17653  0157CC  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17654  0157CE  0E00               	movlw	0
 17655  0157D0  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17656                           
 17657                           ; BSR set to: 0
 17658                           ;fat16.c: 79: return cluster;
 17659  0157D2  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17660  0157D6  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17661  0157DA  0012               	return	
 17662  0157DC                     __end_of__fat_sector_from_cluster:
 17663                           	opt stack 0
 17664                           tblptru	equ	0xFF8
 17665                           tblptrh	equ	0xFF7
 17666                           tblptrl	equ	0xFF6
 17667                           tablat	equ	0xFF5
 17668                           prodh	equ	0xFF4
 17669                           prodl	equ	0xFF3
 17670                           postinc0	equ	0xFEE
 17671                           wreg	equ	0xFE8
 17672                           postdec1	equ	0xFE5
 17673                           plusw1	equ	0xFE3
 17674                           fsr1h	equ	0xFE2
 17675                           fsr1l	equ	0xFE1
 17676                           indf2	equ	0xFDF
 17677                           postinc2	equ	0xFDE
 17678                           postdec2	equ	0xFDD
 17679                           plusw2	equ	0xFDB
 17680                           fsr2h	equ	0xFDA
 17681                           fsr2l	equ	0xFD9
 17682                           status	equ	0xFD8
 17683                           
 17684 ;; *************** function __fat_offset_from_cluster *****************
 17685 ;; Defined at:
 17686 ;;		line 82 in file "fat16.c"
 17687 ;; Parameters:    Size  Location     Type
 17688 ;;  cluster         2    0[BANK0 ] unsigned int 
 17689 ;; Auto vars:     Size  Location     Type
 17690 ;;		None
 17691 ;; Return value:  Size  Location     Type
 17692 ;;                  2    0[BANK0 ] unsigned int 
 17693 ;; Registers used:
 17694 ;;		wreg, status,2, status,0
 17695 ;; Tracked objects:
 17696 ;;		On entry : 0/0
 17697 ;;		On exit  : 0/0
 17698 ;;		Unchanged: 0/0
 17699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17703 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17704 ;;Total ram usage:        2 bytes
 17705 ;; Hardware stack levels used:    1
 17706 ;; Hardware stack levels required when called:   10
 17707 ;; This function calls:
 17708 ;;		Nothing
 17709 ;; This function is called by:
 17710 ;;		__find_nth_cluster
 17711 ;;		__make_cluster_chain
 17712 ;;		__read_fat
 17713 ;; This function uses a non-reentrant model
 17714 ;;
 17715                           
 17716                           	psect	text67
 17717  0157DC                     __ptext67:
 17718                           	opt stack 0
 17719  0157DC                     __fat_offset_from_cluster:
 17720                           	opt stack 16
 17721                           
 17722                           ;fat16.c: 84: cluster &= 0xFF;
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;incstack = 0
 17726  0157DC  0EFF               	movlw	255
 17727  0157DE  0100               	movlb	0	; () banked
 17728  0157E0  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17729  0157E2  0E00               	movlw	0
 17730  0157E4  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;fat16.c: 85: cluster <<= 1;
 17734  0157E6  90D8               	bcf	status,0,c
 17735  0157E8  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17736  0157EA  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;fat16.c: 86: return cluster;
 17740  0157EC  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17741  0157F0  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17742  0157F4  0012               	return	
 17743  0157F6                     __end_of__fat_offset_from_cluster:
 17744                           	opt stack 0
 17745                           tblptru	equ	0xFF8
 17746                           tblptrh	equ	0xFF7
 17747                           tblptrl	equ	0xFF6
 17748                           tablat	equ	0xFF5
 17749                           prodh	equ	0xFF4
 17750                           prodl	equ	0xFF3
 17751                           postinc0	equ	0xFEE
 17752                           wreg	equ	0xFE8
 17753                           postdec1	equ	0xFE5
 17754                           plusw1	equ	0xFE3
 17755                           fsr1h	equ	0xFE2
 17756                           fsr1l	equ	0xFE1
 17757                           indf2	equ	0xFDF
 17758                           postinc2	equ	0xFDE
 17759                           postdec2	equ	0xFDD
 17760                           plusw2	equ	0xFDB
 17761                           fsr2h	equ	0xFDA
 17762                           fsr2l	equ	0xFD9
 17763                           status	equ	0xFD8
 17764                           
 17765 ;; *************** function __data_sector_from_cluster *****************
 17766 ;; Defined at:
 17767 ;;		line 70 in file "fat16.c"
 17768 ;; Parameters:    Size  Location     Type
 17769 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17770 ;; Auto vars:     Size  Location     Type
 17771 ;;		None
 17772 ;; Return value:  Size  Location     Type
 17773 ;;                  2    0[BANK0 ] unsigned int 
 17774 ;; Registers used:
 17775 ;;		wreg, status,2, status,0
 17776 ;; Tracked objects:
 17777 ;;		On entry : 0/0
 17778 ;;		On exit  : 0/0
 17779 ;;		Unchanged: 0/0
 17780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17781 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17784 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17785 ;;Total ram usage:        2 bytes
 17786 ;; Hardware stack levels used:    1
 17787 ;; Hardware stack levels required when called:   10
 17788 ;; This function calls:
 17789 ;;		Nothing
 17790 ;; This function is called by:
 17791 ;;		_fat_read_from_file_fast
 17792 ;;		_fat_modify_file
 17793 ;;		_fat_copy_sector_to_buffer
 17794 ;; This function uses a non-reentrant model
 17795 ;;
 17796                           
 17797                           	psect	text68
 17798  0158A8                     __ptext68:
 17799                           	opt stack 0
 17800  0158A8                     __data_sector_from_cluster:
 17801                           	opt stack 17
 17802                           
 17803                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;incstack = 0
 17807  0158A8  0E24               	movlw	36
 17808  0158AA  0100               	movlb	0	; () banked
 17809  0158AC  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17810  0158AE  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17811  0158B0  0E00               	movlw	0
 17812  0158B2  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17813  0158B4  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17814  0158B6  0012               	return	
 17815  0158B8                     __end_of__data_sector_from_cluster:
 17816                           	opt stack 0
 17817                           tblptru	equ	0xFF8
 17818                           tblptrh	equ	0xFF7
 17819                           tblptrl	equ	0xFF6
 17820                           tablat	equ	0xFF5
 17821                           prodh	equ	0xFF4
 17822                           prodl	equ	0xFF3
 17823                           postinc0	equ	0xFEE
 17824                           wreg	equ	0xFE8
 17825                           postdec1	equ	0xFE5
 17826                           plusw1	equ	0xFE3
 17827                           fsr1h	equ	0xFE2
 17828                           fsr1l	equ	0xFE1
 17829                           indf2	equ	0xFDF
 17830                           postinc2	equ	0xFDE
 17831                           postdec2	equ	0xFDD
 17832                           plusw2	equ	0xFDB
 17833                           fsr2h	equ	0xFDA
 17834                           fsr2l	equ	0xFD9
 17835                           status	equ	0xFD8
 17836                           
 17837 ;; *************** function _fat_get_file_information *****************
 17838 ;; Defined at:
 17839 ;;		line 1391 in file "fat16.c"
 17840 ;; Parameters:    Size  Location     Type
 17841 ;;  file_number     1    wreg     unsigned char 
 17842 ;;  data            2   47[BANK0 ] PTR struct .
 17843 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17844 ;; Auto vars:     Size  Location     Type
 17845 ;;  file_number     1   54[BANK0 ] unsigned char 
 17846 ;;  offset          2   52[BANK0 ] unsigned int 
 17847 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17848 ;; Return value:  Size  Location     Type
 17849 ;;                  1    wreg      unsigned char 
 17850 ;; Registers used:
 17851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17852 ;; Tracked objects:
 17853 ;;		On entry : 0/0
 17854 ;;		On exit  : 0/0
 17855 ;;		Unchanged: 0/0
 17856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17858 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17860 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17861 ;;Total ram usage:        8 bytes
 17862 ;; Hardware stack levels used:    1
 17863 ;; Hardware stack levels required when called:   15
 17864 ;; This function calls:
 17865 ;;		__offset_from_file_number
 17866 ;;		__sector_from_file_number
 17867 ;;		_flash_partial_read
 17868 ;; This function is called by:
 17869 ;;		_fat_read_from_file
 17870 ;;		_fat_resize_file
 17871 ;;		_fat_modify_file
 17872 ;;		_fat_rename_file
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           	psect	text69
 17877  013C18                     __ptext69:
 17878                           	opt stack 0
 17879  013C18                     _fat_get_file_information:
 17880                           	opt stack 12
 17881                           
 17882                           ; BSR set to: 0
 17883                           ;incstack = 0
 17884                           ;fat_get_file_information@file_number stored from wreg
 17885  013C18  0100               	movlb	0	; () banked
 17886  013C1A  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17887                           
 17888                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 17889  013C1C  0E3F               	movlw	63
 17890  013C1E  0100               	movlb	0	; () banked
 17891  013C20  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17892  013C22  D002               	goto	l2078
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 17896  013C24  0E01               	movlw	1
 17897                           
 17898                           ; BSR set to: 0
 17899  013C26  0012               	return	
 17900  013C28                     l2078:
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 17904                           
 17905                           ; BSR set to: 0
 17906  013C28  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17907  013C2A  ECA0  F0A9         	call	__sector_from_file_number
 17908  013C2E  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17909  013C32  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17910                           
 17911                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 17912  013C36  0100               	movlb	0	; () banked
 17913  013C38  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17914  013C3A  ECAF  F0AA         	call	__offset_from_file_number
 17915  013C3E  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17916  013C42  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17917                           
 17918                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17919  013C46  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17920  013C4A  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17921  013C4E  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17922  013C52  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17923  013C56  0E00               	movlw	0
 17924  013C58  0100               	movlb	0	; () banked
 17925  013C5A  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17926  013C5C  0E20               	movlw	32
 17927  013C5E  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17928  013C60  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17929  013C64  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17930  013C68  EC14  F0AB         	call	_flash_partial_read	;wreg free
 17931                           
 17932                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17933  013C6C  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17934  013C70  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17935  013C74  50DF               	movf	indf2,w,c
 17936  013C76  B4D8               	btfsc	status,2,c
 17937  013C78  D008               	goto	u13430
 17938  013C7A  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17939  013C7E  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17940  013C82  0EE5               	movlw	229
 17941  013C84  18DE               	xorwf	postinc2,w,c
 17942  013C86  A4D8               	btfss	status,2,c
 17943  013C88  D002               	goto	l2080
 17944  013C8A                     u13430:
 17945                           
 17946                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 17947  013C8A  0E02               	movlw	2
 17948  013C8C  0012               	return	
 17949  013C8E                     l2080:
 17950                           
 17951                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 17952  013C8E  0E00               	movlw	0
 17953  013C90  0012               	return	
 17954  013C92                     __end_of_fat_get_file_information:
 17955                           	opt stack 0
 17956                           tblptru	equ	0xFF8
 17957                           tblptrh	equ	0xFF7
 17958                           tblptrl	equ	0xFF6
 17959                           tablat	equ	0xFF5
 17960                           prodh	equ	0xFF4
 17961                           prodl	equ	0xFF3
 17962                           postinc0	equ	0xFEE
 17963                           wreg	equ	0xFE8
 17964                           postdec1	equ	0xFE5
 17965                           plusw1	equ	0xFE3
 17966                           fsr1h	equ	0xFE2
 17967                           fsr1l	equ	0xFE1
 17968                           indf2	equ	0xFDF
 17969                           postinc2	equ	0xFDE
 17970                           postdec2	equ	0xFDD
 17971                           plusw2	equ	0xFDB
 17972                           fsr2h	equ	0xFDA
 17973                           fsr2l	equ	0xFD9
 17974                           status	equ	0xFD8
 17975                           
 17976 ;; *************** function _fat_get_file_size *****************
 17977 ;; Defined at:
 17978 ;;		line 562 in file "fat16.c"
 17979 ;; Parameters:    Size  Location     Type
 17980 ;;  file_number     1    wreg     unsigned char 
 17981 ;; Auto vars:     Size  Location     Type
 17982 ;;  file_number     1   65[BANK0 ] unsigned char 
 17983 ;;  file_size       4   61[BANK0 ] unsigned long 
 17984 ;;  offset          2   59[BANK0 ] unsigned int 
 17985 ;;  sector          2   57[BANK0 ] unsigned int 
 17986 ;; Return value:  Size  Location     Type
 17987 ;;                  4   53[BANK0 ] unsigned long 
 17988 ;; Registers used:
 17989 ;;		wreg, status,2, status,0, cstack
 17990 ;; Tracked objects:
 17991 ;;		On entry : 0/0
 17992 ;;		On exit  : 0/0
 17993 ;;		Unchanged: 0/0
 17994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17995 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17996 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17998 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17999 ;;Total ram usage:       13 bytes
 18000 ;; Hardware stack levels used:    1
 18001 ;; Hardware stack levels required when called:   16
 18002 ;; This function calls:
 18003 ;;		__offset_from_file_number
 18004 ;;		__root_is_available
 18005 ;;		__sector_from_file_number
 18006 ;;		_flash_partial_read
 18007 ;; This function is called by:
 18008 ;;		_configFile_read
 18009 ;;		_fat_append_to_file
 18010 ;;		_fat_copy_file
 18011 ;;		_fat_copy_sector_to_buffer
 18012 ;;		_fat_write_sector_from_buffer
 18013 ;; This function uses a non-reentrant model
 18014 ;;
 18015                           
 18016                           	psect	text70
 18017  013C92                     __ptext70:
 18018                           	opt stack 0
 18019  013C92                     _fat_get_file_size:
 18020                           	opt stack 12
 18021                           
 18022                           ;incstack = 0
 18023                           ;fat_get_file_size@file_number stored from wreg
 18024  013C92  0100               	movlb	0	; () banked
 18025  013C94  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 18026                           
 18027                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 18028  013C96  0100               	movlb	0	; () banked
 18029  013C98  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18030  013C9A  EC12  F0A0         	call	__root_is_available
 18031  013C9E  0900               	iorlw	0
 18032  013CA0  B4D8               	btfsc	status,2,c
 18033  013CA2  D006               	goto	l1845
 18034                           
 18035                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 18036  013CA4  0100               	movlb	0	; () banked
 18037  013CA6  6995               	setf	?_fat_get_file_size& (0+255),b
 18038  013CA8  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 18039  013CAA  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 18040  013CAC  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 18041  013CAE  0012               	return	
 18042  013CB0                     l1845:
 18043                           
 18044                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 18045                           
 18046                           ; BSR set to: 0
 18047  013CB0  0100               	movlb	0	; () banked
 18048  013CB2  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18049  013CB4  ECA0  F0A9         	call	__sector_from_file_number
 18050  013CB8  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 18051  013CBC  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 18052                           
 18053                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 18054  013CC0  0100               	movlb	0	; () banked
 18055  013CC2  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18056  013CC4  ECAF  F0AA         	call	__offset_from_file_number
 18057  013CC8  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 18058  013CCC  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 18059                           
 18060                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 18061  013CD0  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 18062  013CD4  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 18063  013CD8  0E1C               	movlw	28
 18064  013CDA  0100               	movlb	0	; () banked
 18065  013CDC  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 18066  013CDE  6F89               	movwf	flash_partial_read@start& (0+255),b
 18067  013CE0  0E00               	movlw	0
 18068  013CE2  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 18069  013CE4  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 18070  013CE6  0E00               	movlw	0
 18071  013CE8  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18072  013CEA  0E04               	movlw	4
 18073  013CEC  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18074  013CEE  0E9D               	movlw	low fat_get_file_size@file_size
 18075  013CF0  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18076  013CF2  0E00               	movlw	high fat_get_file_size@file_size
 18077  013CF4  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18078  013CF6  EC14  F0AB         	call	_flash_partial_read	;wreg free
 18079                           
 18080                           ;fat16.c: 583: return file_size;
 18081  013CFA  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 18082  013CFE  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 18083  013D02  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 18084  013D06  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 18085  013D0A  0012               	return	
 18086  013D0C                     __end_of_fat_get_file_size:
 18087                           	opt stack 0
 18088                           tblptru	equ	0xFF8
 18089                           tblptrh	equ	0xFF7
 18090                           tblptrl	equ	0xFF6
 18091                           tablat	equ	0xFF5
 18092                           prodh	equ	0xFF4
 18093                           prodl	equ	0xFF3
 18094                           postinc0	equ	0xFEE
 18095                           wreg	equ	0xFE8
 18096                           postdec1	equ	0xFE5
 18097                           plusw1	equ	0xFE3
 18098                           fsr1h	equ	0xFE2
 18099                           fsr1l	equ	0xFE1
 18100                           indf2	equ	0xFDF
 18101                           postinc2	equ	0xFDE
 18102                           postdec2	equ	0xFDD
 18103                           plusw2	equ	0xFDB
 18104                           fsr2h	equ	0xFDA
 18105                           fsr2l	equ	0xFD9
 18106                           status	equ	0xFD8
 18107                           
 18108 ;; *************** function __root_is_available *****************
 18109 ;; Defined at:
 18110 ;;		line 408 in file "fat16.c"
 18111 ;; Parameters:    Size  Location     Type
 18112 ;;  file_number     1    wreg     unsigned char 
 18113 ;; Auto vars:     Size  Location     Type
 18114 ;;  file_number     1   51[BANK0 ] unsigned char 
 18115 ;;  offset          2   49[BANK0 ] unsigned int 
 18116 ;;  root_sector     2   47[BANK0 ] unsigned int 
 18117 ;;  first_byte      1   52[BANK0 ] unsigned char 
 18118 ;; Return value:  Size  Location     Type
 18119 ;;                  1    wreg      unsigned char 
 18120 ;; Registers used:
 18121 ;;		wreg, status,2, status,0, cstack
 18122 ;; Tracked objects:
 18123 ;;		On entry : 0/0
 18124 ;;		On exit  : 0/0
 18125 ;;		Unchanged: 0/0
 18126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18128 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18130 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18131 ;;Total ram usage:        6 bytes
 18132 ;; Hardware stack levels used:    1
 18133 ;; Hardware stack levels required when called:   15
 18134 ;; This function calls:
 18135 ;;		__offset_from_file_number
 18136 ;;		__sector_from_file_number
 18137 ;;		_flash_partial_read
 18138 ;; This function is called by:
 18139 ;;		__get_available_root_entry
 18140 ;;		_fat_get_file_size
 18141 ;;		_fat_resize_file
 18142 ;;		_fat_delete_file
 18143 ;;		_fat_append_to_file
 18144 ;;		_fat_copy_file
 18145 ;;		_fat_copy_sector_to_buffer
 18146 ;;		_fat_write_sector_from_buffer
 18147 ;; This function uses a non-reentrant model
 18148 ;;
 18149                           
 18150                           	psect	text71
 18151  014024                     __ptext71:
 18152                           	opt stack 0
 18153  014024                     __root_is_available:
 18154                           	opt stack 12
 18155                           
 18156                           ;incstack = 0
 18157                           ;__root_is_available@file_number stored from wreg
 18158  014024  0100               	movlb	0	; () banked
 18159  014026  6F93               	movwf	__root_is_available@file_number& (0+255),b
 18160                           
 18161                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 18162  014028  0E3F               	movlw	63
 18163  01402A  0100               	movlb	0	; () banked
 18164  01402C  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 18165  01402E  D002               	goto	l1806
 18166                           
 18167                           ; BSR set to: 0
 18168                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 18169  014030  0E00               	movlw	0
 18170                           
 18171                           ; BSR set to: 0
 18172  014032  0012               	return	
 18173  014034                     l1806:
 18174                           
 18175                           ; BSR set to: 0
 18176                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 18177                           
 18178                           ; BSR set to: 0
 18179  014034  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18180  014036  ECA0  F0A9         	call	__sector_from_file_number
 18181  01403A  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 18182  01403E  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 18183                           
 18184                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 18185  014042  0100               	movlb	0	; () banked
 18186  014044  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18187  014046  ECAF  F0AA         	call	__offset_from_file_number
 18188  01404A  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 18189  01404E  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 18190                           
 18191                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 18192  014052  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 18193  014056  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 18194  01405A  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 18195  01405E  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 18196  014062  0E00               	movlw	0
 18197  014064  0100               	movlb	0	; () banked
 18198  014066  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18199  014068  0E01               	movlw	1
 18200  01406A  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18201  01406C  0E94               	movlw	low __root_is_available@first_byte
 18202  01406E  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18203  014070  0E00               	movlw	high __root_is_available@first_byte
 18204  014072  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18205  014074  EC14  F0AB         	call	_flash_partial_read	;wreg free
 18206                           
 18207                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 18208  014078  0100               	movlb	0	; () banked
 18209  01407A  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 18210  01407C  B4D8               	btfsc	status,2,c
 18211  01407E  D004               	goto	u12670
 18212                           
 18213                           ; BSR set to: 0
 18214  014080  0EE5               	movlw	229
 18215  014082  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 18216  014084  A4D8               	btfss	status,2,c
 18217  014086  D002               	goto	l1808
 18218  014088                     u12670:
 18219                           
 18220                           ; BSR set to: 0
 18221                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 18222                           
 18223                           ; BSR set to: 0
 18224  014088  0E01               	movlw	1
 18225                           
 18226                           ; BSR set to: 0
 18227                           ;fat16.c: 434: }
 18228                           
 18229                           ; BSR set to: 0
 18230  01408A  0012               	return	
 18231  01408C                     l1808:
 18232                           
 18233                           ; BSR set to: 0
 18234                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 18235                           
 18236                           ; BSR set to: 0
 18237  01408C  0E00               	movlw	0
 18238                           
 18239                           ; BSR set to: 0
 18240  01408E  0012               	return	
 18241  014090                     __end_of__root_is_available:
 18242                           	opt stack 0
 18243                           tblptru	equ	0xFF8
 18244                           tblptrh	equ	0xFF7
 18245                           tblptrl	equ	0xFF6
 18246                           tablat	equ	0xFF5
 18247                           prodh	equ	0xFF4
 18248                           prodl	equ	0xFF3
 18249                           postinc0	equ	0xFEE
 18250                           wreg	equ	0xFE8
 18251                           postdec1	equ	0xFE5
 18252                           plusw1	equ	0xFE3
 18253                           fsr1h	equ	0xFE2
 18254                           fsr1l	equ	0xFE1
 18255                           indf2	equ	0xFDF
 18256                           postinc2	equ	0xFDE
 18257                           postdec2	equ	0xFDD
 18258                           plusw2	equ	0xFDB
 18259                           fsr2h	equ	0xFDA
 18260                           fsr2l	equ	0xFD9
 18261                           status	equ	0xFD8
 18262                           
 18263 ;; *************** function _flash_partial_read *****************
 18264 ;; Defined at:
 18265 ;;		line 452 in file "flash.c"
 18266 ;; Parameters:    Size  Location     Type
 18267 ;;  page            2   39[BANK0 ] unsigned int 
 18268 ;;  start           2   41[BANK0 ] unsigned int 
 18269 ;;  length          2   43[BANK0 ] unsigned int 
 18270 ;;  data            2   45[BANK0 ] PTR unsigned char 
 18271 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 18272 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 18273 ;;		 -> _root_is_available@first_byte(1), 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;		None
 18276 ;; Return value:  Size  Location     Type
 18277 ;;                  1    wreg      void 
 18278 ;; Registers used:
 18279 ;;		wreg, status,2, status,0, cstack
 18280 ;; Tracked objects:
 18281 ;;		On entry : 0/0
 18282 ;;		On exit  : 0/0
 18283 ;;		Unchanged: 0/0
 18284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18288 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18289 ;;Total ram usage:        8 bytes
 18290 ;; Hardware stack levels used:    1
 18291 ;; Hardware stack levels required when called:   14
 18292 ;; This function calls:
 18293 ;;		__flash_partial_read
 18294 ;; This function is called by:
 18295 ;;		__root_is_available
 18296 ;;		__read_fat
 18297 ;;		_fat_get_file_size
 18298 ;;		_fat_read_from_file_fast
 18299 ;;		_fat_get_file_information
 18300 ;;		__get_first_cluster
 18301 ;; This function uses a non-reentrant model
 18302 ;;
 18303                           
 18304                           	psect	text72
 18305  015628                     __ptext72:
 18306                           	opt stack 0
 18307  015628                     _flash_partial_read:
 18308                           	opt stack 12
 18309                           
 18310                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 18311                           
 18312                           ; BSR set to: 0
 18313                           ;incstack = 0
 18314  015628  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 18315  01562C  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 18316  015630  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 18317  015634  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 18318  015638  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 18319  01563C  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 18320  015640  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 18321  015644  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 18322  015648  EC86  F09E         	call	__flash_partial_read	;wreg free
 18323  01564C  0012               	return		;funcret
 18324  01564E                     __end_of_flash_partial_read:
 18325                           	opt stack 0
 18326                           tblptru	equ	0xFF8
 18327                           tblptrh	equ	0xFF7
 18328                           tblptrl	equ	0xFF6
 18329                           tablat	equ	0xFF5
 18330                           prodh	equ	0xFF4
 18331                           prodl	equ	0xFF3
 18332                           postinc0	equ	0xFEE
 18333                           wreg	equ	0xFE8
 18334                           postdec1	equ	0xFE5
 18335                           plusw1	equ	0xFE3
 18336                           fsr1h	equ	0xFE2
 18337                           fsr1l	equ	0xFE1
 18338                           indf2	equ	0xFDF
 18339                           postinc2	equ	0xFDE
 18340                           postdec2	equ	0xFDD
 18341                           plusw2	equ	0xFDB
 18342                           fsr2h	equ	0xFDA
 18343                           fsr2l	equ	0xFD9
 18344                           status	equ	0xFD8
 18345                           
 18346 ;; *************** function __sector_from_file_number *****************
 18347 ;; Defined at:
 18348 ;;		line 52 in file "fat16.c"
 18349 ;; Parameters:    Size  Location     Type
 18350 ;;  file_number     1    wreg     unsigned char 
 18351 ;; Auto vars:     Size  Location     Type
 18352 ;;  file_number     1    2[BANK0 ] unsigned char 
 18353 ;;  sector          2    3[BANK0 ] unsigned int 
 18354 ;; Return value:  Size  Location     Type
 18355 ;;                  2    0[BANK0 ] unsigned int 
 18356 ;; Registers used:
 18357 ;;		wreg, status,2, status,0
 18358 ;; Tracked objects:
 18359 ;;		On entry : 0/0
 18360 ;;		On exit  : 0/0
 18361 ;;		Unchanged: 0/0
 18362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18364 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18366 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18367 ;;Total ram usage:        5 bytes
 18368 ;; Hardware stack levels used:    1
 18369 ;; Hardware stack levels required when called:   10
 18370 ;; This function calls:
 18371 ;;		Nothing
 18372 ;; This function is called by:
 18373 ;;		__root_is_available
 18374 ;;		__write_root
 18375 ;;		_fat_get_file_size
 18376 ;;		_fat_get_file_information
 18377 ;;		__delete_root
 18378 ;;		__get_first_cluster
 18379 ;; This function uses a non-reentrant model
 18380 ;;
 18381                           
 18382                           	psect	text73
 18383  015340                     __ptext73:
 18384                           	opt stack 0
 18385  015340                     __sector_from_file_number:
 18386                           	opt stack 16
 18387                           
 18388                           ;incstack = 0
 18389                           ;__sector_from_file_number@file_number stored from wreg
 18390  015340  0100               	movlb	0	; () banked
 18391  015342  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 18392                           
 18393                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 18394  015344  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 18395  015348  0100               	movlb	0	; () banked
 18396  01534A  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;fat16.c: 56: sector >>= 4;
 18400  01534C  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 18401  01534E  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18402  015350  0E0F               	movlw	15
 18403  015352  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 18404  015354  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 18405  015356  0BF0               	andlw	240
 18406  015358  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 18407  01535A  0E0F               	movlw	15
 18408  01535C  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18409                           
 18410                           ; BSR set to: 0
 18411                           ;fat16.c: 57: sector += 34;
 18412  01535E  0E22               	movlw	34
 18413  015360  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 18414  015362  0E00               	movlw	0
 18415  015364  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;fat16.c: 58: return sector;
 18419  015366  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 18420  01536A  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 18421  01536E  0012               	return	
 18422  015370                     __end_of__sector_from_file_number:
 18423                           	opt stack 0
 18424                           tblptru	equ	0xFF8
 18425                           tblptrh	equ	0xFF7
 18426                           tblptrl	equ	0xFF6
 18427                           tablat	equ	0xFF5
 18428                           prodh	equ	0xFF4
 18429                           prodl	equ	0xFF3
 18430                           postinc0	equ	0xFEE
 18431                           wreg	equ	0xFE8
 18432                           postdec1	equ	0xFE5
 18433                           plusw1	equ	0xFE3
 18434                           fsr1h	equ	0xFE2
 18435                           fsr1l	equ	0xFE1
 18436                           indf2	equ	0xFDF
 18437                           postinc2	equ	0xFDE
 18438                           postdec2	equ	0xFDD
 18439                           plusw2	equ	0xFDB
 18440                           fsr2h	equ	0xFDA
 18441                           fsr2l	equ	0xFD9
 18442                           status	equ	0xFD8
 18443                           
 18444 ;; *************** function __offset_from_file_number *****************
 18445 ;; Defined at:
 18446 ;;		line 61 in file "fat16.c"
 18447 ;; Parameters:    Size  Location     Type
 18448 ;;  file_number     1    wreg     unsigned char 
 18449 ;; Auto vars:     Size  Location     Type
 18450 ;;  file_number     1    2[BANK0 ] unsigned char 
 18451 ;;  offset          2    3[BANK0 ] unsigned int 
 18452 ;; Return value:  Size  Location     Type
 18453 ;;                  2    0[BANK0 ] unsigned int 
 18454 ;; Registers used:
 18455 ;;		wreg, status,2, status,0
 18456 ;; Tracked objects:
 18457 ;;		On entry : 0/0
 18458 ;;		On exit  : 0/0
 18459 ;;		Unchanged: 0/0
 18460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18461 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18462 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18464 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18465 ;;Total ram usage:        5 bytes
 18466 ;; Hardware stack levels used:    1
 18467 ;; Hardware stack levels required when called:   10
 18468 ;; This function calls:
 18469 ;;		Nothing
 18470 ;; This function is called by:
 18471 ;;		__root_is_available
 18472 ;;		__write_root
 18473 ;;		_fat_get_file_size
 18474 ;;		_fat_get_file_information
 18475 ;;		__delete_root
 18476 ;;		__get_first_cluster
 18477 ;; This function uses a non-reentrant model
 18478 ;;
 18479                           
 18480                           	psect	text74
 18481  01555E                     __ptext74:
 18482                           	opt stack 0
 18483  01555E                     __offset_from_file_number:
 18484                           	opt stack 16
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;incstack = 0
 18488                           ;__offset_from_file_number@file_number stored from wreg
 18489  01555E  0100               	movlb	0	; () banked
 18490  015560  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 18491                           
 18492                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 18493  015562  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 18494  015566  0100               	movlb	0	; () banked
 18495  015568  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;fat16.c: 65: offset &= 0b1111;
 18499  01556A  0E0F               	movlw	15
 18500  01556C  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 18501  01556E  0E00               	movlw	0
 18502  015570  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18503                           
 18504                           ; BSR set to: 0
 18505                           ;fat16.c: 66: offset <<= 5;
 18506  015572  0E05               	movlw	5
 18507  015574                     u11595:
 18508  015574  90D8               	bcf	status,0,c
 18509  015576  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 18510  015578  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18511  01557A  2EE8               	decfsz	wreg,f,c
 18512  01557C  D7FB               	goto	u11595
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;fat16.c: 67: return offset;
 18516  01557E  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 18517  015582  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 18518  015586  0012               	return	
 18519  015588                     __end_of__offset_from_file_number:
 18520                           	opt stack 0
 18521                           tblptru	equ	0xFF8
 18522                           tblptrh	equ	0xFF7
 18523                           tblptrl	equ	0xFF6
 18524                           tablat	equ	0xFF5
 18525                           prodh	equ	0xFF4
 18526                           prodl	equ	0xFF3
 18527                           postinc0	equ	0xFEE
 18528                           wreg	equ	0xFE8
 18529                           postdec1	equ	0xFE5
 18530                           plusw1	equ	0xFE3
 18531                           fsr1h	equ	0xFE2
 18532                           fsr1l	equ	0xFE1
 18533                           indf2	equ	0xFDF
 18534                           postinc2	equ	0xFDE
 18535                           postdec2	equ	0xFDD
 18536                           plusw2	equ	0xFDB
 18537                           fsr2h	equ	0xFDA
 18538                           fsr2l	equ	0xFD9
 18539                           status	equ	0xFD8
 18540                           
 18541 ;; *************** function _fat_find_file *****************
 18542 ;; Defined at:
 18543 ;;		line 517 in file "fat16.c"
 18544 ;; Parameters:    Size  Location     Type
 18545 ;;  name            2   43[BANK0 ] PTR unsigned char 
 18546 ;;		 -> configFile_used_name(8), configFile_name(8), 
 18547 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 18548 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 18549 ;; Auto vars:     Size  Location     Type
 18550 ;;  offset          2   52[BANK0 ] unsigned int 
 18551 ;;  sector          2   50[BANK0 ] unsigned int 
 18552 ;;  file_number     1   49[BANK0 ] unsigned char 
 18553 ;; Return value:  Size  Location     Type
 18554 ;;                  1    wreg      unsigned char 
 18555 ;; Registers used:
 18556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18557 ;; Tracked objects:
 18558 ;;		On entry : 0/0
 18559 ;;		On exit  : 0/0
 18560 ;;		Unchanged: 0/0
 18561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18563 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18564 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18565 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18566 ;;Total ram usage:       11 bytes
 18567 ;; Hardware stack levels used:    1
 18568 ;; Hardware stack levels required when called:   15
 18569 ;; This function calls:
 18570 ;;		_flash_sector_read
 18571 ;;		_strncmp
 18572 ;; This function is called by:
 18573 ;;		_fat_create_file
 18574 ;;		_configFile_read
 18575 ;;		_configFile_write
 18576 ;; This function uses a non-reentrant model
 18577 ;;
 18578                           
 18579                           	psect	text75
 18580  011A90                     __ptext75:
 18581                           	opt stack 0
 18582  011A90                     _fat_find_file:
 18583                           	opt stack 13
 18584                           
 18585                           ;fat16.c: 519: uint8_t file_number = 0;
 18586                           
 18587                           ; BSR set to: 0
 18588                           ;incstack = 0
 18589  011A90  0E00               	movlw	0
 18590  011A92  0100               	movlb	0	; () banked
 18591  011A94  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18592                           
 18593                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18594  011A96  0E00               	movlw	0
 18595  011A98  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18596  011A9A  0E22               	movlw	34
 18597  011A9C  6F92               	movwf	fat_find_file@sector& (0+255),b
 18598                           
 18599                           ; BSR set to: 0
 18600  011A9E  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18601  011AA0  E169               	bnz	l1833
 18602  011AA2  0E26               	movlw	38
 18603  011AA4  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18604  011AA6  B0D8               	btfsc	status,0,c
 18605  011AA8  D065               	goto	u13400
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 18609                           
 18610                           ; BSR set to: 0
 18611                           
 18612                           ; BSR set to: 0
 18613  011AAA  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18614  011AAE  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18615  011AB2  0E00               	movlw	low _buffer
 18616  011AB4  6F89               	movwf	flash_sector_read@data& (0+255),b
 18617  011AB6  0E0A               	movlw	high _buffer
 18618  011AB8  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18619  011ABA  EC00  F0AB         	call	_flash_sector_read	;wreg free
 18620                           
 18621                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 18622  011ABE  0E00               	movlw	0
 18623  011AC0  0100               	movlb	0	; () banked
 18624  011AC2  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18625  011AC4  0E00               	movlw	0
 18626  011AC6  6F94               	movwf	fat_find_file@offset& (0+255),b
 18627  011AC8                     l14384:
 18628                           
 18629                           ; BSR set to: 0
 18630  011AC8  0E02               	movlw	2
 18631  011ACA  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18632  011ACC  B0D8               	btfsc	status,0,c
 18633  011ACE  D04D               	goto	u13390
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 18637                           
 18638                           ; BSR set to: 0
 18639                           
 18640                           ; BSR set to: 0
 18641  011AD0  0E00               	movlw	low _buffer
 18642  011AD2  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18643  011AD4  6ED9               	movwf	fsr2l,c
 18644  011AD6  0E0A               	movlw	high _buffer
 18645  011AD8  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18646  011ADA  6EDA               	movwf	fsr2h,c
 18647  011ADC  50DF               	movf	indf2,w,c
 18648  011ADE  A4D8               	btfss	status,2,c
 18649  011AE0  D002               	goto	l1836
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 18653  011AE2  0EFF               	movlw	255
 18654                           
 18655                           ; BSR set to: 0
 18656  011AE4  0012               	return	
 18657  011AE6                     l1836:
 18658                           
 18659                           ; BSR set to: 0
 18660                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 18661                           
 18662                           ; BSR set to: 0
 18663  011AE6  0E00               	movlw	low _buffer
 18664  011AE8  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18665  011AEA  6ED9               	movwf	fsr2l,c
 18666  011AEC  0E0A               	movlw	high _buffer
 18667  011AEE  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18668  011AF0  6EDA               	movwf	fsr2h,c
 18669  011AF2  0EE5               	movlw	229
 18670  011AF4  18DE               	xorwf	postinc2,w,c
 18671  011AF6  B4D8               	btfsc	status,2,c
 18672  011AF8  D032               	goto	l1842
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18676                           
 18677                           ; BSR set to: 0
 18678                           
 18679                           ; BSR set to: 0
 18680                           ;fat16.c: 537: {;fat16.c: 541: }
 18681  011AFA  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18682  011AFE  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18683  011B02  0E00               	movlw	low _buffer
 18684  011B04  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18685  011B06  6F62               	movwf	strncmp@s2& (0+255),b
 18686  011B08  0E0A               	movlw	high _buffer
 18687  011B0A  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18688  011B0C  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18689  011B0E  0E00               	movlw	0
 18690  011B10  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18691  011B12  0E08               	movlw	8
 18692  011B14  6F64               	movwf	strncmp@len& (0+255),b
 18693  011B16  EC50  F09D         	call	_strncmp	;wreg free
 18694  011B1A  0100               	movlb	0	; () banked
 18695  011B1C  5160               	movf	?_strncmp& (0+255),w,b
 18696  011B1E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18697  011B20  A4D8               	btfss	status,2,c
 18698  011B22  D01D               	goto	l1842
 18699                           
 18700                           ; BSR set to: 0
 18701                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18702  011B24  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18703  011B28  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18704  011B2C  0E08               	movlw	8
 18705  011B2E  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18706  011B30  6F8F               	movwf	??_fat_find_file& (0+255),b
 18707  011B32  0E00               	movlw	0
 18708  011B34  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18709  011B36  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18710  011B38  0E00               	movlw	low _buffer
 18711  011B3A  258F               	addwf	??_fat_find_file& (0+255),w,b
 18712  011B3C  6F62               	movwf	strncmp@s2& (0+255),b
 18713  011B3E  0E0A               	movlw	high _buffer
 18714  011B40  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18715  011B42  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18716  011B44  0E00               	movlw	0
 18717  011B46  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18718  011B48  0E03               	movlw	3
 18719  011B4A  6F64               	movwf	strncmp@len& (0+255),b
 18720  011B4C  EC50  F09D         	call	_strncmp	;wreg free
 18721  011B50  0100               	movlb	0	; () banked
 18722  011B52  5160               	movf	?_strncmp& (0+255),w,b
 18723  011B54  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18724  011B56  A4D8               	btfss	status,2,c
 18725  011B58  D002               	goto	l1842
 18726                           
 18727                           ; BSR set to: 0
 18728                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 18729  011B5A  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18730                           
 18731                           ; BSR set to: 0
 18732  011B5C  0012               	return	
 18733  011B5E                     l1842:
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 18737                           
 18738                           ; BSR set to: 0
 18739                           
 18740                           ; BSR set to: 0
 18741                           
 18742                           ; BSR set to: 0
 18743                           
 18744                           ; BSR set to: 0
 18745  011B5E  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18746                           
 18747                           ; BSR set to: 0
 18748  011B60  0E20               	movlw	32
 18749  011B62  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18750  011B64  0E00               	movlw	0
 18751  011B66  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18752  011B68  D7AF               	goto	l14384
 18753  011B6A                     u13390:
 18754                           
 18755                           ; BSR set to: 0
 18756                           
 18757                           ; BSR set to: 0
 18758  011B6A  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18759  011B6C  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18760                           
 18761                           ; BSR set to: 0
 18762  011B6E  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18763  011B70  E101               	bnz	l14418
 18764  011B72  D797               	goto	L4
 18765  011B74                     u13400:
 18766  011B74                     l1833:
 18767  011B74                     l14418:
 18768                           
 18769                           ; BSR set to: 0
 18770                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 18771  011B74  0EFF               	movlw	255
 18772  011B76  0012               	return	
 18773  011B78                     __end_of_fat_find_file:
 18774                           	opt stack 0
 18775                           tblptru	equ	0xFF8
 18776                           tblptrh	equ	0xFF7
 18777                           tblptrl	equ	0xFF6
 18778                           tablat	equ	0xFF5
 18779                           prodh	equ	0xFF4
 18780                           prodl	equ	0xFF3
 18781                           postinc0	equ	0xFEE
 18782                           wreg	equ	0xFE8
 18783                           postdec1	equ	0xFE5
 18784                           plusw1	equ	0xFE3
 18785                           fsr1h	equ	0xFE2
 18786                           fsr1l	equ	0xFE1
 18787                           indf2	equ	0xFDF
 18788                           postinc2	equ	0xFDE
 18789                           postdec2	equ	0xFDD
 18790                           plusw2	equ	0xFDB
 18791                           fsr2h	equ	0xFDA
 18792                           fsr2l	equ	0xFD9
 18793                           status	equ	0xFD8
 18794                           
 18795 ;; *************** function _strncmp *****************
 18796 ;; Defined at:
 18797 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18798 ;; Parameters:    Size  Location     Type
 18799 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18800 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18801 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18802 ;;		 -> buffer(512), 
 18803 ;;  len             2    4[BANK0 ] unsigned int 
 18804 ;; Auto vars:     Size  Location     Type
 18805 ;;		None
 18806 ;; Return value:  Size  Location     Type
 18807 ;;                  2    0[BANK0 ] int 
 18808 ;; Registers used:
 18809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18810 ;; Tracked objects:
 18811 ;;		On entry : 0/0
 18812 ;;		On exit  : 0/0
 18813 ;;		Unchanged: 0/0
 18814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18815 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18817 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18818 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18819 ;;Total ram usage:        9 bytes
 18820 ;; Hardware stack levels used:    1
 18821 ;; Hardware stack levels required when called:   10
 18822 ;; This function calls:
 18823 ;;		Nothing
 18824 ;; This function is called by:
 18825 ;;		_fat_find_file
 18826 ;; This function uses a non-reentrant model
 18827 ;;
 18828                           
 18829                           	psect	text76
 18830  013AA0                     __ptext76:
 18831                           	opt stack 0
 18832  013AA0                     _strncmp:
 18833                           	opt stack 17
 18834                           
 18835                           ; BSR set to: 0
 18836                           ;incstack = 0
 18837  013AA0  D031               	goto	l3724
 18838  013AA2                     l13828:
 18839  013AA2  C060  FFD9         	movff	strncmp@s1,fsr2l
 18840  013AA6  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18841  013AAA  50DF               	movf	indf2,w,c
 18842  013AAC  B4D8               	btfsc	status,2,c
 18843  013AAE  D00C               	goto	u12690
 18844  013AB0  C062  FFD9         	movff	strncmp@s2,fsr2l
 18845  013AB4  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18846  013AB8  C060  FFE1         	movff	strncmp@s1,fsr1l
 18847  013ABC  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18848  013AC0  50DE               	movf	postinc2,w,c
 18849  013AC2  18E6               	xorwf	postinc1,w,c
 18850  013AC4  B4D8               	btfsc	status,2,c
 18851  013AC6  D019               	goto	l3726
 18852  013AC8                     u12690:
 18853  013AC8  C062  FFD9         	movff	strncmp@s2,fsr2l
 18854  013ACC  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18855  013AD0  50DF               	movf	indf2,w,c
 18856  013AD2  0100               	movlb	0	; () banked
 18857  013AD4  6F66               	movwf	??_strncmp& (0+255),b
 18858  013AD6  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18859  013AD8  1F66               	comf	??_strncmp& (0+255),f,b
 18860  013ADA  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18861  013ADC  4B66               	infsnz	??_strncmp& (0+255),f,b
 18862  013ADE  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18863  013AE0  C060  FFD9         	movff	strncmp@s1,fsr2l
 18864  013AE4  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18865  013AE8  50DF               	movf	indf2,w,c
 18866  013AEA  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18867  013AEC  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18868  013AEE  2566               	addwf	??_strncmp& (0+255),w,b
 18869  013AF0  6F60               	movwf	?_strncmp& (0+255),b
 18870  013AF2  0E00               	movlw	0
 18871  013AF4  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18872  013AF6  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18873                           
 18874                           ; BSR set to: 0
 18875  013AF8  0012               	return	
 18876  013AFA                     l3726:
 18877                           
 18878                           ; BSR set to: 0
 18879  013AFA  0100               	movlb	0	; () banked
 18880  013AFC  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18881  013AFE  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18882  013B00  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18883  013B02  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18884  013B04                     l3724:
 18885                           
 18886                           ; BSR set to: 0
 18887  013B04  0100               	movlb	0	; () banked
 18888  013B06  0764               	decf	strncmp@len& (0+255),f,b
 18889  013B08  A0D8               	btfss	status,0,c
 18890  013B0A  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18891  013B0C  2964               	incf	strncmp@len& (0+255),w,b
 18892  013B0E  E1C9               	bnz	l13828
 18893  013B10  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18894  013B12  A4D8               	btfss	status,2,c
 18895  013B14  D7C6               	goto	l3725
 18896                           
 18897                           ; BSR set to: 0
 18898                           
 18899                           ; BSR set to: 0
 18900  013B16  0E00               	movlw	0
 18901  013B18  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18902  013B1A  0E00               	movlw	0
 18903  013B1C  6F60               	movwf	?_strncmp& (0+255),b
 18904  013B1E  0012               	return	
 18905  013B20                     __end_of_strncmp:
 18906                           	opt stack 0
 18907                           tblptru	equ	0xFF8
 18908                           tblptrh	equ	0xFF7
 18909                           tblptrl	equ	0xFF6
 18910                           tablat	equ	0xFF5
 18911                           prodh	equ	0xFF4
 18912                           prodl	equ	0xFF3
 18913                           postinc0	equ	0xFEE
 18914                           wreg	equ	0xFE8
 18915                           postinc1	equ	0xFE6
 18916                           postdec1	equ	0xFE5
 18917                           plusw1	equ	0xFE3
 18918                           fsr1h	equ	0xFE2
 18919                           fsr1l	equ	0xFE1
 18920                           indf2	equ	0xFDF
 18921                           postinc2	equ	0xFDE
 18922                           postdec2	equ	0xFDD
 18923                           plusw2	equ	0xFDB
 18924                           fsr2h	equ	0xFDA
 18925                           fsr2l	equ	0xFD9
 18926                           status	equ	0xFD8
 18927                           
 18928 ;; *************** function __parse_item *****************
 18929 ;; Defined at:
 18930 ;;		line 108 in file "config_file.c"
 18931 ;; Parameters:    Size  Location     Type
 18932 ;;  item_string     2   26[BANK0 ] PTR unsigned char 
 18933 ;;		 -> configFile_read@item_string(31), 
 18934 ;;  value_string    2   28[BANK0 ] PTR unsigned char 
 18935 ;;		 -> configFile_read@value_string(12), 
 18936 ;; Auto vars:     Size  Location     Type
 18937 ;;		None
 18938 ;; Return value:  Size  Location     Type
 18939 ;;                  1    wreg      unsigned char 
 18940 ;; Registers used:
 18941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18942 ;; Tracked objects:
 18943 ;;		On entry : 0/0
 18944 ;;		On exit  : 0/0
 18945 ;;		Unchanged: 0/0
 18946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18947 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18950 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18951 ;;Total ram usage:        4 bytes
 18952 ;; Hardware stack levels used:    1
 18953 ;; Hardware stack levels required when called:   12
 18954 ;; This function calls:
 18955 ;;		_atoi
 18956 ;;		_atol
 18957 ;;		_stricmp
 18958 ;; This function is called by:
 18959 ;;		_configFile_read
 18960 ;; This function uses a non-reentrant model
 18961 ;;
 18962                           
 18963                           	psect	text77
 18964  00C8D4                     __ptext77:
 18965                           	opt stack 0
 18966  00C8D4                     __parse_item:
 18967                           	opt stack 16
 18968                           
 18969                           ;config_file.c: 110: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18970                           
 18971                           ; BSR set to: 0
 18972                           ;incstack = 0
 18973  00C8D4  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18974  00C8D8  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18975  00C8DC  0EFD               	movlw	low _full_circle_in_steps_string
 18976  00C8DE  0100               	movlb	0	; () banked
 18977  00C8E0  6F63               	movwf	stricmp@s2& (0+255),b
 18978  00C8E2  0EA1               	movlw	high _full_circle_in_steps_string
 18979  00C8E4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18980  00C8E6  ECC3  F0A2         	call	_stricmp	;wreg free
 18981  00C8EA  0100               	movlb	0	; () banked
 18982  00C8EC  5161               	movf	?_stricmp& (0+255),w,b
 18983  00C8EE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18984  00C8F0  A4D8               	btfss	status,2,c
 18985  00C8F2  D00F               	goto	l2936
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;config_file.c: 111: {;config_file.c: 112: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18989  00C8F4  C07C  F06C         	movff	__parse_item@value_string,atol@s
 18990  00C8F8  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18991  00C8FC  EC6F  F08A         	call	_atol	;wreg free
 18992  00C900  C06C  F1A1         	movff	?_atol,_config
 18993  00C904  C06D  F1A2         	movff	?_atol+1,_config+1
 18994  00C908  C06E  F1A3         	movff	?_atol+2,_config+2
 18995  00C90C  C06F  F1A4         	movff	?_atol+3,_config+3
 18996                           
 18997                           ;config_file.c: 113: return 1;;	Return value of __parse_item is never used
 18998  00C910  0012               	return	
 18999  00C912                     l2936:
 19000                           
 19001                           ;config_file.c: 114: };config_file.c: 116: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19002  00C912  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19003  00C916  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19004  00C91A  0E12               	movlw	low _overshoot_in_steps_string
 19005  00C91C  0100               	movlb	0	; () banked
 19006  00C91E  6F63               	movwf	stricmp@s2& (0+255),b
 19007  00C920  0EA2               	movlw	high _overshoot_in_steps_string
 19008  00C922  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19009  00C924  ECC3  F0A2         	call	_stricmp	;wreg free
 19010  00C928  0100               	movlb	0	; () banked
 19011  00C92A  5161               	movf	?_stricmp& (0+255),w,b
 19012  00C92C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19013  00C92E  A4D8               	btfss	status,2,c
 19014  00C930  D00B               	goto	l2938
 19015                           
 19016                           ; BSR set to: 0
 19017                           ;config_file.c: 117: {;config_file.c: 118: config.overshoot_in_steps = atoi(value_string
      +                          );
 19018  00C932  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19019  00C936  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19020  00C93A  EC40  F091         	call	_atoi	;wreg free
 19021  00C93E  C066  F1A6         	movff	?_atoi,_config+5
 19022  00C942  C067  F1A7         	movff	?_atoi+1,_config+6
 19023                           
 19024                           ;config_file.c: 119: return 2;;	Return value of __parse_item is never used
 19025  00C946  0012               	return	
 19026  00C948                     l2938:
 19027                           
 19028                           ;config_file.c: 120: };config_file.c: 122: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 19029  00C948  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19030  00C94C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19031  00C950  0E49               	movlw	low _inverse_direction_string
 19032  00C952  0100               	movlb	0	; () banked
 19033  00C954  6F63               	movwf	stricmp@s2& (0+255),b
 19034  00C956  0EA2               	movlw	high _inverse_direction_string
 19035  00C958  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19036  00C95A  ECC3  F0A2         	call	_stricmp	;wreg free
 19037  00C95E  0100               	movlb	0	; () banked
 19038  00C960  5161               	movf	?_stricmp& (0+255),w,b
 19039  00C962  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19040  00C964  A4D8               	btfss	status,2,c
 19041  00C966  D00B               	goto	l2939
 19042                           
 19043                           ; BSR set to: 0
 19044                           ;config_file.c: 123: {;config_file.c: 124: config.inverse_direction = atol(value_string)
      +                          ;
 19045  00C968  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19046  00C96C  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19047  00C970  EC6F  F08A         	call	_atol	;wreg free
 19048  00C974  0100               	movlb	0	; () banked
 19049  00C976  516C               	movf	?_atol& (0+255),w,b
 19050  00C978  0101               	movlb	1	; () banked
 19051  00C97A  6FA5               	movwf	(_config+4)& (0+255),b
 19052                           
 19053                           ; BSR set to: 1
 19054                           ;config_file.c: 125: return 3;;	Return value of __parse_item is never used
 19055  00C97C  0012               	return	
 19056  00C97E                     l2939:
 19057                           
 19058                           ;config_file.c: 126: };config_file.c: 128: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19059                           
 19060                           ; BSR set to: 1
 19061  00C97E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19062  00C982  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19063  00C986  0E12               	movlw	low _overshoot_in_steps_string
 19064  00C988  0100               	movlb	0	; () banked
 19065  00C98A  6F63               	movwf	stricmp@s2& (0+255),b
 19066  00C98C  0EA2               	movlw	high _overshoot_in_steps_string
 19067  00C98E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19068  00C990  ECC3  F0A2         	call	_stricmp	;wreg free
 19069  00C994  0100               	movlb	0	; () banked
 19070  00C996  5161               	movf	?_stricmp& (0+255),w,b
 19071  00C998  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19072  00C99A  A4D8               	btfss	status,2,c
 19073  00C99C  D00B               	goto	l2940
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;config_file.c: 129: {;config_file.c: 130: config.overshoot_in_steps = atoi(value_string
      +                          );
 19077  00C99E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19078  00C9A2  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19079  00C9A6  EC40  F091         	call	_atoi	;wreg free
 19080  00C9AA  C066  F1A6         	movff	?_atoi,_config+5
 19081  00C9AE  C067  F1A7         	movff	?_atoi+1,_config+6
 19082                           
 19083                           ;config_file.c: 131: return 4;;	Return value of __parse_item is never used
 19084  00C9B2  0012               	return	
 19085  00C9B4                     l2940:
 19086                           
 19087                           ;config_file.c: 132: };config_file.c: 134: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 19088  00C9B4  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19089  00C9B8  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19090  00C9BC  0EBB               	movlw	low _overshoot_cost_in_steps_string
 19091  00C9BE  0100               	movlb	0	; () banked
 19092  00C9C0  6F63               	movwf	stricmp@s2& (0+255),b
 19093  00C9C2  0EA1               	movlw	high _overshoot_cost_in_steps_string
 19094  00C9C4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19095  00C9C6  ECC3  F0A2         	call	_stricmp	;wreg free
 19096  00C9CA  0100               	movlb	0	; () banked
 19097  00C9CC  5161               	movf	?_stricmp& (0+255),w,b
 19098  00C9CE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19099  00C9D0  A4D8               	btfss	status,2,c
 19100  00C9D2  D00B               	goto	l2941
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;config_file.c: 135: {;config_file.c: 136: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 19104  00C9D4  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19105  00C9D8  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19106  00C9DC  EC40  F091         	call	_atoi	;wreg free
 19107  00C9E0  C066  F1A8         	movff	?_atoi,_config+7
 19108  00C9E4  C067  F1A9         	movff	?_atoi+1,_config+8
 19109                           
 19110                           ;config_file.c: 137: return 5;;	Return value of __parse_item is never used
 19111  00C9E8  0012               	return	
 19112  00C9EA                     l2941:
 19113                           
 19114                           ;config_file.c: 138: };config_file.c: 140: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 19115  00C9EA  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19116  00C9EE  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19117  00C9F2  0E97               	movlw	low _minimum_speed_string
 19118  00C9F4  0100               	movlb	0	; () banked
 19119  00C9F6  6F63               	movwf	stricmp@s2& (0+255),b
 19120  00C9F8  0EA2               	movlw	high _minimum_speed_string
 19121  00C9FA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19122  00C9FC  ECC3  F0A2         	call	_stricmp	;wreg free
 19123  00CA00  0100               	movlb	0	; () banked
 19124  00CA02  5161               	movf	?_stricmp& (0+255),w,b
 19125  00CA04  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19126  00CA06  A4D8               	btfss	status,2,c
 19127  00CA08  D00B               	goto	l2942
 19128                           
 19129                           ; BSR set to: 0
 19130                           ;config_file.c: 141: {;config_file.c: 142: config.minimum_speed = atoi(value_string);
 19131  00CA0A  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19132  00CA0E  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19133  00CA12  EC40  F091         	call	_atoi	;wreg free
 19134  00CA16  C066  F1AA         	movff	?_atoi,_config+9
 19135  00CA1A  C067  F1AB         	movff	?_atoi+1,_config+10
 19136                           
 19137                           ;config_file.c: 143: return 6;;	Return value of __parse_item is never used
 19138  00CA1E  0012               	return	
 19139  00CA20                     l2942:
 19140                           
 19141                           ;config_file.c: 144: };config_file.c: 146: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 19142  00CA20  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19143  00CA24  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19144  00CA28  0E89               	movlw	low _maximum_speed_string
 19145  00CA2A  0100               	movlb	0	; () banked
 19146  00CA2C  6F63               	movwf	stricmp@s2& (0+255),b
 19147  00CA2E  0EA2               	movlw	high _maximum_speed_string
 19148  00CA30  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19149  00CA32  ECC3  F0A2         	call	_stricmp	;wreg free
 19150  00CA36  0100               	movlb	0	; () banked
 19151  00CA38  5161               	movf	?_stricmp& (0+255),w,b
 19152  00CA3A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19153  00CA3C  A4D8               	btfss	status,2,c
 19154  00CA3E  D00B               	goto	l2943
 19155                           
 19156                           ; BSR set to: 0
 19157                           ;config_file.c: 147: {;config_file.c: 148: config.maximum_speed = atoi(value_string);
 19158  00CA40  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19159  00CA44  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19160  00CA48  EC40  F091         	call	_atoi	;wreg free
 19161  00CA4C  C066  F1AC         	movff	?_atoi,_config+11
 19162  00CA50  C067  F1AD         	movff	?_atoi+1,_config+12
 19163                           
 19164                           ;config_file.c: 149: return 7;;	Return value of __parse_item is never used
 19165  00CA54  0012               	return	
 19166  00CA56                     l2943:
 19167                           
 19168                           ;config_file.c: 150: };config_file.c: 152: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 19169  00CA56  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19170  00CA5A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19171  00CA5E  0E37               	movlw	low _initial_speed_arc_string
 19172  00CA60  0100               	movlb	0	; () banked
 19173  00CA62  6F63               	movwf	stricmp@s2& (0+255),b
 19174  00CA64  0EA2               	movlw	high _initial_speed_arc_string
 19175  00CA66  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19176  00CA68  ECC3  F0A2         	call	_stricmp	;wreg free
 19177  00CA6C  0100               	movlb	0	; () banked
 19178  00CA6E  5161               	movf	?_stricmp& (0+255),w,b
 19179  00CA70  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19180  00CA72  A4D8               	btfss	status,2,c
 19181  00CA74  D00B               	goto	l2944
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;config_file.c: 153: {;config_file.c: 154: config.initial_speed_arc = atoi(value_string)
      +                          ;
 19185  00CA76  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19186  00CA7A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19187  00CA7E  EC40  F091         	call	_atoi	;wreg free
 19188  00CA82  C066  F1AE         	movff	?_atoi,_config+13
 19189  00CA86  C067  F1AF         	movff	?_atoi+1,_config+14
 19190                           
 19191                           ;config_file.c: 155: return 8;;	Return value of __parse_item is never used
 19192  00CA8A  0012               	return	
 19193  00CA8C                     l2944:
 19194                           
 19195                           ;config_file.c: 156: };config_file.c: 158: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 19196  00CA8C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19197  00CA90  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19198  00CA94  0E25               	movlw	low _maximum_speed_arc_string
 19199  00CA96  0100               	movlb	0	; () banked
 19200  00CA98  6F63               	movwf	stricmp@s2& (0+255),b
 19201  00CA9A  0EA2               	movlw	high _maximum_speed_arc_string
 19202  00CA9C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19203  00CA9E  ECC3  F0A2         	call	_stricmp	;wreg free
 19204  00CAA2  0100               	movlb	0	; () banked
 19205  00CAA4  5161               	movf	?_stricmp& (0+255),w,b
 19206  00CAA6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19207  00CAA8  A4D8               	btfss	status,2,c
 19208  00CAAA  D00B               	goto	l2945
 19209                           
 19210                           ; BSR set to: 0
 19211                           ;config_file.c: 159: {;config_file.c: 160: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 19212  00CAAC  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19213  00CAB0  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19214  00CAB4  EC40  F091         	call	_atoi	;wreg free
 19215  00CAB8  C066  F1B0         	movff	?_atoi,_config+15
 19216  00CABC  C067  F1B1         	movff	?_atoi+1,_config+16
 19217                           
 19218                           ;config_file.c: 161: return 9;;	Return value of __parse_item is never used
 19219  00CAC0  0012               	return	
 19220  00CAC2                     l2945:
 19221                           
 19222                           ;config_file.c: 162: };config_file.c: 164: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 19223  00CAC2  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19224  00CAC6  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19225  00CACA  0EE8               	movlw	low _initial_speed_manual_string
 19226  00CACC  0100               	movlb	0	; () banked
 19227  00CACE  6F63               	movwf	stricmp@s2& (0+255),b
 19228  00CAD0  0EA1               	movlw	high _initial_speed_manual_string
 19229  00CAD2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19230  00CAD4  ECC3  F0A2         	call	_stricmp	;wreg free
 19231  00CAD8  0100               	movlb	0	; () banked
 19232  00CADA  5161               	movf	?_stricmp& (0+255),w,b
 19233  00CADC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19234  00CADE  A4D8               	btfss	status,2,c
 19235  00CAE0  D00B               	goto	l2946
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;config_file.c: 165: {;config_file.c: 166: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 19239  00CAE2  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19240  00CAE6  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19241  00CAEA  EC40  F091         	call	_atoi	;wreg free
 19242  00CAEE  C066  F1B2         	movff	?_atoi,_config+17
 19243  00CAF2  C067  F1B3         	movff	?_atoi+1,_config+18
 19244                           
 19245                           ;config_file.c: 167: return 10;;	Return value of __parse_item is never used
 19246  00CAF6  0012               	return	
 19247  00CAF8                     l2946:
 19248                           
 19249                           ;config_file.c: 168: };config_file.c: 170: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 19250  00CAF8  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19251  00CAFC  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19252  00CB00  0ED3               	movlw	low _maximum_speed_manual_string
 19253  00CB02  0100               	movlb	0	; () banked
 19254  00CB04  6F63               	movwf	stricmp@s2& (0+255),b
 19255  00CB06  0EA1               	movlw	high _maximum_speed_manual_string
 19256  00CB08  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19257  00CB0A  ECC3  F0A2         	call	_stricmp	;wreg free
 19258  00CB0E  0100               	movlb	0	; () banked
 19259  00CB10  5161               	movf	?_stricmp& (0+255),w,b
 19260  00CB12  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19261  00CB14  A4D8               	btfss	status,2,c
 19262  00CB16  D00B               	goto	l2947
 19263                           
 19264                           ; BSR set to: 0
 19265                           ;config_file.c: 171: {;config_file.c: 172: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 19266  00CB18  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19267  00CB1C  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19268  00CB20  EC40  F091         	call	_atoi	;wreg free
 19269  00CB24  C066  F1B4         	movff	?_atoi,_config+19
 19270  00CB28  C067  F1B5         	movff	?_atoi+1,_config+20
 19271                           
 19272                           ;config_file.c: 173: return 11;;	Return value of __parse_item is never used
 19273  00CB2C  0012               	return	
 19274  00CB2E                     l2947:
 19275                           
 19276                           ;config_file.c: 174: };config_file.c: 176: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 19277  00CB2E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19278  00CB32  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19279  00CB36  0E7B               	movlw	low _beep_duration_string
 19280  00CB38  0100               	movlb	0	; () banked
 19281  00CB3A  6F63               	movwf	stricmp@s2& (0+255),b
 19282  00CB3C  0EA2               	movlw	high _beep_duration_string
 19283  00CB3E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19284  00CB40  ECC3  F0A2         	call	_stricmp	;wreg free
 19285  00CB44  0100               	movlb	0	; () banked
 19286  00CB46  5161               	movf	?_stricmp& (0+255),w,b
 19287  00CB48  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19288  00CB4A  A4D8               	btfss	status,2,c
 19289  00CB4C  D00B               	goto	l2948
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;config_file.c: 177: {;config_file.c: 178: config.beep_duration = atoi(value_string);
 19293  00CB4E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19294  00CB52  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19295  00CB56  EC40  F091         	call	_atoi	;wreg free
 19296  00CB5A  0100               	movlb	0	; () banked
 19297  00CB5C  5166               	movf	?_atoi& (0+255),w,b
 19298  00CB5E  0101               	movlb	1	; () banked
 19299  00CB60  6FB6               	movwf	(_config+21)& (0+255),b
 19300                           
 19301                           ; BSR set to: 1
 19302                           ;config_file.c: 179: return 12;;	Return value of __parse_item is never used
 19303  00CB62  0012               	return	
 19304  00CB64                     l2948:
 19305                           
 19306                           ;config_file.c: 180: };config_file.c: 182: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 19307                           
 19308                           ; BSR set to: 1
 19309  00CB64  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19310  00CB68  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19311  00CB6C  0EA5               	movlw	low _use_cw_limit_string
 19312  00CB6E  0100               	movlb	0	; () banked
 19313  00CB70  6F63               	movwf	stricmp@s2& (0+255),b
 19314  00CB72  0EA2               	movlw	high _use_cw_limit_string
 19315  00CB74  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19316  00CB76  ECC3  F0A2         	call	_stricmp	;wreg free
 19317  00CB7A  0100               	movlb	0	; () banked
 19318  00CB7C  5161               	movf	?_stricmp& (0+255),w,b
 19319  00CB7E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19320  00CB80  A4D8               	btfss	status,2,c
 19321  00CB82  D00B               	goto	l2949
 19322                           
 19323                           ; BSR set to: 0
 19324                           ;config_file.c: 183: {;config_file.c: 184: config.use_cw_limit = atol(value_string);
 19325  00CB84  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19326  00CB88  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19327  00CB8C  EC6F  F08A         	call	_atol	;wreg free
 19328  00CB90  0100               	movlb	0	; () banked
 19329  00CB92  516C               	movf	?_atol& (0+255),w,b
 19330  00CB94  0101               	movlb	1	; () banked
 19331  00CB96  6FB7               	movwf	(_config+22)& (0+255),b
 19332                           
 19333                           ; BSR set to: 1
 19334                           ;config_file.c: 185: return 13;;	Return value of __parse_item is never used
 19335  00CB98  0012               	return	
 19336  00CB9A                     l2949:
 19337                           
 19338                           ;config_file.c: 186: };config_file.c: 188: if(stricmp(item_string, cw_limit_string)==0)
 19339                           
 19340                           ; BSR set to: 1
 19341  00CB9A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19342  00CB9E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19343  00CBA2  0EBC               	movlw	low _cw_limit_string
 19344  00CBA4  0100               	movlb	0	; () banked
 19345  00CBA6  6F63               	movwf	stricmp@s2& (0+255),b
 19346  00CBA8  0EA2               	movlw	high _cw_limit_string
 19347  00CBAA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19348  00CBAC  ECC3  F0A2         	call	_stricmp	;wreg free
 19349  00CBB0  0100               	movlb	0	; () banked
 19350  00CBB2  5161               	movf	?_stricmp& (0+255),w,b
 19351  00CBB4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19352  00CBB6  A4D8               	btfss	status,2,c
 19353  00CBB8  D00B               	goto	l2950
 19354                           
 19355                           ; BSR set to: 0
 19356                           ;config_file.c: 189: {;config_file.c: 190: config.cw_limit = atol(value_string);
 19357  00CBBA  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19358  00CBBE  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19359  00CBC2  EC6F  F08A         	call	_atol	;wreg free
 19360  00CBC6  C06C  F1B8         	movff	?_atol,_config+23
 19361  00CBCA  C06D  F1B9         	movff	?_atol+1,_config+24
 19362                           
 19363                           ;config_file.c: 191: return 14;;	Return value of __parse_item is never used
 19364  00CBCE  0012               	return	
 19365  00CBD0                     l2950:
 19366                           
 19367                           ;config_file.c: 192: };config_file.c: 194: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 19368  00CBD0  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19369  00CBD4  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19370  00CBD8  0E6D               	movlw	low _use_ccw_limit_string
 19371  00CBDA  0100               	movlb	0	; () banked
 19372  00CBDC  6F63               	movwf	stricmp@s2& (0+255),b
 19373  00CBDE  0EA2               	movlw	high _use_ccw_limit_string
 19374  00CBE0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19375  00CBE2  ECC3  F0A2         	call	_stricmp	;wreg free
 19376  00CBE6  0100               	movlb	0	; () banked
 19377  00CBE8  5161               	movf	?_stricmp& (0+255),w,b
 19378  00CBEA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19379  00CBEC  A4D8               	btfss	status,2,c
 19380  00CBEE  D00B               	goto	l2951
 19381                           
 19382                           ; BSR set to: 0
 19383                           ;config_file.c: 195: {;config_file.c: 196: config.use_ccw_limit = atol(value_string);
 19384  00CBF0  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19385  00CBF4  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19386  00CBF8  EC6F  F08A         	call	_atol	;wreg free
 19387  00CBFC  0100               	movlb	0	; () banked
 19388  00CBFE  516C               	movf	?_atol& (0+255),w,b
 19389  00CC00  0101               	movlb	1	; () banked
 19390  00CC02  6FBA               	movwf	(_config+25)& (0+255),b
 19391                           
 19392                           ; BSR set to: 1
 19393                           ;config_file.c: 197: return 15;;	Return value of __parse_item is never used
 19394  00CC04  0012               	return	
 19395  00CC06                     l2951:
 19396                           
 19397                           ;config_file.c: 198: };config_file.c: 200: if(stricmp(item_string, ccw_limit_string)==0)
 19398                           
 19399                           ; BSR set to: 1
 19400  00CC06  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19401  00CC0A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19402  00CC0E  0EB2               	movlw	low _ccw_limit_string
 19403  00CC10  0100               	movlb	0	; () banked
 19404  00CC12  6F63               	movwf	stricmp@s2& (0+255),b
 19405  00CC14  0EA2               	movlw	high _ccw_limit_string
 19406  00CC16  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19407  00CC18  ECC3  F0A2         	call	_stricmp	;wreg free
 19408  00CC1C  0100               	movlb	0	; () banked
 19409  00CC1E  5161               	movf	?_stricmp& (0+255),w,b
 19410  00CC20  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19411  00CC22  A4D8               	btfss	status,2,c
 19412  00CC24  0012               	return	
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;config_file.c: 201: {;config_file.c: 202: config.ccw_limit = atol(value_string);
 19416  00CC26  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19417  00CC2A  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19418  00CC2E  EC6F  F08A         	call	_atol	;wreg free
 19419  00CC32  C06C  F1BB         	movff	?_atol,_config+26
 19420  00CC36  C06D  F1BC         	movff	?_atol+1,_config+27
 19421                           
 19422                           ;config_file.c: 203: return 16;;	Return value of __parse_item is never used
 19423  00CC3A  0012               	return	
 19424  00CC3C                     __end_of__parse_item:
 19425                           	opt stack 0
 19426                           tblptru	equ	0xFF8
 19427                           tblptrh	equ	0xFF7
 19428                           tblptrl	equ	0xFF6
 19429                           tablat	equ	0xFF5
 19430                           prodh	equ	0xFF4
 19431                           prodl	equ	0xFF3
 19432                           postinc0	equ	0xFEE
 19433                           wreg	equ	0xFE8
 19434                           postinc1	equ	0xFE6
 19435                           postdec1	equ	0xFE5
 19436                           plusw1	equ	0xFE3
 19437                           fsr1h	equ	0xFE2
 19438                           fsr1l	equ	0xFE1
 19439                           indf2	equ	0xFDF
 19440                           postinc2	equ	0xFDE
 19441                           postdec2	equ	0xFDD
 19442                           plusw2	equ	0xFDB
 19443                           fsr2h	equ	0xFDA
 19444                           fsr2l	equ	0xFD9
 19445                           status	equ	0xFD8
 19446                           
 19447 ;; *************** function _stricmp *****************
 19448 ;; Defined at:
 19449 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 19450 ;; Parameters:    Size  Location     Type
 19451 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 19452 ;;		 -> configFile_read@item_string(31), 
 19453 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 19454 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 19455 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 19456 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 19457 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 19458 ;; Auto vars:     Size  Location     Type
 19459 ;;  r               1    6[BANK0 ] char 
 19460 ;; Return value:  Size  Location     Type
 19461 ;;                  2    1[BANK0 ] int 
 19462 ;; Registers used:
 19463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19464 ;; Tracked objects:
 19465 ;;		On entry : 0/0
 19466 ;;		On exit  : 0/0
 19467 ;;		Unchanged: 0/0
 19468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19469 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19472 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19473 ;;Total ram usage:        6 bytes
 19474 ;; Hardware stack levels used:    1
 19475 ;; Hardware stack levels required when called:   11
 19476 ;; This function calls:
 19477 ;;		_toupper
 19478 ;; This function is called by:
 19479 ;;		__parse_item
 19480 ;; This function uses a non-reentrant model
 19481 ;;
 19482                           
 19483                           	psect	text78
 19484  014586                     __ptext78:
 19485                           	opt stack 0
 19486  014586                     _stricmp:
 19487                           	opt stack 16
 19488                           
 19489                           ;incstack = 0
 19490  014586  D005               	goto	l3710
 19491  014588  0100               	movlb	0	; () banked
 19492  01458A  4B61               	infsnz	stricmp@s1& (0+255),f,b
 19493  01458C  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 19494  01458E  4B63               	infsnz	stricmp@s2& (0+255),f,b
 19495  014590  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 19496  014592                     l3710:
 19497                           
 19498                           ; BSR set to: 0
 19499  014592  C063  FFF6         	movff	stricmp@s2,tblptrl
 19500  014596  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 19501  01459A                     	if	0	;tblptru may be non-zero
 19502  01459A                     	endif
 19503  01459A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19504  01459A  0E00               	movlw	low (__mediumconst shr (0+16))
 19505  01459C  6EF8               	movwf	tblptru,c
 19506  01459E                     	endif
 19507  01459E  0008               	tblrd		*
 19508  0145A0  50F5               	movf	tablat,w,c
 19509  0145A2  EC22  F0AC         	call	_toupper
 19510  0145A6  0800               	sublw	0
 19511  0145A8  0100               	movlb	0	; () banked
 19512  0145AA  6F65               	movwf	??_stricmp& (0+255),b
 19513  0145AC  C061  FFD9         	movff	stricmp@s1,fsr2l
 19514  0145B0  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19515  0145B4  50DF               	movf	indf2,w,c
 19516  0145B6  EC22  F0AC         	call	_toupper
 19517  0145BA  0100               	movlb	0	; () banked
 19518  0145BC  2565               	addwf	??_stricmp& (0+255),w,b
 19519  0145BE  6F66               	movwf	stricmp@r& (0+255),b
 19520  0145C0  5166               	movf	stricmp@r& (0+255),w,b
 19521  0145C2  A4D8               	btfss	status,2,c
 19522  0145C4  D007               	goto	u13770
 19523                           
 19524                           ; BSR set to: 0
 19525  0145C6  C061  FFD9         	movff	stricmp@s1,fsr2l
 19526  0145CA  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19527  0145CE  50DF               	movf	indf2,w,c
 19528  0145D0  A4D8               	btfss	status,2,c
 19529  0145D2  D7DA               	goto	l3711
 19530  0145D4                     u13770:
 19531                           
 19532                           ; BSR set to: 0
 19533                           
 19534                           ; BSR set to: 0
 19535                           
 19536                           ; BSR set to: 0
 19537  0145D4  5166               	movf	stricmp@r& (0+255),w,b
 19538  0145D6  6F61               	movwf	?_stricmp& (0+255),b
 19539  0145D8  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19540  0145DA  BF61               	btfsc	?_stricmp& (0+255),7,b
 19541  0145DC  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19542  0145DE  0012               	return	
 19543  0145E0                     __end_of_stricmp:
 19544                           	opt stack 0
 19545                           tblptru	equ	0xFF8
 19546                           tblptrh	equ	0xFF7
 19547                           tblptrl	equ	0xFF6
 19548                           tablat	equ	0xFF5
 19549                           prodh	equ	0xFF4
 19550                           prodl	equ	0xFF3
 19551                           postinc0	equ	0xFEE
 19552                           wreg	equ	0xFE8
 19553                           postinc1	equ	0xFE6
 19554                           postdec1	equ	0xFE5
 19555                           plusw1	equ	0xFE3
 19556                           fsr1h	equ	0xFE2
 19557                           fsr1l	equ	0xFE1
 19558                           indf2	equ	0xFDF
 19559                           postinc2	equ	0xFDE
 19560                           postdec2	equ	0xFDD
 19561                           plusw2	equ	0xFDB
 19562                           fsr2h	equ	0xFDA
 19563                           fsr2l	equ	0xFD9
 19564                           status	equ	0xFD8
 19565                           
 19566 ;; *************** function _toupper *****************
 19567 ;; Defined at:
 19568 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;  c               1    wreg     unsigned char 
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;  c               1    0[BANK0 ] unsigned char 
 19573 ;; Return value:  Size  Location     Type
 19574 ;;                  1    wreg      unsigned char 
 19575 ;; Registers used:
 19576 ;;		wreg, status,2, status,0
 19577 ;; Tracked objects:
 19578 ;;		On entry : 0/0
 19579 ;;		On exit  : 0/0
 19580 ;;		Unchanged: 0/0
 19581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19585 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19586 ;;Total ram usage:        1 bytes
 19587 ;; Hardware stack levels used:    1
 19588 ;; Hardware stack levels required when called:   10
 19589 ;; This function calls:
 19590 ;;		Nothing
 19591 ;; This function is called by:
 19592 ;;		_stricmp
 19593 ;; This function uses a non-reentrant model
 19594 ;;
 19595                           
 19596                           	psect	text79
 19597  015844                     __ptext79:
 19598                           	opt stack 0
 19599  015844                     _toupper:
 19600                           	opt stack 16
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;incstack = 0
 19604                           ;toupper@c stored from wreg
 19605  015844  0100               	movlb	0	; () banked
 19606  015846  6F60               	movwf	toupper@c& (0+255),b
 19607  015848  0E7B               	movlw	123
 19608  01584A  0100               	movlb	0	; () banked
 19609  01584C  6160               	cpfslt	toupper@c& (0+255),b
 19610  01584E  D004               	goto	l3733
 19611                           
 19612                           ; BSR set to: 0
 19613  015850  0E60               	movlw	96
 19614  015852  6560               	cpfsgt	toupper@c& (0+255),b
 19615  015854  D001               	goto	l3733
 19616                           
 19617                           ; BSR set to: 0
 19618  015856  9B60               	bcf	toupper@c& (0+255),5,b
 19619  015858                     l3733:
 19620                           
 19621                           ; BSR set to: 0
 19622                           
 19623                           ; BSR set to: 0
 19624  015858  5160               	movf	toupper@c& (0+255),w,b
 19625  01585A  0012               	return	
 19626  01585C                     __end_of_toupper:
 19627                           	opt stack 0
 19628                           tblptru	equ	0xFF8
 19629                           tblptrh	equ	0xFF7
 19630                           tblptrl	equ	0xFF6
 19631                           tablat	equ	0xFF5
 19632                           prodh	equ	0xFF4
 19633                           prodl	equ	0xFF3
 19634                           postinc0	equ	0xFEE
 19635                           wreg	equ	0xFE8
 19636                           postinc1	equ	0xFE6
 19637                           postdec1	equ	0xFE5
 19638                           plusw1	equ	0xFE3
 19639                           fsr1h	equ	0xFE2
 19640                           fsr1l	equ	0xFE1
 19641                           indf2	equ	0xFDF
 19642                           postinc2	equ	0xFDE
 19643                           postdec2	equ	0xFDD
 19644                           plusw2	equ	0xFDB
 19645                           fsr2h	equ	0xFDA
 19646                           fsr2l	equ	0xFD9
 19647                           status	equ	0xFD8
 19648                           
 19649 ;; *************** function _atol *****************
 19650 ;; Defined at:
 19651 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19652 ;; Parameters:    Size  Location     Type
 19653 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19654 ;;		 -> configFile_read@value_string(12), 
 19655 ;; Auto vars:     Size  Location     Type
 19656 ;;  a               4   21[BANK0 ] long 
 19657 ;;  c               1   25[BANK0 ] unsigned char 
 19658 ;;  sign            1   20[BANK0 ] unsigned char 
 19659 ;; Return value:  Size  Location     Type
 19660 ;;                  4   12[BANK0 ] long 
 19661 ;; Registers used:
 19662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19663 ;; Tracked objects:
 19664 ;;		On entry : 0/0
 19665 ;;		On exit  : 0/0
 19666 ;;		Unchanged: 0/0
 19667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19668 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19669 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19670 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19671 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19672 ;;Total ram usage:       14 bytes
 19673 ;; Hardware stack levels used:    1
 19674 ;; Hardware stack levels required when called:   11
 19675 ;; This function calls:
 19676 ;;		___lmul
 19677 ;;		_isdigit
 19678 ;; This function is called by:
 19679 ;;		__parse_item
 19680 ;; This function uses a non-reentrant model
 19681 ;;
 19682                           
 19683                           	psect	text80
 19684  0114DE                     __ptext80:
 19685                           	opt stack 0
 19686  0114DE                     _atol:
 19687                           	opt stack 16
 19688                           
 19689                           ; BSR set to: 0
 19690                           ;incstack = 0
 19691  0114DE  C06C  FFD9         	movff	atol@s,fsr2l
 19692  0114E2  C06D  FFDA         	movff	atol@s+1,fsr2h
 19693  0114E6  50DF               	movf	indf2,w,c
 19694  0114E8  0100               	movlb	0	; () banked
 19695  0114EA  6F79               	movwf	atol@c& (0+255),b
 19696                           
 19697                           ; BSR set to: 0
 19698  0114EC  4B6C               	infsnz	atol@s& (0+255),f,b
 19699  0114EE  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19700                           
 19701                           ; BSR set to: 0
 19702  0114F0  0E20               	movlw	32
 19703  0114F2  1979               	xorwf	atol@c& (0+255),w,b
 19704  0114F4  B4D8               	btfsc	status,2,c
 19705  0114F6  D7F3               	goto	_atol
 19706                           
 19707                           ; BSR set to: 0
 19708  0114F8  0E09               	movlw	9
 19709  0114FA  1979               	xorwf	atol@c& (0+255),w,b
 19710  0114FC  B4D8               	btfsc	status,2,c
 19711  0114FE  D7EF               	goto	_atol
 19712                           
 19713                           ; BSR set to: 0
 19714                           
 19715                           ; BSR set to: 0
 19716  011500  0E00               	movlw	0
 19717  011502  6F75               	movwf	atol@a& (0+255),b
 19718  011504  0E00               	movlw	0
 19719  011506  6F76               	movwf	(atol@a+1)& (0+255),b
 19720  011508  0E00               	movlw	0
 19721  01150A  6F77               	movwf	(atol@a+2)& (0+255),b
 19722  01150C  0E00               	movlw	0
 19723  01150E  6F78               	movwf	(atol@a+3)& (0+255),b
 19724  011510  0E00               	movlw	0
 19725  011512  6F74               	movwf	atol@sign& (0+255),b
 19726                           
 19727                           ; BSR set to: 0
 19728  011514  0E2D               	movlw	45
 19729  011516  1979               	xorwf	atol@c& (0+255),w,b
 19730  011518  A4D8               	btfss	status,2,c
 19731  01151A  D002               	goto	l3653
 19732                           
 19733                           ; BSR set to: 0
 19734  01151C  2B74               	incf	atol@sign& (0+255),f,b
 19735  01151E  D029               	goto	L91
 19736  011520                     l3653:
 19737                           
 19738                           ; BSR set to: 0
 19739                           
 19740                           ; BSR set to: 0
 19741  011520  0E2B               	movlw	43
 19742  011522  1979               	xorwf	atol@c& (0+255),w,b
 19743  011524  A4D8               	btfss	status,2,c
 19744  011526  D02D               	goto	l3656
 19745  011528  D024               	goto	L91
 19746  01152A                     
 19747                           ; BSR set to: 0
 19748  01152A  C075  F060         	movff	atol@a,___lmul@multiplier
 19749  01152E  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19750  011532  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19751  011536  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19752  01153A  0E0A               	movlw	10
 19753  01153C  0100               	movlb	0	; () banked
 19754  01153E  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19755  011540  0E00               	movlw	0
 19756  011542  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19757  011544  0E00               	movlw	0
 19758  011546  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19759  011548  0E00               	movlw	0
 19760  01154A  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19761  01154C  ECFB  F0A3         	call	___lmul	;wreg free
 19762  011550  C079  F070         	movff	atol@c,??_atol
 19763  011554  0ED0               	movlw	208
 19764  011556  0100               	movlb	0	; () banked
 19765  011558  2770               	addwf	??_atol& (0+255),f,b
 19766  01155A  5170               	movf	??_atol& (0+255),w,b
 19767  01155C  2560               	addwf	?___lmul& (0+255),w,b
 19768  01155E  6F75               	movwf	atol@a& (0+255),b
 19769  011560  0E00               	movlw	0
 19770  011562  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19771  011564  6F76               	movwf	(atol@a+1)& (0+255),b
 19772  011566  0E00               	movlw	0
 19773  011568  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19774  01156A  6F77               	movwf	(atol@a+2)& (0+255),b
 19775  01156C  0E00               	movlw	0
 19776  01156E  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19777  011570  6F78               	movwf	(atol@a+3)& (0+255),b
 19778  011572                     L91:
 19779                           
 19780                           ; BSR set to: 0
 19781  011572  C06C  FFD9         	movff	atol@s,fsr2l
 19782  011576  C06D  FFDA         	movff	atol@s+1,fsr2h
 19783  01157A  50DF               	movf	indf2,w,c
 19784  01157C  6F79               	movwf	atol@c& (0+255),b
 19785                           
 19786                           ; BSR set to: 0
 19787  01157E  4B6C               	infsnz	atol@s& (0+255),f,b
 19788  011580  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19789  011582                     l3656:
 19790                           
 19791                           ; BSR set to: 0
 19792                           
 19793                           ; BSR set to: 0
 19794  011582  5179               	movf	atol@c& (0+255),w,b
 19795  011584  EC81  F0AB         	call	_isdigit
 19796  011588  B0D8               	btfsc	status,0,c
 19797  01158A  D7CF               	goto	l3657
 19798  01158C  0100               	movlb	0	; () banked
 19799  01158E  5174               	movf	atol@sign& (0+255),w,b
 19800  011590  B4D8               	btfsc	status,2,c
 19801  011592  D01A               	goto	l3659
 19802                           
 19803                           ; BSR set to: 0
 19804  011594  C075  F070         	movff	atol@a,??_atol
 19805  011598  C076  F071         	movff	atol@a+1,??_atol+1
 19806  01159C  C077  F072         	movff	atol@a+2,??_atol+2
 19807  0115A0  C078  F073         	movff	atol@a+3,??_atol+3
 19808  0115A4  1F70               	comf	??_atol& (0+255),f,b
 19809  0115A6  1F71               	comf	(??_atol+1)& (0+255),f,b
 19810  0115A8  1F72               	comf	(??_atol+2)& (0+255),f,b
 19811  0115AA  1F73               	comf	(??_atol+3)& (0+255),f,b
 19812  0115AC  2B70               	incf	??_atol& (0+255),f,b
 19813  0115AE  0E00               	movlw	0
 19814  0115B0  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19815  0115B2  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19816  0115B4  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19817  0115B6  C070  F06C         	movff	??_atol,?_atol
 19818  0115BA  C071  F06D         	movff	??_atol+1,?_atol+1
 19819  0115BE  C072  F06E         	movff	??_atol+2,?_atol+2
 19820  0115C2  C073  F06F         	movff	??_atol+3,?_atol+3
 19821                           
 19822                           ; BSR set to: 0
 19823  0115C6  0012               	return	
 19824  0115C8                     l3659:
 19825                           
 19826                           ; BSR set to: 0
 19827  0115C8  C075  F06C         	movff	atol@a,?_atol
 19828  0115CC  C076  F06D         	movff	atol@a+1,?_atol+1
 19829  0115D0  C077  F06E         	movff	atol@a+2,?_atol+2
 19830  0115D4  C078  F06F         	movff	atol@a+3,?_atol+3
 19831                           
 19832                           ; BSR set to: 0
 19833  0115D8  0012               	return		;funcret
 19834  0115DA                     __end_of_atol:
 19835                           	opt stack 0
 19836                           tblptru	equ	0xFF8
 19837                           tblptrh	equ	0xFF7
 19838                           tblptrl	equ	0xFF6
 19839                           tablat	equ	0xFF5
 19840                           prodh	equ	0xFF4
 19841                           prodl	equ	0xFF3
 19842                           postinc0	equ	0xFEE
 19843                           wreg	equ	0xFE8
 19844                           postinc1	equ	0xFE6
 19845                           postdec1	equ	0xFE5
 19846                           plusw1	equ	0xFE3
 19847                           fsr1h	equ	0xFE2
 19848                           fsr1l	equ	0xFE1
 19849                           indf2	equ	0xFDF
 19850                           postinc2	equ	0xFDE
 19851                           postdec2	equ	0xFDD
 19852                           plusw2	equ	0xFDB
 19853                           fsr2h	equ	0xFDA
 19854                           fsr2l	equ	0xFD9
 19855                           status	equ	0xFD8
 19856                           
 19857 ;; *************** function _atoi *****************
 19858 ;; Defined at:
 19859 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19860 ;; Parameters:    Size  Location     Type
 19861 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19862 ;;		 -> configFile_read@value_string(12), 
 19863 ;; Auto vars:     Size  Location     Type
 19864 ;;  a               2   11[BANK0 ] int 
 19865 ;;  sign            1   10[BANK0 ] unsigned char 
 19866 ;; Return value:  Size  Location     Type
 19867 ;;                  2    6[BANK0 ] int 
 19868 ;; Registers used:
 19869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19870 ;; Tracked objects:
 19871 ;;		On entry : 0/0
 19872 ;;		On exit  : 0/0
 19873 ;;		Unchanged: 0/0
 19874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19876 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19878 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19879 ;;Total ram usage:        7 bytes
 19880 ;; Hardware stack levels used:    1
 19881 ;; Hardware stack levels required when called:   11
 19882 ;; This function calls:
 19883 ;;		___wmul
 19884 ;;		_isdigit
 19885 ;; This function is called by:
 19886 ;;		__parse_item
 19887 ;; This function uses a non-reentrant model
 19888 ;;
 19889                           
 19890                           	psect	text81
 19891  012280                     __ptext81:
 19892                           	opt stack 0
 19893  012280                     _atoi:
 19894                           	opt stack 16
 19895                           
 19896                           ; BSR set to: 0
 19897                           ;incstack = 0
 19898  012280  D003               	goto	l3636
 19899  012282  0100               	movlb	0	; () banked
 19900  012284  4B66               	infsnz	atoi@s& (0+255),f,b
 19901  012286  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19902  012288                     l3636:
 19903                           
 19904                           ; BSR set to: 0
 19905  012288  C066  FFD9         	movff	atoi@s,fsr2l
 19906  01228C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19907  012290  0E20               	movlw	32
 19908  012292  18DE               	xorwf	postinc2,w,c
 19909  012294  B4D8               	btfsc	status,2,c
 19910  012296  D7F5               	goto	l3637
 19911  012298  C066  FFD9         	movff	atoi@s,fsr2l
 19912  01229C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19913  0122A0  0E09               	movlw	9
 19914  0122A2  18DE               	xorwf	postinc2,w,c
 19915  0122A4  B4D8               	btfsc	status,2,c
 19916  0122A6  D7ED               	goto	l3637
 19917  0122A8  0E00               	movlw	0
 19918  0122AA  0100               	movlb	0	; () banked
 19919  0122AC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19920  0122AE  0E00               	movlw	0
 19921  0122B0  6F6B               	movwf	atoi@a& (0+255),b
 19922  0122B2  0E00               	movlw	0
 19923  0122B4  6F6A               	movwf	atoi@sign& (0+255),b
 19924                           
 19925                           ; BSR set to: 0
 19926  0122B6  C066  FFD9         	movff	atoi@s,fsr2l
 19927  0122BA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19928  0122BE  0E2D               	movlw	45
 19929  0122C0  18DE               	xorwf	postinc2,w,c
 19930  0122C2  A4D8               	btfss	status,2,c
 19931  0122C4  D002               	goto	l3639
 19932                           
 19933                           ; BSR set to: 0
 19934  0122C6  2B6A               	incf	atoi@sign& (0+255),f,b
 19935  0122C8  D026               	goto	l15168
 19936  0122CA                     l3639:
 19937                           
 19938                           ; BSR set to: 0
 19939                           
 19940                           ; BSR set to: 0
 19941  0122CA  C066  FFD9         	movff	atoi@s,fsr2l
 19942  0122CE  C067  FFDA         	movff	atoi@s+1,fsr2h
 19943  0122D2  0E2B               	movlw	43
 19944  0122D4  18DE               	xorwf	postinc2,w,c
 19945  0122D6  A4D8               	btfss	status,2,c
 19946  0122D8  D020               	goto	l3642
 19947  0122DA  D01D               	goto	l15168
 19948  0122DC                     
 19949                           ; BSR set to: 0
 19950  0122DC  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19951  0122E0  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19952  0122E4  0E00               	movlw	0
 19953  0122E6  0100               	movlb	0	; () banked
 19954  0122E8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19955  0122EA  0E0A               	movlw	10
 19956  0122EC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19957  0122EE  ECEC  F0AA         	call	___wmul	;wreg free
 19958  0122F2  C066  FFD9         	movff	atoi@s,fsr2l
 19959  0122F6  C067  FFDA         	movff	atoi@s+1,fsr2h
 19960  0122FA  50DF               	movf	indf2,w,c
 19961  0122FC  0100               	movlb	0	; () banked
 19962  0122FE  6F68               	movwf	??_atoi& (0+255),b
 19963  012300  6B69               	clrf	(??_atoi+1)& (0+255),b
 19964  012302  5160               	movf	?___wmul& (0+255),w,b
 19965  012304  2768               	addwf	??_atoi& (0+255),f,b
 19966  012306  5161               	movf	(?___wmul+1)& (0+255),w,b
 19967  012308  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19968  01230A  0ED0               	movlw	208
 19969  01230C  2568               	addwf	??_atoi& (0+255),w,b
 19970  01230E  6F6B               	movwf	atoi@a& (0+255),b
 19971  012310  0EFF               	movlw	255
 19972  012312  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19973  012314  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19974  012316                     l15168:
 19975                           
 19976                           ; BSR set to: 0
 19977  012316  4B66               	infsnz	atoi@s& (0+255),f,b
 19978  012318  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19979  01231A                     l3642:
 19980                           
 19981                           ; BSR set to: 0
 19982                           
 19983                           ; BSR set to: 0
 19984  01231A  C066  FFD9         	movff	atoi@s,fsr2l
 19985  01231E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19986  012322  50DF               	movf	indf2,w,c
 19987  012324  EC81  F0AB         	call	_isdigit
 19988  012328  B0D8               	btfsc	status,0,c
 19989  01232A  D7D8               	goto	l3643
 19990  01232C  0100               	movlb	0	; () banked
 19991  01232E  516A               	movf	atoi@sign& (0+255),w,b
 19992  012330  B4D8               	btfsc	status,2,c
 19993  012332  D00D               	goto	l3645
 19994                           
 19995                           ; BSR set to: 0
 19996  012334  C06B  F068         	movff	atoi@a,??_atoi
 19997  012338  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19998  01233C  1F68               	comf	??_atoi& (0+255),f,b
 19999  01233E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 20000  012340  4B68               	infsnz	??_atoi& (0+255),f,b
 20001  012342  2B69               	incf	(??_atoi+1)& (0+255),f,b
 20002  012344  C068  F066         	movff	??_atoi,?_atoi
 20003  012348  C069  F067         	movff	??_atoi+1,?_atoi+1
 20004  01234C  0012               	return	
 20005  01234E                     l3645:
 20006                           
 20007                           ; BSR set to: 0
 20008  01234E  C06B  F066         	movff	atoi@a,?_atoi
 20009  012352  C06C  F067         	movff	atoi@a+1,?_atoi+1
 20010                           
 20011                           ; BSR set to: 0
 20012  012356  0012               	return		;funcret
 20013  012358                     __end_of_atoi:
 20014                           	opt stack 0
 20015                           tblptru	equ	0xFF8
 20016                           tblptrh	equ	0xFF7
 20017                           tblptrl	equ	0xFF6
 20018                           tablat	equ	0xFF5
 20019                           prodh	equ	0xFF4
 20020                           prodl	equ	0xFF3
 20021                           postinc0	equ	0xFEE
 20022                           wreg	equ	0xFE8
 20023                           postinc1	equ	0xFE6
 20024                           postdec1	equ	0xFE5
 20025                           plusw1	equ	0xFE3
 20026                           fsr1h	equ	0xFE2
 20027                           fsr1l	equ	0xFE1
 20028                           indf2	equ	0xFDF
 20029                           postinc2	equ	0xFDE
 20030                           postdec2	equ	0xFDD
 20031                           plusw2	equ	0xFDB
 20032                           fsr2h	equ	0xFDA
 20033                           fsr2l	equ	0xFD9
 20034                           status	equ	0xFD8
 20035                           
 20036 ;; *************** function _isdigit *****************
 20037 ;; Defined at:
 20038 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 20039 ;; Parameters:    Size  Location     Type
 20040 ;;  c               1    wreg     unsigned char 
 20041 ;; Auto vars:     Size  Location     Type
 20042 ;;  c               1    2[BANK0 ] unsigned char 
 20043 ;; Return value:  Size  Location     Type
 20044 ;;		None               void
 20045 ;; Registers used:
 20046 ;;		wreg, status,2, status,0
 20047 ;; Tracked objects:
 20048 ;;		On entry : 0/0
 20049 ;;		On exit  : 0/0
 20050 ;;		Unchanged: 0/0
 20051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20053 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20056 ;;Total ram usage:        3 bytes
 20057 ;; Hardware stack levels used:    1
 20058 ;; Hardware stack levels required when called:   10
 20059 ;; This function calls:
 20060 ;;		Nothing
 20061 ;; This function is called by:
 20062 ;;		_atoi
 20063 ;;		_atol
 20064 ;; This function uses a non-reentrant model
 20065 ;;
 20066                           
 20067                           	psect	text82
 20068  015702                     __ptext82:
 20069                           	opt stack 0
 20070  015702                     _isdigit:
 20071                           	opt stack 16
 20072                           
 20073                           ; BSR set to: 0
 20074                           ;incstack = 0
 20075                           ;isdigit@c stored from wreg
 20076  015702  0100               	movlb	0	; () banked
 20077  015704  6F62               	movwf	isdigit@c& (0+255),b
 20078  015706  0E00               	movlw	0
 20079  015708  0100               	movlb	0	; () banked
 20080  01570A  6F61               	movwf	_isdigit$8180& (0+255),b
 20081                           
 20082                           ; BSR set to: 0
 20083  01570C  0E3A               	movlw	58
 20084  01570E  6162               	cpfslt	isdigit@c& (0+255),b
 20085  015710  D005               	goto	l3664
 20086                           
 20087                           ; BSR set to: 0
 20088  015712  0E2F               	movlw	47
 20089  015714  6562               	cpfsgt	isdigit@c& (0+255),b
 20090  015716  D002               	goto	l3664
 20091                           
 20092                           ; BSR set to: 0
 20093  015718  0E01               	movlw	1
 20094  01571A  6F61               	movwf	_isdigit$8180& (0+255),b
 20095  01571C                     l3664:
 20096                           
 20097                           ; BSR set to: 0
 20098                           
 20099                           ; BSR set to: 0
 20100  01571C  C061  F060         	movff	_isdigit$8180,??_isdigit
 20101  015720  3160               	rrcf	??_isdigit& (0+255),w,b
 20102  015722  0012               	return	
 20103  015724                     __end_of_isdigit:
 20104                           	opt stack 0
 20105                           tblptru	equ	0xFF8
 20106                           tblptrh	equ	0xFF7
 20107                           tblptrl	equ	0xFF6
 20108                           tablat	equ	0xFF5
 20109                           prodh	equ	0xFF4
 20110                           prodl	equ	0xFF3
 20111                           postinc0	equ	0xFEE
 20112                           wreg	equ	0xFE8
 20113                           postinc1	equ	0xFE6
 20114                           postdec1	equ	0xFE5
 20115                           plusw1	equ	0xFE3
 20116                           fsr1h	equ	0xFE2
 20117                           fsr1l	equ	0xFE1
 20118                           indf2	equ	0xFDF
 20119                           postinc2	equ	0xFDE
 20120                           postdec2	equ	0xFDD
 20121                           plusw2	equ	0xFDB
 20122                           fsr2h	equ	0xFDA
 20123                           fsr2l	equ	0xFD9
 20124                           status	equ	0xFD8
 20125                           
 20126 ;; *************** function ___wmul *****************
 20127 ;; Defined at:
 20128 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 20129 ;; Parameters:    Size  Location     Type
 20130 ;;  multiplier      2    0[BANK0 ] unsigned int 
 20131 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 20132 ;; Auto vars:     Size  Location     Type
 20133 ;;  product         2    4[BANK0 ] unsigned int 
 20134 ;; Return value:  Size  Location     Type
 20135 ;;                  2    0[BANK0 ] unsigned int 
 20136 ;; Registers used:
 20137 ;;		wreg, status,2, status,0, prodl, prodh
 20138 ;; Tracked objects:
 20139 ;;		On entry : 0/0
 20140 ;;		On exit  : 0/0
 20141 ;;		Unchanged: 0/0
 20142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20143 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20144 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20146 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20147 ;;Total ram usage:        6 bytes
 20148 ;; Hardware stack levels used:    1
 20149 ;; Hardware stack levels required when called:   10
 20150 ;; This function calls:
 20151 ;;		Nothing
 20152 ;; This function is called by:
 20153 ;;		_atoi
 20154 ;; This function uses a non-reentrant model
 20155 ;;
 20156                           
 20157                           	psect	text83
 20158  0155D8                     __ptext83:
 20159                           	opt stack 0
 20160  0155D8                     ___wmul:
 20161                           	opt stack 16
 20162                           
 20163                           ; BSR set to: 0
 20164                           ;incstack = 0
 20165  0155D8  0100               	movlb	0	; () banked
 20166  0155DA  5160               	movf	___wmul@multiplier& (0+255),w,b
 20167  0155DC  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20168  0155DE  CFF3 F064          	movff	prodl,___wmul@product
 20169  0155E2  CFF4 F065          	movff	prodh,___wmul@product+1
 20170  0155E6  5160               	movf	___wmul@multiplier& (0+255),w,b
 20171  0155E8  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20172  0155EA  50F3               	movf	prodl,w,c
 20173  0155EC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20174  0155EE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20175  0155F0  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20176  0155F2  50F3               	movf	prodl,w,c
 20177  0155F4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20178                           
 20179                           ; BSR set to: 0
 20180  0155F6  C064  F060         	movff	___wmul@product,?___wmul
 20181  0155FA  C065  F061         	movff	___wmul@product+1,?___wmul+1
 20182  0155FE  0012               	return	
 20183  015600                     __end_of___wmul:
 20184                           	opt stack 0
 20185                           tblptru	equ	0xFF8
 20186                           tblptrh	equ	0xFF7
 20187                           tblptrl	equ	0xFF6
 20188                           tablat	equ	0xFF5
 20189                           prodh	equ	0xFF4
 20190                           prodl	equ	0xFF3
 20191                           postinc0	equ	0xFEE
 20192                           wreg	equ	0xFE8
 20193                           postinc1	equ	0xFE6
 20194                           postdec1	equ	0xFE5
 20195                           plusw1	equ	0xFE3
 20196                           fsr1h	equ	0xFE2
 20197                           fsr1l	equ	0xFE1
 20198                           indf2	equ	0xFDF
 20199                           postinc2	equ	0xFDE
 20200                           postdec2	equ	0xFDD
 20201                           plusw2	equ	0xFDB
 20202                           fsr2h	equ	0xFDA
 20203                           fsr2l	equ	0xFD9
 20204                           status	equ	0xFD8
 20205                           
 20206 ;; *************** function __get_item *****************
 20207 ;; Defined at:
 20208 ;;		line 67 in file "config_file.c"
 20209 ;; Parameters:    Size  Location     Type
 20210 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20211 ;;		 -> configFile_read@item_string(31), 
 20212 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20213 ;;		 -> configFile_read@value_string(12), 
 20214 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20215 ;;		 -> ConfigFile_buffer(512), 
 20216 ;; Auto vars:     Size  Location     Type
 20217 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20218 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20219 ;; Return value:  Size  Location     Type
 20220 ;;                  1    wreg      unsigned char 
 20221 ;; Registers used:
 20222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20223 ;; Tracked objects:
 20224 ;;		On entry : 0/0
 20225 ;;		On exit  : 0/0
 20226 ;;		Unchanged: 0/0
 20227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20228 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20230 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20231 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20232 ;;Total ram usage:       11 bytes
 20233 ;; Hardware stack levels used:    1
 20234 ;; Hardware stack levels required when called:   10
 20235 ;; This function calls:
 20236 ;;		Nothing
 20237 ;; This function is called by:
 20238 ;;		_configFile_read
 20239 ;; This function uses a non-reentrant model
 20240 ;;
 20241                           
 20242                           	psect	text84
 20243  00FA6A                     __ptext84:
 20244                           	opt stack 0
 20245  00FA6A                     __get_item:
 20246                           	opt stack 18
 20247                           
 20248                           ;config_file.c: 69: uint8_t item_ctr;;config_file.c: 70: uint8_t value_ctr;;config_file.
      +                          c: 73: for(item_ctr=0;item_ctr<30;++item_ctr)
 20249                           
 20250                           ; BSR set to: 0
 20251                           ;incstack = 0
 20252  00FA6A  0E00               	movlw	0
 20253  00FA6C  0100               	movlb	0	; () banked
 20254  00FA6E  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20255  00FA70                     l16108:
 20256                           
 20257                           ; BSR set to: 0
 20258  00FA70  0E1D               	movlw	29
 20259  00FA72  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20260  00FA74  D001               	goto	l2921
 20261  00FA76  D020               	goto	u14920
 20262  00FA78                     l2921:
 20263                           
 20264                           ; BSR set to: 0
 20265                           ;config_file.c: 74: {;config_file.c: 76: if(buffer[item_ctr] == '=')
 20266                           
 20267                           ; BSR set to: 0
 20268  00FA78  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20269  00FA7A  0D01               	mullw	1
 20270  00FA7C  50F3               	movf	prodl,w,c
 20271  00FA7E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20272  00FA80  6ED9               	movwf	fsr2l,c
 20273  00FA82  50F4               	movf	prodh,w,c
 20274  00FA84  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20275  00FA86  6EDA               	movwf	fsr2h,c
 20276  00FA88  0E3D               	movlw	61
 20277  00FA8A  18DE               	xorwf	postinc2,w,c
 20278  00FA8C  B4D8               	btfsc	status,2,c
 20279  00FA8E  D014               	goto	u14920
 20280                           
 20281                           ; BSR set to: 0
 20282                           ;config_file.c: 79: };config_file.c: 80: item_string[item_ctr] = buffer[item_ctr];
 20283                           
 20284                           ; BSR set to: 0
 20285                           
 20286                           ; BSR set to: 0
 20287                           ;config_file.c: 77: {;config_file.c: 78: break;
 20288  00FA90  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20289  00FA92  0D01               	mullw	1
 20290  00FA94  50F3               	movf	prodl,w,c
 20291  00FA96  2564               	addwf	__get_item@buffer& (0+255),w,b
 20292  00FA98  6ED9               	movwf	fsr2l,c
 20293  00FA9A  50F4               	movf	prodh,w,c
 20294  00FA9C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20295  00FA9E  6EDA               	movwf	fsr2h,c
 20296  00FAA0  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20297  00FAA2  0D01               	mullw	1
 20298  00FAA4  50F3               	movf	prodl,w,c
 20299  00FAA6  2560               	addwf	__get_item@item_string& (0+255),w,b
 20300  00FAA8  6EE1               	movwf	fsr1l,c
 20301  00FAAA  50F4               	movf	prodh,w,c
 20302  00FAAC  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20303  00FAAE  6EE2               	movwf	fsr1h,c
 20304  00FAB0  CFDF FFE7          	movff	indf2,indf1
 20305                           
 20306                           ; BSR set to: 0
 20307  00FAB4  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20308  00FAB6  D7DC               	goto	l16108
 20309  00FAB8                     u14920:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;config_file.c: 81: };config_file.c: 82: item_string[item_ctr++] = 0;
 20313                           
 20314                           ; BSR set to: 0
 20315  00FAB8  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20316  00FABA  0D01               	mullw	1
 20317  00FABC  50F3               	movf	prodl,w,c
 20318  00FABE  2560               	addwf	__get_item@item_string& (0+255),w,b
 20319  00FAC0  6ED9               	movwf	fsr2l,c
 20320  00FAC2  50F4               	movf	prodh,w,c
 20321  00FAC4  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20322  00FAC6  6EDA               	movwf	fsr2h,c
 20323  00FAC8  0E00               	movlw	0
 20324  00FACA  6EDF               	movwf	indf2,c
 20325                           
 20326                           ; BSR set to: 0
 20327  00FACC  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;config_file.c: 85: for(value_ctr=0;value_ctr<11;++value_ctr)
 20331  00FACE  0E00               	movlw	0
 20332  00FAD0  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20333  00FAD2                     l16128:
 20334                           
 20335                           ; BSR set to: 0
 20336  00FAD2  0E0A               	movlw	10
 20337  00FAD4  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20338  00FAD6  D001               	goto	l2924
 20339  00FAD8  D03B               	goto	u14960
 20340  00FADA                     l2924:
 20341                           
 20342                           ; BSR set to: 0
 20343                           ;config_file.c: 86: {;config_file.c: 88: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20344                           
 20345                           ; BSR set to: 0
 20346  00FADA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20347  00FADC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20348  00FAE0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20349  00FAE2  2766               	addwf	??__get_item& (0+255),f,b
 20350  00FAE4  0E00               	movlw	0
 20351  00FAE6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20352  00FAE8  5166               	movf	??__get_item& (0+255),w,b
 20353  00FAEA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20354  00FAEC  6ED9               	movwf	fsr2l,c
 20355  00FAEE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20356  00FAF0  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20357  00FAF2  6EDA               	movwf	fsr2h,c
 20358  00FAF4  0E0D               	movlw	13
 20359  00FAF6  18DE               	xorwf	postinc2,w,c
 20360  00FAF8  B4D8               	btfsc	status,2,c
 20361  00FAFA  D02A               	goto	u14960
 20362                           
 20363                           ; BSR set to: 0
 20364  00FAFC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20365  00FAFE  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20366  00FB02  6B67               	clrf	(??__get_item+1)& (0+255),b
 20367  00FB04  2766               	addwf	??__get_item& (0+255),f,b
 20368  00FB06  0E00               	movlw	0
 20369  00FB08  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20370  00FB0A  5166               	movf	??__get_item& (0+255),w,b
 20371  00FB0C  2564               	addwf	__get_item@buffer& (0+255),w,b
 20372  00FB0E  6ED9               	movwf	fsr2l,c
 20373  00FB10  5167               	movf	(??__get_item+1)& (0+255),w,b
 20374  00FB12  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20375  00FB14  6EDA               	movwf	fsr2h,c
 20376  00FB16  0E0A               	movlw	10
 20377  00FB18  18DE               	xorwf	postinc2,w,c
 20378  00FB1A  B4D8               	btfsc	status,2,c
 20379  00FB1C  D019               	goto	u14960
 20380                           
 20381                           ; BSR set to: 0
 20382                           ;config_file.c: 91: };config_file.c: 92: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20383                           
 20384                           ; BSR set to: 0
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;config_file.c: 89: {;config_file.c: 90: break;
 20388  00FB1E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20389  00FB20  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20390  00FB24  6B67               	clrf	(??__get_item+1)& (0+255),b
 20391  00FB26  2766               	addwf	??__get_item& (0+255),f,b
 20392  00FB28  0E00               	movlw	0
 20393  00FB2A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20394  00FB2C  5166               	movf	??__get_item& (0+255),w,b
 20395  00FB2E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20396  00FB30  6ED9               	movwf	fsr2l,c
 20397  00FB32  5167               	movf	(??__get_item+1)& (0+255),w,b
 20398  00FB34  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20399  00FB36  6EDA               	movwf	fsr2h,c
 20400  00FB38  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20401  00FB3A  0D01               	mullw	1
 20402  00FB3C  50F3               	movf	prodl,w,c
 20403  00FB3E  2562               	addwf	__get_item@value_string& (0+255),w,b
 20404  00FB40  6EE1               	movwf	fsr1l,c
 20405  00FB42  50F4               	movf	prodh,w,c
 20406  00FB44  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20407  00FB46  6EE2               	movwf	fsr1h,c
 20408  00FB48  CFDF FFE7          	movff	indf2,indf1
 20409                           
 20410                           ; BSR set to: 0
 20411  00FB4C  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20412  00FB4E  D7C1               	goto	l16128
 20413  00FB50                     u14960:
 20414                           
 20415                           ; BSR set to: 0
 20416                           ;config_file.c: 93: };config_file.c: 94: value_string[value_ctr++] = 0;
 20417                           
 20418                           ; BSR set to: 0
 20419  00FB50  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20420  00FB52  0D01               	mullw	1
 20421  00FB54  50F3               	movf	prodl,w,c
 20422  00FB56  2562               	addwf	__get_item@value_string& (0+255),w,b
 20423  00FB58  6ED9               	movwf	fsr2l,c
 20424  00FB5A  50F4               	movf	prodh,w,c
 20425  00FB5C  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20426  00FB5E  6EDA               	movwf	fsr2h,c
 20427  00FB60  0E00               	movlw	0
 20428  00FB62  6EDF               	movwf	indf2,c
 20429                           
 20430                           ; BSR set to: 0
 20431  00FB64  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20432                           
 20433                           ; BSR set to: 0
 20434                           ;config_file.c: 97: if((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_ctr]
      +                          =='\n'))
 20435  00FB66  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20436  00FB68  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20437  00FB6C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20438  00FB6E  2766               	addwf	??__get_item& (0+255),f,b
 20439  00FB70  0E00               	movlw	0
 20440  00FB72  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20441  00FB74  5166               	movf	??__get_item& (0+255),w,b
 20442  00FB76  2564               	addwf	__get_item@buffer& (0+255),w,b
 20443  00FB78  6ED9               	movwf	fsr2l,c
 20444  00FB7A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20445  00FB7C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20446  00FB7E  6EDA               	movwf	fsr2h,c
 20447  00FB80  0E0D               	movlw	13
 20448  00FB82  18DE               	xorwf	postinc2,w,c
 20449  00FB84  B4D8               	btfsc	status,2,c
 20450  00FB86  D011               	goto	u14980
 20451                           
 20452                           ; BSR set to: 0
 20453  00FB88  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20454  00FB8A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20455  00FB8E  6B67               	clrf	(??__get_item+1)& (0+255),b
 20456  00FB90  2766               	addwf	??__get_item& (0+255),f,b
 20457  00FB92  0E00               	movlw	0
 20458  00FB94  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20459  00FB96  5166               	movf	??__get_item& (0+255),w,b
 20460  00FB98  2564               	addwf	__get_item@buffer& (0+255),w,b
 20461  00FB9A  6ED9               	movwf	fsr2l,c
 20462  00FB9C  5167               	movf	(??__get_item+1)& (0+255),w,b
 20463  00FB9E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20464  00FBA0  6EDA               	movwf	fsr2h,c
 20465  00FBA2  0E0A               	movlw	10
 20466  00FBA4  18DE               	xorwf	postinc2,w,c
 20467  00FBA6  A4D8               	btfss	status,2,c
 20468  00FBA8  D005               	goto	l2929
 20469  00FBAA                     u14980:
 20470                           
 20471                           ; BSR set to: 0
 20472                           ;config_file.c: 98: {;config_file.c: 99: return (item_ctr+value_ctr+1);
 20473                           
 20474                           ; BSR set to: 0
 20475  00FBAA  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20476  00FBAC  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20477  00FBAE  6F66               	movwf	??__get_item& (0+255),b
 20478  00FBB0  2966               	incf	??__get_item& (0+255),w,b
 20479                           
 20480                           ; BSR set to: 0
 20481                           ;config_file.c: 100: }
 20482                           
 20483                           ; BSR set to: 0
 20484  00FBB2  0012               	return	
 20485  00FBB4                     l2929:
 20486                           
 20487                           ; BSR set to: 0
 20488                           ;config_file.c: 101: else;config_file.c: 102: {;config_file.c: 103: return (item_ctr+val
      +                          ue_ctr);
 20489                           
 20490                           ; BSR set to: 0
 20491  00FBB4  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20492  00FBB6  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20493                           
 20494                           ; BSR set to: 0
 20495  00FBB8  0012               	return	
 20496  00FBBA                     __end_of__get_item:
 20497                           	opt stack 0
 20498                           tblptru	equ	0xFF8
 20499                           tblptrh	equ	0xFF7
 20500                           tblptrl	equ	0xFF6
 20501                           tablat	equ	0xFF5
 20502                           prodh	equ	0xFF4
 20503                           prodl	equ	0xFF3
 20504                           postinc0	equ	0xFEE
 20505                           wreg	equ	0xFE8
 20506                           indf1	equ	0xFE7
 20507                           postinc1	equ	0xFE6
 20508                           postdec1	equ	0xFE5
 20509                           plusw1	equ	0xFE3
 20510                           fsr1h	equ	0xFE2
 20511                           fsr1l	equ	0xFE1
 20512                           indf2	equ	0xFDF
 20513                           postinc2	equ	0xFDE
 20514                           postdec2	equ	0xFDD
 20515                           plusw2	equ	0xFDB
 20516                           fsr2h	equ	0xFDA
 20517                           fsr2l	equ	0xFD9
 20518                           status	equ	0xFD8
 20519                           
 20520 ;; *************** function _adc_init *****************
 20521 ;; Defined at:
 20522 ;;		line 19 in file "adc.c"
 20523 ;; Parameters:    Size  Location     Type
 20524 ;;		None
 20525 ;; Auto vars:     Size  Location     Type
 20526 ;;		None
 20527 ;; Return value:  Size  Location     Type
 20528 ;;                  1    wreg      void 
 20529 ;; Registers used:
 20530 ;;		wreg, status,2
 20531 ;; Tracked objects:
 20532 ;;		On entry : 0/0
 20533 ;;		On exit  : 0/0
 20534 ;;		Unchanged: 0/0
 20535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20540 ;;Total ram usage:        0 bytes
 20541 ;; Hardware stack levels used:    1
 20542 ;; Hardware stack levels required when called:   10
 20543 ;; This function calls:
 20544 ;;		Nothing
 20545 ;; This function is called by:
 20546 ;;		_system_init
 20547 ;; This function uses a non-reentrant model
 20548 ;;
 20549                           
 20550                           	psect	text85
 20551  01479E                     __ptext85:
 20552                           	opt stack 0
 20553  01479E                     _adc_init:
 20554                           	opt stack 19
 20555                           
 20556                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20557                           
 20558                           ; BSR set to: 0
 20559                           ;incstack = 0
 20560  01479E  0E00               	movlw	0
 20561  0147A0  0101               	movlb	1	; () banked
 20562  0147A2  6F99               	movwf	(_os+40)& (0+255),b	;volatile
 20563  0147A4  0E00               	movlw	0
 20564  0147A6  6F98               	movwf	(_os+39)& (0+255),b	;volatile
 20565                           
 20566                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20567  0147A8  0E00               	movlw	0
 20568  0147AA  6F9B               	movwf	(_os+42)& (0+255),b	;volatile
 20569  0147AC  0E00               	movlw	0
 20570  0147AE  6F9A               	movwf	(_os+41)& (0+255),b	;volatile
 20571                           
 20572                           ;adc.c: 24: os.fan_on = 0;
 20573  0147B0  0E00               	movlw	0
 20574  0147B2  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 20575                           
 20576                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20577  0147B4  0E00               	movlw	0
 20578  0147B6  0102               	movlb	2	; () banked
 20579  0147B8  6F1F               	movwf	_params& (0+255),b
 20580                           
 20581                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20582  0147BA  0E00               	movlw	0
 20583  0147BC  6F21               	movwf	(_params+2)& (0+255),b
 20584  0147BE  0E00               	movlw	0
 20585  0147C0  6F20               	movwf	(_params+1)& (0+255),b
 20586                           
 20587                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20588  0147C2  0E00               	movlw	0
 20589  0147C4  6F24               	movwf	(_params+5)& (0+255),b
 20590                           
 20591                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20592  0147C6  0E00               	movlw	0
 20593  0147C8  6F23               	movwf	(_params+4)& (0+255),b
 20594  0147CA  0E00               	movlw	0
 20595  0147CC  6F22               	movwf	(_params+3)& (0+255),b
 20596                           
 20597                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20598  0147CE  0E00               	movlw	0
 20599  0147D0  6F25               	movwf	(_params+6)& (0+255),b
 20600                           
 20601                           ; BSR set to: 2
 20602                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20603  0147D2  9EC2               	bcf	4034,7,c	;volatile
 20604                           
 20605                           ; BSR set to: 2
 20606                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20607  0147D4  9CC2               	bcf	4034,6,c	;volatile
 20608                           
 20609                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20610  0147D6  50C2               	movf	4034,w,c	;volatile
 20611  0147D8  0BC3               	andlw	-61
 20612  0147DA  0924               	iorlw	36
 20613  0147DC  6EC2               	movwf	4034,c	;volatile
 20614                           
 20615                           ; BSR set to: 2
 20616                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20617  0147DE  8EC1               	bsf	4033,7,c	;volatile
 20618                           
 20619                           ; BSR set to: 2
 20620                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20621  0147E0  9CC1               	bcf	4033,6,c	;volatile
 20622                           
 20623                           ; BSR set to: 2
 20624                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20625  0147E2  86C1               	bsf	4033,3,c	;volatile
 20626  0147E4  88C1               	bsf	4033,4,c	;volatile
 20627  0147E6  8AC1               	bsf	4033,5,c	;volatile
 20628                           
 20629                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20630  0147E8  50C1               	movf	4033,w,c	;volatile
 20631  0147EA  0BF8               	andlw	-8
 20632  0147EC  0906               	iorlw	6
 20633  0147EE  6EC1               	movwf	4033,c	;volatile
 20634                           
 20635                           ; BSR set to: 2
 20636                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20637  0147F0  80C2               	bsf	4034,0,c	;volatile
 20638                           
 20639                           ; BSR set to: 2
 20640                           ;adc.c: 41: ADCON0bits.GO = 1;
 20641  0147F2  82C2               	bsf	4034,1,c	;volatile
 20642                           
 20643                           ; BSR set to: 2
 20644  0147F4  0012               	return		;funcret
 20645  0147F6                     __end_of_adc_init:
 20646                           	opt stack 0
 20647                           tblptru	equ	0xFF8
 20648                           tblptrh	equ	0xFF7
 20649                           tblptrl	equ	0xFF6
 20650                           tablat	equ	0xFF5
 20651                           prodh	equ	0xFF4
 20652                           prodl	equ	0xFF3
 20653                           postinc0	equ	0xFEE
 20654                           wreg	equ	0xFE8
 20655                           indf1	equ	0xFE7
 20656                           postinc1	equ	0xFE6
 20657                           postdec1	equ	0xFE5
 20658                           plusw1	equ	0xFE3
 20659                           fsr1h	equ	0xFE2
 20660                           fsr1l	equ	0xFE1
 20661                           indf2	equ	0xFDF
 20662                           postinc2	equ	0xFDE
 20663                           postdec2	equ	0xFDD
 20664                           plusw2	equ	0xFDB
 20665                           fsr2h	equ	0xFDA
 20666                           fsr2l	equ	0xFD9
 20667                           status	equ	0xFD8
 20668                           
 20669 ;; *************** function __system_timer0_init *****************
 20670 ;; Defined at:
 20671 ;;		line 125 in file "os.c"
 20672 ;; Parameters:    Size  Location     Type
 20673 ;;		None
 20674 ;; Auto vars:     Size  Location     Type
 20675 ;;		None
 20676 ;; Return value:  Size  Location     Type
 20677 ;;                  1    wreg      void 
 20678 ;; Registers used:
 20679 ;;		wreg, status,2
 20680 ;; Tracked objects:
 20681 ;;		On entry : 0/0
 20682 ;;		On exit  : 0/0
 20683 ;;		Unchanged: 0/0
 20684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20689 ;;Total ram usage:        0 bytes
 20690 ;; Hardware stack levels used:    1
 20691 ;; Hardware stack levels required when called:   10
 20692 ;; This function calls:
 20693 ;;		Nothing
 20694 ;; This function is called by:
 20695 ;;		_system_init
 20696 ;; This function uses a non-reentrant model
 20697 ;;
 20698                           
 20699                           	psect	text86
 20700  015488                     __ptext86:
 20701                           	opt stack 0
 20702  015488                     __system_timer0_init:
 20703                           	opt stack 19
 20704                           
 20705                           ;os.c: 130: T0CONbits.T0CS = 0;
 20706                           
 20707                           ; BSR set to: 2
 20708                           ;incstack = 0
 20709  015488  9AD5               	bcf	4053,5,c	;volatile
 20710                           
 20711                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20712  01548A  9CD5               	bcf	4053,6,c	;volatile
 20713                           
 20714                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20715  01548C  94D5               	bcf	4053,2,c	;volatile
 20716                           
 20717                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20718  01548E  82D5               	bsf	4053,1,c	;volatile
 20719                           
 20720                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20721  015490  90D5               	bcf	4053,0,c	;volatile
 20722                           
 20723                           ;os.c: 138: T0CONbits.PSA = 0;
 20724  015492  96D5               	bcf	4053,3,c	;volatile
 20725                           
 20726                           ;os.c: 140: TMR0H = 0xFA;
 20727  015494  0EFA               	movlw	250
 20728  015496  6ED7               	movwf	4055,c	;volatile
 20729                           
 20730                           ;os.c: 141: TMR0L = 0x24;
 20731  015498  0E24               	movlw	36
 20732  01549A  6ED6               	movwf	4054,c	;volatile
 20733                           
 20734                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20735  01549C  8ED5               	bsf	4053,7,c	;volatile
 20736                           
 20737                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20738  01549E  94F2               	bcf	intcon,2,c	;volatile
 20739                           
 20740                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20741  0154A0  8AF2               	bsf	intcon,5,c	;volatile
 20742                           
 20743                           ;os.c: 148: INTCONbits.GIE = 1;
 20744  0154A2  8EF2               	bsf	intcon,7,c	;volatile
 20745                           
 20746                           ;os.c: 151: os.subTimeSlot = 0;
 20747  0154A4  0E00               	movlw	0
 20748  0154A6  0101               	movlb	1	; () banked
 20749  0154A8  6F71               	movwf	_os& (0+255),b	;volatile
 20750                           
 20751                           ;os.c: 152: os.timeSlot = 0;
 20752  0154AA  0E00               	movlw	0
 20753  0154AC  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 20754                           
 20755                           ;os.c: 153: os.done = 0;
 20756  0154AE  0E00               	movlw	0
 20757  0154B0  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 20758                           
 20759                           ; BSR set to: 1
 20760  0154B2  0012               	return		;funcret
 20761  0154B4                     __end_of__system_timer0_init:
 20762                           	opt stack 0
 20763                           tblptru	equ	0xFF8
 20764                           tblptrh	equ	0xFF7
 20765                           tblptrl	equ	0xFF6
 20766                           tablat	equ	0xFF5
 20767                           prodh	equ	0xFF4
 20768                           prodl	equ	0xFF3
 20769                           intcon	equ	0xFF2
 20770                           postinc0	equ	0xFEE
 20771                           wreg	equ	0xFE8
 20772                           indf1	equ	0xFE7
 20773                           postinc1	equ	0xFE6
 20774                           postdec1	equ	0xFE5
 20775                           plusw1	equ	0xFE3
 20776                           fsr1h	equ	0xFE2
 20777                           fsr1l	equ	0xFE1
 20778                           indf2	equ	0xFDF
 20779                           postinc2	equ	0xFDE
 20780                           postdec2	equ	0xFDD
 20781                           plusw2	equ	0xFDB
 20782                           fsr2h	equ	0xFDA
 20783                           fsr2l	equ	0xFD9
 20784                           status	equ	0xFD8
 20785                           
 20786 ;; *************** function __system_pin_setup *****************
 20787 ;; Defined at:
 20788 ;;		line 59 in file "os.c"
 20789 ;; Parameters:    Size  Location     Type
 20790 ;;		None
 20791 ;; Auto vars:     Size  Location     Type
 20792 ;;		None
 20793 ;; Return value:  Size  Location     Type
 20794 ;;                  1    wreg      void 
 20795 ;; Registers used:
 20796 ;;		wreg, status,2
 20797 ;; Tracked objects:
 20798 ;;		On entry : 0/0
 20799 ;;		On exit  : 0/0
 20800 ;;		Unchanged: 0/0
 20801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20806 ;;Total ram usage:        0 bytes
 20807 ;; Hardware stack levels used:    1
 20808 ;; Hardware stack levels required when called:   10
 20809 ;; This function calls:
 20810 ;;		Nothing
 20811 ;; This function is called by:
 20812 ;;		_system_init
 20813 ;; This function uses a non-reentrant model
 20814 ;;
 20815                           
 20816                           	psect	text87
 20817  014090                     __ptext87:
 20818                           	opt stack 0
 20819  014090                     __system_pin_setup:
 20820                           	opt stack 19
 20821                           
 20822                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20823                           
 20824                           ; BSR set to: 1
 20825                           ;incstack = 0
 20826  014090  8A95               	bsf	3989,5,c	;volatile
 20827                           
 20828                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20829  014092  9895               	bcf	3989,4,c	;volatile
 20830                           
 20831                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20832  014094  9C95               	bcf	3989,6,c	;volatile
 20833                           
 20834                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20835  014096  9E95               	bcf	3989,7,c	;volatile
 20836                           
 20837                           ;os.c: 66: LATDbits.LD7 = 1;
 20838  014098  8E8C               	bsf	3980,7,c	;volatile
 20839                           
 20840                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20841  01409A  8693               	bsf	3987,3,c	;volatile
 20842                           
 20843                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20844  01409C  010F               	movlb	15	; () banked
 20845  01409E  9349               	bcf	73,1,b	;volatile
 20846                           
 20847                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20848  0140A0  9E94               	bcf	3988,7,c	;volatile
 20849                           
 20850                           ;os.c: 72: LATCbits.LC7 = 0;
 20851  0140A2  9E8B               	bcf	3979,7,c	;volatile
 20852                           
 20853                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20854  0140A4  9C94               	bcf	3988,6,c	;volatile
 20855                           
 20856                           ;os.c: 75: LATCbits.LC6 = 0;
 20857  0140A6  9C8B               	bcf	3979,6,c	;volatile
 20858                           
 20859                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20860  0140A8  9692               	bcf	3986,3,c	;volatile
 20861                           
 20862                           ;os.c: 78: LATAbits.LA3 = 0;
 20863  0140AA  9689               	bcf	3977,3,c	;volatile
 20864                           
 20865                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20866  0140AC  9294               	bcf	3988,1,c	;volatile
 20867                           
 20868                           ;os.c: 81: LATCbits.LC1 = 0;
 20869  0140AE  928B               	bcf	3979,1,c	;volatile
 20870                           
 20871                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20872  0140B0  8A93               	bsf	3987,5,c	;volatile
 20873                           
 20874                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20875  0140B2  8893               	bsf	3987,4,c	;volatile
 20876                           
 20877                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20878  0140B4  9093               	bcf	3987,0,c	;volatile
 20879                           
 20880                           ;os.c: 90: LATBbits.LB0 = 1;
 20881  0140B6  808A               	bsf	3978,0,c	;volatile
 20882                           
 20883                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20884  0140B8  9493               	bcf	3987,2,c	;volatile
 20885                           
 20886                           ;os.c: 93: LATBbits.LB2 = 0;
 20887  0140BA  948A               	bcf	3978,2,c	;volatile
 20888                           
 20889                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20890  0140BC  9293               	bcf	3987,1,c	;volatile
 20891                           
 20892                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20893  0140BE  8549               	bsf	73,2,b	;volatile
 20894                           
 20895                           ;os.c: 97: LATBbits.LB1 = 0;
 20896  0140C0  928A               	bcf	3978,1,c	;volatile
 20897                           
 20898                           ; BSR set to: 15
 20899                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20900  0140C2  0E55               	movlw	85
 20901  0140C4  6EA7               	movwf	4007,c	;volsfr
 20902  0140C6  0EAA               	movlw	170
 20903  0140C8  6EA7               	movwf	4007,c	;volsfr
 20904                           
 20905                           ; BSR set to: 15
 20906  0140CA  010E               	movlb	14	; () banked
 20907  0140CC  91BF               	bcf	191,0,b	;volatile
 20908                           
 20909                           ;os.c: 99: RPOR4 = 14;
 20910  0140CE  0E0E               	movlw	14
 20911  0140D0  6FC4               	movwf	196,b	;volatile
 20912                           
 20913                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20914  0140D2  0E55               	movlw	85
 20915  0140D4  6EA7               	movwf	4007,c	;volsfr
 20916  0140D6  0EAA               	movlw	170
 20917  0140D8  6EA7               	movwf	4007,c	;volsfr
 20918                           
 20919                           ; BSR set to: 14
 20920  0140DA  81BF               	bsf	191,0,b	;volatile
 20921                           
 20922                           ; BSR set to: 14
 20923                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20924  0140DC  8495               	bsf	3989,2,c	;volatile
 20925                           
 20926                           ; BSR set to: 14
 20927                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20928  0140DE  8496               	bsf	3990,2,c	;volatile
 20929                           
 20930                           ; BSR set to: 14
 20931                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20932  0140E0  010F               	movlb	15	; () banked
 20933  0140E2  8F48               	bsf	72,7,b	;volatile
 20934                           
 20935                           ; BSR set to: 15
 20936                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20937  0140E4  8096               	bsf	3990,0,c	;volatile
 20938                           
 20939                           ; BSR set to: 15
 20940                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20941  0140E6  8B48               	bsf	72,5,b	;volatile
 20942                           
 20943                           ; BSR set to: 15
 20944                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20945  0140E8  8296               	bsf	3990,1,c	;volatile
 20946                           
 20947                           ; BSR set to: 15
 20948                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20949  0140EA  8D48               	bsf	72,6,b	;volatile
 20950                           
 20951                           ; BSR set to: 15
 20952                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20953  0140EC  8092               	bsf	3986,0,c	;volatile
 20954                           
 20955                           ; BSR set to: 15
 20956                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20957  0140EE  8148               	bsf	72,0,b	;volatile
 20958                           
 20959                           ; BSR set to: 15
 20960                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20961  0140F0  8492               	bsf	3986,2,c	;volatile
 20962                           
 20963                           ; BSR set to: 15
 20964                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20965  0140F2  8548               	bsf	72,2,b	;volatile
 20966                           
 20967                           ; BSR set to: 15
 20968                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20969  0140F4  8292               	bsf	3986,1,c	;volatile
 20970                           
 20971                           ; BSR set to: 15
 20972                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20973  0140F6  8348               	bsf	72,1,b	;volatile
 20974                           
 20975                           ; BSR set to: 15
 20976  0140F8  0012               	return		;funcret
 20977  0140FA                     __end_of__system_pin_setup:
 20978                           	opt stack 0
 20979                           tblptru	equ	0xFF8
 20980                           tblptrh	equ	0xFF7
 20981                           tblptrl	equ	0xFF6
 20982                           tablat	equ	0xFF5
 20983                           prodh	equ	0xFF4
 20984                           prodl	equ	0xFF3
 20985                           intcon	equ	0xFF2
 20986                           postinc0	equ	0xFEE
 20987                           wreg	equ	0xFE8
 20988                           indf1	equ	0xFE7
 20989                           postinc1	equ	0xFE6
 20990                           postdec1	equ	0xFE5
 20991                           plusw1	equ	0xFE3
 20992                           fsr1h	equ	0xFE2
 20993                           fsr1l	equ	0xFE1
 20994                           indf2	equ	0xFDF
 20995                           postinc2	equ	0xFDE
 20996                           postdec2	equ	0xFDD
 20997                           plusw2	equ	0xFDB
 20998                           fsr2h	equ	0xFDA
 20999                           fsr2l	equ	0xFD9
 21000                           status	equ	0xFD8
 21001                           
 21002 ;; *************** function __backlight_init *****************
 21003 ;; Defined at:
 21004 ;;		line 158 in file "os.c"
 21005 ;; Parameters:    Size  Location     Type
 21006 ;;		None
 21007 ;; Auto vars:     Size  Location     Type
 21008 ;;		None
 21009 ;; Return value:  Size  Location     Type
 21010 ;;                  1    wreg      void 
 21011 ;; Registers used:
 21012 ;;		None
 21013 ;; Tracked objects:
 21014 ;;		On entry : 0/0
 21015 ;;		On exit  : 0/0
 21016 ;;		Unchanged: 0/0
 21017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21022 ;;Total ram usage:        0 bytes
 21023 ;; Hardware stack levels used:    1
 21024 ;; Hardware stack levels required when called:   10
 21025 ;; This function calls:
 21026 ;;		Nothing
 21027 ;; This function is called by:
 21028 ;;		_system_init
 21029 ;; This function uses a non-reentrant model
 21030 ;;
 21031                           
 21032                           	psect	text88
 21033  015970                     __ptext88:
 21034                           	opt stack 0
 21035  015970                     __backlight_init:
 21036                           	opt stack 19
 21037                           
 21038                           ;os.c: 160: LATCbits.LC1 = 1;
 21039                           
 21040                           ; BSR set to: 15
 21041                           ;incstack = 0
 21042  015970  828B               	bsf	3979,1,c	;volatile
 21043  015972  0012               	return		;funcret
 21044  015974                     __end_of__backlight_init:
 21045                           	opt stack 0
 21046                           tblptru	equ	0xFF8
 21047                           tblptrh	equ	0xFF7
 21048                           tblptrl	equ	0xFF6
 21049                           tablat	equ	0xFF5
 21050                           prodh	equ	0xFF4
 21051                           prodl	equ	0xFF3
 21052                           intcon	equ	0xFF2
 21053                           postinc0	equ	0xFEE
 21054                           wreg	equ	0xFE8
 21055                           indf1	equ	0xFE7
 21056                           postinc1	equ	0xFE6
 21057                           postdec1	equ	0xFE5
 21058                           plusw1	equ	0xFE3
 21059                           fsr1h	equ	0xFE2
 21060                           fsr1l	equ	0xFE1
 21061                           indf2	equ	0xFDF
 21062                           postinc2	equ	0xFDE
 21063                           postdec2	equ	0xFDD
 21064                           plusw2	equ	0xFDB
 21065                           fsr2h	equ	0xFDA
 21066                           fsr2l	equ	0xFD9
 21067                           status	equ	0xFD8
 21068                           
 21069 ;; *************** function _motor_process_cue *****************
 21070 ;; Defined at:
 21071 ;;		line 159 in file "motor.c"
 21072 ;; Parameters:    Size  Location     Type
 21073 ;;		None
 21074 ;; Auto vars:     Size  Location     Type
 21075 ;;		None
 21076 ;; Return value:  Size  Location     Type
 21077 ;;                  1    wreg      void 
 21078 ;; Registers used:
 21079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21080 ;; Tracked objects:
 21081 ;;		On entry : 0/0
 21082 ;;		On exit  : 0/0
 21083 ;;		Unchanged: 0/0
 21084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21089 ;;Total ram usage:        0 bytes
 21090 ;; Hardware stack levels used:    1
 21091 ;; Hardware stack levels required when called:   13
 21092 ;; This function calls:
 21093 ;;		__motor_run
 21094 ;;		_motor_items_in_cue
 21095 ;; This function is called by:
 21096 ;;		_main
 21097 ;; This function uses a non-reentrant model
 21098 ;;
 21099                           
 21100                           	psect	text89
 21101  013D86                     __ptext89:
 21102                           	opt stack 0
 21103  013D86                     _motor_process_cue:
 21104                           	opt stack 17
 21105                           
 21106                           ;motor.c: 161: if(motor_items_in_cue()==0)
 21107                           
 21108                           ;incstack = 0
 21109  013D86  EC7D  F0AC         	call	_motor_items_in_cue	;wreg free
 21110  013D8A  0900               	iorlw	0
 21111  013D8C  B4D8               	btfsc	status,2,c
 21112  013D8E  0012               	return	
 21113                           
 21114                           ;motor.c: 166: else if(os.busy)
 21115                           
 21116                           ;motor.c: 165: }
 21117                           
 21118                           ;motor.c: 162: {;motor.c: 164: return;
 21119  013D90  0101               	movlb	1	; () banked
 21120  013D92  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21121  013D94  A4D8               	btfss	status,2,c
 21122  013D96  0012               	return	
 21123                           
 21124                           ; BSR set to: 1
 21125                           ;motor.c: 171: else;motor.c: 172: {;motor.c: 174: _motor_run(;motor.c: 175: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 176: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 177: motor_command_cue[motor_cue_read_index].speed;motor.c: 178:
      +                           );
 21126                           
 21127                           ; BSR set to: 1
 21128                           
 21129                           ; BSR set to: 1
 21130                           ;motor.c: 170: }
 21131                           
 21132                           ; BSR set to: 1
 21133                           ;motor.c: 167: {;motor.c: 169: return;
 21134  013D98  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21135  013D9A  0D07               	mullw	7
 21136  013D9C  0E01               	movlw	1
 21137  013D9E  26F3               	addwf	prodl,f,c
 21138  013DA0  0E00               	movlw	0
 21139  013DA2  22F4               	addwfc	prodh,f,c
 21140  013DA4  0E00               	movlw	low _motor_command_cue
 21141  013DA6  24F3               	addwf	prodl,w,c
 21142  013DA8  6ED9               	movwf	fsr2l,c
 21143  013DAA  0E03               	movlw	high _motor_command_cue
 21144  013DAC  20F4               	addwfc	prodh,w,c
 21145  013DAE  6EDA               	movwf	fsr2h,c
 21146  013DB0  CFDE F08F          	movff	postinc2,__motor_run@distance_in_steps
 21147  013DB4  CFDE F090          	movff	postinc2,__motor_run@distance_in_steps+1
 21148  013DB8  CFDE F091          	movff	postinc2,__motor_run@distance_in_steps+2
 21149  013DBC  CFDE F092          	movff	postinc2,__motor_run@distance_in_steps+3
 21150  013DC0  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21151  013DC2  0D07               	mullw	7
 21152  013DC4  0E05               	movlw	5
 21153  013DC6  26F3               	addwf	prodl,f,c
 21154  013DC8  0E00               	movlw	0
 21155  013DCA  22F4               	addwfc	prodh,f,c
 21156  013DCC  0E00               	movlw	low _motor_command_cue
 21157  013DCE  24F3               	addwf	prodl,w,c
 21158  013DD0  6ED9               	movwf	fsr2l,c
 21159  013DD2  0E03               	movlw	high _motor_command_cue
 21160  013DD4  20F4               	addwfc	prodh,w,c
 21161  013DD6  6EDA               	movwf	fsr2h,c
 21162  013DD8  CFDE F093          	movff	postinc2,__motor_run@speed
 21163  013DDC  CFDD F094          	movff	postdec2,__motor_run@speed+1
 21164  013DE0  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21165  013DE2  0D07               	mullw	7
 21166  013DE4  0E00               	movlw	low _motor_command_cue
 21167  013DE6  24F3               	addwf	prodl,w,c
 21168  013DE8  6ED9               	movwf	fsr2l,c
 21169  013DEA  0E03               	movlw	high _motor_command_cue
 21170  013DEC  20F4               	addwfc	prodh,w,c
 21171  013DEE  6EDA               	movwf	fsr2h,c
 21172  013DF0  50DF               	movf	indf2,w,c
 21173  013DF2  ECA3  F062         	call	__motor_run
 21174                           
 21175                           ;motor.c: 180: ++motor_cue_read_index;
 21176  013DF6  0101               	movlb	1	; () banked
 21177  013DF8  2B58               	incf	_motor_cue_read_index& (0+255),f,b
 21178                           
 21179                           ; BSR set to: 1
 21180  013DFA  0012               	return	
 21181  013DFC                     __end_of_motor_process_cue:
 21182                           	opt stack 0
 21183                           tblptru	equ	0xFF8
 21184                           tblptrh	equ	0xFF7
 21185                           tblptrl	equ	0xFF6
 21186                           tablat	equ	0xFF5
 21187                           prodh	equ	0xFF4
 21188                           prodl	equ	0xFF3
 21189                           intcon	equ	0xFF2
 21190                           postinc0	equ	0xFEE
 21191                           wreg	equ	0xFE8
 21192                           indf1	equ	0xFE7
 21193                           postinc1	equ	0xFE6
 21194                           postdec1	equ	0xFE5
 21195                           plusw1	equ	0xFE3
 21196                           fsr1h	equ	0xFE2
 21197                           fsr1l	equ	0xFE1
 21198                           indf2	equ	0xFDF
 21199                           postinc2	equ	0xFDE
 21200                           postdec2	equ	0xFDD
 21201                           plusw2	equ	0xFDB
 21202                           fsr2h	equ	0xFDA
 21203                           fsr2l	equ	0xFD9
 21204                           status	equ	0xFD8
 21205                           
 21206 ;; *************** function _encoder_statemachine *****************
 21207 ;; Defined at:
 21208 ;;		line 210 in file "encoder.c"
 21209 ;; Parameters:    Size  Location     Type
 21210 ;;		None
 21211 ;; Auto vars:     Size  Location     Type
 21212 ;;		None
 21213 ;; Return value:  Size  Location     Type
 21214 ;;                  1    wreg      void 
 21215 ;; Registers used:
 21216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21217 ;; Tracked objects:
 21218 ;;		On entry : 0/0
 21219 ;;		On exit  : 0/0
 21220 ;;		Unchanged: 0/0
 21221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21224 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21225 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21226 ;;Total ram usage:        4 bytes
 21227 ;; Hardware stack levels used:    1
 21228 ;; Hardware stack levels required when called:   16
 21229 ;; This function calls:
 21230 ;;		__divide_jump_size_decrement
 21231 ;;		__divide_jump_size_increment
 21232 ;;		__encoder_next_arc_step_size
 21233 ;;		__encoder_next_divide_step_size
 21234 ;;		__encoder_next_setup_stepsize
 21235 ;;		_motor_arc_move
 21236 ;;		_motor_change_speed
 21237 ;;		_motor_decrease_manual_speed
 21238 ;;		_motor_divide_jump
 21239 ;;		_motor_divide_jump_to_nearest
 21240 ;;		_motor_go_to_steps_position
 21241 ;;		_motor_increase_manual_speed
 21242 ;;		_motor_nonzero_steps_from_degrees
 21243 ;;		_motor_schedule_command
 21244 ;;		_motor_set_zero
 21245 ;;		_motor_stop
 21246 ;; This function is called by:
 21247 ;;		_main
 21248 ;; This function uses a non-reentrant model
 21249 ;;
 21250                           
 21251                           	psect	text90
 21252  00AF94                     __ptext90:
 21253                           	opt stack 0
 21254  00AF94                     _encoder_statemachine:
 21255                           	opt stack 14
 21256                           
 21257                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21258                           
 21259                           ;incstack = 0
 21260  00AF94  0101               	movlb	1	; () banked
 21261  00AF96  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21262  00AF98  A4D8               	btfss	status,2,c
 21263  00AF9A  EFCF  F05B         	goto	l2671
 21264                           
 21265                           ; BSR set to: 1
 21266  00AF9E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21267  00AFA0  A4D8               	btfss	status,2,c
 21268  00AFA2  D3FD               	goto	l2671
 21269                           
 21270                           ; BSR set to: 1
 21271  00AFA4  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 21272  00AFA6  A4D8               	btfss	status,2,c
 21273  00AFA8  D3FA               	goto	l2671
 21274                           
 21275                           ; BSR set to: 1
 21276  00AFAA  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 21277  00AFAC  B4D8               	btfsc	status,2,c
 21278  00AFAE  0012               	return	
 21279  00AFB0  D3F6               	goto	l2671
 21280  00AFB2                     
 21281                           ; BSR set to: 1
 21282                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21283                           
 21284                           ; BSR set to: 1
 21285  00AFB2  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21286  00AFB4  B4D8               	btfsc	status,2,c
 21287  00AFB6  D003               	goto	u17190
 21288                           
 21289                           ; BSR set to: 1
 21290  00AFB8  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21291  00AFBA  A4D8               	btfss	status,2,c
 21292  00AFBC  D002               	goto	l2675
 21293  00AFBE                     u17190:
 21294                           
 21295                           ; BSR set to: 1
 21296                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21297                           
 21298                           ; BSR set to: 1
 21299  00AFBE  0E11               	movlw	17
 21300  00AFC0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21301  00AFC2                     l2675:
 21302                           
 21303                           ; BSR set to: 1
 21304                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21305                           
 21306                           ; BSR set to: 1
 21307  00AFC2  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21308  00AFC6  0100               	movlb	0	; () banked
 21309  00AFC8  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21310  00AFCA  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21311  00AFCC  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21312  00AFCE  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21313  00AFD2  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21314  00AFD4  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21315  00AFD6  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21316  00AFD8  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21317  00AFDA  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21318  00AFDC  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21319  00AFDE  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21320  00AFE0  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21321  00AFE2  D008               	goto	l2678
 21322  00AFE4  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21323  00AFE6  E103               	bnz	u17200
 21324  00AFE8  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21325  00AFEA  A0D8               	btfss	status,0,c
 21326  00AFEC  D003               	goto	l2678
 21327  00AFEE                     u17200:
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21331  00AFEE  0E02               	movlw	2
 21332  00AFF0  0101               	movlb	1	; () banked
 21333  00AFF2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21334  00AFF4                     l2678:
 21335                           
 21336                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21337                           
 21338                           ; BSR set to: 1
 21339  00AFF4  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21340  00AFF8  0100               	movlb	0	; () banked
 21341  00AFFA  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21342  00AFFC  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21343  00AFFE  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21344  00B000  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21345  00B004  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21346  00B006  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21347  00B008  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21348  00B00A  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21349  00B00C  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21350  00B00E  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21351  00B010  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21352  00B012  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21353  00B014  D3E9               	goto	l2706
 21354                           
 21355                           ; BSR set to: 0
 21356                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21357  00B016  0E05               	movlw	5
 21358  00B018  D3B0               	goto	L22
 21359  00B01A                     
 21360                           ; BSR set to: 1
 21361                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21362                           
 21363                           ; BSR set to: 1
 21364  00B01A  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21365  00B01C  B4D8               	btfsc	status,2,c
 21366  00B01E  D003               	goto	u17230
 21367                           
 21368                           ; BSR set to: 1
 21369  00B020  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21370  00B022  A4D8               	btfss	status,2,c
 21371  00B024  D002               	goto	l2682
 21372  00B026                     u17230:
 21373                           
 21374                           ; BSR set to: 1
 21375                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21376                           
 21377                           ; BSR set to: 1
 21378  00B026  0E31               	movlw	49
 21379  00B028  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21380  00B02A                     l2682:
 21381                           
 21382                           ; BSR set to: 1
 21383                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21384                           
 21385                           ; BSR set to: 1
 21386  00B02A  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21387  00B02E  0100               	movlb	0	; () banked
 21388  00B030  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21389  00B032  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21390  00B034  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21391  00B036  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21392  00B03A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21393  00B03C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21394  00B03E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21395  00B040  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21396  00B042  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21397  00B044  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21398  00B046  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21399  00B048  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21400  00B04A  D008               	goto	l2685
 21401  00B04C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21402  00B04E  E103               	bnz	u17240
 21403  00B050  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21404  00B052  A0D8               	btfss	status,0,c
 21405  00B054  D003               	goto	l2685
 21406  00B056                     u17240:
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21410  00B056  0E03               	movlw	3
 21411  00B058  0101               	movlb	1	; () banked
 21412  00B05A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21413  00B05C                     l2685:
 21414                           
 21415                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21416                           
 21417                           ; BSR set to: 1
 21418  00B05C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21419  00B060  0100               	movlb	0	; () banked
 21420  00B062  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21421  00B064  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21422  00B066  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21423  00B068  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21424  00B06C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21425  00B06E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21426  00B070  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21427  00B072  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21428  00B074  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21429  00B076  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21430  00B078  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21431  00B07A  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21432  00B07C  D3B5               	goto	l2706
 21433                           
 21434                           ; BSR set to: 0
 21435                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21436  00B07E  0E01               	movlw	1
 21437  00B080  D37C               	goto	L22
 21438  00B082                     
 21439                           ; BSR set to: 1
 21440                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21441                           
 21442                           ; BSR set to: 1
 21443  00B082  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21444  00B084  B4D8               	btfsc	status,2,c
 21445  00B086  D003               	goto	u17270
 21446                           
 21447                           ; BSR set to: 1
 21448  00B088  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21449  00B08A  A4D8               	btfss	status,2,c
 21450  00B08C  D002               	goto	l2688
 21451  00B08E                     u17270:
 21452                           
 21453                           ; BSR set to: 1
 21454                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21455                           
 21456                           ; BSR set to: 1
 21457  00B08E  0E51               	movlw	81
 21458  00B090  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21459  00B092                     l2688:
 21460                           
 21461                           ; BSR set to: 1
 21462                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21463                           
 21464                           ; BSR set to: 1
 21465  00B092  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21466  00B096  0100               	movlb	0	; () banked
 21467  00B098  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21468  00B09A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21469  00B09C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21470  00B09E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21471  00B0A2  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21472  00B0A4  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21473  00B0A6  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21474  00B0A8  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21475  00B0AA  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21476  00B0AC  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21477  00B0AE  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21478  00B0B0  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21479  00B0B2  D008               	goto	l2691
 21480  00B0B4  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21481  00B0B6  E103               	bnz	u17280
 21482  00B0B8  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21483  00B0BA  A0D8               	btfss	status,0,c
 21484  00B0BC  D003               	goto	l2691
 21485  00B0BE                     u17280:
 21486                           
 21487                           ; BSR set to: 0
 21488                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21489  00B0BE  0E04               	movlw	4
 21490  00B0C0  0101               	movlb	1	; () banked
 21491  00B0C2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21492  00B0C4                     l2691:
 21493                           
 21494                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21495                           
 21496                           ; BSR set to: 1
 21497  00B0C4  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21498  00B0C8  0100               	movlb	0	; () banked
 21499  00B0CA  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21500  00B0CC  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21501  00B0CE  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21502  00B0D0  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21503  00B0D4  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21504  00B0D6  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21505  00B0D8  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21506  00B0DA  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21507  00B0DC  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21508  00B0DE  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21509  00B0E0  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21510  00B0E2  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21511  00B0E4  D381               	goto	l2706
 21512                           
 21513                           ; BSR set to: 0
 21514                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21515  00B0E6  0E02               	movlw	2
 21516  00B0E8  D348               	goto	L22
 21517  00B0EA                     
 21518                           ; BSR set to: 1
 21519                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21520                           
 21521                           ; BSR set to: 1
 21522  00B0EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21523  00B0EC  B4D8               	btfsc	status,2,c
 21524  00B0EE  D003               	goto	u17310
 21525                           
 21526                           ; BSR set to: 1
 21527  00B0F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21528  00B0F2  A4D8               	btfss	status,2,c
 21529  00B0F4  D002               	goto	l2694
 21530  00B0F6                     u17310:
 21531                           
 21532                           ; BSR set to: 1
 21533                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21534                           
 21535                           ; BSR set to: 1
 21536  00B0F6  0E82               	movlw	130
 21537  00B0F8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21538  00B0FA                     l2694:
 21539                           
 21540                           ; BSR set to: 1
 21541                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21542                           
 21543                           ; BSR set to: 1
 21544  00B0FA  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21545  00B0FE  0100               	movlb	0	; () banked
 21546  00B100  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21547  00B102  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21548  00B104  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21549  00B106  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21550  00B10A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21551  00B10C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21552  00B10E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21553  00B110  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21554  00B112  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21555  00B114  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21556  00B116  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21557  00B118  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21558  00B11A  D008               	goto	l2697
 21559  00B11C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21560  00B11E  E103               	bnz	u17320
 21561  00B120  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21562  00B122  A0D8               	btfss	status,0,c
 21563  00B124  D003               	goto	l2697
 21564  00B126                     u17320:
 21565                           
 21566                           ; BSR set to: 0
 21567                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21568  00B126  0E05               	movlw	5
 21569  00B128  0101               	movlb	1	; () banked
 21570  00B12A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21571  00B12C                     l2697:
 21572                           
 21573                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21574                           
 21575                           ; BSR set to: 1
 21576  00B12C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21577  00B130  0100               	movlb	0	; () banked
 21578  00B132  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21579  00B134  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21580  00B136  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21581  00B138  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21582  00B13C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21583  00B13E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21584  00B140  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21585  00B142  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21586  00B144  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21587  00B146  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21588  00B148  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21589  00B14A  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21590  00B14C  D34D               	goto	l2706
 21591                           
 21592                           ; BSR set to: 0
 21593                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21594  00B14E  0E03               	movlw	3
 21595  00B150  D314               	goto	L22
 21596  00B152                     
 21597                           ; BSR set to: 1
 21598                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21599                           
 21600                           ; BSR set to: 1
 21601  00B152  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21602  00B154  B4D8               	btfsc	status,2,c
 21603  00B156  D003               	goto	u17350
 21604                           
 21605                           ; BSR set to: 1
 21606  00B158  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21607  00B15A  A4D8               	btfss	status,2,c
 21608  00B15C  D002               	goto	l2700
 21609  00B15E                     u17350:
 21610                           
 21611                           ; BSR set to: 1
 21612                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21613                           
 21614                           ; BSR set to: 1
 21615  00B15E  0E71               	movlw	113
 21616  00B160  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21617  00B162                     l2700:
 21618                           
 21619                           ; BSR set to: 1
 21620                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21621                           
 21622                           ; BSR set to: 1
 21623  00B162  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21624  00B166  0100               	movlb	0	; () banked
 21625  00B168  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21626  00B16A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21627  00B16C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21628  00B16E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21629  00B172  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21630  00B174  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21631  00B176  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21632  00B178  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21633  00B17A  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21634  00B17C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21635  00B17E  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21636  00B180  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21637  00B182  D008               	goto	l2703
 21638  00B184  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21639  00B186  E103               	bnz	u17360
 21640  00B188  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21641  00B18A  A0D8               	btfss	status,0,c
 21642  00B18C  D003               	goto	l2703
 21643  00B18E                     u17360:
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21647  00B18E  0E01               	movlw	1
 21648  00B190  0101               	movlb	1	; () banked
 21649  00B192  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21650  00B194                     l2703:
 21651                           
 21652                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21653                           
 21654                           ; BSR set to: 1
 21655  00B194  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21656  00B198  0100               	movlb	0	; () banked
 21657  00B19A  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21658  00B19C  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21659  00B19E  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21660  00B1A0  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21661  00B1A4  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21662  00B1A6  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21663  00B1A8  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21664  00B1AA  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21665  00B1AC  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21666  00B1AE  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21667  00B1B0  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21668  00B1B2  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21669  00B1B4  D319               	goto	l2706
 21670                           
 21671                           ; BSR set to: 0
 21672                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21673  00B1B6  0E04               	movlw	4
 21674  00B1B8  D2E0               	goto	L22
 21675  00B1BA                     
 21676                           ; BSR set to: 1
 21677  00B1BA  0101               	movlb	1	; () banked
 21678  00B1BC  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21679                           
 21680                           ; Switch size 1, requested type "space"
 21681                           ; Number of cases is 6, Range of values is 1 to 240
 21682                           ; switch strategies available:
 21683                           ; Name         Instructions Cycles
 21684                           ; simple_byte           19    10 (average)
 21685                           ;	Chosen strategy is simple_byte
 21686  00B1BE  0A01               	xorlw	1	; case 1
 21687  00B1C0  B4D8               	btfsc	status,2,c
 21688  00B1C2  D6F7               	goto	l2674
 21689  00B1C4  0A03               	xorlw	3	; case 2
 21690  00B1C6  B4D8               	btfsc	status,2,c
 21691  00B1C8  D728               	goto	l2681
 21692  00B1CA  0A01               	xorlw	1	; case 3
 21693  00B1CC  B4D8               	btfsc	status,2,c
 21694  00B1CE  D759               	goto	l2687
 21695  00B1D0  0A07               	xorlw	7	; case 4
 21696  00B1D2  B4D8               	btfsc	status,2,c
 21697  00B1D4  D78A               	goto	l2693
 21698  00B1D6  0A01               	xorlw	1	; case 5
 21699  00B1D8  B4D8               	btfsc	status,2,c
 21700  00B1DA  D7BB               	goto	l2699
 21701  00B1DC  0AF5               	xorlw	245	; case 240
 21702                           
 21703                           ; BSR set to: 1
 21704                           ;encoder.c: 268: break;
 21705  00B1DE  D304               	goto	l2706
 21706  00B1E0                     
 21707                           ; BSR set to: 1
 21708                           ;encoder.c: 274: if(os.button1==1)
 21709                           
 21710                           ; BSR set to: 1
 21711  00B1E0  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21712  00B1E2  A4D8               	btfss	status,2,c
 21713  00B1E4  D00E               	goto	l2710
 21714                           
 21715                           ; BSR set to: 1
 21716                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 21717  00B1E6  0E00               	movlw	0
 21718  00B1E8  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 21719  00B1EA  0E00               	movlw	0
 21720  00B1EC  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 21721  00B1EE  0E00               	movlw	0
 21722  00B1F0  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 21723  00B1F2  0E00               	movlw	0
 21724  00B1F4  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 21725                           
 21726                           ;encoder.c: 277: os.divide_position = 0;
 21727  00B1F6  0E00               	movlw	0
 21728  00B1F8  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 21729  00B1FA  0E00               	movlw	0
 21730  00B1FC  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 21731                           
 21732                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21733  00B1FE  0E21               	movlw	33
 21734  00B200  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21735  00B202                     l2710:
 21736                           
 21737                           ; BSR set to: 1
 21738                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 21739                           
 21740                           ; BSR set to: 1
 21741  00B202  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21742  00B204  0A80               	xorlw	128
 21743  00B206  0F7F               	addlw	-129
 21744  00B208  A0D8               	btfss	status,0,c
 21745  00B20A  D002               	goto	l2711
 21746                           
 21747                           ; BSR set to: 1
 21748                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21749  00B20C  0E12               	movlw	18
 21750  00B20E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21751  00B210                     l2711:
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;encoder.c: 282: if(os.encoder1Count<0)
 21755                           
 21756                           ; BSR set to: 1
 21757  00B210  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21758  00B212  D01B               	goto	l2713
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21762  00B214  0E12               	movlw	18
 21763  00B216  D00F               	goto	L10
 21764  00B218                     
 21765                           ; BSR set to: 1
 21766                           ;encoder.c: 286: if(os.button1==1)
 21767                           
 21768                           ; BSR set to: 1
 21769  00B218  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21770  00B21A  A4D8               	btfss	status,2,c
 21771  00B21C  D002               	goto	l2715
 21772                           
 21773                           ; BSR set to: 1
 21774                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21775  00B21E  0E01               	movlw	1
 21776  00B220  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21777  00B222                     l2715:
 21778                           
 21779                           ; BSR set to: 1
 21780                           ;encoder.c: 288: if(os.encoder1Count>0)
 21781                           
 21782                           ; BSR set to: 1
 21783  00B222  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21784  00B224  0A80               	xorlw	128
 21785  00B226  0F7F               	addlw	-129
 21786  00B228  A0D8               	btfss	status,0,c
 21787  00B22A  D002               	goto	l2716
 21788                           
 21789                           ; BSR set to: 1
 21790                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21791  00B22C  0E11               	movlw	17
 21792  00B22E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21793  00B230                     l2716:
 21794                           
 21795                           ; BSR set to: 1
 21796                           ;encoder.c: 290: if(os.encoder1Count<0)
 21797                           
 21798                           ; BSR set to: 1
 21799  00B230  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21800  00B232  D00B               	goto	l2713
 21801                           
 21802                           ; BSR set to: 1
 21803                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21804  00B234  0E11               	movlw	17
 21805  00B236                     L10:
 21806  00B236  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21807                           
 21808                           ; BSR set to: 1
 21809                           ;encoder.c: 293: }
 21810                           
 21811                           ; BSR set to: 1
 21812                           ;encoder.c: 292: break;
 21813  00B238  D008               	goto	l2713
 21814  00B23A                     
 21815                           ; BSR set to: 1
 21816  00B23A  0101               	movlb	1	; () banked
 21817  00B23C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21818                           
 21819                           ; Switch size 1, requested type "space"
 21820                           ; Number of cases is 2, Range of values is 17 to 18
 21821                           ; switch strategies available:
 21822                           ; Name         Instructions Cycles
 21823                           ; simple_byte            7     4 (average)
 21824                           ;	Chosen strategy is simple_byte
 21825  00B23E  0A11               	xorlw	17	; case 17
 21826  00B240  B4D8               	btfsc	status,2,c
 21827  00B242  D7CE               	goto	l2709
 21828  00B244  0A03               	xorlw	3	; case 18
 21829  00B246  B4D8               	btfsc	status,2,c
 21830  00B248  D7E7               	goto	l2714
 21831  00B24A                     l2713:
 21832                           
 21833                           ; BSR set to: 1
 21834                           ;encoder.c: 294: if(os.button2==1)
 21835                           
 21836                           ; BSR set to: 1
 21837  00B24A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21838  00B24C  A4D8               	btfss	status,2,c
 21839  00B24E  D00A               	goto	l2718
 21840                           
 21841                           ; BSR set to: 1
 21842                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21843  00B250  C181  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21844  00B254  C182  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21845  00B258  ECFE  F09E         	call	__encoder_next_setup_stepsize	;wreg free
 21846  00B25C  C060  F181         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 21847  00B260  C061  F182         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 21848  00B264                     l2718:
 21849                           
 21850                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 21851  00B264  0101               	movlb	1	; () banked
 21852  00B266  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21853  00B268  0A80               	xorlw	128
 21854  00B26A  0F7F               	addlw	-129
 21855  00B26C  A0D8               	btfss	status,0,c
 21856  00B26E  D019               	goto	l2720
 21857                           
 21858                           ; BSR set to: 1
 21859                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 21860  00B270  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21861  00B272  A4D8               	btfss	status,2,c
 21862  00B274  D016               	goto	l2720
 21863                           
 21864                           ; BSR set to: 1
 21865                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
 21866  00B276  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21867  00B27A  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21868  00B27E  ECBB  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21869  00B282  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21870  00B286  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21871  00B28A  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21872  00B28E  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21873  00B292  0E00               	movlw	0
 21874  00B294  0100               	movlb	0	; () banked
 21875  00B296  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21876  00B298  0E00               	movlw	0
 21877  00B29A  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21878  00B29C  0E01               	movlw	1
 21879  00B29E  EC61  F097         	call	_motor_schedule_command
 21880  00B2A2                     l2720:
 21881                           
 21882                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 21883  00B2A2  0101               	movlb	1	; () banked
 21884  00B2A4  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21885  00B2A6  D2A0               	goto	l2706
 21886                           
 21887                           ; BSR set to: 1
 21888                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 21889  00B2A8  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21890  00B2AA  A4D8               	btfss	status,2,c
 21891  00B2AC  D29D               	goto	l2706
 21892                           
 21893                           ; BSR set to: 1
 21894                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
 21895  00B2AE  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21896  00B2B2  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21897  00B2B6  ECBB  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21898  00B2BA  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21899  00B2BE  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21900  00B2C2  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21901  00B2C6  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21902  00B2CA  0E00               	movlw	0
 21903  00B2CC  0100               	movlb	0	; () banked
 21904  00B2CE  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21905  00B2D0  0E00               	movlw	0
 21906  00B2D2  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21907  00B2D4  0EFF               	movlw	255
 21908  00B2D6  EC61  F097         	call	_motor_schedule_command
 21909                           
 21910                           ;encoder.c: 309: };encoder.c: 310: break;
 21911  00B2DA  D286               	goto	l2706
 21912  00B2DC                     
 21913                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 21914  00B2DC  0101               	movlb	1	; () banked
 21915  00B2DE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21916  00B2E0  B4D8               	btfsc	status,2,c
 21917  00B2E2  D003               	goto	u17500
 21918                           
 21919                           ; BSR set to: 1
 21920  00B2E4  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21921  00B2E6  A4D8               	btfss	status,2,c
 21922  00B2E8  D003               	goto	l2726
 21923  00B2EA                     u17500:
 21924                           
 21925                           ; BSR set to: 1
 21926                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 21927                           
 21928                           ; BSR set to: 1
 21929  00B2EA  0EFF               	movlw	255
 21930  00B2EC  EC61  F098         	call	_motor_set_zero
 21931  00B2F0                     l2726:
 21932                           
 21933                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 21934  00B2F0  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21935  00B2F4  0100               	movlb	0	; () banked
 21936  00B2F6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21937  00B2F8  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21938  00B2FA  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21939  00B2FC  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21940  00B300  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21941  00B302  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21942  00B304  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21943  00B306  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21944  00B308  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21945  00B30A  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21946  00B30C  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21947  00B30E  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21948  00B310  D008               	goto	l2729
 21949  00B312  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21950  00B314  E103               	bnz	u17510
 21951  00B316  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21952  00B318  A0D8               	btfss	status,0,c
 21953  00B31A  D003               	goto	l2729
 21954  00B31C                     u17510:
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21958  00B31C  0E22               	movlw	34
 21959  00B31E  0101               	movlb	1	; () banked
 21960  00B320  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21961  00B322                     l2729:
 21962                           
 21963                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 21964                           
 21965                           ; BSR set to: 1
 21966  00B322  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21967  00B326  0100               	movlb	0	; () banked
 21968  00B328  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21969  00B32A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21970  00B32C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21971  00B32E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21972  00B332  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21973  00B334  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21974  00B336  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21975  00B338  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21976  00B33A  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21977  00B33C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21978  00B33E  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21979  00B340  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21980  00B342  D252               	goto	l2706
 21981                           
 21982                           ; BSR set to: 0
 21983                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 21984  00B344  0E22               	movlw	34
 21985  00B346  D219               	goto	L22
 21986  00B348                     
 21987                           ; BSR set to: 1
 21988                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 21989                           
 21990                           ; BSR set to: 1
 21991  00B348  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21992  00B34A  B4D8               	btfsc	status,2,c
 21993  00B34C  D003               	goto	u17540
 21994                           
 21995                           ; BSR set to: 1
 21996  00B34E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21997  00B350  A4D8               	btfss	status,2,c
 21998  00B352  D003               	goto	l2733
 21999  00B354                     u17540:
 22000                           
 22001                           ; BSR set to: 1
 22002                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22003                           
 22004                           ; BSR set to: 1
 22005  00B354  0E01               	movlw	1
 22006  00B356  EC61  F098         	call	_motor_set_zero
 22007  00B35A                     l2733:
 22008                           
 22009                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22010  00B35A  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22011  00B35E  0100               	movlb	0	; () banked
 22012  00B360  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22013  00B362  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22014  00B364  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22015  00B366  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22016  00B36A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22017  00B36C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22018  00B36E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22019  00B370  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22020  00B372  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22021  00B374  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22022  00B376  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22023  00B378  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22024  00B37A  D008               	goto	l2736
 22025  00B37C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22026  00B37E  E103               	bnz	u17550
 22027  00B380  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22028  00B382  A0D8               	btfss	status,0,c
 22029  00B384  D003               	goto	l2736
 22030  00B386                     u17550:
 22031                           
 22032                           ; BSR set to: 0
 22033                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22034  00B386  0E21               	movlw	33
 22035  00B388  0101               	movlb	1	; () banked
 22036  00B38A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22037  00B38C                     l2736:
 22038                           
 22039                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22040                           
 22041                           ; BSR set to: 1
 22042  00B38C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22043  00B390  0100               	movlb	0	; () banked
 22044  00B392  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22045  00B394  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22046  00B396  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22047  00B398  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22048  00B39C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22049  00B39E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22050  00B3A0  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22051  00B3A2  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22052  00B3A4  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22053  00B3A6  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22054  00B3A8  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22055  00B3AA  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22056  00B3AC  D21D               	goto	l2706
 22057                           
 22058                           ; BSR set to: 0
 22059                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22060  00B3AE  0E21               	movlw	33
 22061  00B3B0  D1E4               	goto	L22
 22062  00B3B2                     
 22063                           ; BSR set to: 1
 22064  00B3B2  0101               	movlb	1	; () banked
 22065  00B3B4  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22066                           
 22067                           ; Switch size 1, requested type "space"
 22068                           ; Number of cases is 2, Range of values is 33 to 34
 22069                           ; switch strategies available:
 22070                           ; Name         Instructions Cycles
 22071                           ; simple_byte            7     4 (average)
 22072                           ;	Chosen strategy is simple_byte
 22073  00B3B6  0A21               	xorlw	33	; case 33
 22074  00B3B8  B4D8               	btfsc	status,2,c
 22075  00B3BA  D790               	goto	l2725
 22076  00B3BC  0A03               	xorlw	3	; case 34
 22077  00B3BE  B4D8               	btfsc	status,2,c
 22078  00B3C0  D7C3               	goto	l2732
 22079                           
 22080                           ; BSR set to: 1
 22081                           ;encoder.c: 336: break;
 22082  00B3C2  D212               	goto	l2706
 22083  00B3C4                     
 22084                           ; BSR set to: 1
 22085                           ;encoder.c: 342: if(os.button1==1)
 22086                           
 22087                           ; BSR set to: 1
 22088  00B3C4  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22089  00B3C6  A4D8               	btfss	status,2,c
 22090  00B3C8  D005               	goto	l2741
 22091                           
 22092                           ; BSR set to: 1
 22093                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22094  00B3CA  ECDD  F07D         	call	_motor_divide_jump_to_nearest	;wreg free
 22095                           
 22096                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22097  00B3CE  0E41               	movlw	65
 22098  00B3D0  0101               	movlb	1	; () banked
 22099  00B3D2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22100  00B3D4                     l2741:
 22101                           
 22102                           ; BSR set to: 1
 22103                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22104                           
 22105                           ; BSR set to: 1
 22106  00B3D4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22107  00B3D6  0A80               	xorlw	128
 22108  00B3D8  0F7F               	addlw	-129
 22109  00B3DA  A0D8               	btfss	status,0,c
 22110  00B3DC  D002               	goto	l2742
 22111                           
 22112                           ; BSR set to: 1
 22113                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22114  00B3DE  0E32               	movlw	50
 22115  00B3E0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22116  00B3E2                     l2742:
 22117                           
 22118                           ; BSR set to: 1
 22119                           ;encoder.c: 350: if(os.encoder1Count<0)
 22120                           
 22121                           ; BSR set to: 1
 22122  00B3E2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22123  00B3E4  D01B               	goto	l2744
 22124                           
 22125                           ; BSR set to: 1
 22126                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22127  00B3E6  0E32               	movlw	50
 22128  00B3E8  D00F               	goto	L13
 22129  00B3EA                     
 22130                           ; BSR set to: 1
 22131                           ;encoder.c: 354: if(os.button1==1)
 22132                           
 22133                           ; BSR set to: 1
 22134  00B3EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22135  00B3EC  A4D8               	btfss	status,2,c
 22136  00B3EE  D002               	goto	l2746
 22137                           
 22138                           ; BSR set to: 1
 22139                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22140  00B3F0  0E02               	movlw	2
 22141  00B3F2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22142  00B3F4                     l2746:
 22143                           
 22144                           ; BSR set to: 1
 22145                           ;encoder.c: 356: if(os.encoder1Count>0)
 22146                           
 22147                           ; BSR set to: 1
 22148  00B3F4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22149  00B3F6  0A80               	xorlw	128
 22150  00B3F8  0F7F               	addlw	-129
 22151  00B3FA  A0D8               	btfss	status,0,c
 22152  00B3FC  D002               	goto	l2747
 22153                           
 22154                           ; BSR set to: 1
 22155                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22156  00B3FE  0E31               	movlw	49
 22157  00B400  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22158  00B402                     l2747:
 22159                           
 22160                           ; BSR set to: 1
 22161                           ;encoder.c: 358: if(os.encoder1Count<0)
 22162                           
 22163                           ; BSR set to: 1
 22164  00B402  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22165  00B404  D00B               	goto	l2744
 22166                           
 22167                           ; BSR set to: 1
 22168                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22169  00B406  0E31               	movlw	49
 22170  00B408                     L13:
 22171  00B408  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22172                           
 22173                           ; BSR set to: 1
 22174                           ;encoder.c: 361: }
 22175                           
 22176                           ; BSR set to: 1
 22177                           ;encoder.c: 360: break;
 22178  00B40A  D008               	goto	l2744
 22179  00B40C                     
 22180                           ; BSR set to: 1
 22181  00B40C  0101               	movlb	1	; () banked
 22182  00B40E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22183                           
 22184                           ; Switch size 1, requested type "space"
 22185                           ; Number of cases is 2, Range of values is 49 to 50
 22186                           ; switch strategies available:
 22187                           ; Name         Instructions Cycles
 22188                           ; simple_byte            7     4 (average)
 22189                           ;	Chosen strategy is simple_byte
 22190  00B410  0A31               	xorlw	49	; case 49
 22191  00B412  B4D8               	btfsc	status,2,c
 22192  00B414  D7D7               	goto	l2740
 22193  00B416  0A03               	xorlw	3	; case 50
 22194  00B418  B4D8               	btfsc	status,2,c
 22195  00B41A  D7E7               	goto	l2745
 22196  00B41C                     l2744:
 22197                           
 22198                           ; BSR set to: 1
 22199                           ;encoder.c: 362: if(os.button2==1)
 22200                           
 22201                           ; BSR set to: 1
 22202  00B41C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22203  00B41E  A4D8               	btfss	status,2,c
 22204  00B420  D005               	goto	l2749
 22205                           
 22206                           ; BSR set to: 1
 22207                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22208  00B422  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22209  00B424  EC00  F0AA         	call	__encoder_next_divide_step_size
 22210  00B428  0101               	movlb	1	; () banked
 22211  00B42A  6F86               	movwf	(_os+21)& (0+255),b	;volatile
 22212  00B42C                     l2749:
 22213                           
 22214                           ; BSR set to: 1
 22215                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22216                           
 22217                           ; BSR set to: 1
 22218  00B42C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22219  00B42E  0A80               	xorlw	128
 22220  00B430  0F7F               	addlw	-129
 22221  00B432  A0D8               	btfss	status,0,c
 22222  00B434  D004               	goto	l2750
 22223                           
 22224                           ; BSR set to: 1
 22225                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22226  00B436  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22227  00B438  2784               	addwf	(_os+19)& (0+255),f,b	;volatile
 22228  00B43A  0E00               	movlw	0
 22229  00B43C  2385               	addwfc	(_os+20)& (0+255),f,b	;volatile
 22230  00B43E                     l2750:
 22231                           
 22232                           ; BSR set to: 1
 22233                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22234  00B43E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22235  00B440  D1D3               	goto	l2706
 22236                           
 22237                           ; BSR set to: 1
 22238                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22239  00B442  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22240  00B444  0100               	movlb	0	; () banked
 22241  00B446  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22242  00B448  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22243  00B44A  0101               	movlb	1	; () banked
 22244  00B44C  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 22245  00B44E  0100               	movlb	0	; () banked
 22246  00B450  5DCD               	subwf	??_encoder_statemachine& (0+255),w,b
 22247  00B452  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22248  00B454  0A80               	xorlw	128
 22249  00B456  6FCF               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22250  00B458  0101               	movlb	1	; () banked
 22251  00B45A  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 22252  00B45C  0A80               	xorlw	128
 22253  00B45E  0100               	movlb	0	; () banked
 22254  00B460  59CF               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22255  00B462  B0D8               	btfsc	status,0,c
 22256  00B464  D006               	goto	l2752
 22257                           
 22258                           ; BSR set to: 0
 22259                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22260  00B466  0101               	movlb	1	; () banked
 22261  00B468  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22262  00B46A  5F84               	subwf	(_os+19)& (0+255),f,b	;volatile
 22263  00B46C  0E00               	movlw	0
 22264  00B46E  5B85               	subwfb	(_os+20)& (0+255),f,b	;volatile
 22265                           
 22266                           ;encoder.c: 375: }
 22267  00B470  D1BB               	goto	l2706
 22268  00B472                     l2752:
 22269                           
 22270                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22271                           
 22272                           ; BSR set to: 1
 22273  00B472  0E00               	movlw	0
 22274  00B474  0101               	movlb	1	; () banked
 22275  00B476  6F85               	movwf	(_os+20)& (0+255),b	;volatile
 22276  00B478  0E01               	movlw	1
 22277  00B47A  6F84               	movwf	(_os+19)& (0+255),b	;volatile
 22278                           
 22279                           ; BSR set to: 1
 22280                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22281                           
 22282                           ; BSR set to: 1
 22283  00B47C  D1B5               	goto	l2706
 22284  00B47E                     
 22285                           ;encoder.c: 384: if(os.button1==1)
 22286                           
 22287                           ; BSR set to: 1
 22288  00B47E  0101               	movlb	1	; () banked
 22289  00B480  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22290  00B482  A4D8               	btfss	status,2,c
 22291  00B484  D002               	goto	l2755
 22292                           
 22293                           ; BSR set to: 1
 22294                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22295  00B486  0E02               	movlw	2
 22296  00B488  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22297  00B48A                     l2755:
 22298                           
 22299                           ; BSR set to: 1
 22300                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22301                           
 22302                           ; BSR set to: 1
 22303  00B48A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22304  00B48C  B4D8               	btfsc	status,2,c
 22305                           
 22306                           ; BSR set to: 1
 22307                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22308  00B48E  ECB7  F097         	call	_motor_divide_jump	;wreg free
 22309                           
 22310                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22311  00B492  0101               	movlb	1	; () banked
 22312  00B494  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22313  00B496  0A80               	xorlw	128
 22314  00B498  0F7F               	addlw	-129
 22315  00B49A  B0D8               	btfsc	status,0,c
 22316                           
 22317                           ; BSR set to: 1
 22318                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22319  00B49C  EC19  F0A8         	call	__divide_jump_size_increment	;wreg free
 22320                           
 22321                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22322  00B4A0  0101               	movlb	1	; () banked
 22323  00B4A2  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22324  00B4A4  D1A1               	goto	l2706
 22325                           
 22326                           ; BSR set to: 1
 22327                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22328  00B4A6  ECA5  F09F         	call	__divide_jump_size_decrement	;wreg free
 22329                           
 22330                           ;encoder.c: 399: };encoder.c: 400: break;
 22331  00B4AA  D19E               	goto	l2706
 22332  00B4AC                     
 22333                           ;encoder.c: 406: if(os.button1==1)
 22334  00B4AC  0101               	movlb	1	; () banked
 22335  00B4AE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22336  00B4B0  A4D8               	btfss	status,2,c
 22337  00B4B2  D002               	goto	l2762
 22338                           
 22339                           ; BSR set to: 1
 22340                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22341  00B4B4  0E62               	movlw	98
 22342  00B4B6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22343  00B4B8                     l2762:
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22347                           
 22348                           ; BSR set to: 1
 22349  00B4B8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22350  00B4BA  0A80               	xorlw	128
 22351  00B4BC  0F7F               	addlw	-129
 22352  00B4BE  A0D8               	btfss	status,0,c
 22353  00B4C0  D002               	goto	l2763
 22354                           
 22355                           ; BSR set to: 1
 22356                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22357  00B4C2  0E52               	movlw	82
 22358  00B4C4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22359  00B4C6                     l2763:
 22360                           
 22361                           ; BSR set to: 1
 22362                           ;encoder.c: 412: if(os.encoder1Count<0)
 22363                           
 22364                           ; BSR set to: 1
 22365  00B4C6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22366  00B4C8  D01B               	goto	l2765
 22367                           
 22368                           ; BSR set to: 1
 22369                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22370  00B4CA  0E52               	movlw	82
 22371  00B4CC  D00F               	goto	L14
 22372  00B4CE                     
 22373                           ; BSR set to: 1
 22374                           ;encoder.c: 416: if(os.button1==1)
 22375                           
 22376                           ; BSR set to: 1
 22377  00B4CE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22378  00B4D0  A4D8               	btfss	status,2,c
 22379  00B4D2  D002               	goto	l2767
 22380                           
 22381                           ; BSR set to: 1
 22382                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22383  00B4D4  0E03               	movlw	3
 22384  00B4D6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22385  00B4D8                     l2767:
 22386                           
 22387                           ; BSR set to: 1
 22388                           ;encoder.c: 418: if(os.encoder1Count>0)
 22389                           
 22390                           ; BSR set to: 1
 22391  00B4D8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22392  00B4DA  0A80               	xorlw	128
 22393  00B4DC  0F7F               	addlw	-129
 22394  00B4DE  A0D8               	btfss	status,0,c
 22395  00B4E0  D002               	goto	l2768
 22396                           
 22397                           ; BSR set to: 1
 22398                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22399  00B4E2  0E51               	movlw	81
 22400  00B4E4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22401  00B4E6                     l2768:
 22402                           
 22403                           ; BSR set to: 1
 22404                           ;encoder.c: 420: if(os.encoder1Count<0)
 22405                           
 22406                           ; BSR set to: 1
 22407  00B4E6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22408  00B4E8  D00B               	goto	l2765
 22409                           
 22410                           ; BSR set to: 1
 22411                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22412  00B4EA  0E51               	movlw	81
 22413  00B4EC                     L14:
 22414  00B4EC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22415                           
 22416                           ; BSR set to: 1
 22417                           ;encoder.c: 423: }
 22418                           
 22419                           ; BSR set to: 1
 22420                           ;encoder.c: 422: break;
 22421  00B4EE  D008               	goto	l2765
 22422  00B4F0                     
 22423                           ; BSR set to: 1
 22424  00B4F0  0101               	movlb	1	; () banked
 22425  00B4F2  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22426                           
 22427                           ; Switch size 1, requested type "space"
 22428                           ; Number of cases is 2, Range of values is 81 to 82
 22429                           ; switch strategies available:
 22430                           ; Name         Instructions Cycles
 22431                           ; simple_byte            7     4 (average)
 22432                           ;	Chosen strategy is simple_byte
 22433  00B4F4  0A51               	xorlw	81	; case 81
 22434  00B4F6  B4D8               	btfsc	status,2,c
 22435  00B4F8  D7D9               	goto	l2761
 22436  00B4FA  0A03               	xorlw	3	; case 82
 22437  00B4FC  B4D8               	btfsc	status,2,c
 22438  00B4FE  D7E7               	goto	l2766
 22439  00B500                     l2765:
 22440                           
 22441                           ; BSR set to: 1
 22442                           ;encoder.c: 424: if(os.button2==1)
 22443                           
 22444                           ; BSR set to: 1
 22445  00B500  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22446  00B502  A4D8               	btfss	status,2,c
 22447  00B504  D00A               	goto	l2770
 22448                           
 22449                           ; BSR set to: 1
 22450                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22451  00B506  C18B  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 22452  00B50A  C18C  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22453  00B50E  EC36  F09F         	call	__encoder_next_arc_step_size	;wreg free
 22454  00B512  C060  F18B         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 22455  00B516  C061  F18C         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 22456  00B51A                     l2770:
 22457                           
 22458                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22459  00B51A  0101               	movlb	1	; () banked
 22460  00B51C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22461  00B51E  0A80               	xorlw	128
 22462  00B520  0F7F               	addlw	-129
 22463  00B522  A0D8               	btfss	status,0,c
 22464  00B524  D01C               	goto	l2772
 22465                           
 22466                           ; BSR set to: 1
 22467                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22468  00B526  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22469  00B528  278D               	addwf	(_os+28)& (0+255),f,b	;volatile
 22470  00B52A  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22471  00B52C  238E               	addwfc	(_os+29)& (0+255),f,b	;volatile
 22472  00B52E  0E00               	movlw	0
 22473  00B530  238F               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22474  00B532  0E00               	movlw	0
 22475  00B534  2390               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22476                           
 22477                           ; BSR set to: 1
 22478                           ;encoder.c: 431: if(os.arc_size>100000)
 22479  00B536  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22480  00B538  D012               	goto	l2772
 22481  00B53A  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22482  00B53C  E108               	bnz	u17790
 22483  00B53E  0EA1               	movlw	161
 22484  00B540  5D8D               	subwf	(_os+28)& (0+255),w,b	;volatile
 22485  00B542  0E86               	movlw	134
 22486  00B544  598E               	subwfb	(_os+29)& (0+255),w,b	;volatile
 22487  00B546  0E01               	movlw	1
 22488  00B548  598F               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22489  00B54A  A0D8               	btfss	status,0,c
 22490  00B54C  D008               	goto	l2772
 22491  00B54E                     u17790:
 22492                           
 22493                           ; BSR set to: 1
 22494                           ;encoder.c: 432: os.arc_size = 100000;
 22495  00B54E  0EA0               	movlw	160
 22496  00B550  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22497  00B552  0E86               	movlw	134
 22498  00B554  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22499  00B556  0E01               	movlw	1
 22500  00B558  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22501  00B55A  0E00               	movlw	0
 22502  00B55C  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22503  00B55E                     l2772:
 22504                           
 22505                           ; BSR set to: 1
 22506                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22507                           
 22508                           ; BSR set to: 1
 22509                           
 22510                           ; BSR set to: 1
 22511  00B55E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22512  00B560  D143               	goto	l2706
 22513                           
 22514                           ; BSR set to: 1
 22515                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22516  00B562  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22517  00B564  0100               	movlb	0	; () banked
 22518  00B566  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22519  00B568  0101               	movlb	1	; () banked
 22520  00B56A  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22521  00B56C  0100               	movlb	0	; () banked
 22522  00B56E  6FCE               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22523  00B570  6BCF               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22524  00B572  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22525  00B574  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22526  00B576  0101               	movlb	1	; () banked
 22527  00B578  5F8D               	subwf	(_os+28)& (0+255),f,b	;volatile
 22528  00B57A  0100               	movlb	0	; () banked
 22529  00B57C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22530  00B57E  0101               	movlb	1	; () banked
 22531  00B580  5B8E               	subwfb	(_os+29)& (0+255),f,b	;volatile
 22532  00B582  0100               	movlb	0	; () banked
 22533  00B584  51CF               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22534  00B586  0101               	movlb	1	; () banked
 22535  00B588  5B8F               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22536  00B58A  0100               	movlb	0	; () banked
 22537  00B58C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22538  00B58E  0101               	movlb	1	; () banked
 22539  00B590  5B90               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22540                           
 22541                           ;encoder.c: 437: if(os.arc_size<1)
 22542  00B592  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22543  00B594  D007               	goto	u17810
 22544  00B596  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22545  00B598  118F               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22546  00B59A  118E               	iorwf	(_os+29)& (0+255),w,b	;volatile
 22547  00B59C  E102               	bnz	u17811
 22548  00B59E  058D               	decf	(_os+28)& (0+255),w,b	;volatile
 22549  00B5A0  B0D8               	btfsc	status,0,c
 22550  00B5A2                     u17811:
 22551  00B5A2  D122               	goto	l2706
 22552  00B5A4                     u17810:
 22553                           
 22554                           ; BSR set to: 1
 22555                           ;encoder.c: 438: os.arc_size = 1;
 22556  00B5A4  0E01               	movlw	1
 22557  00B5A6  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22558  00B5A8  0E00               	movlw	0
 22559  00B5AA  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22560  00B5AC  0E00               	movlw	0
 22561  00B5AE  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22562  00B5B0  0E00               	movlw	0
 22563  00B5B2  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22564                           
 22565                           ; BSR set to: 1
 22566                           ;encoder.c: 439: };encoder.c: 440: break;
 22567                           
 22568                           ; BSR set to: 1
 22569  00B5B4  D119               	goto	l2706
 22570  00B5B6                     
 22571                           ;encoder.c: 443: if(os.encoder1Count>0)
 22572                           
 22573                           ; BSR set to: 1
 22574  00B5B6  0101               	movlb	1	; () banked
 22575  00B5B8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22576  00B5BA  0A80               	xorlw	128
 22577  00B5BC  0F7F               	addlw	-129
 22578  00B5BE  A0D8               	btfss	status,0,c
 22579  00B5C0  D011               	goto	l2778
 22580                           
 22581                           ; BSR set to: 1
 22582                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22583  00B5C2  51B0               	movf	(_config+15)& (0+255),w,b
 22584  00B5C4  5D91               	subwf	(_os+32)& (0+255),w,b	;volatile
 22585  00B5C6  51B1               	movf	(_config+16)& (0+255),w,b
 22586  00B5C8  5992               	subwfb	(_os+33)& (0+255),w,b	;volatile
 22587  00B5CA  B0D8               	btfsc	status,0,c
 22588  00B5CC  D002               	goto	l2777
 22589                           
 22590                           ; BSR set to: 1
 22591                           ;encoder.c: 446: ++os.arc_speed;
 22592  00B5CE  4B91               	infsnz	(_os+32)& (0+255),f,b	;volatile
 22593  00B5D0  2B92               	incf	(_os+33)& (0+255),f,b	;volatile
 22594  00B5D2                     l2777:
 22595                           
 22596                           ; BSR set to: 1
 22597                           ;encoder.c: 447: if(os.busy)
 22598                           
 22599                           ; BSR set to: 1
 22600  00B5D2  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22601  00B5D4  B4D8               	btfsc	status,2,c
 22602  00B5D6  D006               	goto	l2778
 22603                           
 22604                           ; BSR set to: 1
 22605                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 22606  00B5D8  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22607  00B5DC  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22608  00B5E0  EC9C  F0AC         	call	_motor_change_speed	;wreg free
 22609  00B5E4                     l2778:
 22610                           
 22611                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 22612  00B5E4  0101               	movlb	1	; () banked
 22613  00B5E6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22614  00B5E8  D046               	goto	l2782
 22615                           
 22616                           ; BSR set to: 1
 22617                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 22618  00B5EA  5191               	movf	(_os+32)& (0+255),w,b	;volatile
 22619  00B5EC  5DAA               	subwf	(_config+9)& (0+255),w,b
 22620  00B5EE  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 22621  00B5F0  59AB               	subwfb	(_config+10)& (0+255),w,b
 22622  00B5F2  B0D8               	btfsc	status,0,c
 22623  00B5F4  D003               	goto	l2780
 22624                           
 22625                           ; BSR set to: 1
 22626                           ;encoder.c: 453: --os.arc_speed;
 22627  00B5F6  0791               	decf	(_os+32)& (0+255),f,b	;volatile
 22628  00B5F8  A0D8               	btfss	status,0,c
 22629  00B5FA  0792               	decf	(_os+33)& (0+255),f,b	;volatile
 22630  00B5FC                     l2780:
 22631                           
 22632                           ; BSR set to: 1
 22633                           ;encoder.c: 454: if(os.busy)
 22634                           
 22635                           ; BSR set to: 1
 22636  00B5FC  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22637  00B5FE  B4D8               	btfsc	status,2,c
 22638  00B600  D03A               	goto	l2782
 22639                           
 22640                           ; BSR set to: 1
 22641                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 22642  00B602  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22643  00B606  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22644  00B60A  EC9C  F0AC         	call	_motor_change_speed	;wreg free
 22645                           
 22646                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 22647  00B60E  D033               	goto	l2782
 22648  00B610                     
 22649                           ;encoder.c: 460: if(os.button2==1)
 22650  00B610  0101               	movlb	1	; () banked
 22651  00B612  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22652  00B614  A4D8               	btfss	status,2,c
 22653  00B616  D006               	goto	l2784
 22654                           
 22655                           ; BSR set to: 1
 22656                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 22657  00B618  0EFF               	movlw	255
 22658  00B61A  ECE4  F08B         	call	_motor_arc_move
 22659                           
 22660                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22661  00B61E  0E62               	movlw	98
 22662  00B620  0101               	movlb	1	; () banked
 22663  00B622  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22664  00B624                     l2784:
 22665                           
 22666                           ; BSR set to: 1
 22667                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 22668                           
 22669                           ; BSR set to: 1
 22670  00B624  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22671  00B626  0A80               	xorlw	128
 22672  00B628  0F7F               	addlw	-129
 22673  00B62A  A0D8               	btfss	status,0,c
 22674  00B62C  D0DD               	goto	l2706
 22675                           
 22676                           ; BSR set to: 1
 22677                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22678  00B62E  0E62               	movlw	98
 22679  00B630  D0A5               	goto	L21
 22680  00B632                     
 22681                           ; BSR set to: 1
 22682                           ;encoder.c: 469: if(os.button2==1)
 22683                           
 22684                           ; BSR set to: 1
 22685  00B632  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22686  00B634  A4D8               	btfss	status,2,c
 22687  00B636  D007               	goto	l2788
 22688                           
 22689                           ; BSR set to: 1
 22690                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 22691  00B638  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22692  00B63A  A4D8               	btfss	status,2,c
 22693                           
 22694                           ; BSR set to: 1
 22695                           ;encoder.c: 472: motor_stop();
 22696  00B63C  EC4E  F0A7         	call	_motor_stop	;wreg free
 22697                           
 22698                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22699  00B640  0E03               	movlw	3
 22700  00B642  0101               	movlb	1	; () banked
 22701  00B644  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22702  00B646                     l2788:
 22703                           
 22704                           ; BSR set to: 1
 22705                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 22706                           
 22707                           ; BSR set to: 1
 22708  00B646  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22709  00B648  0A80               	xorlw	128
 22710  00B64A  0F7F               	addlw	-129
 22711  00B64C  A0D8               	btfss	status,0,c
 22712  00B64E  D002               	goto	l2790
 22713                           
 22714                           ; BSR set to: 1
 22715                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 22716  00B650  0E63               	movlw	99
 22717  00B652  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22718  00B654                     l2790:
 22719                           
 22720                           ; BSR set to: 1
 22721                           ;encoder.c: 477: if(os.encoder2Count<0)
 22722                           
 22723                           ; BSR set to: 1
 22724  00B654  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22725  00B656  D0C8               	goto	l2706
 22726                           
 22727                           ; BSR set to: 1
 22728                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 22729  00B658  0E61               	movlw	97
 22730  00B65A  D090               	goto	L21
 22731  00B65C                     
 22732                           ; BSR set to: 1
 22733                           ;encoder.c: 481: if(os.button2==1)
 22734                           
 22735                           ; BSR set to: 1
 22736  00B65C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22737  00B65E  A4D8               	btfss	status,2,c
 22738  00B660  D006               	goto	l2793
 22739                           
 22740                           ; BSR set to: 1
 22741                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 22742  00B662  0E01               	movlw	1
 22743  00B664  ECE4  F08B         	call	_motor_arc_move
 22744                           
 22745                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22746  00B668  0E62               	movlw	98
 22747  00B66A  0101               	movlb	1	; () banked
 22748  00B66C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22749  00B66E                     l2793:
 22750                           
 22751                           ; BSR set to: 1
 22752                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 22753                           
 22754                           ; BSR set to: 1
 22755  00B66E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22756  00B670  D0BB               	goto	l2706
 22757                           
 22758                           ; BSR set to: 1
 22759                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22760  00B672  0E62               	movlw	98
 22761  00B674  D083               	goto	L21
 22762  00B676                     l2782:
 22763                           
 22764                           ; BSR set to: 1
 22765  00B676  0101               	movlb	1	; () banked
 22766  00B678  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22767                           
 22768                           ; Switch size 1, requested type "space"
 22769                           ; Number of cases is 3, Range of values is 97 to 99
 22770                           ; switch strategies available:
 22771                           ; Name         Instructions Cycles
 22772                           ; simple_byte           10     6 (average)
 22773                           ;	Chosen strategy is simple_byte
 22774  00B67A  0A61               	xorlw	97	; case 97
 22775  00B67C  B4D8               	btfsc	status,2,c
 22776  00B67E  D7C8               	goto	l2783
 22777  00B680  0A03               	xorlw	3	; case 98
 22778  00B682  B4D8               	btfsc	status,2,c
 22779  00B684  D7D6               	goto	l2787
 22780  00B686  0A01               	xorlw	1	; case 99
 22781  00B688  B4D8               	btfsc	status,2,c
 22782  00B68A  D7E8               	goto	l2792
 22783                           
 22784                           ; BSR set to: 1
 22785                           ;encoder.c: 490: break;
 22786  00B68C  D0AD               	goto	l2706
 22787  00B68E                     
 22788                           ;encoder.c: 493: if(os.button2==1)
 22789                           
 22790                           ; BSR set to: 1
 22791  00B68E  0101               	movlb	1	; () banked
 22792  00B690  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22793  00B692  A4D8               	btfss	status,2,c
 22794  00B694  D012               	goto	l2796
 22795                           
 22796                           ; BSR set to: 1
 22797                           ;encoder.c: 494: {;encoder.c: 496: motor_go_to_steps_position(0);
 22798  00B696  0E00               	movlw	0
 22799  00B698  0100               	movlb	0	; () banked
 22800  00B69A  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 22801  00B69C  0E00               	movlw	0
 22802  00B69E  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 22803  00B6A0  0E00               	movlw	0
 22804  00B6A2  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 22805  00B6A4  0E00               	movlw	0
 22806  00B6A6  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 22807  00B6A8  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 22808                           
 22809                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22810  00B6AC  0E05               	movlw	5
 22811  00B6AE  0101               	movlb	1	; () banked
 22812  00B6B0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22813                           
 22814                           ; BSR set to: 1
 22815                           ;encoder.c: 499: os.divide_position = 0;
 22816  00B6B2  0E00               	movlw	0
 22817  00B6B4  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 22818  00B6B6  0E00               	movlw	0
 22819  00B6B8  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 22820  00B6BA                     l2796:
 22821                           
 22822                           ; BSR set to: 1
 22823                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 22824                           
 22825                           ; BSR set to: 1
 22826  00B6BA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22827  00B6BC  A4D8               	btfss	status,2,c
 22828  00B6BE  D094               	goto	l2706
 22829                           
 22830                           ; BSR set to: 1
 22831                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22832  00B6C0  0E05               	movlw	5
 22833  00B6C2  D05C               	goto	L21
 22834  00B6C4                     
 22835                           ;encoder.c: 508: if(os.encoder1Count>0)
 22836                           
 22837                           ; BSR set to: 1
 22838  00B6C4  0101               	movlb	1	; () banked
 22839  00B6C6  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22840  00B6C8  0A80               	xorlw	128
 22841  00B6CA  0F7F               	addlw	-129
 22842  00B6CC  B0D8               	btfsc	status,0,c
 22843                           
 22844                           ; BSR set to: 1
 22845                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 22846  00B6CE  ECFB  F0AB         	call	_motor_increase_manual_speed	;wreg free
 22847                           
 22848                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 22849  00B6D2  0101               	movlb	1	; () banked
 22850  00B6D4  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22851  00B6D6  D054               	goto	l2801
 22852                           
 22853                           ; BSR set to: 1
 22854                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 22855  00B6D8  EC92  F0AB         	call	_motor_decrease_manual_speed	;wreg free
 22856                           
 22857                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 22858  00B6DC  D051               	goto	l2801
 22859  00B6DE                     
 22860                           ;encoder.c: 519: if(os.button2==1)
 22861  00B6DE  0101               	movlb	1	; () banked
 22862  00B6E0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22863  00B6E2  A4D8               	btfss	status,2,c
 22864  00B6E4  D013               	goto	l2803
 22865                           
 22866                           ; BSR set to: 1
 22867                           ;encoder.c: 520: {;encoder.c: 521: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 22868  00B6E6  0E00               	movlw	0
 22869  00B6E8  0100               	movlb	0	; () banked
 22870  00B6EA  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22871  00B6EC  0E00               	movlw	0
 22872  00B6EE  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22873  00B6F0  0E00               	movlw	0
 22874  00B6F2  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22875  00B6F4  0E00               	movlw	0
 22876  00B6F6  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22877  00B6F8  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 22878  00B6FC  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22879  00B700  0EFF               	movlw	255
 22880  00B702  EC61  F097         	call	_motor_schedule_command
 22881                           
 22882                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22883  00B706  0E84               	movlw	132
 22884  00B708  0101               	movlb	1	; () banked
 22885  00B70A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22886  00B70C                     l2803:
 22887                           
 22888                           ; BSR set to: 1
 22889                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 22890                           
 22891                           ; BSR set to: 1
 22892  00B70C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22893  00B70E  0A80               	xorlw	128
 22894  00B710  0F7F               	addlw	-129
 22895  00B712  A0D8               	btfss	status,0,c
 22896  00B714  D069               	goto	l2706
 22897                           
 22898                           ; BSR set to: 1
 22899                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22900  00B716  0E82               	movlw	130
 22901  00B718  D031               	goto	L21
 22902  00B71A                     
 22903                           ; BSR set to: 1
 22904                           ;encoder.c: 528: if(os.button2==1)
 22905                           
 22906                           ; BSR set to: 1
 22907  00B71A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22908  00B71C  A4D8               	btfss	status,2,c
 22909  00B71E  D002               	goto	l2807
 22910                           
 22911                           ; BSR set to: 1
 22912                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22913  00B720  0E04               	movlw	4
 22914  00B722  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22915  00B724                     l2807:
 22916                           
 22917                           ; BSR set to: 1
 22918                           ;encoder.c: 530: if(os.encoder2Count>0)
 22919                           
 22920                           ; BSR set to: 1
 22921  00B724  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22922  00B726  0A80               	xorlw	128
 22923  00B728  0F7F               	addlw	-129
 22924  00B72A  A0D8               	btfss	status,0,c
 22925  00B72C  D002               	goto	l2808
 22926                           
 22927                           ; BSR set to: 1
 22928                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 22929  00B72E  0E83               	movlw	131
 22930  00B730  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22931  00B732                     l2808:
 22932                           
 22933                           ; BSR set to: 1
 22934                           ;encoder.c: 532: if(os.encoder2Count<0)
 22935                           
 22936                           ; BSR set to: 1
 22937  00B732  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22938  00B734  D059               	goto	l2706
 22939                           
 22940                           ; BSR set to: 1
 22941                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 22942  00B736  0E81               	movlw	129
 22943  00B738  D021               	goto	L21
 22944  00B73A                     
 22945                           ; BSR set to: 1
 22946                           ;encoder.c: 536: if(os.button2==1)
 22947                           
 22948                           ; BSR set to: 1
 22949  00B73A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22950  00B73C  A4D8               	btfss	status,2,c
 22951  00B73E  D012               	goto	l2811
 22952                           
 22953                           ; BSR set to: 1
 22954                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22955  00B740  0E84               	movlw	132
 22956  00B742  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22957                           
 22958                           ; BSR set to: 1
 22959                           ;encoder.c: 539: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 22960  00B744  0E00               	movlw	0
 22961  00B746  0100               	movlb	0	; () banked
 22962  00B748  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22963  00B74A  0E00               	movlw	0
 22964  00B74C  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22965  00B74E  0E00               	movlw	0
 22966  00B750  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22967  00B752  0E00               	movlw	0
 22968  00B754  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22969  00B756  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 22970  00B75A  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22971  00B75E  0E01               	movlw	1
 22972  00B760  EC61  F097         	call	_motor_schedule_command
 22973  00B764                     l2811:
 22974                           
 22975                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 22976  00B764  0101               	movlb	1	; () banked
 22977  00B766  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22978  00B768  D03F               	goto	l2706
 22979                           
 22980                           ; BSR set to: 1
 22981                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22982  00B76A  0E82               	movlw	130
 22983  00B76C  D007               	goto	L21
 22984  00B76E                     
 22985                           ; BSR set to: 1
 22986                           ;encoder.c: 545: if(os.button2==1)
 22987                           
 22988                           ; BSR set to: 1
 22989  00B76E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22990  00B770  A4D8               	btfss	status,2,c
 22991  00B772  D03A               	goto	l2706
 22992                           
 22993                           ; BSR set to: 1
 22994                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 22995  00B774  EC4E  F0A7         	call	_motor_stop	;wreg free
 22996                           
 22997                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22998  00B778  0E82               	movlw	130
 22999  00B77A                     L22:
 23000  00B77A  0101               	movlb	1	; () banked
 23001  00B77C                     L21:
 23002  00B77C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23003                           
 23004                           ; BSR set to: 1
 23005                           ;encoder.c: 551: }
 23006                           
 23007                           ; BSR set to: 1
 23008                           ;encoder.c: 549: };encoder.c: 550: break;
 23009  00B77E  D034               	goto	l2706
 23010  00B780                     l2801:
 23011                           
 23012                           ; BSR set to: 1
 23013  00B780  0101               	movlb	1	; () banked
 23014  00B782  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23015                           
 23016                           ; Switch size 1, requested type "space"
 23017                           ; Number of cases is 4, Range of values is 129 to 132
 23018                           ; switch strategies available:
 23019                           ; Name         Instructions Cycles
 23020                           ; simple_byte           13     7 (average)
 23021                           ;	Chosen strategy is simple_byte
 23022  00B784  0A81               	xorlw	129	; case 129
 23023  00B786  B4D8               	btfsc	status,2,c
 23024  00B788  D7AA               	goto	l2802
 23025  00B78A  0A03               	xorlw	3	; case 130
 23026  00B78C  B4D8               	btfsc	status,2,c
 23027  00B78E  D7C5               	goto	l2806
 23028  00B790  0A01               	xorlw	1	; case 131
 23029  00B792  B4D8               	btfsc	status,2,c
 23030  00B794  D7D2               	goto	l2810
 23031  00B796  0A07               	xorlw	7	; case 132
 23032  00B798  B4D8               	btfsc	status,2,c
 23033  00B79A  D7E9               	goto	l2813
 23034                           
 23035                           ; BSR set to: 1
 23036                           ;encoder.c: 553: }
 23037                           
 23038                           ; BSR set to: 1
 23039                           ;encoder.c: 552: break;
 23040  00B79C  D025               	goto	l2706
 23041  00B79E                     l2671:
 23042                           
 23043                           ; BSR set to: 1
 23044                           
 23045                           ; BSR set to: 1
 23046  00B79E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23047  00B7A0  0BF0               	andlw	240
 23048  00B7A2  0100               	movlb	0	; () banked
 23049  00B7A4  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 23050  00B7A6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23051                           
 23052                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23053                           ; Switch size 1, requested type "space"
 23054                           ; Number of cases is 1, Range of values is 0 to 0
 23055                           ; switch strategies available:
 23056                           ; Name         Instructions Cycles
 23057                           ; simple_byte            4     3 (average)
 23058                           ;	Chosen strategy is simple_byte
 23059  00B7A8  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23060  00B7AA  0A00               	xorlw	0	; case 0
 23061  00B7AC  A4D8               	btfss	status,2,c
 23062  00B7AE  D01C               	goto	l2706
 23063                           
 23064                           ; BSR set to: 0
 23065                           ; Switch size 1, requested type "space"
 23066                           ; Number of cases is 9, Range of values is 0 to 128
 23067                           ; switch strategies available:
 23068                           ; Name         Instructions Cycles
 23069                           ; simple_byte           28    15 (average)
 23070                           ;	Chosen strategy is simple_byte
 23071  00B7B0  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 23072  00B7B2  0A00               	xorlw	0	; case 0
 23073  00B7B4  B4D8               	btfsc	status,2,c
 23074  00B7B6  D501               	goto	l2673
 23075  00B7B8  0A10               	xorlw	16	; case 16
 23076  00B7BA  B4D8               	btfsc	status,2,c
 23077  00B7BC  D53E               	goto	l2708
 23078  00B7BE  0A30               	xorlw	48	; case 32
 23079  00B7C0  B4D8               	btfsc	status,2,c
 23080  00B7C2  D5F7               	goto	l2724
 23081  00B7C4  0A10               	xorlw	16	; case 48
 23082  00B7C6  B4D8               	btfsc	status,2,c
 23083  00B7C8  D621               	goto	l2739
 23084  00B7CA  0A70               	xorlw	112	; case 64
 23085  00B7CC  B4D8               	btfsc	status,2,c
 23086  00B7CE  D657               	goto	l2754
 23087  00B7D0  0A10               	xorlw	16	; case 80
 23088  00B7D2  B4D8               	btfsc	status,2,c
 23089  00B7D4  D68D               	goto	l2760
 23090  00B7D6  0A30               	xorlw	48	; case 96
 23091  00B7D8  B4D8               	btfsc	status,2,c
 23092  00B7DA  D6ED               	goto	l2775
 23093  00B7DC  0A10               	xorlw	16	; case 112
 23094  00B7DE  B4D8               	btfsc	status,2,c
 23095  00B7E0  D756               	goto	l2795
 23096  00B7E2  0AF0               	xorlw	240	; case 128
 23097  00B7E4  B4D8               	btfsc	status,2,c
 23098  00B7E6  D76E               	goto	l2798
 23099  00B7E8                     l2706:
 23100                           
 23101                           ;encoder.c: 556: os.encoder1Count = 0;
 23102                           
 23103                           ; BSR set to: 0
 23104  00B7E8  0E00               	movlw	0
 23105  00B7EA  0101               	movlb	1	; () banked
 23106  00B7EC  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 23107                           
 23108                           ;encoder.c: 557: os.encoder2Count = 0;
 23109  00B7EE  0E00               	movlw	0
 23110  00B7F0  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 23111                           
 23112                           ;encoder.c: 558: os.button1 = 0;
 23113  00B7F2  0E00               	movlw	0
 23114  00B7F4  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 23115                           
 23116                           ;encoder.c: 559: os.button2 = 0;
 23117  00B7F6  0E00               	movlw	0
 23118  00B7F8  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 23119                           
 23120                           ; BSR set to: 1
 23121  00B7FA  0012               	return		;funcret
 23122  00B7FC                     __end_of_encoder_statemachine:
 23123                           	opt stack 0
 23124                           tblptru	equ	0xFF8
 23125                           tblptrh	equ	0xFF7
 23126                           tblptrl	equ	0xFF6
 23127                           tablat	equ	0xFF5
 23128                           prodh	equ	0xFF4
 23129                           prodl	equ	0xFF3
 23130                           intcon	equ	0xFF2
 23131                           postinc0	equ	0xFEE
 23132                           wreg	equ	0xFE8
 23133                           indf1	equ	0xFE7
 23134                           postinc1	equ	0xFE6
 23135                           postdec1	equ	0xFE5
 23136                           plusw1	equ	0xFE3
 23137                           fsr1h	equ	0xFE2
 23138                           fsr1l	equ	0xFE1
 23139                           indf2	equ	0xFDF
 23140                           postinc2	equ	0xFDE
 23141                           postdec2	equ	0xFDD
 23142                           plusw2	equ	0xFDB
 23143                           fsr2h	equ	0xFDA
 23144                           fsr2l	equ	0xFD9
 23145                           status	equ	0xFD8
 23146                           
 23147 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 23148 ;; Defined at:
 23149 ;;		line 50 in file "motor.c"
 23150 ;; Parameters:    Size  Location     Type
 23151 ;;  degrees         2   47[BANK0 ] unsigned int 
 23152 ;; Auto vars:     Size  Location     Type
 23153 ;;  steps           4   51[BANK0 ] unsigned long 
 23154 ;; Return value:  Size  Location     Type
 23155 ;;                  4   47[BANK0 ] unsigned long 
 23156 ;; Registers used:
 23157 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23158 ;; Tracked objects:
 23159 ;;		On entry : 0/0
 23160 ;;		On exit  : 0/0
 23161 ;;		Unchanged: 0/0
 23162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23164 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23166 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23167 ;;Total ram usage:        8 bytes
 23168 ;; Hardware stack levels used:    1
 23169 ;; Hardware stack levels required when called:   12
 23170 ;; This function calls:
 23171 ;;		_motor_steps_from_degrees
 23172 ;; This function is called by:
 23173 ;;		_encoder_statemachine
 23174 ;; This function uses a non-reentrant model
 23175 ;;
 23176                           
 23177                           	psect	text91
 23178  014D76                     __ptext91:
 23179                           	opt stack 0
 23180  014D76                     _motor_nonzero_steps_from_degrees:
 23181                           	opt stack 17
 23182                           
 23183                           ;motor.c: 52: uint32_t steps;;motor.c: 53: steps = motor_steps_from_degrees(degrees);
 23184                           
 23185                           ; BSR set to: 1
 23186                           ;incstack = 0
 23187  014D76  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 23188  014D7A  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 23189  014D7E  ECA1  F08E         	call	_motor_steps_from_degrees	;wreg free
 23190  014D82  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 23191  014D86  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 23192  014D8A  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 23193  014D8E  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 23194                           
 23195                           ;motor.c: 54: if(steps==0)
 23196  014D92  0100               	movlb	0	; () banked
 23197  014D94  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 23198  014D96  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 23199  014D98  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 23200  014D9A  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 23201  014D9C  A4D8               	btfss	status,2,c
 23202  014D9E  D008               	goto	l2407
 23203                           
 23204                           ; BSR set to: 0
 23205                           ;motor.c: 55: steps = 1;
 23206  014DA0  0E01               	movlw	1
 23207  014DA2  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 23208  014DA4  0E00               	movlw	0
 23209  014DA6  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 23210  014DA8  0E00               	movlw	0
 23211  014DAA  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 23212  014DAC  0E00               	movlw	0
 23213  014DAE  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 23214  014DB0                     l2407:
 23215                           
 23216                           ; BSR set to: 0
 23217                           ;motor.c: 56: return steps;
 23218                           
 23219                           ; BSR set to: 0
 23220  014DB0  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 23221  014DB4  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 23222  014DB8  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 23223  014DBC  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 23224  014DC0  0012               	return	
 23225  014DC2                     __end_of_motor_nonzero_steps_from_degrees:
 23226                           	opt stack 0
 23227                           tblptru	equ	0xFF8
 23228                           tblptrh	equ	0xFF7
 23229                           tblptrl	equ	0xFF6
 23230                           tablat	equ	0xFF5
 23231                           prodh	equ	0xFF4
 23232                           prodl	equ	0xFF3
 23233                           intcon	equ	0xFF2
 23234                           postinc0	equ	0xFEE
 23235                           wreg	equ	0xFE8
 23236                           indf1	equ	0xFE7
 23237                           postinc1	equ	0xFE6
 23238                           postdec1	equ	0xFE5
 23239                           plusw1	equ	0xFE3
 23240                           fsr1h	equ	0xFE2
 23241                           fsr1l	equ	0xFE1
 23242                           indf2	equ	0xFDF
 23243                           postinc2	equ	0xFDE
 23244                           postdec2	equ	0xFDD
 23245                           plusw2	equ	0xFDB
 23246                           fsr2h	equ	0xFDA
 23247                           fsr2l	equ	0xFD9
 23248                           status	equ	0xFD8
 23249                           
 23250 ;; *************** function _motor_increase_manual_speed *****************
 23251 ;; Defined at:
 23252 ;;		line 533 in file "motor.c"
 23253 ;; Parameters:    Size  Location     Type
 23254 ;;		None
 23255 ;; Auto vars:     Size  Location     Type
 23256 ;;		None
 23257 ;; Return value:  Size  Location     Type
 23258 ;;                  1    wreg      void 
 23259 ;; Registers used:
 23260 ;;		wreg, status,2, status,0, cstack
 23261 ;; Tracked objects:
 23262 ;;		On entry : 0/0
 23263 ;;		On exit  : 0/0
 23264 ;;		Unchanged: 0/0
 23265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23270 ;;Total ram usage:        0 bytes
 23271 ;; Hardware stack levels used:    1
 23272 ;; Hardware stack levels required when called:   12
 23273 ;; This function calls:
 23274 ;;		_motor_set_manual_speed
 23275 ;; This function is called by:
 23276 ;;		_encoder_statemachine
 23277 ;; This function uses a non-reentrant model
 23278 ;;
 23279                           
 23280                           	psect	text92
 23281  0157F6                     __ptext92:
 23282                           	opt stack 0
 23283  0157F6                     _motor_increase_manual_speed:
 23284                           	opt stack 17
 23285                           
 23286                           ;motor.c: 536: {;motor.c: 537: motor_set_manual_speed(os.manual_speed+1);
 23287                           
 23288                           ; BSR set to: 0
 23289                           ;incstack = 0
 23290  0157F6  0E01               	movlw	1
 23291  0157F8  0101               	movlb	1	; () banked
 23292  0157FA  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23293  0157FC  0100               	movlb	0	; () banked
 23294  0157FE  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23295  015800  0E00               	movlw	0
 23296  015802  0101               	movlb	1	; () banked
 23297  015804  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23298  015806  0100               	movlb	0	; () banked
 23299  015808  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23300  01580A  EC46  F0A6         	call	_motor_set_manual_speed	;wreg free
 23301  01580E  0012               	return	
 23302  015810                     __end_of_motor_increase_manual_speed:
 23303                           	opt stack 0
 23304                           tblptru	equ	0xFF8
 23305                           tblptrh	equ	0xFF7
 23306                           tblptrl	equ	0xFF6
 23307                           tablat	equ	0xFF5
 23308                           prodh	equ	0xFF4
 23309                           prodl	equ	0xFF3
 23310                           intcon	equ	0xFF2
 23311                           postinc0	equ	0xFEE
 23312                           wreg	equ	0xFE8
 23313                           indf1	equ	0xFE7
 23314                           postinc1	equ	0xFE6
 23315                           postdec1	equ	0xFE5
 23316                           plusw1	equ	0xFE3
 23317                           fsr1h	equ	0xFE2
 23318                           fsr1l	equ	0xFE1
 23319                           indf2	equ	0xFDF
 23320                           postinc2	equ	0xFDE
 23321                           postdec2	equ	0xFDD
 23322                           plusw2	equ	0xFDB
 23323                           fsr2h	equ	0xFDA
 23324                           fsr2l	equ	0xFD9
 23325                           status	equ	0xFD8
 23326                           
 23327 ;; *************** function _motor_divide_jump_to_nearest *****************
 23328 ;; Defined at:
 23329 ;;		line 693 in file "motor.c"
 23330 ;; Parameters:    Size  Location     Type
 23331 ;;		None
 23332 ;; Auto vars:     Size  Location     Type
 23333 ;;  divide_posit    4  105[BANK0 ] float 
 23334 ;;  nearest_posi    4   99[BANK0 ] unsigned long 
 23335 ;;  nearest_divi    2  103[BANK0 ] int 
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  1    wreg      void 
 23338 ;; Registers used:
 23339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23340 ;; Tracked objects:
 23341 ;;		On entry : 0/0
 23342 ;;		On exit  : 0/0
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23346 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23348 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23349 ;;Total ram usage:       10 bytes
 23350 ;; Hardware stack levels used:    1
 23351 ;; Hardware stack levels required when called:   15
 23352 ;; This function calls:
 23353 ;;		___fladd
 23354 ;;		___fldiv
 23355 ;;		___flmul
 23356 ;;		___fltol
 23357 ;;		___xxtofl
 23358 ;;		__step_position_from_divide_position
 23359 ;;		_motor_go_to_steps_position
 23360 ;; This function is called by:
 23361 ;;		_encoder_statemachine
 23362 ;; This function uses a non-reentrant model
 23363 ;;
 23364                           
 23365                           	psect	text93
 23366  00FBBA                     __ptext93:
 23367                           	opt stack 0
 23368  00FBBA                     _motor_divide_jump_to_nearest:
 23369                           	opt stack 14
 23370                           
 23371                           ;motor.c: 695: float divide_position_float;;motor.c: 696: int16_t nearest_divide_positio
      +                          n;;motor.c: 697: uint32_t nearest_position_in_steps;;motor.c: 699: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23372                           
 23373                           ;incstack = 0
 23374  00FBBA  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 23375  00FBBE  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 23376  00FBC2  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 23377  00FBC6  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 23378  00FBCA  0E00               	movlw	0
 23379  00FBCC  EC17  F081         	call	___xxtofl
 23380  00FBD0  C060  F0C9         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23381  00FBD4  C061  F0CA         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23382  00FBD8  C062  F0CB         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23383  00FBDC  C063  F0CC         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23384                           
 23385                           ;motor.c: 700: divide_position_float *= (float) os.division;
 23386  00FBE0  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23387  00FBE4  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23388  00FBE8  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23389  00FBEC  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23390  00FBF0  EE21  F084         	lfsr	2,_os+19	;volatile
 23391  00FBF4  CFDE F060          	movff	postinc2,___xxtofl@val
 23392  00FBF8  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23393  00FBFC  0100               	movlb	0	; () banked
 23394  00FBFE  0E00               	movlw	0
 23395  00FC00  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23396  00FC02  0EFF               	movlw	-1
 23397  00FC04  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23398  00FC06  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23399  00FC08  0E01               	movlw	1
 23400  00FC0A  EC17  F081         	call	___xxtofl
 23401  00FC0E  C060  F072         	movff	?___xxtofl,___flmul@a
 23402  00FC12  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23403  00FC16  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23404  00FC1A  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23405  00FC1E  EC1E  F066         	call	___flmul	;wreg free
 23406  00FC22  C06E  F0C9         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23407  00FC26  C06F  F0CA         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23408  00FC2A  C070  F0CB         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23409  00FC2E  C071  F0CC         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23410                           
 23411                           ;motor.c: 701: divide_position_float /= (float) config.full_circle_in_steps;
 23412  00FC32  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23413  00FC36  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23414  00FC3A  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23415  00FC3E  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23416  00FC42  C1A1  F060         	movff	_config,___xxtofl@val
 23417  00FC46  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23418  00FC4A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23419  00FC4E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23420  00FC52  0E00               	movlw	0
 23421  00FC54  EC17  F081         	call	___xxtofl
 23422  00FC58  C060  F072         	movff	?___xxtofl,___fldiv@a
 23423  00FC5C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23424  00FC60  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23425  00FC64  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23426  00FC68  ECD6  F06D         	call	___fldiv	;wreg free
 23427  00FC6C  C06E  F0C9         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23428  00FC70  C06F  F0CA         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23429  00FC74  C070  F0CB         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23430  00FC78  C071  F0CC         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23431                           
 23432                           ;motor.c: 702: divide_position_float += 0.5;
 23433  00FC7C  C0C9  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23434  00FC80  C0CA  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23435  00FC84  C0CB  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23436  00FC88  C0CC  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23437  00FC8C  0E00               	movlw	0
 23438  00FC8E  0100               	movlb	0	; () banked
 23439  00FC90  6F76               	movwf	___fladd@a& (0+255),b
 23440  00FC92  0E00               	movlw	0
 23441  00FC94  6F77               	movwf	(___fladd@a+1)& (0+255),b
 23442  00FC96  0E00               	movlw	0
 23443  00FC98  6F78               	movwf	(___fladd@a+2)& (0+255),b
 23444  00FC9A  0E3F               	movlw	63
 23445  00FC9C  6F79               	movwf	(___fladd@a+3)& (0+255),b
 23446  00FC9E  ECC7  F067         	call	___fladd	;wreg free
 23447  00FCA2  C072  F0C9         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23448  00FCA6  C073  F0CA         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23449  00FCAA  C074  F0CB         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23450  00FCAE  C075  F0CC         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23451                           
 23452                           ;motor.c: 703: nearest_divide_position = (int16_t) divide_position_float;
 23453  00FCB2  C0C9  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23454  00FCB6  C0CA  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23455  00FCBA  C0CB  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23456  00FCBE  C0CC  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23457  00FCC2  EC62  F090         	call	___fltol	;wreg free
 23458  00FCC6  C060  F0C7         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23459  00FCCA  C061  F0C8         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23460                           
 23461                           ;motor.c: 706: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23462  00FCCE  C0C7  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23463  00FCD2  C0C8  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23464  00FCD6  ECD2  F08C         	call	__step_position_from_divide_position	;wreg free
 23465  00FCDA  C087  F0C3         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23466  00FCDE  C088  F0C4         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23467  00FCE2  C089  F0C5         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23468  00FCE6  C08A  F0C6         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23469                           
 23470                           ;motor.c: 709: os.divide_position = nearest_divide_position;
 23471  00FCEA  C0C7  F187         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 23472  00FCEE  C0C8  F188         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 23473                           
 23474                           ;motor.c: 710: motor_go_to_steps_position(nearest_position_in_steps);
 23475  00FCF2  C0C3  F0A7         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 23476  00FCF6  C0C4  F0A8         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 23477  00FCFA  C0C5  F0A9         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 23478  00FCFE  C0C6  F0AA         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 23479  00FD02  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 23480  00FD06  0012               	return		;funcret
 23481  00FD08                     __end_of_motor_divide_jump_to_nearest:
 23482                           	opt stack 0
 23483                           tblptru	equ	0xFF8
 23484                           tblptrh	equ	0xFF7
 23485                           tblptrl	equ	0xFF6
 23486                           tablat	equ	0xFF5
 23487                           prodh	equ	0xFF4
 23488                           prodl	equ	0xFF3
 23489                           intcon	equ	0xFF2
 23490                           postinc0	equ	0xFEE
 23491                           wreg	equ	0xFE8
 23492                           indf1	equ	0xFE7
 23493                           postinc1	equ	0xFE6
 23494                           postdec1	equ	0xFE5
 23495                           plusw1	equ	0xFE3
 23496                           fsr1h	equ	0xFE2
 23497                           fsr1l	equ	0xFE1
 23498                           indf2	equ	0xFDF
 23499                           postinc2	equ	0xFDE
 23500                           postdec2	equ	0xFDD
 23501                           plusw2	equ	0xFDB
 23502                           fsr2h	equ	0xFDA
 23503                           fsr2l	equ	0xFD9
 23504                           status	equ	0xFD8
 23505                           
 23506 ;; *************** function _motor_divide_jump *****************
 23507 ;; Defined at:
 23508 ;;		line 662 in file "motor.c"
 23509 ;; Parameters:    Size  Location     Type
 23510 ;;		None
 23511 ;; Auto vars:     Size  Location     Type
 23512 ;;  target_posit    4  100[BANK0 ] unsigned long 
 23513 ;;  target_divid    2  104[BANK0 ] int 
 23514 ;; Return value:  Size  Location     Type
 23515 ;;                  1    wreg      void 
 23516 ;; Registers used:
 23517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23518 ;; Tracked objects:
 23519 ;;		On entry : 0/0
 23520 ;;		On exit  : 0/0
 23521 ;;		Unchanged: 0/0
 23522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23524 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23525 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23526 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23527 ;;Total ram usage:        7 bytes
 23528 ;; Hardware stack levels used:    1
 23529 ;; Hardware stack levels required when called:   15
 23530 ;; This function calls:
 23531 ;;		__step_position_from_divide_position
 23532 ;;		_motor_go_to_steps_position
 23533 ;; This function is called by:
 23534 ;;		_encoder_statemachine
 23535 ;; This function uses a non-reentrant model
 23536 ;;
 23537                           
 23538                           	psect	text94
 23539  012F6E                     __ptext94:
 23540                           	opt stack 0
 23541  012F6E                     _motor_divide_jump:
 23542                           	opt stack 14
 23543                           
 23544                           ;motor.c: 664: int16_t target_divide_position;;motor.c: 665: uint32_t target_position_in
      +                          _steps;;motor.c: 668: if(os.divide_jump_size>0)
 23545                           
 23546                           ;incstack = 0
 23547  012F6E  0101               	movlb	1	; () banked
 23548  012F70  BF8A               	btfsc	(_os+25)& (0+255),7,b	;volatile
 23549  012F72  D023               	goto	l2543
 23550  012F74  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23551  012F76  E103               	bnz	u16590
 23552  012F78  0589               	decf	(_os+24)& (0+255),w,b	;volatile
 23553  012F7A  A0D8               	btfss	status,0,c
 23554  012F7C  D01E               	goto	l2543
 23555  012F7E                     u16590:
 23556                           
 23557                           ; BSR set to: 1
 23558                           ;motor.c: 669: {;motor.c: 670: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 23559  012F7E  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23560  012F80  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23561  012F82  0100               	movlb	0	; () banked
 23562  012F84  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23563  012F86  0101               	movlb	1	; () banked
 23564  012F88  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23565  012F8A  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23566  012F8C  0100               	movlb	0	; () banked
 23567  012F8E  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23568                           
 23569                           ;motor.c: 671: if(target_divide_position>=os.division)
 23570  012F90  0101               	movlb	1	; () banked
 23571  012F92  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 23572  012F94  0100               	movlb	0	; () banked
 23573  012F96  5DC8               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 23574  012F98  51C9               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 23575  012F9A  0A80               	xorlw	128
 23576  012F9C  6FC3               	movwf	??_motor_divide_jump& (0+255),b
 23577  012F9E  0101               	movlb	1	; () banked
 23578  012FA0  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 23579  012FA2  0A80               	xorlw	128
 23580  012FA4  0100               	movlb	0	; () banked
 23581  012FA6  59C3               	subwfb	??_motor_divide_jump& (0+255),w,b
 23582  012FA8  A0D8               	btfss	status,0,c
 23583  012FAA  D019               	goto	l2546
 23584                           
 23585                           ; BSR set to: 0
 23586                           ;motor.c: 672: {;motor.c: 673: target_divide_position -= os.division;
 23587  012FAC  EE21  F084         	lfsr	2,_os+19	;volatile
 23588  012FB0  50DE               	movf	postinc2,w,c
 23589  012FB2  5FC8               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23590  012FB4  50DD               	movf	postdec2,w,c
 23591  012FB6  5BC9               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23592                           
 23593                           ; BSR set to: 0
 23594                           ;motor.c: 674: };motor.c: 675: }
 23595  012FB8  D012               	goto	l2546
 23596  012FBA                     l2543:
 23597                           
 23598                           ;motor.c: 676: else;motor.c: 677: {;motor.c: 678: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 23599                           
 23600                           ; BSR set to: 0
 23601  012FBA  0101               	movlb	1	; () banked
 23602  012FBC  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23603  012FBE  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23604  012FC0  0100               	movlb	0	; () banked
 23605  012FC2  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23606  012FC4  0101               	movlb	1	; () banked
 23607  012FC6  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23608  012FC8  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23609  012FCA  0100               	movlb	0	; () banked
 23610  012FCC  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23611                           
 23612                           ;motor.c: 679: if(target_divide_position<0)
 23613  012FCE  AFC9               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 23614  012FD0  D006               	goto	l2546
 23615                           
 23616                           ; BSR set to: 0
 23617                           ;motor.c: 680: {;motor.c: 681: target_divide_position += os.division;
 23618  012FD2  EE21  F084         	lfsr	2,_os+19	;volatile
 23619  012FD6  50DE               	movf	postinc2,w,c
 23620  012FD8  27C8               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23621  012FDA  50DD               	movf	postdec2,w,c
 23622  012FDC  23C9               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23623  012FDE                     l2546:
 23624                           
 23625                           ; BSR set to: 0
 23626                           ;motor.c: 682: };motor.c: 683: };motor.c: 686: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 23627                           
 23628                           ; BSR set to: 0
 23629                           
 23630                           ; BSR set to: 0
 23631  012FDE  C0C8  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 23632  012FE2  C0C9  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 23633  012FE6  ECD2  F08C         	call	__step_position_from_divide_position	;wreg free
 23634  012FEA  C087  F0C4         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 23635  012FEE  C088  F0C5         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 23636  012FF2  C089  F0C6         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 23637  012FF6  C08A  F0C7         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 23638                           
 23639                           ;motor.c: 689: os.divide_position = target_divide_position;
 23640  012FFA  C0C8  F187         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 23641  012FFE  C0C9  F188         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 23642                           
 23643                           ;motor.c: 690: motor_go_to_steps_position(target_position_in_steps);
 23644  013002  C0C4  F0A7         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 23645  013006  C0C5  F0A8         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 23646  01300A  C0C6  F0A9         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 23647  01300E  C0C7  F0AA         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 23648  013012  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 23649  013016  0012               	return		;funcret
 23650  013018                     __end_of_motor_divide_jump:
 23651                           	opt stack 0
 23652                           tblptru	equ	0xFF8
 23653                           tblptrh	equ	0xFF7
 23654                           tblptrl	equ	0xFF6
 23655                           tablat	equ	0xFF5
 23656                           prodh	equ	0xFF4
 23657                           prodl	equ	0xFF3
 23658                           intcon	equ	0xFF2
 23659                           postinc0	equ	0xFEE
 23660                           wreg	equ	0xFE8
 23661                           indf1	equ	0xFE7
 23662                           postinc1	equ	0xFE6
 23663                           postdec1	equ	0xFE5
 23664                           plusw1	equ	0xFE3
 23665                           fsr1h	equ	0xFE2
 23666                           fsr1l	equ	0xFE1
 23667                           indf2	equ	0xFDF
 23668                           postinc2	equ	0xFDE
 23669                           postdec2	equ	0xFDD
 23670                           plusw2	equ	0xFDB
 23671                           fsr2h	equ	0xFDA
 23672                           fsr2l	equ	0xFD9
 23673                           status	equ	0xFD8
 23674                           
 23675 ;; *************** function __step_position_from_divide_position *****************
 23676 ;; Defined at:
 23677 ;;		line 92 in file "motor.c"
 23678 ;; Parameters:    Size  Location     Type
 23679 ;;  divide_posit    2   39[BANK0 ] int 
 23680 ;; Auto vars:     Size  Location     Type
 23681 ;;  target_posit    4   43[BANK0 ] float 
 23682 ;; Return value:  Size  Location     Type
 23683 ;;                  4   39[BANK0 ] unsigned long 
 23684 ;; Registers used:
 23685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23686 ;; Tracked objects:
 23687 ;;		On entry : 0/0
 23688 ;;		On exit  : 0/0
 23689 ;;		Unchanged: 0/0
 23690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23692 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23694 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23695 ;;Total ram usage:        8 bytes
 23696 ;; Hardware stack levels used:    1
 23697 ;; Hardware stack levels required when called:   11
 23698 ;; This function calls:
 23699 ;;		___fldiv
 23700 ;;		___flmul
 23701 ;;		___fltol
 23702 ;;		___xxtofl
 23703 ;; This function is called by:
 23704 ;;		_motor_divide_jump
 23705 ;;		_motor_divide_jump_to_nearest
 23706 ;; This function uses a non-reentrant model
 23707 ;;
 23708                           
 23709                           	psect	text95
 23710  0119A4                     __ptext95:
 23711                           	opt stack 0
 23712  0119A4                     __step_position_from_divide_position:
 23713                           	opt stack 17
 23714                           
 23715                           ;motor.c: 94: float target_position;;motor.c: 97: target_position = (float) config.full_
      +                          circle_in_steps;
 23716                           
 23717                           ;incstack = 0
 23718  0119A4  C1A1  F060         	movff	_config,___xxtofl@val
 23719  0119A8  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23720  0119AC  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23721  0119B0  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23722  0119B4  0E00               	movlw	0
 23723  0119B6  EC17  F081         	call	___xxtofl
 23724  0119BA  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 23725  0119BE  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 23726  0119C2  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 23727  0119C6  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 23728                           
 23729                           ;motor.c: 98: target_position *= (float) divide_position;
 23730  0119CA  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 23731  0119CE  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 23732  0119D2  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 23733  0119D6  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 23734  0119DA  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 23735  0119DE  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 23736  0119E2  0100               	movlb	0	; () banked
 23737  0119E4  0E00               	movlw	0
 23738  0119E6  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23739  0119E8  0EFF               	movlw	-1
 23740  0119EA  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23741  0119EC  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23742  0119EE  0E01               	movlw	1
 23743  0119F0  EC17  F081         	call	___xxtofl
 23744  0119F4  C060  F072         	movff	?___xxtofl,___flmul@a
 23745  0119F8  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23746  0119FC  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23747  011A00  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23748  011A04  EC1E  F066         	call	___flmul	;wreg free
 23749  011A08  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 23750  011A0C  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 23751  011A10  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 23752  011A14  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 23753                           
 23754                           ;motor.c: 99: target_position /= (float) os.division;
 23755  011A18  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 23756  011A1C  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 23757  011A20  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 23758  011A24  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 23759  011A28  EE21  F084         	lfsr	2,_os+19	;volatile
 23760  011A2C  CFDE F060          	movff	postinc2,___xxtofl@val
 23761  011A30  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23762  011A34  0100               	movlb	0	; () banked
 23763  011A36  0E00               	movlw	0
 23764  011A38  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23765  011A3A  0EFF               	movlw	-1
 23766  011A3C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23767  011A3E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23768  011A40  0E01               	movlw	1
 23769  011A42  EC17  F081         	call	___xxtofl
 23770  011A46  C060  F072         	movff	?___xxtofl,___fldiv@a
 23771  011A4A  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23772  011A4E  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23773  011A52  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23774  011A56  ECD6  F06D         	call	___fldiv	;wreg free
 23775  011A5A  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 23776  011A5E  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 23777  011A62  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 23778  011A66  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 23779                           
 23780                           ;motor.c: 101: return (uint32_t) target_position;
 23781  011A6A  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 23782  011A6E  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 23783  011A72  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 23784  011A76  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 23785  011A7A  EC62  F090         	call	___fltol	;wreg free
 23786  011A7E  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 23787  011A82  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 23788  011A86  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 23789  011A8A  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 23790  011A8E  0012               	return	
 23791  011A90                     __end_of__step_position_from_divide_position:
 23792                           	opt stack 0
 23793                           tblptru	equ	0xFF8
 23794                           tblptrh	equ	0xFF7
 23795                           tblptrl	equ	0xFF6
 23796                           tablat	equ	0xFF5
 23797                           prodh	equ	0xFF4
 23798                           prodl	equ	0xFF3
 23799                           intcon	equ	0xFF2
 23800                           postinc0	equ	0xFEE
 23801                           wreg	equ	0xFE8
 23802                           indf1	equ	0xFE7
 23803                           postinc1	equ	0xFE6
 23804                           postdec1	equ	0xFE5
 23805                           plusw1	equ	0xFE3
 23806                           fsr1h	equ	0xFE2
 23807                           fsr1l	equ	0xFE1
 23808                           indf2	equ	0xFDF
 23809                           postinc2	equ	0xFDE
 23810                           postdec2	equ	0xFDD
 23811                           plusw2	equ	0xFDB
 23812                           fsr2h	equ	0xFDA
 23813                           fsr2l	equ	0xFD9
 23814                           status	equ	0xFD8
 23815                           
 23816 ;; *************** function _motor_decrease_manual_speed *****************
 23817 ;; Defined at:
 23818 ;;		line 541 in file "motor.c"
 23819 ;; Parameters:    Size  Location     Type
 23820 ;;		None
 23821 ;; Auto vars:     Size  Location     Type
 23822 ;;		None
 23823 ;; Return value:  Size  Location     Type
 23824 ;;                  1    wreg      void 
 23825 ;; Registers used:
 23826 ;;		wreg, status,2, status,0, cstack
 23827 ;; Tracked objects:
 23828 ;;		On entry : 0/0
 23829 ;;		On exit  : 0/0
 23830 ;;		Unchanged: 0/0
 23831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23836 ;;Total ram usage:        0 bytes
 23837 ;; Hardware stack levels used:    1
 23838 ;; Hardware stack levels required when called:   12
 23839 ;; This function calls:
 23840 ;;		_motor_set_manual_speed
 23841 ;; This function is called by:
 23842 ;;		_encoder_statemachine
 23843 ;; This function uses a non-reentrant model
 23844 ;;
 23845                           
 23846                           	psect	text96
 23847  015724                     __ptext96:
 23848                           	opt stack 0
 23849  015724                     _motor_decrease_manual_speed:
 23850                           	opt stack 17
 23851                           
 23852                           ;motor.c: 543: if(os.manual_speed>0)
 23853                           
 23854                           ;incstack = 0
 23855  015724  0101               	movlb	1	; () banked
 23856  015726  5194               	movf	(_os+35)& (0+255),w,b	;volatile
 23857  015728  1195               	iorwf	(_os+36)& (0+255),w,b	;volatile
 23858  01572A  B4D8               	btfsc	status,2,c
 23859  01572C  0012               	return	
 23860                           
 23861                           ; BSR set to: 1
 23862                           ;motor.c: 544: {;motor.c: 545: motor_set_manual_speed(os.manual_speed-1);
 23863  01572E  0EFF               	movlw	255
 23864  015730  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23865  015732  0100               	movlb	0	; () banked
 23866  015734  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23867  015736  0EFF               	movlw	255
 23868  015738  0101               	movlb	1	; () banked
 23869  01573A  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23870  01573C  0100               	movlb	0	; () banked
 23871  01573E  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23872  015740  EC46  F0A6         	call	_motor_set_manual_speed	;wreg free
 23873  015744  0012               	return	
 23874  015746                     __end_of_motor_decrease_manual_speed:
 23875                           	opt stack 0
 23876                           tblptru	equ	0xFF8
 23877                           tblptrh	equ	0xFF7
 23878                           tblptrl	equ	0xFF6
 23879                           tablat	equ	0xFF5
 23880                           prodh	equ	0xFF4
 23881                           prodl	equ	0xFF3
 23882                           intcon	equ	0xFF2
 23883                           postinc0	equ	0xFEE
 23884                           wreg	equ	0xFE8
 23885                           indf1	equ	0xFE7
 23886                           postinc1	equ	0xFE6
 23887                           postdec1	equ	0xFE5
 23888                           plusw1	equ	0xFE3
 23889                           fsr1h	equ	0xFE2
 23890                           fsr1l	equ	0xFE1
 23891                           indf2	equ	0xFDF
 23892                           postinc2	equ	0xFDE
 23893                           postdec2	equ	0xFDD
 23894                           plusw2	equ	0xFDB
 23895                           fsr2h	equ	0xFDA
 23896                           fsr2l	equ	0xFD9
 23897                           status	equ	0xFD8
 23898                           
 23899 ;; *************** function _motor_arc_move *****************
 23900 ;; Defined at:
 23901 ;;		line 713 in file "motor.c"
 23902 ;; Parameters:    Size  Location     Type
 23903 ;;  direction       1    wreg     enum E6622
 23904 ;; Auto vars:     Size  Location     Type
 23905 ;;  direction       1   75[BANK0 ] enum E6622
 23906 ;;  arc_in_steps    4   76[BANK0 ] float 
 23907 ;; Return value:  Size  Location     Type
 23908 ;;                  1    wreg      void 
 23909 ;; Registers used:
 23910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23911 ;; Tracked objects:
 23912 ;;		On entry : 0/0
 23913 ;;		On exit  : 0/0
 23914 ;;		Unchanged: 0/0
 23915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23917 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23919 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23920 ;;Total ram usage:        9 bytes
 23921 ;; Hardware stack levels used:    1
 23922 ;; Hardware stack levels required when called:   14
 23923 ;; This function calls:
 23924 ;;		___fldiv
 23925 ;;		___flmul
 23926 ;;		___fltol
 23927 ;;		___xxtofl
 23928 ;;		_motor_schedule_command
 23929 ;; This function is called by:
 23930 ;;		_encoder_statemachine
 23931 ;; This function uses a non-reentrant model
 23932 ;;
 23933                           
 23934                           	psect	text97
 23935  0117C8                     __ptext97:
 23936                           	opt stack 0
 23937  0117C8                     _motor_arc_move:
 23938                           	opt stack 15
 23939                           
 23940                           ;incstack = 0
 23941                           ;motor_arc_move@direction stored from wreg
 23942  0117C8  0100               	movlb	0	; () banked
 23943  0117CA  6FAB               	movwf	motor_arc_move@direction& (0+255),b
 23944                           
 23945                           ;motor.c: 715: float arc_in_steps;;motor.c: 717: arc_in_steps = (float) os.arc_size;
 23946  0117CC  C18D  F060         	movff	_os+28,___xxtofl@val	;volatile
 23947  0117D0  C18E  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 23948  0117D4  C18F  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 23949  0117D8  C190  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 23950  0117DC  0E01               	movlw	1
 23951  0117DE  EC17  F081         	call	___xxtofl
 23952  0117E2  C060  F0AC         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 23953  0117E6  C061  F0AD         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 23954  0117EA  C062  F0AE         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 23955  0117EE  C063  F0AF         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 23956                           
 23957                           ;motor.c: 718: arc_in_steps *= (float) config.full_circle_in_steps;
 23958  0117F2  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 23959  0117F6  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 23960  0117FA  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 23961  0117FE  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 23962  011802  C1A1  F060         	movff	_config,___xxtofl@val
 23963  011806  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23964  01180A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23965  01180E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23966  011812  0E00               	movlw	0
 23967  011814  EC17  F081         	call	___xxtofl
 23968  011818  C060  F072         	movff	?___xxtofl,___flmul@a
 23969  01181C  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23970  011820  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23971  011824  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23972  011828  EC1E  F066         	call	___flmul	;wreg free
 23973  01182C  C06E  F0AC         	movff	?___flmul,motor_arc_move@arc_in_steps
 23974  011830  C06F  F0AD         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 23975  011834  C070  F0AE         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 23976  011838  C071  F0AF         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 23977                           
 23978                           ;motor.c: 719: arc_in_steps /= (float) 36000;
 23979  01183C  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 23980  011840  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 23981  011844  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 23982  011848  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 23983  01184C  0E00               	movlw	0
 23984  01184E  0100               	movlb	0	; () banked
 23985  011850  6F72               	movwf	___fldiv@a& (0+255),b
 23986  011852  0EA0               	movlw	160
 23987  011854  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 23988  011856  0E0C               	movlw	12
 23989  011858  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 23990  01185A  0E47               	movlw	71
 23991  01185C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 23992  01185E  ECD6  F06D         	call	___fldiv	;wreg free
 23993  011862  C06E  F0AC         	movff	?___fldiv,motor_arc_move@arc_in_steps
 23994  011866  C06F  F0AD         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 23995  01186A  C070  F0AE         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 23996  01186E  C071  F0AF         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 23997                           
 23998                           ;motor.c: 720: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 23999  011872  C0AC  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24000  011876  C0AD  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24001  01187A  C0AE  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24002  01187E  C0AF  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24003  011882  EC62  F090         	call	___fltol	;wreg free
 24004  011886  C060  F0A7         	movff	?___fltol,_motor_arc_move$8784
 24005  01188A  C061  F0A8         	movff	?___fltol+1,_motor_arc_move$8784+1
 24006  01188E  C062  F0A9         	movff	?___fltol+2,_motor_arc_move$8784+2
 24007  011892  C063  F0AA         	movff	?___fltol+3,_motor_arc_move$8784+3
 24008                           
 24009                           ;motor.c: 720: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 24010  011896  C0A7  F0A0         	movff	_motor_arc_move$8784,motor_schedule_command@distance_in_steps
 24011  01189A  C0A8  F0A1         	movff	_motor_arc_move$8784+1,motor_schedule_command@distance_in_steps+1
 24012  01189E  C0A9  F0A2         	movff	_motor_arc_move$8784+2,motor_schedule_command@distance_in_steps+2
 24013  0118A2  C0AA  F0A3         	movff	_motor_arc_move$8784+3,motor_schedule_command@distance_in_steps+3
 24014  0118A6  C191  F0A4         	movff	_os+32,motor_schedule_command@speed	;volatile
 24015  0118AA  C192  F0A5         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 24016  0118AE  0100               	movlb	0	; () banked
 24017  0118B0  51AB               	movf	motor_arc_move@direction& (0+255),w,b
 24018  0118B2  EC61  F097         	call	_motor_schedule_command
 24019  0118B6  0012               	return		;funcret
 24020  0118B8                     __end_of_motor_arc_move:
 24021                           	opt stack 0
 24022                           tblptru	equ	0xFF8
 24023                           tblptrh	equ	0xFF7
 24024                           tblptrl	equ	0xFF6
 24025                           tablat	equ	0xFF5
 24026                           prodh	equ	0xFF4
 24027                           prodl	equ	0xFF3
 24028                           intcon	equ	0xFF2
 24029                           postinc0	equ	0xFEE
 24030                           wreg	equ	0xFE8
 24031                           indf1	equ	0xFE7
 24032                           postinc1	equ	0xFE6
 24033                           postdec1	equ	0xFE5
 24034                           plusw1	equ	0xFE3
 24035                           fsr1h	equ	0xFE2
 24036                           fsr1l	equ	0xFE1
 24037                           indf2	equ	0xFDF
 24038                           postinc2	equ	0xFDE
 24039                           postdec2	equ	0xFDD
 24040                           plusw2	equ	0xFDB
 24041                           fsr2h	equ	0xFDA
 24042                           fsr2l	equ	0xFD9
 24043                           status	equ	0xFD8
 24044                           
 24045 ;; *************** function __encoder_next_setup_stepsize *****************
 24046 ;; Defined at:
 24047 ;;		line 24 in file "encoder.c"
 24048 ;; Parameters:    Size  Location     Type
 24049 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24050 ;; Auto vars:     Size  Location     Type
 24051 ;;		None
 24052 ;; Return value:  Size  Location     Type
 24053 ;;                  2    0[BANK0 ] unsigned int 
 24054 ;; Registers used:
 24055 ;;		wreg, status,2, status,0
 24056 ;; Tracked objects:
 24057 ;;		On entry : 0/0
 24058 ;;		On exit  : 0/0
 24059 ;;		Unchanged: 0/0
 24060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24061 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24064 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24065 ;;Total ram usage:        4 bytes
 24066 ;; Hardware stack levels used:    1
 24067 ;; Hardware stack levels required when called:   10
 24068 ;; This function calls:
 24069 ;;		Nothing
 24070 ;; This function is called by:
 24071 ;;		_encoder_statemachine
 24072 ;; This function uses a non-reentrant model
 24073 ;;
 24074                           
 24075                           	psect	text98
 24076  013DFC                     __ptext98:
 24077                           	opt stack 0
 24078  013DFC                     __encoder_next_setup_stepsize:
 24079                           	opt stack 19
 24080                           
 24081                           ;encoder.c: 26: switch(old_stepsize)
 24082                           
 24083                           ;incstack = 0
 24084  013DFC  D01A               	goto	l2602
 24085  013DFE                     
 24086                           ;encoder.c: 29: return 100;
 24087  013DFE  0E00               	movlw	0
 24088  013E00  0100               	movlb	0	; () banked
 24089  013E02  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24090  013E04  0E64               	movlw	100
 24091  013E06  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24092                           
 24093                           ; BSR set to: 0
 24094  013E08  0012               	return	
 24095  013E0A                     
 24096                           ; BSR set to: 0
 24097                           ;encoder.c: 31: return 10;
 24098                           
 24099                           ; BSR set to: 0
 24100  013E0A  0E00               	movlw	0
 24101  013E0C  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24102  013E0E  0E0A               	movlw	10
 24103  013E10  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24104                           
 24105                           ; BSR set to: 0
 24106  013E12  0012               	return	
 24107  013E14                     
 24108                           ; BSR set to: 0
 24109                           ;encoder.c: 33: return 1;
 24110                           
 24111                           ; BSR set to: 0
 24112  013E14  0E00               	movlw	0
 24113  013E16  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24114  013E18  0E01               	movlw	1
 24115  013E1A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24116                           
 24117                           ; BSR set to: 0
 24118  013E1C  0012               	return	
 24119  013E1E                     
 24120                           ; BSR set to: 0
 24121                           ;encoder.c: 35: return 1000;
 24122                           
 24123                           ; BSR set to: 0
 24124  013E1E  0E03               	movlw	3
 24125  013E20  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24126  013E22  0EE8               	movlw	232
 24127  013E24  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24128                           
 24129                           ; BSR set to: 0
 24130  013E26  0012               	return	
 24131  013E28                     
 24132                           ; BSR set to: 0
 24133                           ;encoder.c: 37: return 100;
 24134                           
 24135                           ; BSR set to: 0
 24136  013E28  0E00               	movlw	0
 24137  013E2A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24138  013E2C  0E64               	movlw	100
 24139  013E2E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24140                           
 24141                           ; BSR set to: 0
 24142                           ;encoder.c: 38: }
 24143                           
 24144                           ; BSR set to: 0
 24145  013E30  0012               	return	
 24146  013E32                     l2602:
 24147                           
 24148                           ; BSR set to: 0
 24149  013E32  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24150  013E36  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24151                           
 24152                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24153                           ; Switch size 1, requested type "space"
 24154                           ; Number of cases is 2, Range of values is 0 to 3
 24155                           ; switch strategies available:
 24156                           ; Name         Instructions Cycles
 24157                           ; simple_byte            7     4 (average)
 24158                           ;	Chosen strategy is simple_byte
 24159  013E3A  0100               	movlb	0	; () banked
 24160  013E3C  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24161  013E3E  0A00               	xorlw	0	; case 0
 24162  013E40  B4D8               	btfsc	status,2,c
 24163  013E42  D004               	goto	l19352
 24164  013E44  0A03               	xorlw	3	; case 3
 24165  013E46  B4D8               	btfsc	status,2,c
 24166  013E48  D00C               	goto	l19354
 24167  013E4A  D7EE               	goto	l2608
 24168  013E4C                     l19352:
 24169                           
 24170                           ; BSR set to: 0
 24171                           ; Switch size 1, requested type "space"
 24172                           ; Number of cases is 3, Range of values is 1 to 100
 24173                           ; switch strategies available:
 24174                           ; Name         Instructions Cycles
 24175                           ; simple_byte           10     6 (average)
 24176                           ;	Chosen strategy is simple_byte
 24177  013E4C  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24178  013E4E  0A01               	xorlw	1	; case 1
 24179  013E50  B4D8               	btfsc	status,2,c
 24180  013E52  D7E5               	goto	l2607
 24181  013E54  0A0B               	xorlw	11	; case 10
 24182  013E56  B4D8               	btfsc	status,2,c
 24183  013E58  D7DD               	goto	l2606
 24184  013E5A  0A6E               	xorlw	110	; case 100
 24185  013E5C  B4D8               	btfsc	status,2,c
 24186  013E5E  D7D5               	goto	l2605
 24187  013E60  D7E3               	goto	l2608
 24188  013E62                     l19354:
 24189                           
 24190                           ; BSR set to: 0
 24191                           ; Switch size 1, requested type "space"
 24192                           ; Number of cases is 1, Range of values is 232 to 232
 24193                           ; switch strategies available:
 24194                           ; Name         Instructions Cycles
 24195                           ; simple_byte            4     3 (average)
 24196                           ;	Chosen strategy is simple_byte
 24197  013E62  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24198  013E64  0AE8               	xorlw	232	; case 232
 24199  013E66  B4D8               	btfsc	status,2,c
 24200  013E68  D7CA               	goto	l2603
 24201  013E6A  D7DE               	goto	l2608
 24202  013E6C                     __end_of__encoder_next_setup_stepsize:
 24203                           	opt stack 0
 24204                           tblptru	equ	0xFF8
 24205                           tblptrh	equ	0xFF7
 24206                           tblptrl	equ	0xFF6
 24207                           tablat	equ	0xFF5
 24208                           prodh	equ	0xFF4
 24209                           prodl	equ	0xFF3
 24210                           intcon	equ	0xFF2
 24211                           postinc0	equ	0xFEE
 24212                           wreg	equ	0xFE8
 24213                           indf1	equ	0xFE7
 24214                           postinc1	equ	0xFE6
 24215                           postdec1	equ	0xFE5
 24216                           plusw1	equ	0xFE3
 24217                           fsr1h	equ	0xFE2
 24218                           fsr1l	equ	0xFE1
 24219                           indf2	equ	0xFDF
 24220                           postinc2	equ	0xFDE
 24221                           postdec2	equ	0xFDD
 24222                           plusw2	equ	0xFDB
 24223                           fsr2h	equ	0xFDA
 24224                           fsr2l	equ	0xFD9
 24225                           status	equ	0xFD8
 24226                           
 24227 ;; *************** function __encoder_next_divide_step_size *****************
 24228 ;; Defined at:
 24229 ;;		line 41 in file "encoder.c"
 24230 ;; Parameters:    Size  Location     Type
 24231 ;;  old_stepsize    1    wreg     unsigned char 
 24232 ;; Auto vars:     Size  Location     Type
 24233 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24234 ;; Return value:  Size  Location     Type
 24235 ;;                  1    wreg      unsigned char 
 24236 ;; Registers used:
 24237 ;;		wreg, status,2, status,0
 24238 ;; Tracked objects:
 24239 ;;		On entry : 0/0
 24240 ;;		On exit  : 0/0
 24241 ;;		Unchanged: 0/0
 24242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24247 ;;Total ram usage:        1 bytes
 24248 ;; Hardware stack levels used:    1
 24249 ;; Hardware stack levels required when called:   10
 24250 ;; This function calls:
 24251 ;;		Nothing
 24252 ;; This function is called by:
 24253 ;;		_encoder_statemachine
 24254 ;; This function uses a non-reentrant model
 24255 ;;
 24256                           
 24257                           	psect	text99
 24258  015400                     __ptext99:
 24259                           	opt stack 0
 24260  015400                     __encoder_next_divide_step_size:
 24261                           	opt stack 19
 24262                           
 24263                           ; BSR set to: 0
 24264                           ;incstack = 0
 24265                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24266  015400  0100               	movlb	0	; () banked
 24267  015402  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24268                           
 24269                           ;encoder.c: 43: switch(old_stepsize)
 24270  015404  D008               	goto	l2612
 24271  015406                     
 24272                           ;encoder.c: 46: return 10;
 24273  015406  0E0A               	movlw	10
 24274  015408  0012               	return	
 24275  01540A                     
 24276                           ;encoder.c: 48: return 1;
 24277  01540A  0E01               	movlw	1
 24278  01540C  0012               	return	
 24279  01540E                     
 24280                           ;encoder.c: 50: return 100;
 24281  01540E  0E64               	movlw	100
 24282  015410  0012               	return	
 24283  015412                     
 24284                           ;encoder.c: 52: return 1;
 24285  015412  0E01               	movlw	1
 24286                           
 24287                           ;encoder.c: 53: }
 24288  015414  0012               	return	
 24289  015416                     l2612:
 24290  015416  0100               	movlb	0	; () banked
 24291  015418  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24292                           
 24293                           ; Switch size 1, requested type "space"
 24294                           ; Number of cases is 3, Range of values is 1 to 100
 24295                           ; switch strategies available:
 24296                           ; Name         Instructions Cycles
 24297                           ; simple_byte           10     6 (average)
 24298                           ;	Chosen strategy is simple_byte
 24299  01541A  0A01               	xorlw	1	; case 1
 24300  01541C  B4D8               	btfsc	status,2,c
 24301  01541E  D7F7               	goto	l2616
 24302  015420  0A0B               	xorlw	11	; case 10
 24303  015422  B4D8               	btfsc	status,2,c
 24304  015424  D7F2               	goto	l2615
 24305  015426  0A6E               	xorlw	110	; case 100
 24306  015428  B4D8               	btfsc	status,2,c
 24307  01542A  D7ED               	goto	l2613
 24308  01542C  D7F2               	goto	l2617
 24309  01542E                     __end_of__encoder_next_divide_step_size:
 24310                           	opt stack 0
 24311                           tblptru	equ	0xFF8
 24312                           tblptrh	equ	0xFF7
 24313                           tblptrl	equ	0xFF6
 24314                           tablat	equ	0xFF5
 24315                           prodh	equ	0xFF4
 24316                           prodl	equ	0xFF3
 24317                           intcon	equ	0xFF2
 24318                           postinc0	equ	0xFEE
 24319                           wreg	equ	0xFE8
 24320                           indf1	equ	0xFE7
 24321                           postinc1	equ	0xFE6
 24322                           postdec1	equ	0xFE5
 24323                           plusw1	equ	0xFE3
 24324                           fsr1h	equ	0xFE2
 24325                           fsr1l	equ	0xFE1
 24326                           indf2	equ	0xFDF
 24327                           postinc2	equ	0xFDE
 24328                           postdec2	equ	0xFDD
 24329                           plusw2	equ	0xFDB
 24330                           fsr2h	equ	0xFDA
 24331                           fsr2l	equ	0xFD9
 24332                           status	equ	0xFD8
 24333                           
 24334 ;; *************** function __encoder_next_arc_step_size *****************
 24335 ;; Defined at:
 24336 ;;		line 56 in file "encoder.c"
 24337 ;; Parameters:    Size  Location     Type
 24338 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24339 ;; Auto vars:     Size  Location     Type
 24340 ;;		None
 24341 ;; Return value:  Size  Location     Type
 24342 ;;                  2    0[BANK0 ] unsigned int 
 24343 ;; Registers used:
 24344 ;;		wreg, status,2, status,0
 24345 ;; Tracked objects:
 24346 ;;		On entry : 0/0
 24347 ;;		On exit  : 0/0
 24348 ;;		Unchanged: 0/0
 24349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24353 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24354 ;;Total ram usage:        4 bytes
 24355 ;; Hardware stack levels used:    1
 24356 ;; Hardware stack levels required when called:   10
 24357 ;; This function calls:
 24358 ;;		Nothing
 24359 ;; This function is called by:
 24360 ;;		_encoder_statemachine
 24361 ;; This function uses a non-reentrant model
 24362 ;;
 24363                           
 24364                           	psect	text100
 24365  013E6C                     __ptext100:
 24366                           	opt stack 0
 24367  013E6C                     __encoder_next_arc_step_size:
 24368                           	opt stack 19
 24369                           
 24370                           ;encoder.c: 58: switch(old_stepsize)
 24371                           
 24372                           ;incstack = 0
 24373  013E6C  D01A               	goto	l2621
 24374  013E6E                     
 24375                           ;encoder.c: 61: return 100;
 24376  013E6E  0E00               	movlw	0
 24377  013E70  0100               	movlb	0	; () banked
 24378  013E72  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24379  013E74  0E64               	movlw	100
 24380  013E76  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24381                           
 24382                           ; BSR set to: 0
 24383  013E78  0012               	return	
 24384  013E7A                     
 24385                           ; BSR set to: 0
 24386                           ;encoder.c: 63: return 10;
 24387                           
 24388                           ; BSR set to: 0
 24389  013E7A  0E00               	movlw	0
 24390  013E7C  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24391  013E7E  0E0A               	movlw	10
 24392  013E80  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24393                           
 24394                           ; BSR set to: 0
 24395  013E82  0012               	return	
 24396  013E84                     
 24397                           ; BSR set to: 0
 24398                           ;encoder.c: 65: return 1;
 24399                           
 24400                           ; BSR set to: 0
 24401  013E84  0E00               	movlw	0
 24402  013E86  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24403  013E88  0E01               	movlw	1
 24404  013E8A  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24405                           
 24406                           ; BSR set to: 0
 24407  013E8C  0012               	return	
 24408  013E8E                     
 24409                           ; BSR set to: 0
 24410                           ;encoder.c: 67: return 1000;
 24411                           
 24412                           ; BSR set to: 0
 24413  013E8E  0E03               	movlw	3
 24414  013E90  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24415  013E92  0EE8               	movlw	232
 24416  013E94  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24417                           
 24418                           ; BSR set to: 0
 24419  013E96  0012               	return	
 24420  013E98                     
 24421                           ; BSR set to: 0
 24422                           ;encoder.c: 69: return 100;
 24423                           
 24424                           ; BSR set to: 0
 24425  013E98  0E00               	movlw	0
 24426  013E9A  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24427  013E9C  0E64               	movlw	100
 24428  013E9E  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;encoder.c: 70: }
 24432                           
 24433                           ; BSR set to: 0
 24434  013EA0  0012               	return	
 24435  013EA2                     l2621:
 24436                           
 24437                           ; BSR set to: 0
 24438  013EA2  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24439  013EA6  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24440                           
 24441                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24442                           ; Switch size 1, requested type "space"
 24443                           ; Number of cases is 2, Range of values is 0 to 3
 24444                           ; switch strategies available:
 24445                           ; Name         Instructions Cycles
 24446                           ; simple_byte            7     4 (average)
 24447                           ;	Chosen strategy is simple_byte
 24448  013EAA  0100               	movlb	0	; () banked
 24449  013EAC  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24450  013EAE  0A00               	xorlw	0	; case 0
 24451  013EB0  B4D8               	btfsc	status,2,c
 24452  013EB2  D004               	goto	l19356
 24453  013EB4  0A03               	xorlw	3	; case 3
 24454  013EB6  B4D8               	btfsc	status,2,c
 24455  013EB8  D00C               	goto	l19358
 24456  013EBA  D7EE               	goto	l2627
 24457  013EBC                     l19356:
 24458                           
 24459                           ; BSR set to: 0
 24460                           ; Switch size 1, requested type "space"
 24461                           ; Number of cases is 3, Range of values is 1 to 100
 24462                           ; switch strategies available:
 24463                           ; Name         Instructions Cycles
 24464                           ; simple_byte           10     6 (average)
 24465                           ;	Chosen strategy is simple_byte
 24466  013EBC  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24467  013EBE  0A01               	xorlw	1	; case 1
 24468  013EC0  B4D8               	btfsc	status,2,c
 24469  013EC2  D7E5               	goto	l2626
 24470  013EC4  0A0B               	xorlw	11	; case 10
 24471  013EC6  B4D8               	btfsc	status,2,c
 24472  013EC8  D7DD               	goto	l2625
 24473  013ECA  0A6E               	xorlw	110	; case 100
 24474  013ECC  B4D8               	btfsc	status,2,c
 24475  013ECE  D7D5               	goto	l2624
 24476  013ED0  D7E3               	goto	l2627
 24477  013ED2                     l19358:
 24478                           
 24479                           ; BSR set to: 0
 24480                           ; Switch size 1, requested type "space"
 24481                           ; Number of cases is 1, Range of values is 232 to 232
 24482                           ; switch strategies available:
 24483                           ; Name         Instructions Cycles
 24484                           ; simple_byte            4     3 (average)
 24485                           ;	Chosen strategy is simple_byte
 24486  013ED2  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24487  013ED4  0AE8               	xorlw	232	; case 232
 24488  013ED6  B4D8               	btfsc	status,2,c
 24489  013ED8  D7CA               	goto	l2622
 24490  013EDA  D7DE               	goto	l2627
 24491  013EDC                     __end_of__encoder_next_arc_step_size:
 24492                           	opt stack 0
 24493                           tblptru	equ	0xFF8
 24494                           tblptrh	equ	0xFF7
 24495                           tblptrl	equ	0xFF6
 24496                           tablat	equ	0xFF5
 24497                           prodh	equ	0xFF4
 24498                           prodl	equ	0xFF3
 24499                           intcon	equ	0xFF2
 24500                           postinc0	equ	0xFEE
 24501                           wreg	equ	0xFE8
 24502                           indf1	equ	0xFE7
 24503                           postinc1	equ	0xFE6
 24504                           postdec1	equ	0xFE5
 24505                           plusw1	equ	0xFE3
 24506                           fsr1h	equ	0xFE2
 24507                           fsr1l	equ	0xFE1
 24508                           indf2	equ	0xFDF
 24509                           postinc2	equ	0xFDE
 24510                           postdec2	equ	0xFDD
 24511                           plusw2	equ	0xFDB
 24512                           fsr2h	equ	0xFDA
 24513                           fsr2l	equ	0xFD9
 24514                           status	equ	0xFD8
 24515                           
 24516 ;; *************** function __divide_jump_size_increment *****************
 24517 ;; Defined at:
 24518 ;;		line 73 in file "encoder.c"
 24519 ;; Parameters:    Size  Location     Type
 24520 ;;		None
 24521 ;; Auto vars:     Size  Location     Type
 24522 ;;		None
 24523 ;; Return value:  Size  Location     Type
 24524 ;;                  1    wreg      void 
 24525 ;; Registers used:
 24526 ;;		wreg, status,2, status,0
 24527 ;; Tracked objects:
 24528 ;;		On entry : 0/0
 24529 ;;		On exit  : 0/0
 24530 ;;		Unchanged: 0/0
 24531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24534 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24536 ;;Total ram usage:        1 bytes
 24537 ;; Hardware stack levels used:    1
 24538 ;; Hardware stack levels required when called:   10
 24539 ;; This function calls:
 24540 ;;		Nothing
 24541 ;; This function is called by:
 24542 ;;		_encoder_statemachine
 24543 ;; This function uses a non-reentrant model
 24544 ;;
 24545                           
 24546                           	psect	text101
 24547  015032                     __ptext101:
 24548                           	opt stack 0
 24549  015032                     __divide_jump_size_increment:
 24550                           	opt stack 19
 24551                           
 24552                           ;encoder.c: 75: ++os.divide_jump_size;
 24553                           
 24554                           ; BSR set to: 0
 24555                           ;incstack = 0
 24556  015032  0101               	movlb	1	; () banked
 24557  015034  4B89               	infsnz	(_os+24)& (0+255),f,b	;volatile
 24558  015036  2B8A               	incf	(_os+25)& (0+255),f,b	;volatile
 24559                           
 24560                           ; BSR set to: 1
 24561                           ;encoder.c: 76: if(os.divide_jump_size==0)
 24562  015038  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24563  01503A  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24564  01503C  A4D8               	btfss	status,2,c
 24565  01503E  D004               	goto	l2631
 24566                           
 24567                           ; BSR set to: 1
 24568                           ;encoder.c: 77: os.divide_jump_size = 1;
 24569  015040  0E00               	movlw	0
 24570  015042  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24571  015044  0E01               	movlw	1
 24572  015046  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24573  015048                     l2631:
 24574                           
 24575                           ; BSR set to: 1
 24576                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 24577                           
 24578                           ; BSR set to: 1
 24579  015048  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 24580  01504A  5D89               	subwf	(_os+24)& (0+255),w,b	;volatile
 24581  01504C  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24582  01504E  0A80               	xorlw	128
 24583  015050  0100               	movlb	0	; () banked
 24584  015052  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24585  015054  0101               	movlb	1	; () banked
 24586  015056  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 24587  015058  0A80               	xorlw	128
 24588  01505A  0100               	movlb	0	; () banked
 24589  01505C  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24590  01505E  A0D8               	btfss	status,0,c
 24591  015060  0012               	return	
 24592                           
 24593                           ; BSR set to: 0
 24594                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 24595  015062  0EFF               	movlw	255
 24596  015064  0101               	movlb	1	; () banked
 24597  015066  2584               	addwf	(_os+19)& (0+255),w,b	;volatile
 24598  015068  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24599  01506A  0EFF               	movlw	255
 24600  01506C  2185               	addwfc	(_os+20)& (0+255),w,b	;volatile
 24601  01506E  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24602  015070  0012               	return	
 24603  015072                     __end_of__divide_jump_size_increment:
 24604                           	opt stack 0
 24605                           tblptru	equ	0xFF8
 24606                           tblptrh	equ	0xFF7
 24607                           tblptrl	equ	0xFF6
 24608                           tablat	equ	0xFF5
 24609                           prodh	equ	0xFF4
 24610                           prodl	equ	0xFF3
 24611                           intcon	equ	0xFF2
 24612                           postinc0	equ	0xFEE
 24613                           wreg	equ	0xFE8
 24614                           indf1	equ	0xFE7
 24615                           postinc1	equ	0xFE6
 24616                           postdec1	equ	0xFE5
 24617                           plusw1	equ	0xFE3
 24618                           fsr1h	equ	0xFE2
 24619                           fsr1l	equ	0xFE1
 24620                           indf2	equ	0xFDF
 24621                           postinc2	equ	0xFDE
 24622                           postdec2	equ	0xFDD
 24623                           plusw2	equ	0xFDB
 24624                           fsr2h	equ	0xFDA
 24625                           fsr2l	equ	0xFD9
 24626                           status	equ	0xFD8
 24627                           
 24628 ;; *************** function __divide_jump_size_decrement *****************
 24629 ;; Defined at:
 24630 ;;		line 82 in file "encoder.c"
 24631 ;; Parameters:    Size  Location     Type
 24632 ;;		None
 24633 ;; Auto vars:     Size  Location     Type
 24634 ;;		None
 24635 ;; Return value:  Size  Location     Type
 24636 ;;                  1    wreg      void 
 24637 ;; Registers used:
 24638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24639 ;; Tracked objects:
 24640 ;;		On entry : 0/0
 24641 ;;		On exit  : 0/0
 24642 ;;		Unchanged: 0/0
 24643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24646 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24647 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24648 ;;Total ram usage:        3 bytes
 24649 ;; Hardware stack levels used:    1
 24650 ;; Hardware stack levels required when called:   10
 24651 ;; This function calls:
 24652 ;;		Nothing
 24653 ;; This function is called by:
 24654 ;;		_encoder_statemachine
 24655 ;; This function uses a non-reentrant model
 24656 ;;
 24657                           
 24658                           	psect	text102
 24659  013F4A                     __ptext102:
 24660                           	opt stack 0
 24661  013F4A                     __divide_jump_size_decrement:
 24662                           	opt stack 19
 24663                           
 24664                           ;encoder.c: 84: --os.divide_jump_size;
 24665                           
 24666                           ;incstack = 0
 24667  013F4A  0101               	movlb	1	; () banked
 24668  013F4C  0789               	decf	(_os+24)& (0+255),f,b	;volatile
 24669  013F4E  A0D8               	btfss	status,0,c
 24670  013F50  078A               	decf	(_os+25)& (0+255),f,b	;volatile
 24671                           
 24672                           ; BSR set to: 1
 24673                           ;encoder.c: 85: if(os.divide_jump_size==0)
 24674  013F52  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24675  013F54  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24676  013F56  A4D8               	btfss	status,2,c
 24677  013F58  D002               	goto	l2636
 24678                           
 24679                           ; BSR set to: 1
 24680                           ;encoder.c: 86: os.divide_jump_size = -1;
 24681  013F5A  6989               	setf	(_os+24)& (0+255),b	;volatile
 24682  013F5C  698A               	setf	(_os+25)& (0+255),b	;volatile
 24683  013F5E                     l2636:
 24684                           
 24685                           ; BSR set to: 1
 24686                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 24687                           
 24688                           ; BSR set to: 1
 24689  013F5E  EE21  F084         	lfsr	2,_os+19	;volatile
 24690  013F62  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24691  013F66  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24692  013F6A  0100               	movlb	0	; () banked
 24693  013F6C  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24694  013F6E  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24695  013F70  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24696  013F72  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24697  013F74  0101               	movlb	1	; () banked
 24698  013F76  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24699  013F78  0100               	movlb	0	; () banked
 24700  013F7A  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 24701  013F7C  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24702  013F7E  0A80               	xorlw	128
 24703  013F80  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 24704  013F82  0101               	movlb	1	; () banked
 24705  013F84  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24706  013F86  0A80               	xorlw	128
 24707  013F88  0100               	movlb	0	; () banked
 24708  013F8A  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 24709  013F8C  A0D8               	btfss	status,0,c
 24710  013F8E  0012               	return	
 24711                           
 24712                           ; BSR set to: 0
 24713                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 24714  013F90  EE21  F084         	lfsr	2,_os+19	;volatile
 24715  013F94  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24716  013F98  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24717  013F9C  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24718  013F9E  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24719  013FA0  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24720  013FA2  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24721  013FA4  0E01               	movlw	1
 24722  013FA6  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 24723  013FA8  0101               	movlb	1	; () banked
 24724  013FAA  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24725  013FAC  0E00               	movlw	0
 24726  013FAE  0100               	movlb	0	; () banked
 24727  013FB0  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24728  013FB2  0101               	movlb	1	; () banked
 24729  013FB4  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24730  013FB6  0012               	return	
 24731  013FB8                     __end_of__divide_jump_size_decrement:
 24732                           	opt stack 0
 24733                           tblptru	equ	0xFF8
 24734                           tblptrh	equ	0xFF7
 24735                           tblptrl	equ	0xFF6
 24736                           tablat	equ	0xFF5
 24737                           prodh	equ	0xFF4
 24738                           prodl	equ	0xFF3
 24739                           intcon	equ	0xFF2
 24740                           postinc0	equ	0xFEE
 24741                           wreg	equ	0xFE8
 24742                           indf1	equ	0xFE7
 24743                           postinc1	equ	0xFE6
 24744                           postdec1	equ	0xFE5
 24745                           plusw1	equ	0xFE3
 24746                           fsr1h	equ	0xFE2
 24747                           fsr1l	equ	0xFE1
 24748                           indf2	equ	0xFDF
 24749                           postinc2	equ	0xFDE
 24750                           postdec2	equ	0xFDD
 24751                           plusw2	equ	0xFDB
 24752                           fsr2h	equ	0xFDA
 24753                           fsr2l	equ	0xFD9
 24754                           status	equ	0xFD8
 24755                           
 24756 ;; *************** function _display_prepare *****************
 24757 ;; Defined at:
 24758 ;;		line 278 in file "display.c"
 24759 ;; Parameters:    Size  Location     Type
 24760 ;;		None
 24761 ;; Auto vars:     Size  Location     Type
 24762 ;;  temp           10   94[BANK0 ] unsigned char [10]
 24763 ;;  cntr            1  105[BANK0 ] unsigned char 
 24764 ;;  space           1  104[BANK0 ] unsigned char 
 24765 ;; Return value:  Size  Location     Type
 24766 ;;                  1    wreg      void 
 24767 ;; Registers used:
 24768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24769 ;; Tracked objects:
 24770 ;;		On entry : 0/0
 24771 ;;		On exit  : 0/0
 24772 ;;		Unchanged: 0/0
 24773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24775 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24776 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24777 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24778 ;;Total ram usage:       14 bytes
 24779 ;; Hardware stack levels used:    1
 24780 ;; Hardware stack levels required when called:   15
 24781 ;; This function calls:
 24782 ;;		__display_clear
 24783 ;;		__display_itoa
 24784 ;;		__display_itoa_long
 24785 ;;		__display_padded_itoa
 24786 ;;		__display_signed_itoa
 24787 ;;		_memcpy
 24788 ;;		_motor_speed_from_index
 24789 ;;		_strlen
 24790 ;; This function is called by:
 24791 ;;		_main
 24792 ;; This function uses a non-reentrant model
 24793 ;;
 24794                           
 24795                           	psect	text103
 24796  00A330                     __ptext103:
 24797                           	opt stack 0
 24798  00A330                     _display_prepare:
 24799                           	opt stack 15
 24800                           
 24801                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 24802                           
 24803                           ;incstack = 0
 24804  00A330  EF8E  F057         	goto	l1376
 24805  00A334                     
 24806                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 24807  00A334  0E34               	movlw	low _display_content
 24808  00A336  0100               	movlb	0	; () banked
 24809  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 24810  00A33A  0E02               	movlw	high _display_content
 24811  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24812  00A33E  0E6E               	movlw	low _dc_main
 24813  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 24814  00A342  0EA0               	movlw	high _dc_main
 24815  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24816  00A346  0E00               	movlw	0
 24817  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24818  00A34A  0E50               	movlw	80
 24819  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 24820  00A34E  ECD9  F0A1         	call	_memcpy	;wreg free
 24821                           
 24822                           ;display.c: 289: switch(os.displayState)
 24823  00A352  D00F               	goto	l1378
 24824  00A354                     
 24825                           ;display.c: 292: display_content[1][0] = '>';
 24826  00A354  0E3E               	movlw	62
 24827  00A356  0102               	movlb	2	; () banked
 24828  00A358  6F48               	movwf	(_display_content+20)& (0+255),b
 24829                           
 24830                           ;display.c: 293: break;
 24831  00A35A  EFBC  F057         	goto	l1385
 24832  00A35E                     
 24833                           ;display.c: 295: display_content[1][9] = '>';
 24834                           
 24835                           ; BSR set to: 2
 24836  00A35E  0E3E               	movlw	62
 24837  00A360  0102               	movlb	2	; () banked
 24838  00A362  6F51               	movwf	(_display_content+29)& (0+255),b
 24839                           
 24840                           ;display.c: 296: break;
 24841  00A364  EFBC  F057         	goto	l1385
 24842  00A368                     
 24843                           ;display.c: 301: display_content[2][9] = '>';
 24844                           
 24845                           ; BSR set to: 2
 24846  00A368  0E3E               	movlw	62
 24847  00A36A  0102               	movlb	2	; () banked
 24848  00A36C  6F65               	movwf	(_display_content+49)& (0+255),b
 24849                           
 24850                           ;display.c: 302: break;
 24851  00A36E  EFBC  F057         	goto	l1385
 24852  00A372                     l1378:
 24853                           
 24854                           ; BSR set to: 2
 24855  00A372  0101               	movlb	1	; () banked
 24856  00A374  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24857                           
 24858                           ; Switch size 1, requested type "space"
 24859                           ; Number of cases is 5, Range of values is 1 to 5
 24860                           ; switch strategies available:
 24861                           ; Name         Instructions Cycles
 24862                           ; simple_byte           16     9 (average)
 24863                           ;	Chosen strategy is simple_byte
 24864  00A376  0A01               	xorlw	1	; case 1
 24865  00A378  B4D8               	btfsc	status,2,c
 24866  00A37A  D7EC               	goto	l1379
 24867  00A37C  0A03               	xorlw	3	; case 2
 24868  00A37E  B4D8               	btfsc	status,2,c
 24869  00A380  D7EE               	goto	l1381
 24870  00A382  0A01               	xorlw	1	; case 3
 24871  00A384  B4D8               	btfsc	status,2,c
 24872  00A386  D067               	goto	l1398
 24873  00A388  0A07               	xorlw	7	; case 4
 24874  00A38A  B4D8               	btfsc	status,2,c
 24875  00A38C  D7ED               	goto	l1383
 24876  00A38E  0A01               	xorlw	1	; case 5
 24877  00A390  D072               	goto	L92
 24878  00A392                     
 24879                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 24880                           
 24881                           ; BSR set to: 1
 24882  00A392  0E34               	movlw	low _display_content
 24883  00A394  0100               	movlb	0	; () banked
 24884  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 24885  00A398  0E02               	movlw	high _display_content
 24886  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24887  00A39C  0E1E               	movlw	low _dc_setup1
 24888  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 24889  00A3A0  0EA0               	movlw	high _dc_setup1
 24890  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24891  00A3A4  0E00               	movlw	0
 24892  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24893  00A3A8  0E50               	movlw	80
 24894  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 24895  00A3AC  ECD9  F0A1         	call	_memcpy	;wreg free
 24896                           
 24897                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 24898  00A3B0  C181  F095         	movff	_os+16,__display_itoa@value	;volatile
 24899  00A3B4  C182  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 24900  00A3B8  0E02               	movlw	2
 24901  00A3BA  0100               	movlb	0	; () banked
 24902  00A3BC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 24903  00A3BE  0EBE               	movlw	low display_prepare@temp
 24904  00A3C0  6F98               	movwf	__display_itoa@text& (0+255),b
 24905  00A3C2  0E00               	movlw	high display_prepare@temp
 24906  00A3C4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 24907  00A3C6  EC0D  F075         	call	__display_itoa	;wreg free
 24908                           
 24909                           ;display.c: 312: if(os.setup_step_size>999)
 24910  00A3CA  0EE8               	movlw	232
 24911  00A3CC  0101               	movlb	1	; () banked
 24912  00A3CE  5D81               	subwf	(_os+16)& (0+255),w,b	;volatile
 24913  00A3D0  0E03               	movlw	3
 24914  00A3D2  5982               	subwfb	(_os+17)& (0+255),w,b	;volatile
 24915  00A3D4  A0D8               	btfss	status,0,c
 24916  00A3D6  D002               	goto	l1387
 24917                           
 24918                           ; BSR set to: 1
 24919                           ;display.c: 313: space = 0;
 24920  00A3D8  0E00               	movlw	0
 24921  00A3DA  D001               	goto	L23
 24922  00A3DC                     l1387:
 24923                           
 24924                           ;display.c: 314: else;display.c: 315: space = 1;
 24925                           
 24926                           ; BSR set to: 0
 24927  00A3DC  0E01               	movlw	1
 24928  00A3DE                     L23:
 24929  00A3DE  0100               	movlb	0	; () banked
 24930  00A3E0  6FC8               	movwf	display_prepare@space& (0+255),b
 24931                           
 24932                           ; BSR set to: 0
 24933                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 24934  00A3E2  0E00               	movlw	0
 24935  00A3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24936  00A3E6  D018               	goto	l1389
 24937  00A3E8                     
 24938                           ; BSR set to: 0
 24939                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 24940                           
 24941                           ; BSR set to: 0
 24942  00A3E8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24943  00A3EA  0D01               	mullw	1
 24944  00A3EC  0EBE               	movlw	low display_prepare@temp
 24945  00A3EE  24F3               	addwf	prodl,w,c
 24946  00A3F0  6ED9               	movwf	fsr2l,c
 24947  00A3F2  0E00               	movlw	high display_prepare@temp
 24948  00A3F4  20F4               	addwfc	prodh,w,c
 24949  00A3F6  6EDA               	movwf	fsr2h,c
 24950  00A3F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24951  00A3FA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 24952  00A3FE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24953  00A400  27BC               	addwf	??_display_prepare& (0+255),f,b
 24954  00A402  0E00               	movlw	0
 24955  00A404  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 24956  00A406  0E70               	movlw	low (_display_content+60)
 24957  00A408  25BC               	addwf	??_display_prepare& (0+255),w,b
 24958  00A40A  6EE1               	movwf	fsr1l,c
 24959  00A40C  0E02               	movlw	high (_display_content+60)
 24960  00A40E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 24961  00A410  6EE2               	movwf	fsr1h,c
 24962  00A412  CFDF FFE7          	movff	indf2,indf1
 24963                           
 24964                           ; BSR set to: 0
 24965  00A416  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 24966  00A418                     l1389:
 24967                           
 24968                           ; BSR set to: 0
 24969                           
 24970                           ; BSR set to: 0
 24971  00A418  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24972  00A41A  0D01               	mullw	1
 24973  00A41C  0EBE               	movlw	low display_prepare@temp
 24974  00A41E  24F3               	addwf	prodl,w,c
 24975  00A420  6ED9               	movwf	fsr2l,c
 24976  00A422  0E00               	movlw	high display_prepare@temp
 24977  00A424  20F4               	addwfc	prodh,w,c
 24978  00A426  6EDA               	movwf	fsr2h,c
 24979  00A428  50DF               	movf	indf2,w,c
 24980  00A42A  A4D8               	btfss	status,2,c
 24981  00A42C  D7DD               	goto	l1390
 24982                           
 24983                           ; BSR set to: 2
 24984                           
 24985                           ; BSR set to: 2
 24986                           ;display.c: 328: }
 24987                           
 24988                           ;display.c: 327: break;
 24989                           
 24990                           ;display.c: 326: display_content[3][12] = '>';
 24991                           
 24992                           ; BSR set to: 2
 24993                           
 24994                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 24995                           
 24996                           ;display.c: 324: break;
 24997                           
 24998                           ;display.c: 323: display_content[2][12] = '>';
 24999                           
 25000                           ; BSR set to: 0
 25001                           
 25002                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 25003                           
 25004                           ; BSR set to: 0
 25005                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 25006  00A42E  0101               	movlb	1	; () banked
 25007  00A430  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25008                           
 25009                           ; Switch size 1, requested type "space"
 25010                           ; Number of cases is 2, Range of values is 17 to 18
 25011                           ; switch strategies available:
 25012                           ; Name         Instructions Cycles
 25013                           ; simple_byte            7     4 (average)
 25014                           ;	Chosen strategy is simple_byte
 25015  00A432  0A11               	xorlw	17	; case 17
 25016  00A434  D08E               	goto	L29
 25017  00A436                     
 25018                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 25019                           
 25020                           ; BSR set to: 1
 25021  00A436  0E34               	movlw	low _display_content
 25022  00A438  0100               	movlb	0	; () banked
 25023  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 25024  00A43C  0E02               	movlw	high _display_content
 25025  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25026  00A440  0ECE               	movlw	low _dc_setup2
 25027  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 25028  00A444  0E9F               	movlw	high _dc_setup2
 25029  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25030  00A448  0E00               	movlw	0
 25031  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25032  00A44C  0E50               	movlw	80
 25033  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 25034  00A450  ECD9  F0A1         	call	_memcpy	;wreg free
 25035                           
 25036                           ;display.c: 333: switch(os.displayState)
 25037  00A454  D00A               	goto	l1397
 25038  00A456                     l1398:
 25039                           
 25040                           ;display.c: 336: display_content[2][0] = '>';
 25041  00A456  0E3E               	movlw	62
 25042  00A458  0102               	movlb	2	; () banked
 25043  00A45A  6F5C               	movwf	(_display_content+40)& (0+255),b
 25044                           
 25045                           ;display.c: 337: break;
 25046  00A45C  EFBC  F057         	goto	l1385
 25047  00A460                     l1400:
 25048                           
 25049                           ;display.c: 339: display_content[3][0] = '>';
 25050                           
 25051                           ; BSR set to: 2
 25052  00A460  0E3E               	movlw	62
 25053  00A462  0102               	movlb	2	; () banked
 25054  00A464  6F70               	movwf	(_display_content+60)& (0+255),b
 25055                           
 25056                           ; BSR set to: 2
 25057                           ;display.c: 341: }
 25058                           
 25059                           ;display.c: 340: break;
 25060  00A466  EFBC  F057         	goto	l1385
 25061  00A46A                     l1397:
 25062                           
 25063                           ; BSR set to: 2
 25064  00A46A  0101               	movlb	1	; () banked
 25065  00A46C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25066                           
 25067                           ; Switch size 1, requested type "space"
 25068                           ; Number of cases is 2, Range of values is 33 to 34
 25069                           ; switch strategies available:
 25070                           ; Name         Instructions Cycles
 25071                           ; simple_byte            7     4 (average)
 25072                           ;	Chosen strategy is simple_byte
 25073  00A46E  0A21               	xorlw	33	; case 33
 25074  00A470  B4D8               	btfsc	status,2,c
 25075  00A472  D7F1               	goto	l1398
 25076  00A474  0A03               	xorlw	3	; case 34
 25077  00A476                     L92:
 25078  00A476  B4D8               	btfsc	status,2,c
 25079  00A478  D7F3               	goto	l1400
 25080                           
 25081                           ; BSR set to: 1
 25082                           ;display.c: 342: break;
 25083  00A47A  EFBC  F057         	goto	l1385
 25084  00A47E                     
 25085                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 25086                           
 25087                           ; BSR set to: 1
 25088  00A47E  0E34               	movlw	low _display_content
 25089  00A480  0100               	movlb	0	; () banked
 25090  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 25091  00A484  0E02               	movlw	high _display_content
 25092  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25093  00A488  0E7E               	movlw	low _dc_divide1
 25094  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 25095  00A48C  0E9F               	movlw	high _dc_divide1
 25096  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25097  00A490  0E00               	movlw	0
 25098  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25099  00A494  0E50               	movlw	80
 25100  00A496  6F64               	movwf	memcpy@n& (0+255),b
 25101  00A498  ECD9  F0A1         	call	_memcpy	;wreg free
 25102                           
 25103                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 25104  00A49C  C186  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 25105  00A4A0  0100               	movlb	0	; () banked
 25106  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25107  00A4A4  0E03               	movlw	3
 25108  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25109  00A4A8  0EBE               	movlw	low display_prepare@temp
 25110  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25111  00A4AC  0E00               	movlw	high display_prepare@temp
 25112  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25113  00A4B0  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25114                           
 25115                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 25116  00A4B4  0E00               	movlw	0
 25117  00A4B6  0100               	movlb	0	; () banked
 25118  00A4B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25119  00A4BA                     l18222:
 25120                           
 25121                           ; BSR set to: 0
 25122  00A4BA  0E02               	movlw	2
 25123  00A4BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25124  00A4BE  D001               	goto	l1402
 25125  00A4C0  D014               	goto	u18200
 25126  00A4C2                     l1402:
 25127                           
 25128                           ; BSR set to: 0
 25129                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 25130                           
 25131                           ; BSR set to: 0
 25132  00A4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25133  00A4C4  0D01               	mullw	1
 25134  00A4C6  0EBE               	movlw	low display_prepare@temp
 25135  00A4C8  24F3               	addwf	prodl,w,c
 25136  00A4CA  6ED9               	movwf	fsr2l,c
 25137  00A4CC  0E00               	movlw	high display_prepare@temp
 25138  00A4CE  20F4               	addwfc	prodh,w,c
 25139  00A4D0  6EDA               	movwf	fsr2h,c
 25140  00A4D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25141  00A4D4  0D01               	mullw	1
 25142  00A4D6  0E5C               	movlw	low (_display_content+40)
 25143  00A4D8  24F3               	addwf	prodl,w,c
 25144  00A4DA  6EE1               	movwf	fsr1l,c
 25145  00A4DC  0E02               	movlw	high (_display_content+40)
 25146  00A4DE  20F4               	addwfc	prodh,w,c
 25147  00A4E0  6EE2               	movwf	fsr1h,c
 25148  00A4E2  CFDF FFE7          	movff	indf2,indf1
 25149                           
 25150                           ; BSR set to: 0
 25151  00A4E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25152  00A4E8  D7E8               	goto	l18222
 25153  00A4EA                     u18200:
 25154                           
 25155                           ; BSR set to: 0
 25156                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 25157                           
 25158                           ; BSR set to: 0
 25159  00A4EA  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25160  00A4EE  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25161  00A4F2  0E04               	movlw	4
 25162  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25163  00A4F6  0EBE               	movlw	low display_prepare@temp
 25164  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25165  00A4FA  0E00               	movlw	high display_prepare@temp
 25166  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25167  00A4FE  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25168                           
 25169                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 25170  00A502  0E00               	movlw	0
 25171  00A504  0100               	movlb	0	; () banked
 25172  00A506  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25173  00A508                     l18236:
 25174                           
 25175                           ; BSR set to: 0
 25176  00A508  0E03               	movlw	3
 25177  00A50A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25178  00A50C  D001               	goto	l1404
 25179  00A50E  D01E               	goto	l1406
 25180  00A510                     l1404:
 25181                           
 25182                           ; BSR set to: 0
 25183                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 25184                           
 25185                           ; BSR set to: 0
 25186  00A510  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25187  00A512  0D01               	mullw	1
 25188  00A514  0EBE               	movlw	low display_prepare@temp
 25189  00A516  24F3               	addwf	prodl,w,c
 25190  00A518  6ED9               	movwf	fsr2l,c
 25191  00A51A  0E00               	movlw	high display_prepare@temp
 25192  00A51C  20F4               	addwfc	prodh,w,c
 25193  00A51E  6EDA               	movwf	fsr2h,c
 25194  00A520  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25195  00A522  0D01               	mullw	1
 25196  00A524  0E70               	movlw	low (_display_content+60)
 25197  00A526  24F3               	addwf	prodl,w,c
 25198  00A528  6EE1               	movwf	fsr1l,c
 25199  00A52A  0E02               	movlw	high (_display_content+60)
 25200  00A52C  20F4               	addwfc	prodh,w,c
 25201  00A52E  6EE2               	movwf	fsr1h,c
 25202  00A530  CFDF FFE7          	movff	indf2,indf1
 25203                           
 25204                           ; BSR set to: 0
 25205  00A534  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25206  00A536  D7E8               	goto	l18236
 25207  00A538                     
 25208                           ;display.c: 361: display_content[2][12] = '>';
 25209                           
 25210                           ; BSR set to: 0
 25211  00A538  0E3E               	movlw	62
 25212  00A53A  0102               	movlb	2	; () banked
 25213  00A53C  6F68               	movwf	(_display_content+52)& (0+255),b
 25214                           
 25215                           ;display.c: 362: break;
 25216  00A53E  EFBC  F057         	goto	l1385
 25217  00A542                     
 25218                           ;display.c: 364: display_content[3][12] = '>';
 25219                           
 25220                           ; BSR set to: 2
 25221  00A542  0E3E               	movlw	62
 25222  00A544  0102               	movlb	2	; () banked
 25223  00A546  6F7C               	movwf	(_display_content+72)& (0+255),b
 25224                           
 25225                           ; BSR set to: 2
 25226                           ;display.c: 366: }
 25227                           
 25228                           ;display.c: 365: break;
 25229  00A548  EFBC  F057         	goto	l1385
 25230  00A54C                     l1406:
 25231                           
 25232                           ; BSR set to: 2
 25233  00A54C  0101               	movlb	1	; () banked
 25234  00A54E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25235                           
 25236                           ; Switch size 1, requested type "space"
 25237                           ; Number of cases is 2, Range of values is 49 to 50
 25238                           ; switch strategies available:
 25239                           ; Name         Instructions Cycles
 25240                           ; simple_byte            7     4 (average)
 25241                           ;	Chosen strategy is simple_byte
 25242  00A550  0A31               	xorlw	49	; case 49
 25243  00A552                     L29:
 25244  00A552  B4D8               	btfsc	status,2,c
 25245  00A554  D7F1               	goto	l1407
 25246  00A556  0A03               	xorlw	3	; case 50
 25247  00A558  B4D8               	btfsc	status,2,c
 25248  00A55A  D7F3               	goto	l1409
 25249                           
 25250                           ; BSR set to: 1
 25251                           ;display.c: 367: break;
 25252  00A55C  EFBC  F057         	goto	l1385
 25253  00A560                     
 25254                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 25255                           
 25256                           ; BSR set to: 1
 25257  00A560  0E34               	movlw	low _display_content
 25258  00A562  0100               	movlb	0	; () banked
 25259  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 25260  00A566  0E02               	movlw	high _display_content
 25261  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25262  00A56A  0E2E               	movlw	low _dc_divide2
 25263  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 25264  00A56E  0E9F               	movlw	high _dc_divide2
 25265  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25266  00A572  0E00               	movlw	0
 25267  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25268  00A576  0E50               	movlw	80
 25269  00A578  6F64               	movwf	memcpy@n& (0+255),b
 25270  00A57A  ECD9  F0A1         	call	_memcpy	;wreg free
 25271                           
 25272                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 25273  00A57E  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25274  00A582  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25275  00A586  0E00               	movlw	0
 25276  00A588  0100               	movlb	0	; () banked
 25277  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25278  00A58C  0EBE               	movlw	low display_prepare@temp
 25279  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25280  00A590  0E00               	movlw	high display_prepare@temp
 25281  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25282  00A594  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25283                           
 25284                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 25285  00A598  0E00               	movlw	0
 25286  00A59A  0100               	movlb	0	; () banked
 25287  00A59C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25288  00A59E  D018               	goto	l1411
 25289  00A5A0                     
 25290                           ; BSR set to: 0
 25291                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 25292                           
 25293                           ; BSR set to: 0
 25294  00A5A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25295  00A5A2  0D01               	mullw	1
 25296  00A5A4  0EBE               	movlw	low display_prepare@temp
 25297  00A5A6  24F3               	addwf	prodl,w,c
 25298  00A5A8  6ED9               	movwf	fsr2l,c
 25299  00A5AA  0E00               	movlw	high display_prepare@temp
 25300  00A5AC  20F4               	addwfc	prodh,w,c
 25301  00A5AE  6EDA               	movwf	fsr2h,c
 25302  00A5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25303  00A5B2  6FBC               	movwf	??_display_prepare& (0+255),b
 25304  00A5B4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25305  00A5B6  0E08               	movlw	8
 25306  00A5B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 25307  00A5BA  0E00               	movlw	0
 25308  00A5BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25309  00A5BE  0E34               	movlw	low _display_content
 25310  00A5C0  25BC               	addwf	??_display_prepare& (0+255),w,b
 25311  00A5C2  6EE1               	movwf	fsr1l,c
 25312  00A5C4  0E02               	movlw	high _display_content
 25313  00A5C6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25314  00A5C8  6EE2               	movwf	fsr1h,c
 25315  00A5CA  CFDF FFE7          	movff	indf2,indf1
 25316                           
 25317                           ; BSR set to: 0
 25318  00A5CE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25319  00A5D0                     l1411:
 25320                           
 25321                           ; BSR set to: 0
 25322                           
 25323                           ; BSR set to: 0
 25324  00A5D0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25325  00A5D2  0D01               	mullw	1
 25326  00A5D4  0EBE               	movlw	low display_prepare@temp
 25327  00A5D6  24F3               	addwf	prodl,w,c
 25328  00A5D8  6ED9               	movwf	fsr2l,c
 25329  00A5DA  0E00               	movlw	high display_prepare@temp
 25330  00A5DC  20F4               	addwfc	prodh,w,c
 25331  00A5DE  6EDA               	movwf	fsr2h,c
 25332  00A5E0  50DF               	movf	indf2,w,c
 25333  00A5E2  A4D8               	btfss	status,2,c
 25334  00A5E4  D7DD               	goto	l1412
 25335                           
 25336                           ; BSR set to: 0
 25337                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 25338                           
 25339                           ; BSR set to: 0
 25340  00A5E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25341  00A5E8  6FBC               	movwf	??_display_prepare& (0+255),b
 25342  00A5EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25343  00A5EC  0E08               	movlw	8
 25344  00A5EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25345  00A5F0  0E00               	movlw	0
 25346  00A5F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25347  00A5F4  0E34               	movlw	low _display_content
 25348  00A5F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25349  00A5F8  6ED9               	movwf	fsr2l,c
 25350  00A5FA  0E02               	movlw	high _display_content
 25351  00A5FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25352  00A5FE  6EDA               	movwf	fsr2h,c
 25353  00A600  0E2C               	movlw	44
 25354  00A602  6EDF               	movwf	indf2,c
 25355                           
 25356                           ; BSR set to: 0
 25357                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25358  00A604  0101               	movlb	1	; () banked
 25359  00A606  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 25360  00A608  A4D8               	btfss	status,2,c
 25361  00A60A  D024               	goto	l1414
 25362                           
 25363                           ; BSR set to: 1
 25364                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 25365  00A60C  0100               	movlb	0	; () banked
 25366  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25367  00A610  6FBC               	movwf	??_display_prepare& (0+255),b
 25368  00A612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25369  00A614  0E0A               	movlw	10
 25370  00A616  27BC               	addwf	??_display_prepare& (0+255),f,b
 25371  00A618  0E00               	movlw	0
 25372  00A61A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25373  00A61C  0E34               	movlw	low _display_content
 25374  00A61E  25BC               	addwf	??_display_prepare& (0+255),w,b
 25375  00A620  6ED9               	movwf	fsr2l,c
 25376  00A622  0E02               	movlw	high _display_content
 25377  00A624  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25378  00A626  6EDA               	movwf	fsr2h,c
 25379  00A628  0E43               	movlw	67
 25380  00A62A  6EDF               	movwf	indf2,c
 25381                           
 25382                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 25383  00A62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25384  00A62E  6FBC               	movwf	??_display_prepare& (0+255),b
 25385  00A630  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25386  00A632  0E0B               	movlw	11
 25387  00A634  27BC               	addwf	??_display_prepare& (0+255),f,b
 25388  00A636  0E00               	movlw	0
 25389  00A638  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25390  00A63A  0E34               	movlw	low _display_content
 25391  00A63C  25BC               	addwf	??_display_prepare& (0+255),w,b
 25392  00A63E  6ED9               	movwf	fsr2l,c
 25393  00A640  0E02               	movlw	high _display_content
 25394  00A642  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25395  00A644  6EDA               	movwf	fsr2h,c
 25396  00A646  0E43               	movlw	67
 25397  00A648  6EDF               	movwf	indf2,c
 25398                           
 25399                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 25400  00A64A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25401  00A64C  6FBC               	movwf	??_display_prepare& (0+255),b
 25402  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25403  00A650  0E0C               	movlw	12
 25404  00A652  D014               	goto	L30
 25405  00A654                     l1414:
 25406                           
 25407                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 25408                           
 25409                           ; BSR set to: 0
 25410  00A654  0100               	movlb	0	; () banked
 25411  00A656  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25412  00A658  6FBC               	movwf	??_display_prepare& (0+255),b
 25413  00A65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25414  00A65C  0E0A               	movlw	10
 25415  00A65E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25416  00A660  0E00               	movlw	0
 25417  00A662  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25418  00A664  0E34               	movlw	low _display_content
 25419  00A666  25BC               	addwf	??_display_prepare& (0+255),w,b
 25420  00A668  6ED9               	movwf	fsr2l,c
 25421  00A66A  0E02               	movlw	high _display_content
 25422  00A66C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25423  00A66E  6EDA               	movwf	fsr2h,c
 25424  00A670  0E43               	movlw	67
 25425  00A672  6EDF               	movwf	indf2,c
 25426                           
 25427                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 25428  00A674  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25429  00A676  6FBC               	movwf	??_display_prepare& (0+255),b
 25430  00A678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25431  00A67A  0E0B               	movlw	11
 25432  00A67C                     L30:
 25433  00A67C  27BC               	addwf	??_display_prepare& (0+255),f,b
 25434  00A67E  0E00               	movlw	0
 25435  00A680  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25436  00A682  0E34               	movlw	low _display_content
 25437  00A684  25BC               	addwf	??_display_prepare& (0+255),w,b
 25438  00A686  6ED9               	movwf	fsr2l,c
 25439  00A688  0E02               	movlw	high _display_content
 25440  00A68A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25441  00A68C  6EDA               	movwf	fsr2h,c
 25442  00A68E  0E57               	movlw	87
 25443  00A690  6EDF               	movwf	indf2,c
 25444                           
 25445                           ; BSR set to: 0
 25446                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 25447                           
 25448                           ; BSR set to: 0
 25449  00A692  C187  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25450  00A696  C188  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 25451  00A69A  0E00               	movlw	0
 25452  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25453  00A69E  0EBE               	movlw	low display_prepare@temp
 25454  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25455  00A6A2  0E00               	movlw	high display_prepare@temp
 25456  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25457  00A6A6  EC13  F08F         	call	__display_padded_itoa	;wreg free
 25458                           
 25459                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 25460  00A6AA  0E00               	movlw	0
 25461  00A6AC  0100               	movlb	0	; () banked
 25462  00A6AE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25463  00A6B0  D018               	goto	l1416
 25464  00A6B2                     
 25465                           ; BSR set to: 0
 25466                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 25467                           
 25468                           ; BSR set to: 0
 25469  00A6B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25470  00A6B4  0D01               	mullw	1
 25471  00A6B6  0EBE               	movlw	low display_prepare@temp
 25472  00A6B8  24F3               	addwf	prodl,w,c
 25473  00A6BA  6ED9               	movwf	fsr2l,c
 25474  00A6BC  0E00               	movlw	high display_prepare@temp
 25475  00A6BE  20F4               	addwfc	prodh,w,c
 25476  00A6C0  6EDA               	movwf	fsr2h,c
 25477  00A6C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25478  00A6C4  6FBC               	movwf	??_display_prepare& (0+255),b
 25479  00A6C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25480  00A6C8  0E05               	movlw	5
 25481  00A6CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 25482  00A6CC  0E00               	movlw	0
 25483  00A6CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25484  00A6D0  0E48               	movlw	low (_display_content+20)
 25485  00A6D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 25486  00A6D4  6EE1               	movwf	fsr1l,c
 25487  00A6D6  0E02               	movlw	high (_display_content+20)
 25488  00A6D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25489  00A6DA  6EE2               	movwf	fsr1h,c
 25490  00A6DC  CFDF FFE7          	movff	indf2,indf1
 25491                           
 25492                           ; BSR set to: 0
 25493  00A6E0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25494  00A6E2                     l1416:
 25495                           
 25496                           ; BSR set to: 0
 25497                           
 25498                           ; BSR set to: 0
 25499  00A6E2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25500  00A6E4  0D01               	mullw	1
 25501  00A6E6  0EBE               	movlw	low display_prepare@temp
 25502  00A6E8  24F3               	addwf	prodl,w,c
 25503  00A6EA  6ED9               	movwf	fsr2l,c
 25504  00A6EC  0E00               	movlw	high display_prepare@temp
 25505  00A6EE  20F4               	addwfc	prodh,w,c
 25506  00A6F0  6EDA               	movwf	fsr2h,c
 25507  00A6F2  50DF               	movf	indf2,w,c
 25508  00A6F4  A4D8               	btfss	status,2,c
 25509  00A6F6  D7DD               	goto	l1417
 25510                           
 25511                           ; BSR set to: 0
 25512                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 25513                           
 25514                           ; BSR set to: 0
 25515  00A6F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25516  00A6FA  6FBC               	movwf	??_display_prepare& (0+255),b
 25517  00A6FC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25518  00A6FE  0E06               	movlw	6
 25519  00A700  27BC               	addwf	??_display_prepare& (0+255),f,b
 25520  00A702  0E00               	movlw	0
 25521  00A704  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25522  00A706  0E48               	movlw	low (_display_content+20)
 25523  00A708  25BC               	addwf	??_display_prepare& (0+255),w,b
 25524  00A70A  6ED9               	movwf	fsr2l,c
 25525  00A70C  0E02               	movlw	high (_display_content+20)
 25526  00A70E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25527  00A710  6EDA               	movwf	fsr2h,c
 25528  00A712  0E28               	movlw	40
 25529  00A714  6EDF               	movwf	indf2,c
 25530                           
 25531                           ; BSR set to: 0
 25532                           ;display.c: 398: space = cntr + 7;
 25533  00A716  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25534  00A718  0F07               	addlw	7
 25535  00A71A  6FC8               	movwf	display_prepare@space& (0+255),b
 25536                           
 25537                           ; BSR set to: 0
 25538                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25539  00A71C  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25540  00A720  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25541  00A724  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25542  00A726  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25543  00A728  0E02               	movlw	2
 25544  00A72A  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25545  00A72C  0EBE               	movlw	low display_prepare@temp
 25546  00A72E  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25547  00A730  0E00               	movlw	high display_prepare@temp
 25548  00A732  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25549  00A734  ECD0  F085         	call	__display_itoa_long	;wreg free
 25550                           
 25551                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 25552  00A738  0E00               	movlw	0
 25553  00A73A  0100               	movlb	0	; () banked
 25554  00A73C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25555  00A73E  D018               	goto	l1419
 25556  00A740                     
 25557                           ; BSR set to: 0
 25558                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 25559                           
 25560                           ; BSR set to: 0
 25561  00A740  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25562  00A742  0D01               	mullw	1
 25563  00A744  0EBE               	movlw	low display_prepare@temp
 25564  00A746  24F3               	addwf	prodl,w,c
 25565  00A748  6ED9               	movwf	fsr2l,c
 25566  00A74A  0E00               	movlw	high display_prepare@temp
 25567  00A74C  20F4               	addwfc	prodh,w,c
 25568  00A74E  6EDA               	movwf	fsr2h,c
 25569  00A750  51C8               	movf	display_prepare@space& (0+255),w,b
 25570  00A752  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25571  00A756  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25572  00A758  27BC               	addwf	??_display_prepare& (0+255),f,b
 25573  00A75A  0E00               	movlw	0
 25574  00A75C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25575  00A75E  0E48               	movlw	low (_display_content+20)
 25576  00A760  25BC               	addwf	??_display_prepare& (0+255),w,b
 25577  00A762  6EE1               	movwf	fsr1l,c
 25578  00A764  0E02               	movlw	high (_display_content+20)
 25579  00A766  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25580  00A768  6EE2               	movwf	fsr1h,c
 25581  00A76A  CFDF FFE7          	movff	indf2,indf1
 25582                           
 25583                           ; BSR set to: 0
 25584  00A76E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25585  00A770                     l1419:
 25586                           
 25587                           ; BSR set to: 0
 25588                           
 25589                           ; BSR set to: 0
 25590  00A770  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25591  00A772  0D01               	mullw	1
 25592  00A774  0EBE               	movlw	low display_prepare@temp
 25593  00A776  24F3               	addwf	prodl,w,c
 25594  00A778  6ED9               	movwf	fsr2l,c
 25595  00A77A  0E00               	movlw	high display_prepare@temp
 25596  00A77C  20F4               	addwfc	prodh,w,c
 25597  00A77E  6EDA               	movwf	fsr2h,c
 25598  00A780  50DF               	movf	indf2,w,c
 25599  00A782  A4D8               	btfss	status,2,c
 25600  00A784  D7DD               	goto	l1420
 25601                           
 25602                           ; BSR set to: 0
 25603                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 25604                           
 25605                           ; BSR set to: 0
 25606  00A786  51C8               	movf	display_prepare@space& (0+255),w,b
 25607  00A788  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25608  00A78C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25609  00A78E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25610  00A790  0E00               	movlw	0
 25611  00A792  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25612  00A794  0E48               	movlw	low (_display_content+20)
 25613  00A796  25BC               	addwf	??_display_prepare& (0+255),w,b
 25614  00A798  6ED9               	movwf	fsr2l,c
 25615  00A79A  0E02               	movlw	high (_display_content+20)
 25616  00A79C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25617  00A79E  6EDA               	movwf	fsr2h,c
 25618  00A7A0  0E01               	movlw	1
 25619  00A7A2  6EDF               	movwf	indf2,c
 25620                           
 25621                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 25622  00A7A4  51C8               	movf	display_prepare@space& (0+255),w,b
 25623  00A7A6  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25624  00A7AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25625  00A7AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 25626  00A7AE  0E00               	movlw	0
 25627  00A7B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25628  00A7B2  0E01               	movlw	1
 25629  00A7B4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25630  00A7B6  0E00               	movlw	0
 25631  00A7B8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25632  00A7BA  0E48               	movlw	low (_display_content+20)
 25633  00A7BC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25634  00A7BE  6ED9               	movwf	fsr2l,c
 25635  00A7C0  0E02               	movlw	high (_display_content+20)
 25636  00A7C2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25637  00A7C4  6EDA               	movwf	fsr2h,c
 25638  00A7C6  0E29               	movlw	41
 25639  00A7C8  6EDF               	movwf	indf2,c
 25640                           
 25641                           ; BSR set to: 0
 25642                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 25643  00A7CA  C189  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 25644  00A7CE  C18A  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 25645  00A7D2  0EBE               	movlw	low display_prepare@temp
 25646  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 25647  00A7D6  0E00               	movlw	high display_prepare@temp
 25648  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 25649  00A7DA  EC71  F0A7         	call	__display_signed_itoa	;wreg free
 25650                           
 25651                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 25652  00A7DE  0E00               	movlw	0
 25653  00A7E0  0100               	movlb	0	; () banked
 25654  00A7E2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25655  00A7E4  D018               	goto	l1422
 25656  00A7E6                     
 25657                           ; BSR set to: 0
 25658                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 25659                           
 25660                           ; BSR set to: 0
 25661  00A7E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25662  00A7E8  0D01               	mullw	1
 25663  00A7EA  0EBE               	movlw	low display_prepare@temp
 25664  00A7EC  24F3               	addwf	prodl,w,c
 25665  00A7EE  6ED9               	movwf	fsr2l,c
 25666  00A7F0  0E00               	movlw	high display_prepare@temp
 25667  00A7F2  20F4               	addwfc	prodh,w,c
 25668  00A7F4  6EDA               	movwf	fsr2h,c
 25669  00A7F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25670  00A7F8  6FBC               	movwf	??_display_prepare& (0+255),b
 25671  00A7FA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25672  00A7FC  0E0B               	movlw	11
 25673  00A7FE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25674  00A800  0E00               	movlw	0
 25675  00A802  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25676  00A804  0E5C               	movlw	low (_display_content+40)
 25677  00A806  25BC               	addwf	??_display_prepare& (0+255),w,b
 25678  00A808  6EE1               	movwf	fsr1l,c
 25679  00A80A  0E02               	movlw	high (_display_content+40)
 25680  00A80C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25681  00A80E  6EE2               	movwf	fsr1h,c
 25682  00A810  CFDF FFE7          	movff	indf2,indf1
 25683                           
 25684                           ; BSR set to: 0
 25685  00A814  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25686  00A816                     l1422:
 25687                           
 25688                           ; BSR set to: 0
 25689                           
 25690                           ; BSR set to: 0
 25691  00A816  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25692  00A818  0D01               	mullw	1
 25693  00A81A  0EBE               	movlw	low display_prepare@temp
 25694  00A81C  24F3               	addwf	prodl,w,c
 25695  00A81E  6ED9               	movwf	fsr2l,c
 25696  00A820  0E00               	movlw	high display_prepare@temp
 25697  00A822  20F4               	addwfc	prodh,w,c
 25698  00A824  6EDA               	movwf	fsr2h,c
 25699  00A826  50DF               	movf	indf2,w,c
 25700  00A828  B4D8               	btfsc	status,2,c
 25701  00A82A  D3A6               	goto	l1385
 25702  00A82C  D7DC               	goto	l1423
 25703  00A82E                     
 25704                           ; BSR set to: 0
 25705                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 25706                           
 25707                           ; BSR set to: 0
 25708  00A82E  0E34               	movlw	low _display_content
 25709  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 25710  00A832  0E02               	movlw	high _display_content
 25711  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25712  00A836  0EDE               	movlw	low _dc_arc1
 25713  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 25714  00A83A  0E9E               	movlw	high _dc_arc1
 25715  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25716  00A83E  0E00               	movlw	0
 25717  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25718  00A842  0E50               	movlw	80
 25719  00A844  6F64               	movwf	memcpy@n& (0+255),b
 25720  00A846  ECD9  F0A1         	call	_memcpy	;wreg free
 25721                           
 25722                           ;display.c: 416: switch(os.displayState)
 25723  00A84A  D008               	goto	l1426
 25724  00A84C                     
 25725                           ;display.c: 419: display_content[2][12] = '>';
 25726  00A84C  0E3E               	movlw	62
 25727  00A84E  0102               	movlb	2	; () banked
 25728  00A850  6F68               	movwf	(_display_content+52)& (0+255),b
 25729                           
 25730                           ;display.c: 420: break;
 25731  00A852  D00C               	goto	l1428
 25732  00A854                     
 25733                           ;display.c: 422: display_content[3][12] = '>';
 25734                           
 25735                           ; BSR set to: 2
 25736  00A854  0E3E               	movlw	62
 25737  00A856  0102               	movlb	2	; () banked
 25738  00A858  6F7C               	movwf	(_display_content+72)& (0+255),b
 25739                           
 25740                           ; BSR set to: 2
 25741                           ;display.c: 424: }
 25742                           
 25743                           ;display.c: 423: break;
 25744  00A85A  D008               	goto	l1428
 25745  00A85C                     l1426:
 25746                           
 25747                           ; BSR set to: 2
 25748  00A85C  0101               	movlb	1	; () banked
 25749  00A85E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25750                           
 25751                           ; Switch size 1, requested type "space"
 25752                           ; Number of cases is 2, Range of values is 81 to 82
 25753                           ; switch strategies available:
 25754                           ; Name         Instructions Cycles
 25755                           ; simple_byte            7     4 (average)
 25756                           ;	Chosen strategy is simple_byte
 25757  00A860  0A51               	xorlw	81	; case 81
 25758  00A862  B4D8               	btfsc	status,2,c
 25759  00A864  D7F3               	goto	l1427
 25760  00A866  0A03               	xorlw	3	; case 82
 25761  00A868  B4D8               	btfsc	status,2,c
 25762  00A86A  D7F4               	goto	l1429
 25763  00A86C                     l1428:
 25764                           
 25765                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 25766                           
 25767                           ; BSR set to: 1
 25768  00A86C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 25769  00A870  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 25770  00A874  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 25771  00A878  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 25772  00A87C  0E02               	movlw	2
 25773  00A87E  0100               	movlb	0	; () banked
 25774  00A880  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25775  00A882  0EBE               	movlw	low display_prepare@temp
 25776  00A884  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25777  00A886  0E00               	movlw	high display_prepare@temp
 25778  00A888  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25779  00A88A  ECD0  F085         	call	__display_itoa_long	;wreg free
 25780                           
 25781                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 25782  00A88E  0E00               	movlw	0
 25783  00A890  0100               	movlb	0	; () banked
 25784  00A892  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25785  00A894  D018               	goto	l1430
 25786  00A896                     
 25787                           ; BSR set to: 0
 25788                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 25789                           
 25790                           ; BSR set to: 0
 25791  00A896  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25792  00A898  0D01               	mullw	1
 25793  00A89A  0EBE               	movlw	low display_prepare@temp
 25794  00A89C  24F3               	addwf	prodl,w,c
 25795  00A89E  6ED9               	movwf	fsr2l,c
 25796  00A8A0  0E00               	movlw	high display_prepare@temp
 25797  00A8A2  20F4               	addwfc	prodh,w,c
 25798  00A8A4  6EDA               	movwf	fsr2h,c
 25799  00A8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25800  00A8A8  6FBC               	movwf	??_display_prepare& (0+255),b
 25801  00A8AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25802  00A8AC  0E0A               	movlw	10
 25803  00A8AE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25804  00A8B0  0E00               	movlw	0
 25805  00A8B2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25806  00A8B4  0E48               	movlw	low (_display_content+20)
 25807  00A8B6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25808  00A8B8  6EE1               	movwf	fsr1l,c
 25809  00A8BA  0E02               	movlw	high (_display_content+20)
 25810  00A8BC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25811  00A8BE  6EE2               	movwf	fsr1h,c
 25812  00A8C0  CFDF FFE7          	movff	indf2,indf1
 25813                           
 25814                           ; BSR set to: 0
 25815  00A8C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25816  00A8C6                     l1430:
 25817                           
 25818                           ; BSR set to: 0
 25819                           
 25820                           ; BSR set to: 0
 25821  00A8C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25822  00A8C8  0D01               	mullw	1
 25823  00A8CA  0EBE               	movlw	low display_prepare@temp
 25824  00A8CC  24F3               	addwf	prodl,w,c
 25825  00A8CE  6ED9               	movwf	fsr2l,c
 25826  00A8D0  0E00               	movlw	high display_prepare@temp
 25827  00A8D2  20F4               	addwfc	prodh,w,c
 25828  00A8D4  6EDA               	movwf	fsr2h,c
 25829  00A8D6  50DF               	movf	indf2,w,c
 25830  00A8D8  A4D8               	btfss	status,2,c
 25831  00A8DA  D7DD               	goto	l1431
 25832                           
 25833                           ; BSR set to: 0
 25834                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 25835                           
 25836                           ; BSR set to: 0
 25837  00A8DC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25838  00A8DE  6FBC               	movwf	??_display_prepare& (0+255),b
 25839  00A8E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25840  00A8E2  0E0A               	movlw	10
 25841  00A8E4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25842  00A8E6  0E00               	movlw	0
 25843  00A8E8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25844  00A8EA  0E48               	movlw	low (_display_content+20)
 25845  00A8EC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25846  00A8EE  6ED9               	movwf	fsr2l,c
 25847  00A8F0  0E02               	movlw	high (_display_content+20)
 25848  00A8F2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25849  00A8F4  6EDA               	movwf	fsr2h,c
 25850  00A8F6  0E01               	movlw	1
 25851  00A8F8  6EDF               	movwf	indf2,c
 25852                           
 25853                           ; BSR set to: 0
 25854                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 25855  00A8FA  C18B  F095         	movff	_os+26,__display_itoa@value	;volatile
 25856  00A8FE  C18C  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 25857  00A902  0E02               	movlw	2
 25858  00A904  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25859  00A906  0EBE               	movlw	low display_prepare@temp
 25860  00A908  6F98               	movwf	__display_itoa@text& (0+255),b
 25861  00A90A  0E00               	movlw	high display_prepare@temp
 25862  00A90C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25863  00A90E  EC0D  F075         	call	__display_itoa	;wreg free
 25864                           
 25865                           ;display.c: 436: if(os.arc_step_size>999)
 25866  00A912  0EE8               	movlw	232
 25867  00A914  0101               	movlb	1	; () banked
 25868  00A916  5D8B               	subwf	(_os+26)& (0+255),w,b	;volatile
 25869  00A918  0E03               	movlw	3
 25870  00A91A  598C               	subwfb	(_os+27)& (0+255),w,b	;volatile
 25871  00A91C  A0D8               	btfss	status,0,c
 25872  00A91E  D002               	goto	l1433
 25873                           
 25874                           ; BSR set to: 1
 25875                           ;display.c: 437: space = 0;
 25876  00A920  0E00               	movlw	0
 25877  00A922  D001               	goto	L24
 25878  00A924                     l1433:
 25879                           
 25880                           ;display.c: 438: else;display.c: 439: space = 1;
 25881                           
 25882                           ; BSR set to: 0
 25883  00A924  0E01               	movlw	1
 25884  00A926                     L24:
 25885  00A926  0100               	movlb	0	; () banked
 25886  00A928  6FC8               	movwf	display_prepare@space& (0+255),b
 25887                           
 25888                           ; BSR set to: 0
 25889                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 25890  00A92A  0E00               	movlw	0
 25891  00A92C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25892  00A92E  D018               	goto	l1435
 25893  00A930                     
 25894                           ; BSR set to: 0
 25895                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 25896                           
 25897                           ; BSR set to: 0
 25898  00A930  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25899  00A932  0D01               	mullw	1
 25900  00A934  0EBE               	movlw	low display_prepare@temp
 25901  00A936  24F3               	addwf	prodl,w,c
 25902  00A938  6ED9               	movwf	fsr2l,c
 25903  00A93A  0E00               	movlw	high display_prepare@temp
 25904  00A93C  20F4               	addwfc	prodh,w,c
 25905  00A93E  6EDA               	movwf	fsr2h,c
 25906  00A940  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25907  00A942  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25908  00A946  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25909  00A948  27BC               	addwf	??_display_prepare& (0+255),f,b
 25910  00A94A  0E00               	movlw	0
 25911  00A94C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25912  00A94E  0E70               	movlw	low (_display_content+60)
 25913  00A950  25BC               	addwf	??_display_prepare& (0+255),w,b
 25914  00A952  6EE1               	movwf	fsr1l,c
 25915  00A954  0E02               	movlw	high (_display_content+60)
 25916  00A956  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25917  00A958  6EE2               	movwf	fsr1h,c
 25918  00A95A  CFDF FFE7          	movff	indf2,indf1
 25919                           
 25920                           ; BSR set to: 0
 25921  00A95E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25922  00A960                     l1435:
 25923                           
 25924                           ; BSR set to: 0
 25925                           
 25926                           ; BSR set to: 0
 25927  00A960  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25928  00A962  0D01               	mullw	1
 25929  00A964  0EBE               	movlw	low display_prepare@temp
 25930  00A966  24F3               	addwf	prodl,w,c
 25931  00A968  6ED9               	movwf	fsr2l,c
 25932  00A96A  0E00               	movlw	high display_prepare@temp
 25933  00A96C  20F4               	addwfc	prodh,w,c
 25934  00A96E  6EDA               	movwf	fsr2h,c
 25935  00A970  50DF               	movf	indf2,w,c
 25936  00A972  A4D8               	btfss	status,2,c
 25937  00A974  D7DD               	goto	l1436
 25938                           
 25939                           ; BSR set to: 0
 25940                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 25941                           
 25942                           ; BSR set to: 0
 25943  00A976  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25944  00A978  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25945  00A97C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25946  00A97E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25947  00A980  0E00               	movlw	0
 25948  00A982  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25949  00A984  0E70               	movlw	low (_display_content+60)
 25950  00A986  25BC               	addwf	??_display_prepare& (0+255),w,b
 25951  00A988  6ED9               	movwf	fsr2l,c
 25952  00A98A  0E02               	movlw	high (_display_content+60)
 25953  00A98C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25954  00A98E  6EDA               	movwf	fsr2h,c
 25955  00A990  0E01               	movlw	1
 25956  00A992  D25B               	goto	L27
 25957  00A994                     
 25958                           ; BSR set to: 0
 25959                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 25960                           
 25961                           ; BSR set to: 0
 25962  00A994  0E34               	movlw	low _display_content
 25963  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 25964  00A998  0E02               	movlw	high _display_content
 25965  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25966  00A99C  0E8E               	movlw	low _dc_arc2
 25967  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 25968  00A9A0  0E9E               	movlw	high _dc_arc2
 25969  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25970  00A9A4  0E00               	movlw	0
 25971  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25972  00A9A8  0E50               	movlw	80
 25973  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 25974  00A9AC  ECD9  F0A1         	call	_memcpy	;wreg free
 25975                           
 25976                           ;display.c: 450: switch(os.displayState)
 25977  00A9B0  D025               	goto	l1439
 25978  00A9B2                     
 25979                           ;display.c: 453: display_content[2][6] = 'W';
 25980  00A9B2  0E57               	movlw	87
 25981  00A9B4  0102               	movlb	2	; () banked
 25982  00A9B6  6F62               	movwf	(_display_content+46)& (0+255),b
 25983                           
 25984                           ;display.c: 454: display_content[2][7] = ' ';
 25985  00A9B8  0E20               	movlw	32
 25986  00A9BA  6F63               	movwf	(_display_content+47)& (0+255),b
 25987                           
 25988                           ;display.c: 455: break;
 25989  00A9BC  D027               	goto	l1441
 25990  00A9BE                     
 25991                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 25992                           
 25993                           ; BSR set to: 2
 25994  00A9BE  0E5C               	movlw	low (_display_content+40)
 25995  00A9C0  0100               	movlb	0	; () banked
 25996  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 25997  00A9C4  0E02               	movlw	high (_display_content+40)
 25998  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25999  00A9C8  0E14               	movlw	low STR_1
 26000  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 26001  00A9CC  0EA3               	movlw	high STR_1
 26002  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26003  00A9D0  0E00               	movlw	0
 26004  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26005  00A9D4  0E08               	movlw	8
 26006  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 26007  00A9D8  ECD9  F0A1         	call	_memcpy	;wreg free
 26008                           
 26009                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 26010  00A9DC  0E70               	movlw	low (_display_content+60)
 26011  00A9DE  0100               	movlb	0	; () banked
 26012  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26013  00A9E2  0E02               	movlw	high (_display_content+60)
 26014  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26015  00A9E6  0E1D               	movlw	low STR_2
 26016  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26017  00A9EA  0EA3               	movlw	high STR_2
 26018  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26019  00A9EE  0E00               	movlw	0
 26020  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26021  00A9F2  0E06               	movlw	6
 26022  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26023  00A9F6  ECD9  F0A1         	call	_memcpy	;wreg free
 26024                           
 26025                           ;display.c: 460: }
 26026                           
 26027                           ;display.c: 459: break;
 26028  00A9FA  D008               	goto	l1441
 26029  00A9FC                     l1439:
 26030  00A9FC  0101               	movlb	1	; () banked
 26031  00A9FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26032                           
 26033                           ; Switch size 1, requested type "space"
 26034                           ; Number of cases is 2, Range of values is 98 to 99
 26035                           ; switch strategies available:
 26036                           ; Name         Instructions Cycles
 26037                           ; simple_byte            7     4 (average)
 26038                           ;	Chosen strategy is simple_byte
 26039  00AA00  0A62               	xorlw	98	; case 98
 26040  00AA02  B4D8               	btfsc	status,2,c
 26041  00AA04  D7DC               	goto	l1442
 26042  00AA06  0A01               	xorlw	1	; case 99
 26043  00AA08  B4D8               	btfsc	status,2,c
 26044  00AA0A  D7D3               	goto	l1440
 26045  00AA0C                     l1441:
 26046                           
 26047                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 26048                           
 26049                           ; BSR set to: 1
 26050  00AA0C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 26051  00AA10  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 26052  00AA14  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 26053  00AA18  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 26054  00AA1C  0E02               	movlw	2
 26055  00AA1E  0100               	movlb	0	; () banked
 26056  00AA20  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26057  00AA22  0EBE               	movlw	low display_prepare@temp
 26058  00AA24  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26059  00AA26  0E00               	movlw	high display_prepare@temp
 26060  00AA28  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26061  00AA2A  ECD0  F085         	call	__display_itoa_long	;wreg free
 26062                           
 26063                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 26064  00AA2E  0E00               	movlw	0
 26065  00AA30  0100               	movlb	0	; () banked
 26066  00AA32  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26067  00AA34  D018               	goto	l1443
 26068  00AA36                     
 26069                           ; BSR set to: 0
 26070                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 26071                           
 26072                           ; BSR set to: 0
 26073  00AA36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26074  00AA38  0D01               	mullw	1
 26075  00AA3A  0EBE               	movlw	low display_prepare@temp
 26076  00AA3C  24F3               	addwf	prodl,w,c
 26077  00AA3E  6ED9               	movwf	fsr2l,c
 26078  00AA40  0E00               	movlw	high display_prepare@temp
 26079  00AA42  20F4               	addwfc	prodh,w,c
 26080  00AA44  6EDA               	movwf	fsr2h,c
 26081  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26082  00AA48  6FBC               	movwf	??_display_prepare& (0+255),b
 26083  00AA4A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26084  00AA4C  0E0A               	movlw	10
 26085  00AA4E  27BC               	addwf	??_display_prepare& (0+255),f,b
 26086  00AA50  0E00               	movlw	0
 26087  00AA52  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26088  00AA54  0E34               	movlw	low _display_content
 26089  00AA56  25BC               	addwf	??_display_prepare& (0+255),w,b
 26090  00AA58  6EE1               	movwf	fsr1l,c
 26091  00AA5A  0E02               	movlw	high _display_content
 26092  00AA5C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26093  00AA5E  6EE2               	movwf	fsr1h,c
 26094  00AA60  CFDF FFE7          	movff	indf2,indf1
 26095                           
 26096                           ; BSR set to: 0
 26097  00AA64  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26098  00AA66                     l1443:
 26099                           
 26100                           ; BSR set to: 0
 26101                           
 26102                           ; BSR set to: 0
 26103  00AA66  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26104  00AA68  0D01               	mullw	1
 26105  00AA6A  0EBE               	movlw	low display_prepare@temp
 26106  00AA6C  24F3               	addwf	prodl,w,c
 26107  00AA6E  6ED9               	movwf	fsr2l,c
 26108  00AA70  0E00               	movlw	high display_prepare@temp
 26109  00AA72  20F4               	addwfc	prodh,w,c
 26110  00AA74  6EDA               	movwf	fsr2h,c
 26111  00AA76  50DF               	movf	indf2,w,c
 26112  00AA78  A4D8               	btfss	status,2,c
 26113  00AA7A  D7DD               	goto	l1444
 26114                           
 26115                           ; BSR set to: 0
 26116                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 26117                           
 26118                           ; BSR set to: 0
 26119  00AA7C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26120  00AA7E  6FBC               	movwf	??_display_prepare& (0+255),b
 26121  00AA80  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26122  00AA82  0E0A               	movlw	10
 26123  00AA84  27BC               	addwf	??_display_prepare& (0+255),f,b
 26124  00AA86  0E00               	movlw	0
 26125  00AA88  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26126  00AA8A  0E34               	movlw	low _display_content
 26127  00AA8C  25BC               	addwf	??_display_prepare& (0+255),w,b
 26128  00AA8E  6ED9               	movwf	fsr2l,c
 26129  00AA90  0E02               	movlw	high _display_content
 26130  00AA92  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26131  00AA94  6EDA               	movwf	fsr2h,c
 26132  00AA96  0E01               	movlw	1
 26133  00AA98  6EDF               	movwf	indf2,c
 26134                           
 26135                           ; BSR set to: 0
 26136                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26137  00AA9A  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26138  00AA9E  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26139  00AAA2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26140  00AAA4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26141  00AAA6  0E02               	movlw	2
 26142  00AAA8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26143  00AAAA  0EBE               	movlw	low display_prepare@temp
 26144  00AAAC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26145  00AAAE  0E00               	movlw	high display_prepare@temp
 26146  00AAB0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26147  00AAB2  ECD0  F085         	call	__display_itoa_long	;wreg free
 26148                           
 26149                           ;display.c: 472: space = 6-strlen(temp);
 26150  00AAB6  0EBE               	movlw	low display_prepare@temp
 26151  00AAB8  0100               	movlb	0	; () banked
 26152  00AABA  6F60               	movwf	strlen@s& (0+255),b
 26153  00AABC  0E00               	movlw	high display_prepare@temp
 26154  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 26155  00AAC0  EC39  F0A8         	call	_strlen	;wreg free
 26156  00AAC4  0100               	movlb	0	; () banked
 26157  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 26158  00AAC8  0800               	sublw	0
 26159  00AACA  0F06               	addlw	6
 26160  00AACC  6FC8               	movwf	display_prepare@space& (0+255),b
 26161                           
 26162                           ; BSR set to: 0
 26163                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 26164  00AACE  0E00               	movlw	0
 26165  00AAD0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26166  00AAD2  D01C               	goto	l1446
 26167  00AAD4                     
 26168                           ; BSR set to: 0
 26169                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 26170                           
 26171                           ; BSR set to: 0
 26172  00AAD4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26173  00AAD6  0D01               	mullw	1
 26174  00AAD8  0EBE               	movlw	low display_prepare@temp
 26175  00AADA  24F3               	addwf	prodl,w,c
 26176  00AADC  6ED9               	movwf	fsr2l,c
 26177  00AADE  0E00               	movlw	high display_prepare@temp
 26178  00AAE0  20F4               	addwfc	prodh,w,c
 26179  00AAE2  6EDA               	movwf	fsr2h,c
 26180  00AAE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26181  00AAE6  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26182  00AAEA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26183  00AAEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 26184  00AAEE  0E00               	movlw	0
 26185  00AAF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26186  00AAF2  0E0D               	movlw	13
 26187  00AAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26188  00AAF6  0E00               	movlw	0
 26189  00AAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26190  00AAFA  0E48               	movlw	low (_display_content+20)
 26191  00AAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26192  00AAFE  6EE1               	movwf	fsr1l,c
 26193  00AB00  0E02               	movlw	high (_display_content+20)
 26194  00AB02  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26195  00AB04  6EE2               	movwf	fsr1h,c
 26196  00AB06  CFDF FFE7          	movff	indf2,indf1
 26197                           
 26198                           ; BSR set to: 0
 26199  00AB0A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26200  00AB0C                     l1446:
 26201                           
 26202                           ; BSR set to: 0
 26203                           
 26204                           ; BSR set to: 0
 26205  00AB0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26206  00AB0E  0D01               	mullw	1
 26207  00AB10  0EBE               	movlw	low display_prepare@temp
 26208  00AB12  24F3               	addwf	prodl,w,c
 26209  00AB14  6ED9               	movwf	fsr2l,c
 26210  00AB16  0E00               	movlw	high display_prepare@temp
 26211  00AB18  20F4               	addwfc	prodh,w,c
 26212  00AB1A  6EDA               	movwf	fsr2h,c
 26213  00AB1C  50DF               	movf	indf2,w,c
 26214  00AB1E  A4D8               	btfss	status,2,c
 26215  00AB20  D7D9               	goto	l1447
 26216                           
 26217                           ; BSR set to: 0
 26218                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26219                           
 26220                           ; BSR set to: 0
 26221  00AB22  C191  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 26222  00AB26  C192  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 26223  00AB2A  EC2E  F0AC         	call	_motor_speed_from_index	;wreg free
 26224  00AB2E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26225  00AB32  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26226  00AB36  0E02               	movlw	2
 26227  00AB38  0100               	movlb	0	; () banked
 26228  00AB3A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26229  00AB3C  0EBE               	movlw	low display_prepare@temp
 26230  00AB3E  6F98               	movwf	__display_itoa@text& (0+255),b
 26231  00AB40  0E00               	movlw	high display_prepare@temp
 26232  00AB42  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26233  00AB44  EC0D  F075         	call	__display_itoa	;wreg free
 26234                           
 26235                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 26236  00AB48  0E00               	movlw	0
 26237  00AB4A  0100               	movlb	0	; () banked
 26238  00AB4C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26239  00AB4E  D018               	goto	l1449
 26240  00AB50                     
 26241                           ; BSR set to: 0
 26242                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 26243                           
 26244                           ; BSR set to: 0
 26245  00AB50  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26246  00AB52  0D01               	mullw	1
 26247  00AB54  0EBE               	movlw	low display_prepare@temp
 26248  00AB56  24F3               	addwf	prodl,w,c
 26249  00AB58  6ED9               	movwf	fsr2l,c
 26250  00AB5A  0E00               	movlw	high display_prepare@temp
 26251  00AB5C  20F4               	addwfc	prodh,w,c
 26252  00AB5E  6EDA               	movwf	fsr2h,c
 26253  00AB60  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26254  00AB62  6FBC               	movwf	??_display_prepare& (0+255),b
 26255  00AB64  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26256  00AB66  0E0B               	movlw	11
 26257  00AB68  27BC               	addwf	??_display_prepare& (0+255),f,b
 26258  00AB6A  0E00               	movlw	0
 26259  00AB6C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26260  00AB6E  0E70               	movlw	low (_display_content+60)
 26261  00AB70  25BC               	addwf	??_display_prepare& (0+255),w,b
 26262  00AB72  6EE1               	movwf	fsr1l,c
 26263  00AB74  0E02               	movlw	high (_display_content+60)
 26264  00AB76  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26265  00AB78  6EE2               	movwf	fsr1h,c
 26266  00AB7A  CFDF FFE7          	movff	indf2,indf1
 26267                           
 26268                           ; BSR set to: 0
 26269  00AB7E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26270  00AB80                     l1449:
 26271                           
 26272                           ; BSR set to: 0
 26273                           
 26274                           ; BSR set to: 0
 26275  00AB80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26276  00AB82  0D01               	mullw	1
 26277  00AB84  0EBE               	movlw	low display_prepare@temp
 26278  00AB86  24F3               	addwf	prodl,w,c
 26279  00AB88  6ED9               	movwf	fsr2l,c
 26280  00AB8A  0E00               	movlw	high display_prepare@temp
 26281  00AB8C  20F4               	addwfc	prodh,w,c
 26282  00AB8E  6EDA               	movwf	fsr2h,c
 26283  00AB90  50DF               	movf	indf2,w,c
 26284  00AB92  A4D8               	btfss	status,2,c
 26285  00AB94  D7DD               	goto	l1450
 26286  00AB96  D12D               	goto	L93
 26287  00AB98                     
 26288                           ; BSR set to: 0
 26289                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 26290                           
 26291                           ; BSR set to: 0
 26292  00AB98  0E34               	movlw	low _display_content
 26293  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 26294  00AB9C  0E02               	movlw	high _display_content
 26295  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26296  00ABA0  0E3E               	movlw	low _dc_zero
 26297  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 26298  00ABA4  0E9E               	movlw	high _dc_zero
 26299  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26300  00ABA8  0E00               	movlw	0
 26301  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26302  00ABAC  0E50               	movlw	80
 26303  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 26304  00ABB0  ECD9  F0A1         	call	_memcpy	;wreg free
 26305                           
 26306                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26307  00ABB4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26308  00ABB8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26309  00ABBC  0100               	movlb	0	; () banked
 26310  00ABBE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26311  00ABC0  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26312  00ABC2  0E02               	movlw	2
 26313  00ABC4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26314  00ABC6  0EBE               	movlw	low display_prepare@temp
 26315  00ABC8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26316  00ABCA  0E00               	movlw	high display_prepare@temp
 26317  00ABCC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26318  00ABCE  ECD0  F085         	call	__display_itoa_long	;wreg free
 26319                           
 26320                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 26321  00ABD2  0E00               	movlw	0
 26322  00ABD4  0100               	movlb	0	; () banked
 26323  00ABD6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26324  00ABD8  D018               	goto	l1453
 26325  00ABDA                     
 26326                           ; BSR set to: 0
 26327                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 26328                           
 26329                           ; BSR set to: 0
 26330  00ABDA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26331  00ABDC  0D01               	mullw	1
 26332  00ABDE  0EBE               	movlw	low display_prepare@temp
 26333  00ABE0  24F3               	addwf	prodl,w,c
 26334  00ABE2  6ED9               	movwf	fsr2l,c
 26335  00ABE4  0E00               	movlw	high display_prepare@temp
 26336  00ABE6  20F4               	addwfc	prodh,w,c
 26337  00ABE8  6EDA               	movwf	fsr2h,c
 26338  00ABEA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26339  00ABEC  6FBC               	movwf	??_display_prepare& (0+255),b
 26340  00ABEE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26341  00ABF0  0E0D               	movlw	13
 26342  00ABF2  27BC               	addwf	??_display_prepare& (0+255),f,b
 26343  00ABF4  0E00               	movlw	0
 26344  00ABF6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26345  00ABF8  0E48               	movlw	low (_display_content+20)
 26346  00ABFA  25BC               	addwf	??_display_prepare& (0+255),w,b
 26347  00ABFC  6EE1               	movwf	fsr1l,c
 26348  00ABFE  0E02               	movlw	high (_display_content+20)
 26349  00AC00  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26350  00AC02  6EE2               	movwf	fsr1h,c
 26351  00AC04  CFDF FFE7          	movff	indf2,indf1
 26352                           
 26353                           ; BSR set to: 0
 26354  00AC08  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26355  00AC0A                     l1453:
 26356                           
 26357                           ; BSR set to: 0
 26358                           
 26359                           ; BSR set to: 0
 26360  00AC0A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26361  00AC0C  0D01               	mullw	1
 26362  00AC0E  0EBE               	movlw	low display_prepare@temp
 26363  00AC10  24F3               	addwf	prodl,w,c
 26364  00AC12  6ED9               	movwf	fsr2l,c
 26365  00AC14  0E00               	movlw	high display_prepare@temp
 26366  00AC16  20F4               	addwfc	prodh,w,c
 26367  00AC18  6EDA               	movwf	fsr2h,c
 26368  00AC1A  50DF               	movf	indf2,w,c
 26369  00AC1C  A4D8               	btfss	status,2,c
 26370  00AC1E  D7DD               	goto	l1454
 26371                           
 26372                           ; BSR set to: 0
 26373                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 26374                           
 26375                           ; BSR set to: 0
 26376  00AC20  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26377  00AC22  6FBC               	movwf	??_display_prepare& (0+255),b
 26378  00AC24  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26379  00AC26  0E0D               	movlw	13
 26380  00AC28  27BC               	addwf	??_display_prepare& (0+255),f,b
 26381  00AC2A  0E00               	movlw	0
 26382  00AC2C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26383  00AC2E  0E48               	movlw	low (_display_content+20)
 26384  00AC30  25BC               	addwf	??_display_prepare& (0+255),w,b
 26385  00AC32  6ED9               	movwf	fsr2l,c
 26386  00AC34  0E02               	movlw	high (_display_content+20)
 26387  00AC36  D6AA               	goto	L36
 26388  00AC38                     
 26389                           ; BSR set to: 0
 26390                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 26391                           
 26392                           ; BSR set to: 0
 26393  00AC38  0E34               	movlw	low _display_content
 26394  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 26395  00AC3C  0E02               	movlw	high _display_content
 26396  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26397  00AC40  0EEE               	movlw	low _dc_manual
 26398  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 26399  00AC44  0E9D               	movlw	high _dc_manual
 26400  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26401  00AC48  0E00               	movlw	0
 26402  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26403  00AC4C  0E50               	movlw	80
 26404  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 26405  00AC50  ECD9  F0A1         	call	_memcpy	;wreg free
 26406                           
 26407                           ;display.c: 509: switch(os.displayState)
 26408  00AC54  D044               	goto	l1457
 26409  00AC56                     
 26410                           ;display.c: 512: display_content[2][6] = 'W';
 26411  00AC56  0E57               	movlw	87
 26412  00AC58  0102               	movlb	2	; () banked
 26413  00AC5A  6F62               	movwf	(_display_content+46)& (0+255),b
 26414                           
 26415                           ;display.c: 513: display_content[2][7] = ' ';
 26416  00AC5C  0E20               	movlw	32
 26417  00AC5E  6F63               	movwf	(_display_content+47)& (0+255),b
 26418                           
 26419                           ;display.c: 514: break;
 26420  00AC60  D049               	goto	l1459
 26421  00AC62                     
 26422                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 26423                           
 26424                           ; BSR set to: 2
 26425  00AC62  0E5C               	movlw	low (_display_content+40)
 26426  00AC64  0100               	movlb	0	; () banked
 26427  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 26428  00AC68  0E02               	movlw	high (_display_content+40)
 26429  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26430  00AC6C  0E14               	movlw	low STR_1
 26431  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 26432  00AC70  0EA3               	movlw	high STR_1
 26433  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26434  00AC74  0E00               	movlw	0
 26435  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26436  00AC78  0E08               	movlw	8
 26437  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 26438  00AC7C  ECD9  F0A1         	call	_memcpy	;wreg free
 26439                           
 26440                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 26441  00AC80  0E70               	movlw	low (_display_content+60)
 26442  00AC82  0100               	movlb	0	; () banked
 26443  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 26444  00AC86  0E02               	movlw	high (_display_content+60)
 26445  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26446  00AC8A  0E1D               	movlw	low STR_2
 26447  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 26448  00AC8E  0EA3               	movlw	high STR_2
 26449  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26450  00AC92  0E00               	movlw	0
 26451  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26452  00AC96  0E06               	movlw	6
 26453  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 26454  00AC9A  ECD9  F0A1         	call	_memcpy	;wreg free
 26455                           
 26456                           ;display.c: 518: break;
 26457  00AC9E  D02A               	goto	l1459
 26458  00ACA0                     
 26459                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 26460  00ACA0  0E5C               	movlw	low (_display_content+40)
 26461  00ACA2  0100               	movlb	0	; () banked
 26462  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 26463  00ACA6  0E02               	movlw	high (_display_content+40)
 26464  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26465  00ACAA  0E14               	movlw	low STR_1
 26466  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 26467  00ACAE  0EA3               	movlw	high STR_1
 26468  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26469  00ACB2  0E00               	movlw	0
 26470  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26471  00ACB6  0E08               	movlw	8
 26472  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 26473  00ACBA  ECD9  F0A1         	call	_memcpy	;wreg free
 26474                           
 26475                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 26476  00ACBE  0E70               	movlw	low (_display_content+60)
 26477  00ACC0  0100               	movlb	0	; () banked
 26478  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 26479  00ACC4  0E02               	movlw	high (_display_content+60)
 26480  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26481  00ACC8  0E24               	movlw	low STR_6
 26482  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 26483  00ACCC  0EA3               	movlw	high STR_6
 26484  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26485  00ACD0  0E00               	movlw	0
 26486  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26487  00ACD4  0E05               	movlw	5
 26488  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 26489  00ACD8  ECD9  F0A1         	call	_memcpy	;wreg free
 26490                           
 26491                           ;display.c: 523: }
 26492                           
 26493                           ;display.c: 522: break;
 26494  00ACDC  D00B               	goto	l1459
 26495  00ACDE                     l1457:
 26496  00ACDE  0101               	movlb	1	; () banked
 26497  00ACE0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26498                           
 26499                           ; Switch size 1, requested type "space"
 26500                           ; Number of cases is 3, Range of values is 130 to 132
 26501                           ; switch strategies available:
 26502                           ; Name         Instructions Cycles
 26503                           ; simple_byte           10     6 (average)
 26504                           ;	Chosen strategy is simple_byte
 26505  00ACE2  0A82               	xorlw	130	; case 130
 26506  00ACE4  B4D8               	btfsc	status,2,c
 26507  00ACE6  D7BD               	goto	l1460
 26508  00ACE8  0A01               	xorlw	1	; case 131
 26509  00ACEA  B4D8               	btfsc	status,2,c
 26510  00ACEC  D7B4               	goto	l1458
 26511  00ACEE  0A07               	xorlw	7	; case 132
 26512  00ACF0  B4D8               	btfsc	status,2,c
 26513  00ACF2  D7D6               	goto	l1461
 26514  00ACF4                     l1459:
 26515                           
 26516                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26517                           
 26518                           ; BSR set to: 1
 26519  00ACF4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26520  00ACF8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26521  00ACFC  0100               	movlb	0	; () banked
 26522  00ACFE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26523  00AD00  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26524  00AD02  0E02               	movlw	2
 26525  00AD04  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26526  00AD06  0EBE               	movlw	low display_prepare@temp
 26527  00AD08  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26528  00AD0A  0E00               	movlw	high display_prepare@temp
 26529  00AD0C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26530  00AD0E  ECD0  F085         	call	__display_itoa_long	;wreg free
 26531                           
 26532                           ;display.c: 527: space = 7-strlen(temp);
 26533  00AD12  0EBE               	movlw	low display_prepare@temp
 26534  00AD14  0100               	movlb	0	; () banked
 26535  00AD16  6F60               	movwf	strlen@s& (0+255),b
 26536  00AD18  0E00               	movlw	high display_prepare@temp
 26537  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 26538  00AD1C  EC39  F0A8         	call	_strlen	;wreg free
 26539  00AD20  0100               	movlb	0	; () banked
 26540  00AD22  5160               	movf	?_strlen& (0+255),w,b
 26541  00AD24  0800               	sublw	0
 26542  00AD26  0F07               	addlw	7
 26543  00AD28  6FC8               	movwf	display_prepare@space& (0+255),b
 26544                           
 26545                           ; BSR set to: 0
 26546                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 26547  00AD2A  0E00               	movlw	0
 26548  00AD2C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26549  00AD2E  D01C               	goto	l1462
 26550  00AD30                     
 26551                           ; BSR set to: 0
 26552                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 26553                           
 26554                           ; BSR set to: 0
 26555  00AD30  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26556  00AD32  0D01               	mullw	1
 26557  00AD34  0EBE               	movlw	low display_prepare@temp
 26558  00AD36  24F3               	addwf	prodl,w,c
 26559  00AD38  6ED9               	movwf	fsr2l,c
 26560  00AD3A  0E00               	movlw	high display_prepare@temp
 26561  00AD3C  20F4               	addwfc	prodh,w,c
 26562  00AD3E  6EDA               	movwf	fsr2h,c
 26563  00AD40  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26564  00AD42  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26565  00AD46  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26566  00AD48  27BC               	addwf	??_display_prepare& (0+255),f,b
 26567  00AD4A  0E00               	movlw	0
 26568  00AD4C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26569  00AD4E  0E0C               	movlw	12
 26570  00AD50  27BC               	addwf	??_display_prepare& (0+255),f,b
 26571  00AD52  0E00               	movlw	0
 26572  00AD54  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26573  00AD56  0E48               	movlw	low (_display_content+20)
 26574  00AD58  25BC               	addwf	??_display_prepare& (0+255),w,b
 26575  00AD5A  6EE1               	movwf	fsr1l,c
 26576  00AD5C  0E02               	movlw	high (_display_content+20)
 26577  00AD5E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26578  00AD60  6EE2               	movwf	fsr1h,c
 26579  00AD62  CFDF FFE7          	movff	indf2,indf1
 26580                           
 26581                           ; BSR set to: 0
 26582  00AD66  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26583  00AD68                     l1462:
 26584                           
 26585                           ; BSR set to: 0
 26586                           
 26587                           ; BSR set to: 0
 26588  00AD68  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26589  00AD6A  0D01               	mullw	1
 26590  00AD6C  0EBE               	movlw	low display_prepare@temp
 26591  00AD6E  24F3               	addwf	prodl,w,c
 26592  00AD70  6ED9               	movwf	fsr2l,c
 26593  00AD72  0E00               	movlw	high display_prepare@temp
 26594  00AD74  20F4               	addwfc	prodh,w,c
 26595  00AD76  6EDA               	movwf	fsr2h,c
 26596  00AD78  50DF               	movf	indf2,w,c
 26597  00AD7A  A4D8               	btfss	status,2,c
 26598  00AD7C  D7D9               	goto	l1463
 26599                           
 26600                           ; BSR set to: 0
 26601                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 26602                           
 26603                           ; BSR set to: 0
 26604  00AD7E  C194  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 26605  00AD82  C195  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 26606  00AD86  EC2E  F0AC         	call	_motor_speed_from_index	;wreg free
 26607  00AD8A  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26608  00AD8E  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26609  00AD92  0E02               	movlw	2
 26610  00AD94  0100               	movlb	0	; () banked
 26611  00AD96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26612  00AD98  0EBE               	movlw	low display_prepare@temp
 26613  00AD9A  6F98               	movwf	__display_itoa@text& (0+255),b
 26614  00AD9C  0E00               	movlw	high display_prepare@temp
 26615  00AD9E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26616  00ADA0  EC0D  F075         	call	__display_itoa	;wreg free
 26617                           
 26618                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 26619  00ADA4  0E00               	movlw	0
 26620  00ADA6  0100               	movlb	0	; () banked
 26621  00ADA8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26622  00ADAA  D018               	goto	l1465
 26623  00ADAC                     
 26624                           ; BSR set to: 0
 26625                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 26626                           
 26627                           ; BSR set to: 0
 26628  00ADAC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26629  00ADAE  0D01               	mullw	1
 26630  00ADB0  0EBE               	movlw	low display_prepare@temp
 26631  00ADB2  24F3               	addwf	prodl,w,c
 26632  00ADB4  6ED9               	movwf	fsr2l,c
 26633  00ADB6  0E00               	movlw	high display_prepare@temp
 26634  00ADB8  20F4               	addwfc	prodh,w,c
 26635  00ADBA  6EDA               	movwf	fsr2h,c
 26636  00ADBC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26637  00ADBE  6FBC               	movwf	??_display_prepare& (0+255),b
 26638  00ADC0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26639  00ADC2  0E0B               	movlw	11
 26640  00ADC4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26641  00ADC6  0E00               	movlw	0
 26642  00ADC8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26643  00ADCA  0E70               	movlw	low (_display_content+60)
 26644  00ADCC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26645  00ADCE  6EE1               	movwf	fsr1l,c
 26646  00ADD0  0E02               	movlw	high (_display_content+60)
 26647  00ADD2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26648  00ADD4  6EE2               	movwf	fsr1h,c
 26649  00ADD6  CFDF FFE7          	movff	indf2,indf1
 26650                           
 26651                           ; BSR set to: 0
 26652  00ADDA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26653  00ADDC                     l1465:
 26654                           
 26655                           ; BSR set to: 0
 26656                           
 26657                           ; BSR set to: 0
 26658  00ADDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26659  00ADDE  0D01               	mullw	1
 26660  00ADE0  0EBE               	movlw	low display_prepare@temp
 26661  00ADE2  24F3               	addwf	prodl,w,c
 26662  00ADE4  6ED9               	movwf	fsr2l,c
 26663  00ADE6  0E00               	movlw	high display_prepare@temp
 26664  00ADE8  20F4               	addwfc	prodh,w,c
 26665  00ADEA  6EDA               	movwf	fsr2h,c
 26666  00ADEC  50DF               	movf	indf2,w,c
 26667  00ADEE  A4D8               	btfss	status,2,c
 26668  00ADF0  D7DD               	goto	l1466
 26669  00ADF2                     L93:
 26670                           
 26671                           ; BSR set to: 0
 26672                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 26673                           
 26674                           ; BSR set to: 0
 26675  00ADF2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26676  00ADF4  6FBC               	movwf	??_display_prepare& (0+255),b
 26677  00ADF6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26678  00ADF8  0E0B               	movlw	11
 26679  00ADFA  27BC               	addwf	??_display_prepare& (0+255),f,b
 26680  00ADFC  0E00               	movlw	0
 26681  00ADFE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26682  00AE00  0E70               	movlw	low (_display_content+60)
 26683  00AE02  25BC               	addwf	??_display_prepare& (0+255),w,b
 26684  00AE04  6ED9               	movwf	fsr2l,c
 26685  00AE06  0E02               	movlw	high (_display_content+60)
 26686  00AE08  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26687  00AE0A  6EDA               	movwf	fsr2h,c
 26688  00AE0C  0E01               	movlw	1
 26689  00AE0E  6EDF               	movwf	indf2,c
 26690                           
 26691                           ;display.c: 540: display_content[3][12+cntr] = '/';
 26692  00AE10  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26693  00AE12  6FBC               	movwf	??_display_prepare& (0+255),b
 26694  00AE14  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26695  00AE16  0E0C               	movlw	12
 26696  00AE18  27BC               	addwf	??_display_prepare& (0+255),f,b
 26697  00AE1A  0E00               	movlw	0
 26698  00AE1C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26699  00AE1E  0E70               	movlw	low (_display_content+60)
 26700  00AE20  25BC               	addwf	??_display_prepare& (0+255),w,b
 26701  00AE22  6ED9               	movwf	fsr2l,c
 26702  00AE24  0E02               	movlw	high (_display_content+60)
 26703  00AE26  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26704  00AE28  6EDA               	movwf	fsr2h,c
 26705  00AE2A  0E2F               	movlw	47
 26706  00AE2C  6EDF               	movwf	indf2,c
 26707                           
 26708                           ;display.c: 541: display_content[3][13+cntr] = 's';
 26709  00AE2E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26710  00AE30  6FBC               	movwf	??_display_prepare& (0+255),b
 26711  00AE32  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26712  00AE34  0E0D               	movlw	13
 26713  00AE36  27BC               	addwf	??_display_prepare& (0+255),f,b
 26714  00AE38  0E00               	movlw	0
 26715  00AE3A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26716  00AE3C  0E70               	movlw	low (_display_content+60)
 26717  00AE3E  25BC               	addwf	??_display_prepare& (0+255),w,b
 26718  00AE40  6ED9               	movwf	fsr2l,c
 26719  00AE42  0E02               	movlw	high (_display_content+60)
 26720  00AE44  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26721  00AE46  6EDA               	movwf	fsr2h,c
 26722  00AE48  0E73               	movlw	115
 26723  00AE4A                     L27:
 26724  00AE4A  6EDF               	movwf	indf2,c
 26725                           
 26726                           ;display.c: 542: break;
 26727  00AE4C  D095               	goto	l1385
 26728  00AE4E                     
 26729                           ; BSR set to: 0
 26730                           ;display.c: 545: _display_clear();
 26731                           
 26732                           ; BSR set to: 0
 26733  00AE4E  ECE1  F0A6         	call	__display_clear	;wreg free
 26734                           
 26735                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 26736  00AE52  0101               	movlb	1	; () banked
 26737  00AE54  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 26738  00AE56  0100               	movlb	0	; () banked
 26739  00AE58  6F95               	movwf	__display_itoa@value& (0+255),b
 26740  00AE5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26741  00AE5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26742  00AE5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26743  00AE60  0E00               	movlw	0
 26744  00AE62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26745  00AE64  0E34               	movlw	low _display_content
 26746  00AE66  6F98               	movwf	__display_itoa@text& (0+255),b
 26747  00AE68  0E02               	movlw	high _display_content
 26748  00AE6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26749  00AE6C  EC0D  F075         	call	__display_itoa	;wreg free
 26750                           
 26751                           ;display.c: 547: if(PORTEbits.RE2)
 26752  00AE70  A484               	btfss	3972,2,c	;volatile
 26753  00AE72  D002               	goto	l1469
 26754                           
 26755                           ;display.c: 548: display_content[0][8] = 'H';
 26756  00AE74  0E48               	movlw	72
 26757  00AE76  D001               	goto	L31
 26758  00AE78                     l1469:
 26759                           
 26760                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 26761                           
 26762                           ; BSR set to: 2
 26763  00AE78  0E4C               	movlw	76
 26764  00AE7A                     L31:
 26765  00AE7A  0102               	movlb	2	; () banked
 26766  00AE7C  6F3C               	movwf	(_display_content+8)& (0+255),b
 26767                           
 26768                           ; BSR set to: 2
 26769                           ;display.c: 551: if(PORTEbits.RE0)
 26770                           
 26771                           ; BSR set to: 2
 26772  00AE7E  A084               	btfss	3972,0,c	;volatile
 26773  00AE80  D002               	goto	l1471
 26774                           
 26775                           ; BSR set to: 2
 26776                           ;display.c: 552: display_content[0][9] = 'H';
 26777  00AE82  0E48               	movlw	72
 26778  00AE84  D001               	goto	L32
 26779  00AE86                     l1471:
 26780                           
 26781                           ; BSR set to: 2
 26782                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 26783                           
 26784                           ; BSR set to: 2
 26785  00AE86  0E4C               	movlw	76
 26786  00AE88                     L32:
 26787  00AE88  6F3D               	movwf	(_display_content+9)& (0+255),b
 26788                           
 26789                           ; BSR set to: 2
 26790                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 26791                           
 26792                           ; BSR set to: 2
 26793  00AE8A  0101               	movlb	1	; () banked
 26794  00AE8C  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 26795  00AE8E  0100               	movlb	0	; () banked
 26796  00AE90  6F95               	movwf	__display_itoa@value& (0+255),b
 26797  00AE92  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26798  00AE94  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26799  00AE96  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26800  00AE98  0E00               	movlw	0
 26801  00AE9A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26802  00AE9C  0E48               	movlw	low (_display_content+20)
 26803  00AE9E  6F98               	movwf	__display_itoa@text& (0+255),b
 26804  00AEA0  0E02               	movlw	high (_display_content+20)
 26805  00AEA2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26806  00AEA4  EC0D  F075         	call	__display_itoa	;wreg free
 26807                           
 26808                           ;display.c: 556: if(PORTEbits.RE1)
 26809  00AEA8  A284               	btfss	3972,1,c	;volatile
 26810  00AEAA  D002               	goto	l1473
 26811                           
 26812                           ;display.c: 557: display_content[1][8] = 'H';
 26813  00AEAC  0E48               	movlw	72
 26814  00AEAE  D001               	goto	L33
 26815  00AEB0                     l1473:
 26816                           
 26817                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 26818                           
 26819                           ; BSR set to: 2
 26820  00AEB0  0E4C               	movlw	76
 26821  00AEB2                     L33:
 26822  00AEB2  0102               	movlb	2	; () banked
 26823  00AEB4  6F50               	movwf	(_display_content+28)& (0+255),b
 26824                           
 26825                           ; BSR set to: 2
 26826                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 26827                           
 26828                           ; BSR set to: 2
 26829  00AEB6  0101               	movlb	1	; () banked
 26830  00AEB8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 26831  00AEBA  0100               	movlb	0	; () banked
 26832  00AEBC  6F95               	movwf	__display_itoa@value& (0+255),b
 26833  00AEBE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26834  00AEC0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26835  00AEC2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26836  00AEC4  0E00               	movlw	0
 26837  00AEC6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26838  00AEC8  0E5C               	movlw	low (_display_content+40)
 26839  00AECA  6F98               	movwf	__display_itoa@text& (0+255),b
 26840  00AECC  0E02               	movlw	high (_display_content+40)
 26841  00AECE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26842  00AED0  EC0D  F075         	call	__display_itoa	;wreg free
 26843                           
 26844                           ;display.c: 561: if(PORTAbits.RA0)
 26845  00AED4  A080               	btfss	3968,0,c	;volatile
 26846  00AED6  D002               	goto	l1475
 26847                           
 26848                           ;display.c: 562: display_content[2][8] = 'H';
 26849  00AED8  0E48               	movlw	72
 26850  00AEDA  D001               	goto	L34
 26851  00AEDC                     l1475:
 26852                           
 26853                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 26854                           
 26855                           ; BSR set to: 2
 26856  00AEDC  0E4C               	movlw	76
 26857  00AEDE                     L34:
 26858  00AEDE  0102               	movlb	2	; () banked
 26859  00AEE0  6F64               	movwf	(_display_content+48)& (0+255),b
 26860                           
 26861                           ; BSR set to: 2
 26862                           ;display.c: 565: if(PORTAbits.RA2)
 26863                           
 26864                           ; BSR set to: 2
 26865  00AEE2  A480               	btfss	3968,2,c	;volatile
 26866  00AEE4  D002               	goto	l1477
 26867                           
 26868                           ; BSR set to: 2
 26869                           ;display.c: 566: display_content[2][9] = 'H';
 26870  00AEE6  0E48               	movlw	72
 26871  00AEE8  D001               	goto	L35
 26872  00AEEA                     l1477:
 26873                           
 26874                           ; BSR set to: 2
 26875                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 26876                           
 26877                           ; BSR set to: 2
 26878  00AEEA  0E4C               	movlw	76
 26879  00AEEC                     L35:
 26880  00AEEC  6F65               	movwf	(_display_content+49)& (0+255),b
 26881                           
 26882                           ; BSR set to: 2
 26883                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 26884                           
 26885                           ; BSR set to: 2
 26886  00AEEE  0101               	movlb	1	; () banked
 26887  00AEF0  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 26888  00AEF2  0100               	movlb	0	; () banked
 26889  00AEF4  6F95               	movwf	__display_itoa@value& (0+255),b
 26890  00AEF6  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26891  00AEF8  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26892  00AEFA  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26893  00AEFC  0E00               	movlw	0
 26894  00AEFE  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26895  00AF00  0E70               	movlw	low (_display_content+60)
 26896  00AF02  6F98               	movwf	__display_itoa@text& (0+255),b
 26897  00AF04  0E02               	movlw	high (_display_content+60)
 26898  00AF06  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26899  00AF08  EC0D  F075         	call	__display_itoa	;wreg free
 26900                           
 26901                           ;display.c: 570: if(PORTAbits.RA1)
 26902  00AF0C  A280               	btfss	3968,1,c	;volatile
 26903  00AF0E  D002               	goto	l1479
 26904                           
 26905                           ;display.c: 571: display_content[3][8] = 'H';
 26906  00AF10  0E48               	movlw	72
 26907  00AF12  D001               	goto	L28
 26908  00AF14                     l1479:
 26909                           
 26910                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 26911                           
 26912                           ; BSR set to: 2
 26913  00AF14  0E4C               	movlw	76
 26914  00AF16                     L28:
 26915  00AF16  0102               	movlb	2	; () banked
 26916  00AF18  6F78               	movwf	(_display_content+68)& (0+255),b
 26917                           
 26918                           ; BSR set to: 2
 26919                           ;display.c: 575: }
 26920                           
 26921                           ; BSR set to: 2
 26922                           ;display.c: 574: break;
 26923  00AF1A  D02E               	goto	l1385
 26924  00AF1C                     l1376:
 26925                           
 26926                           ; BSR set to: 2
 26927  00AF1C  0101               	movlb	1	; () banked
 26928  00AF1E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26929  00AF20  0BF0               	andlw	240
 26930  00AF22  0100               	movlb	0	; () banked
 26931  00AF24  6FBC               	movwf	??_display_prepare& (0+255),b
 26932  00AF26  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26933                           
 26934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26935                           ; Switch size 1, requested type "space"
 26936                           ; Number of cases is 1, Range of values is 0 to 0
 26937                           ; switch strategies available:
 26938                           ; Name         Instructions Cycles
 26939                           ; simple_byte            4     3 (average)
 26940                           ;	Chosen strategy is simple_byte
 26941  00AF28  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 26942  00AF2A  0A00               	xorlw	0	; case 0
 26943  00AF2C  A4D8               	btfss	status,2,c
 26944  00AF2E  D024               	goto	l1385
 26945                           
 26946                           ; BSR set to: 0
 26947                           ; Switch size 1, requested type "space"
 26948                           ; Number of cases is 10, Range of values is 0 to 240
 26949                           ; switch strategies available:
 26950                           ; Name         Instructions Cycles
 26951                           ; simple_byte           31    16 (average)
 26952                           ;	Chosen strategy is simple_byte
 26953  00AF30  51BC               	movf	??_display_prepare& (0+255),w,b
 26954  00AF32  0A00               	xorlw	0	; case 0
 26955  00AF34  B4D8               	btfsc	status,2,c
 26956  00AF36  EF9A  F051         	goto	l1377
 26957  00AF3A  0A10               	xorlw	16	; case 16
 26958  00AF3C  B4D8               	btfsc	status,2,c
 26959  00AF3E  EFC9  F051         	goto	l1386
 26960  00AF42  0A30               	xorlw	48	; case 32
 26961  00AF44  B4D8               	btfsc	status,2,c
 26962  00AF46  EF1B  F052         	goto	l1396
 26963  00AF4A  0A10               	xorlw	16	; case 48
 26964  00AF4C  B4D8               	btfsc	status,2,c
 26965  00AF4E  EF3F  F052         	goto	l1401
 26966  00AF52  0A70               	xorlw	112	; case 64
 26967  00AF54  B4D8               	btfsc	status,2,c
 26968  00AF56  EFB0  F052         	goto	l1410
 26969  00AF5A  0A10               	xorlw	16	; case 80
 26970  00AF5C  B4D8               	btfsc	status,2,c
 26971  00AF5E  D467               	goto	l1425
 26972  00AF60  0A30               	xorlw	48	; case 96
 26973  00AF62  B4D8               	btfsc	status,2,c
 26974  00AF64  D517               	goto	l1438
 26975  00AF66  0A10               	xorlw	16	; case 112
 26976  00AF68  B4D8               	btfsc	status,2,c
 26977  00AF6A  D616               	goto	l1452
 26978  00AF6C  0AF0               	xorlw	240	; case 128
 26979  00AF6E  B4D8               	btfsc	status,2,c
 26980  00AF70  D663               	goto	l1456
 26981  00AF72  0A70               	xorlw	112	; case 240
 26982  00AF74  B4D8               	btfsc	status,2,c
 26983  00AF76  D76B               	goto	l1468
 26984  00AF78                     l1385:
 26985                           
 26986                           ;display.c: 577: if(!PORTDbits.RD2)
 26987  00AF78  B483               	btfsc	3971,2,c	;volatile
 26988  00AF7A  0012               	return	
 26989                           
 26990                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 26991  00AF7C  0E45               	movlw	69
 26992  00AF7E  0102               	movlb	2	; () banked
 26993  00AF80  6F34               	movwf	_display_content& (0+255),b
 26994                           
 26995                           ;display.c: 580: display_content[0][1] = 'R';
 26996  00AF82  0E52               	movlw	82
 26997  00AF84  6F35               	movwf	(_display_content+1)& (0+255),b
 26998                           
 26999                           ;display.c: 581: display_content[0][2] = 'R';
 27000  00AF86  0E52               	movlw	82
 27001  00AF88  6F36               	movwf	(_display_content+2)& (0+255),b
 27002                           
 27003                           ;display.c: 582: display_content[0][3] = 'O';
 27004  00AF8A  0E4F               	movlw	79
 27005  00AF8C  6F37               	movwf	(_display_content+3)& (0+255),b
 27006                           
 27007                           ;display.c: 583: display_content[0][4] = 'R';
 27008  00AF8E  0E52               	movlw	82
 27009  00AF90  6F38               	movwf	(_display_content+4)& (0+255),b
 27010  00AF92  0012               	return	
 27011  00AF94                     __end_of_display_prepare:
 27012                           	opt stack 0
 27013                           tblptru	equ	0xFF8
 27014                           tblptrh	equ	0xFF7
 27015                           tblptrl	equ	0xFF6
 27016                           tablat	equ	0xFF5
 27017                           prodh	equ	0xFF4
 27018                           prodl	equ	0xFF3
 27019                           intcon	equ	0xFF2
 27020                           postinc0	equ	0xFEE
 27021                           wreg	equ	0xFE8
 27022                           indf1	equ	0xFE7
 27023                           postinc1	equ	0xFE6
 27024                           postdec1	equ	0xFE5
 27025                           plusw1	equ	0xFE3
 27026                           fsr1h	equ	0xFE2
 27027                           fsr1l	equ	0xFE1
 27028                           indf2	equ	0xFDF
 27029                           postinc2	equ	0xFDE
 27030                           postdec2	equ	0xFDD
 27031                           plusw2	equ	0xFDB
 27032                           fsr2h	equ	0xFDA
 27033                           fsr2l	equ	0xFD9
 27034                           status	equ	0xFD8
 27035                           
 27036 ;; *************** function _motor_speed_from_index *****************
 27037 ;; Defined at:
 27038 ;;		line 114 in file "motor.c"
 27039 ;; Parameters:    Size  Location     Type
 27040 ;;  speed_index     2   51[BANK0 ] unsigned int 
 27041 ;; Auto vars:     Size  Location     Type
 27042 ;;		None
 27043 ;; Return value:  Size  Location     Type
 27044 ;;                  2   51[BANK0 ] unsigned int 
 27045 ;; Registers used:
 27046 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27047 ;; Tracked objects:
 27048 ;;		On entry : 0/0
 27049 ;;		On exit  : 0/0
 27050 ;;		Unchanged: 0/0
 27051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27052 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27055 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27056 ;;Total ram usage:        2 bytes
 27057 ;; Hardware stack levels used:    1
 27058 ;; Hardware stack levels required when called:   12
 27059 ;; This function calls:
 27060 ;;		__motor_get_speed_in_degrees
 27061 ;; This function is called by:
 27062 ;;		_display_prepare
 27063 ;; This function uses a non-reentrant model
 27064 ;;
 27065                           
 27066                           	psect	text104
 27067  01585C                     __ptext104:
 27068                           	opt stack 0
 27069  01585C                     _motor_speed_from_index:
 27070                           	opt stack 17
 27071                           
 27072                           ;motor.c: 116: return _motor_get_speed_in_degrees(speed_index);
 27073                           
 27074                           ;incstack = 0
 27075  01585C  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27076  015860  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27077  015864  EC57  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27078  015868  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27079  01586C  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27080  015870  0012               	return	
 27081  015872                     __end_of_motor_speed_from_index:
 27082                           	opt stack 0
 27083                           tblptru	equ	0xFF8
 27084                           tblptrh	equ	0xFF7
 27085                           tblptrl	equ	0xFF6
 27086                           tablat	equ	0xFF5
 27087                           prodh	equ	0xFF4
 27088                           prodl	equ	0xFF3
 27089                           intcon	equ	0xFF2
 27090                           postinc0	equ	0xFEE
 27091                           wreg	equ	0xFE8
 27092                           indf1	equ	0xFE7
 27093                           postinc1	equ	0xFE6
 27094                           postdec1	equ	0xFE5
 27095                           plusw1	equ	0xFE3
 27096                           fsr1h	equ	0xFE2
 27097                           fsr1l	equ	0xFE1
 27098                           indf2	equ	0xFDF
 27099                           postinc2	equ	0xFDE
 27100                           postdec2	equ	0xFDD
 27101                           plusw2	equ	0xFDB
 27102                           fsr2h	equ	0xFDA
 27103                           fsr2l	equ	0xFD9
 27104                           status	equ	0xFD8
 27105                           
 27106 ;; *************** function __motor_get_speed_in_degrees *****************
 27107 ;; Defined at:
 27108 ;;		line 75 in file "motor.c"
 27109 ;; Parameters:    Size  Location     Type
 27110 ;;  speed_index     2   39[BANK0 ] unsigned int 
 27111 ;; Auto vars:     Size  Location     Type
 27112 ;;  lookup          4   47[BANK0 ] unsigned long 
 27113 ;;  speed           4   43[BANK0 ] float 
 27114 ;; Return value:  Size  Location     Type
 27115 ;;                  2   39[BANK0 ] unsigned int 
 27116 ;; Registers used:
 27117 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27118 ;; Tracked objects:
 27119 ;;		On entry : 0/0
 27120 ;;		On exit  : 0/0
 27121 ;;		Unchanged: 0/0
 27122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27123 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27124 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27126 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27127 ;;Total ram usage:       12 bytes
 27128 ;; Hardware stack levels used:    1
 27129 ;; Hardware stack levels required when called:   11
 27130 ;; This function calls:
 27131 ;;		___fldiv
 27132 ;;		___fltol
 27133 ;;		___lmul
 27134 ;;		___xxtofl
 27135 ;; This function is called by:
 27136 ;;		_motor_speed_from_index
 27137 ;;		_motor_get_maximum_speed
 27138 ;;		_motor_get_current_speed
 27139 ;; This function uses a non-reentrant model
 27140 ;;
 27141                           
 27142                           	psect	text105
 27143  0104AE                     __ptext105:
 27144                           	opt stack 0
 27145  0104AE                     __motor_get_speed_in_degrees:
 27146                           	opt stack 17
 27147                           
 27148                           ;motor.c: 77: uint32_t lookup;;motor.c: 78: float speed;;motor.c: 80: lookup = motor_spe
      +                          ed_lookup[speed_index];
 27149                           
 27150                           ;incstack = 0
 27151  0104AE  90D8               	bcf	status,0,c
 27152  0104B0  0100               	movlb	0	; () banked
 27153  0104B2  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27154  0104B4  6EF6               	movwf	tblptrl,c
 27155  0104B6  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27156  0104B8  6EF7               	movwf	tblptrh,c
 27157  0104BA  0E93               	movlw	low _motor_speed_lookup
 27158  0104BC  26F6               	addwf	tblptrl,f,c
 27159  0104BE  0E90               	movlw	high _motor_speed_lookup
 27160  0104C0  22F7               	addwfc	tblptrh,f,c
 27161  0104C2                     	if	1	;There are 3 active tblptr bytes
 27162  0104C2  6AF8               	clrf	tblptru,c
 27163  0104C4  0E00               	movlw	low (__mediumconst shr (0+16))
 27164  0104C6  22F8               	addwfc	tblptru,f,c
 27165  0104C8                     	endif
 27166  0104C8  0009               	tblrd		*+
 27167  0104CA  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 27168  0104CE  0009               	tblrd		*+
 27169  0104D0  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 27170  0104D4  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27171  0104D8  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27172  0104DC  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27173  0104DE  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27174                           
 27175                           ; BSR set to: 0
 27176                           ;motor.c: 81: lookup *= 16;
 27177  0104E0  0E04               	movlw	4
 27178  0104E2                     u14875:
 27179  0104E2  90D8               	bcf	status,0,c
 27180  0104E4  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27181  0104E6  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27182  0104E8  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27183  0104EA  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27184  0104EC  2EE8               	decfsz	wreg,f,c
 27185  0104EE  D7F9               	goto	u14875
 27186                           
 27187                           ; BSR set to: 0
 27188                           ;motor.c: 82: lookup *= 360;
 27189  0104F0  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27190  0104F4  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27191  0104F8  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27192  0104FC  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27193  010500  0E68               	movlw	104
 27194  010502  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27195  010504  0E01               	movlw	1
 27196  010506  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27197  010508  0E00               	movlw	0
 27198  01050A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27199  01050C  0E00               	movlw	0
 27200  01050E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27201  010510  ECFB  F0A3         	call	___lmul	;wreg free
 27202  010514  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27203  010518  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27204  01051C  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27205  010520  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27206                           
 27207                           ;motor.c: 83: lookup *= 100;
 27208  010524  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27209  010528  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27210  01052C  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27211  010530  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27212  010534  0E64               	movlw	100
 27213  010536  0100               	movlb	0	; () banked
 27214  010538  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27215  01053A  0E00               	movlw	0
 27216  01053C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27217  01053E  0E00               	movlw	0
 27218  010540  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27219  010542  0E00               	movlw	0
 27220  010544  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27221  010546  ECFB  F0A3         	call	___lmul	;wreg free
 27222  01054A  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27223  01054E  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27224  010552  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27225  010556  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27226                           
 27227                           ;motor.c: 85: speed = (float) lookup;
 27228  01055A  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27229  01055E  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27230  010562  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27231  010566  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27232  01056A  0E00               	movlw	0
 27233  01056C  EC17  F081         	call	___xxtofl
 27234  010570  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27235  010574  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27236  010578  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27237  01057C  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27238                           
 27239                           ;motor.c: 86: speed /= config.full_circle_in_steps;
 27240  010580  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27241  010584  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27242  010588  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27243  01058C  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27244  010590  C1A1  F060         	movff	_config,___xxtofl@val
 27245  010594  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 27246  010598  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 27247  01059C  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 27248  0105A0  0E00               	movlw	0
 27249  0105A2  EC17  F081         	call	___xxtofl
 27250  0105A6  C060  F072         	movff	?___xxtofl,___fldiv@a
 27251  0105AA  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 27252  0105AE  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 27253  0105B2  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 27254  0105B6  ECD6  F06D         	call	___fldiv	;wreg free
 27255  0105BA  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27256  0105BE  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27257  0105C2  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27258  0105C6  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27259                           
 27260                           ;motor.c: 89: return (uint16_t) speed;
 27261  0105CA  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27262  0105CE  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27263  0105D2  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27264  0105D6  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27265  0105DA  EC62  F090         	call	___fltol	;wreg free
 27266  0105DE  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 27267  0105E2  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27268  0105E6  0012               	return	
 27269  0105E8                     __end_of__motor_get_speed_in_degrees:
 27270                           	opt stack 0
 27271                           tblptru	equ	0xFF8
 27272                           tblptrh	equ	0xFF7
 27273                           tblptrl	equ	0xFF6
 27274                           tablat	equ	0xFF5
 27275                           prodh	equ	0xFF4
 27276                           prodl	equ	0xFF3
 27277                           intcon	equ	0xFF2
 27278                           postinc0	equ	0xFEE
 27279                           wreg	equ	0xFE8
 27280                           indf1	equ	0xFE7
 27281                           postinc1	equ	0xFE6
 27282                           postdec1	equ	0xFE5
 27283                           plusw1	equ	0xFE3
 27284                           fsr1h	equ	0xFE2
 27285                           fsr1l	equ	0xFE1
 27286                           indf2	equ	0xFDF
 27287                           postinc2	equ	0xFDE
 27288                           postdec2	equ	0xFDD
 27289                           plusw2	equ	0xFDB
 27290                           fsr2h	equ	0xFDA
 27291                           fsr2l	equ	0xFD9
 27292                           status	equ	0xFD8
 27293                           
 27294 ;; *************** function ___lmul *****************
 27295 ;; Defined at:
 27296 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 27297 ;; Parameters:    Size  Location     Type
 27298 ;;  multiplier      4    0[BANK0 ] unsigned long 
 27299 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 27300 ;; Auto vars:     Size  Location     Type
 27301 ;;  product         4    8[BANK0 ] unsigned long 
 27302 ;; Return value:  Size  Location     Type
 27303 ;;                  4    0[BANK0 ] unsigned long 
 27304 ;; Registers used:
 27305 ;;		wreg, status,2, status,0
 27306 ;; Tracked objects:
 27307 ;;		On entry : 0/0
 27308 ;;		On exit  : 0/0
 27309 ;;		Unchanged: 0/0
 27310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27311 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27314 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27315 ;;Total ram usage:       12 bytes
 27316 ;; Hardware stack levels used:    1
 27317 ;; Hardware stack levels required when called:   10
 27318 ;; This function calls:
 27319 ;;		Nothing
 27320 ;; This function is called by:
 27321 ;;		__motor_get_speed_in_degrees
 27322 ;;		_atol
 27323 ;; This function uses a non-reentrant model
 27324 ;;
 27325                           
 27326                           	psect	text106
 27327  0147F6                     __ptext106:
 27328                           	opt stack 0
 27329  0147F6                     ___lmul:
 27330                           	opt stack 16
 27331                           
 27332                           ;incstack = 0
 27333  0147F6  0E00               	movlw	0
 27334  0147F8  0100               	movlb	0	; () banked
 27335  0147FA  6F68               	movwf	___lmul@product& (0+255),b
 27336  0147FC  0E00               	movlw	0
 27337  0147FE  6F69               	movwf	(___lmul@product+1)& (0+255),b
 27338  014800  0E00               	movlw	0
 27339  014802  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 27340  014804  0E00               	movlw	0
 27341  014806  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 27342  014808                     
 27343                           ; BSR set to: 0
 27344                           
 27345                           ; BSR set to: 0
 27346  014808  A160               	btfss	___lmul@multiplier& (0+255),0,b
 27347  01480A  D008               	goto	l2982
 27348                           
 27349                           ; BSR set to: 0
 27350  01480C  5164               	movf	___lmul@multiplicand& (0+255),w,b
 27351  01480E  2768               	addwf	___lmul@product& (0+255),f,b
 27352  014810  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27353  014812  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 27354  014814  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27355  014816  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 27356  014818  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27357  01481A  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 27358  01481C                     l2982:
 27359                           
 27360                           ; BSR set to: 0
 27361                           
 27362                           ; BSR set to: 0
 27363  01481C  90D8               	bcf	status,0,c
 27364  01481E  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 27365  014820  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 27366  014822  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 27367  014824  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 27368                           
 27369                           ; BSR set to: 0
 27370  014826  90D8               	bcf	status,0,c
 27371  014828  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 27372  01482A  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 27373  01482C  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 27374  01482E  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 27375  014830  5160               	movf	___lmul@multiplier& (0+255),w,b
 27376  014832  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 27377  014834  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 27378  014836  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 27379  014838  A4D8               	btfss	status,2,c
 27380  01483A  D7E6               	goto	l2981
 27381                           
 27382                           ; BSR set to: 0
 27383  01483C  C068  F060         	movff	___lmul@product,?___lmul
 27384  014840  C069  F061         	movff	___lmul@product+1,?___lmul+1
 27385  014844  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 27386  014848  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 27387                           
 27388                           ; BSR set to: 0
 27389  01484C  0012               	return		;funcret
 27390  01484E                     __end_of___lmul:
 27391                           	opt stack 0
 27392                           tblptru	equ	0xFF8
 27393                           tblptrh	equ	0xFF7
 27394                           tblptrl	equ	0xFF6
 27395                           tablat	equ	0xFF5
 27396                           prodh	equ	0xFF4
 27397                           prodl	equ	0xFF3
 27398                           intcon	equ	0xFF2
 27399                           postinc0	equ	0xFEE
 27400                           wreg	equ	0xFE8
 27401                           indf1	equ	0xFE7
 27402                           postinc1	equ	0xFE6
 27403                           postdec1	equ	0xFE5
 27404                           plusw1	equ	0xFE3
 27405                           fsr1h	equ	0xFE2
 27406                           fsr1l	equ	0xFE1
 27407                           indf2	equ	0xFDF
 27408                           postinc2	equ	0xFDE
 27409                           postdec2	equ	0xFDD
 27410                           plusw2	equ	0xFDB
 27411                           fsr2h	equ	0xFDA
 27412                           fsr2l	equ	0xFD9
 27413                           status	equ	0xFD8
 27414                           
 27415 ;; *************** function __display_signed_itoa *****************
 27416 ;; Defined at:
 27417 ;;		line 120 in file "display.c"
 27418 ;; Parameters:    Size  Location     Type
 27419 ;;  value           2   47[BANK0 ] int 
 27420 ;;  text            2   49[BANK0 ] PTR unsigned char 
 27421 ;;		 -> display_prepare@temp(10), 
 27422 ;; Auto vars:     Size  Location     Type
 27423 ;;		None
 27424 ;; Return value:  Size  Location     Type
 27425 ;;                  1    wreg      void 
 27426 ;; Registers used:
 27427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27428 ;; Tracked objects:
 27429 ;;		On entry : 0/0
 27430 ;;		On exit  : 0/0
 27431 ;;		Unchanged: 0/0
 27432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27436 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27437 ;;Total ram usage:        4 bytes
 27438 ;; Hardware stack levels used:    1
 27439 ;; Hardware stack levels required when called:   14
 27440 ;; This function calls:
 27441 ;;		__display_padded_itoa
 27442 ;; This function is called by:
 27443 ;;		_display_prepare
 27444 ;; This function uses a non-reentrant model
 27445 ;;
 27446                           
 27447                           	psect	text107
 27448  014EE2                     __ptext107:
 27449                           	opt stack 0
 27450  014EE2                     __display_signed_itoa:
 27451                           	opt stack 15
 27452                           
 27453                           ;display.c: 122: if(value<0)
 27454                           
 27455                           ; BSR set to: 0
 27456                           ;incstack = 0
 27457  014EE2  0100               	movlb	0	; () banked
 27458  014EE4  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 27459  014EE6  D00A               	goto	l1326
 27460                           
 27461                           ; BSR set to: 0
 27462                           ;display.c: 123: {;display.c: 124: value = -value;
 27463  014EE8  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 27464  014EEA  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 27465  014EEC  B0D8               	btfsc	status,0,c
 27466  014EEE  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 27467                           
 27468                           ; BSR set to: 0
 27469                           ;display.c: 125: text[0] = '-';
 27470  014EF0  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27471  014EF4  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27472  014EF8  0E2D               	movlw	45
 27473  014EFA  D005               	goto	L37
 27474  014EFC                     l1326:
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 27478                           
 27479                           ; BSR set to: 0
 27480  014EFC  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27481  014F00  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27482  014F04  0E2B               	movlw	43
 27483  014F06                     L37:
 27484  014F06  6EDF               	movwf	indf2,c
 27485                           
 27486                           ; BSR set to: 0
 27487                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 27488                           
 27489                           ; BSR set to: 0
 27490  014F08  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 27491  014F0C  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 27492  014F10  0E00               	movlw	0
 27493  014F12  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 27494  014F14  0E01               	movlw	1
 27495  014F16  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 27496  014F18  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 27497  014F1A  0E00               	movlw	0
 27498  014F1C  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 27499  014F1E  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 27500  014F20  EC13  F08F         	call	__display_padded_itoa	;wreg free
 27501  014F24  0012               	return		;funcret
 27502  014F26                     __end_of__display_signed_itoa:
 27503                           	opt stack 0
 27504                           tblptru	equ	0xFF8
 27505                           tblptrh	equ	0xFF7
 27506                           tblptrl	equ	0xFF6
 27507                           tablat	equ	0xFF5
 27508                           prodh	equ	0xFF4
 27509                           prodl	equ	0xFF3
 27510                           intcon	equ	0xFF2
 27511                           postinc0	equ	0xFEE
 27512                           wreg	equ	0xFE8
 27513                           indf1	equ	0xFE7
 27514                           postinc1	equ	0xFE6
 27515                           postdec1	equ	0xFE5
 27516                           plusw1	equ	0xFE3
 27517                           fsr1h	equ	0xFE2
 27518                           fsr1l	equ	0xFE1
 27519                           indf2	equ	0xFDF
 27520                           postinc2	equ	0xFDE
 27521                           postdec2	equ	0xFDD
 27522                           plusw2	equ	0xFDB
 27523                           fsr2h	equ	0xFDA
 27524                           fsr2l	equ	0xFD9
 27525                           status	equ	0xFD8
 27526                           
 27527 ;; *************** function __display_padded_itoa *****************
 27528 ;; Defined at:
 27529 ;;		line 98 in file "display.c"
 27530 ;; Parameters:    Size  Location     Type
 27531 ;;  value           2   24[BANK0 ] int 
 27532 ;;  length          1   26[BANK0 ] unsigned char 
 27533 ;;  text            2   27[BANK0 ] PTR unsigned char 
 27534 ;;		 -> display_prepare@temp(10), 
 27535 ;; Auto vars:     Size  Location     Type
 27536 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 27537 ;;  padding         1   46[BANK0 ] unsigned char 
 27538 ;;  pos             1   45[BANK0 ] unsigned char 
 27539 ;;  len             1   44[BANK0 ] unsigned char 
 27540 ;; Return value:  Size  Location     Type
 27541 ;;                  1    wreg      void 
 27542 ;; Registers used:
 27543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27544 ;; Tracked objects:
 27545 ;;		On entry : 0/0
 27546 ;;		On exit  : 0/0
 27547 ;;		Unchanged: 0/0
 27548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27549 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27550 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27551 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27552 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27553 ;;Total ram usage:       23 bytes
 27554 ;; Hardware stack levels used:    1
 27555 ;; Hardware stack levels required when called:   13
 27556 ;; This function calls:
 27557 ;;		_itoa
 27558 ;;		_strlen
 27559 ;; This function is called by:
 27560 ;;		__display_signed_itoa
 27561 ;;		_display_prepare
 27562 ;; This function uses a non-reentrant model
 27563 ;;
 27564                           
 27565                           	psect	text108
 27566  011E26                     __ptext108:
 27567                           	opt stack 0
 27568  011E26                     __display_padded_itoa:
 27569                           	opt stack 15
 27570                           
 27571                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 27572                           
 27573                           ;incstack = 0
 27574  011E26  0E82               	movlw	low __display_padded_itoa@tmp
 27575  011E28  0100               	movlb	0	; () banked
 27576  011E2A  6F70               	movwf	itoa@buf& (0+255),b
 27577  011E2C  0E00               	movlw	high __display_padded_itoa@tmp
 27578  011E2E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 27579  011E30  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 27580  011E34  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 27581  011E38  0E00               	movlw	0
 27582  011E3A  6F75               	movwf	(itoa@base+1)& (0+255),b
 27583  011E3C  0E0A               	movlw	10
 27584  011E3E  6F74               	movwf	itoa@base& (0+255),b
 27585  011E40  EC93  F0A7         	call	_itoa	;wreg free
 27586                           
 27587                           ;display.c: 106: len = strlen(tmp);
 27588  011E44  0E82               	movlw	low __display_padded_itoa@tmp
 27589  011E46  0100               	movlb	0	; () banked
 27590  011E48  6F60               	movwf	strlen@s& (0+255),b
 27591  011E4A  0E00               	movlw	high __display_padded_itoa@tmp
 27592  011E4C  6F61               	movwf	(strlen@s+1)& (0+255),b
 27593  011E4E  EC39  F0A8         	call	_strlen	;wreg free
 27594  011E52  0100               	movlb	0	; () banked
 27595  011E54  5160               	movf	?_strlen& (0+255),w,b
 27596  011E56  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 27597                           
 27598                           ; BSR set to: 0
 27599                           ;display.c: 107: padding = 0;
 27600  011E58  0E00               	movlw	0
 27601  011E5A  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 27602                           
 27603                           ;display.c: 108: while((padding+len)<length)
 27604  011E5C  D00B               	goto	l1317
 27605  011E5E                     
 27606                           ; BSR set to: 0
 27607                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 27608                           
 27609                           ; BSR set to: 0
 27610  011E5E  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27611  011E60  0D01               	mullw	1
 27612  011E62  50F3               	movf	prodl,w,c
 27613  011E64  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27614  011E66  6ED9               	movwf	fsr2l,c
 27615  011E68  50F4               	movf	prodh,w,c
 27616  011E6A  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27617  011E6C  6EDA               	movwf	fsr2h,c
 27618  011E6E  0E20               	movlw	32
 27619  011E70  6EDF               	movwf	indf2,c
 27620                           
 27621                           ; BSR set to: 0
 27622                           ;display.c: 111: ++padding;
 27623  011E72  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 27624  011E74                     l1317:
 27625                           
 27626                           ; BSR set to: 0
 27627                           
 27628                           ; BSR set to: 0
 27629  011E74  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 27630  011E76  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 27631  011E78  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27632  011E7A  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 27633  011E7C  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 27634  011E80  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 27635  011E82  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 27636  011E84  0E00               	movlw	0
 27637  011E86  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 27638  011E88  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27639  011E8A  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 27640  011E8C  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 27641  011E8E  0A80               	xorlw	128
 27642  011E90  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 27643  011E92  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27644  011E94  0A80               	xorlw	128
 27645  011E96  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 27646  011E98  A0D8               	btfss	status,0,c
 27647  011E9A  D7E1               	goto	l1318
 27648                           
 27649                           ; BSR set to: 0
 27650                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 27651                           
 27652                           ; BSR set to: 0
 27653  011E9C  0E00               	movlw	0
 27654  011E9E  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 27655  011EA0  D018               	goto	l1320
 27656  011EA2                     
 27657                           ; BSR set to: 0
 27658                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 27659                           
 27660                           ; BSR set to: 0
 27661  011EA2  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27662  011EA4  0D01               	mullw	1
 27663  011EA6  0E82               	movlw	low __display_padded_itoa@tmp
 27664  011EA8  24F3               	addwf	prodl,w,c
 27665  011EAA  6ED9               	movwf	fsr2l,c
 27666  011EAC  0E00               	movlw	high __display_padded_itoa@tmp
 27667  011EAE  20F4               	addwfc	prodh,w,c
 27668  011EB0  6EDA               	movwf	fsr2h,c
 27669  011EB2  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27670  011EB4  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27671  011EB8  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27672  011EBA  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27673  011EBC  0E00               	movlw	0
 27674  011EBE  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27675  011EC0  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27676  011EC2  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27677  011EC4  6EE1               	movwf	fsr1l,c
 27678  011EC6  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27679  011EC8  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27680  011ECA  6EE2               	movwf	fsr1h,c
 27681  011ECC  CFDF FFE7          	movff	indf2,indf1
 27682                           
 27683                           ; BSR set to: 0
 27684  011ED0  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 27685  011ED2                     l1320:
 27686                           
 27687                           ; BSR set to: 0
 27688                           
 27689                           ; BSR set to: 0
 27690  011ED2  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27691  011ED4  0D01               	mullw	1
 27692  011ED6  0E82               	movlw	low __display_padded_itoa@tmp
 27693  011ED8  24F3               	addwf	prodl,w,c
 27694  011EDA  6ED9               	movwf	fsr2l,c
 27695  011EDC  0E00               	movlw	high __display_padded_itoa@tmp
 27696  011EDE  20F4               	addwfc	prodh,w,c
 27697  011EE0  6EDA               	movwf	fsr2h,c
 27698  011EE2  50DF               	movf	indf2,w,c
 27699  011EE4  A4D8               	btfss	status,2,c
 27700  011EE6  D7DD               	goto	l1321
 27701                           
 27702                           ; BSR set to: 0
 27703                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 27704                           
 27705                           ; BSR set to: 0
 27706  011EE8  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27707  011EEA  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27708  011EEE  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27709  011EF0  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27710  011EF2  0E00               	movlw	0
 27711  011EF4  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27712  011EF6  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27713  011EF8  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27714  011EFA  6ED9               	movwf	fsr2l,c
 27715  011EFC  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27716  011EFE  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27717  011F00  6EDA               	movwf	fsr2h,c
 27718  011F02  0E00               	movlw	0
 27719  011F04  6EDF               	movwf	indf2,c
 27720                           
 27721                           ; BSR set to: 0
 27722  011F06  0012               	return		;funcret
 27723  011F08                     __end_of__display_padded_itoa:
 27724                           	opt stack 0
 27725                           tblptru	equ	0xFF8
 27726                           tblptrh	equ	0xFF7
 27727                           tblptrl	equ	0xFF6
 27728                           tablat	equ	0xFF5
 27729                           prodh	equ	0xFF4
 27730                           prodl	equ	0xFF3
 27731                           intcon	equ	0xFF2
 27732                           postinc0	equ	0xFEE
 27733                           wreg	equ	0xFE8
 27734                           indf1	equ	0xFE7
 27735                           postinc1	equ	0xFE6
 27736                           postdec1	equ	0xFE5
 27737                           plusw1	equ	0xFE3
 27738                           fsr1h	equ	0xFE2
 27739                           fsr1l	equ	0xFE1
 27740                           indf2	equ	0xFDF
 27741                           postinc2	equ	0xFDE
 27742                           postdec2	equ	0xFDD
 27743                           plusw2	equ	0xFDB
 27744                           fsr2h	equ	0xFDA
 27745                           fsr2l	equ	0xFD9
 27746                           status	equ	0xFD8
 27747                           
 27748 ;; *************** function __display_itoa_long *****************
 27749 ;; Defined at:
 27750 ;;		line 202 in file "display.c"
 27751 ;; Parameters:    Size  Location     Type
 27752 ;;  value           4   77[BANK0 ] long 
 27753 ;;  decimals        1   81[BANK0 ] unsigned char 
 27754 ;;  text            2   82[BANK0 ] PTR unsigned char 
 27755 ;;		 -> display_prepare@temp(10), 
 27756 ;; Auto vars:     Size  Location     Type
 27757 ;;  short_value     2   89[BANK0 ] int 
 27758 ;;  last_digit      1   91[BANK0 ] char 
 27759 ;;  length          1   88[BANK0 ] unsigned char 
 27760 ;; Return value:  Size  Location     Type
 27761 ;;                  1    wreg      void 
 27762 ;; Registers used:
 27763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27764 ;; Tracked objects:
 27765 ;;		On entry : 0/0
 27766 ;;		On exit  : 0/0
 27767 ;;		Unchanged: 0/0
 27768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27769 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27770 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27771 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27772 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27773 ;;Total ram usage:       15 bytes
 27774 ;; Hardware stack levels used:    1
 27775 ;; Hardware stack levels required when called:   14
 27776 ;; This function calls:
 27777 ;;		___aldiv
 27778 ;;		___almod
 27779 ;;		__display_itoa
 27780 ;;		_strlen
 27781 ;; This function is called by:
 27782 ;;		_display_prepare
 27783 ;; This function uses a non-reentrant model
 27784 ;;
 27785                           
 27786                           	psect	text109
 27787  010BA0                     __ptext109:
 27788                           	opt stack 0
 27789  010BA0                     __display_itoa_long:
 27790                           	opt stack 15
 27791                           
 27792                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 27793                           
 27794                           ; BSR set to: 0
 27795                           ;incstack = 0
 27796  010BA0  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 27797  010BA4  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 27798                           
 27799                           ;display.c: 209: if(short_value==value)
 27800  010BA8  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 27801  010BAC  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 27802  010BB0  0E00               	movlw	0
 27803  010BB2  0100               	movlb	0	; () banked
 27804  010BB4  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 27805  010BB6  0EFF               	movlw	255
 27806  010BB8  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 27807  010BBA  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 27808  010BBC  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 27809  010BBE  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 27810  010BC0  E117               	bnz	l17124
 27811  010BC2  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 27812  010BC4  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 27813  010BC6  E114               	bnz	l17124
 27814  010BC8  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 27815  010BCA  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 27816  010BCC  E111               	bnz	l17124
 27817  010BCE  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 27818  010BD0  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 27819  010BD2  A4D8               	btfss	status,2,c
 27820  010BD4  D00D               	goto	l1353
 27821                           
 27822                           ; BSR set to: 0
 27823                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 27824  010BD6  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27825  010BDA  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27826  010BDE  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 27827  010BE2  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27828  010BE6  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27829  010BEA  EC0D  F075         	call	__display_itoa	;wreg free
 27830                           
 27831                           ;display.c: 212: }
 27832  010BEE  0012               	return	
 27833  010BF0                     l1353:
 27834  010BF0                     l17124:
 27835                           
 27836                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 27837  010BF0  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 27838  010BF4  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 27839  010BF8  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 27840  010BFC  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 27841  010C00  0E0A               	movlw	10
 27842  010C02  0100               	movlb	0	; () banked
 27843  010C04  6F64               	movwf	___aldiv@divisor& (0+255),b
 27844  010C06  0E00               	movlw	0
 27845  010C08  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 27846  010C0A  0E00               	movlw	0
 27847  010C0C  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 27848  010C0E  0E00               	movlw	0
 27849  010C10  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 27850  010C12  ECBB  F093         	call	___aldiv	;wreg free
 27851  010C16  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 27852  010C1A  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 27853                           
 27854                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 27855  010C1E  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27856  010C22  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27857  010C26  0100               	movlb	0	; () banked
 27858  010C28  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 27859  010C2A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 27860  010C2C  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27861  010C30  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27862  010C34  EC0D  F075         	call	__display_itoa	;wreg free
 27863                           
 27864                           ;display.c: 217: length = strlen(text);
 27865  010C38  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 27866  010C3C  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 27867  010C40  EC39  F0A8         	call	_strlen	;wreg free
 27868  010C44  0100               	movlb	0	; () banked
 27869  010C46  5160               	movf	?_strlen& (0+255),w,b
 27870  010C48  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 27871                           
 27872                           ; BSR set to: 0
 27873                           ;display.c: 218: last_digit = value % 10;
 27874  010C4A  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 27875  010C4E  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 27876  010C52  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 27877  010C56  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 27878  010C5A  0E0A               	movlw	10
 27879  010C5C  6F64               	movwf	___almod@divisor& (0+255),b
 27880  010C5E  0E00               	movlw	0
 27881  010C60  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 27882  010C62  0E00               	movlw	0
 27883  010C64  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 27884  010C66  0E00               	movlw	0
 27885  010C68  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 27886  010C6A  EC0A  F097         	call	___almod	;wreg free
 27887  010C6E  0100               	movlb	0	; () banked
 27888  010C70  5160               	movf	?___almod& (0+255),w,b
 27889  010C72  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 27890                           
 27891                           ; BSR set to: 0
 27892                           ;display.c: 219: if(last_digit<0)
 27893  010C74  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 27894                           
 27895                           ; BSR set to: 0
 27896                           ;display.c: 220: last_digit = -last_digit;
 27897  010C76  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 27898                           
 27899                           ; BSR set to: 0
 27900                           ;display.c: 221: text[length] = last_digit + 0x30;
 27901                           
 27902                           ; BSR set to: 0
 27903  010C78  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27904  010C7A  0D01               	mullw	1
 27905  010C7C  50F3               	movf	prodl,w,c
 27906  010C7E  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27907  010C80  6ED9               	movwf	fsr2l,c
 27908  010C82  50F4               	movf	prodh,w,c
 27909  010C84  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27910  010C86  6EDA               	movwf	fsr2h,c
 27911  010C88  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 27912  010C8A  0F30               	addlw	48
 27913  010C8C  6EDF               	movwf	indf2,c
 27914                           
 27915                           ; BSR set to: 0
 27916                           ;display.c: 222: text[length+1] = 0x00;
 27917  010C8E  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27918  010C90  6FB4               	movwf	??__display_itoa_long& (0+255),b
 27919  010C92  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 27920  010C94  0E01               	movlw	1
 27921  010C96  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 27922  010C98  0E00               	movlw	0
 27923  010C9A  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 27924  010C9C  51B4               	movf	??__display_itoa_long& (0+255),w,b
 27925  010C9E  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27926  010CA0  6ED9               	movwf	fsr2l,c
 27927  010CA2  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 27928  010CA4  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27929  010CA6  6EDA               	movwf	fsr2h,c
 27930  010CA8  0E00               	movlw	0
 27931  010CAA  6EDF               	movwf	indf2,c
 27932  010CAC  0012               	return	
 27933  010CAE                     __end_of__display_itoa_long:
 27934                           	opt stack 0
 27935                           tblptru	equ	0xFF8
 27936                           tblptrh	equ	0xFF7
 27937                           tblptrl	equ	0xFF6
 27938                           tablat	equ	0xFF5
 27939                           prodh	equ	0xFF4
 27940                           prodl	equ	0xFF3
 27941                           intcon	equ	0xFF2
 27942                           postinc0	equ	0xFEE
 27943                           wreg	equ	0xFE8
 27944                           indf1	equ	0xFE7
 27945                           postinc1	equ	0xFE6
 27946                           postdec1	equ	0xFE5
 27947                           plusw1	equ	0xFE3
 27948                           fsr1h	equ	0xFE2
 27949                           fsr1l	equ	0xFE1
 27950                           indf2	equ	0xFDF
 27951                           postinc2	equ	0xFDE
 27952                           postdec2	equ	0xFDD
 27953                           plusw2	equ	0xFDB
 27954                           fsr2h	equ	0xFDA
 27955                           fsr2l	equ	0xFD9
 27956                           status	equ	0xFD8
 27957                           
 27958 ;; *************** function __display_itoa *****************
 27959 ;; Defined at:
 27960 ;;		line 134 in file "display.c"
 27961 ;; Parameters:    Size  Location     Type
 27962 ;;  value           2   53[BANK0 ] int 
 27963 ;;  decimals        1   55[BANK0 ] unsigned char 
 27964 ;;  text            2   56[BANK0 ] PTR unsigned char 
 27965 ;;		 -> display_prepare@temp(10), display_content(80), 
 27966 ;; Auto vars:     Size  Location     Type
 27967 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 27968 ;;  pos             1   76[BANK0 ] unsigned char 
 27969 ;;  missing         1   75[BANK0 ] char 
 27970 ;;  len             1   74[BANK0 ] unsigned char 
 27971 ;; Return value:  Size  Location     Type
 27972 ;;                  1    wreg      void 
 27973 ;; Registers used:
 27974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27975 ;; Tracked objects:
 27976 ;;		On entry : 0/0
 27977 ;;		On exit  : 0/0
 27978 ;;		Unchanged: 0/0
 27979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27980 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27981 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27982 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27983 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27984 ;;Total ram usage:       24 bytes
 27985 ;; Hardware stack levels used:    1
 27986 ;; Hardware stack levels required when called:   13
 27987 ;; This function calls:
 27988 ;;		_itoa
 27989 ;;		_strlen
 27990 ;; This function is called by:
 27991 ;;		__display_itoa_long
 27992 ;;		_display_prepare
 27993 ;; This function uses a non-reentrant model
 27994 ;;
 27995                           
 27996                           	psect	text110
 27997  00EA1A                     __ptext110:
 27998                           	opt stack 0
 27999  00EA1A                     __display_itoa:
 28000                           	opt stack 15
 28001                           
 28002                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 28003                           
 28004                           ;incstack = 0
 28005  00EA1A  0EA0               	movlw	low __display_itoa@tmp
 28006  00EA1C  0100               	movlb	0	; () banked
 28007  00EA1E  6F70               	movwf	itoa@buf& (0+255),b
 28008  00EA20  0E00               	movlw	high __display_itoa@tmp
 28009  00EA22  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28010  00EA24  C095  F072         	movff	__display_itoa@value,itoa@val
 28011  00EA28  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 28012  00EA2C  0E00               	movlw	0
 28013  00EA2E  6F75               	movwf	(itoa@base+1)& (0+255),b
 28014  00EA30  0E0A               	movlw	10
 28015  00EA32  6F74               	movwf	itoa@base& (0+255),b
 28016  00EA34  EC93  F0A7         	call	_itoa	;wreg free
 28017                           
 28018                           ;display.c: 141: len = strlen(tmp);
 28019  00EA38  0EA0               	movlw	low __display_itoa@tmp
 28020  00EA3A  0100               	movlb	0	; () banked
 28021  00EA3C  6F60               	movwf	strlen@s& (0+255),b
 28022  00EA3E  0E00               	movlw	high __display_itoa@tmp
 28023  00EA40  6F61               	movwf	(strlen@s+1)& (0+255),b
 28024  00EA42  EC39  F0A8         	call	_strlen	;wreg free
 28025  00EA46  0100               	movlb	0	; () banked
 28026  00EA48  5160               	movf	?_strlen& (0+255),w,b
 28027  00EA4A  6FAA               	movwf	__display_itoa@len& (0+255),b
 28028                           
 28029                           ; BSR set to: 0
 28030                           ;display.c: 143: if(value<0)
 28031  00EA4C  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 28032  00EA4E  D054               	goto	l1331
 28033                           
 28034                           ; BSR set to: 0
 28035                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 28036  00EA50  51AA               	movf	__display_itoa@len& (0+255),w,b
 28037  00EA52  0800               	sublw	0
 28038  00EA54  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28039  00EA56  0F02               	addlw	2
 28040  00EA58  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28041                           
 28042                           ;display.c: 146: if(missing>0)
 28043  00EA5A  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28044  00EA5C  0A80               	xorlw	128
 28045  00EA5E  0F7F               	addlw	-129
 28046  00EA60  A0D8               	btfss	status,0,c
 28047  00EA62  D090               	goto	l1338
 28048                           
 28049                           ; BSR set to: 0
 28050                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 28051  00EA64  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28052  00EA68                     l15440:
 28053                           
 28054                           ; BSR set to: 0
 28055  00EA68  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28056  00EA6A  B4D8               	btfsc	status,2,c
 28057  00EA6C  D042               	goto	u14230
 28058                           
 28059                           ; BSR set to: 0
 28060                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 28061                           
 28062                           ; BSR set to: 0
 28063                           
 28064                           ; BSR set to: 0
 28065  00EA6E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28066  00EA70  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28067  00EA72  D004               	goto	u14220
 28068  00EA74  0AFF               	xorlw	255
 28069  00EA76  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28070  00EA78  B0D8               	btfsc	status,0,c
 28071  00EA7A  D02A               	goto	l1335
 28072  00EA7C                     u14220:
 28073                           
 28074                           ; BSR set to: 0
 28075                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 28076  00EA7C  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28077  00EA80  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28078  00EA82  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28079  00EA84  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28080  00EA86  1F9A               	comf	??__display_itoa& (0+255),f,b
 28081  00EA88  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28082  00EA8A  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28083  00EA8C  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28084  00EA8E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28085  00EA90  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28086  00EA92  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28087  00EA94  519A               	movf	??__display_itoa& (0+255),w,b
 28088  00EA96  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28089  00EA98  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28090  00EA9A  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28091  00EA9C  0E01               	movlw	1
 28092  00EA9E  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28093  00EAA0  0E00               	movlw	0
 28094  00EAA2  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28095  00EAA4  0EA0               	movlw	low __display_itoa@tmp
 28096  00EAA6  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28097  00EAA8  6ED9               	movwf	fsr2l,c
 28098  00EAAA  0E00               	movlw	high __display_itoa@tmp
 28099  00EAAC  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28100  00EAAE  6EDA               	movwf	fsr2h,c
 28101  00EAB0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28102  00EAB2  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 28103  00EAB4  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 28104  00EAB6  0E01               	movlw	1
 28105  00EAB8  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 28106  00EABA  0E00               	movlw	0
 28107  00EABC  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 28108  00EABE  0EA0               	movlw	low __display_itoa@tmp
 28109  00EAC0  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 28110  00EAC2  6EE1               	movwf	fsr1l,c
 28111  00EAC4  0E00               	movlw	high __display_itoa@tmp
 28112  00EAC6  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 28113  00EAC8  6EE2               	movwf	fsr1h,c
 28114  00EACA  CFDF FFE7          	movff	indf2,indf1
 28115                           
 28116                           ;display.c: 153: }
 28117  00EACE  D00F               	goto	l1336
 28118  00EAD0                     l1335:
 28119                           
 28120                           ; BSR set to: 0
 28121                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 28122                           
 28123                           ; BSR set to: 0
 28124  00EAD0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28125  00EAD2  6F9A               	movwf	??__display_itoa& (0+255),b
 28126  00EAD4  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28127  00EAD6  0E01               	movlw	1
 28128  00EAD8  279A               	addwf	??__display_itoa& (0+255),f,b
 28129  00EADA  0E00               	movlw	0
 28130  00EADC  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28131  00EADE  0EA0               	movlw	low __display_itoa@tmp
 28132  00EAE0  259A               	addwf	??__display_itoa& (0+255),w,b
 28133  00EAE2  6ED9               	movwf	fsr2l,c
 28134  00EAE4  0E00               	movlw	high __display_itoa@tmp
 28135  00EAE6  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 28136  00EAE8  6EDA               	movwf	fsr2h,c
 28137  00EAEA  0E30               	movlw	48
 28138  00EAEC  6EDF               	movwf	indf2,c
 28139  00EAEE                     l1336:
 28140                           
 28141                           ; BSR set to: 0
 28142                           
 28143                           ; BSR set to: 0
 28144  00EAEE  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28145  00EAF0  D7BB               	goto	l15440
 28146  00EAF2                     u14230:
 28147                           
 28148                           ; BSR set to: 0
 28149                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 28150                           
 28151                           ; BSR set to: 0
 28152  00EAF2  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28153  00EAF4  0F02               	addlw	2
 28154  00EAF6  D045               	goto	L38
 28155  00EAF8                     l1331:
 28156                           
 28157                           ; BSR set to: 0
 28158                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 28159                           
 28160                           ; BSR set to: 0
 28161  00EAF8  51AA               	movf	__display_itoa@len& (0+255),w,b
 28162  00EAFA  0800               	sublw	0
 28163  00EAFC  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28164  00EAFE  6F9A               	movwf	??__display_itoa& (0+255),b
 28165  00EB00  299A               	incf	??__display_itoa& (0+255),w,b
 28166  00EB02  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28167                           
 28168                           ;display.c: 165: if(missing>0)
 28169  00EB04  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28170  00EB06  0A80               	xorlw	128
 28171  00EB08  0F7F               	addlw	-129
 28172  00EB0A  A0D8               	btfss	status,0,c
 28173  00EB0C  D03B               	goto	l1338
 28174                           
 28175                           ; BSR set to: 0
 28176                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 28177  00EB0E  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28178  00EB12                     l15460:
 28179                           
 28180                           ; BSR set to: 0
 28181  00EB12  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28182  00EB14  B4D8               	btfsc	status,2,c
 28183  00EB16  D034               	goto	u14270
 28184                           
 28185                           ; BSR set to: 0
 28186                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 28187                           
 28188                           ; BSR set to: 0
 28189                           
 28190                           ; BSR set to: 0
 28191  00EB18  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28192  00EB1A  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28193  00EB1C  D004               	goto	u14260
 28194  00EB1E  0AFF               	xorlw	255
 28195  00EB20  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28196  00EB22  B0D8               	btfsc	status,0,c
 28197  00EB24  D021               	goto	l1341
 28198  00EB26                     u14260:
 28199                           
 28200                           ; BSR set to: 0
 28201                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 28202  00EB26  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28203  00EB2A  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28204  00EB2C  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28205  00EB2E  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28206  00EB30  1F9A               	comf	??__display_itoa& (0+255),f,b
 28207  00EB32  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28208  00EB34  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28209  00EB36  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28210  00EB38  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28211  00EB3A  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28212  00EB3C  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28213  00EB3E  519A               	movf	??__display_itoa& (0+255),w,b
 28214  00EB40  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28215  00EB42  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28216  00EB44  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28217  00EB46  0EA0               	movlw	low __display_itoa@tmp
 28218  00EB48  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28219  00EB4A  6ED9               	movwf	fsr2l,c
 28220  00EB4C  0E00               	movlw	high __display_itoa@tmp
 28221  00EB4E  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28222  00EB50  6EDA               	movwf	fsr2h,c
 28223  00EB52  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28224  00EB54  0D01               	mullw	1
 28225  00EB56  0EA0               	movlw	low __display_itoa@tmp
 28226  00EB58  24F3               	addwf	prodl,w,c
 28227  00EB5A  6EE1               	movwf	fsr1l,c
 28228  00EB5C  0E00               	movlw	high __display_itoa@tmp
 28229  00EB5E  20F4               	addwfc	prodh,w,c
 28230  00EB60  6EE2               	movwf	fsr1h,c
 28231  00EB62  CFDF FFE7          	movff	indf2,indf1
 28232                           
 28233                           ;display.c: 172: }
 28234  00EB66  D00A               	goto	l1342
 28235  00EB68                     l1341:
 28236                           
 28237                           ; BSR set to: 0
 28238                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 28239                           
 28240                           ; BSR set to: 0
 28241  00EB68  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28242  00EB6A  0D01               	mullw	1
 28243  00EB6C  0EA0               	movlw	low __display_itoa@tmp
 28244  00EB6E  24F3               	addwf	prodl,w,c
 28245  00EB70  6ED9               	movwf	fsr2l,c
 28246  00EB72  0E00               	movlw	high __display_itoa@tmp
 28247  00EB74  20F4               	addwfc	prodh,w,c
 28248  00EB76  6EDA               	movwf	fsr2h,c
 28249  00EB78  0E30               	movlw	48
 28250  00EB7A  6EDF               	movwf	indf2,c
 28251  00EB7C                     l1342:
 28252                           
 28253                           ; BSR set to: 0
 28254                           
 28255                           ; BSR set to: 0
 28256  00EB7C  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28257  00EB7E  D7C9               	goto	l15460
 28258  00EB80                     u14270:
 28259                           
 28260                           ; BSR set to: 0
 28261                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 28262                           
 28263                           ; BSR set to: 0
 28264  00EB80  2997               	incf	__display_itoa@decimals& (0+255),w,b
 28265  00EB82                     L38:
 28266  00EB82  6FAA               	movwf	__display_itoa@len& (0+255),b
 28267  00EB84                     l1338:
 28268                           
 28269                           ; BSR set to: 0
 28270                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 28271                           
 28272                           ; BSR set to: 0
 28273  00EB84  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28274  00EB86  0800               	sublw	0
 28275  00EB88  25AA               	addwf	__display_itoa@len& (0+255),w,b
 28276  00EB8A  6F9A               	movwf	??__display_itoa& (0+255),b
 28277  00EB8C  059A               	decf	??__display_itoa& (0+255),w,b
 28278  00EB8E  6F97               	movwf	__display_itoa@decimals& (0+255),b
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;display.c: 184: for(pos=0;pos<len;++pos)
 28282  00EB90  0E00               	movlw	0
 28283  00EB92  6FAC               	movwf	__display_itoa@pos& (0+255),b
 28284  00EB94  D023               	goto	l1343
 28285  00EB96                     
 28286                           ; BSR set to: 0
 28287                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 28288                           
 28289                           ; BSR set to: 0
 28290  00EB96  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28291  00EB98  0D01               	mullw	1
 28292  00EB9A  0EA0               	movlw	low __display_itoa@tmp
 28293  00EB9C  24F3               	addwf	prodl,w,c
 28294  00EB9E  6ED9               	movwf	fsr2l,c
 28295  00EBA0  0E00               	movlw	high __display_itoa@tmp
 28296  00EBA2  20F4               	addwfc	prodh,w,c
 28297  00EBA4  6EDA               	movwf	fsr2h,c
 28298  00EBA6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28299  00EBA8  0D01               	mullw	1
 28300  00EBAA  50F3               	movf	prodl,w,c
 28301  00EBAC  2598               	addwf	__display_itoa@text& (0+255),w,b
 28302  00EBAE  6EE1               	movwf	fsr1l,c
 28303  00EBB0  50F4               	movf	prodh,w,c
 28304  00EBB2  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28305  00EBB4  6EE2               	movwf	fsr1h,c
 28306  00EBB6  CFDF FFE7          	movff	indf2,indf1
 28307                           
 28308                           ; BSR set to: 0
 28309                           ;display.c: 187: if(pos==decimals)
 28310  00EBBA  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28311  00EBBC  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 28312  00EBBE  A4D8               	btfss	status,2,c
 28313  00EBC0  D00C               	goto	l1345
 28314                           
 28315                           ; BSR set to: 0
 28316                           ;display.c: 188: {;display.c: 190: ++pos;
 28317  00EBC2  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28318                           
 28319                           ; BSR set to: 0
 28320                           ;display.c: 191: text[pos] = '.';
 28321  00EBC4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28322  00EBC6  0D01               	mullw	1
 28323  00EBC8  50F3               	movf	prodl,w,c
 28324  00EBCA  2598               	addwf	__display_itoa@text& (0+255),w,b
 28325  00EBCC  6ED9               	movwf	fsr2l,c
 28326  00EBCE  50F4               	movf	prodh,w,c
 28327  00EBD0  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28328  00EBD2  6EDA               	movwf	fsr2h,c
 28329  00EBD4  0E2E               	movlw	46
 28330  00EBD6  6EDF               	movwf	indf2,c
 28331                           
 28332                           ;display.c: 192: break;
 28333  00EBD8  D01E               	goto	l1347
 28334  00EBDA                     l1345:
 28335                           
 28336                           ; BSR set to: 0
 28337                           
 28338                           ; BSR set to: 0
 28339  00EBDA  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28340  00EBDC                     l1343:
 28341                           
 28342                           ; BSR set to: 0
 28343                           
 28344                           ; BSR set to: 0
 28345  00EBDC  51AA               	movf	__display_itoa@len& (0+255),w,b
 28346  00EBDE  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28347  00EBE0  B0D8               	btfsc	status,0,c
 28348  00EBE2  D019               	goto	l1347
 28349  00EBE4  D7D8               	goto	l1344
 28350  00EBE6                     
 28351                           ; BSR set to: 0
 28352                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 28353                           
 28354                           ; BSR set to: 0
 28355  00EBE6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28356  00EBE8  0D01               	mullw	1
 28357  00EBEA  0EA0               	movlw	low __display_itoa@tmp
 28358  00EBEC  24F3               	addwf	prodl,w,c
 28359  00EBEE  6ED9               	movwf	fsr2l,c
 28360  00EBF0  0E00               	movlw	high __display_itoa@tmp
 28361  00EBF2  20F4               	addwfc	prodh,w,c
 28362  00EBF4  6EDA               	movwf	fsr2h,c
 28363  00EBF6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28364  00EBF8  6F9A               	movwf	??__display_itoa& (0+255),b
 28365  00EBFA  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28366  00EBFC  0E01               	movlw	1
 28367  00EBFE  279A               	addwf	??__display_itoa& (0+255),f,b
 28368  00EC00  0E00               	movlw	0
 28369  00EC02  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28370  00EC04  519A               	movf	??__display_itoa& (0+255),w,b
 28371  00EC06  2598               	addwf	__display_itoa@text& (0+255),w,b
 28372  00EC08  6EE1               	movwf	fsr1l,c
 28373  00EC0A  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28374  00EC0C  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28375  00EC0E  6EE2               	movwf	fsr1h,c
 28376  00EC10  CFDF FFE7          	movff	indf2,indf1
 28377                           
 28378                           ; BSR set to: 0
 28379  00EC14  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28380  00EC16                     l1347:
 28381                           
 28382                           ; BSR set to: 0
 28383                           
 28384                           ; BSR set to: 0
 28385  00EC16  51AA               	movf	__display_itoa@len& (0+255),w,b
 28386  00EC18  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28387  00EC1A  A0D8               	btfss	status,0,c
 28388  00EC1C  D7E4               	goto	l1348
 28389                           
 28390                           ; BSR set to: 0
 28391                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 28392                           
 28393                           ; BSR set to: 0
 28394  00EC1E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28395  00EC20  6F9A               	movwf	??__display_itoa& (0+255),b
 28396  00EC22  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28397  00EC24  0E01               	movlw	1
 28398  00EC26  279A               	addwf	??__display_itoa& (0+255),f,b
 28399  00EC28  0E00               	movlw	0
 28400  00EC2A  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28401  00EC2C  519A               	movf	??__display_itoa& (0+255),w,b
 28402  00EC2E  2598               	addwf	__display_itoa@text& (0+255),w,b
 28403  00EC30  6ED9               	movwf	fsr2l,c
 28404  00EC32  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28405  00EC34  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28406  00EC36  6EDA               	movwf	fsr2h,c
 28407  00EC38  0E00               	movlw	0
 28408  00EC3A  6EDF               	movwf	indf2,c
 28409                           
 28410                           ; BSR set to: 0
 28411  00EC3C  0012               	return		;funcret
 28412  00EC3E                     __end_of__display_itoa:
 28413                           	opt stack 0
 28414                           tblptru	equ	0xFF8
 28415                           tblptrh	equ	0xFF7
 28416                           tblptrl	equ	0xFF6
 28417                           tablat	equ	0xFF5
 28418                           prodh	equ	0xFF4
 28419                           prodl	equ	0xFF3
 28420                           intcon	equ	0xFF2
 28421                           postinc0	equ	0xFEE
 28422                           wreg	equ	0xFE8
 28423                           indf1	equ	0xFE7
 28424                           postinc1	equ	0xFE6
 28425                           postdec1	equ	0xFE5
 28426                           plusw1	equ	0xFE3
 28427                           fsr1h	equ	0xFE2
 28428                           fsr1l	equ	0xFE1
 28429                           indf2	equ	0xFDF
 28430                           postinc2	equ	0xFDE
 28431                           postdec2	equ	0xFDD
 28432                           plusw2	equ	0xFDB
 28433                           fsr2h	equ	0xFDA
 28434                           fsr2l	equ	0xFD9
 28435                           status	equ	0xFD8
 28436                           
 28437 ;; *************** function _strlen *****************
 28438 ;; Defined at:
 28439 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 28440 ;; Parameters:    Size  Location     Type
 28441 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 28442 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28443 ;; Auto vars:     Size  Location     Type
 28444 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 28445 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28446 ;; Return value:  Size  Location     Type
 28447 ;;                  2    0[BANK0 ] unsigned int 
 28448 ;; Registers used:
 28449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28450 ;; Tracked objects:
 28451 ;;		On entry : 0/0
 28452 ;;		On exit  : 0/0
 28453 ;;		Unchanged: 0/0
 28454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28458 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28459 ;;Total ram usage:        6 bytes
 28460 ;; Hardware stack levels used:    1
 28461 ;; Hardware stack levels required when called:   10
 28462 ;; This function calls:
 28463 ;;		Nothing
 28464 ;; This function is called by:
 28465 ;;		__display_padded_itoa
 28466 ;;		__display_itoa
 28467 ;;		__display_itoa_long
 28468 ;;		_display_prepare
 28469 ;; This function uses a non-reentrant model
 28470 ;;
 28471                           
 28472                           	psect	text111
 28473  015072                     __ptext111:
 28474                           	opt stack 0
 28475  015072                     _strlen:
 28476                           	opt stack 19
 28477                           
 28478                           ; BSR set to: 0
 28479                           ;incstack = 0
 28480  015072  C060  F064         	movff	strlen@s,strlen@cp
 28481  015076  C061  F065         	movff	strlen@s+1,strlen@cp+1
 28482  01507A  D003               	goto	l3718
 28483  01507C  0100               	movlb	0	; () banked
 28484  01507E  4B64               	infsnz	strlen@cp& (0+255),f,b
 28485  015080  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 28486  015082                     l3718:
 28487                           
 28488                           ; BSR set to: 0
 28489  015082  C064  FFD9         	movff	strlen@cp,fsr2l
 28490  015086  C065  FFDA         	movff	strlen@cp+1,fsr2h
 28491  01508A  50DF               	movf	indf2,w,c
 28492  01508C  A4D8               	btfss	status,2,c
 28493  01508E  D7F6               	goto	l3719
 28494  015090  C060  F062         	movff	strlen@s,??_strlen
 28495  015094  C061  F063         	movff	strlen@s+1,??_strlen+1
 28496  015098  0100               	movlb	0	; () banked
 28497  01509A  1F62               	comf	??_strlen& (0+255),f,b
 28498  01509C  1F63               	comf	(??_strlen+1)& (0+255),f,b
 28499  01509E  4B62               	infsnz	??_strlen& (0+255),f,b
 28500  0150A0  2B63               	incf	(??_strlen+1)& (0+255),f,b
 28501  0150A2  5164               	movf	strlen@cp& (0+255),w,b
 28502  0150A4  2562               	addwf	??_strlen& (0+255),w,b
 28503  0150A6  6F60               	movwf	?_strlen& (0+255),b
 28504  0150A8  5165               	movf	(strlen@cp+1)& (0+255),w,b
 28505  0150AA  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 28506  0150AC  6F61               	movwf	(?_strlen+1)& (0+255),b
 28507  0150AE  0012               	return	
 28508  0150B0                     __end_of_strlen:
 28509                           	opt stack 0
 28510                           tblptru	equ	0xFF8
 28511                           tblptrh	equ	0xFF7
 28512                           tblptrl	equ	0xFF6
 28513                           tablat	equ	0xFF5
 28514                           prodh	equ	0xFF4
 28515                           prodl	equ	0xFF3
 28516                           intcon	equ	0xFF2
 28517                           postinc0	equ	0xFEE
 28518                           wreg	equ	0xFE8
 28519                           indf1	equ	0xFE7
 28520                           postinc1	equ	0xFE6
 28521                           postdec1	equ	0xFE5
 28522                           plusw1	equ	0xFE3
 28523                           fsr1h	equ	0xFE2
 28524                           fsr1l	equ	0xFE1
 28525                           indf2	equ	0xFDF
 28526                           postinc2	equ	0xFDE
 28527                           postdec2	equ	0xFDD
 28528                           plusw2	equ	0xFDB
 28529                           fsr2h	equ	0xFDA
 28530                           fsr2l	equ	0xFD9
 28531                           status	equ	0xFD8
 28532                           
 28533 ;; *************** function _itoa *****************
 28534 ;; Defined at:
 28535 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28536 ;; Parameters:    Size  Location     Type
 28537 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 28538 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28539 ;;  val             2   18[BANK0 ] int 
 28540 ;;  base            2   20[BANK0 ] int 
 28541 ;; Auto vars:     Size  Location     Type
 28542 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 28543 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28544 ;; Return value:  Size  Location     Type
 28545 ;;                  2   16[BANK0 ] PTR unsigned char 
 28546 ;; Registers used:
 28547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28548 ;; Tracked objects:
 28549 ;;		On entry : 0/0
 28550 ;;		On exit  : 0/0
 28551 ;;		Unchanged: 0/0
 28552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28553 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28554 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28556 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28557 ;;Total ram usage:        8 bytes
 28558 ;; Hardware stack levels used:    1
 28559 ;; Hardware stack levels required when called:   12
 28560 ;; This function calls:
 28561 ;;		_utoa
 28562 ;; This function is called by:
 28563 ;;		__display_padded_itoa
 28564 ;;		__display_itoa
 28565 ;;		__display_itoa_u16
 28566 ;; This function uses a non-reentrant model
 28567 ;;
 28568                           
 28569                           	psect	text112
 28570  014F26                     __ptext112:
 28571                           	opt stack 0
 28572  014F26                     _itoa:
 28573                           	opt stack 14
 28574                           
 28575                           ; BSR set to: 0
 28576                           ;incstack = 0
 28577  014F26  C070  F076         	movff	itoa@buf,itoa@cp
 28578  014F2A  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 28579  014F2E  0100               	movlb	0	; () banked
 28580  014F30  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 28581  014F32  D00C               	goto	l3670
 28582                           
 28583                           ; BSR set to: 0
 28584  014F34  C070  FFD9         	movff	itoa@buf,fsr2l
 28585  014F38  C071  FFDA         	movff	itoa@buf+1,fsr2h
 28586  014F3C  0E2D               	movlw	45
 28587  014F3E  6EDF               	movwf	indf2,c
 28588                           
 28589                           ; BSR set to: 0
 28590  014F40  4B70               	infsnz	itoa@buf& (0+255),f,b
 28591  014F42  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 28592                           
 28593                           ; BSR set to: 0
 28594  014F44  6D72               	negf	itoa@val& (0+255),b
 28595  014F46  1F73               	comf	(itoa@val+1)& (0+255),f,b
 28596  014F48  B0D8               	btfsc	status,0,c
 28597  014F4A  2B73               	incf	(itoa@val+1)& (0+255),f,b
 28598  014F4C                     l3670:
 28599                           
 28600                           ; BSR set to: 0
 28601                           
 28602                           ; BSR set to: 0
 28603  014F4C  C070  F067         	movff	itoa@buf,utoa@buf
 28604  014F50  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 28605  014F54  C072  F069         	movff	itoa@val,utoa@val
 28606  014F58  C073  F06A         	movff	itoa@val+1,utoa@val+1
 28607  014F5C  C074  F06B         	movff	itoa@base,utoa@base
 28608  014F60  C075  F06C         	movff	itoa@base+1,utoa@base+1
 28609  014F64  EC0C  F098         	call	_utoa	;wreg free
 28610  014F68  0012               	return	
 28611  014F6A                     __end_of_itoa:
 28612                           	opt stack 0
 28613                           tblptru	equ	0xFF8
 28614                           tblptrh	equ	0xFF7
 28615                           tblptrl	equ	0xFF6
 28616                           tablat	equ	0xFF5
 28617                           prodh	equ	0xFF4
 28618                           prodl	equ	0xFF3
 28619                           intcon	equ	0xFF2
 28620                           postinc0	equ	0xFEE
 28621                           wreg	equ	0xFE8
 28622                           indf1	equ	0xFE7
 28623                           postinc1	equ	0xFE6
 28624                           postdec1	equ	0xFE5
 28625                           plusw1	equ	0xFE3
 28626                           fsr1h	equ	0xFE2
 28627                           fsr1l	equ	0xFE1
 28628                           indf2	equ	0xFDF
 28629                           postinc2	equ	0xFDE
 28630                           postdec2	equ	0xFDD
 28631                           plusw2	equ	0xFDB
 28632                           fsr2h	equ	0xFDA
 28633                           fsr2l	equ	0xFD9
 28634                           status	equ	0xFD8
 28635                           
 28636 ;; *************** function _utoa *****************
 28637 ;; Defined at:
 28638 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28639 ;; Parameters:    Size  Location     Type
 28640 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 28641 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28642 ;;  val             2    9[BANK0 ] unsigned int 
 28643 ;;  base            2   11[BANK0 ] int 
 28644 ;; Auto vars:     Size  Location     Type
 28645 ;;  v               2   13[BANK0 ] unsigned int 
 28646 ;;  c               1   15[BANK0 ] unsigned char 
 28647 ;; Return value:  Size  Location     Type
 28648 ;;                  2    7[BANK0 ] PTR unsigned char 
 28649 ;; Registers used:
 28650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28651 ;; Tracked objects:
 28652 ;;		On entry : 0/0
 28653 ;;		On exit  : 0/0
 28654 ;;		Unchanged: 0/0
 28655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28657 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28659 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28660 ;;Total ram usage:        9 bytes
 28661 ;; Hardware stack levels used:    1
 28662 ;; Hardware stack levels required when called:   11
 28663 ;; This function calls:
 28664 ;;		___lwdiv
 28665 ;;		___lwmod
 28666 ;; This function is called by:
 28667 ;;		_itoa
 28668 ;; This function uses a non-reentrant model
 28669 ;;
 28670                           
 28671                           	psect	text113
 28672  013018                     __ptext113:
 28673                           	opt stack 0
 28674  013018                     _utoa:
 28675                           	opt stack 14
 28676                           
 28677                           ;incstack = 0
 28678  013018  C069  F06D         	movff	utoa@val,utoa@v
 28679  01301C  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 28680  013020  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 28681  013024  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 28682  013028  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28683  01302C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28684  013030  EC29  F0A5         	call	___lwdiv	;wreg free
 28685  013034  C060  F06D         	movff	?___lwdiv,utoa@v
 28686  013038  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 28687  01303C  0100               	movlb	0	; () banked
 28688  01303E  4B67               	infsnz	utoa@buf& (0+255),f,b
 28689  013040  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28690                           
 28691                           ; BSR set to: 0
 28692  013042  516D               	movf	utoa@v& (0+255),w,b
 28693  013044  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 28694  013046  A4D8               	btfss	status,2,c
 28695  013048  D7EB               	goto	l3674
 28696                           
 28697                           ; BSR set to: 0
 28698                           
 28699                           ; BSR set to: 0
 28700  01304A  C067  FFD9         	movff	utoa@buf,fsr2l
 28701  01304E  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28702  013052  0E00               	movlw	0
 28703  013054  6EDF               	movwf	indf2,c
 28704                           
 28705                           ; BSR set to: 0
 28706  013056  0767               	decf	utoa@buf& (0+255),f,b
 28707  013058  A0D8               	btfss	status,0,c
 28708  01305A  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28709  01305C                     
 28710                           ; BSR set to: 0
 28711                           
 28712                           ; BSR set to: 0
 28713  01305C  C069  F060         	movff	utoa@val,___lwmod@dividend
 28714  013060  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 28715  013064  C06B  F062         	movff	utoa@base,___lwmod@divisor
 28716  013068  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 28717  01306C  ECB5  F0A7         	call	___lwmod	;wreg free
 28718  013070  0100               	movlb	0	; () banked
 28719  013072  5160               	movf	?___lwmod& (0+255),w,b
 28720  013074  6F6F               	movwf	utoa@c& (0+255),b
 28721                           
 28722                           ; BSR set to: 0
 28723  013076  C069  F060         	movff	utoa@val,___lwdiv@dividend
 28724  01307A  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 28725  01307E  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28726  013082  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28727  013086  EC29  F0A5         	call	___lwdiv	;wreg free
 28728  01308A  C060  F069         	movff	?___lwdiv,utoa@val
 28729  01308E  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 28730  013092  0E09               	movlw	9
 28731  013094  0100               	movlb	0	; () banked
 28732  013096  656F               	cpfsgt	utoa@c& (0+255),b
 28733  013098  D002               	goto	l3677
 28734                           
 28735                           ; BSR set to: 0
 28736  01309A  0E07               	movlw	7
 28737  01309C  276F               	addwf	utoa@c& (0+255),f,b
 28738  01309E                     l3677:
 28739                           
 28740                           ; BSR set to: 0
 28741  01309E  0E30               	movlw	48
 28742  0130A0  276F               	addwf	utoa@c& (0+255),f,b
 28743                           
 28744                           ; BSR set to: 0
 28745  0130A2  C067  FFD9         	movff	utoa@buf,fsr2l
 28746  0130A6  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28747  0130AA  C06F  FFDF         	movff	utoa@c,indf2
 28748                           
 28749                           ; BSR set to: 0
 28750  0130AE  0767               	decf	utoa@buf& (0+255),f,b
 28751  0130B0  A0D8               	btfss	status,0,c
 28752  0130B2  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28753                           
 28754                           ; BSR set to: 0
 28755  0130B4  5169               	movf	utoa@val& (0+255),w,b
 28756  0130B6  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 28757  0130B8  A4D8               	btfss	status,2,c
 28758  0130BA  D7D0               	goto	l3676
 28759                           
 28760                           ; BSR set to: 0
 28761                           ;	Return value of _utoa is never used
 28762                           
 28763                           ; BSR set to: 0
 28764  0130BC  4B67               	infsnz	utoa@buf& (0+255),f,b
 28765  0130BE  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28766  0130C0  0012               	return	
 28767  0130C2                     __end_of_utoa:
 28768                           	opt stack 0
 28769                           tblptru	equ	0xFF8
 28770                           tblptrh	equ	0xFF7
 28771                           tblptrl	equ	0xFF6
 28772                           tablat	equ	0xFF5
 28773                           prodh	equ	0xFF4
 28774                           prodl	equ	0xFF3
 28775                           intcon	equ	0xFF2
 28776                           postinc0	equ	0xFEE
 28777                           wreg	equ	0xFE8
 28778                           indf1	equ	0xFE7
 28779                           postinc1	equ	0xFE6
 28780                           postdec1	equ	0xFE5
 28781                           plusw1	equ	0xFE3
 28782                           fsr1h	equ	0xFE2
 28783                           fsr1l	equ	0xFE1
 28784                           indf2	equ	0xFDF
 28785                           postinc2	equ	0xFDE
 28786                           postdec2	equ	0xFDD
 28787                           plusw2	equ	0xFDB
 28788                           fsr2h	equ	0xFDA
 28789                           fsr2l	equ	0xFD9
 28790                           status	equ	0xFD8
 28791                           
 28792 ;; *************** function ___lwmod *****************
 28793 ;; Defined at:
 28794 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 28795 ;; Parameters:    Size  Location     Type
 28796 ;;  dividend        2    0[BANK0 ] unsigned int 
 28797 ;;  divisor         2    2[BANK0 ] unsigned int 
 28798 ;; Auto vars:     Size  Location     Type
 28799 ;;  counter         1    4[BANK0 ] unsigned char 
 28800 ;; Return value:  Size  Location     Type
 28801 ;;                  2    0[BANK0 ] unsigned int 
 28802 ;; Registers used:
 28803 ;;		wreg, status,2, status,0
 28804 ;; Tracked objects:
 28805 ;;		On entry : 0/0
 28806 ;;		On exit  : 0/0
 28807 ;;		Unchanged: 0/0
 28808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28812 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28813 ;;Total ram usage:        5 bytes
 28814 ;; Hardware stack levels used:    1
 28815 ;; Hardware stack levels required when called:   10
 28816 ;; This function calls:
 28817 ;;		Nothing
 28818 ;; This function is called by:
 28819 ;;		_utoa
 28820 ;; This function uses a non-reentrant model
 28821 ;;
 28822                           
 28823                           	psect	text114
 28824  014F6A                     __ptext114:
 28825                           	opt stack 0
 28826  014F6A                     ___lwmod:
 28827                           	opt stack 14
 28828                           
 28829                           ; BSR set to: 0
 28830                           ;incstack = 0
 28831  014F6A  0100               	movlb	0	; () banked
 28832  014F6C  5162               	movf	___lwmod@divisor& (0+255),w,b
 28833  014F6E  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28834  014F70  B4D8               	btfsc	status,2,c
 28835  014F72  D018               	goto	l3467
 28836                           
 28837                           ; BSR set to: 0
 28838  014F74  0E01               	movlw	1
 28839  014F76  6F64               	movwf	___lwmod@counter& (0+255),b
 28840  014F78  D004               	goto	l3462
 28841  014F7A                     
 28842                           ; BSR set to: 0
 28843                           
 28844                           ; BSR set to: 0
 28845  014F7A  90D8               	bcf	status,0,c
 28846  014F7C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 28847  014F7E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28848  014F80  2B64               	incf	___lwmod@counter& (0+255),f,b
 28849  014F82                     l3462:
 28850                           
 28851                           ; BSR set to: 0
 28852                           
 28853                           ; BSR set to: 0
 28854  014F82  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28855  014F84  D7FA               	goto	l3463
 28856  014F86                     u11010:
 28857                           
 28858                           ; BSR set to: 0
 28859                           
 28860                           ; BSR set to: 0
 28861                           
 28862                           ; BSR set to: 0
 28863  014F86  5162               	movf	___lwmod@divisor& (0+255),w,b
 28864  014F88  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 28865  014F8A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28866  014F8C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28867  014F8E  A0D8               	btfss	status,0,c
 28868  014F90  D004               	goto	l3466
 28869                           
 28870                           ; BSR set to: 0
 28871  014F92  5162               	movf	___lwmod@divisor& (0+255),w,b
 28872  014F94  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 28873  014F96  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28874  014F98  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28875  014F9A                     l3466:
 28876                           
 28877                           ; BSR set to: 0
 28878                           
 28879                           ; BSR set to: 0
 28880  014F9A  90D8               	bcf	status,0,c
 28881  014F9C  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28882  014F9E  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 28883                           
 28884                           ; BSR set to: 0
 28885  014FA0  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 28886  014FA2  D7F1               	goto	u11010
 28887  014FA4                     l3467:
 28888                           
 28889                           ; BSR set to: 0
 28890                           
 28891                           ; BSR set to: 0
 28892  014FA4  C060  F060         	movff	___lwmod@dividend,?___lwmod
 28893  014FA8  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 28894                           
 28895                           ; BSR set to: 0
 28896  014FAC  0012               	return		;funcret
 28897  014FAE                     __end_of___lwmod:
 28898                           	opt stack 0
 28899                           tblptru	equ	0xFF8
 28900                           tblptrh	equ	0xFF7
 28901                           tblptrl	equ	0xFF6
 28902                           tablat	equ	0xFF5
 28903                           prodh	equ	0xFF4
 28904                           prodl	equ	0xFF3
 28905                           intcon	equ	0xFF2
 28906                           postinc0	equ	0xFEE
 28907                           wreg	equ	0xFE8
 28908                           indf1	equ	0xFE7
 28909                           postinc1	equ	0xFE6
 28910                           postdec1	equ	0xFE5
 28911                           plusw1	equ	0xFE3
 28912                           fsr1h	equ	0xFE2
 28913                           fsr1l	equ	0xFE1
 28914                           indf2	equ	0xFDF
 28915                           postinc2	equ	0xFDE
 28916                           postdec2	equ	0xFDD
 28917                           plusw2	equ	0xFDB
 28918                           fsr2h	equ	0xFDA
 28919                           fsr2l	equ	0xFD9
 28920                           status	equ	0xFD8
 28921                           
 28922 ;; *************** function ___lwdiv *****************
 28923 ;; Defined at:
 28924 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 28925 ;; Parameters:    Size  Location     Type
 28926 ;;  dividend        2    0[BANK0 ] unsigned int 
 28927 ;;  divisor         2    2[BANK0 ] unsigned int 
 28928 ;; Auto vars:     Size  Location     Type
 28929 ;;  quotient        2    4[BANK0 ] unsigned int 
 28930 ;;  counter         1    6[BANK0 ] unsigned char 
 28931 ;; Return value:  Size  Location     Type
 28932 ;;                  2    0[BANK0 ] unsigned int 
 28933 ;; Registers used:
 28934 ;;		wreg, status,2, status,0
 28935 ;; Tracked objects:
 28936 ;;		On entry : 0/0
 28937 ;;		On exit  : 0/0
 28938 ;;		Unchanged: 0/0
 28939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28941 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28943 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28944 ;;Total ram usage:        7 bytes
 28945 ;; Hardware stack levels used:    1
 28946 ;; Hardware stack levels required when called:   10
 28947 ;; This function calls:
 28948 ;;		Nothing
 28949 ;; This function is called by:
 28950 ;;		_utoa
 28951 ;; This function uses a non-reentrant model
 28952 ;;
 28953                           
 28954                           	psect	text115
 28955  014A52                     __ptext115:
 28956                           	opt stack 0
 28957  014A52                     ___lwdiv:
 28958                           	opt stack 14
 28959                           
 28960                           ; BSR set to: 0
 28961                           ;incstack = 0
 28962  014A52  0E00               	movlw	0
 28963  014A54  0100               	movlb	0	; () banked
 28964  014A56  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 28965  014A58  0E00               	movlw	0
 28966  014A5A  6F64               	movwf	___lwdiv@quotient& (0+255),b
 28967                           
 28968                           ; BSR set to: 0
 28969  014A5C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 28970  014A5E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 28971  014A60  B4D8               	btfsc	status,2,c
 28972  014A62  D01C               	goto	l3457
 28973                           
 28974                           ; BSR set to: 0
 28975  014A64  0E01               	movlw	1
 28976  014A66  6F66               	movwf	___lwdiv@counter& (0+255),b
 28977  014A68  D004               	goto	l3452
 28978  014A6A                     
 28979                           ; BSR set to: 0
 28980                           
 28981                           ; BSR set to: 0
 28982  014A6A  90D8               	bcf	status,0,c
 28983  014A6C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 28984  014A6E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 28985  014A70  2B66               	incf	___lwdiv@counter& (0+255),f,b
 28986  014A72                     l3452:
 28987                           
 28988                           ; BSR set to: 0
 28989                           
 28990                           ; BSR set to: 0
 28991  014A72  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 28992  014A74  D7FA               	goto	l3453
 28993  014A76                     u10980:
 28994                           
 28995                           ; BSR set to: 0
 28996                           
 28997                           ; BSR set to: 0
 28998                           
 28999                           ; BSR set to: 0
 29000  014A76  90D8               	bcf	status,0,c
 29001  014A78  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29002  014A7A  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29003                           
 29004                           ; BSR set to: 0
 29005  014A7C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29006  014A7E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29007  014A80  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29008  014A82  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29009  014A84  A0D8               	btfss	status,0,c
 29010  014A86  D005               	goto	l3456
 29011                           
 29012                           ; BSR set to: 0
 29013  014A88  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29014  014A8A  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29015  014A8C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29016  014A8E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29017                           
 29018                           ; BSR set to: 0
 29019  014A90  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29020  014A92                     l3456:
 29021                           
 29022                           ; BSR set to: 0
 29023                           
 29024                           ; BSR set to: 0
 29025  014A92  90D8               	bcf	status,0,c
 29026  014A94  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29027  014A96  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 29028                           
 29029                           ; BSR set to: 0
 29030  014A98  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 29031  014A9A  D7ED               	goto	u10980
 29032  014A9C                     l3457:
 29033                           
 29034                           ; BSR set to: 0
 29035                           
 29036                           ; BSR set to: 0
 29037  014A9C  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 29038  014AA0  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29039                           
 29040                           ; BSR set to: 0
 29041  014AA4  0012               	return		;funcret
 29042  014AA6                     __end_of___lwdiv:
 29043                           	opt stack 0
 29044                           tblptru	equ	0xFF8
 29045                           tblptrh	equ	0xFF7
 29046                           tblptrl	equ	0xFF6
 29047                           tablat	equ	0xFF5
 29048                           prodh	equ	0xFF4
 29049                           prodl	equ	0xFF3
 29050                           intcon	equ	0xFF2
 29051                           postinc0	equ	0xFEE
 29052                           wreg	equ	0xFE8
 29053                           indf1	equ	0xFE7
 29054                           postinc1	equ	0xFE6
 29055                           postdec1	equ	0xFE5
 29056                           plusw1	equ	0xFE3
 29057                           fsr1h	equ	0xFE2
 29058                           fsr1l	equ	0xFE1
 29059                           indf2	equ	0xFDF
 29060                           postinc2	equ	0xFDE
 29061                           postdec2	equ	0xFDD
 29062                           plusw2	equ	0xFDB
 29063                           fsr2h	equ	0xFDA
 29064                           fsr2l	equ	0xFD9
 29065                           status	equ	0xFD8
 29066                           
 29067 ;; *************** function ___almod *****************
 29068 ;; Defined at:
 29069 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 29070 ;; Parameters:    Size  Location     Type
 29071 ;;  dividend        4    0[BANK0 ] long 
 29072 ;;  divisor         4    4[BANK0 ] long 
 29073 ;; Auto vars:     Size  Location     Type
 29074 ;;  sign            1    9[BANK0 ] unsigned char 
 29075 ;;  counter         1    8[BANK0 ] unsigned char 
 29076 ;; Return value:  Size  Location     Type
 29077 ;;                  4    0[BANK0 ] long 
 29078 ;; Registers used:
 29079 ;;		wreg, status,2, status,0
 29080 ;; Tracked objects:
 29081 ;;		On entry : 0/0
 29082 ;;		On exit  : 0/0
 29083 ;;		Unchanged: 0/0
 29084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29085 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29086 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29088 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29089 ;;Total ram usage:       10 bytes
 29090 ;; Hardware stack levels used:    1
 29091 ;; Hardware stack levels required when called:   10
 29092 ;; This function calls:
 29093 ;;		Nothing
 29094 ;; This function is called by:
 29095 ;;		__display_itoa_long
 29096 ;; This function uses a non-reentrant model
 29097 ;;
 29098                           
 29099                           	psect	text116
 29100  012E14                     __ptext116:
 29101                           	opt stack 0
 29102  012E14                     ___almod:
 29103                           	opt stack 18
 29104                           
 29105                           ; BSR set to: 0
 29106                           ;incstack = 0
 29107  012E14  0E00               	movlw	0
 29108  012E16  0100               	movlb	0	; () banked
 29109  012E18  6F69               	movwf	___almod@sign& (0+255),b
 29110                           
 29111                           ; BSR set to: 0
 29112  012E1A  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 29113  012E1C  D00A               	goto	l3054
 29114                           
 29115                           ; BSR set to: 0
 29116  012E1E  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29117  012E20  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29118  012E22  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29119  012E24  6D60               	negf	___almod@dividend& (0+255),b
 29120  012E26  0E00               	movlw	0
 29121  012E28  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29122  012E2A  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29123  012E2C  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29124                           
 29125                           ; BSR set to: 0
 29126  012E2E  0E01               	movlw	1
 29127  012E30  6F69               	movwf	___almod@sign& (0+255),b
 29128  012E32                     l3054:
 29129                           
 29130                           ; BSR set to: 0
 29131                           
 29132                           ; BSR set to: 0
 29133  012E32  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29134  012E34  D008               	goto	l3055
 29135                           
 29136                           ; BSR set to: 0
 29137  012E36  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 29138  012E38  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 29139  012E3A  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 29140  012E3C  6D64               	negf	___almod@divisor& (0+255),b
 29141  012E3E  0E00               	movlw	0
 29142  012E40  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 29143  012E42  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 29144  012E44  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 29145  012E46                     l3055:
 29146                           
 29147                           ; BSR set to: 0
 29148                           
 29149                           ; BSR set to: 0
 29150  012E46  5164               	movf	___almod@divisor& (0+255),w,b
 29151  012E48  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 29152  012E4A  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 29153  012E4C  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 29154  012E4E  B4D8               	btfsc	status,2,c
 29155  012E50  D024               	goto	l3062
 29156                           
 29157                           ; BSR set to: 0
 29158  012E52  0E01               	movlw	1
 29159  012E54  6F68               	movwf	___almod@counter& (0+255),b
 29160  012E56  D006               	goto	l3057
 29161  012E58                     
 29162                           ; BSR set to: 0
 29163                           
 29164                           ; BSR set to: 0
 29165  012E58  90D8               	bcf	status,0,c
 29166  012E5A  3764               	rlcf	___almod@divisor& (0+255),f,b
 29167  012E5C  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 29168  012E5E  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 29169  012E60  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 29170  012E62  2B68               	incf	___almod@counter& (0+255),f,b
 29171  012E64                     l3057:
 29172                           
 29173                           ; BSR set to: 0
 29174                           
 29175                           ; BSR set to: 0
 29176  012E64  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29177  012E66  D7F8               	goto	l3058
 29178  012E68                     u15240:
 29179                           
 29180                           ; BSR set to: 0
 29181                           
 29182                           ; BSR set to: 0
 29183                           
 29184                           ; BSR set to: 0
 29185  012E68  5164               	movf	___almod@divisor& (0+255),w,b
 29186  012E6A  5D60               	subwf	___almod@dividend& (0+255),w,b
 29187  012E6C  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29188  012E6E  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 29189  012E70  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29190  012E72  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 29191  012E74  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29192  012E76  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 29193  012E78  A0D8               	btfss	status,0,c
 29194  012E7A  D008               	goto	l3061
 29195                           
 29196                           ; BSR set to: 0
 29197  012E7C  5164               	movf	___almod@divisor& (0+255),w,b
 29198  012E7E  5F60               	subwf	___almod@dividend& (0+255),f,b
 29199  012E80  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29200  012E82  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 29201  012E84  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29202  012E86  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 29203  012E88  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29204  012E8A  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 29205  012E8C                     l3061:
 29206                           
 29207                           ; BSR set to: 0
 29208                           
 29209                           ; BSR set to: 0
 29210  012E8C  90D8               	bcf	status,0,c
 29211  012E8E  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 29212  012E90  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 29213  012E92  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 29214  012E94  3364               	rrcf	___almod@divisor& (0+255),f,b
 29215                           
 29216                           ; BSR set to: 0
 29217  012E96  2F68               	decfsz	___almod@counter& (0+255),f,b
 29218  012E98  D7E7               	goto	u15240
 29219  012E9A                     l3062:
 29220                           
 29221                           ; BSR set to: 0
 29222                           
 29223                           ; BSR set to: 0
 29224                           
 29225                           ; BSR set to: 0
 29226  012E9A  5169               	movf	___almod@sign& (0+255),w,b
 29227  012E9C  B4D8               	btfsc	status,2,c
 29228  012E9E  D008               	goto	l3063
 29229                           
 29230                           ; BSR set to: 0
 29231  012EA0  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29232  012EA2  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29233  012EA4  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29234  012EA6  6D60               	negf	___almod@dividend& (0+255),b
 29235  012EA8  0E00               	movlw	0
 29236  012EAA  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29237  012EAC  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29238  012EAE  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29239  012EB0                     l3063:
 29240                           
 29241                           ; BSR set to: 0
 29242                           
 29243                           ; BSR set to: 0
 29244  012EB0  C060  F060         	movff	___almod@dividend,?___almod
 29245  012EB4  C061  F061         	movff	___almod@dividend+1,?___almod+1
 29246  012EB8  C062  F062         	movff	___almod@dividend+2,?___almod+2
 29247  012EBC  C063  F063         	movff	___almod@dividend+3,?___almod+3
 29248  012EC0  0012               	return	
 29249  012EC2                     __end_of___almod:
 29250                           	opt stack 0
 29251                           tblptru	equ	0xFF8
 29252                           tblptrh	equ	0xFF7
 29253                           tblptrl	equ	0xFF6
 29254                           tablat	equ	0xFF5
 29255                           prodh	equ	0xFF4
 29256                           prodl	equ	0xFF3
 29257                           intcon	equ	0xFF2
 29258                           postinc0	equ	0xFEE
 29259                           wreg	equ	0xFE8
 29260                           indf1	equ	0xFE7
 29261                           postinc1	equ	0xFE6
 29262                           postdec1	equ	0xFE5
 29263                           plusw1	equ	0xFE3
 29264                           fsr1h	equ	0xFE2
 29265                           fsr1l	equ	0xFE1
 29266                           indf2	equ	0xFDF
 29267                           postinc2	equ	0xFDE
 29268                           postdec2	equ	0xFDD
 29269                           plusw2	equ	0xFDB
 29270                           fsr2h	equ	0xFDA
 29271                           fsr2l	equ	0xFD9
 29272                           status	equ	0xFD8
 29273                           
 29274 ;; *************** function ___aldiv *****************
 29275 ;; Defined at:
 29276 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 29277 ;; Parameters:    Size  Location     Type
 29278 ;;  dividend        4    0[BANK0 ] long 
 29279 ;;  divisor         4    4[BANK0 ] long 
 29280 ;; Auto vars:     Size  Location     Type
 29281 ;;  quotient        4   10[BANK0 ] long 
 29282 ;;  sign            1    9[BANK0 ] unsigned char 
 29283 ;;  counter         1    8[BANK0 ] unsigned char 
 29284 ;; Return value:  Size  Location     Type
 29285 ;;                  4    0[BANK0 ] long 
 29286 ;; Registers used:
 29287 ;;		wreg, status,2, status,0
 29288 ;; Tracked objects:
 29289 ;;		On entry : 0/0
 29290 ;;		On exit  : 0/0
 29291 ;;		Unchanged: 0/0
 29292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29293 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29294 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29296 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29297 ;;Total ram usage:       14 bytes
 29298 ;; Hardware stack levels used:    1
 29299 ;; Hardware stack levels required when called:   10
 29300 ;; This function calls:
 29301 ;;		Nothing
 29302 ;; This function is called by:
 29303 ;;		__display_itoa_long
 29304 ;; This function uses a non-reentrant model
 29305 ;;
 29306                           
 29307                           	psect	text117
 29308  012776                     __ptext117:
 29309                           	opt stack 0
 29310  012776                     ___aldiv:
 29311                           	opt stack 18
 29312                           
 29313                           ; BSR set to: 0
 29314                           ;incstack = 0
 29315  012776  0E00               	movlw	0
 29316  012778  0100               	movlb	0	; () banked
 29317  01277A  6F69               	movwf	___aldiv@sign& (0+255),b
 29318                           
 29319                           ; BSR set to: 0
 29320  01277C  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29321  01277E  D00A               	goto	l3041
 29322                           
 29323                           ; BSR set to: 0
 29324  012780  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 29325  012782  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 29326  012784  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 29327  012786  6D64               	negf	___aldiv@divisor& (0+255),b
 29328  012788  0E00               	movlw	0
 29329  01278A  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 29330  01278C  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 29331  01278E  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 29332                           
 29333                           ; BSR set to: 0
 29334  012790  0E01               	movlw	1
 29335  012792  6F69               	movwf	___aldiv@sign& (0+255),b
 29336  012794                     l3041:
 29337                           
 29338                           ; BSR set to: 0
 29339                           
 29340                           ; BSR set to: 0
 29341  012794  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 29342  012796  D00A               	goto	l3042
 29343                           
 29344                           ; BSR set to: 0
 29345  012798  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 29346  01279A  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 29347  01279C  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 29348  01279E  6D60               	negf	___aldiv@dividend& (0+255),b
 29349  0127A0  0E00               	movlw	0
 29350  0127A2  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 29351  0127A4  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 29352  0127A6  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 29353                           
 29354                           ; BSR set to: 0
 29355  0127A8  0E01               	movlw	1
 29356  0127AA  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 29357  0127AC                     l3042:
 29358                           
 29359                           ; BSR set to: 0
 29360                           
 29361                           ; BSR set to: 0
 29362  0127AC  0E00               	movlw	0
 29363  0127AE  6F6A               	movwf	___aldiv@quotient& (0+255),b
 29364  0127B0  0E00               	movlw	0
 29365  0127B2  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 29366  0127B4  0E00               	movlw	0
 29367  0127B6  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 29368  0127B8  0E00               	movlw	0
 29369  0127BA  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 29370                           
 29371                           ; BSR set to: 0
 29372  0127BC  5164               	movf	___aldiv@divisor& (0+255),w,b
 29373  0127BE  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 29374  0127C0  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 29375  0127C2  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 29376  0127C4  B4D8               	btfsc	status,2,c
 29377  0127C6  D02A               	goto	l3049
 29378                           
 29379                           ; BSR set to: 0
 29380  0127C8  0E01               	movlw	1
 29381  0127CA  6F68               	movwf	___aldiv@counter& (0+255),b
 29382  0127CC  D006               	goto	l3044
 29383  0127CE                     
 29384                           ; BSR set to: 0
 29385                           
 29386                           ; BSR set to: 0
 29387  0127CE  90D8               	bcf	status,0,c
 29388  0127D0  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 29389  0127D2  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 29390  0127D4  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 29391  0127D6  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 29392  0127D8  2B68               	incf	___aldiv@counter& (0+255),f,b
 29393  0127DA                     l3044:
 29394                           
 29395                           ; BSR set to: 0
 29396                           
 29397                           ; BSR set to: 0
 29398  0127DA  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29399  0127DC  D7F8               	goto	l3045
 29400  0127DE                     u15180:
 29401                           
 29402                           ; BSR set to: 0
 29403                           
 29404                           ; BSR set to: 0
 29405                           
 29406                           ; BSR set to: 0
 29407  0127DE  90D8               	bcf	status,0,c
 29408  0127E0  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 29409  0127E2  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 29410  0127E4  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 29411  0127E6  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 29412                           
 29413                           ; BSR set to: 0
 29414  0127E8  5164               	movf	___aldiv@divisor& (0+255),w,b
 29415  0127EA  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 29416  0127EC  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29417  0127EE  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 29418  0127F0  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29419  0127F2  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 29420  0127F4  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29421  0127F6  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 29422  0127F8  A0D8               	btfss	status,0,c
 29423  0127FA  D009               	goto	l3048
 29424                           
 29425                           ; BSR set to: 0
 29426  0127FC  5164               	movf	___aldiv@divisor& (0+255),w,b
 29427  0127FE  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 29428  012800  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29429  012802  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 29430  012804  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29431  012806  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 29432  012808  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29433  01280A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 29434                           
 29435                           ; BSR set to: 0
 29436  01280C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 29437  01280E                     l3048:
 29438                           
 29439                           ; BSR set to: 0
 29440                           
 29441                           ; BSR set to: 0
 29442  01280E  90D8               	bcf	status,0,c
 29443  012810  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 29444  012812  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 29445  012814  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 29446  012816  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 29447                           
 29448                           ; BSR set to: 0
 29449  012818  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 29450  01281A  D7E1               	goto	u15180
 29451  01281C                     l3049:
 29452                           
 29453                           ; BSR set to: 0
 29454                           
 29455                           ; BSR set to: 0
 29456                           
 29457                           ; BSR set to: 0
 29458  01281C  5169               	movf	___aldiv@sign& (0+255),w,b
 29459  01281E  B4D8               	btfsc	status,2,c
 29460  012820  D008               	goto	l3050
 29461                           
 29462                           ; BSR set to: 0
 29463  012822  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 29464  012824  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 29465  012826  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 29466  012828  6D6A               	negf	___aldiv@quotient& (0+255),b
 29467  01282A  0E00               	movlw	0
 29468  01282C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 29469  01282E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 29470  012830  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 29471  012832                     l3050:
 29472                           
 29473                           ; BSR set to: 0
 29474                           
 29475                           ; BSR set to: 0
 29476  012832  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 29477  012836  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 29478  01283A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 29479  01283E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 29480  012842  0012               	return	
 29481  012844                     __end_of___aldiv:
 29482                           	opt stack 0
 29483                           tblptru	equ	0xFF8
 29484                           tblptrh	equ	0xFF7
 29485                           tblptrl	equ	0xFF6
 29486                           tablat	equ	0xFF5
 29487                           prodh	equ	0xFF4
 29488                           prodl	equ	0xFF3
 29489                           intcon	equ	0xFF2
 29490                           postinc0	equ	0xFEE
 29491                           wreg	equ	0xFE8
 29492                           indf1	equ	0xFE7
 29493                           postinc1	equ	0xFE6
 29494                           postdec1	equ	0xFE5
 29495                           plusw1	equ	0xFE3
 29496                           fsr1h	equ	0xFE2
 29497                           fsr1l	equ	0xFE1
 29498                           indf2	equ	0xFDF
 29499                           postinc2	equ	0xFDE
 29500                           postdec2	equ	0xFDD
 29501                           plusw2	equ	0xFDB
 29502                           fsr2h	equ	0xFDA
 29503                           fsr2l	equ	0xFD9
 29504                           status	equ	0xFD8
 29505                           
 29506 ;; *************** function __display_clear *****************
 29507 ;; Defined at:
 29508 ;;		line 85 in file "display.c"
 29509 ;; Parameters:    Size  Location     Type
 29510 ;;		None
 29511 ;; Auto vars:     Size  Location     Type
 29512 ;;  col             1    3[BANK0 ] unsigned char 
 29513 ;;  row             1    2[BANK0 ] unsigned char 
 29514 ;; Return value:  Size  Location     Type
 29515 ;;                  1    wreg      void 
 29516 ;; Registers used:
 29517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29518 ;; Tracked objects:
 29519 ;;		On entry : 0/0
 29520 ;;		On exit  : 0/0
 29521 ;;		Unchanged: 0/0
 29522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29524 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29525 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29526 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29527 ;;Total ram usage:        4 bytes
 29528 ;; Hardware stack levels used:    1
 29529 ;; Hardware stack levels required when called:   10
 29530 ;; This function calls:
 29531 ;;		Nothing
 29532 ;; This function is called by:
 29533 ;;		_display_prepare
 29534 ;; This function uses a non-reentrant model
 29535 ;;
 29536                           
 29537                           	psect	text118
 29538  014DC2                     __ptext118:
 29539                           	opt stack 0
 29540  014DC2                     __display_clear:
 29541                           	opt stack 19
 29542                           
 29543                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 29544                           
 29545                           ; BSR set to: 0
 29546                           ;incstack = 0
 29547  014DC2  0E00               	movlw	0
 29548  014DC4  0100               	movlb	0	; () banked
 29549  014DC6  6F62               	movwf	__display_clear@row& (0+255),b
 29550  014DC8                     l17088:
 29551                           
 29552                           ; BSR set to: 0
 29553  014DC8  0E03               	movlw	3
 29554  014DCA  6562               	cpfsgt	__display_clear@row& (0+255),b
 29555  014DCC  D001               	goto	l1310
 29556  014DCE  0012               	return	
 29557  014DD0                     l1310:
 29558                           
 29559                           ; BSR set to: 0
 29560                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 29561                           
 29562                           ; BSR set to: 0
 29563  014DD0  0E00               	movlw	0
 29564  014DD2  6F63               	movwf	__display_clear@col& (0+255),b
 29565  014DD4                     l17094:
 29566                           
 29567                           ; BSR set to: 0
 29568  014DD4  0E13               	movlw	19
 29569  014DD6  6563               	cpfsgt	__display_clear@col& (0+255),b
 29570  014DD8  D001               	goto	l1312
 29571  014DDA  D016               	goto	u16490
 29572  014DDC                     l1312:
 29573                           
 29574                           ; BSR set to: 0
 29575                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 29576                           
 29577                           ; BSR set to: 0
 29578  014DDC  5162               	movf	__display_clear@row& (0+255),w,b
 29579  014DDE  0D14               	mullw	20
 29580  014DE0  0E34               	movlw	low _display_content
 29581  014DE2  6F60               	movwf	??__display_clear& (0+255),b
 29582  014DE4  0E02               	movlw	high _display_content
 29583  014DE6  6F61               	movwf	(??__display_clear+1)& (0+255),b
 29584  014DE8  50F3               	movf	prodl,w,c
 29585  014DEA  2760               	addwf	??__display_clear& (0+255),f,b
 29586  014DEC  50F4               	movf	prodh,w,c
 29587  014DEE  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 29588  014DF0  5163               	movf	__display_clear@col& (0+255),w,b
 29589  014DF2  0D01               	mullw	1
 29590  014DF4  50F3               	movf	prodl,w,c
 29591  014DF6  2560               	addwf	??__display_clear& (0+255),w,b
 29592  014DF8  6ED9               	movwf	fsr2l,c
 29593  014DFA  50F4               	movf	prodh,w,c
 29594  014DFC  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 29595  014DFE  6EDA               	movwf	fsr2h,c
 29596  014E00  0E20               	movlw	32
 29597  014E02  6EDF               	movwf	indf2,c
 29598                           
 29599                           ; BSR set to: 0
 29600  014E04  2B63               	incf	__display_clear@col& (0+255),f,b
 29601  014E06  D7E6               	goto	l17094
 29602  014E08                     u16490:
 29603                           
 29604                           ; BSR set to: 0
 29605                           
 29606                           ; BSR set to: 0
 29607  014E08  2B62               	incf	__display_clear@row& (0+255),f,b
 29608  014E0A  D7DE               	goto	l17088
 29609  014E0C                     __end_of__display_clear:
 29610                           	opt stack 0
 29611                           tblptru	equ	0xFF8
 29612                           tblptrh	equ	0xFF7
 29613                           tblptrl	equ	0xFF6
 29614                           tablat	equ	0xFF5
 29615                           prodh	equ	0xFF4
 29616                           prodl	equ	0xFF3
 29617                           intcon	equ	0xFF2
 29618                           postinc0	equ	0xFEE
 29619                           wreg	equ	0xFE8
 29620                           indf1	equ	0xFE7
 29621                           postinc1	equ	0xFE6
 29622                           postdec1	equ	0xFE5
 29623                           plusw1	equ	0xFE3
 29624                           fsr1h	equ	0xFE2
 29625                           fsr1l	equ	0xFE1
 29626                           indf2	equ	0xFDF
 29627                           postinc2	equ	0xFDE
 29628                           postdec2	equ	0xFDD
 29629                           plusw2	equ	0xFDB
 29630                           fsr2h	equ	0xFDA
 29631                           fsr2l	equ	0xFD9
 29632                           status	equ	0xFD8
 29633                           
 29634 ;; *************** function _adc_read_temperature *****************
 29635 ;; Defined at:
 29636 ;;		line 44 in file "adc.c"
 29637 ;; Parameters:    Size  Location     Type
 29638 ;;		None
 29639 ;; Auto vars:     Size  Location     Type
 29640 ;;  temperature     4   43[BANK0 ] float 
 29641 ;;  adc_result      2   41[BANK0 ] unsigned int 
 29642 ;; Return value:  Size  Location     Type
 29643 ;;                  1    wreg      void 
 29644 ;; Registers used:
 29645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29646 ;; Tracked objects:
 29647 ;;		On entry : 0/0
 29648 ;;		On exit  : 0/0
 29649 ;;		Unchanged: 0/0
 29650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29652 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29653 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29654 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29655 ;;Total ram usage:        8 bytes
 29656 ;; Hardware stack levels used:    1
 29657 ;; Hardware stack levels required when called:   11
 29658 ;; This function calls:
 29659 ;;		___fladd
 29660 ;;		___flmul
 29661 ;;		___flneg
 29662 ;;		___fltol
 29663 ;;		___xxtofl
 29664 ;; This function is called by:
 29665 ;;		_main
 29666 ;; This function uses a non-reentrant model
 29667 ;;
 29668                           
 29669                           	psect	text119
 29670  00F22E                     __ptext119:
 29671                           	opt stack 0
 29672  00F22E                     _adc_read_temperature:
 29673                           	opt stack 19
 29674                           
 29675                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 29676                           
 29677                           ; BSR set to: 0
 29678                           ;incstack = 0
 29679  00F22E  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 29680  00F232  0100               	movlb	0	; () banked
 29681  00F234  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 29682                           
 29683                           ; BSR set to: 0
 29684                           ;adc.c: 51: adc_result <<= 8;
 29685  00F236  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29686  00F238  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 29687  00F23A  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 29688                           
 29689                           ; BSR set to: 0
 29690                           ;adc.c: 52: adc_result |= ADRESL;
 29691  00F23C  50C3               	movf	4035,w,c	;volatile
 29692  00F23E  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 29693                           
 29694                           ; BSR set to: 0
 29695                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 29696  00F240  0102               	movlb	2	; () banked
 29697  00F242  511F               	movf	_params& (0+255),w,b
 29698  00F244  0D02               	mullw	2
 29699  00F246  0E20               	movlw	low (_params+1)
 29700  00F248  24F3               	addwf	prodl,w,c
 29701  00F24A  6ED9               	movwf	fsr2l,c
 29702  00F24C  0E02               	movlw	high (_params+1)
 29703  00F24E  20F4               	addwfc	prodh,w,c
 29704  00F250  6EDA               	movwf	fsr2h,c
 29705  00F252  0100               	movlb	0	; () banked
 29706  00F254  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29707  00F256  26DE               	addwf	postinc2,f,c
 29708  00F258  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 29709  00F25A  22DD               	addwfc	postdec2,f,c
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 29713  00F25C  0102               	movlb	2	; () banked
 29714  00F25E  511F               	movf	_params& (0+255),w,b
 29715  00F260  0D01               	mullw	1
 29716  00F262  0E24               	movlw	low (_params+5)
 29717  00F264  24F3               	addwf	prodl,w,c
 29718  00F266  6ED9               	movwf	fsr2l,c
 29719  00F268  0E02               	movlw	high (_params+5)
 29720  00F26A  20F4               	addwfc	prodh,w,c
 29721  00F26C  6EDA               	movwf	fsr2h,c
 29722  00F26E  2ADF               	incf	indf2,f,c
 29723                           
 29724                           ; BSR set to: 2
 29725                           ;adc.c: 59: ADCON0bits.GO = 1;
 29726  00F270  82C2               	bsf	4034,1,c	;volatile
 29727                           
 29728                           ; BSR set to: 2
 29729                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 29730  00F272  511F               	movf	_params& (0+255),w,b
 29731  00F274  0D01               	mullw	1
 29732  00F276  0E24               	movlw	low (_params+5)
 29733  00F278  24F3               	addwf	prodl,w,c
 29734  00F27A  6ED9               	movwf	fsr2l,c
 29735  00F27C  0E02               	movlw	high (_params+5)
 29736  00F27E  20F4               	addwfc	prodh,w,c
 29737  00F280  6EDA               	movwf	fsr2h,c
 29738  00F282  0E08               	movlw	8
 29739  00F284  18DE               	xorwf	postinc2,w,c
 29740  00F286  A4D8               	btfss	status,2,c
 29741  00F288  D0AF               	goto	l2840
 29742                           
 29743                           ; BSR set to: 2
 29744                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 29745  00F28A  511F               	movf	_params& (0+255),w,b
 29746  00F28C  0D02               	mullw	2
 29747  00F28E  0E20               	movlw	low (_params+1)
 29748  00F290  24F3               	addwf	prodl,w,c
 29749  00F292  6ED9               	movwf	fsr2l,c
 29750  00F294  0E02               	movlw	high (_params+1)
 29751  00F296  20F4               	addwfc	prodh,w,c
 29752  00F298  6EDA               	movwf	fsr2h,c
 29753  00F29A  CFDE F087          	movff	postinc2,??_adc_read_temperature
 29754  00F29E  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 29755  00F2A2  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 29756  00F2A6  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 29757  00F2AA  0100               	movlb	0	; () banked
 29758  00F2AC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 29759  00F2AE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 29760  00F2B0  0E00               	movlw	0
 29761  00F2B2  EC17  F081         	call	___xxtofl
 29762  00F2B6  C060  F06E         	movff	?___xxtofl,___flneg@f1
 29763  00F2BA  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 29764  00F2BE  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 29765  00F2C2  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 29766  00F2C6  ECB8  F0A9         	call	___flneg	;wreg free
 29767  00F2CA  C06E  F072         	movff	?___flneg,___fladd@b
 29768  00F2CE  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 29769  00F2D2  C070  F074         	movff	?___flneg+2,___fladd@b+2
 29770  00F2D6  C071  F075         	movff	?___flneg+3,___fladd@b+3
 29771  00F2DA  0E00               	movlw	0
 29772  00F2DC  0100               	movlb	0	; () banked
 29773  00F2DE  6F76               	movwf	___fladd@a& (0+255),b
 29774  00F2E0  0E90               	movlw	144
 29775  00F2E2  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29776  00F2E4  0EA4               	movlw	164
 29777  00F2E6  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29778  00F2E8  0E46               	movlw	70
 29779  00F2EA  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29780  00F2EC  ECC7  F067         	call	___fladd	;wreg free
 29781  00F2F0  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 29782  00F2F4  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 29783  00F2F8  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 29784  00F2FC  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 29785                           
 29786                           ;adc.c: 68: temperature *= 0.7405;
 29787  00F300  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 29788  00F304  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 29789  00F308  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 29790  00F30C  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 29791  00F310  0E68               	movlw	104
 29792  00F312  0100               	movlb	0	; () banked
 29793  00F314  6F72               	movwf	___flmul@a& (0+255),b
 29794  00F316  0E91               	movlw	145
 29795  00F318  6F73               	movwf	(___flmul@a+1)& (0+255),b
 29796  00F31A  0E3D               	movlw	61
 29797  00F31C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 29798  00F31E  0E3F               	movlw	63
 29799  00F320  6F75               	movwf	(___flmul@a+3)& (0+255),b
 29800  00F322  EC1E  F066         	call	___flmul	;wreg free
 29801  00F326  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 29802  00F32A  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 29803  00F32E  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 29804  00F332  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 29805                           
 29806                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 29807  00F336  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 29808  00F33A  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 29809  00F33E  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 29810  00F342  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 29811  00F346  EC62  F090         	call	___fltol	;wreg free
 29812  00F34A  0102               	movlb	2	; () banked
 29813  00F34C  511F               	movf	_params& (0+255),w,b
 29814  00F34E  0D02               	mullw	2
 29815  00F350  0E98               	movlw	low (_os+39)
 29816  00F352  24F3               	addwf	prodl,w,c
 29817  00F354  6ED9               	movwf	fsr2l,c
 29818  00F356  0E01               	movlw	high (_os+39)
 29819  00F358  20F4               	addwfc	prodh,w,c
 29820  00F35A  6EDA               	movwf	fsr2h,c
 29821  00F35C  0100               	movlb	0	; () banked
 29822  00F35E  C060  FFDE         	movff	?___fltol,postinc2
 29823  00F362  C061  FFDD         	movff	?___fltol+1,postdec2
 29824                           
 29825                           ; BSR set to: 0
 29826                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 29827  00F366  0102               	movlb	2	; () banked
 29828  00F368  511F               	movf	_params& (0+255),w,b
 29829  00F36A  0D02               	mullw	2
 29830  00F36C  0E20               	movlw	low (_params+1)
 29831  00F36E  24F3               	addwf	prodl,w,c
 29832  00F370  6ED9               	movwf	fsr2l,c
 29833  00F372  0E02               	movlw	high (_params+1)
 29834  00F374  20F4               	addwfc	prodh,w,c
 29835  00F376  6EDA               	movwf	fsr2h,c
 29836  00F378  0E00               	movlw	0
 29837  00F37A  6EDE               	movwf	postinc2,c
 29838  00F37C  0E00               	movlw	0
 29839  00F37E  6EDD               	movwf	postdec2,c
 29840                           
 29841                           ; BSR set to: 2
 29842                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 29843  00F380  511F               	movf	_params& (0+255),w,b
 29844  00F382  0D01               	mullw	1
 29845  00F384  0E24               	movlw	low (_params+5)
 29846  00F386  24F3               	addwf	prodl,w,c
 29847  00F388  6ED9               	movwf	fsr2l,c
 29848  00F38A  0E02               	movlw	high (_params+5)
 29849  00F38C  20F4               	addwfc	prodh,w,c
 29850  00F38E  6EDA               	movwf	fsr2h,c
 29851  00F390  0E00               	movlw	0
 29852  00F392  6EDF               	movwf	indf2,c
 29853                           
 29854                           ; BSR set to: 2
 29855                           ;adc.c: 78: if(os.fan_on)
 29856  00F394  0101               	movlb	1	; () banked
 29857  00F396  519F               	movf	(_os+46)& (0+255),w,b	;volatile
 29858  00F398  B4D8               	btfsc	status,2,c
 29859  00F39A  D013               	goto	l2837
 29860                           
 29861                           ; BSR set to: 1
 29862                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 29863  00F39C  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29864  00F39E  D006               	goto	u18120
 29865  00F3A0  0E60               	movlw	96
 29866  00F3A2  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29867  00F3A4  0E09               	movlw	9
 29868  00F3A6  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29869  00F3A8  B0D8               	btfsc	status,0,c
 29870  00F3AA  D01E               	goto	l2840
 29871  00F3AC                     u18120:
 29872                           
 29873                           ; BSR set to: 1
 29874  00F3AC  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29875  00F3AE  D006               	goto	u18130
 29876  00F3B0  0E60               	movlw	96
 29877  00F3B2  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29878  00F3B4  0E09               	movlw	9
 29879  00F3B6  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29880  00F3B8  B0D8               	btfsc	status,0,c
 29881  00F3BA  D016               	goto	l2840
 29882  00F3BC                     u18130:
 29883                           
 29884                           ; BSR set to: 1
 29885                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 29886  00F3BC  9C8B               	bcf	3979,6,c	;volatile
 29887                           
 29888                           ; BSR set to: 1
 29889                           ;adc.c: 83: os.fan_on = 0;
 29890  00F3BE  0E00               	movlw	0
 29891  00F3C0  D012               	goto	L39
 29892  00F3C2                     l2837:
 29893                           
 29894                           ; BSR set to: 1
 29895                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 29896                           
 29897                           ; BSR set to: 1
 29898  00F3C2  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29899  00F3C4  D006               	goto	u18140
 29900  00F3C6  0EC5               	movlw	197
 29901  00F3C8  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29902  00F3CA  0E09               	movlw	9
 29903  00F3CC  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29904  00F3CE  B0D8               	btfsc	status,0,c
 29905  00F3D0  D008               	goto	u18150
 29906  00F3D2                     u18140:
 29907                           
 29908                           ; BSR set to: 1
 29909  00F3D2  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29910  00F3D4  D009               	goto	l2840
 29911  00F3D6  0EC5               	movlw	197
 29912  00F3D8  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29913  00F3DA  0E09               	movlw	9
 29914  00F3DC  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29915  00F3DE  A0D8               	btfss	status,0,c
 29916  00F3E0  D003               	goto	l2840
 29917  00F3E2                     u18150:
 29918                           
 29919                           ; BSR set to: 1
 29920                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 29921  00F3E2  8C8B               	bsf	3979,6,c	;volatile
 29922                           
 29923                           ; BSR set to: 1
 29924                           ;adc.c: 91: os.fan_on = 1;
 29925  00F3E4  0E01               	movlw	1
 29926  00F3E6                     L39:
 29927  00F3E6  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 29928  00F3E8                     l2840:
 29929                           
 29930                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 29931                           
 29932                           ; BSR set to: 1
 29933                           
 29934                           ; BSR set to: 1
 29935  00F3E8  0102               	movlb	2	; () banked
 29936  00F3EA  511F               	movf	_params& (0+255),w,b
 29937  00F3EC  A4D8               	btfss	status,2,c
 29938  00F3EE  D007               	goto	l2843
 29939                           
 29940                           ; BSR set to: 2
 29941                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 29942  00F3F0  50C2               	movf	4034,w,c	;volatile
 29943  00F3F2  0BC3               	andlw	-61
 29944  00F3F4  092C               	iorlw	44
 29945  00F3F6  6EC2               	movwf	4034,c	;volatile
 29946                           
 29947                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 29948  00F3F8  0E01               	movlw	1
 29949  00F3FA  6F1F               	movwf	_params& (0+255),b
 29950                           
 29951                           ;adc.c: 101: }
 29952  00F3FC  0012               	return	
 29953  00F3FE                     l2843:
 29954                           
 29955                           ; BSR set to: 2
 29956                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 29957                           
 29958                           ; BSR set to: 2
 29959  00F3FE  50C2               	movf	4034,w,c	;volatile
 29960  00F400  0BC3               	andlw	-61
 29961  00F402  0924               	iorlw	36
 29962  00F404  6EC2               	movwf	4034,c	;volatile
 29963                           
 29964                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 29965  00F406  0E00               	movlw	0
 29966  00F408  6F1F               	movwf	_params& (0+255),b
 29967  00F40A  0012               	return	
 29968  00F40C                     __end_of_adc_read_temperature:
 29969                           	opt stack 0
 29970                           tblptru	equ	0xFF8
 29971                           tblptrh	equ	0xFF7
 29972                           tblptrl	equ	0xFF6
 29973                           tablat	equ	0xFF5
 29974                           prodh	equ	0xFF4
 29975                           prodl	equ	0xFF3
 29976                           intcon	equ	0xFF2
 29977                           postinc0	equ	0xFEE
 29978                           wreg	equ	0xFE8
 29979                           indf1	equ	0xFE7
 29980                           postinc1	equ	0xFE6
 29981                           postdec1	equ	0xFE5
 29982                           plusw1	equ	0xFE3
 29983                           fsr1h	equ	0xFE2
 29984                           fsr1l	equ	0xFE1
 29985                           indf2	equ	0xFDF
 29986                           postinc2	equ	0xFDE
 29987                           postdec2	equ	0xFDD
 29988                           plusw2	equ	0xFDB
 29989                           fsr2h	equ	0xFDA
 29990                           fsr2l	equ	0xFD9
 29991                           status	equ	0xFD8
 29992                           
 29993 ;; *************** function ___flneg *****************
 29994 ;; Defined at:
 29995 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 29996 ;; Parameters:    Size  Location     Type
 29997 ;;  f1              4   14[BANK0 ] void 
 29998 ;; Auto vars:     Size  Location     Type
 29999 ;;		None
 30000 ;; Return value:  Size  Location     Type
 30001 ;;                  4   14[BANK0 ] void 
 30002 ;; Registers used:
 30003 ;;		wreg, status,2, status,0
 30004 ;; Tracked objects:
 30005 ;;		On entry : 0/0
 30006 ;;		On exit  : 0/0
 30007 ;;		Unchanged: 0/0
 30008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30013 ;;Total ram usage:        4 bytes
 30014 ;; Hardware stack levels used:    1
 30015 ;; Hardware stack levels required when called:   10
 30016 ;; This function calls:
 30017 ;;		Nothing
 30018 ;; This function is called by:
 30019 ;;		_adc_read_temperature
 30020 ;; This function uses a non-reentrant model
 30021 ;;
 30022                           
 30023                           	psect	text120
 30024  015370                     __ptext120:
 30025                           	opt stack 0
 30026  015370                     ___flneg:
 30027                           	opt stack 19
 30028                           
 30029                           ; BSR set to: 2
 30030                           ;incstack = 0
 30031  015370  0100               	movlb	0	; () banked
 30032  015372  516E               	movf	___flneg@f1& (0+255),w,b
 30033  015374  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 30034  015376  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 30035  015378  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 30036  01537A  B4D8               	btfsc	status,2,c
 30037  01537C  D008               	goto	l3237
 30038                           
 30039                           ; BSR set to: 0
 30040  01537E  0E00               	movlw	0
 30041  015380  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 30042  015382  0E00               	movlw	0
 30043  015384  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 30044  015386  0E00               	movlw	0
 30045  015388  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 30046  01538A  0E80               	movlw	128
 30047  01538C  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 30048  01538E                     l3237:
 30049                           
 30050                           ; BSR set to: 0
 30051                           
 30052                           ; BSR set to: 0
 30053  01538E  C06E  F06E         	movff	___flneg@f1,?___flneg
 30054  015392  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 30055  015396  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 30056  01539A  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 30057  01539E  0012               	return	
 30058  0153A0                     __end_of___flneg:
 30059                           	opt stack 0
 30060                           tblptru	equ	0xFF8
 30061                           tblptrh	equ	0xFF7
 30062                           tblptrl	equ	0xFF6
 30063                           tablat	equ	0xFF5
 30064                           prodh	equ	0xFF4
 30065                           prodl	equ	0xFF3
 30066                           intcon	equ	0xFF2
 30067                           postinc0	equ	0xFEE
 30068                           wreg	equ	0xFE8
 30069                           indf1	equ	0xFE7
 30070                           postinc1	equ	0xFE6
 30071                           postdec1	equ	0xFE5
 30072                           plusw1	equ	0xFE3
 30073                           fsr1h	equ	0xFE2
 30074                           fsr1l	equ	0xFE1
 30075                           indf2	equ	0xFDF
 30076                           postinc2	equ	0xFDE
 30077                           postdec2	equ	0xFDD
 30078                           plusw2	equ	0xFDB
 30079                           fsr2h	equ	0xFDA
 30080                           fsr2l	equ	0xFD9
 30081                           status	equ	0xFD8
 30082                           
 30083 ;; *************** function ___fladd *****************
 30084 ;; Defined at:
 30085 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 30086 ;; Parameters:    Size  Location     Type
 30087 ;;  b               4   18[BANK0 ] void 
 30088 ;;  a               4   22[BANK0 ] void 
 30089 ;; Auto vars:     Size  Location     Type
 30090 ;;  grs             1   37[BANK0 ] unsigned char 
 30091 ;;  bexp            1   36[BANK0 ] unsigned char 
 30092 ;;  aexp            1   35[BANK0 ] unsigned char 
 30093 ;;  signs           1   34[BANK0 ] unsigned char 
 30094 ;; Return value:  Size  Location     Type
 30095 ;;                  4   18[BANK0 ] unsigned char 
 30096 ;; Registers used:
 30097 ;;		wreg, status,2, status,0
 30098 ;; Tracked objects:
 30099 ;;		On entry : 0/0
 30100 ;;		On exit  : 0/0
 30101 ;;		Unchanged: 0/0
 30102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30103 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30104 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30105 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30106 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30107 ;;Total ram usage:       20 bytes
 30108 ;; Hardware stack levels used:    1
 30109 ;; Hardware stack levels required when called:   10
 30110 ;; This function calls:
 30111 ;;		Nothing
 30112 ;; This function is called by:
 30113 ;;		_motor_divide_jump_to_nearest
 30114 ;;		_adc_read_temperature
 30115 ;; This function uses a non-reentrant model
 30116 ;;
 30117                           
 30118                           	psect	text121
 30119  00CF8E                     __ptext121:
 30120                           	opt stack 0
 30121  00CF8E                     ___fladd:
 30122                           	opt stack 18
 30123                           
 30124                           ; BSR set to: 0
 30125                           ;incstack = 0
 30126  00CF8E  0100               	movlb	0	; () banked
 30127  00CF90  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30128  00CF92  0B80               	andlw	128
 30129  00CF94  6F82               	movwf	___fladd@signs& (0+255),b
 30130  00CF96  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30131  00CF98  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 30132  00CF9A  6F84               	movwf	___fladd@bexp& (0+255),b
 30133                           
 30134                           ; BSR set to: 0
 30135  00CF9C  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 30136                           
 30137                           ; BSR set to: 0
 30138  00CF9E  8184               	bsf	___fladd@bexp& (0+255),0,b
 30139                           
 30140                           ; BSR set to: 0
 30141                           
 30142                           ; BSR set to: 0
 30143  00CFA0  5184               	movf	___fladd@bexp& (0+255),w,b
 30144  00CFA2  B4D8               	btfsc	status,2,c
 30145  00CFA4  D00D               	goto	l3477
 30146                           
 30147                           ; BSR set to: 0
 30148  00CFA6  2984               	incf	___fladd@bexp& (0+255),w,b
 30149  00CFA8  A4D8               	btfss	status,2,c
 30150  00CFAA  D008               	goto	l3478
 30151                           
 30152                           ; BSR set to: 0
 30153  00CFAC  0E00               	movlw	0
 30154  00CFAE  6F72               	movwf	___fladd@b& (0+255),b
 30155  00CFB0  0E00               	movlw	0
 30156  00CFB2  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30157  00CFB4  0E00               	movlw	0
 30158  00CFB6  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30159  00CFB8  0E00               	movlw	0
 30160  00CFBA  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30161  00CFBC                     l3478:
 30162                           
 30163                           ; BSR set to: 0
 30164                           
 30165                           ; BSR set to: 0
 30166  00CFBC  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30167  00CFBE  D006               	goto	L40
 30168  00CFC0                     l3477:
 30169                           
 30170                           ; BSR set to: 0
 30171                           
 30172                           ; BSR set to: 0
 30173  00CFC0  0E00               	movlw	0
 30174  00CFC2  6F72               	movwf	___fladd@b& (0+255),b
 30175  00CFC4  0E00               	movlw	0
 30176  00CFC6  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30177  00CFC8  0E00               	movlw	0
 30178  00CFCA  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30179  00CFCC                     L40:
 30180  00CFCC  0E00               	movlw	0
 30181  00CFCE  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30182                           
 30183                           ; BSR set to: 0
 30184                           
 30185                           ; BSR set to: 0
 30186  00CFD0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30187  00CFD2  0B80               	andlw	128
 30188  00CFD4  6F83               	movwf	___fladd@aexp& (0+255),b
 30189                           
 30190                           ; BSR set to: 0
 30191  00CFD6  5182               	movf	___fladd@signs& (0+255),w,b
 30192  00CFD8  1983               	xorwf	___fladd@aexp& (0+255),w,b
 30193  00CFDA  A4D8               	btfss	status,2,c
 30194                           
 30195                           ; BSR set to: 0
 30196  00CFDC  8D82               	bsf	___fladd@signs& (0+255),6,b
 30197                           
 30198                           ; BSR set to: 0
 30199                           
 30200                           ; BSR set to: 0
 30201  00CFDE  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30202  00CFE0  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 30203  00CFE2  6F83               	movwf	___fladd@aexp& (0+255),b
 30204                           
 30205                           ; BSR set to: 0
 30206  00CFE4  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 30207                           
 30208                           ; BSR set to: 0
 30209  00CFE6  8183               	bsf	___fladd@aexp& (0+255),0,b
 30210                           
 30211                           ; BSR set to: 0
 30212                           
 30213                           ; BSR set to: 0
 30214  00CFE8  5183               	movf	___fladd@aexp& (0+255),w,b
 30215  00CFEA  B4D8               	btfsc	status,2,c
 30216  00CFEC  D00D               	goto	l3482
 30217                           
 30218                           ; BSR set to: 0
 30219  00CFEE  2983               	incf	___fladd@aexp& (0+255),w,b
 30220  00CFF0  A4D8               	btfss	status,2,c
 30221  00CFF2  D008               	goto	l3483
 30222                           
 30223                           ; BSR set to: 0
 30224  00CFF4  0E00               	movlw	0
 30225  00CFF6  6F76               	movwf	___fladd@a& (0+255),b
 30226  00CFF8  0E00               	movlw	0
 30227  00CFFA  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30228  00CFFC  0E00               	movlw	0
 30229  00CFFE  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30230  00D000  0E00               	movlw	0
 30231  00D002  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30232  00D004                     l3483:
 30233                           
 30234                           ; BSR set to: 0
 30235                           
 30236                           ; BSR set to: 0
 30237  00D004  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 30238  00D006  D006               	goto	L41
 30239  00D008                     l3482:
 30240                           
 30241                           ; BSR set to: 0
 30242                           
 30243                           ; BSR set to: 0
 30244  00D008  0E00               	movlw	0
 30245  00D00A  6F76               	movwf	___fladd@a& (0+255),b
 30246  00D00C  0E00               	movlw	0
 30247  00D00E  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30248  00D010  0E00               	movlw	0
 30249  00D012  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30250  00D014                     L41:
 30251  00D014  0E00               	movlw	0
 30252  00D016  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30253                           
 30254                           ; BSR set to: 0
 30255                           
 30256                           ; BSR set to: 0
 30257  00D018  5184               	movf	___fladd@bexp& (0+255),w,b
 30258  00D01A  5D83               	subwf	___fladd@aexp& (0+255),w,b
 30259  00D01C  B0D8               	btfsc	status,0,c
 30260  00D01E  D022               	goto	l3485
 30261                           
 30262                           ; BSR set to: 0
 30263  00D020  AD82               	btfss	___fladd@signs& (0+255),6,b
 30264  00D022  D002               	goto	l3486
 30265                           
 30266                           ; BSR set to: 0
 30267  00D024  0E80               	movlw	128
 30268  00D026  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30269  00D028                     l3486:
 30270                           
 30271                           ; BSR set to: 0
 30272                           
 30273                           ; BSR set to: 0
 30274  00D028  C084  F085         	movff	___fladd@bexp,___fladd@grs
 30275                           
 30276                           ; BSR set to: 0
 30277  00D02C  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30278                           
 30279                           ; BSR set to: 0
 30280  00D030  C085  F083         	movff	___fladd@grs,___fladd@aexp
 30281                           
 30282                           ; BSR set to: 0
 30283  00D034  C072  F085         	movff	___fladd@b,___fladd@grs
 30284                           
 30285                           ; BSR set to: 0
 30286  00D038  C076  F072         	movff	___fladd@a,___fladd@b
 30287                           
 30288                           ; BSR set to: 0
 30289  00D03C  C085  F076         	movff	___fladd@grs,___fladd@a
 30290                           
 30291                           ; BSR set to: 0
 30292  00D040  C073  F085         	movff	___fladd@b+1,___fladd@grs
 30293                           
 30294                           ; BSR set to: 0
 30295  00D044  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 30296                           
 30297                           ; BSR set to: 0
 30298  00D048  C085  F077         	movff	___fladd@grs,___fladd@a+1
 30299                           
 30300                           ; BSR set to: 0
 30301  00D04C  C074  F085         	movff	___fladd@b+2,___fladd@grs
 30302                           
 30303                           ; BSR set to: 0
 30304  00D050  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 30305                           
 30306                           ; BSR set to: 0
 30307  00D054  C085  F078         	movff	___fladd@grs,___fladd@a+2
 30308                           
 30309                           ; BSR set to: 0
 30310  00D058  C075  F085         	movff	___fladd@b+3,___fladd@grs
 30311                           
 30312                           ; BSR set to: 0
 30313  00D05C  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 30314                           
 30315                           ; BSR set to: 0
 30316  00D060  C085  F079         	movff	___fladd@grs,___fladd@a+3
 30317  00D064                     l3485:
 30318                           
 30319                           ; BSR set to: 0
 30320                           
 30321                           ; BSR set to: 0
 30322  00D064  0E00               	movlw	0
 30323  00D066  6F85               	movwf	___fladd@grs& (0+255),b
 30324                           
 30325                           ; BSR set to: 0
 30326  00D068  5184               	movf	___fladd@bexp& (0+255),w,b
 30327  00D06A  6F7A               	movwf	??___fladd& (0+255),b
 30328  00D06C  6B7B               	clrf	(??___fladd+1)& (0+255),b
 30329  00D06E  1F7A               	comf	??___fladd& (0+255),f,b
 30330  00D070  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30331  00D072  4B7A               	infsnz	??___fladd& (0+255),f,b
 30332  00D074  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 30333  00D076  5183               	movf	___fladd@aexp& (0+255),w,b
 30334  00D078  6F7C               	movwf	(??___fladd+2)& (0+255),b
 30335  00D07A  6B7D               	clrf	(??___fladd+3)& (0+255),b
 30336  00D07C  517A               	movf	??___fladd& (0+255),w,b
 30337  00D07E  277C               	addwf	(??___fladd+2)& (0+255),f,b
 30338  00D080  517B               	movf	(??___fladd+1)& (0+255),w,b
 30339  00D082  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30340  00D084  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 30341  00D086  D02C               	goto	l3489
 30342  00D088  517D               	movf	(??___fladd+3)& (0+255),w,b
 30343  00D08A  E104               	bnz	u15360
 30344  00D08C  0E1A               	movlw	26
 30345  00D08E  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 30346  00D090  A0D8               	btfss	status,0,c
 30347  00D092  D026               	goto	l3489
 30348  00D094                     u15360:
 30349                           
 30350                           ; BSR set to: 0
 30351  00D094  5172               	movf	___fladd@b& (0+255),w,b
 30352  00D096  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30353  00D098  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30354  00D09A  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30355  00D09C  B4D8               	btfsc	status,2,c
 30356  00D09E  D002               	goto	u15370
 30357  00D0A0  0E01               	movlw	1
 30358  00D0A2  D001               	goto	u15380
 30359  00D0A4                     u15370:
 30360  00D0A4  0E00               	movlw	0
 30361  00D0A6                     u15380:
 30362  00D0A6  6F85               	movwf	___fladd@grs& (0+255),b
 30363                           
 30364                           ; BSR set to: 0
 30365  00D0A8  0E00               	movlw	0
 30366  00D0AA  6F72               	movwf	___fladd@b& (0+255),b
 30367  00D0AC  0E00               	movlw	0
 30368  00D0AE  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30369  00D0B0  0E00               	movlw	0
 30370  00D0B2  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30371  00D0B4  0E00               	movlw	0
 30372  00D0B6  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30373                           
 30374                           ; BSR set to: 0
 30375  00D0B8  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30376  00D0BC  D015               	goto	u15410
 30377  00D0BE                     l3490:
 30378                           
 30379                           ; BSR set to: 0
 30380  00D0BE  A185               	btfss	___fladd@grs& (0+255),0,b
 30381  00D0C0  D005               	goto	l3491
 30382                           
 30383                           ; BSR set to: 0
 30384  00D0C2  90D8               	bcf	status,0,c
 30385  00D0C4  3185               	rrcf	___fladd@grs& (0+255),w,b
 30386  00D0C6  0901               	iorlw	1
 30387  00D0C8  6F85               	movwf	___fladd@grs& (0+255),b
 30388  00D0CA  D002               	goto	l3492
 30389  00D0CC                     l3491:
 30390                           
 30391                           ; BSR set to: 0
 30392                           
 30393                           ; BSR set to: 0
 30394  00D0CC  90D8               	bcf	status,0,c
 30395  00D0CE  3385               	rrcf	___fladd@grs& (0+255),f,b
 30396  00D0D0                     l3492:
 30397                           
 30398                           ; BSR set to: 0
 30399                           
 30400                           ; BSR set to: 0
 30401  00D0D0  B172               	btfsc	___fladd@b& (0+255),0,b
 30402                           
 30403                           ; BSR set to: 0
 30404  00D0D2  8F85               	bsf	___fladd@grs& (0+255),7,b
 30405                           
 30406                           ; BSR set to: 0
 30407                           
 30408                           ; BSR set to: 0
 30409  00D0D4  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30410  00D0D6  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30411  00D0D8  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30412  00D0DA  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30413  00D0DC  3372               	rrcf	___fladd@b& (0+255),f,b
 30414                           
 30415                           ; BSR set to: 0
 30416  00D0DE  2B84               	incf	___fladd@bexp& (0+255),f,b
 30417  00D0E0                     l3489:
 30418                           
 30419                           ; BSR set to: 0
 30420  00D0E0  5183               	movf	___fladd@aexp& (0+255),w,b
 30421  00D0E2  5D84               	subwf	___fladd@bexp& (0+255),w,b
 30422  00D0E4  A0D8               	btfss	status,0,c
 30423  00D0E6  D7EB               	goto	l3490
 30424  00D0E8                     u15410:
 30425                           
 30426                           ; BSR set to: 0
 30427                           
 30428                           ; BSR set to: 0
 30429  00D0E8  BD82               	btfsc	___fladd@signs& (0+255),6,b
 30430  00D0EA  D028               	goto	l3495
 30431                           
 30432                           ; BSR set to: 0
 30433  00D0EC  5184               	movf	___fladd@bexp& (0+255),w,b
 30434  00D0EE  A4D8               	btfss	status,2,c
 30435  00D0F0  D009               	goto	l3496
 30436                           
 30437                           ; BSR set to: 0
 30438  00D0F2  0E00               	movlw	0
 30439  00D0F4  6F72               	movwf	?___fladd& (0+255),b
 30440  00D0F6  0E00               	movlw	0
 30441  00D0F8  6F73               	movwf	(?___fladd+1)& (0+255),b
 30442  00D0FA  0E00               	movlw	0
 30443  00D0FC  6F74               	movwf	(?___fladd+2)& (0+255),b
 30444  00D0FE  0E00               	movlw	0
 30445  00D100  6F75               	movwf	(?___fladd+3)& (0+255),b
 30446                           
 30447                           ; BSR set to: 0
 30448  00D102  0012               	return	
 30449  00D104                     l3496:
 30450                           
 30451                           ; BSR set to: 0
 30452                           
 30453                           ; BSR set to: 0
 30454  00D104  5176               	movf	___fladd@a& (0+255),w,b
 30455  00D106  2772               	addwf	___fladd@b& (0+255),f,b
 30456  00D108  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30457  00D10A  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30458  00D10C  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30459  00D10E  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30460  00D110  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30461  00D112  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30462                           
 30463                           ; BSR set to: 0
 30464  00D114  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30465  00D116  D082               	goto	u15540
 30466                           
 30467                           ; BSR set to: 0
 30468  00D118  A185               	btfss	___fladd@grs& (0+255),0,b
 30469  00D11A  D005               	goto	l3499
 30470                           
 30471                           ; BSR set to: 0
 30472  00D11C  90D8               	bcf	status,0,c
 30473  00D11E  3185               	rrcf	___fladd@grs& (0+255),w,b
 30474  00D120  0901               	iorlw	1
 30475  00D122  6F85               	movwf	___fladd@grs& (0+255),b
 30476  00D124  D002               	goto	l3500
 30477  00D126                     l3499:
 30478                           
 30479                           ; BSR set to: 0
 30480                           
 30481                           ; BSR set to: 0
 30482  00D126  90D8               	bcf	status,0,c
 30483  00D128  3385               	rrcf	___fladd@grs& (0+255),f,b
 30484  00D12A                     l3500:
 30485                           
 30486                           ; BSR set to: 0
 30487                           
 30488                           ; BSR set to: 0
 30489  00D12A  B172               	btfsc	___fladd@b& (0+255),0,b
 30490                           
 30491                           ; BSR set to: 0
 30492  00D12C  8F85               	bsf	___fladd@grs& (0+255),7,b
 30493                           
 30494                           ; BSR set to: 0
 30495                           
 30496                           ; BSR set to: 0
 30497  00D12E  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30498  00D130  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30499  00D132  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30500  00D134  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30501  00D136  3372               	rrcf	___fladd@b& (0+255),f,b
 30502                           
 30503                           ; BSR set to: 0
 30504  00D138  2B84               	incf	___fladd@bexp& (0+255),f,b
 30505                           
 30506                           ; BSR set to: 0
 30507  00D13A  D070               	goto	u15540
 30508  00D13C                     l3495:
 30509                           
 30510                           ; BSR set to: 0
 30511                           
 30512                           ; BSR set to: 0
 30513  00D13C  5176               	movf	___fladd@a& (0+255),w,b
 30514  00D13E  5D72               	subwf	___fladd@b& (0+255),w,b
 30515  00D140  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30516  00D142  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 30517  00D144  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30518  00D146  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 30519  00D148  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30520  00D14A  0A80               	xorlw	128
 30521  00D14C  6F7A               	movwf	??___fladd& (0+255),b
 30522  00D14E  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30523  00D150  0A80               	xorlw	128
 30524  00D152  597A               	subwfb	??___fladd& (0+255),w,b
 30525  00D154  B0D8               	btfsc	status,0,c
 30526  00D156  D036               	goto	l3503
 30527                           
 30528                           ; BSR set to: 0
 30529  00D158  C072  F07A         	movff	___fladd@b,??___fladd
 30530  00D15C  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30531  00D160  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30532  00D164  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30533  00D168  1F7A               	comf	??___fladd& (0+255),f,b
 30534  00D16A  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30535  00D16C  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 30536  00D16E  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 30537  00D170  2B7A               	incf	??___fladd& (0+255),f,b
 30538  00D172  0E00               	movlw	0
 30539  00D174  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 30540  00D176  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 30541  00D178  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30542  00D17A  5176               	movf	___fladd@a& (0+255),w,b
 30543  00D17C  257A               	addwf	??___fladd& (0+255),w,b
 30544  00D17E  6F7E               	movwf	(??___fladd+4)& (0+255),b
 30545  00D180  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30546  00D182  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 30547  00D184  6F7F               	movwf	(??___fladd+5)& (0+255),b
 30548  00D186  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30549  00D188  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 30550  00D18A  6F80               	movwf	(??___fladd+6)& (0+255),b
 30551  00D18C  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30552  00D18E  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 30553  00D190  6F81               	movwf	(??___fladd+7)& (0+255),b
 30554  00D192  0EFF               	movlw	255
 30555  00D194  257E               	addwf	(??___fladd+4)& (0+255),w,b
 30556  00D196  6F72               	movwf	___fladd@b& (0+255),b
 30557  00D198  0EFF               	movlw	255
 30558  00D19A  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 30559  00D19C  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30560  00D19E  0EFF               	movlw	255
 30561  00D1A0  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 30562  00D1A2  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30563  00D1A4  0EFF               	movlw	255
 30564  00D1A6  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 30565  00D1A8  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30566  00D1AA  0E80               	movlw	128
 30567  00D1AC  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30568                           
 30569                           ; BSR set to: 0
 30570  00D1AE  6D85               	negf	___fladd@grs& (0+255),b
 30571                           
 30572                           ; BSR set to: 0
 30573  00D1B0  5185               	movf	___fladd@grs& (0+255),w,b
 30574  00D1B2  A4D8               	btfss	status,2,c
 30575  00D1B4  D00F               	goto	l3505
 30576                           
 30577                           ; BSR set to: 0
 30578  00D1B6  0E01               	movlw	1
 30579  00D1B8  2772               	addwf	___fladd@b& (0+255),f,b
 30580  00D1BA  0E00               	movlw	0
 30581  00D1BC  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30582  00D1BE  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30583  00D1C0  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30584                           
 30585                           ; BSR set to: 0
 30586  00D1C2  D008               	goto	l3505
 30587  00D1C4                     l3503:
 30588                           
 30589                           ; BSR set to: 0
 30590                           
 30591                           ; BSR set to: 0
 30592  00D1C4  5176               	movf	___fladd@a& (0+255),w,b
 30593  00D1C6  5F72               	subwf	___fladd@b& (0+255),f,b
 30594  00D1C8  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30595  00D1CA  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 30596  00D1CC  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30597  00D1CE  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 30598  00D1D0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30599  00D1D2  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 30600  00D1D4                     l3505:
 30601                           
 30602                           ; BSR set to: 0
 30603  00D1D4  5172               	movf	___fladd@b& (0+255),w,b
 30604  00D1D6  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30605  00D1D8  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30606  00D1DA  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30607  00D1DC  A4D8               	btfss	status,2,c
 30608  00D1DE  D01C               	goto	l3512
 30609                           
 30610                           ; BSR set to: 0
 30611  00D1E0  5185               	movf	___fladd@grs& (0+255),w,b
 30612  00D1E2  A4D8               	btfss	status,2,c
 30613  00D1E4  D019               	goto	l3512
 30614                           
 30615                           ; BSR set to: 0
 30616  00D1E6  0E00               	movlw	0
 30617  00D1E8  6F72               	movwf	?___fladd& (0+255),b
 30618  00D1EA  0E00               	movlw	0
 30619  00D1EC  6F73               	movwf	(?___fladd+1)& (0+255),b
 30620  00D1EE  0E00               	movlw	0
 30621  00D1F0  6F74               	movwf	(?___fladd+2)& (0+255),b
 30622  00D1F2  0E00               	movlw	0
 30623  00D1F4  6F75               	movwf	(?___fladd+3)& (0+255),b
 30624                           
 30625                           ; BSR set to: 0
 30626  00D1F6  0012               	return	
 30627  00D1F8                     
 30628                           ; BSR set to: 0
 30629                           
 30630                           ; BSR set to: 0
 30631  00D1F8  90D8               	bcf	status,0,c
 30632  00D1FA  3772               	rlcf	___fladd@b& (0+255),f,b
 30633  00D1FC  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 30634  00D1FE  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 30635  00D200  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 30636                           
 30637                           ; BSR set to: 0
 30638  00D202  BF85               	btfsc	___fladd@grs& (0+255),7,b
 30639                           
 30640                           ; BSR set to: 0
 30641  00D204  8172               	bsf	___fladd@b& (0+255),0,b
 30642                           
 30643                           ; BSR set to: 0
 30644                           
 30645                           ; BSR set to: 0
 30646  00D206  A185               	btfss	___fladd@grs& (0+255),0,b
 30647  00D208  D002               	goto	l3510
 30648                           
 30649                           ; BSR set to: 0
 30650  00D20A  80D8               	bsf	status,0,c
 30651  00D20C  D001               	goto	L42
 30652  00D20E                     l3510:
 30653                           
 30654                           ; BSR set to: 0
 30655                           
 30656                           ; BSR set to: 0
 30657  00D20E  90D8               	bcf	status,0,c
 30658  00D210                     L42:
 30659  00D210  3785               	rlcf	___fladd@grs& (0+255),f,b
 30660                           
 30661                           ; BSR set to: 0
 30662                           
 30663                           ; BSR set to: 0
 30664  00D212  5184               	movf	___fladd@bexp& (0+255),w,b
 30665  00D214  A4D8               	btfss	status,2,c
 30666                           
 30667                           ; BSR set to: 0
 30668  00D216  0784               	decf	___fladd@bexp& (0+255),f,b
 30669  00D218                     l3512:
 30670                           
 30671                           ; BSR set to: 0
 30672                           
 30673                           ; BSR set to: 0
 30674                           
 30675                           ; BSR set to: 0
 30676  00D218  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 30677  00D21A  D7EE               	goto	l3508
 30678  00D21C                     u15540:
 30679                           
 30680                           ; BSR set to: 0
 30681                           
 30682                           ; BSR set to: 0
 30683                           
 30684                           ; BSR set to: 0
 30685  00D21C  0E00               	movlw	0
 30686  00D21E  6F83               	movwf	___fladd@aexp& (0+255),b
 30687                           
 30688                           ; BSR set to: 0
 30689  00D220  AF85               	btfss	___fladd@grs& (0+255),7,b
 30690  00D222  D00A               	goto	l3517
 30691                           
 30692                           ; BSR set to: 0
 30693  00D224  C085  F07A         	movff	___fladd@grs,??___fladd
 30694  00D228  0E7F               	movlw	127
 30695  00D22A  177A               	andwf	??___fladd& (0+255),f,b
 30696  00D22C  A4D8               	btfss	status,2,c
 30697  00D22E  D002               	goto	u15570
 30698                           
 30699                           ; BSR set to: 0
 30700                           
 30701                           ; BSR set to: 0
 30702  00D230  A172               	btfss	___fladd@b& (0+255),0,b
 30703  00D232  D002               	goto	l3517
 30704  00D234                     u15570:
 30705                           
 30706                           ; BSR set to: 0
 30707  00D234  0E01               	movlw	1
 30708  00D236  6F83               	movwf	___fladd@aexp& (0+255),b
 30709  00D238                     l3517:
 30710                           
 30711                           ; BSR set to: 0
 30712                           
 30713                           ; BSR set to: 0
 30714                           
 30715                           ; BSR set to: 0
 30716  00D238  5183               	movf	___fladd@aexp& (0+255),w,b
 30717  00D23A  B4D8               	btfsc	status,2,c
 30718  00D23C  D020               	goto	l3520
 30719                           
 30720                           ; BSR set to: 0
 30721  00D23E  0E01               	movlw	1
 30722  00D240  2772               	addwf	___fladd@b& (0+255),f,b
 30723  00D242  0E00               	movlw	0
 30724  00D244  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30725  00D246  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30726  00D248  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30727                           
 30728                           ; BSR set to: 0
 30729  00D24A  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30730  00D24C  D018               	goto	l3520
 30731                           
 30732                           ; BSR set to: 0
 30733  00D24E  C072  F07A         	movff	___fladd@b,??___fladd
 30734  00D252  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30735  00D256  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30736  00D25A  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30737  00D25E  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 30738  00D260  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 30739  00D262  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 30740  00D264  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 30741  00D266  337A               	rrcf	??___fladd& (0+255),f,b
 30742  00D268  C07A  F072         	movff	??___fladd,___fladd@b
 30743  00D26C  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 30744  00D270  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 30745  00D274  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 30746  00D278  2984               	incf	___fladd@bexp& (0+255),w,b
 30747  00D27A  A4D8               	btfss	status,2,c
 30748                           
 30749                           ; BSR set to: 0
 30750  00D27C  2B84               	incf	___fladd@bexp& (0+255),f,b
 30751  00D27E                     l3520:
 30752                           
 30753                           ; BSR set to: 0
 30754                           
 30755                           ; BSR set to: 0
 30756                           
 30757                           ; BSR set to: 0
 30758                           
 30759                           ; BSR set to: 0
 30760  00D27E  2984               	incf	___fladd@bexp& (0+255),w,b
 30761  00D280  B4D8               	btfsc	status,2,c
 30762  00D282  D003               	goto	u15620
 30763                           
 30764                           ; BSR set to: 0
 30765  00D284  5184               	movf	___fladd@bexp& (0+255),w,b
 30766  00D286  A4D8               	btfss	status,2,c
 30767  00D288  D00D               	goto	l3524
 30768  00D28A                     u15620:
 30769                           
 30770                           ; BSR set to: 0
 30771                           
 30772                           ; BSR set to: 0
 30773  00D28A  0E00               	movlw	0
 30774  00D28C  6F72               	movwf	___fladd@b& (0+255),b
 30775  00D28E  0E00               	movlw	0
 30776  00D290  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30777  00D292  0E00               	movlw	0
 30778  00D294  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30779  00D296  0E00               	movlw	0
 30780  00D298  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30781  00D29A  5184               	movf	___fladd@bexp& (0+255),w,b
 30782  00D29C  A4D8               	btfss	status,2,c
 30783  00D29E  D002               	goto	l3524
 30784                           
 30785                           ; BSR set to: 0
 30786  00D2A0  0E00               	movlw	0
 30787  00D2A2  6F82               	movwf	___fladd@signs& (0+255),b
 30788  00D2A4                     l3524:
 30789                           
 30790                           ; BSR set to: 0
 30791                           
 30792                           ; BSR set to: 0
 30793                           
 30794                           ; BSR set to: 0
 30795  00D2A4  A184               	btfss	___fladd@bexp& (0+255),0,b
 30796  00D2A6  D002               	goto	l3525
 30797                           
 30798                           ; BSR set to: 0
 30799  00D2A8  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30800  00D2AA  D001               	goto	l3526
 30801  00D2AC                     l3525:
 30802                           
 30803                           ; BSR set to: 0
 30804                           
 30805                           ; BSR set to: 0
 30806  00D2AC  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 30807  00D2AE                     l3526:
 30808                           
 30809                           ; BSR set to: 0
 30810                           
 30811                           ; BSR set to: 0
 30812  00D2AE  90D8               	bcf	status,0,c
 30813  00D2B0  3184               	rrcf	___fladd@bexp& (0+255),w,b
 30814  00D2B2  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30815                           
 30816                           ; BSR set to: 0
 30817  00D2B4  BF82               	btfsc	___fladd@signs& (0+255),7,b
 30818                           
 30819                           ; BSR set to: 0
 30820  00D2B6  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 30821                           
 30822                           ; BSR set to: 0
 30823                           
 30824                           ; BSR set to: 0
 30825  00D2B8  C072  F072         	movff	___fladd@b,?___fladd
 30826  00D2BC  C073  F073         	movff	___fladd@b+1,?___fladd+1
 30827  00D2C0  C074  F074         	movff	___fladd@b+2,?___fladd+2
 30828  00D2C4  C075  F075         	movff	___fladd@b+3,?___fladd+3
 30829  00D2C8  0012               	return	
 30830  00D2CA                     __end_of___fladd:
 30831                           	opt stack 0
 30832                           tblptru	equ	0xFF8
 30833                           tblptrh	equ	0xFF7
 30834                           tblptrl	equ	0xFF6
 30835                           tablat	equ	0xFF5
 30836                           prodh	equ	0xFF4
 30837                           prodl	equ	0xFF3
 30838                           intcon	equ	0xFF2
 30839                           postinc0	equ	0xFEE
 30840                           wreg	equ	0xFE8
 30841                           indf1	equ	0xFE7
 30842                           postinc1	equ	0xFE6
 30843                           postdec1	equ	0xFE5
 30844                           plusw1	equ	0xFE3
 30845                           fsr1h	equ	0xFE2
 30846                           fsr1l	equ	0xFE1
 30847                           indf2	equ	0xFDF
 30848                           postinc2	equ	0xFDE
 30849                           postdec2	equ	0xFDD
 30850                           plusw2	equ	0xFDB
 30851                           fsr2h	equ	0xFDA
 30852                           fsr2l	equ	0xFD9
 30853                           status	equ	0xFD8
 30854                           
 30855 ;; *************** function _USBDeviceInit *****************
 30856 ;; Defined at:
 30857 ;;		line 277 in file "usb_device.c"
 30858 ;; Parameters:    Size  Location     Type
 30859 ;;		None
 30860 ;; Auto vars:     Size  Location     Type
 30861 ;;  i               1    8[BANK0 ] unsigned char 
 30862 ;; Return value:  Size  Location     Type
 30863 ;;                  1    wreg      void 
 30864 ;; Registers used:
 30865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30866 ;; Tracked objects:
 30867 ;;		On entry : 0/0
 30868 ;;		On exit  : 0/0
 30869 ;;		Unchanged: 0/0
 30870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30875 ;;Total ram usage:        1 bytes
 30876 ;; Hardware stack levels used:    1
 30877 ;; Hardware stack levels required when called:   11
 30878 ;; This function calls:
 30879 ;;		_memset
 30880 ;; This function is called by:
 30881 ;;		_main
 30882 ;; This function uses a non-reentrant model
 30883 ;;
 30884                           
 30885                           	psect	text122
 30886  00FE56                     __ptext122:
 30887                           	opt stack 0
 30888  00FE56                     _USBDeviceInit:
 30889                           	opt stack 19
 30890                           
 30891                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 30892                           
 30893                           ; BSR set to: 0
 30894                           ;incstack = 0
 30895  00FE56  98A0               	bcf	4000,4,c	;volatile
 30896                           
 30897                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 30898  00FE58  0E00               	movlw	0
 30899  00FE5A  6E63               	movwf	3939,c	;volatile
 30900                           
 30901                           ;usb_device.c: 291: {UIR = 0;};
 30902  00FE5C  0E00               	movlw	0
 30903  00FE5E  6E62               	movwf	3938,c	;volatile
 30904                           
 30905                           ;usb_device.c: 294: UEP0 = 0;
 30906  00FE60  0E00               	movlw	0
 30907  00FE62  010F               	movlb	15	; () banked
 30908  00FE64  6F26               	movwf	38,b	;volatile
 30909                           
 30910                           ; BSR set to: 15
 30911                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 30912  00FE66  0E27               	movlw	39
 30913  00FE68  0100               	movlb	0	; () banked
 30914  00FE6A  6F60               	movwf	memset@p1& (0+255),b
 30915  00FE6C  0E0F               	movlw	15
 30916  00FE6E  6F61               	movwf	(memset@p1+1)& (0+255),b
 30917  00FE70  0E00               	movlw	0
 30918  00FE72  6F63               	movwf	(memset@c+1)& (0+255),b
 30919  00FE74  0E00               	movlw	0
 30920  00FE76  6F62               	movwf	memset@c& (0+255),b
 30921  00FE78  0E00               	movlw	0
 30922  00FE7A  6F65               	movwf	(memset@n+1)& (0+255),b
 30923  00FE7C  0E02               	movlw	2
 30924  00FE7E  6F64               	movwf	memset@n& (0+255),b
 30925  00FE80  ECD0  F0A9         	call	_memset	;wreg free
 30926                           
 30927                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 30928  00FE84  0E16               	movlw	22
 30929  00FE86  010F               	movlb	15	; () banked
 30930  00FE88  6F39               	movwf	57,b	;volatile
 30931                           
 30932                           ; BSR set to: 15
 30933  00FE8A  0E9F               	movlw	159
 30934  00FE8C  6F37               	movwf	55,b	;volatile
 30935                           
 30936                           ; BSR set to: 15
 30937  00FE8E  0E7B               	movlw	123
 30938  00FE90  6F36               	movwf	54,b	;volatile
 30939                           
 30940                           ; BSR set to: 15
 30941                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 30942  00FE92  0E00               	movlw	0
 30943  00FE94  0100               	movlb	0	; () banked
 30944  00FE96  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30945  00FE98                     l17420:
 30946                           
 30947                           ; BSR set to: 0
 30948  00FE98  0E0B               	movlw	11
 30949  00FE9A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30950  00FE9C  D001               	goto	l145
 30951  00FE9E  D00E               	goto	u16730
 30952  00FEA0                     l145:
 30953                           
 30954                           ; BSR set to: 0
 30955                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 30956                           
 30957                           ; BSR set to: 0
 30958  00FEA0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 30959  00FEA2  0D04               	mullw	4
 30960  00FEA4  0E00               	movlw	0
 30961  00FEA6  24F3               	addwf	prodl,w,c
 30962  00FEA8  6ED9               	movwf	fsr2l,c
 30963  00FEAA  0E0D               	movlw	13
 30964  00FEAC  20F4               	addwfc	prodh,w,c
 30965  00FEAE  6EDA               	movwf	fsr2h,c
 30966  00FEB0  6ADE               	clrf	postinc2,c
 30967  00FEB2  6ADE               	clrf	postinc2,c
 30968  00FEB4  6ADE               	clrf	postinc2,c
 30969  00FEB6  6ADD               	clrf	postdec2,c
 30970                           
 30971                           ; BSR set to: 0
 30972  00FEB8  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 30973  00FEBA  D7EE               	goto	l17420
 30974  00FEBC                     u16730:
 30975                           
 30976                           ; BSR set to: 0
 30977                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 30978  00FEBC  8C65               	bsf	3941,6,c	;volatile
 30979                           
 30980                           ; BSR set to: 0
 30981                           ;usb_device.c: 316: UADDR = 0x00;
 30982  00FEBE  0E00               	movlw	0
 30983  00FEC0  010F               	movlb	15	; () banked
 30984  00FEC2  6F38               	movwf	56,b	;volatile
 30985                           
 30986                           ; BSR set to: 15
 30987                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 30988  00FEC4  9865               	bcf	3941,4,c	;volatile
 30989                           
 30990                           ; BSR set to: 15
 30991                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 30992  00FEC6  9C65               	bcf	3941,6,c	;volatile
 30993  00FEC8                     
 30994                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 30995                           
 30996                           ; BSR set to: 15
 30997  00FEC8  9662               	bcf	3938,3,c	;volatile
 30998                           
 30999                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 31000  00FECA  0E00               	movlw	0
 31001  00FECC  6E55               	movwf	_inPipes+3,c	;volatile
 31002                           
 31003                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 31004  00FECE  0E00               	movlw	0
 31005  00FED0  0101               	movlb	1	; () banked
 31006  00FED2  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31007                           
 31008                           ; BSR set to: 1
 31009                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 31010  00FED4  0E00               	movlw	0
 31011  00FED6  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31012  00FED8  0E00               	movlw	0
 31013  00FEDA  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31014                           
 31015                           ; BSR set to: 1
 31016                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 31017  00FEDC  B662               	btfsc	3938,3,c	;volatile
 31018  00FEDE  D7F4               	goto	l147
 31019                           
 31020                           ; BSR set to: 1
 31021                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 31022                           
 31023                           ; BSR set to: 1
 31024  00FEE0  0E01               	movlw	1
 31025  00FEE2  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31026                           
 31027                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 31028  00FEE4  0E01               	movlw	1
 31029  00FEE6  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31030                           
 31031                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 31032  00FEE8  0E00               	movlw	0
 31033  00FEEA  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 31034                           
 31035                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 31036  00FEEC  0E00               	movlw	0
 31037  00FEEE  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 31038                           
 31039                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 31040  00FEF0  0E00               	movlw	0
 31041  00FEF2  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 31042                           
 31043                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 31044  00FEF4  0E00               	movlw	0
 31045  00FEF6  0100               	movlb	0	; () banked
 31046  00FEF8  6F68               	movwf	USBDeviceInit@i& (0+255),b
 31047  00FEFA                     l17448:
 31048                           
 31049                           ; BSR set to: 0
 31050  00FEFA  0E02               	movlw	2
 31051  00FEFC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 31052  00FEFE  D001               	goto	l149
 31053  00FF00  D02E               	goto	u16760
 31054  00FF02                     l149:
 31055                           
 31056                           ; BSR set to: 0
 31057                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 31058                           
 31059                           ; BSR set to: 0
 31060  00FF02  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31061  00FF04  0D02               	mullw	2
 31062  00FF06  0E1B               	movlw	low _pBDTEntryIn
 31063  00FF08  24F3               	addwf	prodl,w,c
 31064  00FF0A  6ED9               	movwf	fsr2l,c
 31065  00FF0C  0E01               	movlw	high _pBDTEntryIn
 31066  00FF0E  20F4               	addwfc	prodh,w,c
 31067  00FF10  6EDA               	movwf	fsr2h,c
 31068  00FF12  0E00               	movlw	0
 31069  00FF14  6EDE               	movwf	postinc2,c
 31070  00FF16  0E00               	movlw	0
 31071  00FF18  6EDD               	movwf	postdec2,c
 31072                           
 31073                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 31074  00FF1A  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31075  00FF1C  0D02               	mullw	2
 31076  00FF1E  0E21               	movlw	low _pBDTEntryOut
 31077  00FF20  24F3               	addwf	prodl,w,c
 31078  00FF22  6ED9               	movwf	fsr2l,c
 31079  00FF24  0E01               	movlw	high _pBDTEntryOut
 31080  00FF26  20F4               	addwfc	prodh,w,c
 31081  00FF28  6EDA               	movwf	fsr2h,c
 31082  00FF2A  0E00               	movlw	0
 31083  00FF2C  6EDE               	movwf	postinc2,c
 31084  00FF2E  0E00               	movlw	0
 31085  00FF30  6EDD               	movwf	postdec2,c
 31086                           
 31087                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 31088  00FF32  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31089  00FF34  0D01               	mullw	1
 31090  00FF36  0E3C               	movlw	low _ep_data_in
 31091  00FF38  24F3               	addwf	prodl,w,c
 31092  00FF3A  6ED9               	movwf	fsr2l,c
 31093  00FF3C  0E01               	movlw	high _ep_data_in
 31094  00FF3E  20F4               	addwfc	prodh,w,c
 31095  00FF40  6EDA               	movwf	fsr2h,c
 31096  00FF42  0E00               	movlw	0
 31097  00FF44  6EDF               	movwf	indf2,c
 31098                           
 31099                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 31100  00FF46  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31101  00FF48  0D01               	mullw	1
 31102  00FF4A  0E39               	movlw	low _ep_data_out
 31103  00FF4C  24F3               	addwf	prodl,w,c
 31104  00FF4E  6ED9               	movwf	fsr2l,c
 31105  00FF50  0E01               	movlw	high _ep_data_out
 31106  00FF52  20F4               	addwfc	prodh,w,c
 31107  00FF54  6EDA               	movwf	fsr2h,c
 31108  00FF56  0E00               	movlw	0
 31109  00FF58  6EDF               	movwf	indf2,c
 31110                           
 31111                           ; BSR set to: 0
 31112  00FF5A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31113  00FF5C  D7CE               	goto	l17448
 31114  00FF5E                     u16760:
 31115                           
 31116                           ; BSR set to: 0
 31117                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31118                           
 31119                           ; BSR set to: 0
 31120  00FF5E  0E08               	movlw	8
 31121  00FF60  0101               	movlb	1	; () banked
 31122  00FF62  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 31123  00FF64  0E0D               	movlw	13
 31124  00FF66  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31125                           
 31126                           ; BSR set to: 1
 31127                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 31128  00FF68  0E16               	movlw	22
 31129  00FF6A  010F               	movlb	15	; () banked
 31130  00FF6C  6F26               	movwf	38,b	;volatile
 31131                           
 31132                           ; BSR set to: 15
 31133                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31134  00FF6E  0E0D               	movlw	13
 31135  00FF70  010D               	movlb	13	; () banked
 31136  00FF72  6F03               	movwf	3,b	;volatile
 31137  00FF74  0E30               	movlw	48
 31138  00FF76  6F02               	movwf	2,b	;volatile
 31139                           
 31140                           ; BSR set to: 13
 31141                           ;usb_device.c: 359: BDT[0].CNT = 8;
 31142  00FF78  0E08               	movlw	8
 31143  00FF7A  6F01               	movwf	1,b	;volatile
 31144                           
 31145                           ; BSR set to: 13
 31146                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 31147  00FF7C  0E04               	movlw	4
 31148  00FF7E  6F00               	movwf	0,b	;volatile
 31149                           
 31150                           ; BSR set to: 13
 31151                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 31152  00FF80  8F00               	bsf	0,7,b	;volatile
 31153                           
 31154                           ; BSR set to: 13
 31155                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 31156  00FF82  0E00               	movlw	0
 31157  00FF84  0101               	movlb	1	; () banked
 31158  00FF86  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 31159                           
 31160                           ; BSR set to: 1
 31161                           ;usb_device.c: 366: USB1msTickCount = 0;
 31162  00FF88  0E00               	movlw	0
 31163  00FF8A  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 31164  00FF8C  0E00               	movlw	0
 31165  00FF8E  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 31166  00FF90  0E00               	movlw	0
 31167  00FF92  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 31168  00FF94  0E00               	movlw	0
 31169  00FF96  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 31170                           
 31171                           ; BSR set to: 1
 31172                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 31173  00FF98  0E00               	movlw	0
 31174  00FF9A  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 31175                           
 31176                           ; BSR set to: 1
 31177                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 31178  00FF9C  0E00               	movlw	0
 31179  00FF9E  6E5E               	movwf	_USBDeviceState,c	;volatile
 31180                           
 31181                           ; BSR set to: 1
 31182  00FFA0  0012               	return		;funcret
 31183  00FFA2                     __end_of_USBDeviceInit:
 31184                           	opt stack 0
 31185                           tblptru	equ	0xFF8
 31186                           tblptrh	equ	0xFF7
 31187                           tblptrl	equ	0xFF6
 31188                           tablat	equ	0xFF5
 31189                           prodh	equ	0xFF4
 31190                           prodl	equ	0xFF3
 31191                           intcon	equ	0xFF2
 31192                           postinc0	equ	0xFEE
 31193                           wreg	equ	0xFE8
 31194                           indf1	equ	0xFE7
 31195                           postinc1	equ	0xFE6
 31196                           postdec1	equ	0xFE5
 31197                           plusw1	equ	0xFE3
 31198                           fsr1h	equ	0xFE2
 31199                           fsr1l	equ	0xFE1
 31200                           indf2	equ	0xFDF
 31201                           postinc2	equ	0xFDE
 31202                           postdec2	equ	0xFDD
 31203                           plusw2	equ	0xFDB
 31204                           fsr2h	equ	0xFDA
 31205                           fsr2l	equ	0xFD9
 31206                           status	equ	0xFD8
 31207                           
 31208 ;; *************** function _memset *****************
 31209 ;; Defined at:
 31210 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 31211 ;; Parameters:    Size  Location     Type
 31212 ;;  p1              2    0[BANK0 ] PTR void 
 31213 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31214 ;;  c               2    2[BANK0 ] int 
 31215 ;;  n               2    4[BANK0 ] unsigned int 
 31216 ;; Auto vars:     Size  Location     Type
 31217 ;;  p               2    6[BANK0 ] PTR unsigned char 
 31218 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31219 ;; Return value:  Size  Location     Type
 31220 ;;                  2    0[BANK0 ] PTR void 
 31221 ;; Registers used:
 31222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31223 ;; Tracked objects:
 31224 ;;		On entry : 0/0
 31225 ;;		On exit  : 0/0
 31226 ;;		Unchanged: 0/0
 31227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31228 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31229 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31231 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31232 ;;Total ram usage:        8 bytes
 31233 ;; Hardware stack levels used:    1
 31234 ;; Hardware stack levels required when called:   10
 31235 ;; This function calls:
 31236 ;;		Nothing
 31237 ;; This function is called by:
 31238 ;;		_USBDeviceInit
 31239 ;; This function uses a non-reentrant model
 31240 ;;
 31241                           
 31242                           	psect	text123
 31243  0153A0                     __ptext123:
 31244                           	opt stack 0
 31245  0153A0                     _memset:
 31246                           	opt stack 19
 31247                           
 31248                           ; BSR set to: 1
 31249                           ;incstack = 0
 31250  0153A0  C060  F066         	movff	memset@p1,memset@p
 31251  0153A4  C061  F067         	movff	memset@p1+1,memset@p+1
 31252  0153A8  D009               	goto	l3702
 31253  0153AA                     l16552:
 31254  0153AA  C066  FFD9         	movff	memset@p,fsr2l
 31255  0153AE  C067  FFDA         	movff	memset@p+1,fsr2h
 31256  0153B2  C062  FFDF         	movff	memset@c,indf2
 31257  0153B6  0100               	movlb	0	; () banked
 31258  0153B8  4B66               	infsnz	memset@p& (0+255),f,b
 31259  0153BA  2B67               	incf	(memset@p+1)& (0+255),f,b
 31260  0153BC                     l3702:
 31261                           
 31262                           ; BSR set to: 0
 31263  0153BC  0100               	movlb	0	; () banked
 31264  0153BE  0764               	decf	memset@n& (0+255),f,b
 31265  0153C0  A0D8               	btfss	status,0,c
 31266  0153C2  0765               	decf	(memset@n+1)& (0+255),f,b
 31267  0153C4  2964               	incf	memset@n& (0+255),w,b
 31268  0153C6  E1F1               	bnz	l16552
 31269  0153C8  2965               	incf	(memset@n+1)& (0+255),w,b
 31270  0153CA  B4D8               	btfsc	status,2,c
 31271  0153CC  0012               	return	
 31272  0153CE  D7ED               	goto	l3703
 31273  0153D0                     __end_of_memset:
 31274                           	opt stack 0
 31275                           tblptru	equ	0xFF8
 31276                           tblptrh	equ	0xFF7
 31277                           tblptrl	equ	0xFF6
 31278                           tablat	equ	0xFF5
 31279                           prodh	equ	0xFF4
 31280                           prodl	equ	0xFF3
 31281                           intcon	equ	0xFF2
 31282                           postinc0	equ	0xFEE
 31283                           wreg	equ	0xFE8
 31284                           indf1	equ	0xFE7
 31285                           postinc1	equ	0xFE6
 31286                           postdec1	equ	0xFE5
 31287                           plusw1	equ	0xFE3
 31288                           fsr1h	equ	0xFE2
 31289                           fsr1l	equ	0xFE1
 31290                           indf2	equ	0xFDF
 31291                           postinc2	equ	0xFDE
 31292                           postdec2	equ	0xFDD
 31293                           plusw2	equ	0xFDB
 31294                           fsr2h	equ	0xFDA
 31295                           fsr2l	equ	0xFD9
 31296                           status	equ	0xFD8
 31297                           
 31298 ;; *************** function _USBDeviceAttach *****************
 31299 ;; Defined at:
 31300 ;;		line 1354 in file "usb_device.c"
 31301 ;; Parameters:    Size  Location     Type
 31302 ;;		None
 31303 ;; Auto vars:     Size  Location     Type
 31304 ;;		None
 31305 ;; Return value:  Size  Location     Type
 31306 ;;                  1    wreg      void 
 31307 ;; Registers used:
 31308 ;;		wreg, status,2
 31309 ;; Tracked objects:
 31310 ;;		On entry : 0/0
 31311 ;;		On exit  : 0/0
 31312 ;;		Unchanged: 0/0
 31313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31318 ;;Total ram usage:        0 bytes
 31319 ;; Hardware stack levels used:    1
 31320 ;; Hardware stack levels required when called:   10
 31321 ;; This function calls:
 31322 ;;		Nothing
 31323 ;; This function is called by:
 31324 ;;		_main
 31325 ;; This function uses a non-reentrant model
 31326 ;;
 31327                           
 31328                           	psect	text124
 31329  01530E                     __ptext124:
 31330                           	opt stack 0
 31331  01530E                     _USBDeviceAttach:
 31332                           	opt stack 20
 31333                           
 31334                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 31335                           
 31336                           ; BSR set to: 0
 31337                           ;incstack = 0
 31338  01530E  505E               	movf	_USBDeviceState,w,c	;volatile
 31339  015310  A4D8               	btfss	status,2,c
 31340  015312  0012               	return	
 31341                           
 31342                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 31343  015314  0E00               	movlw	0
 31344  015316  6E65               	movwf	3941,c	;volatile
 31345                           
 31346                           ;usb_device.c: 1365: UIE = 0;
 31347  015318  0E00               	movlw	0
 31348  01531A  010F               	movlb	15	; () banked
 31349  01531C  6F36               	movwf	54,b	;volatile
 31350                           
 31351                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 31352  01531E  0E16               	movlw	22
 31353  015320  6F39               	movwf	57,b	;volatile
 31354  015322  0E9F               	movlw	159
 31355  015324  6F37               	movwf	55,b	;volatile
 31356  015326  0E7B               	movlw	123
 31357  015328  6F36               	movwf	54,b	;volatile
 31358                           
 31359                           ; BSR set to: 15
 31360                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 31361  01532A  8ED0               	bsf	4048,7,c	;volatile
 31362                           
 31363                           ; BSR set to: 15
 31364  01532C  88A2               	bsf	4002,4,c	;volatile
 31365                           
 31366                           ; BSR set to: 15
 31367  01532E  88A0               	bsf	4000,4,c	;volatile
 31368                           
 31369                           ; BSR set to: 15
 31370  015330  8EF2               	bsf	intcon,7,c	;volatile
 31371                           
 31372                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 31373  015332  D001               	goto	l206
 31374  015334                     l207:
 31375  015334  8665               	bsf	3941,3,c	;volatile
 31376  015336                     l206:
 31377  015336  A665               	btfss	3941,3,c	;volatile
 31378  015338  D7FD               	goto	l207
 31379                           
 31380                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 31381  01533A  0E01               	movlw	1
 31382  01533C  6E5E               	movwf	_USBDeviceState,c	;volatile
 31383  01533E  0012               	return	
 31384  015340                     __end_of_USBDeviceAttach:
 31385                           	opt stack 0
 31386                           tblptru	equ	0xFF8
 31387                           tblptrh	equ	0xFF7
 31388                           tblptrl	equ	0xFF6
 31389                           tablat	equ	0xFF5
 31390                           prodh	equ	0xFF4
 31391                           prodl	equ	0xFF3
 31392                           intcon	equ	0xFF2
 31393                           postinc0	equ	0xFEE
 31394                           wreg	equ	0xFE8
 31395                           indf1	equ	0xFE7
 31396                           postinc1	equ	0xFE6
 31397                           postdec1	equ	0xFE5
 31398                           plusw1	equ	0xFE3
 31399                           fsr1h	equ	0xFE2
 31400                           fsr1l	equ	0xFE1
 31401                           indf2	equ	0xFDF
 31402                           postinc2	equ	0xFDE
 31403                           postdec2	equ	0xFDD
 31404                           plusw2	equ	0xFDB
 31405                           fsr2h	equ	0xFDA
 31406                           fsr2l	equ	0xFD9
 31407                           status	equ	0xFD8
 31408                           
 31409 ;; *************** function _SYSTEM_Initialize *****************
 31410 ;; Defined at:
 31411 ;;		line 39 in file "system.c"
 31412 ;; Parameters:    Size  Location     Type
 31413 ;;  state           1    wreg     enum E6623
 31414 ;; Auto vars:     Size  Location     Type
 31415 ;;  state           1    4[BANK0 ] enum E6623
 31416 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 31417 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 31418 ;; Return value:  Size  Location     Type
 31419 ;;                  1    wreg      void 
 31420 ;; Registers used:
 31421 ;;		wreg, status,2, status,0
 31422 ;; Tracked objects:
 31423 ;;		On entry : 0/0
 31424 ;;		On exit  : 0/0
 31425 ;;		Unchanged: 0/0
 31426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31428 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31430 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31431 ;;Total ram usage:        5 bytes
 31432 ;; Hardware stack levels used:    1
 31433 ;; Hardware stack levels required when called:   10
 31434 ;; This function calls:
 31435 ;;		Nothing
 31436 ;; This function is called by:
 31437 ;;		_main
 31438 ;; This function uses a non-reentrant model
 31439 ;;
 31440                           
 31441                           	psect	text125
 31442  0145E0                     __ptext125:
 31443                           	opt stack 0
 31444  0145E0                     _SYSTEM_Initialize:
 31445                           	opt stack 20
 31446                           
 31447                           ;incstack = 0
 31448                           ;SYSTEM_Initialize@state stored from wreg
 31449  0145E0  0100               	movlb	0	; () banked
 31450  0145E2  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 31451                           
 31452                           ;system.c: 41: switch(state)
 31453  0145E4  D01E               	goto	l897
 31454  0145E6                     
 31455                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 31456  0145E6  0E02               	movlw	2
 31457  0145E8  0100               	movlb	0	; () banked
 31458  0145EA  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 31459  0145EC  0E58               	movlw	88
 31460  0145EE  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 31461                           
 31462                           ; BSR set to: 0
 31463                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 31464  0145F0  8C9B               	bsf	3995,6,c	;volatile
 31465  0145F2                     l17600:
 31466                           
 31467                           ; BSR set to: 0
 31468  0145F2  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 31469  0145F4  A0D8               	btfss	status,0,c
 31470  0145F6  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 31471  0145F8  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 31472  0145FA  E1FB               	bnz	l17600
 31473  0145FC  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 31474  0145FE  B4D8               	btfsc	status,2,c
 31475  014600  0012               	return	
 31476  014602  D7F7               	goto	l900
 31477  014604                     
 31478                           ; BSR set to: 0
 31479                           ;system.c: 78: OSCCON = 0x70;
 31480                           
 31481                           ; BSR set to: 0
 31482  014604  0E70               	movlw	112
 31483  014606  6ED3               	movwf	4051,c	;volatile
 31484                           
 31485                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 31486  014608  0E03               	movlw	3
 31487  01460A  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),b
 31488  01460C  0E20               	movlw	32
 31489  01460E  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),b
 31490  014610                     l17604:
 31491                           
 31492                           ; BSR set to: 0
 31493  014610  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),f,b
 31494  014612  A0D8               	btfss	status,0,c
 31495  014614  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),f,b
 31496  014616  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),w,b
 31497  014618  E1FB               	bnz	l17604
 31498  01461A  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),w,b
 31499  01461C  B4D8               	btfsc	status,2,c
 31500  01461E  0012               	return	
 31501  014620  D7F7               	goto	l906
 31502  014622                     l897:
 31503                           
 31504                           ; BSR set to: 0
 31505  014622  0100               	movlb	0	; () banked
 31506  014624  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 31507                           
 31508                           ; Switch size 1, requested type "space"
 31509                           ; Number of cases is 3, Range of values is 0 to 2
 31510                           ; switch strategies available:
 31511                           ; Name         Instructions Cycles
 31512                           ; simple_byte           10     6 (average)
 31513                           ;	Chosen strategy is simple_byte
 31514  014626  0A00               	xorlw	0	; case 0
 31515  014628  B4D8               	btfsc	status,2,c
 31516  01462A  D7DD               	goto	l898
 31517  01462C  0A01               	xorlw	1	; case 1
 31518  01462E  B4D8               	btfsc	status,2,c
 31519  014630  0012               	return	
 31520  014632  0A03               	xorlw	3	; case 2
 31521  014634  A4D8               	btfss	status,2,c
 31522  014636  0012               	return	
 31523  014638  D7E5               	goto	l904
 31524  01463A                     __end_of_SYSTEM_Initialize:
 31525                           	opt stack 0
 31526                           tblptru	equ	0xFF8
 31527                           tblptrh	equ	0xFF7
 31528                           tblptrl	equ	0xFF6
 31529                           tablat	equ	0xFF5
 31530                           prodh	equ	0xFF4
 31531                           prodl	equ	0xFF3
 31532                           intcon	equ	0xFF2
 31533                           postinc0	equ	0xFEE
 31534                           wreg	equ	0xFE8
 31535                           indf1	equ	0xFE7
 31536                           postinc1	equ	0xFE6
 31537                           postdec1	equ	0xFE5
 31538                           plusw1	equ	0xFE3
 31539                           fsr1h	equ	0xFE2
 31540                           fsr1l	equ	0xFE1
 31541                           indf2	equ	0xFDF
 31542                           postinc2	equ	0xFDE
 31543                           postdec2	equ	0xFDD
 31544                           plusw2	equ	0xFDB
 31545                           fsr2h	equ	0xFDA
 31546                           fsr2l	equ	0xFD9
 31547                           status	equ	0xFD8
 31548                           
 31549 ;; *************** function _APP_DeviceMSDTasks *****************
 31550 ;; Defined at:
 31551 ;;		line 110 in file "app_device_msd.c"
 31552 ;; Parameters:    Size  Location     Type
 31553 ;;		None
 31554 ;; Auto vars:     Size  Location     Type
 31555 ;;		None
 31556 ;; Return value:  Size  Location     Type
 31557 ;;                  1    wreg      void 
 31558 ;; Registers used:
 31559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31560 ;; Tracked objects:
 31561 ;;		On entry : 0/0
 31562 ;;		On exit  : 0/0
 31563 ;;		Unchanged: 0/0
 31564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31569 ;;Total ram usage:        0 bytes
 31570 ;; Hardware stack levels used:    1
 31571 ;; Hardware stack levels required when called:   21
 31572 ;; This function calls:
 31573 ;;		_MSDTasks
 31574 ;; This function is called by:
 31575 ;;		_main
 31576 ;; This function uses a non-reentrant model
 31577 ;;
 31578                           
 31579                           	psect	text126
 31580  015886                     __ptext126:
 31581                           	opt stack 0
 31582  015886                     _APP_DeviceMSDTasks:
 31583                           	opt stack 9
 31584                           
 31585                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 31586                           
 31587                           ; BSR set to: 0
 31588                           ;incstack = 0
 31589  015886  0E20               	movlw	32
 31590  015888  605E               	cpfslt	_USBDeviceState,c	;volatile
 31591  01588A  D001               	goto	l986
 31592  01588C  0012               	return	
 31593  01588E                     l986:
 31594                           
 31595                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 31596  01588E  B265               	btfsc	3941,1,c	;volatile
 31597  015890  0012               	return	
 31598                           
 31599                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 31600                           
 31601                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 31602  015892  ECAB  F071         	call	_MSDTasks	;wreg free
 31603  015896  0012               	return		;funcret
 31604  015898                     __end_of_APP_DeviceMSDTasks:
 31605                           	opt stack 0
 31606                           tblptru	equ	0xFF8
 31607                           tblptrh	equ	0xFF7
 31608                           tblptrl	equ	0xFF6
 31609                           tablat	equ	0xFF5
 31610                           prodh	equ	0xFF4
 31611                           prodl	equ	0xFF3
 31612                           intcon	equ	0xFF2
 31613                           postinc0	equ	0xFEE
 31614                           wreg	equ	0xFE8
 31615                           indf1	equ	0xFE7
 31616                           postinc1	equ	0xFE6
 31617                           postdec1	equ	0xFE5
 31618                           plusw1	equ	0xFE3
 31619                           fsr1h	equ	0xFE2
 31620                           fsr1l	equ	0xFE1
 31621                           indf2	equ	0xFDF
 31622                           postinc2	equ	0xFDE
 31623                           postdec2	equ	0xFDD
 31624                           plusw2	equ	0xFDB
 31625                           fsr2h	equ	0xFDA
 31626                           fsr2l	equ	0xFD9
 31627                           status	equ	0xFD8
 31628                           
 31629 ;; *************** function _MSDTasks *****************
 31630 ;; Defined at:
 31631 ;;		line 335 in file "usb_device_msd.c"
 31632 ;; Parameters:    Size  Location     Type
 31633 ;;		None
 31634 ;; Auto vars:     Size  Location     Type
 31635 ;;  i               1   81[BANK0 ] unsigned char 
 31636 ;; Return value:  Size  Location     Type
 31637 ;;                  1    wreg      unsigned char 
 31638 ;; Registers used:
 31639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31640 ;; Tracked objects:
 31641 ;;		On entry : 0/0
 31642 ;;		On exit  : 0/0
 31643 ;;		Unchanged: 0/0
 31644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31646 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31648 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31649 ;;Total ram usage:        6 bytes
 31650 ;; Hardware stack levels used:    1
 31651 ;; Hardware stack levels required when called:   20
 31652 ;; This function calls:
 31653 ;;		_MSDProcessCommand
 31654 ;;		_USBStallEndpoint
 31655 ;;		_USBTransferOnePacket
 31656 ;; This function is called by:
 31657 ;;		_APP_DeviceMSDTasks
 31658 ;; This function uses a non-reentrant model
 31659 ;;
 31660                           
 31661                           	psect	text127
 31662  00E356                     __ptext127:
 31663                           	opt stack 0
 31664  00E356                     _MSDTasks:
 31665                           	opt stack 9
 31666                           
 31667                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 31668                           
 31669                           ;incstack = 0
 31670  00E356  0E20               	movlw	32
 31671  00E358  185E               	xorwf	_USBDeviceState,w,c	;volatile
 31672  00E35A  A4D8               	btfss	status,2,c
 31673  00E35C  0012               	return	
 31674                           
 31675                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 31676                           
 31677                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 31678  00E35E  98A0               	bcf	4000,4,c	;volatile
 31679                           
 31680                           ;usb_device_msd.c: 357: switch(MSD_State)
 31681  00E360  D11E               	goto	l570
 31682  00E362                     
 31683                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 31684  00E362  0101               	movlb	1	; () banked
 31685  00E364  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31686  00E366  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31687  00E368  B4D8               	btfsc	status,2,c
 31688  00E36A  D006               	goto	u15800
 31689                           
 31690                           ; BSR set to: 1
 31691  00E36C  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31692  00E370  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31693  00E374  BEDF               	btfsc	indf2,7,c
 31694  00E376  D122               	goto	l586
 31695  00E378                     u15800:
 31696                           
 31697                           ; BSR set to: 1
 31698                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 31699                           
 31700                           ; BSR set to: 1
 31701  00E378  0E00               	movlw	0
 31702  00E37A  0100               	movlb	0	; () banked
 31703  00E37C  6FB1               	movwf	MSDTasks@i& (0+255),b
 31704  00E37E                     l16638:
 31705                           
 31706                           ; BSR set to: 0
 31707  00E37E  0E1E               	movlw	30
 31708  00E380  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 31709  00E382  D001               	goto	l575
 31710  00E384  D014               	goto	u15820
 31711  00E386                     l575:
 31712                           
 31713                           ; BSR set to: 0
 31714                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 31715                           
 31716                           ; BSR set to: 0
 31717  00E386  51B1               	movf	MSDTasks@i& (0+255),w,b
 31718  00E388  0D01               	mullw	1
 31719  00E38A  0E40               	movlw	64
 31720  00E38C  24F3               	addwf	prodl,w,c
 31721  00E38E  6ED9               	movwf	fsr2l,c
 31722  00E390  0E0D               	movlw	13
 31723  00E392  20F4               	addwfc	prodh,w,c
 31724  00E394  6EDA               	movwf	fsr2h,c
 31725  00E396  51B1               	movf	MSDTasks@i& (0+255),w,b
 31726  00E398  0D01               	mullw	1
 31727  00E39A  0E00               	movlw	low _gblCBW
 31728  00E39C  24F3               	addwf	prodl,w,c
 31729  00E39E  6EE1               	movwf	fsr1l,c
 31730  00E3A0  0E02               	movlw	high _gblCBW
 31731  00E3A2  20F4               	addwfc	prodh,w,c
 31732  00E3A4  6EE2               	movwf	fsr1h,c
 31733  00E3A6  CFDF FFE7          	movff	indf2,indf1
 31734                           
 31735                           ; BSR set to: 0
 31736  00E3AA  2BB1               	incf	MSDTasks@i& (0+255),f,b
 31737  00E3AC  D7E8               	goto	l16638
 31738  00E3AE                     u15820:
 31739                           
 31740                           ; BSR set to: 0
 31741                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 31742                           
 31743                           ; BSR set to: 0
 31744  00E3AE  0101               	movlb	1	; () banked
 31745  00E3B0  EE20 F001          	lfsr	2,1
 31746  00E3B4  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31747  00E3B6  26D9               	addwf	fsr2l,f,c
 31748  00E3B8  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31749  00E3BA  22DA               	addwfc	fsr2h,f,c
 31750  00E3BC  0E1F               	movlw	31
 31751  00E3BE  18DE               	xorwf	postinc2,w,c
 31752  00E3C0  A4D8               	btfss	status,2,c
 31753  00E3C2  D077               	goto	l577
 31754                           
 31755                           ; BSR set to: 1
 31756  00E3C4  0E55               	movlw	85
 31757  00E3C6  0102               	movlb	2	; () banked
 31758  00E3C8  1900               	xorwf	_gblCBW& (0+255),w,b
 31759  00E3CA  E173               	bnz	l577
 31760  00E3CC  0E53               	movlw	83
 31761  00E3CE  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 31762  00E3D0  E170               	bnz	l577
 31763  00E3D2  0E42               	movlw	66
 31764  00E3D4  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 31765  00E3D6  E16D               	bnz	l577
 31766  00E3D8  0E43               	movlw	67
 31767  00E3DA  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 31768  00E3DC  A4D8               	btfss	status,2,c
 31769  00E3DE  D069               	goto	l577
 31770                           
 31771                           ; BSR set to: 2
 31772                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 31773  00E3E0  0E01               	movlw	1
 31774  00E3E2  0101               	movlb	1	; () banked
 31775  00E3E4  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31776                           
 31777                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 31778  00E3E6  0102               	movlb	2	; () banked
 31779  00E3E8  510D               	movf	(_gblCBW+13)& (0+255),w,b
 31780  00E3EA  A4D8               	btfss	status,2,c
 31781  00E3EC  D055               	goto	l578
 31782                           
 31783                           ; BSR set to: 2
 31784  00E3EE  0E11               	movlw	17
 31785  00E3F0  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 31786  00E3F2  D052               	goto	l578
 31787                           
 31788                           ; BSR set to: 2
 31789  00E3F4  510E               	movf	(_gblCBW+14)& (0+255),w,b
 31790  00E3F6  B4D8               	btfsc	status,2,c
 31791  00E3F8  D04F               	goto	l578
 31792                           
 31793                           ; BSR set to: 2
 31794  00E3FA  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 31795  00E3FE  0E3F               	movlw	63
 31796  00E400  0100               	movlb	0	; () banked
 31797  00E402  17AC               	andwf	??_MSDTasks& (0+255),f,b
 31798  00E404  A4D8               	btfss	status,2,c
 31799  00E406  D048               	goto	l578
 31800                           
 31801                           ; BSR set to: 0
 31802                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 31803  00E408  0E55               	movlw	85
 31804  00E40A  010D               	movlb	13	; () banked
 31805  00E40C  6F80               	movwf	128,b	;volatile
 31806  00E40E  0E53               	movlw	83
 31807  00E410  6F81               	movwf	129,b	;volatile
 31808  00E412  0E42               	movlw	66
 31809  00E414  6F82               	movwf	130,b	;volatile
 31810  00E416  0E53               	movlw	83
 31811  00E418  6F83               	movwf	131,b	;volatile
 31812                           
 31813                           ; BSR set to: 13
 31814                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 31815  00E41A  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 31816  00E41E  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 31817  00E422  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 31818  00E426  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 31819                           
 31820                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 31821  00E42A  0E00               	movlw	0
 31822  00E42C  6F88               	movwf	136,b	;volatile
 31823  00E42E  0E00               	movlw	0
 31824  00E430  6F89               	movwf	137,b	;volatile
 31825  00E432  0E00               	movlw	0
 31826  00E434  6F8A               	movwf	138,b	;volatile
 31827  00E436  0E00               	movlw	0
 31828  00E438  6F8B               	movwf	139,b	;volatile
 31829                           
 31830                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 31831  00E43A  0E00               	movlw	0
 31832  00E43C  6F8C               	movwf	140,b	;volatile
 31833                           
 31834                           ; BSR set to: 13
 31835                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 31836  00E43E  0101               	movlb	1	; () banked
 31837  00E440  6962               	setf	_MSDCommandState& (0+255),b
 31838                           
 31839                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 31840  00E442  0E00               	movlw	0
 31841  00E444  6F61               	movwf	_MSDReadState& (0+255),b
 31842                           
 31843                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 31844  00E446  0E00               	movlw	0
 31845  00E448  6F60               	movwf	_MSDWriteState& (0+255),b
 31846                           
 31847                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 31848  00E44A  0E00               	movlw	0
 31849  00E44C  6F5F               	movwf	_MSDRetryAttempt& (0+255),b
 31850                           
 31851                           ; BSR set to: 1
 31852                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 31853  00E44E  0E03               	movlw	3
 31854  00E450  0102               	movlb	2	; () banked
 31855  00E452  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 31856  00E454  B4D8               	btfsc	status,2,c
 31857  00E456  D009               	goto	l579
 31858                           
 31859                           ; BSR set to: 2
 31860                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 31861  00E458  0101               	movlb	1	; () banked
 31862  00E45A  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 31863  00E45C  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 31864  00E45E  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 31865  00E460  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 31866                           
 31867                           ; BSR set to: 1
 31868                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 31869  00E462  0E00               	movlw	0
 31870  00E464  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31871                           
 31872                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 31873  00E466  0E00               	movlw	0
 31874  00E468  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31875  00E46A                     l579:
 31876                           
 31877                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 31878                           
 31879                           ; BSR set to: 1
 31880  00E46A  0102               	movlb	2	; () banked
 31881  00E46C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 31882  00E46E  D002               	goto	l580
 31883                           
 31884                           ; BSR set to: 2
 31885                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 31886  00E470  0E01               	movlw	1
 31887  00E472  D001               	goto	L44
 31888  00E474                     l580:
 31889                           
 31890                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 31891                           
 31892                           ; BSR set to: 1
 31893  00E474  0E02               	movlw	2
 31894  00E476                     L44:
 31895  00E476  0101               	movlb	1	; () banked
 31896  00E478  6F63               	movwf	_MSD_State& (0+255),b
 31897                           
 31898                           ; BSR set to: 1
 31899                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 31900                           
 31901                           ; BSR set to: 1
 31902  00E47A  0102               	movlb	2	; () banked
 31903  00E47C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 31904  00E47E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 31905  00E480  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 31906  00E482  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 31907  00E484  B4D8               	btfsc	status,2,c
 31908  00E486  D002               	goto	l582
 31909                           
 31910                           ; BSR set to: 2
 31911                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 31912  00E488  0E00               	movlw	0
 31913  00E48A  D001               	goto	L45
 31914  00E48C                     l582:
 31915                           
 31916                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 31917                           
 31918                           ; BSR set to: 1
 31919  00E48C  0E01               	movlw	1
 31920  00E48E                     L45:
 31921  00E48E  0101               	movlb	1	; () banked
 31922  00E490  6F5C               	movwf	_MSDHostNoData& (0+255),b
 31923                           
 31924                           ; BSR set to: 1
 31925                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 31926                           
 31927                           ; BSR set to: 1
 31928  00E492  C20F  F162         	movff	_gblCBW+15,_MSDCommandState
 31929                           
 31930                           ;usb_device_msd.c: 454: }
 31931  00E496  D092               	goto	l586
 31932  00E498                     l578:
 31933                           
 31934                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 31935                           
 31936                           ; BSR set to: 1
 31937  00E498  0E01               	movlw	1
 31938  00E49A  0100               	movlb	0	; () banked
 31939  00E49C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31940  00E49E  0E02               	movlw	2
 31941  00E4A0  EC65  F087         	call	_USBStallEndpoint
 31942                           
 31943                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 31944  00E4A4  0E00               	movlw	0
 31945  00E4A6  0100               	movlb	0	; () banked
 31946  00E4A8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31947  00E4AA  0E02               	movlw	2
 31948  00E4AC  EC65  F087         	call	_USBStallEndpoint
 31949                           
 31950                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 31951  00E4B0  D085               	goto	l586
 31952  00E4B2                     l577:
 31953                           
 31954                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 31955  00E4B2  0E01               	movlw	1
 31956  00E4B4  0100               	movlb	0	; () banked
 31957  00E4B6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31958  00E4B8  0E02               	movlw	2
 31959  00E4BA  EC65  F087         	call	_USBStallEndpoint
 31960                           
 31961                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 31962  00E4BE  0E00               	movlw	0
 31963  00E4C0  0100               	movlb	0	; () banked
 31964  00E4C2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31965  00E4C4  0E02               	movlw	2
 31966  00E4C6  EC65  F087         	call	_USBStallEndpoint
 31967                           
 31968                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 31969  00E4CA  0E00               	movlw	0
 31970  00E4CC  0101               	movlb	1	; () banked
 31971  00E4CE  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31972                           
 31973                           ; BSR set to: 1
 31974                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 31975                           
 31976                           ; BSR set to: 1
 31977  00E4D0  D075               	goto	l586
 31978  00E4D2                     
 31979                           ; BSR set to: 1
 31980                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 31981                           
 31982                           ; BSR set to: 1
 31983  00E4D2  ECF4  F082         	call	_MSDProcessCommand	;wreg free
 31984  00E4D6  0AFF               	xorlw	255
 31985  00E4D8  A4D8               	btfss	status,2,c
 31986  00E4DA  D070               	goto	l586
 31987  00E4DC  D011               	goto	l591
 31988  00E4DE                     
 31989                           ; BSR set to: 1
 31990                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 31991                           
 31992                           ; BSR set to: 1
 31993  00E4DE  ECF4  F082         	call	_MSDProcessCommand	;wreg free
 31994  00E4E2  0AFF               	xorlw	255
 31995  00E4E4  A4D8               	btfss	status,2,c
 31996  00E4E6  D06A               	goto	l586
 31997                           
 31998                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 31999  00E4E8  010D               	movlb	13	; () banked
 32000  00E4EA  518C               	movf	140,w,b	;volatile
 32001  00E4EC  A4D8               	btfss	status,2,c
 32002  00E4EE  D008               	goto	l591
 32003                           
 32004                           ; BSR set to: 13
 32005  00E4F0  5188               	movf	136,w,b	;volatile
 32006  00E4F2  1189               	iorwf	137,w,b	;volatile
 32007  00E4F4  118A               	iorwf	138,w,b	;volatile
 32008  00E4F6  118B               	iorwf	139,w,b	;volatile
 32009  00E4F8  B4D8               	btfsc	status,2,c
 32010  00E4FA  D002               	goto	l591
 32011                           
 32012                           ; BSR set to: 13
 32013                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 32014  00E4FC  0E02               	movlw	2
 32015  00E4FE  6F8C               	movwf	140,b	;volatile
 32016  00E500                     l591:
 32017                           
 32018                           ; BSR set to: 13
 32019                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 32020  00E500  0E03               	movlw	3
 32021  00E502  D03E               	goto	L43
 32022  00E504                     
 32023                           ; BSR set to: 1
 32024                           
 32025                           ; BSR set to: 1
 32026  00E504  C11F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 32027  00E508  C120  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 32028                           
 32029                           ; BSR set to: 1
 32030                           
 32031                           ; BSR set to: 1
 32032                           
 32033                           ; BSR set to: 1
 32034  00E50C  0100               	movlb	0	; () banked
 32035  00E50E  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 32036  00E510  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 32037  00E512  B4D8               	btfsc	status,2,c
 32038  00E514  D00A               	goto	l593
 32039                           
 32040                           ; BSR set to: 0
 32041  00E516  C11F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 32042  00E51A  C120  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 32043                           
 32044                           ; BSR set to: 0
 32045                           
 32046                           ; BSR set to: 0
 32047                           
 32048                           ; BSR set to: 0
 32049                           
 32050                           ; BSR set to: 0
 32051  00E51E  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 32052  00E522  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 32053  00E526  BEDF               	btfsc	indf2,7,c
 32054  00E528  D049               	goto	l586
 32055  00E52A                     l593:
 32056                           
 32057                           ; BSR set to: 0
 32058                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 32059                           
 32060                           ; BSR set to: 0
 32061  00E52A  0E01               	movlw	1
 32062  00E52C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32063  00E52E  0E80               	movlw	128
 32064  00E530  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32065  00E532  0E0D               	movlw	13
 32066  00E534  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32067  00E536  0E0D               	movlw	13
 32068  00E538  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32069  00E53A  0E02               	movlw	2
 32070  00E53C  ECEA  F087         	call	_USBTransferOnePacket
 32071  00E540  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32072  00E544  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32073                           
 32074                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 32075  00E548  0101               	movlb	1	; () banked
 32076  00E54A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32077  00E54C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32078  00E54E  B4D8               	btfsc	status,2,c
 32079  00E550  D006               	goto	u15990
 32080                           
 32081                           ; BSR set to: 1
 32082  00E552  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32083  00E556  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32084  00E55A  BEDF               	btfsc	indf2,7,c
 32085  00E55C  D010               	goto	l602
 32086  00E55E                     u15990:
 32087                           
 32088                           ; BSR set to: 1
 32089                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 32090                           
 32091                           ; BSR set to: 1
 32092  00E55E  0E00               	movlw	0
 32093  00E560  0100               	movlb	0	; () banked
 32094  00E562  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32095  00E564  0E40               	movlw	64
 32096  00E566  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32097  00E568  0E0D               	movlw	13
 32098  00E56A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32099  00E56C  0E40               	movlw	64
 32100  00E56E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32101  00E570  0E02               	movlw	2
 32102  00E572  ECEA  F087         	call	_USBTransferOnePacket
 32103  00E576  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32104  00E57A  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32105  00E57E                     l602:
 32106                           
 32107                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 32108  00E57E  0E00               	movlw	0
 32109  00E580                     L43:
 32110  00E580  0101               	movlb	1	; () banked
 32111  00E582  6F63               	movwf	_MSD_State& (0+255),b
 32112                           
 32113                           ;usb_device_msd.c: 513: break;
 32114  00E584  D01B               	goto	l586
 32115  00E586                     
 32116                           ; BSR set to: 1
 32117                           ;usb_device_msd.c: 518: MSD_State=0x00;
 32118                           
 32119                           ; BSR set to: 1
 32120  00E586  0E00               	movlw	0
 32121  00E588  6F63               	movwf	_MSD_State& (0+255),b
 32122                           
 32123                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 32124  00E58A  0E02               	movlw	2
 32125  00E58C  010D               	movlb	13	; () banked
 32126  00E58E  6F8C               	movwf	140,b	;volatile
 32127                           
 32128                           ; BSR set to: 13
 32129                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 32130  00E590  0E00               	movlw	0
 32131  00E592  0100               	movlb	0	; () banked
 32132  00E594  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32133  00E596  0E02               	movlw	2
 32134  00E598  EC65  F087         	call	_USBStallEndpoint
 32135                           
 32136                           ;usb_device_msd.c: 521: }
 32137  00E59C  D00F               	goto	l586
 32138  00E59E                     l570:
 32139  00E59E  0101               	movlb	1	; () banked
 32140  00E5A0  5163               	movf	_MSD_State& (0+255),w,b
 32141                           
 32142                           ; Switch size 1, requested type "space"
 32143                           ; Number of cases is 4, Range of values is 0 to 3
 32144                           ; switch strategies available:
 32145                           ; Name         Instructions Cycles
 32146                           ; simple_byte           13     7 (average)
 32147                           ;	Chosen strategy is simple_byte
 32148  00E5A2  0A00               	xorlw	0	; case 0
 32149  00E5A4  B4D8               	btfsc	status,2,c
 32150  00E5A6  D6DD               	goto	l571
 32151  00E5A8  0A01               	xorlw	1	; case 1
 32152  00E5AA  B4D8               	btfsc	status,2,c
 32153  00E5AC  D792               	goto	l587
 32154  00E5AE  0A03               	xorlw	3	; case 2
 32155  00E5B0  B4D8               	btfsc	status,2,c
 32156  00E5B2  D795               	goto	l589
 32157  00E5B4  0A01               	xorlw	1	; case 3
 32158  00E5B6  B4D8               	btfsc	status,2,c
 32159  00E5B8  D7A5               	goto	l592
 32160  00E5BA  D7E5               	goto	l605
 32161  00E5BC                     l586:
 32162                           
 32163                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 32164  00E5BC  88A0               	bsf	4000,4,c	;volatile
 32165                           
 32166                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 32167  00E5BE  0012               	return		;funcret
 32168  00E5C0                     __end_of_MSDTasks:
 32169                           	opt stack 0
 32170                           tblptru	equ	0xFF8
 32171                           tblptrh	equ	0xFF7
 32172                           tblptrl	equ	0xFF6
 32173                           tablat	equ	0xFF5
 32174                           prodh	equ	0xFF4
 32175                           prodl	equ	0xFF3
 32176                           intcon	equ	0xFF2
 32177                           postinc0	equ	0xFEE
 32178                           wreg	equ	0xFE8
 32179                           indf1	equ	0xFE7
 32180                           postinc1	equ	0xFE6
 32181                           postdec1	equ	0xFE5
 32182                           plusw1	equ	0xFE3
 32183                           fsr1h	equ	0xFE2
 32184                           fsr1l	equ	0xFE1
 32185                           indf2	equ	0xFDF
 32186                           postinc2	equ	0xFDE
 32187                           postdec2	equ	0xFDD
 32188                           plusw2	equ	0xFDB
 32189                           fsr2h	equ	0xFDA
 32190                           fsr2l	equ	0xFD9
 32191                           status	equ	0xFD8
 32192                           
 32193 ;; *************** function _MSDProcessCommand *****************
 32194 ;; Defined at:
 32195 ;;		line 553 in file "usb_device_msd.c"
 32196 ;; Parameters:    Size  Location     Type
 32197 ;;		None
 32198 ;; Auto vars:     Size  Location     Type
 32199 ;;		None
 32200 ;; Return value:  Size  Location     Type
 32201 ;;                  1    wreg      unsigned char 
 32202 ;; Registers used:
 32203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32204 ;; Tracked objects:
 32205 ;;		On entry : 0/0
 32206 ;;		On exit  : 0/0
 32207 ;;		Unchanged: 0/0
 32208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32211 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32212 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32213 ;;Total ram usage:        5 bytes
 32214 ;; Hardware stack levels used:    1
 32215 ;; Hardware stack levels required when called:   19
 32216 ;; This function calls:
 32217 ;;		_ExternalFlash_MediaDetect
 32218 ;;		_ExternalFlash_MediaInitialize
 32219 ;;		_MSDProcessCommandMediaAbsent
 32220 ;;		_MSDProcessCommandMediaPresent
 32221 ;; This function is called by:
 32222 ;;		_MSDTasks
 32223 ;; This function uses a non-reentrant model
 32224 ;;
 32225                           
 32226                           	psect	text128
 32227  0105E8                     __ptext128:
 32228                           	opt stack 0
 32229  0105E8                     _MSDProcessCommand:
 32230                           	opt stack 9
 32231                           
 32232                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 32233                           
 32234                           ;incstack = 0
 32235  0105E8  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 32236  0105EC  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 32237  0105F0  EE22  F092         	lfsr	2,_LUN+9
 32238  0105F4  D801               	call	u13998
 32239  0105F6  D00A               	goto	u13999
 32240  0105F8                     u13998:
 32241  0105F8  0005               	push	
 32242  0105FA  6EFA               	movwf	pclath,c
 32243  0105FC  50DE               	movf	postinc2,w,c
 32244  0105FE  6EFD               	movwf	tosl,c
 32245  010600  50DE               	movf	postinc2,w,c
 32246  010602  6EFE               	movwf	tosh,c
 32247  010604  50DE               	movf	postinc2,w,c
 32248  010606  6EFF               	movwf	tosu,c
 32249  010608  50FA               	movf	pclath,w,c
 32250  01060A  0012               	return		;indir
 32251  01060C                     u13999:
 32252  01060C  0900               	iorlw	0
 32253  01060E  B4D8               	btfsc	status,2,c
 32254  010610  D00C               	goto	u14010
 32255  010612  0102               	movlb	2	; () banked
 32256  010614  510D               	movf	(_gblCBW+13)& (0+255),w,b
 32257  010616  0D01               	mullw	1
 32258  010618  0E5D               	movlw	low _SoftDetach
 32259  01061A  24F3               	addwf	prodl,w,c
 32260  01061C  6ED9               	movwf	fsr2l,c
 32261  01061E  0E01               	movlw	high _SoftDetach
 32262  010620  20F4               	addwfc	prodh,w,c
 32263  010622  6EDA               	movwf	fsr2h,c
 32264  010624  04DE               	decf	postinc2,w,c
 32265  010626  A4D8               	btfss	status,2,c
 32266  010628  D01D               	goto	l608
 32267  01062A                     u14010:
 32268                           
 32269                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 32270                           
 32271                           ; BSR set to: 2
 32272  01062A  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32273  01062E  0E01               	movlw	1
 32274  010630  0100               	movlb	0	; () banked
 32275  010632  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32276  010634  0E00               	movlw	0
 32277  010636  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32278  010638  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32279  01063A  D003               	goto	u14024
 32280  01063C                     u14025:
 32281  01063C  90D8               	bcf	status,0,c
 32282  01063E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32283  010640  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32284  010642                     u14024:
 32285  010642  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32286  010644  D7FB               	goto	u14025
 32287  010646  0100               	movlb	0	; () banked
 32288  010648  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 32289  01064A  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 32290  01064C  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 32291  01064E  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 32292  010650  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 32293  010652  0101               	movlb	1	; () banked
 32294  010654  1747               	andwf	_gblMediaPresent& (0+255),f,b
 32295  010656  0100               	movlb	0	; () banked
 32296  010658  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 32297  01065A  0101               	movlb	1	; () banked
 32298  01065C  1748               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 32299                           
 32300                           ; BSR set to: 1
 32301                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 32302  01065E  EC15  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32303                           
 32304                           ;usb_device_msd.c: 563: }
 32305  010662  D058               	goto	l615
 32306  010664                     l608:
 32307                           
 32308                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 32309  010664  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32310  010668  0E01               	movlw	1
 32311  01066A  0100               	movlb	0	; () banked
 32312  01066C  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32313  01066E  0E00               	movlw	0
 32314  010670  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32315  010672  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32316  010674  D003               	goto	u14034
 32317  010676                     u14035:
 32318  010676  90D8               	bcf	status,0,c
 32319  010678  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32320  01067A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32321  01067C                     u14034:
 32322  01067C  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32323  01067E  D7FB               	goto	u14035
 32324  010680  0101               	movlb	1	; () banked
 32325  010682  5147               	movf	_gblMediaPresent& (0+255),w,b
 32326  010684  0100               	movlb	0	; () banked
 32327  010686  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 32328  010688  0101               	movlb	1	; () banked
 32329  01068A  5148               	movf	(_gblMediaPresent+1)& (0+255),w,b
 32330  01068C  0100               	movlb	0	; () banked
 32331  01068E  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 32332  010690  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32333  010692  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 32334  010694  A4D8               	btfss	status,2,c
 32335  010696  D03C               	goto	l612
 32336                           
 32337                           ; BSR set to: 0
 32338                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 32339  010698  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 32340  01069C  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 32341  0106A0  D801               	call	u14058
 32342  0106A2  D00B               	goto	u14059
 32343  0106A4                     u14058:
 32344  0106A4  0005               	push	
 32345  0106A6  6EFA               	movwf	pclath,c
 32346  0106A8  0102               	movlb	2	; () banked
 32347  0106AA  5189               	movf	_LUN& (0+255),w,b
 32348  0106AC  6EFD               	movwf	tosl,c
 32349  0106AE  518A               	movf	(_LUN+1)& (0+255),w,b
 32350  0106B0  6EFE               	movwf	tosh,c
 32351  0106B2  518B               	movf	(_LUN+2)& (0+255),w,b
 32352  0106B4  6EFF               	movwf	tosu,c
 32353  0106B6  50FA               	movf	pclath,w,c
 32354  0106B8  0012               	return		;indir
 32355  0106BA                     u14059:
 32356  0106BA  0100               	movlb	0	; () banked
 32357  0106BC  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 32358  0106BE  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 32359  0106C0  B4D8               	btfsc	status,2,c
 32360  0106C2  D023               	goto	l613
 32361                           
 32362                           ; BSR set to: 0
 32363                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 32364  0106C4  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32365  0106C8  0E01               	movlw	1
 32366  0106CA  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32367  0106CC  0E00               	movlw	0
 32368  0106CE  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32369  0106D0  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32370  0106D2  D003               	goto	u14074
 32371  0106D4                     u14075:
 32372  0106D4  90D8               	bcf	status,0,c
 32373  0106D6  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32374  0106D8  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32375  0106DA                     u14074:
 32376  0106DA  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32377  0106DC  D7FB               	goto	u14075
 32378  0106DE  0100               	movlb	0	; () banked
 32379  0106E0  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32380  0106E2  0101               	movlb	1	; () banked
 32381  0106E4  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 32382  0106E6  0100               	movlb	0	; () banked
 32383  0106E8  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 32384  0106EA  0101               	movlb	1	; () banked
 32385  0106EC  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 32386                           
 32387                           ; BSR set to: 1
 32388                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 32389  0106EE  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32390  0106F0  0BF0               	andlw	-16
 32391  0106F2  0906               	iorlw	6
 32392  0106F4  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32393                           
 32394                           ; BSR set to: 1
 32395                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 32396  0106F6  0E28               	movlw	40
 32397  0106F8  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32398                           
 32399                           ; BSR set to: 1
 32400                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 32401  0106FA  0E00               	movlw	0
 32402  0106FC  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32403                           
 32404                           ; BSR set to: 1
 32405                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 32406  0106FE  0E01               	movlw	1
 32407  010700  010D               	movlb	13	; () banked
 32408  010702  6F8C               	movwf	140,b	;volatile
 32409                           
 32410                           ; BSR set to: 13
 32411                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 32412  010704  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32413                           
 32414                           ;usb_device_msd.c: 589: }
 32415  010708  D005               	goto	l615
 32416  01070A                     l613:
 32417                           
 32418                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 32419  01070A  EC15  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32420                           
 32421                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 32422  01070E  D002               	goto	l615
 32423  010710                     l612:
 32424                           
 32425                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 32426  010710  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32427  010714                     l615:
 32428                           
 32429                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 32430  010714  0101               	movlb	1	; () banked
 32431  010716  5162               	movf	_MSDCommandState& (0+255),w,b
 32432  010718  0012               	return	
 32433  01071A                     __end_of_MSDProcessCommand:
 32434                           	opt stack 0
 32435                           tosu	equ	0xFFF
 32436                           tosh	equ	0xFFE
 32437                           tosl	equ	0xFFD
 32438                           pclath	equ	0xFFA
 32439                           tblptru	equ	0xFF8
 32440                           tblptrh	equ	0xFF7
 32441                           tblptrl	equ	0xFF6
 32442                           tablat	equ	0xFF5
 32443                           prodh	equ	0xFF4
 32444                           prodl	equ	0xFF3
 32445                           intcon	equ	0xFF2
 32446                           postinc0	equ	0xFEE
 32447                           wreg	equ	0xFE8
 32448                           indf1	equ	0xFE7
 32449                           postinc1	equ	0xFE6
 32450                           postdec1	equ	0xFE5
 32451                           plusw1	equ	0xFE3
 32452                           fsr1h	equ	0xFE2
 32453                           fsr1l	equ	0xFE1
 32454                           indf2	equ	0xFDF
 32455                           postinc2	equ	0xFDE
 32456                           postdec2	equ	0xFDD
 32457                           plusw2	equ	0xFDB
 32458                           fsr2h	equ	0xFDA
 32459                           fsr2l	equ	0xFD9
 32460                           status	equ	0xFD8
 32461                           
 32462 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 32463 ;; Defined at:
 32464 ;;		line 635 in file "usb_device_msd.c"
 32465 ;; Parameters:    Size  Location     Type
 32466 ;;		None
 32467 ;; Auto vars:     Size  Location     Type
 32468 ;;		None
 32469 ;; Return value:  Size  Location     Type
 32470 ;;                  1    wreg      void 
 32471 ;; Registers used:
 32472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32473 ;; Tracked objects:
 32474 ;;		On entry : 0/0
 32475 ;;		On exit  : 0/0
 32476 ;;		Unchanged: 0/0
 32477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32482 ;;Total ram usage:        0 bytes
 32483 ;; Hardware stack levels used:    1
 32484 ;; Hardware stack levels required when called:   18
 32485 ;; This function calls:
 32486 ;;		_MSDErrorHandler
 32487 ;;		_MSDProcessCommandMediaPresent
 32488 ;;		_ResetSenseData
 32489 ;; This function is called by:
 32490 ;;		_MSDProcessCommand
 32491 ;; This function uses a non-reentrant model
 32492 ;;
 32493                           
 32494                           	psect	text129
 32495  01422A                     __ptext129:
 32496                           	opt stack 0
 32497  01422A                     _MSDProcessCommandMediaAbsent:
 32498                           	opt stack 9
 32499                           
 32500                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 32501                           
 32502                           ; BSR set to: 1
 32503                           ;incstack = 0
 32504  01422A  D01E               	goto	l619
 32505  01422C                     
 32506                           ;usb_device_msd.c: 646: ResetSenseData();
 32507  01422C  EC46  F0A1         	call	_ResetSenseData	;wreg free
 32508                           
 32509                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 32510  014230  0101               	movlb	1	; () banked
 32511  014232  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32512  014234  0BF0               	andlw	-16
 32513  014236  0902               	iorlw	2
 32514  014238  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32515                           
 32516                           ; BSR set to: 1
 32517                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 32518  01423A  0E3A               	movlw	58
 32519  01423C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32520                           
 32521                           ; BSR set to: 1
 32522                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 32523  01423E  0E00               	movlw	0
 32524  014240  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32525                           
 32526                           ; BSR set to: 1
 32527                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 32528  014242  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32529                           
 32530                           ;usb_device_msd.c: 655: break;
 32531  014246  0012               	return	
 32532  014248                     
 32533                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 32534  014248  0E01               	movlw	1
 32535  01424A  010D               	movlb	13	; () banked
 32536  01424C  6F8C               	movwf	140,b	;volatile
 32537                           
 32538                           ; BSR set to: 13
 32539                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 32540  01424E  0101               	movlb	1	; () banked
 32541  014250  6962               	setf	_MSDCommandState& (0+255),b
 32542                           
 32543                           ;usb_device_msd.c: 665: break;
 32544  014252  0012               	return	
 32545  014254                     
 32546                           ; BSR set to: 1
 32547                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 32548                           
 32549                           ; BSR set to: 1
 32550  014254  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32551                           
 32552                           ;usb_device_msd.c: 671: break;
 32553  014258  0012               	return	
 32554  01425A                     
 32555                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 32556  01425A  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32557                           
 32558                           ;usb_device_msd.c: 677: break;
 32559  01425E  0012               	return	
 32560  014260                     
 32561                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 32562  014260  0E7F               	movlw	127
 32563  014262  ECB8  F084         	call	_MSDErrorHandler
 32564                           
 32565                           ;usb_device_msd.c: 685: }
 32566                           
 32567                           ;usb_device_msd.c: 684: break;
 32568  014266  0012               	return	
 32569  014268                     l619:
 32570  014268  0101               	movlb	1	; () banked
 32571  01426A  5162               	movf	_MSDCommandState& (0+255),w,b
 32572                           
 32573                           ; Switch size 1, requested type "space"
 32574                           ; Number of cases is 5, Range of values is 0 to 253
 32575                           ; switch strategies available:
 32576                           ; Name         Instructions Cycles
 32577                           ; simple_byte           16     9 (average)
 32578                           ;	Chosen strategy is simple_byte
 32579  01426C  0A00               	xorlw	0	; case 0
 32580  01426E  B4D8               	btfsc	status,2,c
 32581  014270  D7EB               	goto	l622
 32582  014272  0A03               	xorlw	3	; case 3
 32583  014274  B4D8               	btfsc	status,2,c
 32584  014276  D7DA               	goto	l620
 32585  014278  0A11               	xorlw	17	; case 18
 32586  01427A  B4D8               	btfsc	status,2,c
 32587  01427C  D7EB               	goto	l624
 32588  01427E  0A0C               	xorlw	12	; case 30
 32589  014280  B4D8               	btfsc	status,2,c
 32590  014282  D7E2               	goto	l622
 32591  014284  0AE3               	xorlw	227	; case 253
 32592  014286  B4D8               	btfsc	status,2,c
 32593  014288  D7E8               	goto	l625
 32594  01428A  D7EA               	goto	l626
 32595  01428C                     __end_of_MSDProcessCommandMediaAbsent:
 32596                           	opt stack 0
 32597                           tosu	equ	0xFFF
 32598                           tosh	equ	0xFFE
 32599                           tosl	equ	0xFFD
 32600                           pclath	equ	0xFFA
 32601                           tblptru	equ	0xFF8
 32602                           tblptrh	equ	0xFF7
 32603                           tblptrl	equ	0xFF6
 32604                           tablat	equ	0xFF5
 32605                           prodh	equ	0xFF4
 32606                           prodl	equ	0xFF3
 32607                           intcon	equ	0xFF2
 32608                           postinc0	equ	0xFEE
 32609                           wreg	equ	0xFE8
 32610                           indf1	equ	0xFE7
 32611                           postinc1	equ	0xFE6
 32612                           postdec1	equ	0xFE5
 32613                           plusw1	equ	0xFE3
 32614                           fsr1h	equ	0xFE2
 32615                           fsr1l	equ	0xFE1
 32616                           indf2	equ	0xFDF
 32617                           postinc2	equ	0xFDE
 32618                           postdec2	equ	0xFDD
 32619                           plusw2	equ	0xFDB
 32620                           fsr2h	equ	0xFDA
 32621                           fsr2l	equ	0xFD9
 32622                           status	equ	0xFD8
 32623                           
 32624 ;; *************** function _MSDProcessCommandMediaPresent *****************
 32625 ;; Defined at:
 32626 ;;		line 712 in file "usb_device_msd.c"
 32627 ;; Parameters:    Size  Location     Type
 32628 ;;		None
 32629 ;; Auto vars:     Size  Location     Type
 32630 ;;  capacity        4   66[BANK0 ] struct .
 32631 ;;  sectorSize      4   62[BANK0 ] struct .
 32632 ;;  i               1   70[BANK0 ] unsigned char 
 32633 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 32634 ;; Return value:  Size  Location     Type
 32635 ;;                  1    wreg      void 
 32636 ;; Registers used:
 32637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32638 ;; Tracked objects:
 32639 ;;		On entry : 0/0
 32640 ;;		On exit  : 0/0
 32641 ;;		Unchanged: 0/0
 32642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32644 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32646 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32647 ;;Total ram usage:       14 bytes
 32648 ;; Hardware stack levels used:    1
 32649 ;; Hardware stack levels required when called:   17
 32650 ;; This function calls:
 32651 ;;		_ExternalFlash_CapacityRead
 32652 ;;		_ExternalFlash_SectorSizeRead
 32653 ;;		_ExternalFlash_WriteProtectStateGet
 32654 ;;		_MSDCheckForErrorCases
 32655 ;;		_MSDComputeDeviceInAndResidue
 32656 ;;		_MSDErrorHandler
 32657 ;;		_MSDReadHandler
 32658 ;;		_MSDWriteHandler
 32659 ;;		_ResetSenseData
 32660 ;;		_USBTransferOnePacket
 32661 ;;		_memcpy
 32662 ;; This function is called by:
 32663 ;;		_MSDProcessCommand
 32664 ;;		_MSDProcessCommandMediaAbsent
 32665 ;; This function uses a non-reentrant model
 32666 ;;
 32667                           
 32668                           	psect	text130
 32669  00BDA8                     __ptext130:
 32670                           	opt stack 0
 32671  00BDA8                     _MSDProcessCommandMediaPresent:
 32672                           	opt stack 10
 32673                           
 32674                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 32675                           
 32676                           ;incstack = 0
 32677  00BDA8  D1D0               	goto	l630
 32678  00BDAA                     
 32679                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 32680  00BDAA  EC22  F078         	call	_MSDReadHandler	;wreg free
 32681  00BDAE  0900               	iorlw	0
 32682  00BDB0  A4D8               	btfss	status,2,c
 32683  00BDB2  0012               	return	
 32684                           
 32685                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 32686  00BDB4  0101               	movlb	1	; () banked
 32687  00BDB6  6962               	setf	_MSDCommandState& (0+255),b
 32688                           
 32689                           ; BSR set to: 1
 32690                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 32691  00BDB8  0012               	return	
 32692  00BDBA                     
 32693                           ; BSR set to: 1
 32694                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 32695                           
 32696                           ; BSR set to: 1
 32697  00BDBA  ECF5  F06A         	call	_MSDWriteHandler	;wreg free
 32698  00BDBE  0900               	iorlw	0
 32699  00BDC0  A4D8               	btfss	status,2,c
 32700  00BDC2  0012               	return	
 32701                           
 32702                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 32703  00BDC4  0101               	movlb	1	; () banked
 32704  00BDC6  6962               	setf	_MSDCommandState& (0+255),b
 32705                           
 32706                           ; BSR set to: 1
 32707                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 32708  00BDC8  0012               	return	
 32709  00BDCA                     
 32710                           ; BSR set to: 1
 32711                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 32712                           
 32713                           ; BSR set to: 1
 32714  00BDCA  055C               	decf	_MSDHostNoData& (0+255),w,b
 32715  00BDCC  A4D8               	btfss	status,2,c
 32716  00BDCE  D002               	goto	l637
 32717                           
 32718                           ; BSR set to: 1
 32719                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 32720  00BDD0  6962               	setf	_MSDCommandState& (0+255),b
 32721                           
 32722                           ;usb_device_msd.c: 751: break;
 32723  00BDD2  0012               	return	
 32724  00BDD4                     l637:
 32725                           
 32726                           ; BSR set to: 1
 32727                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 32728  00BDD4  C212  F146         	movff	_gblCBW+18,_TransferLength+1
 32729                           
 32730                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 32731  00BDD8  C213  F145         	movff	_gblCBW+19,_TransferLength
 32732                           
 32733                           ; BSR set to: 1
 32734                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 32735  00BDDC  C145  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 32736  00BDE0  C146  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 32737  00BDE4  0100               	movlb	0	; () banked
 32738  00BDE6  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32739  00BDE8  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32740  00BDEA  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 32741  00BDEE  0900               	iorlw	0
 32742  00BDF0  A4D8               	btfss	status,2,c
 32743  00BDF2  0012               	return	
 32744                           
 32745                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 32746                           
 32747                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 32748  00BDF4  0E00               	movlw	0
 32749  00BDF6  0100               	movlb	0	; () banked
 32750  00BDF8  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32751  00BDFA  0E24               	movlw	36
 32752  00BDFC  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32753  00BDFE  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32754                           
 32755                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 32756  00BE02  0E00               	movlw	0
 32757  00BE04  0100               	movlb	0	; () banked
 32758  00BE06  6F60               	movwf	memcpy@d1& (0+255),b
 32759  00BE08  0E06               	movlw	6
 32760  00BE0A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32761  00BE0C  0E60               	movlw	low _inq_resp
 32762  00BE0E  6F62               	movwf	memcpy@s1& (0+255),b
 32763  00BE10  0EA1               	movlw	high _inq_resp
 32764  00BE12  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32765  00BE14  0E00               	movlw	0
 32766  00BE16  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32767  00BE18  0E24               	movlw	36
 32768  00BE1A  6F64               	movwf	memcpy@n& (0+255),b
 32769  00BE1C  ECD9  F0A1         	call	_memcpy	;wreg free
 32770                           
 32771                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 32772  00BE20  0EFD               	movlw	253
 32773  00BE22  0101               	movlb	1	; () banked
 32774  00BE24  6F62               	movwf	_MSDCommandState& (0+255),b
 32775                           
 32776                           ;usb_device_msd.c: 773: break;
 32777  00BE26  0012               	return	
 32778  00BE28                     
 32779                           ; BSR set to: 1
 32780                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 32781                           
 32782                           ; BSR set to: 1
 32783  00BE28  C29E  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 32784  00BE2C  C29F  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 32785  00BE30  EE22  F08C         	lfsr	2,_LUN+3
 32786  00BE34  D801               	call	u12328
 32787  00BE36  D00A               	goto	u12329
 32788  00BE38                     u12328:
 32789  00BE38  0005               	push	
 32790  00BE3A  6EFA               	movwf	pclath,c
 32791  00BE3C  50DE               	movf	postinc2,w,c
 32792  00BE3E  6EFD               	movwf	tosl,c
 32793  00BE40  50DE               	movf	postinc2,w,c
 32794  00BE42  6EFE               	movwf	tosh,c
 32795  00BE44  50DE               	movf	postinc2,w,c
 32796  00BE46  6EFF               	movwf	tosu,c
 32797  00BE48  50FA               	movf	pclath,w,c
 32798  00BE4A  0012               	return		;indir
 32799  00BE4C                     u12329:
 32800  00BE4C  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 32801  00BE50  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 32802  00BE54  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 32803  00BE58  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 32804                           
 32805                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 32806  00BE5C  C29E  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 32807  00BE60  C29F  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 32808  00BE64  EE22  F08F         	lfsr	2,_LUN+6
 32809  00BE68  D801               	call	u12338
 32810  00BE6A  D00A               	goto	u12339
 32811  00BE6C                     u12338:
 32812  00BE6C  0005               	push	
 32813  00BE6E  6EFA               	movwf	pclath,c
 32814  00BE70  50DE               	movf	postinc2,w,c
 32815  00BE72  6EFD               	movwf	tosl,c
 32816  00BE74  50DE               	movf	postinc2,w,c
 32817  00BE76  6EFE               	movwf	tosh,c
 32818  00BE78  50DE               	movf	postinc2,w,c
 32819  00BE7A  6EFF               	movwf	tosu,c
 32820  00BE7C  50FA               	movf	pclath,w,c
 32821  00BE7E  0012               	return		;indir
 32822  00BE80                     u12339:
 32823  00BE80  0100               	movlb	0	; () banked
 32824  00BE82  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 32825  00BE86  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 32826  00BE8A  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 32827  00BE8C  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 32828                           
 32829                           ; BSR set to: 0
 32830                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 32831  00BE8E  EE26 F000          	lfsr	2,1536
 32832  00BE92  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 32833                           
 32834                           ; BSR set to: 0
 32835                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 32836  00BE96  EE26 F001          	lfsr	2,1537	;volatile
 32837  00BE9A  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 32838                           
 32839                           ; BSR set to: 0
 32840                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 32841  00BE9E  EE26 F002          	lfsr	2,1538	;volatile
 32842  00BEA2  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 32843                           
 32844                           ; BSR set to: 0
 32845                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 32846  00BEA6  EE26 F003          	lfsr	2,1539	;volatile
 32847  00BEAA  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 32848                           
 32849                           ; BSR set to: 0
 32850                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 32851  00BEAE  EE26 F004          	lfsr	2,1540	;volatile
 32852  00BEB2  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 32853                           
 32854                           ; BSR set to: 0
 32855                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 32856  00BEB6  EE26 F005          	lfsr	2,1541	;volatile
 32857  00BEBA  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 32858                           
 32859                           ; BSR set to: 0
 32860                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 32861  00BEBE  EE26 F006          	lfsr	2,1542	;volatile
 32862  00BEC2  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 32863                           
 32864                           ; BSR set to: 0
 32865                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 32866  00BEC6  EE26 F007          	lfsr	2,1543	;volatile
 32867  00BECA  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 32868                           
 32869                           ; BSR set to: 0
 32870                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 32871  00BECE  0E00               	movlw	0
 32872  00BED0  0101               	movlb	1	; () banked
 32873  00BED2  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32874  00BED4  0E08               	movlw	8
 32875  00BED6  6F45               	movwf	_TransferLength& (0+255),b
 32876                           
 32877                           ; BSR set to: 1
 32878                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 32879  00BED8  0E00               	movlw	0
 32880  00BEDA  0100               	movlb	0	; () banked
 32881  00BEDC  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32882  00BEDE  0E08               	movlw	8
 32883  00BEE0  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32884  00BEE2  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32885                           
 32886                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 32887  00BEE6  0EFD               	movlw	253
 32888  00BEE8  0101               	movlb	1	; () banked
 32889  00BEEA  6F62               	movwf	_MSDCommandState& (0+255),b
 32890                           
 32891                           ;usb_device_msd.c: 802: break;
 32892  00BEEC  0012               	return	
 32893  00BEEE                     
 32894                           ; BSR set to: 1
 32895                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32896                           
 32897                           ; BSR set to: 1
 32898  00BEEE  055C               	decf	_MSDHostNoData& (0+255),w,b
 32899  00BEF0  A4D8               	btfss	status,2,c
 32900  00BEF2  D002               	goto	l641
 32901                           
 32902                           ; BSR set to: 1
 32903                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32904  00BEF4  6962               	setf	_MSDCommandState& (0+255),b
 32905                           
 32906                           ;usb_device_msd.c: 814: break;
 32907  00BEF6  0012               	return	
 32908  00BEF8                     l641:
 32909                           
 32910                           ; BSR set to: 1
 32911                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 32912                           
 32913                           ; BSR set to: 1
 32914  00BEF8  0E00               	movlw	0
 32915  00BEFA  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32916  00BEFC  0E12               	movlw	18
 32917  00BEFE  6F45               	movwf	_TransferLength& (0+255),b
 32918                           
 32919                           ; BSR set to: 1
 32920                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 32921  00BF00  0E00               	movlw	0
 32922  00BF02  0100               	movlb	0	; () banked
 32923  00BF04  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32924  00BF06  0E12               	movlw	18
 32925  00BF08  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32926  00BF0A  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32927                           
 32928                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 32929  00BF0E  0E00               	movlw	0
 32930  00BF10  0100               	movlb	0	; () banked
 32931  00BF12  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32932  00BF14                     l13592:
 32933                           
 32934                           ; BSR set to: 0
 32935  00BF14  0E11               	movlw	17
 32936  00BF16  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 32937  00BF18  D001               	goto	l642
 32938  00BF1A  D014               	goto	u12360
 32939  00BF1C                     l642:
 32940                           
 32941                           ; BSR set to: 0
 32942                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 32943                           
 32944                           ; BSR set to: 0
 32945  00BF1C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32946  00BF1E  0D01               	mullw	1
 32947  00BF20  0E00               	movlw	low _gblSenseData
 32948  00BF22  24F3               	addwf	prodl,w,c
 32949  00BF24  6ED9               	movwf	fsr2l,c
 32950  00BF26  0E01               	movlw	high _gblSenseData
 32951  00BF28  20F4               	addwfc	prodh,w,c
 32952  00BF2A  6EDA               	movwf	fsr2h,c
 32953  00BF2C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32954  00BF2E  0D01               	mullw	1
 32955  00BF30  0E00               	movlw	0
 32956  00BF32  24F3               	addwf	prodl,w,c
 32957  00BF34  6EE1               	movwf	fsr1l,c
 32958  00BF36  0E06               	movlw	6
 32959  00BF38  20F4               	addwfc	prodh,w,c
 32960  00BF3A  6EE2               	movwf	fsr1h,c
 32961  00BF3C  CFDF FFE7          	movff	indf2,indf1
 32962                           
 32963                           ; BSR set to: 0
 32964  00BF40  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 32965  00BF42  D7E8               	goto	l13592
 32966  00BF44                     u12360:
 32967                           
 32968                           ; BSR set to: 0
 32969                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 32970                           
 32971                           ; BSR set to: 0
 32972  00BF44  0EFD               	movlw	253
 32973  00BF46  0101               	movlb	1	; () banked
 32974  00BF48  6F62               	movwf	_MSDCommandState& (0+255),b
 32975                           
 32976                           ;usb_device_msd.c: 827: break;
 32977  00BF4A  0012               	return	
 32978  00BF4C                     l644:
 32979                           
 32980                           ; BSR set to: 1
 32981                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 32982  00BF4C  0E03               	movlw	3
 32983  00BF4E  CFE8 F600          	movff	wreg,1536
 32984                           
 32985                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 32986  00BF52  0E00               	movlw	0
 32987  00BF54  CFE8 F601          	movff	wreg,1537	;volatile
 32988                           
 32989                           ; BSR set to: 1
 32990                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 32991  00BF58  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 32992  00BF5C  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 32993  00BF60  EE22  F098         	lfsr	2,_LUN+15
 32994  00BF64  D801               	call	u12378
 32995  00BF66  D00A               	goto	u12379
 32996  00BF68                     u12378:
 32997  00BF68  0005               	push	
 32998  00BF6A  6EFA               	movwf	pclath,c
 32999  00BF6C  50DE               	movf	postinc2,w,c
 33000  00BF6E  6EFD               	movwf	tosl,c
 33001  00BF70  50DE               	movf	postinc2,w,c
 33002  00BF72  6EFE               	movwf	tosh,c
 33003  00BF74  50DE               	movf	postinc2,w,c
 33004  00BF76  6EFF               	movwf	tosu,c
 33005  00BF78  50FA               	movf	pclath,w,c
 33006  00BF7A  0012               	return		;indir
 33007  00BF7C                     u12379:
 33008  00BF7C  0900               	iorlw	0
 33009  00BF7E  A4D8               	btfss	status,2,c
 33010  00BF80  D005               	goto	l646
 33011  00BF82  0E00               	movlw	0
 33012  00BF84  0100               	movlb	0	; () banked
 33013  00BF86  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33014  00BF88  0E00               	movlw	0
 33015  00BF8A  D004               	goto	L46
 33016  00BF8C                     l646:
 33017                           
 33018                           ; BSR set to: 0
 33019  00BF8C  0E00               	movlw	0
 33020  00BF8E  0100               	movlb	0	; () banked
 33021  00BF90  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33022  00BF92  0E80               	movlw	128
 33023  00BF94                     L46:
 33024  00BF94  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 33025                           
 33026                           ; BSR set to: 0
 33027                           
 33028                           ; BSR set to: 0
 33029  00BF96  EE26 F002          	lfsr	2,1538	;volatile
 33030  00BF9A  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 33031                           
 33032                           ; BSR set to: 0
 33033                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 33034  00BF9E  0E00               	movlw	0
 33035  00BFA0  CFE8 F603          	movff	wreg,1539	;volatile
 33036                           
 33037                           ; BSR set to: 0
 33038                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 33039  00BFA4  0E00               	movlw	0
 33040  00BFA6  0101               	movlb	1	; () banked
 33041  00BFA8  6F46               	movwf	(_TransferLength+1)& (0+255),b
 33042  00BFAA  0E04               	movlw	4
 33043  00BFAC  6F45               	movwf	_TransferLength& (0+255),b
 33044                           
 33045                           ; BSR set to: 1
 33046                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 33047  00BFAE  0E00               	movlw	0
 33048  00BFB0  0100               	movlb	0	; () banked
 33049  00BFB2  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 33050  00BFB4  0E04               	movlw	4
 33051  00BFB6  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 33052  00BFB8  ECE6  F094         	call	_MSDComputeDeviceInAndResidue	;wreg free
 33053                           
 33054                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 33055  00BFBC  0EFD               	movlw	253
 33056  00BFBE  0101               	movlb	1	; () banked
 33057  00BFC0  6F62               	movwf	_MSDCommandState& (0+255),b
 33058                           
 33059                           ;usb_device_msd.c: 839: break;
 33060  00BFC2  0012               	return	
 33061  00BFC4                     
 33062                           ; BSR set to: 1
 33063                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 33064                           
 33065                           ; BSR set to: 1
 33066  00BFC4  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33067  00BFC6  0BF0               	andlw	-16
 33068  00BFC8  0905               	iorlw	5
 33069  00BFCA  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33070                           
 33071                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 33072  00BFCC  0E20               	movlw	32
 33073  00BFCE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33074                           
 33075                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 33076  00BFD0  0E00               	movlw	0
 33077  00BFD2  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33078                           
 33079                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 33080  00BFD4  0E01               	movlw	1
 33081  00BFD6  010D               	movlb	13	; () banked
 33082  00BFD8  6F8C               	movwf	140,b	;volatile
 33083                           
 33084                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 33085  00BFDA  0E00               	movlw	0
 33086  00BFDC  6F88               	movwf	136,b	;volatile
 33087  00BFDE  0E00               	movlw	0
 33088  00BFE0  6F89               	movwf	137,b	;volatile
 33089  00BFE2  0E00               	movlw	0
 33090  00BFE4  6F8A               	movwf	138,b	;volatile
 33091  00BFE6  0E00               	movlw	0
 33092  00BFE8  6F8B               	movwf	139,b	;volatile
 33093                           
 33094                           ; BSR set to: 13
 33095                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 33096  00BFEA  0101               	movlb	1	; () banked
 33097  00BFEC  6962               	setf	_MSDCommandState& (0+255),b
 33098                           
 33099                           ;usb_device_msd.c: 848: break;
 33100  00BFEE  0012               	return	
 33101  00BFF0                     
 33102                           ; BSR set to: 1
 33103                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 33104                           
 33105                           ; BSR set to: 1
 33106  00BFF0  0E00               	movlw	0
 33107  00BFF2  0100               	movlb	0	; () banked
 33108  00BFF4  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 33109  00BFF6  0E00               	movlw	0
 33110  00BFF8  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 33111  00BFFA  0E00               	movlw	0
 33112  00BFFC  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 33113  00BFFE  0E00               	movlw	0
 33114  00C000  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 33115  00C002  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 33116  00C006  0900               	iorlw	0
 33117  00C008  A4D8               	btfss	status,2,c
 33118  00C00A  0012               	return	
 33119                           
 33120                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 33121                           
 33122                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 33123  00C00C  0101               	movlb	1	; () banked
 33124  00C00E  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33125  00C010  0B0F               	andlw	15
 33126  00C012  0A06               	xorlw	6
 33127  00C014  A4D8               	btfss	status,2,c
 33128  00C016  D007               	goto	l652
 33129                           
 33130                           ; BSR set to: 1
 33131  00C018  010D               	movlb	13	; () banked
 33132  00C01A  058C               	decf	140,w,b	;volatile
 33133  00C01C  A4D8               	btfss	status,2,c
 33134  00C01E  D003               	goto	l652
 33135                           
 33136                           ; BSR set to: 13
 33137                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 33138  00C020  0101               	movlb	1	; () banked
 33139  00C022  6962               	setf	_MSDCommandState& (0+255),b
 33140                           
 33141                           ;usb_device_msd.c: 870: }
 33142  00C024  0012               	return	
 33143  00C026                     l652:
 33144                           
 33145                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 33146                           
 33147                           ; BSR set to: 1
 33148  00C026  EC46  F0A1         	call	_ResetSenseData	;wreg free
 33149                           
 33150                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 33151  00C02A  0E00               	movlw	0
 33152  00C02C  010D               	movlb	13	; () banked
 33153  00C02E  6F88               	movwf	136,b	;volatile
 33154  00C030  0E00               	movlw	0
 33155  00C032  6F89               	movwf	137,b	;volatile
 33156  00C034  0E00               	movlw	0
 33157  00C036  6F8A               	movwf	138,b	;volatile
 33158  00C038  0E00               	movlw	0
 33159  00C03A  6F8B               	movwf	139,b	;volatile
 33160                           
 33161                           ; BSR set to: 13
 33162                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 33163  00C03C  0101               	movlb	1	; () banked
 33164  00C03E  6962               	setf	_MSDCommandState& (0+255),b
 33165                           
 33166                           ; BSR set to: 1
 33167                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 33168  00C040  0012               	return	
 33169  00C042                     
 33170                           ; BSR set to: 1
 33171                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 33172                           
 33173                           ; BSR set to: 1
 33174                           
 33175                           ; BSR set to: 1
 33176  00C042  0E00               	movlw	0
 33177  00C044  010D               	movlb	13	; () banked
 33178  00C046  6F88               	movwf	136,b	;volatile
 33179  00C048  0E00               	movlw	0
 33180  00C04A  6F89               	movwf	137,b	;volatile
 33181  00C04C  0E00               	movlw	0
 33182  00C04E  6F8A               	movwf	138,b	;volatile
 33183  00C050  0E00               	movlw	0
 33184  00C052  6F8B               	movwf	139,b	;volatile
 33185                           
 33186                           ; BSR set to: 13
 33187                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 33188  00C054  0101               	movlb	1	; () banked
 33189  00C056  6962               	setf	_MSDCommandState& (0+255),b
 33190                           
 33191                           ;usb_device_msd.c: 885: break;
 33192  00C058  0012               	return	
 33193  00C05A                     
 33194                           ; BSR set to: 1
 33195                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 33196                           
 33197                           ; BSR set to: 1
 33198  00C05A  5149               	movf	_USBMSDInHandle& (0+255),w,b
 33199  00C05C  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 33200  00C05E  B4D8               	btfsc	status,2,c
 33201  00C060  D006               	goto	u12430
 33202                           
 33203                           ; BSR set to: 1
 33204  00C062  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 33205  00C066  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33206  00C06A  BEDF               	btfsc	indf2,7,c
 33207  00C06C  0012               	return	
 33208  00C06E                     u12430:
 33209                           
 33210                           ; BSR set to: 1
 33211                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 33212                           
 33213                           ; BSR set to: 1
 33214  00C06E  0102               	movlb	2	; () banked
 33215  00C070  510B               	movf	(_gblCBW+11)& (0+255),w,b
 33216  00C072  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33217  00C074  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33218  00C076  E104               	bnz	u12440
 33219  00C078  0E40               	movlw	64
 33220  00C07A  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 33221  00C07C  A0D8               	btfss	status,0,c
 33222  00C07E  D00B               	goto	l660
 33223  00C080                     u12440:
 33224                           
 33225                           ; BSR set to: 2
 33226                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 33227  00C080  0E40               	movlw	64
 33228  00C082  0100               	movlb	0	; () banked
 33229  00C084  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 33230                           
 33231                           ; BSR set to: 0
 33232                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 33233  00C086  0E40               	movlw	64
 33234  00C088  0102               	movlb	2	; () banked
 33235  00C08A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33236  00C08C  0E00               	movlw	0
 33237  00C08E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33238  00C090  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33239  00C092  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33240                           
 33241                           ;usb_device_msd.c: 900: }
 33242  00C094  D00A               	goto	l661
 33243  00C096                     l660:
 33244                           
 33245                           ; BSR set to: 2
 33246                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 33247  00C096  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 33248                           
 33249                           ; BSR set to: 2
 33250                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 33251  00C09A  0E00               	movlw	0
 33252  00C09C  6F08               	movwf	(_gblCBW+8)& (0+255),b
 33253  00C09E  0E00               	movlw	0
 33254  00C0A0  6F09               	movwf	(_gblCBW+9)& (0+255),b
 33255  00C0A2  0E00               	movlw	0
 33256  00C0A4  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 33257  00C0A6  0E00               	movlw	0
 33258  00C0A8  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 33259  00C0AA                     l661:
 33260                           
 33261                           ; BSR set to: 2
 33262                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 33263                           
 33264                           ; BSR set to: 2
 33265  00C0AA  0100               	movlb	0	; () banked
 33266  00C0AC  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33267  00C0AE  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 33268  00C0B0  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 33269  00C0B2  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 33270  00C0B4  0101               	movlb	1	; () banked
 33271  00C0B6  5D45               	subwf	_TransferLength& (0+255),w,b
 33272  00C0B8  0100               	movlb	0	; () banked
 33273  00C0BA  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 33274  00C0BC  0101               	movlb	1	; () banked
 33275  00C0BE  5946               	subwfb	(_TransferLength+1)& (0+255),w,b
 33276  00C0C0  A0D8               	btfss	status,0,c
 33277  00C0C2  D007               	goto	l662
 33278                           
 33279                           ; BSR set to: 1
 33280                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 33281  00C0C4  0100               	movlb	0	; () banked
 33282  00C0C6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33283  00C0C8  0101               	movlb	1	; () banked
 33284  00C0CA  5F45               	subwf	_TransferLength& (0+255),f,b
 33285  00C0CC  0E00               	movlw	0
 33286  00C0CE  5B46               	subwfb	(_TransferLength+1)& (0+255),f,b
 33287                           
 33288                           ;usb_device_msd.c: 918: }
 33289  00C0D0  D01E               	goto	u12470
 33290  00C0D2                     l662:
 33291                           
 33292                           ; BSR set to: 1
 33293                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 33294                           
 33295                           ; BSR set to: 1
 33296  00C0D2  0E00               	movlw	0
 33297  00C0D4  0100               	movlb	0	; () banked
 33298  00C0D6  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 33299  00C0D8  D016               	goto	l664
 33300  00C0DA                     
 33301                           ; BSR set to: 0
 33302                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 33303                           
 33304                           ; BSR set to: 0
 33305  00C0DA  0101               	movlb	1	; () banked
 33306  00C0DC  5145               	movf	_TransferLength& (0+255),w,b
 33307  00C0DE  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33308  00C0E0  B4D8               	btfsc	status,2,c
 33309  00C0E2  D004               	goto	l666
 33310                           
 33311                           ; BSR set to: 1
 33312                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 33313  00C0E4  0745               	decf	_TransferLength& (0+255),f,b
 33314  00C0E6  A0D8               	btfss	status,0,c
 33315  00C0E8  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33316                           
 33317                           ;usb_device_msd.c: 932: }
 33318  00C0EA  D00B               	goto	l667
 33319  00C0EC                     l666:
 33320                           
 33321                           ; BSR set to: 1
 33322                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 33323                           
 33324                           ; BSR set to: 1
 33325  00C0EC  0100               	movlb	0	; () banked
 33326  00C0EE  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33327  00C0F0  0D01               	mullw	1
 33328  00C0F2  0E00               	movlw	0
 33329  00C0F4  24F3               	addwf	prodl,w,c
 33330  00C0F6  6ED9               	movwf	fsr2l,c
 33331  00C0F8  0E06               	movlw	6
 33332  00C0FA  20F4               	addwfc	prodh,w,c
 33333  00C0FC  6EDA               	movwf	fsr2h,c
 33334  00C0FE  0E00               	movlw	0
 33335  00C100  6EDF               	movwf	indf2,c
 33336  00C102                     l667:
 33337                           
 33338                           ; BSR set to: 0
 33339  00C102  0100               	movlb	0	; () banked
 33340  00C104  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33341  00C106                     l664:
 33342                           
 33343                           ; BSR set to: 0
 33344                           
 33345                           ; BSR set to: 0
 33346  00C106  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33347  00C108  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33348  00C10A  A0D8               	btfss	status,0,c
 33349  00C10C  D7E6               	goto	l665
 33350  00C10E                     u12470:
 33351                           
 33352                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 33353                           
 33354                           ; BSR set to: 0
 33355                           
 33356                           ; BSR set to: 0
 33357  00C10E  0E01               	movlw	1
 33358  00C110  0100               	movlb	0	; () banked
 33359  00C112  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33360  00C114  0E00               	movlw	0
 33361  00C116  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 33362  00C118  0E06               	movlw	6
 33363  00C11A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 33364  00C11C  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 33365  00C120  0E02               	movlw	2
 33366  00C122  ECEA  F087         	call	_USBTransferOnePacket
 33367  00C126  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33368  00C12A  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33369                           
 33370                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 33371  00C12E  0102               	movlb	2	; () banked
 33372  00C130  5108               	movf	(_gblCBW+8)& (0+255),w,b
 33373  00C132  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33374  00C134  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33375  00C136  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 33376  00C138  A4D8               	btfss	status,2,c
 33377  00C13A  0012               	return	
 33378                           
 33379                           ; BSR set to: 2
 33380                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 33381  00C13C  0101               	movlb	1	; () banked
 33382  00C13E  6962               	setf	_MSDCommandState& (0+255),b
 33383                           
 33384                           ; BSR set to: 1
 33385                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 33386                           
 33387                           ; BSR set to: 1
 33388                           
 33389                           ;usb_device_msd.c: 949: break;
 33390  00C140  0012               	return	
 33391  00C142                     
 33392                           ; BSR set to: 1
 33393                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 33394                           
 33395                           ; BSR set to: 1
 33396                           
 33397                           ;usb_device_msd.c: 954: default:
 33398                           
 33399                           ; BSR set to: 1
 33400  00C142  0E7F               	movlw	127
 33401  00C144  ECB8  F084         	call	_MSDErrorHandler
 33402                           
 33403                           ;usb_device_msd.c: 960: }
 33404                           
 33405                           ;usb_device_msd.c: 959: break;
 33406  00C148  0012               	return	
 33407  00C14A                     l630:
 33408  00C14A  0101               	movlb	1	; () banked
 33409  00C14C  5162               	movf	_MSDCommandState& (0+255),w,b
 33410                           
 33411                           ; Switch size 1, requested type "space"
 33412                           ; Number of cases is 12, Range of values is 0 to 254
 33413                           ; switch strategies available:
 33414                           ; Name         Instructions Cycles
 33415                           ; simple_byte           37    19 (average)
 33416                           ;	Chosen strategy is simple_byte
 33417  00C14E  0A00               	xorlw	0	; case 0
 33418  00C150  B4D8               	btfsc	status,2,c
 33419  00C152  D74E               	goto	l650
 33420  00C154  0A03               	xorlw	3	; case 3
 33421  00C156  B4D8               	btfsc	status,2,c
 33422  00C158  D6CA               	goto	l640
 33423  00C15A  0A11               	xorlw	17	; case 18
 33424  00C15C  B4D8               	btfsc	status,2,c
 33425  00C15E  D635               	goto	l636
 33426  00C160  0A08               	xorlw	8	; case 26
 33427  00C162  B4D8               	btfsc	status,2,c
 33428  00C164  D6F3               	goto	l644
 33429  00C166  0A01               	xorlw	1	; case 27
 33430  00C168  B4D8               	btfsc	status,2,c
 33431  00C16A  D76B               	goto	l654
 33432  00C16C  0A05               	xorlw	5	; case 30
 33433  00C16E  B4D8               	btfsc	status,2,c
 33434  00C170  D729               	goto	l649
 33435  00C172  0A3B               	xorlw	59	; case 37
 33436  00C174  B4D8               	btfsc	status,2,c
 33437  00C176  D658               	goto	l639
 33438  00C178  0A0D               	xorlw	13	; case 40
 33439  00C17A  B4D8               	btfsc	status,2,c
 33440  00C17C  D616               	goto	l631
 33441  00C17E  0A02               	xorlw	2	; case 42
 33442  00C180  B4D8               	btfsc	status,2,c
 33443  00C182  D61B               	goto	l634
 33444  00C184  0A05               	xorlw	5	; case 47
 33445  00C186  B4D8               	btfsc	status,2,c
 33446  00C188  D75C               	goto	l654
 33447  00C18A  0AD2               	xorlw	210	; case 253
 33448  00C18C  B4D8               	btfsc	status,2,c
 33449  00C18E  D765               	goto	l656
 33450  00C190  0A03               	xorlw	3	; case 254
 33451  00C192  D7D7               	goto	l670
 33452  00C194                     __end_of_MSDProcessCommandMediaPresent:
 33453                           	opt stack 0
 33454                           tosu	equ	0xFFF
 33455                           tosh	equ	0xFFE
 33456                           tosl	equ	0xFFD
 33457                           pclath	equ	0xFFA
 33458                           tblptru	equ	0xFF8
 33459                           tblptrh	equ	0xFF7
 33460                           tblptrl	equ	0xFF6
 33461                           tablat	equ	0xFF5
 33462                           prodh	equ	0xFF4
 33463                           prodl	equ	0xFF3
 33464                           intcon	equ	0xFF2
 33465                           postinc0	equ	0xFEE
 33466                           wreg	equ	0xFE8
 33467                           indf1	equ	0xFE7
 33468                           postinc1	equ	0xFE6
 33469                           postdec1	equ	0xFE5
 33470                           plusw1	equ	0xFE3
 33471                           fsr1h	equ	0xFE2
 33472                           fsr1l	equ	0xFE1
 33473                           indf2	equ	0xFDF
 33474                           postinc2	equ	0xFDE
 33475                           postdec2	equ	0xFDD
 33476                           plusw2	equ	0xFDB
 33477                           fsr2h	equ	0xFDA
 33478                           fsr2l	equ	0xFD9
 33479                           status	equ	0xFD8
 33480                           
 33481 ;; *************** function _MSDWriteHandler *****************
 33482 ;; Defined at:
 33483 ;;		line 1188 in file "usb_device_msd.c"
 33484 ;; Parameters:    Size  Location     Type
 33485 ;;		None
 33486 ;; Auto vars:     Size  Location     Type
 33487 ;;		None
 33488 ;; Return value:  Size  Location     Type
 33489 ;;                  1    wreg      unsigned char 
 33490 ;; Registers used:
 33491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33492 ;; Tracked objects:
 33493 ;;		On entry : 0/0
 33494 ;;		On exit  : 0/0
 33495 ;;		Unchanged: 0/0
 33496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33499 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33500 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33501 ;;Total ram usage:        5 bytes
 33502 ;; Hardware stack levels used:    1
 33503 ;; Hardware stack levels required when called:   16
 33504 ;; This function calls:
 33505 ;;		_ExternalFlash_SectorWrite
 33506 ;;		_ExternalFlash_WriteProtectStateGet
 33507 ;;		_MSDCheckForErrorCases
 33508 ;;		_USBStallEndpoint
 33509 ;;		_USBTransferOnePacket
 33510 ;; This function is called by:
 33511 ;;		_MSDProcessCommandMediaPresent
 33512 ;; This function uses a non-reentrant model
 33513 ;;
 33514                           
 33515                           	psect	text131
 33516  00D5EA                     __ptext131:
 33517                           	opt stack 0
 33518  00D5EA                     _MSDWriteHandler:
 33519                           	opt stack 10
 33520                           
 33521                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 33522                           
 33523                           ;incstack = 0
 33524  00D5EA  D160               	goto	l700
 33525  00D5EC                     l701:
 33526                           
 33527                           ; BSR set to: 1
 33528                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 33529  00D5EC  C211  F12E         	movff	_gblCBW+17,_LBA+3
 33530                           
 33531                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 33532  00D5F0  C212  F12D         	movff	_gblCBW+18,_LBA+2
 33533                           
 33534                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 33535  00D5F4  C213  F12C         	movff	_gblCBW+19,_LBA+1
 33536                           
 33537                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 33538  00D5F8  C214  F12B         	movff	_gblCBW+20,_LBA
 33539                           
 33540                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 33541  00D5FC  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 33542                           
 33543                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 33544  00D600  C217  F145         	movff	_gblCBW+23,_TransferLength
 33545                           
 33546                           ; BSR set to: 1
 33547                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33548  00D604  5145               	movf	_TransferLength& (0+255),w,b
 33549  00D606  0100               	movlb	0	; () banked
 33550  00D608  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33551  00D60A  0101               	movlb	1	; () banked
 33552  00D60C  5146               	movf	(_TransferLength+1)& (0+255),w,b
 33553  00D60E  0100               	movlb	0	; () banked
 33554  00D610  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 33555  00D612  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33556  00D614  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33557  00D616  0E09               	movlw	9
 33558  00D618                     u11265:
 33559  00D618  90D8               	bcf	status,0,c
 33560  00D61A  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 33561  00D61C  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 33562  00D61E  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 33563  00D620  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 33564  00D622  2EE8               	decfsz	wreg,f,c
 33565  00D624  D7F9               	goto	u11265
 33566  00D626  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 33567  00D62A  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33568  00D62E  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33569  00D632  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33570  00D636  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 33571  00D63A  0900               	iorlw	0
 33572  00D63C  A4D8               	btfss	status,2,c
 33573  00D63E  D148               	goto	l703
 33574                           
 33575                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 33576                           
 33577                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 33578  00D640  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33579  00D644  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33580  00D648  EE22  F098         	lfsr	2,_LUN+15
 33581  00D64C  D801               	call	u11288
 33582  00D64E  D00A               	goto	u11289
 33583  00D650                     u11288:
 33584  00D650  0005               	push	
 33585  00D652  6EFA               	movwf	pclath,c
 33586  00D654  50DE               	movf	postinc2,w,c
 33587  00D656  6EFD               	movwf	tosl,c
 33588  00D658  50DE               	movf	postinc2,w,c
 33589  00D65A  6EFE               	movwf	tosh,c
 33590  00D65C  50DE               	movf	postinc2,w,c
 33591  00D65E  6EFF               	movwf	tosu,c
 33592  00D660  50FA               	movf	pclath,w,c
 33593  00D662  0012               	return		;indir
 33594  00D664                     u11289:
 33595  00D664  0900               	iorlw	0
 33596  00D666  B4D8               	btfsc	status,2,c
 33597  00D668  D017               	goto	l704
 33598                           
 33599                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 33600  00D66A  0E01               	movlw	1
 33601  00D66C  010D               	movlb	13	; () banked
 33602  00D66E  6F8C               	movwf	140,b	;volatile
 33603                           
 33604                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 33605  00D670  0101               	movlb	1	; () banked
 33606  00D672  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33607  00D674  0BF0               	andlw	-16
 33608  00D676  0907               	iorlw	7
 33609  00D678  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33610                           
 33611                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 33612  00D67A  0E27               	movlw	39
 33613  00D67C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33614                           
 33615                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 33616  00D67E  0E00               	movlw	0
 33617  00D680  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33618                           
 33619                           ; BSR set to: 1
 33620                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 33621  00D682  0E00               	movlw	0
 33622  00D684  0100               	movlb	0	; () banked
 33623  00D686  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33624  00D688  0E02               	movlw	2
 33625  00D68A  EC65  F087         	call	_USBStallEndpoint
 33626                           
 33627                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 33628  00D68E  0E00               	movlw	0
 33629  00D690  0101               	movlb	1	; () banked
 33630  00D692  6F60               	movwf	_MSDWriteState& (0+255),b
 33631                           
 33632                           ; BSR set to: 1
 33633                           ;usb_device_msd.c: 1228: return MSDWriteState;
 33634  00D694  5160               	movf	_MSDWriteState& (0+255),w,b
 33635                           
 33636                           ; BSR set to: 1
 33637  00D696  0012               	return	
 33638  00D698                     l704:
 33639                           
 33640                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 33641                           
 33642                           ; BSR set to: 1
 33643  00D698  0E01               	movlw	1
 33644  00D69A  0101               	movlb	1	; () banked
 33645  00D69C  6F63               	movwf	_MSD_State& (0+255),b
 33646  00D69E                     
 33647                           ; BSR set to: 1
 33648                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 33649                           
 33650                           ; BSR set to: 1
 33651  00D69E  5145               	movf	_TransferLength& (0+255),w,b
 33652  00D6A0  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33653  00D6A2  A4D8               	btfss	status,2,c
 33654  00D6A4  D002               	goto	l707
 33655                           
 33656                           ; BSR set to: 1
 33657                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 33658  00D6A6  0E00               	movlw	0
 33659  00D6A8  D0FF               	goto	L50
 33660  00D6AA                     l707:
 33661                           
 33662                           ; BSR set to: 1
 33663                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 33664                           
 33665                           ; BSR set to: 1
 33666  00D6AA  0E03               	movlw	3
 33667  00D6AC  6F60               	movwf	_MSDWriteState& (0+255),b
 33668                           
 33669                           ; BSR set to: 1
 33670                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 33671  00D6AE  0E00               	movlw	0
 33672  00D6B0  6F4D               	movwf	_ptrNextData& (0+255),b
 33673  00D6B2  0E06               	movlw	6
 33674  00D6B4  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 33675                           
 33676                           ; BSR set to: 1
 33677                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 33678  00D6B6  0E00               	movlw	0
 33679  00D6B8  010D               	movlb	13	; () banked
 33680  00D6BA  6F88               	movwf	136,b	;volatile
 33681  00D6BC  0E02               	movlw	2
 33682  00D6BE  6F89               	movwf	137,b	;volatile
 33683  00D6C0  0E00               	movlw	0
 33684  00D6C2  6F8A               	movwf	138,b	;volatile
 33685  00D6C4  0E00               	movlw	0
 33686  00D6C6  6F8B               	movwf	139,b	;volatile
 33687  00D6C8                     l708:
 33688                           
 33689                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 33690  00D6C8  010D               	movlb	13	; () banked
 33691  00D6CA  5188               	movf	136,w,b	;volatile
 33692  00D6CC  1189               	iorwf	137,w,b	;volatile
 33693  00D6CE  118A               	iorwf	138,w,b	;volatile
 33694  00D6D0  118B               	iorwf	139,w,b	;volatile
 33695  00D6D2  B4D8               	btfsc	status,2,c
 33696  00D6D4  D01F               	goto	l709
 33697                           
 33698                           ; BSR set to: 13
 33699                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 33700  00D6D6  0101               	movlb	1	; () banked
 33701  00D6D8  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33702  00D6DA  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33703  00D6DC  B4D8               	btfsc	status,2,c
 33704  00D6DE  D006               	goto	l710
 33705                           
 33706                           ; BSR set to: 1
 33707  00D6E0  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33708  00D6E4  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33709  00D6E8  BEDF               	btfsc	indf2,7,c
 33710  00D6EA  D0F2               	goto	l703
 33711  00D6EC                     l710:
 33712                           
 33713                           ; BSR set to: 1
 33714                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 33715                           
 33716                           ; BSR set to: 1
 33717  00D6EC  0E00               	movlw	0
 33718  00D6EE  0100               	movlb	0	; () banked
 33719  00D6F0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33720  00D6F2  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33721  00D6F6  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33722  00D6FA  0E40               	movlw	64
 33723  00D6FC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33724  00D6FE  0E02               	movlw	2
 33725  00D700  ECEA  F087         	call	_USBTransferOnePacket
 33726  00D704  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 33727  00D708  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 33728                           
 33729                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 33730  00D70C  0E04               	movlw	4
 33731  00D70E  0101               	movlb	1	; () banked
 33732  00D710  6F60               	movwf	_MSDWriteState& (0+255),b
 33733                           
 33734                           ;usb_device_msd.c: 1260: }
 33735  00D712  D023               	goto	l711
 33736  00D714                     l709:
 33737                           
 33738                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 33739                           
 33740                           ; BSR set to: 1
 33741  00D714  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33742  00D718  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33743  00D71C  EE22  F098         	lfsr	2,_LUN+15
 33744  00D720  D801               	call	u11348
 33745  00D722  D00A               	goto	u11349
 33746  00D724                     u11348:
 33747  00D724  0005               	push	
 33748  00D726  6EFA               	movwf	pclath,c
 33749  00D728  50DE               	movf	postinc2,w,c
 33750  00D72A  6EFD               	movwf	tosl,c
 33751  00D72C  50DE               	movf	postinc2,w,c
 33752  00D72E  6EFE               	movwf	tosh,c
 33753  00D730  50DE               	movf	postinc2,w,c
 33754  00D732  6EFF               	movwf	tosu,c
 33755  00D734  50FA               	movf	pclath,w,c
 33756  00D736  0012               	return		;indir
 33757  00D738                     u11349:
 33758  00D738  0900               	iorlw	0
 33759  00D73A  B4D8               	btfsc	status,2,c
 33760  00D73C  D00C               	goto	l712
 33761                           
 33762                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 33763  00D73E  0E01               	movlw	1
 33764  00D740  010D               	movlb	13	; () banked
 33765  00D742  6F8C               	movwf	140,b	;volatile
 33766                           
 33767                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 33768  00D744  0101               	movlb	1	; () banked
 33769  00D746  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33770  00D748  0BF0               	andlw	-16
 33771  00D74A  0902               	iorlw	2
 33772  00D74C  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33773                           
 33774                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 33775  00D74E  0E27               	movlw	39
 33776  00D750  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33777                           
 33778                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 33779  00D752  0E00               	movlw	0
 33780  00D754  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33781  00D756                     l712:
 33782                           
 33783                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 33784  00D756  0E02               	movlw	2
 33785  00D758  D0A6               	goto	L94
 33786  00D75A                     l711:
 33787                           
 33788                           ; BSR set to: 1
 33789                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33790                           
 33791                           ; BSR set to: 1
 33792                           
 33793                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 33794                           
 33795                           ; BSR set to: 1
 33796  00D75A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33797  00D75C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33798  00D75E  B4D8               	btfsc	status,2,c
 33799  00D760  D006               	goto	l714
 33800                           
 33801                           ; BSR set to: 1
 33802  00D762  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33803  00D766  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33804  00D76A  BEDF               	btfsc	indf2,7,c
 33805  00D76C  D0B1               	goto	l703
 33806  00D76E                     l714:
 33807                           
 33808                           ; BSR set to: 1
 33809                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 33810                           
 33811                           ; BSR set to: 1
 33812  00D76E  EE20 F001          	lfsr	2,1
 33813  00D772  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33814  00D774  26D9               	addwf	fsr2l,f,c
 33815  00D776  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33816  00D778  22DA               	addwfc	fsr2h,f,c
 33817  00D77A  50DF               	movf	indf2,w,c
 33818  00D77C  0100               	movlb	0	; () banked
 33819  00D77E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33820  00D780  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33821  00D784  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33822  00D786  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33823  00D788  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33824  00D78A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33825  00D78C  0102               	movlb	2	; () banked
 33826  00D78E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33827  00D790  0100               	movlb	0	; () banked
 33828  00D792  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33829  00D794  0102               	movlb	2	; () banked
 33830  00D796  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33831  00D798  0100               	movlb	0	; () banked
 33832  00D79A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33833  00D79C  0102               	movlb	2	; () banked
 33834  00D79E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33835  00D7A0  0100               	movlb	0	; () banked
 33836  00D7A2  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33837  00D7A4  0102               	movlb	2	; () banked
 33838  00D7A6  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33839                           
 33840                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 33841  00D7A8  0101               	movlb	1	; () banked
 33842  00D7AA  EE20 F001          	lfsr	2,1
 33843  00D7AE  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33844  00D7B0  26D9               	addwf	fsr2l,f,c
 33845  00D7B2  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33846  00D7B4  22DA               	addwfc	fsr2h,f,c
 33847  00D7B6  50DF               	movf	indf2,w,c
 33848  00D7B8  0100               	movlb	0	; () banked
 33849  00D7BA  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33850  00D7BC  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33851  00D7C0  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33852  00D7C2  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33853  00D7C4  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33854  00D7C6  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33855  00D7C8  010D               	movlb	13	; () banked
 33856  00D7CA  5F88               	subwf	136,f,b	;volatile
 33857  00D7CC  0100               	movlb	0	; () banked
 33858  00D7CE  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33859  00D7D0  010D               	movlb	13	; () banked
 33860  00D7D2  5B89               	subwfb	137,f,b	;volatile
 33861  00D7D4  0100               	movlb	0	; () banked
 33862  00D7D6  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33863  00D7D8  010D               	movlb	13	; () banked
 33864  00D7DA  5B8A               	subwfb	138,f,b	;volatile
 33865  00D7DC  0100               	movlb	0	; () banked
 33866  00D7DE  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33867  00D7E0  010D               	movlb	13	; () banked
 33868  00D7E2  5B8B               	subwfb	139,f,b	;volatile
 33869                           
 33870                           ; BSR set to: 13
 33871                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33872  00D7E4  0E40               	movlw	64
 33873  00D7E6  0101               	movlb	1	; () banked
 33874  00D7E8  274D               	addwf	_ptrNextData& (0+255),f,b
 33875  00D7EA  0E00               	movlw	0
 33876  00D7EC  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33877                           
 33878                           ; BSR set to: 1
 33879                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33880  00D7EE  0E03               	movlw	3
 33881  00D7F0  D05B               	goto	L50
 33882  00D7F2                     
 33883                           ; BSR set to: 1
 33884                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33885                           
 33886                           ; BSR set to: 1
 33887  00D7F2  010D               	movlb	13	; () banked
 33888  00D7F4  518C               	movf	140,w,b	;volatile
 33889  00D7F6  A4D8               	btfss	status,2,c
 33890  00D7F8  D040               	goto	l719
 33891                           
 33892                           ; BSR set to: 13
 33893                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33894  00D7FA  C29E  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33895  00D7FE  C29F  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33896  00D802  C12B  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33897  00D806  C12C  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33898  00D80A  C12D  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33899  00D80E  C12E  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33900  00D812  0E00               	movlw	0
 33901  00D814  0100               	movlb	0	; () banked
 33902  00D816  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33903  00D818  0E06               	movlw	6
 33904  00D81A  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33905  00D81C  0101               	movlb	1	; () banked
 33906  00D81E  512B               	movf	_LBA& (0+255),w,b
 33907  00D820  112C               	iorwf	(_LBA+1)& (0+255),w,b
 33908  00D822  112D               	iorwf	(_LBA+2)& (0+255),w,b
 33909  00D824  112E               	iorwf	(_LBA+3)& (0+255),w,b
 33910  00D826  A4D8               	btfss	status,2,c
 33911  00D828  D002               	goto	u11390
 33912  00D82A  0E01               	movlw	1
 33913  00D82C  D001               	goto	u11400
 33914  00D82E                     u11390:
 33915  00D82E  0E00               	movlw	0
 33916  00D830                     u11400:
 33917  00D830  0100               	movlb	0	; () banked
 33918  00D832  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 33919  00D834  EE22  F09B         	lfsr	2,_LUN+18
 33920  00D838  D801               	call	u11418
 33921  00D83A  D00A               	goto	u11419
 33922  00D83C                     u11418:
 33923  00D83C  0005               	push	
 33924  00D83E  6EFA               	movwf	pclath,c
 33925  00D840  50DE               	movf	postinc2,w,c
 33926  00D842  6EFD               	movwf	tosl,c
 33927  00D844  50DE               	movf	postinc2,w,c
 33928  00D846  6EFE               	movwf	tosh,c
 33929  00D848  50DE               	movf	postinc2,w,c
 33930  00D84A  6EFF               	movwf	tosu,c
 33931  00D84C  50FA               	movf	pclath,w,c
 33932  00D84E  0012               	return		;indir
 33933  00D850                     u11419:
 33934  00D850  06E8               	decf	wreg,f,c
 33935  00D852  B4D8               	btfsc	status,2,c
 33936  00D854  D012               	goto	l719
 33937                           
 33938                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 33939  00D856  0E64               	movlw	100
 33940  00D858  0101               	movlb	1	; () banked
 33941  00D85A  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 33942  00D85C  D002               	goto	l718
 33943                           
 33944                           ; BSR set to: 1
 33945                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 33946  00D85E  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 33947                           
 33948                           ;usb_device_msd.c: 1314: break;
 33949  00D860  D037               	goto	l703
 33950  00D862                     l718:
 33951                           
 33952                           ; BSR set to: 1
 33953                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 33954                           
 33955                           ; BSR set to: 1
 33956  00D862  0E01               	movlw	1
 33957  00D864  010D               	movlb	13	; () banked
 33958  00D866  6F8C               	movwf	140,b	;volatile
 33959                           
 33960                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 33961  00D868  0101               	movlb	1	; () banked
 33962  00D86A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33963  00D86C  0BF0               	andlw	-16
 33964  00D86E  0903               	iorlw	3
 33965  00D870  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33966                           
 33967                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 33968  00D872  0E00               	movlw	0
 33969  00D874  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33970                           
 33971                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 33972  00D876  0E00               	movlw	0
 33973  00D878  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33974  00D87A                     l719:
 33975                           
 33976                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 33977                           
 33978                           ; BSR set to: 1
 33979                           
 33980                           ; BSR set to: 1
 33981                           
 33982                           ; BSR set to: 1
 33983  00D87A  0E01               	movlw	1
 33984  00D87C  0101               	movlb	1	; () banked
 33985  00D87E  272B               	addwf	_LBA& (0+255),f,b
 33986  00D880  0E00               	movlw	0
 33987  00D882  232C               	addwfc	(_LBA+1)& (0+255),f,b
 33988  00D884  232D               	addwfc	(_LBA+2)& (0+255),f,b
 33989  00D886  232E               	addwfc	(_LBA+3)& (0+255),f,b
 33990                           
 33991                           ; BSR set to: 1
 33992                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 33993  00D888  0745               	decf	_TransferLength& (0+255),f,b
 33994  00D88A  A0D8               	btfss	status,0,c
 33995  00D88C  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33996                           
 33997                           ; BSR set to: 1
 33998                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 33999  00D88E  0E01               	movlw	1
 34000  00D890  D00B               	goto	L50
 34001  00D892                     
 34002                           ; BSR set to: 1
 34003                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 34004                           
 34005                           ; BSR set to: 1
 34006  00D892  0E02               	movlw	2
 34007  00D894  010D               	movlb	13	; () banked
 34008  00D896  6F8C               	movwf	140,b	;volatile
 34009                           
 34010                           ; BSR set to: 13
 34011                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 34012  00D898  0E00               	movlw	0
 34013  00D89A  0100               	movlb	0	; () banked
 34014  00D89C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34015  00D89E  0E02               	movlw	2
 34016  00D8A0  EC65  F087         	call	_USBStallEndpoint
 34017                           
 34018                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 34019  00D8A4  0E00               	movlw	0
 34020  00D8A6                     L94:
 34021  00D8A6  0101               	movlb	1	; () banked
 34022  00D8A8                     L50:
 34023  00D8A8  6F60               	movwf	_MSDWriteState& (0+255),b
 34024                           
 34025                           ; BSR set to: 1
 34026                           ;usb_device_msd.c: 1345: }
 34027                           
 34028                           ;usb_device_msd.c: 1344: break;
 34029  00D8AA  D012               	goto	l703
 34030  00D8AC                     l700:
 34031                           
 34032                           ; BSR set to: 1
 34033  00D8AC  0101               	movlb	1	; () banked
 34034  00D8AE  5160               	movf	_MSDWriteState& (0+255),w,b
 34035                           
 34036                           ; Switch size 1, requested type "space"
 34037                           ; Number of cases is 5, Range of values is 0 to 4
 34038                           ; switch strategies available:
 34039                           ; Name         Instructions Cycles
 34040                           ; simple_byte           16     9 (average)
 34041                           ;	Chosen strategy is simple_byte
 34042  00D8B0  0A00               	xorlw	0	; case 0
 34043  00D8B2  B4D8               	btfsc	status,2,c
 34044  00D8B4  D69B               	goto	l701
 34045  00D8B6  0A01               	xorlw	1	; case 1
 34046  00D8B8  B4D8               	btfsc	status,2,c
 34047  00D8BA  D6F1               	goto	l706
 34048  00D8BC  0A03               	xorlw	3	; case 2
 34049  00D8BE  B4D8               	btfsc	status,2,c
 34050  00D8C0  D798               	goto	l715
 34051  00D8C2  0A01               	xorlw	1	; case 3
 34052  00D8C4  B4D8               	btfsc	status,2,c
 34053  00D8C6  D700               	goto	l708
 34054  00D8C8  0A07               	xorlw	7	; case 4
 34055  00D8CA  B4D8               	btfsc	status,2,c
 34056  00D8CC  D746               	goto	l711
 34057  00D8CE  D7E1               	goto	l720
 34058  00D8D0                     l703:
 34059                           
 34060                           ;usb_device_msd.c: 1347: return MSDWriteState;
 34061                           
 34062                           ; BSR set to: 1
 34063  00D8D0  0101               	movlb	1	; () banked
 34064  00D8D2  5160               	movf	_MSDWriteState& (0+255),w,b
 34065  00D8D4  0012               	return	
 34066  00D8D6                     __end_of_MSDWriteHandler:
 34067                           	opt stack 0
 34068                           tosu	equ	0xFFF
 34069                           tosh	equ	0xFFE
 34070                           tosl	equ	0xFFD
 34071                           pclath	equ	0xFFA
 34072                           tblptru	equ	0xFF8
 34073                           tblptrh	equ	0xFF7
 34074                           tblptrl	equ	0xFF6
 34075                           tablat	equ	0xFF5
 34076                           prodh	equ	0xFF4
 34077                           prodl	equ	0xFF3
 34078                           intcon	equ	0xFF2
 34079                           postinc0	equ	0xFEE
 34080                           wreg	equ	0xFE8
 34081                           indf1	equ	0xFE7
 34082                           postinc1	equ	0xFE6
 34083                           postdec1	equ	0xFE5
 34084                           plusw1	equ	0xFE3
 34085                           fsr1h	equ	0xFE2
 34086                           fsr1l	equ	0xFE1
 34087                           indf2	equ	0xFDF
 34088                           postinc2	equ	0xFDE
 34089                           postdec2	equ	0xFDD
 34090                           plusw2	equ	0xFDB
 34091                           fsr2h	equ	0xFDA
 34092                           fsr2l	equ	0xFD9
 34093                           status	equ	0xFD8
 34094                           
 34095 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 34096 ;; Defined at:
 34097 ;;		line 34 in file "external_flash.c"
 34098 ;; Parameters:    Size  Location     Type
 34099 ;;  config          2    0[BANK0 ] PTR void 
 34100 ;;		 -> NULL(0), 
 34101 ;; Auto vars:     Size  Location     Type
 34102 ;;		None
 34103 ;; Return value:  Size  Location     Type
 34104 ;;                  1    wreg      unsigned char 
 34105 ;; Registers used:
 34106 ;;		wreg
 34107 ;; Tracked objects:
 34108 ;;		On entry : 0/0
 34109 ;;		On exit  : 0/0
 34110 ;;		Unchanged: 0/0
 34111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34115 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34116 ;;Total ram usage:        2 bytes
 34117 ;; Hardware stack levels used:    1
 34118 ;; Hardware stack levels required when called:   10
 34119 ;; This function calls:
 34120 ;;		Nothing
 34121 ;; This function is called by:
 34122 ;;		_MSDWriteHandler
 34123 ;;		_MSDProcessCommandMediaPresent
 34124 ;; This function uses a non-reentrant model
 34125 ;;
 34126                           
 34127                           	psect	text132
 34128  015974                     __ptext132:
 34129                           	opt stack 0
 34130  015974                     _ExternalFlash_WriteProtectStateGet:
 34131                           	opt stack 15
 34132                           
 34133                           ;external_flash.c: 37: return 0;
 34134                           
 34135                           ; BSR set to: 1
 34136                           ;incstack = 0
 34137  015974  0E00               	movlw	0
 34138  015976  0012               	return	
 34139  015978                     __end_of_ExternalFlash_WriteProtectStateGet:
 34140                           	opt stack 0
 34141                           tosu	equ	0xFFF
 34142                           tosh	equ	0xFFE
 34143                           tosl	equ	0xFFD
 34144                           pclath	equ	0xFFA
 34145                           tblptru	equ	0xFF8
 34146                           tblptrh	equ	0xFF7
 34147                           tblptrl	equ	0xFF6
 34148                           tablat	equ	0xFF5
 34149                           prodh	equ	0xFF4
 34150                           prodl	equ	0xFF3
 34151                           intcon	equ	0xFF2
 34152                           postinc0	equ	0xFEE
 34153                           wreg	equ	0xFE8
 34154                           indf1	equ	0xFE7
 34155                           postinc1	equ	0xFE6
 34156                           postdec1	equ	0xFE5
 34157                           plusw1	equ	0xFE3
 34158                           fsr1h	equ	0xFE2
 34159                           fsr1l	equ	0xFE1
 34160                           indf2	equ	0xFDF
 34161                           postinc2	equ	0xFDE
 34162                           postdec2	equ	0xFDD
 34163                           plusw2	equ	0xFDB
 34164                           fsr2h	equ	0xFDA
 34165                           fsr2l	equ	0xFD9
 34166                           status	equ	0xFD8
 34167                           
 34168 ;; *************** function _ExternalFlash_SectorWrite *****************
 34169 ;; Defined at:
 34170 ;;		line 56 in file "external_flash.c"
 34171 ;; Parameters:    Size  Location     Type
 34172 ;;  config          2   36[BANK0 ] PTR void 
 34173 ;;		 -> NULL(0), 
 34174 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 34175 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 34176 ;;		 -> msd_buffer(512), 
 34177 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 34178 ;; Auto vars:     Size  Location     Type
 34179 ;;  page            2   45[BANK0 ] unsigned int 
 34180 ;; Return value:  Size  Location     Type
 34181 ;;                  1    wreg      unsigned char 
 34182 ;; Registers used:
 34183 ;;		wreg, status,2, status,0, cstack
 34184 ;; Tracked objects:
 34185 ;;		On entry : 0/0
 34186 ;;		On exit  : 0/0
 34187 ;;		Unchanged: 0/0
 34188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34189 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34192 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34193 ;;Total ram usage:       11 bytes
 34194 ;; Hardware stack levels used:    1
 34195 ;; Hardware stack levels required when called:   15
 34196 ;; This function calls:
 34197 ;;		_flash_sector_write
 34198 ;; This function is called by:
 34199 ;;		_MSDWriteHandler
 34200 ;; This function uses a non-reentrant model
 34201 ;;
 34202                           
 34203                           	psect	text133
 34204  01523E                     __ptext133:
 34205                           	opt stack 0
 34206  01523E                     _ExternalFlash_SectorWrite:
 34207                           	opt stack 10
 34208                           
 34209                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 34210                           
 34211                           ;incstack = 0
 34212  01523E  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 34213  015242  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 34214                           
 34215                           ;external_flash.c: 61: if(sector_addr >= 8192)
 34216  015246  0100               	movlb	0	; () banked
 34217  015248  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 34218  01524A  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 34219  01524C  E104               	bnz	u10950
 34220  01524E  0E20               	movlw	32
 34221  015250  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 34222  015252  A0D8               	btfss	status,0,c
 34223  015254  D002               	goto	l1681
 34224  015256                     u10950:
 34225                           
 34226                           ; BSR set to: 0
 34227                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 34228  015256  0E00               	movlw	0
 34229                           
 34230                           ; BSR set to: 0
 34231  015258  0012               	return	
 34232  01525A                     l1681:
 34233                           
 34234                           ; BSR set to: 0
 34235                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 34236                           
 34237                           ; BSR set to: 0
 34238  01525A  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 34239  01525E  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 34240  015262  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 34241  015266  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 34242  01526A  EC1E  F0A6         	call	_flash_sector_write	;wreg free
 34243                           
 34244                           ;external_flash.c: 69: return 1;
 34245  01526E  0E01               	movlw	1
 34246  015270  0012               	return	
 34247  015272                     __end_of_ExternalFlash_SectorWrite:
 34248                           	opt stack 0
 34249                           tosu	equ	0xFFF
 34250                           tosh	equ	0xFFE
 34251                           tosl	equ	0xFFD
 34252                           pclath	equ	0xFFA
 34253                           tblptru	equ	0xFF8
 34254                           tblptrh	equ	0xFF7
 34255                           tblptrl	equ	0xFF6
 34256                           tablat	equ	0xFF5
 34257                           prodh	equ	0xFF4
 34258                           prodl	equ	0xFF3
 34259                           intcon	equ	0xFF2
 34260                           postinc0	equ	0xFEE
 34261                           wreg	equ	0xFE8
 34262                           indf1	equ	0xFE7
 34263                           postinc1	equ	0xFE6
 34264                           postdec1	equ	0xFE5
 34265                           plusw1	equ	0xFE3
 34266                           fsr1h	equ	0xFE2
 34267                           fsr1l	equ	0xFE1
 34268                           indf2	equ	0xFDF
 34269                           postinc2	equ	0xFDE
 34270                           postdec2	equ	0xFDD
 34271                           plusw2	equ	0xFDB
 34272                           fsr2h	equ	0xFDA
 34273                           fsr2l	equ	0xFD9
 34274                           status	equ	0xFD8
 34275                           
 34276 ;; *************** function _flash_sector_write *****************
 34277 ;; Defined at:
 34278 ;;		line 434 in file "flash.c"
 34279 ;; Parameters:    Size  Location     Type
 34280 ;;  page            2   31[BANK0 ] unsigned int 
 34281 ;;  data            2   33[BANK0 ] PTR unsigned char 
 34282 ;;		 -> buffer(512), msd_buffer(512), 
 34283 ;; Auto vars:     Size  Location     Type
 34284 ;;  match           1   35[BANK0 ] enum E7004
 34285 ;; Return value:  Size  Location     Type
 34286 ;;                  1    wreg      void 
 34287 ;; Registers used:
 34288 ;;		wreg, status,2, status,0, cstack
 34289 ;; Tracked objects:
 34290 ;;		On entry : 0/0
 34291 ;;		On exit  : 0/0
 34292 ;;		Unchanged: 0/0
 34293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34297 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34298 ;;Total ram usage:        5 bytes
 34299 ;; Hardware stack levels used:    1
 34300 ;; Hardware stack levels required when called:   14
 34301 ;; This function calls:
 34302 ;;		__flash_compare_page_to_buffer
 34303 ;;		__flash_write_page_from_buffer
 34304 ;;		__flash_write_to_buffer
 34305 ;; This function is called by:
 34306 ;;		_ExternalFlash_SectorWrite
 34307 ;;		__make_cluster_chain
 34308 ;;		_fat_format
 34309 ;; This function uses a non-reentrant model
 34310 ;;
 34311                           
 34312                           	psect	text134
 34313  014C3C                     __ptext134:
 34314                           	opt stack 0
 34315  014C3C                     _flash_sector_write:
 34316                           	opt stack 13
 34317                           
 34318                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 34319                           
 34320                           ;incstack = 0
 34321  014C3C  0E00               	movlw	0
 34322  014C3E  0100               	movlb	0	; () banked
 34323  014C40  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 34324  014C42  0E00               	movlw	0
 34325  014C44  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 34326  014C46  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 34327  014C4A  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 34328  014C4E  0E02               	movlw	2
 34329  014C50  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 34330  014C52  0E00               	movlw	0
 34331  014C54  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 34332  014C56  0E00               	movlw	0
 34333  014C58  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 34334  014C5A  EC7D  F0A5         	call	__flash_write_to_buffer	;wreg free
 34335                           
 34336                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 34337  014C5E  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 34338  014C62  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 34339  014C66  0E00               	movlw	0
 34340  014C68  0100               	movlb	0	; () banked
 34341  014C6A  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 34342  014C6C  ECCE  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 34343  014C70  0100               	movlb	0	; () banked
 34344  014C72  6F83               	movwf	flash_sector_write@match& (0+255),b
 34345                           
 34346                           ; BSR set to: 0
 34347                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 34348  014C74  0583               	decf	flash_sector_write@match& (0+255),w,b
 34349  014C76  A4D8               	btfss	status,2,c
 34350  014C78  0012               	return	
 34351                           
 34352                           ; BSR set to: 0
 34353                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 34354  014C7A  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 34355  014C7E  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 34356  014C82  0E00               	movlw	0
 34357  014C84  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 34358  014C86  EC1D  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 34359  014C8A  0012               	return	
 34360  014C8C                     __end_of_flash_sector_write:
 34361                           	opt stack 0
 34362                           tosu	equ	0xFFF
 34363                           tosh	equ	0xFFE
 34364                           tosl	equ	0xFFD
 34365                           pclath	equ	0xFFA
 34366                           tblptru	equ	0xFF8
 34367                           tblptrh	equ	0xFF7
 34368                           tblptrl	equ	0xFF6
 34369                           tablat	equ	0xFF5
 34370                           prodh	equ	0xFF4
 34371                           prodl	equ	0xFF3
 34372                           intcon	equ	0xFF2
 34373                           postinc0	equ	0xFEE
 34374                           wreg	equ	0xFE8
 34375                           indf1	equ	0xFE7
 34376                           postinc1	equ	0xFE6
 34377                           postdec1	equ	0xFE5
 34378                           plusw1	equ	0xFE3
 34379                           fsr1h	equ	0xFE2
 34380                           fsr1l	equ	0xFE1
 34381                           indf2	equ	0xFDF
 34382                           postinc2	equ	0xFDE
 34383                           postdec2	equ	0xFDD
 34384                           plusw2	equ	0xFDB
 34385                           fsr2h	equ	0xFDA
 34386                           fsr2l	equ	0xFD9
 34387                           status	equ	0xFD8
 34388                           
 34389 ;; *************** function __flash_write_to_buffer *****************
 34390 ;; Defined at:
 34391 ;;		line 236 in file "flash.c"
 34392 ;; Parameters:    Size  Location     Type
 34393 ;;  start           2   19[BANK0 ] unsigned int 
 34394 ;;  data            2   21[BANK0 ] PTR unsigned char 
 34395 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34396 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34397 ;;  data_length     2   23[BANK0 ] unsigned int 
 34398 ;;  buffer          1   25[BANK0 ] enum E7000
 34399 ;; Auto vars:     Size  Location     Type
 34400 ;;  command         4   26[BANK0 ] unsigned char [4]
 34401 ;; Return value:  Size  Location     Type
 34402 ;;                  1    wreg      void 
 34403 ;; Registers used:
 34404 ;;		wreg, status,2, status,0, cstack
 34405 ;; Tracked objects:
 34406 ;;		On entry : 0/0
 34407 ;;		On exit  : 0/0
 34408 ;;		Unchanged: 0/0
 34409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34410 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34411 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34413 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34414 ;;Total ram usage:       11 bytes
 34415 ;; Hardware stack levels used:    1
 34416 ;; Hardware stack levels required when called:   13
 34417 ;; This function calls:
 34418 ;;		__flash_is_busy
 34419 ;;		_spi_tx_tx
 34420 ;; This function is called by:
 34421 ;;		_flash_sector_write
 34422 ;;		_flash_partial_write
 34423 ;;		_flash_write_to_buffer
 34424 ;; This function uses a non-reentrant model
 34425 ;;
 34426                           
 34427                           	psect	text135
 34428  014AFA                     __ptext135:
 34429                           	opt stack 0
 34430  014AFA                     __flash_write_to_buffer:
 34431                           	opt stack 13
 34432                           
 34433                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 34434                           
 34435                           ;incstack = 0
 34436  014AFA  EC5E  F0AB         	call	__flash_is_busy	;wreg free
 34437  014AFE  0900               	iorlw	0
 34438  014B00  A4D8               	btfss	status,2,c
 34439  014B02  D7FB               	goto	__flash_write_to_buffer
 34440                           
 34441                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 34442  014B04  0100               	movlb	0	; () banked
 34443  014B06  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 34444  014B08  A4D8               	btfss	status,2,c
 34445  014B0A  D002               	goto	l1567
 34446                           
 34447                           ; BSR set to: 0
 34448                           ;flash.c: 245: command[0] = 0x84;
 34449  014B0C  0E84               	movlw	132
 34450  014B0E  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34451  014B10                     l1567:
 34452                           
 34453                           ; BSR set to: 0
 34454                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 34455                           
 34456                           ; BSR set to: 0
 34457  014B10  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 34458  014B12  A4D8               	btfss	status,2,c
 34459  014B14  D002               	goto	l1568
 34460                           
 34461                           ; BSR set to: 0
 34462                           ;flash.c: 247: command[0] = 0x87;
 34463  014B16  0E87               	movlw	135
 34464  014B18  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34465  014B1A                     l1568:
 34466                           
 34467                           ; BSR set to: 0
 34468                           ;flash.c: 249: command[1] = 0x00;
 34469  014B1A  0E00               	movlw	0
 34470  014B1C  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 34471                           
 34472                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 34473  014B1E  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 34474  014B20  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 34475                           
 34476                           ; BSR set to: 0
 34477                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 34478  014B22  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 34479                           
 34480                           ; BSR set to: 0
 34481                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 34482  014B26  0E7A               	movlw	low __flash_write_to_buffer@command
 34483  014B28  6F60               	movwf	spi_tx_tx@command& (0+255),b
 34484  014B2A  0E00               	movlw	high __flash_write_to_buffer@command
 34485  014B2C  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 34486  014B2E  0E00               	movlw	0
 34487  014B30  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 34488  014B32  0E04               	movlw	4
 34489  014B34  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 34490  014B36  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 34491  014B3A  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 34492  014B3E  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 34493  014B42  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 34494  014B46  EC71  F09B         	call	_spi_tx_tx	;wreg free
 34495  014B4A  0012               	return		;funcret
 34496  014B4C                     __end_of__flash_write_to_buffer:
 34497                           	opt stack 0
 34498                           tosu	equ	0xFFF
 34499                           tosh	equ	0xFFE
 34500                           tosl	equ	0xFFD
 34501                           pclath	equ	0xFFA
 34502                           tblptru	equ	0xFF8
 34503                           tblptrh	equ	0xFF7
 34504                           tblptrl	equ	0xFF6
 34505                           tablat	equ	0xFF5
 34506                           prodh	equ	0xFF4
 34507                           prodl	equ	0xFF3
 34508                           intcon	equ	0xFF2
 34509                           postinc0	equ	0xFEE
 34510                           wreg	equ	0xFE8
 34511                           indf1	equ	0xFE7
 34512                           postinc1	equ	0xFE6
 34513                           postdec1	equ	0xFE5
 34514                           plusw1	equ	0xFE3
 34515                           fsr1h	equ	0xFE2
 34516                           fsr1l	equ	0xFE1
 34517                           indf2	equ	0xFDF
 34518                           postinc2	equ	0xFDE
 34519                           postdec2	equ	0xFDD
 34520                           plusw2	equ	0xFDB
 34521                           fsr2h	equ	0xFDA
 34522                           fsr2l	equ	0xFD9
 34523                           status	equ	0xFD8
 34524                           
 34525 ;; *************** function _spi_tx_tx *****************
 34526 ;; Defined at:
 34527 ;;		line 146 in file "spi.c"
 34528 ;; Parameters:    Size  Location     Type
 34529 ;;  command         2    0[BANK0 ] PTR unsigned char 
 34530 ;;		 -> _flash_write_to_buffer@command(4), 
 34531 ;;  command_leng    2    2[BANK0 ] unsigned int 
 34532 ;;  data            2    4[BANK0 ] PTR unsigned char 
 34533 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34534 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34535 ;;  data_length     2    6[BANK0 ] unsigned int 
 34536 ;; Auto vars:     Size  Location     Type
 34537 ;;		None
 34538 ;; Return value:  Size  Location     Type
 34539 ;;                  1    wreg      void 
 34540 ;; Registers used:
 34541 ;;		wreg, status,2, status,0
 34542 ;; Tracked objects:
 34543 ;;		On entry : 0/0
 34544 ;;		On exit  : 0/0
 34545 ;;		Unchanged: 0/0
 34546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34547 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34549 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34550 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34551 ;;Total ram usage:       12 bytes
 34552 ;; Hardware stack levels used:    1
 34553 ;; Hardware stack levels required when called:   10
 34554 ;; This function calls:
 34555 ;;		Nothing
 34556 ;; This function is called by:
 34557 ;;		__flash_write_to_buffer
 34558 ;; This function uses a non-reentrant model
 34559 ;;
 34560                           
 34561                           	psect	text136
 34562  0136E2                     __ptext136:
 34563                           	opt stack 0
 34564  0136E2                     _spi_tx_tx:
 34565                           	opt stack 15
 34566                           
 34567                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 34568                           
 34569                           ;incstack = 0
 34570  0136E2  9E88               	bcf	3976,7,c	;volatile
 34571                           
 34572                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 34573  0136E4  9C88               	bcf	3976,6,c	;volatile
 34574                           
 34575                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 34576  0136E6  8A88               	bsf	3976,5,c	;volatile
 34577                           
 34578                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 34579  0136E8  9888               	bcf	3976,4,c	;volatile
 34580                           
 34581                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 34582  0136EA  9688               	bcf	3976,3,c	;volatile
 34583                           
 34584                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 34585  0136EC  8488               	bsf	3976,2,c	;volatile
 34586                           
 34587                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 34588  0136EE  9288               	bcf	3976,1,c	;volatile
 34589                           
 34590                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 34591  0136F0  9886               	bcf	3974,4,c	;volatile
 34592  0136F2  9A86               	bcf	3974,5,c	;volatile
 34593  0136F4  9C86               	bcf	3974,6,c	;volatile
 34594  0136F6  9E86               	bcf	3974,7,c	;volatile
 34595                           
 34596                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 34597  0136F8  9086               	bcf	3974,0,c	;volatile
 34598  0136FA  9286               	bcf	3974,1,c	;volatile
 34599  0136FC  9486               	bcf	3974,2,c	;volatile
 34600  0136FE  9686               	bcf	3974,3,c	;volatile
 34601                           
 34602                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34603  013700  0100               	movlb	0	; () banked
 34604  013702  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 34605  013704  6E6A               	movwf	3946,c	;volatile
 34606                           
 34607                           ; BSR set to: 0
 34608                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34609  013706  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 34610                           
 34611                           ; BSR set to: 0
 34612                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34613  01370A  0EFF               	movlw	255
 34614  01370C  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34615  01370E  0EFF               	movlw	255
 34616  013710  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34617  013712  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 34618  013716  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 34619  01371A  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34620  01371C  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34621  01371E  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34622  013720  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34623  013722  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34624  013726  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34625  013728  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34626  01372A  6E66               	movwf	3942,c	;volatile
 34627                           
 34628                           ; BSR set to: 0
 34629                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34630  01372C  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 34631  01372E  6E67               	movwf	3943,c	;volatile
 34632                           
 34633                           ; BSR set to: 0
 34634                           ;spi.c: 174: LATDbits.LD7 = 0;
 34635  013730  9E8C               	bcf	3980,7,c	;volatile
 34636                           
 34637                           ; BSR set to: 0
 34638                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 34639  013732  8088               	bsf	3976,0,c	;volatile
 34640  013734                     
 34641                           ; BSR set to: 0
 34642  013734  B088               	btfsc	3976,0,c	;volatile
 34643  013736  D7FE               	goto	l2178
 34644                           
 34645                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34646  013738  0100               	movlb	0	; () banked
 34647  01373A  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 34648  01373C  6E6A               	movwf	3946,c	;volatile
 34649                           
 34650                           ; BSR set to: 0
 34651                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34652  01373E  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 34653                           
 34654                           ; BSR set to: 0
 34655                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34656  013742  0EFF               	movlw	255
 34657  013744  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34658  013746  0EFF               	movlw	255
 34659  013748  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34660  01374A  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 34661  01374E  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 34662  013752  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34663  013754  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34664  013756  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34665  013758  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34666  01375A  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34667  01375E  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34668  013760  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34669  013762  6E66               	movwf	3942,c	;volatile
 34670                           
 34671                           ; BSR set to: 0
 34672                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34673  013764  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 34674  013766  6E67               	movwf	3943,c	;volatile
 34675                           
 34676                           ; BSR set to: 0
 34677                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 34678  013768  8088               	bsf	3976,0,c	;volatile
 34679  01376A                     
 34680                           ; BSR set to: 0
 34681  01376A  B088               	btfsc	3976,0,c	;volatile
 34682  01376C  D7FE               	goto	l2181
 34683                           
 34684                           ;spi.c: 193: LATDbits.LD7 = 1;
 34685  01376E  8E8C               	bsf	3980,7,c	;volatile
 34686  013770  0012               	return		;funcret
 34687  013772                     __end_of_spi_tx_tx:
 34688                           	opt stack 0
 34689                           tosu	equ	0xFFF
 34690                           tosh	equ	0xFFE
 34691                           tosl	equ	0xFFD
 34692                           pclath	equ	0xFFA
 34693                           tblptru	equ	0xFF8
 34694                           tblptrh	equ	0xFF7
 34695                           tblptrl	equ	0xFF6
 34696                           tablat	equ	0xFF5
 34697                           prodh	equ	0xFF4
 34698                           prodl	equ	0xFF3
 34699                           intcon	equ	0xFF2
 34700                           postinc0	equ	0xFEE
 34701                           wreg	equ	0xFE8
 34702                           indf1	equ	0xFE7
 34703                           postinc1	equ	0xFE6
 34704                           postdec1	equ	0xFE5
 34705                           plusw1	equ	0xFE3
 34706                           fsr1h	equ	0xFE2
 34707                           fsr1l	equ	0xFE1
 34708                           indf2	equ	0xFDF
 34709                           postinc2	equ	0xFDE
 34710                           postdec2	equ	0xFDD
 34711                           plusw2	equ	0xFDB
 34712                           fsr2h	equ	0xFDA
 34713                           fsr2l	equ	0xFD9
 34714                           status	equ	0xFD8
 34715                           
 34716 ;; *************** function __flash_write_page_from_buffer *****************
 34717 ;; Defined at:
 34718 ;;		line 258 in file "flash.c"
 34719 ;; Parameters:    Size  Location     Type
 34720 ;;  page            2   19[BANK0 ] unsigned int 
 34721 ;;  buffer          1   21[BANK0 ] enum E7000
 34722 ;; Auto vars:     Size  Location     Type
 34723 ;;  command         4   25[BANK0 ] unsigned char [4]
 34724 ;; Return value:  Size  Location     Type
 34725 ;;                  1    wreg      void 
 34726 ;; Registers used:
 34727 ;;		wreg, status,2, status,0, cstack
 34728 ;; Tracked objects:
 34729 ;;		On entry : 0/0
 34730 ;;		On exit  : 0/0
 34731 ;;		Unchanged: 0/0
 34732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34733 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34734 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34735 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34736 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34737 ;;Total ram usage:       10 bytes
 34738 ;; Hardware stack levels used:    1
 34739 ;; Hardware stack levels required when called:   13
 34740 ;; This function calls:
 34741 ;;		__flash_is_busy
 34742 ;;		_spi_tx
 34743 ;; This function is called by:
 34744 ;;		_flash_sector_write
 34745 ;;		_flash_partial_write
 34746 ;;		_flash_write_page_from_buffer
 34747 ;; This function uses a non-reentrant model
 34748 ;;
 34749                           
 34750                           	psect	text137
 34751  01463A                     __ptext137:
 34752                           	opt stack 0
 34753  01463A                     __flash_write_page_from_buffer:
 34754                           	opt stack 13
 34755                           
 34756                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 34757                           
 34758                           ;incstack = 0
 34759  01463A  EC5E  F0AB         	call	__flash_is_busy	;wreg free
 34760  01463E  0900               	iorlw	0
 34761  014640  A4D8               	btfss	status,2,c
 34762  014642  D7FB               	goto	__flash_write_page_from_buffer
 34763                           
 34764                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 34765  014644  0100               	movlb	0	; () banked
 34766  014646  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34767  014648  A4D8               	btfss	status,2,c
 34768  01464A  D002               	goto	l1575
 34769                           
 34770                           ; BSR set to: 0
 34771                           ;flash.c: 267: command[0] = 0x83;
 34772  01464C  0E83               	movlw	131
 34773  01464E  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34774  014650                     l1575:
 34775                           
 34776                           ; BSR set to: 0
 34777                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 34778                           
 34779                           ; BSR set to: 0
 34780  014650  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34781  014652  A4D8               	btfss	status,2,c
 34782  014654  D002               	goto	l1576
 34783                           
 34784                           ; BSR set to: 0
 34785                           ;flash.c: 269: command[0] = 0x86;
 34786  014656  0E86               	movlw	134
 34787  014658  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34788  01465A                     l1576:
 34789                           
 34790                           ; BSR set to: 0
 34791                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34792                           
 34793                           ; BSR set to: 0
 34794  01465A  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34795  01465E  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34796  014662  0E07               	movlw	7
 34797  014664  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 34798  014666                     u9765:
 34799  014666  90D8               	bcf	status,0,c
 34800  014668  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 34801  01466A  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 34802  01466C  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 34803  01466E  D7FB               	goto	u9765
 34804  014670  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 34805  014672  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 34806                           
 34807                           ; BSR set to: 0
 34808                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 34809  014674  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34810  014676  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34811  014678  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34812                           
 34813                           ;flash.c: 273: command[3] = 0x00;
 34814  01467A  0E00               	movlw	0
 34815  01467C  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34816                           
 34817                           ; BSR set to: 0
 34818                           ;flash.c: 276: spi_tx(command, 4);
 34819  01467E  0E79               	movlw	low __flash_write_page_from_buffer@command
 34820  014680  6F60               	movwf	spi_tx@data& (0+255),b
 34821  014682  0E00               	movlw	high __flash_write_page_from_buffer@command
 34822  014684  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34823  014686  0E00               	movlw	0
 34824  014688  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34825  01468A  0E04               	movlw	4
 34826  01468C  6F62               	movwf	spi_tx@length& (0+255),b
 34827  01468E  EC4A  F0A3         	call	_spi_tx	;wreg free
 34828  014692  0012               	return		;funcret
 34829  014694                     __end_of__flash_write_page_from_buffer:
 34830                           	opt stack 0
 34831                           tosu	equ	0xFFF
 34832                           tosh	equ	0xFFE
 34833                           tosl	equ	0xFFD
 34834                           pclath	equ	0xFFA
 34835                           tblptru	equ	0xFF8
 34836                           tblptrh	equ	0xFF7
 34837                           tblptrl	equ	0xFF6
 34838                           tablat	equ	0xFF5
 34839                           prodh	equ	0xFF4
 34840                           prodl	equ	0xFF3
 34841                           intcon	equ	0xFF2
 34842                           postinc0	equ	0xFEE
 34843                           wreg	equ	0xFE8
 34844                           indf1	equ	0xFE7
 34845                           postinc1	equ	0xFE6
 34846                           postdec1	equ	0xFE5
 34847                           plusw1	equ	0xFE3
 34848                           fsr1h	equ	0xFE2
 34849                           fsr1l	equ	0xFE1
 34850                           indf2	equ	0xFDF
 34851                           postinc2	equ	0xFDE
 34852                           postdec2	equ	0xFDD
 34853                           plusw2	equ	0xFDB
 34854                           fsr2h	equ	0xFDA
 34855                           fsr2l	equ	0xFD9
 34856                           status	equ	0xFD8
 34857                           
 34858 ;; *************** function __flash_compare_page_to_buffer *****************
 34859 ;; Defined at:
 34860 ;;		line 176 in file "flash.c"
 34861 ;; Parameters:    Size  Location     Type
 34862 ;;  page            2   19[BANK0 ] unsigned int 
 34863 ;;  buffer          1   21[BANK0 ] enum E7000
 34864 ;; Auto vars:     Size  Location     Type
 34865 ;;  command         4   27[BANK0 ] unsigned char [4]
 34866 ;;  status          2   25[BANK0 ] unsigned int 
 34867 ;; Return value:  Size  Location     Type
 34868 ;;                  1    wreg      enum E7004
 34869 ;; Registers used:
 34870 ;;		wreg, status,2, status,0, cstack
 34871 ;; Tracked objects:
 34872 ;;		On entry : 0/0
 34873 ;;		On exit  : 0/0
 34874 ;;		Unchanged: 0/0
 34875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34876 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34877 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34878 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34879 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34880 ;;Total ram usage:       12 bytes
 34881 ;; Hardware stack levels used:    1
 34882 ;; Hardware stack levels required when called:   13
 34883 ;; This function calls:
 34884 ;;		__flash_get_status
 34885 ;;		__flash_is_busy
 34886 ;;		_spi_tx
 34887 ;; This function is called by:
 34888 ;;		_flash_sector_write
 34889 ;;		_flash_partial_write
 34890 ;; This function uses a non-reentrant model
 34891 ;;
 34892                           
 34893                           	psect	text138
 34894  013B9C                     __ptext138:
 34895                           	opt stack 0
 34896  013B9C                     __flash_compare_page_to_buffer:
 34897                           	opt stack 13
 34898                           
 34899                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 34900                           
 34901                           ;incstack = 0
 34902  013B9C  EC5E  F0AB         	call	__flash_is_busy	;wreg free
 34903  013BA0  0900               	iorlw	0
 34904  013BA2  A4D8               	btfss	status,2,c
 34905  013BA4  D7FB               	goto	__flash_compare_page_to_buffer
 34906                           
 34907                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 34908  013BA6  0100               	movlb	0	; () banked
 34909  013BA8  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34910  013BAA  A4D8               	btfss	status,2,c
 34911  013BAC  D002               	goto	l1548
 34912                           
 34913                           ; BSR set to: 0
 34914                           ;flash.c: 186: command[0] = 0x60;
 34915  013BAE  0E60               	movlw	96
 34916  013BB0  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34917  013BB2                     l1548:
 34918                           
 34919                           ; BSR set to: 0
 34920                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 34921                           
 34922                           ; BSR set to: 0
 34923  013BB2  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34924  013BB4  A4D8               	btfss	status,2,c
 34925  013BB6  D002               	goto	l1549
 34926                           
 34927                           ; BSR set to: 0
 34928                           ;flash.c: 188: command[0] = 0x60;
 34929  013BB8  0E60               	movlw	96
 34930  013BBA  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34931  013BBC                     l1549:
 34932                           
 34933                           ; BSR set to: 0
 34934                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34935                           
 34936                           ; BSR set to: 0
 34937  013BBC  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34938  013BC0  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34939  013BC4  0E07               	movlw	7
 34940  013BC6  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 34941  013BC8                     u9675:
 34942  013BC8  90D8               	bcf	status,0,c
 34943  013BCA  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 34944  013BCC  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 34945  013BCE  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 34946  013BD0  D7FB               	goto	u9675
 34947  013BD2  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 34948  013BD4  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 34949                           
 34950                           ; BSR set to: 0
 34951                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 34952  013BD6  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34953  013BD8  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34954  013BDA  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 34955                           
 34956                           ;flash.c: 192: command[3] = 0x00;
 34957  013BDC  0E00               	movlw	0
 34958  013BDE  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 34959                           
 34960                           ; BSR set to: 0
 34961                           ;flash.c: 195: spi_tx(command, 4);
 34962  013BE0  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 34963  013BE2  6F60               	movwf	spi_tx@data& (0+255),b
 34964  013BE4  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34965  013BE6  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34966  013BE8  0E00               	movlw	0
 34967  013BEA  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34968  013BEC  0E04               	movlw	4
 34969  013BEE  6F62               	movwf	spi_tx@length& (0+255),b
 34970  013BF0  EC4A  F0A3         	call	_spi_tx	;wreg free
 34971  013BF4  EC5E  F0AB         	call	__flash_is_busy	;wreg free
 34972  013BF8  0900               	iorlw	0
 34973  013BFA  A4D8               	btfss	status,2,c
 34974  013BFC  D7FB               	goto	l1551
 34975                           
 34976                           ;flash.c: 201: status = _flash_get_status();
 34977  013BFE  EC53  F0A9         	call	__flash_get_status	;wreg free
 34978  013C02  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34979  013C06  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34980                           
 34981                           ;flash.c: 204: if(status & 0b0000000001000000)
 34982  013C0A  0100               	movlb	0	; () banked
 34983  013C0C  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 34984  013C0E  D002               	goto	l1553
 34985                           
 34986                           ; BSR set to: 0
 34987                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 34988  013C10  0E01               	movlw	1
 34989                           
 34990                           ; BSR set to: 0
 34991                           ;flash.c: 208: }
 34992                           
 34993                           ; BSR set to: 0
 34994  013C12  0012               	return	
 34995  013C14                     l1553:
 34996                           
 34997                           ; BSR set to: 0
 34998                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 34999                           
 35000                           ; BSR set to: 0
 35001  013C14  0E00               	movlw	0
 35002                           
 35003                           ; BSR set to: 0
 35004  013C16  0012               	return	
 35005  013C18                     __end_of__flash_compare_page_to_buffer:
 35006                           	opt stack 0
 35007                           tosu	equ	0xFFF
 35008                           tosh	equ	0xFFE
 35009                           tosl	equ	0xFFD
 35010                           pclath	equ	0xFFA
 35011                           tblptru	equ	0xFF8
 35012                           tblptrh	equ	0xFF7
 35013                           tblptrl	equ	0xFF6
 35014                           tablat	equ	0xFF5
 35015                           prodh	equ	0xFF4
 35016                           prodl	equ	0xFF3
 35017                           intcon	equ	0xFF2
 35018                           postinc0	equ	0xFEE
 35019                           wreg	equ	0xFE8
 35020                           indf1	equ	0xFE7
 35021                           postinc1	equ	0xFE6
 35022                           postdec1	equ	0xFE5
 35023                           plusw1	equ	0xFE3
 35024                           fsr1h	equ	0xFE2
 35025                           fsr1l	equ	0xFE1
 35026                           indf2	equ	0xFDF
 35027                           postinc2	equ	0xFDE
 35028                           postdec2	equ	0xFDD
 35029                           plusw2	equ	0xFDB
 35030                           fsr2h	equ	0xFDA
 35031                           fsr2l	equ	0xFD9
 35032                           status	equ	0xFD8
 35033                           
 35034 ;; *************** function _MSDReadHandler *****************
 35035 ;; Defined at:
 35036 ;;		line 1038 in file "usb_device_msd.c"
 35037 ;; Parameters:    Size  Location     Type
 35038 ;;		None
 35039 ;; Auto vars:     Size  Location     Type
 35040 ;;		None
 35041 ;; Return value:  Size  Location     Type
 35042 ;;                  1    wreg      unsigned char 
 35043 ;; Registers used:
 35044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35045 ;; Tracked objects:
 35046 ;;		On entry : 0/0
 35047 ;;		On exit  : 0/0
 35048 ;;		Unchanged: 0/0
 35049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35053 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35054 ;;Total ram usage:        4 bytes
 35055 ;; Hardware stack levels used:    1
 35056 ;; Hardware stack levels required when called:   16
 35057 ;; This function calls:
 35058 ;;		_ExternalFlash_SectorRead
 35059 ;;		_MSDCheckForErrorCases
 35060 ;;		_USBStallEndpoint
 35061 ;;		_USBTransferOnePacket
 35062 ;; This function is called by:
 35063 ;;		_MSDProcessCommandMediaPresent
 35064 ;; This function uses a non-reentrant model
 35065 ;;
 35066                           
 35067                           	psect	text139
 35068  00F044                     __ptext139:
 35069                           	opt stack 0
 35070  00F044                     _MSDReadHandler:
 35071                           	opt stack 10
 35072                           
 35073                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 35074                           
 35075                           ; BSR set to: 0
 35076                           ;incstack = 0
 35077  00F044  D0DF               	goto	l681
 35078  00F046                     l682:
 35079                           
 35080                           ; BSR set to: 1
 35081                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 35082  00F046  C211  F12E         	movff	_gblCBW+17,_LBA+3
 35083                           
 35084                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 35085  00F04A  C212  F12D         	movff	_gblCBW+18,_LBA+2
 35086                           
 35087                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 35088  00F04E  C213  F12C         	movff	_gblCBW+19,_LBA+1
 35089                           
 35090                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 35091  00F052  C214  F12B         	movff	_gblCBW+20,_LBA
 35092                           
 35093                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 35094  00F056  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 35095                           
 35096                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 35097  00F05A  C217  F145         	movff	_gblCBW+23,_TransferLength
 35098                           
 35099                           ; BSR set to: 1
 35100                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35101  00F05E  5145               	movf	_TransferLength& (0+255),w,b
 35102  00F060  0100               	movlb	0	; () banked
 35103  00F062  6F95               	movwf	??_MSDReadHandler& (0+255),b
 35104  00F064  0101               	movlb	1	; () banked
 35105  00F066  5146               	movf	(_TransferLength+1)& (0+255),w,b
 35106  00F068  0100               	movlb	0	; () banked
 35107  00F06A  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 35108  00F06C  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 35109  00F06E  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 35110  00F070  0E09               	movlw	9
 35111  00F072                     u11155:
 35112  00F072  90D8               	bcf	status,0,c
 35113  00F074  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 35114  00F076  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 35115  00F078  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 35116  00F07A  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 35117  00F07C  2EE8               	decfsz	wreg,f,c
 35118  00F07E  D7F9               	goto	u11155
 35119  00F080  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 35120  00F084  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35121  00F088  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35122  00F08C  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35123  00F090  EC45  F085         	call	_MSDCheckForErrorCases	;wreg free
 35124  00F094  0900               	iorlw	0
 35125  00F096  A4D8               	btfss	status,2,c
 35126  00F098  D0C7               	goto	l684
 35127                           
 35128                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 35129                           
 35130                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 35131  00F09A  0E01               	movlw	1
 35132  00F09C  0101               	movlb	1	; () banked
 35133  00F09E  6F61               	movwf	_MSDReadState& (0+255),b
 35134  00F0A0                     
 35135                           ; BSR set to: 1
 35136                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 35137                           
 35138                           ; BSR set to: 1
 35139  00F0A0  5145               	movf	_TransferLength& (0+255),w,b
 35140  00F0A2  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 35141  00F0A4  A4D8               	btfss	status,2,c
 35142  00F0A6  D002               	goto	l686
 35143                           
 35144                           ; BSR set to: 1
 35145                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 35146  00F0A8  0E00               	movlw	0
 35147  00F0AA  D04A               	goto	L51
 35148  00F0AC                     l686:
 35149                           
 35150                           ; BSR set to: 1
 35151                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 35152                           
 35153                           ; BSR set to: 1
 35154  00F0AC  0745               	decf	_TransferLength& (0+255),f,b
 35155  00F0AE  A0D8               	btfss	status,0,c
 35156  00F0B0  0746               	decf	(_TransferLength+1)& (0+255),f,b
 35157                           
 35158                           ; BSR set to: 1
 35159                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 35160  00F0B2  0E02               	movlw	2
 35161  00F0B4  6F61               	movwf	_MSDReadState& (0+255),b
 35162  00F0B6                     
 35163                           ; BSR set to: 1
 35164                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 35165                           
 35166                           ; BSR set to: 1
 35167  00F0B6  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35168  00F0B8  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35169  00F0BA  B4D8               	btfsc	status,2,c
 35170  00F0BC  D006               	goto	l688
 35171                           
 35172                           ; BSR set to: 1
 35173  00F0BE  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35174  00F0C2  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35175  00F0C6  BEDF               	btfsc	indf2,7,c
 35176  00F0C8  D0AF               	goto	l684
 35177  00F0CA                     l688:
 35178                           
 35179                           ; BSR set to: 1
 35180                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 35181                           
 35182                           ; BSR set to: 1
 35183  00F0CA  C29E  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 35184  00F0CE  C29F  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 35185  00F0D2  C12B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 35186  00F0D6  C12C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 35187  00F0DA  C12D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 35188  00F0DE  C12E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 35189  00F0E2  0E00               	movlw	0
 35190  00F0E4  0100               	movlb	0	; () banked
 35191  00F0E6  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 35192  00F0E8  0E06               	movlw	6
 35193  00F0EA  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 35194  00F0EC  EE22  F095         	lfsr	2,_LUN+12
 35195  00F0F0  D801               	call	u11208
 35196  00F0F2  D00A               	goto	u11209
 35197  00F0F4                     u11208:
 35198  00F0F4  0005               	push	
 35199  00F0F6  6EFA               	movwf	pclath,c
 35200  00F0F8  50DE               	movf	postinc2,w,c
 35201  00F0FA  6EFD               	movwf	tosl,c
 35202  00F0FC  50DE               	movf	postinc2,w,c
 35203  00F0FE  6EFE               	movwf	tosh,c
 35204  00F100  50DE               	movf	postinc2,w,c
 35205  00F102  6EFF               	movwf	tosu,c
 35206  00F104  50FA               	movf	pclath,w,c
 35207  00F106  0012               	return		;indir
 35208  00F108                     u11209:
 35209  00F108  06E8               	decf	wreg,f,c
 35210  00F10A  B4D8               	btfsc	status,2,c
 35211  00F10C  D01B               	goto	l691
 35212                           
 35213                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 35214  00F10E  0E64               	movlw	100
 35215  00F110  0101               	movlb	1	; () banked
 35216  00F112  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 35217  00F114  D002               	goto	l690
 35218                           
 35219                           ; BSR set to: 1
 35220                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 35221  00F116  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 35222                           
 35223                           ;usb_device_msd.c: 1088: break;
 35224  00F118  D087               	goto	l684
 35225  00F11A                     l690:
 35226                           
 35227                           ; BSR set to: 1
 35228                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 35229                           
 35230                           ; BSR set to: 1
 35231  00F11A  0E02               	movlw	2
 35232  00F11C  010D               	movlb	13	; () banked
 35233  00F11E  6F8C               	movwf	140,b	;volatile
 35234                           
 35235                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 35236  00F120  0101               	movlb	1	; () banked
 35237  00F122  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35238  00F124  0BF0               	andlw	-16
 35239  00F126  0903               	iorlw	3
 35240  00F128  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35241                           
 35242                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 35243  00F12A  0E00               	movlw	0
 35244  00F12C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35245                           
 35246                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 35247  00F12E  0E00               	movlw	0
 35248  00F130  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35249                           
 35250                           ; BSR set to: 1
 35251                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 35252  00F132  0E01               	movlw	1
 35253  00F134  0100               	movlb	0	; () banked
 35254  00F136  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35255  00F138  0E02               	movlw	2
 35256  00F13A  EC65  F087         	call	_USBStallEndpoint
 35257  00F13E  D05F               	goto	l12896
 35258  00F140                     L51:
 35259  00F140  6F61               	movwf	_MSDReadState& (0+255),b
 35260                           
 35261                           ;usb_device_msd.c: 1109: break;
 35262  00F142  D072               	goto	l684
 35263  00F144                     l691:
 35264                           
 35265                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 35266                           
 35267                           ; BSR set to: 1
 35268                           
 35269                           ; BSR set to: 1
 35270  00F144  0E01               	movlw	1
 35271  00F146  0101               	movlb	1	; () banked
 35272  00F148  272B               	addwf	_LBA& (0+255),f,b
 35273  00F14A  0E00               	movlw	0
 35274  00F14C  232C               	addwfc	(_LBA+1)& (0+255),f,b
 35275  00F14E  232D               	addwfc	(_LBA+2)& (0+255),f,b
 35276  00F150  232E               	addwfc	(_LBA+3)& (0+255),f,b
 35277                           
 35278                           ; BSR set to: 1
 35279                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 35280  00F152  0E00               	movlw	0
 35281  00F154  010D               	movlb	13	; () banked
 35282  00F156  6F88               	movwf	136,b	;volatile
 35283  00F158  0E02               	movlw	2
 35284  00F15A  6F89               	movwf	137,b	;volatile
 35285  00F15C  0E00               	movlw	0
 35286  00F15E  6F8A               	movwf	138,b	;volatile
 35287  00F160  0E00               	movlw	0
 35288  00F162  6F8B               	movwf	139,b	;volatile
 35289                           
 35290                           ; BSR set to: 13
 35291                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 35292  00F164  0E00               	movlw	0
 35293  00F166  0101               	movlb	1	; () banked
 35294  00F168  6F4D               	movwf	_ptrNextData& (0+255),b
 35295  00F16A  0E06               	movlw	6
 35296  00F16C  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 35297                           
 35298                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 35299  00F16E  0E03               	movlw	3
 35300  00F170  6F61               	movwf	_MSDReadState& (0+255),b
 35301  00F172                     
 35302                           ; BSR set to: 1
 35303                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 35304                           
 35305                           ; BSR set to: 1
 35306  00F172  010D               	movlb	13	; () banked
 35307  00F174  5188               	movf	136,w,b	;volatile
 35308  00F176  1189               	iorwf	137,w,b	;volatile
 35309  00F178  118A               	iorwf	138,w,b	;volatile
 35310  00F17A  118B               	iorwf	139,w,b	;volatile
 35311  00F17C  A4D8               	btfss	status,2,c
 35312  00F17E  D002               	goto	l693
 35313                           
 35314                           ; BSR set to: 13
 35315                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 35316  00F180  0E01               	movlw	1
 35317  00F182  D03E               	goto	L53
 35318  00F184                     l693:
 35319                           
 35320                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 35321                           
 35322                           ; BSR set to: 1
 35323  00F184  0E04               	movlw	4
 35324  00F186  0101               	movlb	1	; () banked
 35325  00F188  6F61               	movwf	_MSDReadState& (0+255),b
 35326  00F18A                     
 35327                           ; BSR set to: 1
 35328                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 35329                           
 35330                           ; BSR set to: 1
 35331  00F18A  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35332  00F18C  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35333  00F18E  B4D8               	btfsc	status,2,c
 35334  00F190  D006               	goto	l695
 35335                           
 35336                           ; BSR set to: 1
 35337  00F192  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35338  00F196  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35339  00F19A  BEDF               	btfsc	indf2,7,c
 35340  00F19C  D045               	goto	l684
 35341  00F19E                     l695:
 35342                           
 35343                           ; BSR set to: 1
 35344                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 35345                           
 35346                           ; BSR set to: 1
 35347  00F19E  0E01               	movlw	1
 35348  00F1A0  0100               	movlb	0	; () banked
 35349  00F1A2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35350  00F1A4  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35351  00F1A8  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35352  00F1AC  0E40               	movlw	64
 35353  00F1AE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35354  00F1B0  0E02               	movlw	2
 35355  00F1B2  ECEA  F087         	call	_USBTransferOnePacket
 35356  00F1B6  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35357  00F1BA  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35358                           
 35359                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 35360  00F1BE  0E03               	movlw	3
 35361  00F1C0  0101               	movlb	1	; () banked
 35362  00F1C2  6F61               	movwf	_MSDReadState& (0+255),b
 35363                           
 35364                           ; BSR set to: 1
 35365                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 35366  00F1C4  0E40               	movlw	64
 35367  00F1C6  0102               	movlb	2	; () banked
 35368  00F1C8  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35369  00F1CA  0E00               	movlw	0
 35370  00F1CC  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35371  00F1CE  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35372  00F1D0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35373                           
 35374                           ; BSR set to: 2
 35375                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 35376  00F1D2  0E40               	movlw	64
 35377  00F1D4  010D               	movlb	13	; () banked
 35378  00F1D6  5F88               	subwf	136,f,b	;volatile
 35379  00F1D8  0E00               	movlw	0
 35380  00F1DA  5B89               	subwfb	137,f,b	;volatile
 35381  00F1DC  5B8A               	subwfb	138,f,b	;volatile
 35382  00F1DE  5B8B               	subwfb	139,f,b	;volatile
 35383                           
 35384                           ; BSR set to: 13
 35385                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 35386  00F1E0  0E40               	movlw	64
 35387  00F1E2  0101               	movlb	1	; () banked
 35388  00F1E4  274D               	addwf	_ptrNextData& (0+255),f,b
 35389  00F1E6  0E00               	movlw	0
 35390  00F1E8  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35391                           
 35392                           ;usb_device_msd.c: 1149: break;
 35393  00F1EA  D01E               	goto	l684
 35394  00F1EC                     
 35395                           ; BSR set to: 1
 35396                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 35397                           
 35398                           ; BSR set to: 1
 35399  00F1EC  0E02               	movlw	2
 35400  00F1EE  010D               	movlb	13	; () banked
 35401  00F1F0  6F8C               	movwf	140,b	;volatile
 35402                           
 35403                           ; BSR set to: 13
 35404                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 35405  00F1F2  0E01               	movlw	1
 35406  00F1F4  0100               	movlb	0	; () banked
 35407  00F1F6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35408  00F1F8  0E02               	movlw	2
 35409  00F1FA  EC65  F087         	call	_USBStallEndpoint
 35410  00F1FE                     l12896:
 35411                           
 35412                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 35413  00F1FE  0E00               	movlw	0
 35414  00F200                     L53:
 35415  00F200  0101               	movlb	1	; () banked
 35416  00F202  D79E               	goto	L51
 35417  00F204                     l681:
 35418                           
 35419                           ; BSR set to: 1
 35420  00F204  0101               	movlb	1	; () banked
 35421  00F206  5161               	movf	_MSDReadState& (0+255),w,b
 35422                           
 35423                           ; Switch size 1, requested type "space"
 35424                           ; Number of cases is 5, Range of values is 0 to 4
 35425                           ; switch strategies available:
 35426                           ; Name         Instructions Cycles
 35427                           ; simple_byte           16     9 (average)
 35428                           ;	Chosen strategy is simple_byte
 35429  00F208  0A00               	xorlw	0	; case 0
 35430  00F20A  B4D8               	btfsc	status,2,c
 35431  00F20C  D71C               	goto	l682
 35432  00F20E  0A01               	xorlw	1	; case 1
 35433  00F210  B4D8               	btfsc	status,2,c
 35434  00F212  D746               	goto	l685
 35435  00F214  0A03               	xorlw	3	; case 2
 35436  00F216  B4D8               	btfsc	status,2,c
 35437  00F218  D74E               	goto	l687
 35438  00F21A  0A01               	xorlw	1	; case 3
 35439  00F21C  B4D8               	btfsc	status,2,c
 35440  00F21E  D7A9               	goto	l692
 35441  00F220  0A07               	xorlw	7	; case 4
 35442  00F222  B4D8               	btfsc	status,2,c
 35443  00F224  D7B2               	goto	l694
 35444  00F226  D7E2               	goto	l696
 35445  00F228                     l684:
 35446                           
 35447                           ;usb_device_msd.c: 1161: return MSDReadState;
 35448                           
 35449                           ; BSR set to: 1
 35450  00F228  0101               	movlb	1	; () banked
 35451  00F22A  5161               	movf	_MSDReadState& (0+255),w,b
 35452  00F22C  0012               	return	
 35453  00F22E                     __end_of_MSDReadHandler:
 35454                           	opt stack 0
 35455                           tosu	equ	0xFFF
 35456                           tosh	equ	0xFFE
 35457                           tosl	equ	0xFFD
 35458                           pclath	equ	0xFFA
 35459                           tblptru	equ	0xFF8
 35460                           tblptrh	equ	0xFF7
 35461                           tblptrl	equ	0xFF6
 35462                           tablat	equ	0xFF5
 35463                           prodh	equ	0xFF4
 35464                           prodl	equ	0xFF3
 35465                           intcon	equ	0xFF2
 35466                           postinc0	equ	0xFEE
 35467                           wreg	equ	0xFE8
 35468                           indf1	equ	0xFE7
 35469                           postinc1	equ	0xFE6
 35470                           postdec1	equ	0xFE5
 35471                           plusw1	equ	0xFE3
 35472                           fsr1h	equ	0xFE2
 35473                           fsr1l	equ	0xFE1
 35474                           indf2	equ	0xFDF
 35475                           postinc2	equ	0xFDE
 35476                           postdec2	equ	0xFDD
 35477                           plusw2	equ	0xFDB
 35478                           fsr2h	equ	0xFDA
 35479                           fsr2l	equ	0xFD9
 35480                           status	equ	0xFD8
 35481                           
 35482 ;; *************** function _MSDCheckForErrorCases *****************
 35483 ;; Defined at:
 35484 ;;		line 1434 in file "usb_device_msd.c"
 35485 ;; Parameters:    Size  Location     Type
 35486 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 35487 ;; Auto vars:     Size  Location     Type
 35488 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 35489 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 35490 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 35491 ;; Return value:  Size  Location     Type
 35492 ;;                  1    wreg      unsigned char 
 35493 ;; Registers used:
 35494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35495 ;; Tracked objects:
 35496 ;;		On entry : 0/0
 35497 ;;		On exit  : 0/0
 35498 ;;		Unchanged: 0/0
 35499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35500 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35501 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35503 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35504 ;;Total ram usage:        7 bytes
 35505 ;; Hardware stack levels used:    1
 35506 ;; Hardware stack levels required when called:   12
 35507 ;; This function calls:
 35508 ;;		_MSDErrorHandler
 35509 ;; This function is called by:
 35510 ;;		_MSDProcessCommandMediaPresent
 35511 ;;		_MSDReadHandler
 35512 ;;		_MSDWriteHandler
 35513 ;; This function uses a non-reentrant model
 35514 ;;
 35515                           
 35516                           	psect	text140
 35517  010A8A                     __ptext140:
 35518                           	opt stack 0
 35519  010A8A                     _MSDCheckForErrorCases:
 35520                           	opt stack 13
 35521                           
 35522                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 35523                           
 35524                           ; BSR set to: 1
 35525                           ;incstack = 0
 35526  010A8A  0100               	movlb	0	; () banked
 35527  010A8C  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35528  010A8E  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35529  010A90  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35530  010A92  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35531  010A94  A4D8               	btfss	status,2,c
 35532  010A96  D002               	goto	l726
 35533                           
 35534                           ; BSR set to: 0
 35535                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 35536  010A98  0E01               	movlw	1
 35537  010A9A  D001               	goto	L54
 35538  010A9C                     l726:
 35539                           
 35540                           ; BSR set to: 0
 35541                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 35542                           
 35543                           ; BSR set to: 0
 35544  010A9C  0E00               	movlw	0
 35545  010A9E                     L54:
 35546  010A9E  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 35547                           
 35548                           ; BSR set to: 0
 35549                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 35550                           
 35551                           ; BSR set to: 0
 35552  010AA0  0101               	movlb	1	; () banked
 35553  010AA2  055C               	decf	_MSDHostNoData& (0+255),w,b
 35554  010AA4  A4D8               	btfss	status,2,c
 35555  010AA6  D006               	goto	l728
 35556                           
 35557                           ; BSR set to: 1
 35558  010AA8  0100               	movlb	0	; () banked
 35559  010AAA  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35560  010AAC  A4D8               	btfss	status,2,c
 35561  010AAE  D002               	goto	l728
 35562                           
 35563                           ; BSR set to: 0
 35564                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 35565  010AB0  0E00               	movlw	0
 35566                           
 35567                           ; BSR set to: 0
 35568  010AB2  0012               	return	
 35569  010AB4                     l728:
 35570                           
 35571                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 35572                           
 35573                           ; BSR set to: 0
 35574  010AB4  0100               	movlb	0	; () banked
 35575  010AB6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35576  010AB8  0102               	movlb	2	; () banked
 35577  010ABA  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 35578  010ABC  E120               	bnz	l12540
 35579  010ABE  0100               	movlb	0	; () banked
 35580  010AC0  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35581  010AC2  0102               	movlb	2	; () banked
 35582  010AC4  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 35583  010AC6  E11B               	bnz	l12540
 35584  010AC8  0100               	movlb	0	; () banked
 35585  010ACA  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35586  010ACC  0102               	movlb	2	; () banked
 35587  010ACE  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 35588  010AD0  E116               	bnz	l12540
 35589  010AD2  0100               	movlb	0	; () banked
 35590  010AD4  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35591  010AD6  0102               	movlb	2	; () banked
 35592  010AD8  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 35593  010ADA  A4D8               	btfss	status,2,c
 35594  010ADC  D010               	goto	l734
 35595                           
 35596                           ; BSR set to: 2
 35597                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 35598  010ADE  0101               	movlb	1	; () banked
 35599  010AE0  0563               	decf	_MSD_State& (0+255),w,b
 35600  010AE2  A4D8               	btfss	status,2,c
 35601  010AE4  D006               	goto	l731
 35602                           
 35603                           ; BSR set to: 1
 35604                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 35605  010AE6  0E2A               	movlw	42
 35606  010AE8  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35607  010AEA  B4D8               	btfsc	status,2,c
 35608  010AEC  D008               	goto	l734
 35609                           
 35610                           ; BSR set to: 1
 35611                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 35612  010AEE  0E00               	movlw	0
 35613                           
 35614                           ; BSR set to: 1
 35615  010AF0  0012               	return	
 35616  010AF2                     l731:
 35617                           
 35618                           ; BSR set to: 1
 35619                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 35620                           
 35621                           ; BSR set to: 1
 35622  010AF2  0E2A               	movlw	42
 35623  010AF4  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35624  010AF6  A4D8               	btfss	status,2,c
 35625  010AF8  D002               	goto	l734
 35626                           
 35627                           ; BSR set to: 1
 35628                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 35629  010AFA  0E00               	movlw	0
 35630                           
 35631                           ; BSR set to: 1
 35632  010AFC  0012               	return	
 35633  010AFE                     l734:
 35634  010AFE                     l12540:
 35635                           
 35636                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 35637  010AFE  0102               	movlb	2	; () banked
 35638  010B00  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35639  010B02  0100               	movlb	0	; () banked
 35640  010B04  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35641  010B06  0102               	movlb	2	; () banked
 35642  010B08  5109               	movf	(_gblCBW+9)& (0+255),w,b
 35643  010B0A  0100               	movlb	0	; () banked
 35644  010B0C  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35645  010B0E  0102               	movlb	2	; () banked
 35646  010B10  510A               	movf	(_gblCBW+10)& (0+255),w,b
 35647  010B12  0100               	movlb	0	; () banked
 35648  010B14  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35649  010B16  0102               	movlb	2	; () banked
 35650  010B18  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35651  010B1A  0100               	movlb	0	; () banked
 35652  010B1C  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35653  010B1E  B0D8               	btfsc	status,0,c
 35654  010B20  D002               	goto	l735
 35655                           
 35656                           ; BSR set to: 0
 35657                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 35658  010B22  0E01               	movlw	1
 35659  010B24  D001               	goto	L55
 35660  010B26                     l735:
 35661                           
 35662                           ; BSR set to: 0
 35663                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 35664                           
 35665                           ; BSR set to: 0
 35666  010B26  0E00               	movlw	0
 35667  010B28                     L55:
 35668  010B28  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 35669                           
 35670                           ; BSR set to: 0
 35671                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 35672                           
 35673                           ; BSR set to: 0
 35674  010B2A  0E02               	movlw	2
 35675  010B2C  0101               	movlb	1	; () banked
 35676  010B2E  1963               	xorwf	_MSD_State& (0+255),w,b
 35677  010B30  A4D8               	btfss	status,2,c
 35678  010B32  D017               	goto	l737
 35679                           
 35680                           ; BSR set to: 1
 35681                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 35682  010B34  0E2A               	movlw	42
 35683  010B36  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35684  010B38  B4D8               	btfsc	status,2,c
 35685  010B3A  D006               	goto	l738
 35686                           
 35687                           ; BSR set to: 1
 35688  010B3C  0100               	movlb	0	; () banked
 35689  010B3E  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35690  010B40  A4D8               	btfss	status,2,c
 35691  010B42  D002               	goto	l738
 35692  010B44                     u10830:
 35693                           
 35694                           ; BSR set to: 0
 35695                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 35696  010B44  0E05               	movlw	5
 35697  010B46  D025               	goto	L60
 35698  010B48                     l738:
 35699                           
 35700                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 35701                           
 35702                           ; BSR set to: 0
 35703  010B48  0101               	movlb	1	; () banked
 35704  010B4A  055C               	decf	_MSDHostNoData& (0+255),w,b
 35705  010B4C  B4D8               	btfsc	status,2,c
 35706  010B4E  D014               	goto	u10880
 35707                           
 35708                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 35709                           
 35710                           ; BSR set to: 0
 35711                           
 35712                           ; BSR set to: 1
 35713                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 35714  010B50  0100               	movlb	0	; () banked
 35715  010B52  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35716  010B54  B4D8               	btfsc	status,2,c
 35717  010B56  D003               	goto	u10860
 35718                           
 35719                           ; BSR set to: 0
 35720                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 35721                           
 35722                           ; BSR set to: 0
 35723                           
 35724                           ; BSR set to: 0
 35725                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 35726  010B58  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35727  010B5A  A4D8               	btfss	status,2,c
 35728  010B5C  D7F3               	goto	u10830
 35729  010B5E                     u10860:
 35730                           
 35731                           ; BSR set to: 0
 35732                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 35733  010B5E  0E04               	movlw	4
 35734  010B60  D018               	goto	L60
 35735  010B62                     l737:
 35736                           
 35737                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 35738                           
 35739                           ; BSR set to: 0
 35740  010B62  0E2A               	movlw	42
 35741  010B64  0101               	movlb	1	; () banked
 35742  010B66  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35743  010B68  A4D8               	btfss	status,2,c
 35744  010B6A  D002               	goto	l747
 35745                           
 35746                           ; BSR set to: 1
 35747                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35748  010B6C  0E03               	movlw	3
 35749  010B6E  D005               	goto	L59
 35750  010B70                     l747:
 35751                           
 35752                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35753                           
 35754                           ; BSR set to: 0
 35755  010B70  0101               	movlb	1	; () banked
 35756  010B72  055C               	decf	_MSDHostNoData& (0+255),w,b
 35757  010B74  A4D8               	btfss	status,2,c
 35758  010B76  D003               	goto	l749
 35759  010B78                     u10880:
 35760                           
 35761                           ; BSR set to: 1
 35762                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35763  010B78  0E01               	movlw	1
 35764  010B7A                     L59:
 35765  010B7A  0100               	movlb	0	; () banked
 35766  010B7C  D00A               	goto	L60
 35767  010B7E                     l749:
 35768                           
 35769                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35770                           
 35771                           ; BSR set to: 0
 35772  010B7E  0100               	movlb	0	; () banked
 35773  010B80  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35774  010B82  B4D8               	btfsc	status,2,c
 35775  010B84  D003               	goto	u10900
 35776                           
 35777                           ; BSR set to: 0
 35778                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35779                           
 35780                           ; BSR set to: 0
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35784  010B86  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35785  010B88  A4D8               	btfss	status,2,c
 35786  010B8A  D002               	goto	l753
 35787  010B8C                     u10900:
 35788                           
 35789                           ; BSR set to: 0
 35790                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35791  010B8C  0E02               	movlw	2
 35792  010B8E  D001               	goto	L60
 35793  010B90                     l753:
 35794                           
 35795                           ; BSR set to: 0
 35796                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35797                           
 35798                           ; BSR set to: 0
 35799  010B90  0E03               	movlw	3
 35800  010B92                     L60:
 35801  010B92  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 35802                           
 35803                           ; BSR set to: 0
 35804                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35805                           
 35806                           ; BSR set to: 0
 35807                           
 35808                           ; BSR set to: 0
 35809                           
 35810                           ; BSR set to: 0
 35811                           
 35812                           ; BSR set to: 0
 35813                           
 35814                           ; BSR set to: 0
 35815  010B94  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35816  010B96  ECB8  F084         	call	_MSDErrorHandler
 35817                           
 35818                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35819  010B9A  0100               	movlb	0	; () banked
 35820  010B9C  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35821  010B9E  0012               	return	
 35822  010BA0                     __end_of_MSDCheckForErrorCases:
 35823                           	opt stack 0
 35824                           tosu	equ	0xFFF
 35825                           tosh	equ	0xFFE
 35826                           tosl	equ	0xFFD
 35827                           pclath	equ	0xFFA
 35828                           tblptru	equ	0xFF8
 35829                           tblptrh	equ	0xFF7
 35830                           tblptrl	equ	0xFF6
 35831                           tablat	equ	0xFF5
 35832                           prodh	equ	0xFF4
 35833                           prodl	equ	0xFF3
 35834                           intcon	equ	0xFF2
 35835                           postinc0	equ	0xFEE
 35836                           wreg	equ	0xFE8
 35837                           indf1	equ	0xFE7
 35838                           postinc1	equ	0xFE6
 35839                           postdec1	equ	0xFE5
 35840                           plusw1	equ	0xFE3
 35841                           fsr1h	equ	0xFE2
 35842                           fsr1l	equ	0xFE1
 35843                           indf2	equ	0xFDF
 35844                           postinc2	equ	0xFDE
 35845                           postdec2	equ	0xFDD
 35846                           plusw2	equ	0xFDB
 35847                           fsr2h	equ	0xFDA
 35848                           fsr2l	equ	0xFD9
 35849                           status	equ	0xFD8
 35850                           
 35851 ;; *************** function _MSDErrorHandler *****************
 35852 ;; Defined at:
 35853 ;;		line 1577 in file "usb_device_msd.c"
 35854 ;; Parameters:    Size  Location     Type
 35855 ;;  ErrorCase       1    wreg     unsigned char 
 35856 ;; Auto vars:     Size  Location     Type
 35857 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35858 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35859 ;; Return value:  Size  Location     Type
 35860 ;;                  1    wreg      void 
 35861 ;; Registers used:
 35862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35863 ;; Tracked objects:
 35864 ;;		On entry : 0/0
 35865 ;;		On exit  : 0/0
 35866 ;;		Unchanged: 0/0
 35867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35872 ;;Total ram usage:        2 bytes
 35873 ;; Hardware stack levels used:    1
 35874 ;; Hardware stack levels required when called:   11
 35875 ;; This function calls:
 35876 ;;		_ResetSenseData
 35877 ;;		_USBStallEndpoint
 35878 ;; This function is called by:
 35879 ;;		_MSDProcessCommandMediaAbsent
 35880 ;;		_MSDProcessCommandMediaPresent
 35881 ;;		_MSDCheckForErrorCases
 35882 ;; This function uses a non-reentrant model
 35883 ;;
 35884                           
 35885                           	psect	text141
 35886  010970                     __ptext141:
 35887                           	opt stack 0
 35888  010970                     _MSDErrorHandler:
 35889                           	opt stack 13
 35890                           
 35891                           ;incstack = 0
 35892                           ;MSDErrorHandler@ErrorCase stored from wreg
 35893  010970  0100               	movlb	0	; () banked
 35894  010972  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35895                           
 35896                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 35897  010974  0101               	movlb	1	; () banked
 35898  010976  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35899  010978  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35900  01097A  B4D8               	btfsc	status,2,c
 35901  01097C  D006               	goto	u9910
 35902                           
 35903                           ; BSR set to: 1
 35904  01097E  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35905  010982  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35906  010986  BEDF               	btfsc	indf2,7,c
 35907  010988  0012               	return	
 35908  01098A                     u9910:
 35909                           
 35910                           ; BSR set to: 1
 35911                           
 35912                           ; BSR set to: 1
 35913  01098A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 35914  01098C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35915  01098E  B4D8               	btfsc	status,2,c
 35916  010990  D006               	goto	l757
 35917                           
 35918                           ; BSR set to: 1
 35919  010992  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35920  010996  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35921  01099A  BEDF               	btfsc	indf2,7,c
 35922  01099C  0012               	return	
 35923  01099E                     l757:
 35924                           
 35925                           ; BSR set to: 1
 35926                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 35927  01099E  C163  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 35928                           
 35929                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 35930  0109A2  6962               	setf	_MSDCommandState& (0+255),b
 35931                           
 35932                           ; BSR set to: 1
 35933                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 35934  0109A4  0E00               	movlw	0
 35935  0109A6  6F61               	movwf	_MSDReadState& (0+255),b
 35936                           
 35937                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 35938  0109A8  0E00               	movlw	0
 35939  0109AA  6F60               	movwf	_MSDWriteState& (0+255),b
 35940                           
 35941                           ; BSR set to: 1
 35942                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 35943  0109AC  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 35944  0109B0  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 35945  0109B4  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 35946  0109B8  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 35947                           
 35948                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 35949  0109BC  0E01               	movlw	1
 35950  0109BE  010D               	movlb	13	; () banked
 35951  0109C0  6F8C               	movwf	140,b	;volatile
 35952                           
 35953                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 35954  0109C2  0E03               	movlw	3
 35955  0109C4  0101               	movlb	1	; () banked
 35956  0109C6  6F63               	movwf	_MSD_State& (0+255),b
 35957                           
 35958                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 35959  0109C8  D04B               	goto	l763
 35960  0109CA                     
 35961                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 35962                           
 35963                           ; BSR set to: 1
 35964  0109CA  0E02               	movlw	2
 35965  0109CC  010D               	movlb	13	; () banked
 35966  0109CE  6F8C               	movwf	140,b	;volatile
 35967                           
 35968                           ;usb_device_msd.c: 1607: break;
 35969  0109D0  0012               	return	
 35970  0109D2                     
 35971                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 35972                           
 35973                           ; BSR set to: 13
 35974  0109D2  0E01               	movlw	1
 35975  0109D4  0100               	movlb	0	; () banked
 35976  0109D6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35977  0109D8  0E02               	movlw	2
 35978  0109DA  EC65  F087         	call	_USBStallEndpoint
 35979                           
 35980                           ;usb_device_msd.c: 1611: break;
 35981  0109DE  0012               	return	
 35982  0109E0                     
 35983                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 35984  0109E0  0E02               	movlw	2
 35985  0109E2  010D               	movlb	13	; () banked
 35986  0109E4  6F8C               	movwf	140,b	;volatile
 35987                           
 35988                           ; BSR set to: 13
 35989                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 35990  0109E6  0E01               	movlw	1
 35991  0109E8  0100               	movlb	0	; () banked
 35992  0109EA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35993  0109EC  0E02               	movlw	2
 35994  0109EE  EC65  F087         	call	_USBStallEndpoint
 35995                           
 35996                           ;usb_device_msd.c: 1616: break;
 35997  0109F2  0012               	return	
 35998  0109F4                     
 35999                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 36000  0109F4  0E00               	movlw	0
 36001  0109F6  0100               	movlb	0	; () banked
 36002  0109F8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36003  0109FA  0E02               	movlw	2
 36004  0109FC  EC65  F087         	call	_USBStallEndpoint
 36005                           
 36006                           ;usb_device_msd.c: 1620: break;
 36007  010A00  0012               	return	
 36008  010A02                     
 36009                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 36010  010A02  0E02               	movlw	2
 36011  010A04  010D               	movlb	13	; () banked
 36012  010A06  6F8C               	movwf	140,b	;volatile
 36013                           
 36014                           ; BSR set to: 13
 36015                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 36016  010A08  0E00               	movlw	0
 36017  010A0A  0100               	movlb	0	; () banked
 36018  010A0C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36019  010A0E  0E02               	movlw	2
 36020  010A10  EC65  F087         	call	_USBStallEndpoint
 36021                           
 36022                           ;usb_device_msd.c: 1625: break;
 36023  010A14  0012               	return	
 36024  010A16                     
 36025                           ;usb_device_msd.c: 1628: ResetSenseData();
 36026  010A16  EC46  F0A1         	call	_ResetSenseData	;wreg free
 36027                           
 36028                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 36029  010A1A  0101               	movlb	1	; () banked
 36030  010A1C  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 36031  010A1E  0BF0               	andlw	-16
 36032  010A20  0905               	iorlw	5
 36033  010A22  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 36034                           
 36035                           ; BSR set to: 1
 36036                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 36037  010A24  0E20               	movlw	32
 36038  010A26  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36039                           
 36040                           ; BSR set to: 1
 36041                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 36042  010A28  0E00               	movlw	0
 36043  010A2A  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36044                           
 36045                           ; BSR set to: 1
 36046                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 36047  010A2C  0E02               	movlw	2
 36048  010A2E  0100               	movlb	0	; () banked
 36049  010A30  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 36050  010A32  A4D8               	btfss	status,2,c
 36051  010A34  D00E               	goto	l771
 36052                           
 36053                           ; BSR set to: 0
 36054  010A36  0102               	movlb	2	; () banked
 36055  010A38  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36056  010A3A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36057  010A3C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36058  010A3E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 36059  010A40  B4D8               	btfsc	status,2,c
 36060  010A42  D007               	goto	l771
 36061                           
 36062                           ; BSR set to: 2
 36063                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 36064  010A44  0E00               	movlw	0
 36065  010A46  0100               	movlb	0	; () banked
 36066  010A48  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36067  010A4A  0E02               	movlw	2
 36068  010A4C  EC65  F087         	call	_USBStallEndpoint
 36069                           
 36070                           ;usb_device_msd.c: 1636: }
 36071  010A50  0012               	return	
 36072  010A52                     l771:
 36073                           
 36074                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 36075  010A52  0E01               	movlw	1
 36076  010A54  0100               	movlb	0	; () banked
 36077  010A56  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36078  010A58  0E02               	movlw	2
 36079  010A5A  EC65  F087         	call	_USBStallEndpoint
 36080                           
 36081                           ;usb_device_msd.c: 1644: }
 36082                           
 36083                           ;usb_device_msd.c: 1643: break;
 36084                           
 36085                           ;usb_device_msd.c: 1642: default:
 36086                           
 36087                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 36088  010A5E  0012               	return	
 36089  010A60                     l763:
 36090  010A60  0100               	movlb	0	; () banked
 36091  010A62  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 36092                           
 36093                           ; Switch size 1, requested type "space"
 36094                           ; Number of cases is 6, Range of values is 1 to 127
 36095                           ; switch strategies available:
 36096                           ; Name         Instructions Cycles
 36097                           ; simple_byte           19    10 (average)
 36098                           ;	Chosen strategy is simple_byte
 36099  010A64  0A01               	xorlw	1	; case 1
 36100  010A66  B4D8               	btfsc	status,2,c
 36101  010A68  D7B0               	goto	l764
 36102  010A6A  0A03               	xorlw	3	; case 2
 36103  010A6C  B4D8               	btfsc	status,2,c
 36104  010A6E  D7B1               	goto	l766
 36105  010A70  0A01               	xorlw	1	; case 3
 36106  010A72  B4D8               	btfsc	status,2,c
 36107  010A74  D7B5               	goto	l767
 36108  010A76  0A07               	xorlw	7	; case 4
 36109  010A78  B4D8               	btfsc	status,2,c
 36110  010A7A  D7BC               	goto	l768
 36111  010A7C  0A01               	xorlw	1	; case 5
 36112  010A7E  B4D8               	btfsc	status,2,c
 36113  010A80  D7C0               	goto	l769
 36114  010A82  0A7A               	xorlw	122	; case 127
 36115  010A84  A4D8               	btfss	status,2,c
 36116  010A86  0012               	return	
 36117  010A88  D7C6               	goto	l770
 36118  010A8A                     __end_of_MSDErrorHandler:
 36119                           	opt stack 0
 36120                           tosu	equ	0xFFF
 36121                           tosh	equ	0xFFE
 36122                           tosl	equ	0xFFD
 36123                           pclath	equ	0xFFA
 36124                           tblptru	equ	0xFF8
 36125                           tblptrh	equ	0xFF7
 36126                           tblptrl	equ	0xFF6
 36127                           tablat	equ	0xFF5
 36128                           prodh	equ	0xFF4
 36129                           prodl	equ	0xFF3
 36130                           intcon	equ	0xFF2
 36131                           postinc0	equ	0xFEE
 36132                           wreg	equ	0xFE8
 36133                           indf1	equ	0xFE7
 36134                           postinc1	equ	0xFE6
 36135                           postdec1	equ	0xFE5
 36136                           plusw1	equ	0xFE3
 36137                           fsr1h	equ	0xFE2
 36138                           fsr1l	equ	0xFE1
 36139                           indf2	equ	0xFDF
 36140                           postinc2	equ	0xFDE
 36141                           postdec2	equ	0xFDD
 36142                           plusw2	equ	0xFDB
 36143                           fsr2h	equ	0xFDA
 36144                           fsr2l	equ	0xFD9
 36145                           status	equ	0xFD8
 36146                           
 36147 ;; *************** function _USBStallEndpoint *****************
 36148 ;; Defined at:
 36149 ;;		line 1073 in file "usb_device.c"
 36150 ;; Parameters:    Size  Location     Type
 36151 ;;  ep              1    wreg     unsigned char 
 36152 ;;  dir             1    0[BANK0 ] unsigned char 
 36153 ;; Auto vars:     Size  Location     Type
 36154 ;;  ep              1    5[BANK0 ] unsigned char 
 36155 ;;  p               2    6[BANK0 ] PTR struct __BDT
 36156 ;;		 -> BDT(48), 
 36157 ;; Return value:  Size  Location     Type
 36158 ;;                  1    wreg      void 
 36159 ;; Registers used:
 36160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36161 ;; Tracked objects:
 36162 ;;		On entry : 0/0
 36163 ;;		On exit  : 0/0
 36164 ;;		Unchanged: 0/0
 36165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36166 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36167 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36168 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36169 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36170 ;;Total ram usage:        8 bytes
 36171 ;; Hardware stack levels used:    1
 36172 ;; Hardware stack levels required when called:   10
 36173 ;; This function calls:
 36174 ;;		Nothing
 36175 ;; This function is called by:
 36176 ;;		_MSDTasks
 36177 ;;		_MSDReadHandler
 36178 ;;		_MSDWriteHandler
 36179 ;;		_MSDErrorHandler
 36180 ;; This function uses a non-reentrant model
 36181 ;;
 36182                           
 36183                           	psect	text142
 36184  010ECA                     __ptext142:
 36185                           	opt stack 0
 36186  010ECA                     _USBStallEndpoint:
 36187                           	opt stack 18
 36188                           
 36189                           ;incstack = 0
 36190                           ;USBStallEndpoint@ep stored from wreg
 36191  010ECA  0100               	movlb	0	; () banked
 36192  010ECC  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 36193                           
 36194                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 36195  010ECE  0100               	movlb	0	; () banked
 36196  010ED0  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36197  010ED2  A4D8               	btfss	status,2,c
 36198  010ED4  D02B               	goto	l192
 36199                           
 36200                           ; BSR set to: 0
 36201                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 36202  010ED6  EE20 F001          	lfsr	2,1
 36203  010EDA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36204  010EDC  26D9               	addwf	fsr2l,f,c
 36205  010EDE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36206  010EE0  22DA               	addwfc	fsr2h,f,c
 36207  010EE2  0E08               	movlw	8
 36208  010EE4  6EDF               	movwf	indf2,c
 36209                           
 36210                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36211  010EE6  EE20 F002          	lfsr	2,2
 36212  010EEA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36213  010EEC  26D9               	addwf	fsr2l,f,c
 36214  010EEE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36215  010EF0  22DA               	addwfc	fsr2h,f,c
 36216  010EF2  0E30               	movlw	48
 36217  010EF4  6EDE               	movwf	postinc2,c
 36218  010EF6  0E0D               	movlw	13
 36219  010EF8  6EDD               	movwf	postdec2,c
 36220                           
 36221                           ; BSR set to: 0
 36222                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36223  010EFA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36224  010EFE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36225  010F02  0E0C               	movlw	12
 36226  010F04  6EDF               	movwf	indf2,c
 36227                           
 36228                           ; BSR set to: 0
 36229                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36230  010F06  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36231  010F0A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36232  010F0E  0E00               	movlw	0
 36233  010F10  8EDB               	bsf	plusw2,7,c
 36234                           
 36235                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 36236  010F12  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36237  010F16  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36238  010F1A  0E04               	movlw	4
 36239  010F1C  6EDF               	movwf	indf2,c
 36240                           
 36241                           ; BSR set to: 0
 36242                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36243  010F1E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36244  010F22  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36245  010F26  0E00               	movlw	0
 36246  010F28  8EDB               	bsf	plusw2,7,c
 36247                           
 36248                           ;usb_device.c: 1089: }
 36249  010F2A  0012               	return	
 36250  010F2C                     l192:
 36251                           
 36252                           ; BSR set to: 0
 36253                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 36254                           
 36255                           ; BSR set to: 0
 36256  010F2C  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36257  010F2E  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 36258  010F30  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 36259  010F32  90D8               	bcf	status,0,c
 36260  010F34  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36261  010F36  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36262  010F38  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36263  010F3A  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 36264  010F3C  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 36265  010F3E  90D8               	bcf	status,0,c
 36266  010F40  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36267  010F42  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36268  010F44  90D8               	bcf	status,0,c
 36269  010F46  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36270  010F48  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36271  010F4A  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 36272  010F4C  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 36273  010F4E  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 36274  010F50  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 36275  010F52  90D8               	bcf	status,0,c
 36276  010F54  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36277  010F56  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36278  010F58  90D8               	bcf	status,0,c
 36279  010F5A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36280  010F5C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36281  010F5E  0E00               	movlw	0
 36282  010F60  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 36283  010F62  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36284  010F64  0E0D               	movlw	13
 36285  010F66  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 36286  010F68  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36287                           
 36288                           ; BSR set to: 0
 36289                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 36290  010F6A  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36291  010F6E  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36292  010F72  0E00               	movlw	0
 36293  010F74  84DB               	bsf	plusw2,2,c
 36294                           
 36295                           ; BSR set to: 0
 36296                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 36297  010F76  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36298  010F7A  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36299  010F7E  0E00               	movlw	0
 36300  010F80  8EDB               	bsf	plusw2,7,c
 36301                           
 36302                           ; BSR set to: 0
 36303                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 36304  010F82  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36305  010F84  0D04               	mullw	4
 36306  010F86  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 36307  010F8A  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 36308  010F8E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36309  010F90  0D02               	mullw	2
 36310  010F92  50F3               	movf	prodl,w,c
 36311  010F94  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36312  010F96  50F4               	movf	prodh,w,c
 36313  010F98  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36314  010F9A  90D8               	bcf	status,0,c
 36315  010F9C  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36316  010F9E  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36317  010FA0  90D8               	bcf	status,0,c
 36318  010FA2  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36319  010FA4  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36320  010FA6  0E04               	movlw	4
 36321  010FA8  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36322  010FAA  0E00               	movlw	0
 36323  010FAC  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36324  010FAE  0E00               	movlw	0
 36325  010FB0  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 36326  010FB2  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36327  010FB4  0E0D               	movlw	13
 36328  010FB6  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 36329  010FB8  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36330                           
 36331                           ; BSR set to: 0
 36332                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 36333  010FBA  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36334  010FBE  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36335  010FC2  0E00               	movlw	0
 36336  010FC4  84DB               	bsf	plusw2,2,c
 36337                           
 36338                           ; BSR set to: 0
 36339                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 36340  010FC6  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36341  010FCA  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36342  010FCE  0E00               	movlw	0
 36343  010FD0  8EDB               	bsf	plusw2,7,c
 36344  010FD2  0012               	return	
 36345  010FD4                     __end_of_USBStallEndpoint:
 36346                           	opt stack 0
 36347                           tosu	equ	0xFFF
 36348                           tosh	equ	0xFFE
 36349                           tosl	equ	0xFFD
 36350                           pclath	equ	0xFFA
 36351                           tblptru	equ	0xFF8
 36352                           tblptrh	equ	0xFF7
 36353                           tblptrl	equ	0xFF6
 36354                           tablat	equ	0xFF5
 36355                           prodh	equ	0xFF4
 36356                           prodl	equ	0xFF3
 36357                           intcon	equ	0xFF2
 36358                           postinc0	equ	0xFEE
 36359                           wreg	equ	0xFE8
 36360                           indf1	equ	0xFE7
 36361                           postinc1	equ	0xFE6
 36362                           postdec1	equ	0xFE5
 36363                           plusw1	equ	0xFE3
 36364                           fsr1h	equ	0xFE2
 36365                           fsr1l	equ	0xFE1
 36366                           indf2	equ	0xFDF
 36367                           postinc2	equ	0xFDE
 36368                           postdec2	equ	0xFDD
 36369                           plusw2	equ	0xFDB
 36370                           fsr2h	equ	0xFDA
 36371                           fsr2l	equ	0xFD9
 36372                           status	equ	0xFD8
 36373                           
 36374 ;; *************** function _ResetSenseData *****************
 36375 ;; Defined at:
 36376 ;;		line 1373 in file "usb_device_msd.c"
 36377 ;; Parameters:    Size  Location     Type
 36378 ;;		None
 36379 ;; Auto vars:     Size  Location     Type
 36380 ;;		None
 36381 ;; Return value:  Size  Location     Type
 36382 ;;                  1    wreg      void 
 36383 ;; Registers used:
 36384 ;;		wreg, status,2
 36385 ;; Tracked objects:
 36386 ;;		On entry : 0/0
 36387 ;;		On exit  : 0/0
 36388 ;;		Unchanged: 0/0
 36389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36394 ;;Total ram usage:        0 bytes
 36395 ;; Hardware stack levels used:    1
 36396 ;; Hardware stack levels required when called:   10
 36397 ;; This function calls:
 36398 ;;		Nothing
 36399 ;; This function is called by:
 36400 ;;		_MSDProcessCommandMediaAbsent
 36401 ;;		_MSDProcessCommandMediaPresent
 36402 ;;		_MSDErrorHandler
 36403 ;; This function uses a non-reentrant model
 36404 ;;
 36405                           
 36406                           	psect	text143
 36407  01428C                     __ptext143:
 36408                           	opt stack 0
 36409  01428C                     _ResetSenseData:
 36410                           	opt stack 16
 36411                           
 36412                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 36413                           
 36414                           ; BSR set to: 0
 36415                           ;incstack = 0
 36416  01428C  0101               	movlb	1	; () banked
 36417  01428E  9100               	bcf	_gblSenseData& (0+255),0,b
 36418  014290  9300               	bcf	_gblSenseData& (0+255),1,b
 36419  014292  9500               	bcf	_gblSenseData& (0+255),2,b
 36420  014294  9700               	bcf	_gblSenseData& (0+255),3,b
 36421  014296  8900               	bsf	_gblSenseData& (0+255),4,b
 36422  014298  8B00               	bsf	_gblSenseData& (0+255),5,b
 36423  01429A  8D00               	bsf	_gblSenseData& (0+255),6,b
 36424                           
 36425                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 36426  01429C  9F00               	bcf	_gblSenseData& (0+255),7,b
 36427                           
 36428                           ; BSR set to: 1
 36429                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 36430  01429E  0E00               	movlw	0
 36431  0142A0  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 36432                           
 36433                           ; BSR set to: 1
 36434                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 36435  0142A2  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 36436  0142A4  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 36437  0142A6  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 36438  0142A8  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 36439                           
 36440                           ; BSR set to: 1
 36441                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 36442  0142AA  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 36443                           
 36444                           ; BSR set to: 1
 36445                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 36446  0142AC  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 36447                           
 36448                           ; BSR set to: 1
 36449                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 36450  0142AE  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 36451                           
 36452                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 36453  0142B0  0E00               	movlw	0
 36454  0142B2  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 36455                           
 36456                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 36457  0142B4  0E00               	movlw	0
 36458  0142B6  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 36459                           
 36460                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 36461  0142B8  0E00               	movlw	0
 36462  0142BA  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 36463                           
 36464                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 36465  0142BC  0E00               	movlw	0
 36466  0142BE  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 36467                           
 36468                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 36469  0142C0  0E0A               	movlw	10
 36470  0142C2  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 36471                           
 36472                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 36473  0142C4  0E00               	movlw	0
 36474  0142C6  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 36475  0142C8  0E00               	movlw	0
 36476  0142CA  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 36477  0142CC  0E00               	movlw	0
 36478  0142CE  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 36479  0142D0  0E00               	movlw	0
 36480  0142D2  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 36481                           
 36482                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 36483  0142D4  0E00               	movlw	0
 36484  0142D6  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36485                           
 36486                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 36487  0142D8  0E00               	movlw	0
 36488  0142DA  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36489                           
 36490                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 36491  0142DC  0E00               	movlw	0
 36492  0142DE  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 36493                           
 36494                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 36495  0142E0  0E00               	movlw	0
 36496  0142E2  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 36497                           
 36498                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 36499  0142E4  0E00               	movlw	0
 36500  0142E6  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 36501                           
 36502                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 36503  0142E8  0E00               	movlw	0
 36504  0142EA  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 36505                           
 36506                           ; BSR set to: 1
 36507  0142EC  0012               	return		;funcret
 36508  0142EE                     __end_of_ResetSenseData:
 36509                           	opt stack 0
 36510                           tosu	equ	0xFFF
 36511                           tosh	equ	0xFFE
 36512                           tosl	equ	0xFFD
 36513                           pclath	equ	0xFFA
 36514                           tblptru	equ	0xFF8
 36515                           tblptrh	equ	0xFF7
 36516                           tblptrl	equ	0xFF6
 36517                           tablat	equ	0xFF5
 36518                           prodh	equ	0xFF4
 36519                           prodl	equ	0xFF3
 36520                           intcon	equ	0xFF2
 36521                           postinc0	equ	0xFEE
 36522                           wreg	equ	0xFE8
 36523                           indf1	equ	0xFE7
 36524                           postinc1	equ	0xFE6
 36525                           postdec1	equ	0xFE5
 36526                           plusw1	equ	0xFE3
 36527                           fsr1h	equ	0xFE2
 36528                           fsr1l	equ	0xFE1
 36529                           indf2	equ	0xFDF
 36530                           postinc2	equ	0xFDE
 36531                           postdec2	equ	0xFDD
 36532                           plusw2	equ	0xFDB
 36533                           fsr2h	equ	0xFDA
 36534                           fsr2l	equ	0xFD9
 36535                           status	equ	0xFD8
 36536                           
 36537 ;; *************** function _ExternalFlash_SectorRead *****************
 36538 ;; Defined at:
 36539 ;;		line 40 in file "external_flash.c"
 36540 ;; Parameters:    Size  Location     Type
 36541 ;;  config          2   43[BANK0 ] PTR void 
 36542 ;;		 -> NULL(0), 
 36543 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 36544 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 36545 ;;		 -> msd_buffer(512), 
 36546 ;; Auto vars:     Size  Location     Type
 36547 ;;  page            2   51[BANK0 ] unsigned int 
 36548 ;; Return value:  Size  Location     Type
 36549 ;;                  1    wreg      unsigned char 
 36550 ;; Registers used:
 36551 ;;		wreg, status,2, status,0, cstack
 36552 ;; Tracked objects:
 36553 ;;		On entry : 0/0
 36554 ;;		On exit  : 0/0
 36555 ;;		Unchanged: 0/0
 36556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36557 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36558 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36560 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36561 ;;Total ram usage:       10 bytes
 36562 ;; Hardware stack levels used:    1
 36563 ;; Hardware stack levels required when called:   15
 36564 ;; This function calls:
 36565 ;;		_flash_sector_read
 36566 ;; This function is called by:
 36567 ;;		_MSDReadHandler
 36568 ;; This function uses a non-reentrant model
 36569 ;;
 36570                           
 36571                           	psect	text144
 36572  015272                     __ptext144:
 36573                           	opt stack 0
 36574  015272                     _ExternalFlash_SectorRead:
 36575                           	opt stack 10
 36576                           
 36577                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 36578                           
 36579                           ; BSR set to: 1
 36580                           ;incstack = 0
 36581  015272  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 36582  015276  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 36583                           
 36584                           ;external_flash.c: 45: if(sector_addr >= 8192)
 36585  01527A  0100               	movlb	0	; () banked
 36586  01527C  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 36587  01527E  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 36588  015280  E104               	bnz	u10940
 36589  015282  0E20               	movlw	32
 36590  015284  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 36591  015286  A0D8               	btfss	status,0,c
 36592  015288  D002               	goto	l1677
 36593  01528A                     u10940:
 36594                           
 36595                           ; BSR set to: 0
 36596                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 36597  01528A  0E00               	movlw	0
 36598                           
 36599                           ; BSR set to: 0
 36600  01528C  0012               	return	
 36601  01528E                     l1677:
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 36605                           
 36606                           ; BSR set to: 0
 36607  01528E  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 36608  015292  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 36609  015296  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 36610  01529A  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 36611  01529E  EC00  F0AB         	call	_flash_sector_read	;wreg free
 36612                           
 36613                           ;external_flash.c: 53: return 1;
 36614  0152A2  0E01               	movlw	1
 36615  0152A4  0012               	return	
 36616  0152A6                     __end_of_ExternalFlash_SectorRead:
 36617                           	opt stack 0
 36618                           tosu	equ	0xFFF
 36619                           tosh	equ	0xFFE
 36620                           tosl	equ	0xFFD
 36621                           pclath	equ	0xFFA
 36622                           tblptru	equ	0xFF8
 36623                           tblptrh	equ	0xFF7
 36624                           tblptrl	equ	0xFF6
 36625                           tablat	equ	0xFF5
 36626                           prodh	equ	0xFF4
 36627                           prodl	equ	0xFF3
 36628                           intcon	equ	0xFF2
 36629                           postinc0	equ	0xFEE
 36630                           wreg	equ	0xFE8
 36631                           indf1	equ	0xFE7
 36632                           postinc1	equ	0xFE6
 36633                           postdec1	equ	0xFE5
 36634                           plusw1	equ	0xFE3
 36635                           fsr1h	equ	0xFE2
 36636                           fsr1l	equ	0xFE1
 36637                           indf2	equ	0xFDF
 36638                           postinc2	equ	0xFDE
 36639                           postdec2	equ	0xFDD
 36640                           plusw2	equ	0xFDB
 36641                           fsr2h	equ	0xFDA
 36642                           fsr2l	equ	0xFD9
 36643                           status	equ	0xFD8
 36644                           
 36645 ;; *************** function _flash_sector_read *****************
 36646 ;; Defined at:
 36647 ;;		line 426 in file "flash.c"
 36648 ;; Parameters:    Size  Location     Type
 36649 ;;  page            2   39[BANK0 ] unsigned int 
 36650 ;;  data            2   41[BANK0 ] PTR unsigned char 
 36651 ;;		 -> buffer(512), msd_buffer(512), 
 36652 ;; Auto vars:     Size  Location     Type
 36653 ;;		None
 36654 ;; Return value:  Size  Location     Type
 36655 ;;                  1    wreg      void 
 36656 ;; Registers used:
 36657 ;;		wreg, status,2, status,0, cstack
 36658 ;; Tracked objects:
 36659 ;;		On entry : 0/0
 36660 ;;		On exit  : 0/0
 36661 ;;		Unchanged: 0/0
 36662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36663 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36666 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36667 ;;Total ram usage:        4 bytes
 36668 ;; Hardware stack levels used:    1
 36669 ;; Hardware stack levels required when called:   14
 36670 ;; This function calls:
 36671 ;;		__flash_partial_read
 36672 ;; This function is called by:
 36673 ;;		_ExternalFlash_SectorRead
 36674 ;;		__get_available_cluster
 36675 ;;		__find_nth_cluster
 36676 ;;		__make_cluster_chain
 36677 ;;		_fat_find_file
 36678 ;;		_fat_get_format_status
 36679 ;; This function uses a non-reentrant model
 36680 ;;
 36681                           
 36682                           	psect	text145
 36683  015600                     __ptext145:
 36684                           	opt stack 0
 36685  015600                     _flash_sector_read:
 36686                           	opt stack 13
 36687                           
 36688                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 36689                           
 36690                           ;incstack = 0
 36691  015600  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 36692  015604  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 36693  015608  0E00               	movlw	0
 36694  01560A  0100               	movlb	0	; () banked
 36695  01560C  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 36696  01560E  0E00               	movlw	0
 36697  015610  6F75               	movwf	__flash_partial_read@start& (0+255),b
 36698  015612  0E02               	movlw	2
 36699  015614  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 36700  015616  0E00               	movlw	0
 36701  015618  6F77               	movwf	__flash_partial_read@length& (0+255),b
 36702  01561A  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 36703  01561E  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 36704  015622  EC86  F09E         	call	__flash_partial_read	;wreg free
 36705  015626  0012               	return		;funcret
 36706  015628                     __end_of_flash_sector_read:
 36707                           	opt stack 0
 36708                           tosu	equ	0xFFF
 36709                           tosh	equ	0xFFE
 36710                           tosl	equ	0xFFD
 36711                           pclath	equ	0xFFA
 36712                           tblptru	equ	0xFF8
 36713                           tblptrh	equ	0xFF7
 36714                           tblptrl	equ	0xFF6
 36715                           tablat	equ	0xFF5
 36716                           prodh	equ	0xFF4
 36717                           prodl	equ	0xFF3
 36718                           intcon	equ	0xFF2
 36719                           postinc0	equ	0xFEE
 36720                           wreg	equ	0xFE8
 36721                           indf1	equ	0xFE7
 36722                           postinc1	equ	0xFE6
 36723                           postdec1	equ	0xFE5
 36724                           plusw1	equ	0xFE3
 36725                           fsr1h	equ	0xFE2
 36726                           fsr1l	equ	0xFE1
 36727                           indf2	equ	0xFDF
 36728                           postinc2	equ	0xFDE
 36729                           postdec2	equ	0xFDD
 36730                           plusw2	equ	0xFDB
 36731                           fsr2h	equ	0xFDA
 36732                           fsr2l	equ	0xFD9
 36733                           status	equ	0xFD8
 36734                           
 36735 ;; *************** function __flash_partial_read *****************
 36736 ;; Defined at:
 36737 ;;		line 309 in file "flash.c"
 36738 ;; Parameters:    Size  Location     Type
 36739 ;;  page            2   19[BANK0 ] unsigned int 
 36740 ;;  start           2   21[BANK0 ] unsigned int 
 36741 ;;  length          2   23[BANK0 ] unsigned int 
 36742 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36743 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 36744 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 36745 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 36746 ;; Auto vars:     Size  Location     Type
 36747 ;;  command         4   31[BANK0 ] unsigned char [4]
 36748 ;;  address         4   35[BANK0 ] unsigned long 
 36749 ;; Return value:  Size  Location     Type
 36750 ;;                  1    wreg      void 
 36751 ;; Registers used:
 36752 ;;		wreg, status,2, status,0, cstack
 36753 ;; Tracked objects:
 36754 ;;		On entry : 0/0
 36755 ;;		On exit  : 0/0
 36756 ;;		Unchanged: 0/0
 36757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36758 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36759 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36760 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36761 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36762 ;;Total ram usage:       20 bytes
 36763 ;; Hardware stack levels used:    1
 36764 ;; Hardware stack levels required when called:   13
 36765 ;; This function calls:
 36766 ;;		__flash_is_busy
 36767 ;;		_spi_tx_rx
 36768 ;; This function is called by:
 36769 ;;		_flash_sector_read
 36770 ;;		_flash_partial_read
 36771 ;; This function uses a non-reentrant model
 36772 ;;
 36773                           
 36774                           	psect	text146
 36775  013D0C                     __ptext146:
 36776                           	opt stack 0
 36777  013D0C                     __flash_partial_read:
 36778                           	opt stack 13
 36779                           
 36780                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 36781                           
 36782                           ;incstack = 0
 36783  013D0C  EC5E  F0AB         	call	__flash_is_busy	;wreg free
 36784  013D10  0900               	iorlw	0
 36785  013D12  A4D8               	btfss	status,2,c
 36786  013D14  D7FB               	goto	__flash_partial_read
 36787                           
 36788                           ;flash.c: 318: address = page;
 36789  013D16  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 36790  013D1A  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 36791  013D1E  0100               	movlb	0	; () banked
 36792  013D20  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 36793  013D22  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 36794                           
 36795                           ; BSR set to: 0
 36796                           ;flash.c: 319: address <<= 9;
 36797  013D24  0E09               	movlw	9
 36798  013D26                     u9785:
 36799  013D26  90D8               	bcf	status,0,c
 36800  013D28  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 36801  013D2A  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 36802  013D2C  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 36803  013D2E  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 36804  013D30  2EE8               	decfsz	wreg,f,c
 36805  013D32  D7F9               	goto	u9785
 36806                           
 36807                           ; BSR set to: 0
 36808                           ;flash.c: 320: address |= start;
 36809  013D34  5175               	movf	__flash_partial_read@start& (0+255),w,b
 36810  013D36  6F7B               	movwf	??__flash_partial_read& (0+255),b
 36811  013D38  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 36812  013D3A  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 36813  013D3C  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 36814  013D3E  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 36815  013D40  517B               	movf	??__flash_partial_read& (0+255),w,b
 36816  013D42  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 36817  013D44  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 36818  013D46  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 36819  013D48  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 36820  013D4A  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 36821  013D4C  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 36822  013D4E  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 36823                           
 36824                           ; BSR set to: 0
 36825                           ;flash.c: 323: command[0] = 0x03;
 36826  013D50  0E03               	movlw	3
 36827  013D52  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 36828                           
 36829                           ; BSR set to: 0
 36830                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36831  013D54  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 36832                           
 36833                           ; BSR set to: 0
 36834                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36835  013D58  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 36836  013D5A  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 36837                           
 36838                           ; BSR set to: 0
 36839                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36840  013D5C  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 36841                           
 36842                           ; BSR set to: 0
 36843                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 36844  013D60  0E7F               	movlw	low __flash_partial_read@command
 36845  013D62  6F60               	movwf	spi_tx_rx@command& (0+255),b
 36846  013D64  0E00               	movlw	high __flash_partial_read@command
 36847  013D66  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 36848  013D68  0E00               	movlw	0
 36849  013D6A  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 36850  013D6C  0E04               	movlw	4
 36851  013D6E  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 36852  013D70  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 36853  013D74  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 36854  013D78  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 36855  013D7C  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 36856  013D80  EC47  F09A         	call	_spi_tx_rx	;wreg free
 36857  013D84  0012               	return		;funcret
 36858  013D86                     __end_of__flash_partial_read:
 36859                           	opt stack 0
 36860                           tosu	equ	0xFFF
 36861                           tosh	equ	0xFFE
 36862                           tosl	equ	0xFFD
 36863                           pclath	equ	0xFFA
 36864                           tblptru	equ	0xFF8
 36865                           tblptrh	equ	0xFF7
 36866                           tblptrl	equ	0xFF6
 36867                           tablat	equ	0xFF5
 36868                           prodh	equ	0xFF4
 36869                           prodl	equ	0xFF3
 36870                           intcon	equ	0xFF2
 36871                           postinc0	equ	0xFEE
 36872                           wreg	equ	0xFE8
 36873                           indf1	equ	0xFE7
 36874                           postinc1	equ	0xFE6
 36875                           postdec1	equ	0xFE5
 36876                           plusw1	equ	0xFE3
 36877                           fsr1h	equ	0xFE2
 36878                           fsr1l	equ	0xFE1
 36879                           indf2	equ	0xFDF
 36880                           postinc2	equ	0xFDE
 36881                           postdec2	equ	0xFDD
 36882                           plusw2	equ	0xFDB
 36883                           fsr2h	equ	0xFDA
 36884                           fsr2l	equ	0xFD9
 36885                           status	equ	0xFD8
 36886                           
 36887 ;; *************** function __flash_is_busy *****************
 36888 ;; Defined at:
 36889 ;;		line 281 in file "flash.c"
 36890 ;; Parameters:    Size  Location     Type
 36891 ;;		None
 36892 ;; Auto vars:     Size  Location     Type
 36893 ;;  status          2   17[BANK0 ] unsigned int 
 36894 ;; Return value:  Size  Location     Type
 36895 ;;                  1    wreg      unsigned char 
 36896 ;; Registers used:
 36897 ;;		wreg, status,2, status,0, cstack
 36898 ;; Tracked objects:
 36899 ;;		On entry : 0/0
 36900 ;;		On exit  : 0/0
 36901 ;;		Unchanged: 0/0
 36902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36906 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36907 ;;Total ram usage:        2 bytes
 36908 ;; Hardware stack levels used:    1
 36909 ;; Hardware stack levels required when called:   12
 36910 ;; This function calls:
 36911 ;;		__flash_get_status
 36912 ;;		__flash_wakeup
 36913 ;; This function is called by:
 36914 ;;		__flash_set_page_size
 36915 ;;		__flash_copy_page_to_buffer
 36916 ;;		__flash_compare_page_to_buffer
 36917 ;;		__flash_write_to_buffer
 36918 ;;		__flash_write_page_from_buffer
 36919 ;;		__flash_partial_read
 36920 ;;		_flash_partial_write
 36921 ;;		__flash_erase_page
 36922 ;;		__flash_buffer_read
 36923 ;;		_flash_is_busy
 36924 ;;		_flash_set_power_state
 36925 ;; This function uses a non-reentrant model
 36926 ;;
 36927                           
 36928                           	psect	text147
 36929  0156BC                     __ptext147:
 36930                           	opt stack 0
 36931  0156BC                     __flash_is_busy:
 36932                           	opt stack 15
 36933                           
 36934                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 36935                           
 36936                           ;incstack = 0
 36937  0156BC  0101               	movlb	1	; () banked
 36938  0156BE  515A               	movf	_power_state& (0+255),w,b
 36939  0156C0  A4D8               	btfss	status,2,c
 36940                           
 36941                           ; BSR set to: 1
 36942                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 36943  0156C2  EC27  F0A4         	call	__flash_wakeup	;wreg free
 36944                           
 36945                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 36946  0156C6  EC53  F0A9         	call	__flash_get_status	;wreg free
 36947  0156CA  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 36948  0156CE  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 36949                           
 36950                           ;flash.c: 295: if(status & 0b0000000010000000)
 36951  0156D2  0100               	movlb	0	; () banked
 36952  0156D4  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 36953  0156D6  D002               	goto	l1581
 36954                           
 36955                           ; BSR set to: 0
 36956                           ;flash.c: 296: {;flash.c: 298: return 0;
 36957  0156D8  0E00               	movlw	0
 36958                           
 36959                           ; BSR set to: 0
 36960                           ;flash.c: 299: }
 36961                           
 36962                           ; BSR set to: 0
 36963  0156DA  0012               	return	
 36964  0156DC                     l1581:
 36965                           
 36966                           ; BSR set to: 0
 36967                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 36968                           
 36969                           ; BSR set to: 0
 36970  0156DC  0E01               	movlw	1
 36971                           
 36972                           ; BSR set to: 0
 36973  0156DE  0012               	return	
 36974  0156E0                     __end_of__flash_is_busy:
 36975                           	opt stack 0
 36976                           tosu	equ	0xFFF
 36977                           tosh	equ	0xFFE
 36978                           tosl	equ	0xFFD
 36979                           pclath	equ	0xFFA
 36980                           tblptru	equ	0xFF8
 36981                           tblptrh	equ	0xFF7
 36982                           tblptrl	equ	0xFF6
 36983                           tablat	equ	0xFF5
 36984                           prodh	equ	0xFF4
 36985                           prodl	equ	0xFF3
 36986                           intcon	equ	0xFF2
 36987                           postinc0	equ	0xFEE
 36988                           wreg	equ	0xFE8
 36989                           indf1	equ	0xFE7
 36990                           postinc1	equ	0xFE6
 36991                           postdec1	equ	0xFE5
 36992                           plusw1	equ	0xFE3
 36993                           fsr1h	equ	0xFE2
 36994                           fsr1l	equ	0xFE1
 36995                           indf2	equ	0xFDF
 36996                           postinc2	equ	0xFDE
 36997                           postdec2	equ	0xFDD
 36998                           plusw2	equ	0xFDB
 36999                           fsr2h	equ	0xFDA
 37000                           fsr2l	equ	0xFD9
 37001                           status	equ	0xFD8
 37002                           
 37003 ;; *************** function __flash_wakeup *****************
 37004 ;; Defined at:
 37005 ;;		line 128 in file "flash.c"
 37006 ;; Parameters:    Size  Location     Type
 37007 ;;		None
 37008 ;; Auto vars:     Size  Location     Type
 37009 ;;  command         1    8[BANK0 ] unsigned char 
 37010 ;; Return value:  Size  Location     Type
 37011 ;;                  1    wreg      void 
 37012 ;; Registers used:
 37013 ;;		wreg, status,2, status,0, cstack
 37014 ;; Tracked objects:
 37015 ;;		On entry : 0/0
 37016 ;;		On exit  : 0/0
 37017 ;;		Unchanged: 0/0
 37018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37022 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37023 ;;Total ram usage:        1 bytes
 37024 ;; Hardware stack levels used:    1
 37025 ;; Hardware stack levels required when called:   11
 37026 ;; This function calls:
 37027 ;;		_spi_tx
 37028 ;; This function is called by:
 37029 ;;		__flash_is_busy
 37030 ;;		_flash_set_power_state
 37031 ;; This function uses a non-reentrant model
 37032 ;;
 37033                           
 37034                           	psect	text148
 37035  01484E                     __ptext148:
 37036                           	opt stack 0
 37037  01484E                     __flash_wakeup:
 37038                           	opt stack 15
 37039                           
 37040                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 37041                           
 37042                           ; BSR set to: 0
 37043                           ;incstack = 0
 37044  01484E  D022               	goto	l1530
 37045  014850                     
 37046                           ;flash.c: 135: command = 0xAB;
 37047  014850  0EAB               	movlw	171
 37048  014852  0100               	movlb	0	; () banked
 37049  014854  6F68               	movwf	__flash_wakeup@command& (0+255),b
 37050                           
 37051                           ; BSR set to: 0
 37052                           ;flash.c: 136: spi_tx(&command, 1);
 37053  014856  0E68               	movlw	low __flash_wakeup@command
 37054  014858  6F60               	movwf	spi_tx@data& (0+255),b
 37055  01485A  0E00               	movlw	high __flash_wakeup@command
 37056  01485C  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37057  01485E  0E00               	movlw	0
 37058  014860  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37059  014862  0E01               	movlw	1
 37060  014864  6F62               	movwf	spi_tx@length& (0+255),b
 37061  014866  EC4A  F0A3         	call	_spi_tx	;wreg free
 37062                           
 37063                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37064  01486A  0E17               	movlw	23
 37065  01486C                     u19117:
 37066  01486C  2EE8               	decfsz	wreg,f,c
 37067  01486E  D7FE               	bra	u19117
 37068  014870  F000               	nop	
 37069                           
 37070                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 37071  014872  0E00               	movlw	0
 37072  014874  0101               	movlb	1	; () banked
 37073  014876  6F5A               	movwf	_power_state& (0+255),b
 37074                           
 37075                           ;flash.c: 139: break;
 37076  014878  0012               	return	
 37077  01487A                     l1533:
 37078                           
 37079                           ; BSR set to: 1
 37080                           ;flash.c: 144: LATDbits.LD7 = 0;
 37081  01487A  9E8C               	bcf	3980,7,c	;volatile
 37082                           
 37083                           ; BSR set to: 1
 37084                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37085  01487C  0E0D               	movlw	13
 37086  01487E                     u19127:
 37087  01487E  2EE8               	decfsz	wreg,f,c
 37088  014880  D7FE               	bra	u19127
 37089  014882  F000               	nop	
 37090                           
 37091                           ;flash.c: 146: LATDbits.LD7 = 1;
 37092  014884  8E8C               	bsf	3980,7,c	;volatile
 37093                           
 37094                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37095  014886  0E50               	movlw	80
 37096  014888                     u19137:
 37097  014888  2EE8               	decfsz	wreg,f,c
 37098  01488A  D7FE               	bra	u19137
 37099                           
 37100                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 37101  01488C  0E00               	movlw	0
 37102  01488E  0101               	movlb	1	; () banked
 37103  014890  6F5A               	movwf	_power_state& (0+255),b
 37104                           
 37105                           ; BSR set to: 1
 37106                           ;flash.c: 150: }
 37107                           
 37108                           ;flash.c: 149: break;
 37109  014892  0012               	return	
 37110  014894                     l1530:
 37111                           
 37112                           ; BSR set to: 1
 37113  014894  0101               	movlb	1	; () banked
 37114  014896  515A               	movf	_power_state& (0+255),w,b
 37115                           
 37116                           ; Switch size 1, requested type "space"
 37117                           ; Number of cases is 2, Range of values is 1 to 2
 37118                           ; switch strategies available:
 37119                           ; Name         Instructions Cycles
 37120                           ; simple_byte            7     4 (average)
 37121                           ;	Chosen strategy is simple_byte
 37122  014898  0A01               	xorlw	1	; case 1
 37123  01489A  B4D8               	btfsc	status,2,c
 37124  01489C  D7D9               	goto	l1531
 37125  01489E  0A03               	xorlw	3	; case 2
 37126  0148A0  A4D8               	btfss	status,2,c
 37127  0148A2  0012               	return	
 37128  0148A4  D7EA               	goto	l1533
 37129  0148A6                     __end_of__flash_wakeup:
 37130                           	opt stack 0
 37131                           tosu	equ	0xFFF
 37132                           tosh	equ	0xFFE
 37133                           tosl	equ	0xFFD
 37134                           pclath	equ	0xFFA
 37135                           tblptru	equ	0xFF8
 37136                           tblptrh	equ	0xFF7
 37137                           tblptrl	equ	0xFF6
 37138                           tablat	equ	0xFF5
 37139                           prodh	equ	0xFF4
 37140                           prodl	equ	0xFF3
 37141                           intcon	equ	0xFF2
 37142                           postinc0	equ	0xFEE
 37143                           wreg	equ	0xFE8
 37144                           indf1	equ	0xFE7
 37145                           postinc1	equ	0xFE6
 37146                           postdec1	equ	0xFE5
 37147                           plusw1	equ	0xFE3
 37148                           fsr1h	equ	0xFE2
 37149                           fsr1l	equ	0xFE1
 37150                           indf2	equ	0xFDF
 37151                           postinc2	equ	0xFDE
 37152                           postdec2	equ	0xFDD
 37153                           plusw2	equ	0xFDB
 37154                           fsr2h	equ	0xFDA
 37155                           fsr2l	equ	0xFD9
 37156                           status	equ	0xFD8
 37157                           
 37158 ;; *************** function _spi_tx *****************
 37159 ;; Defined at:
 37160 ;;		line 108 in file "spi.c"
 37161 ;; Parameters:    Size  Location     Type
 37162 ;;  data            2    0[BANK0 ] PTR unsigned char 
 37163 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37164 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37165 ;;  length          2    2[BANK0 ] unsigned int 
 37166 ;; Auto vars:     Size  Location     Type
 37167 ;;		None
 37168 ;; Return value:  Size  Location     Type
 37169 ;;                  1    wreg      void 
 37170 ;; Registers used:
 37171 ;;		wreg, status,2, status,0
 37172 ;; Tracked objects:
 37173 ;;		On entry : 0/0
 37174 ;;		On exit  : 0/0
 37175 ;;		Unchanged: 0/0
 37176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37179 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37180 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37181 ;;Total ram usage:        8 bytes
 37182 ;; Hardware stack levels used:    1
 37183 ;; Hardware stack levels required when called:   10
 37184 ;; This function calls:
 37185 ;;		Nothing
 37186 ;; This function is called by:
 37187 ;;		__flash_set_page_size
 37188 ;;		__flash_wakeup
 37189 ;;		__flash_copy_page_to_buffer
 37190 ;;		__flash_compare_page_to_buffer
 37191 ;;		__flash_write_page_from_buffer
 37192 ;;		__flash_erase_page
 37193 ;;		_flash_set_power_state
 37194 ;; This function uses a non-reentrant model
 37195 ;;
 37196                           
 37197                           	psect	text149
 37198  014694                     __ptext149:
 37199                           	opt stack 0
 37200  014694                     _spi_tx:
 37201                           	opt stack 17
 37202                           
 37203                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 37204                           
 37205                           ; BSR set to: 1
 37206                           ;incstack = 0
 37207  014694  9E88               	bcf	3976,7,c	;volatile
 37208                           
 37209                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 37210  014696  9C88               	bcf	3976,6,c	;volatile
 37211                           
 37212                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 37213  014698  8A88               	bsf	3976,5,c	;volatile
 37214                           
 37215                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 37216  01469A  9888               	bcf	3976,4,c	;volatile
 37217                           
 37218                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 37219  01469C  9688               	bcf	3976,3,c	;volatile
 37220                           
 37221                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 37222  01469E  8488               	bsf	3976,2,c	;volatile
 37223                           
 37224                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 37225  0146A0  9288               	bcf	3976,1,c	;volatile
 37226                           
 37227                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 37228  0146A2  9886               	bcf	3974,4,c	;volatile
 37229  0146A4  9A86               	bcf	3974,5,c	;volatile
 37230  0146A6  9C86               	bcf	3974,6,c	;volatile
 37231  0146A8  9E86               	bcf	3974,7,c	;volatile
 37232                           
 37233                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 37234  0146AA  9086               	bcf	3974,0,c	;volatile
 37235  0146AC  9286               	bcf	3974,1,c	;volatile
 37236  0146AE  9486               	bcf	3974,2,c	;volatile
 37237  0146B0  9686               	bcf	3974,3,c	;volatile
 37238                           
 37239                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37240  0146B2  0100               	movlb	0	; () banked
 37241  0146B4  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 37242  0146B6  6E6A               	movwf	3946,c	;volatile
 37243                           
 37244                           ; BSR set to: 0
 37245                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37246  0146B8  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 37247                           
 37248                           ; BSR set to: 0
 37249                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37250  0146BC  0EFF               	movlw	255
 37251  0146BE  6F64               	movwf	??_spi_tx& (0+255),b
 37252  0146C0  0EFF               	movlw	255
 37253  0146C2  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 37254  0146C4  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 37255  0146C8  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 37256  0146CC  5164               	movf	??_spi_tx& (0+255),w,b
 37257  0146CE  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 37258  0146D0  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 37259  0146D2  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 37260  0146D4  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 37261  0146D8  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 37262  0146DA  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 37263  0146DC  6E66               	movwf	3942,c	;volatile
 37264                           
 37265                           ; BSR set to: 0
 37266                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37267  0146DE  0562               	decf	spi_tx@length& (0+255),w,b
 37268  0146E0  6E67               	movwf	3943,c	;volatile
 37269                           
 37270                           ; BSR set to: 0
 37271                           ;spi.c: 136: LATDbits.LD7 = 0;
 37272  0146E2  9E8C               	bcf	3980,7,c	;volatile
 37273                           
 37274                           ; BSR set to: 0
 37275                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 37276  0146E4  8088               	bsf	3976,0,c	;volatile
 37277  0146E6                     
 37278                           ; BSR set to: 0
 37279  0146E6  B088               	btfsc	3976,0,c	;volatile
 37280  0146E8  D7FE               	goto	l2172
 37281                           
 37282                           ;spi.c: 139: LATDbits.LD7 = 1;
 37283  0146EA  8E8C               	bsf	3980,7,c	;volatile
 37284  0146EC  0012               	return		;funcret
 37285  0146EE                     __end_of_spi_tx:
 37286                           	opt stack 0
 37287                           tosu	equ	0xFFF
 37288                           tosh	equ	0xFFE
 37289                           tosl	equ	0xFFD
 37290                           pclath	equ	0xFFA
 37291                           tblptru	equ	0xFF8
 37292                           tblptrh	equ	0xFF7
 37293                           tblptrl	equ	0xFF6
 37294                           tablat	equ	0xFF5
 37295                           prodh	equ	0xFF4
 37296                           prodl	equ	0xFF3
 37297                           intcon	equ	0xFF2
 37298                           postinc0	equ	0xFEE
 37299                           wreg	equ	0xFE8
 37300                           indf1	equ	0xFE7
 37301                           postinc1	equ	0xFE6
 37302                           postdec1	equ	0xFE5
 37303                           plusw1	equ	0xFE3
 37304                           fsr1h	equ	0xFE2
 37305                           fsr1l	equ	0xFE1
 37306                           indf2	equ	0xFDF
 37307                           postinc2	equ	0xFDE
 37308                           postdec2	equ	0xFDD
 37309                           plusw2	equ	0xFDB
 37310                           fsr2h	equ	0xFDA
 37311                           fsr2l	equ	0xFD9
 37312                           status	equ	0xFD8
 37313                           
 37314 ;; *************** function __flash_get_status *****************
 37315 ;; Defined at:
 37316 ;;		line 117 in file "flash.c"
 37317 ;; Parameters:    Size  Location     Type
 37318 ;;		None
 37319 ;; Auto vars:     Size  Location     Type
 37320 ;;  status          2   15[BANK0 ] unsigned int 
 37321 ;;  command         1   14[BANK0 ] unsigned char 
 37322 ;; Return value:  Size  Location     Type
 37323 ;;                  2   12[BANK0 ] unsigned int 
 37324 ;; Registers used:
 37325 ;;		wreg, status,2, status,0, cstack
 37326 ;; Tracked objects:
 37327 ;;		On entry : 0/0
 37328 ;;		On exit  : 0/0
 37329 ;;		Unchanged: 0/0
 37330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37332 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37334 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37335 ;;Total ram usage:        5 bytes
 37336 ;; Hardware stack levels used:    1
 37337 ;; Hardware stack levels required when called:   11
 37338 ;; This function calls:
 37339 ;;		_spi_tx_rx
 37340 ;; This function is called by:
 37341 ;;		__flash_compare_page_to_buffer
 37342 ;;		__flash_is_busy
 37343 ;; This function uses a non-reentrant model
 37344 ;;
 37345                           
 37346                           	psect	text150
 37347  0152A6                     __ptext150:
 37348                           	opt stack 0
 37349  0152A6                     __flash_get_status:
 37350                           	opt stack 15
 37351                           
 37352                           ;flash.c: 121: uint8_t command = 0xD7;
 37353                           
 37354                           ;incstack = 0
 37355  0152A6  0ED7               	movlw	215
 37356  0152A8  0100               	movlb	0	; () banked
 37357  0152AA  6F6E               	movwf	__flash_get_status@command& (0+255),b
 37358                           
 37359                           ; BSR set to: 0
 37360                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37361  0152AC  0E6E               	movlw	low __flash_get_status@command
 37362  0152AE  6F60               	movwf	spi_tx_rx@command& (0+255),b
 37363  0152B0  0E00               	movlw	high __flash_get_status@command
 37364  0152B2  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 37365  0152B4  0E00               	movlw	0
 37366  0152B6  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 37367  0152B8  0E01               	movlw	1
 37368  0152BA  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 37369  0152BC  0E6F               	movlw	low __flash_get_status@status
 37370  0152BE  6F64               	movwf	spi_tx_rx@data& (0+255),b
 37371  0152C0  0E00               	movlw	high __flash_get_status@status
 37372  0152C2  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 37373  0152C4  0E00               	movlw	0
 37374  0152C6  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 37375  0152C8  0E02               	movlw	2
 37376  0152CA  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 37377  0152CC  EC47  F09A         	call	_spi_tx_rx	;wreg free
 37378                           
 37379                           ;flash.c: 124: return status;
 37380  0152D0  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 37381  0152D4  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37382  0152D8  0012               	return	
 37383  0152DA                     __end_of__flash_get_status:
 37384                           	opt stack 0
 37385                           tosu	equ	0xFFF
 37386                           tosh	equ	0xFFE
 37387                           tosl	equ	0xFFD
 37388                           pclath	equ	0xFFA
 37389                           tblptru	equ	0xFF8
 37390                           tblptrh	equ	0xFF7
 37391                           tblptrl	equ	0xFF6
 37392                           tablat	equ	0xFF5
 37393                           prodh	equ	0xFF4
 37394                           prodl	equ	0xFF3
 37395                           intcon	equ	0xFF2
 37396                           postinc0	equ	0xFEE
 37397                           wreg	equ	0xFE8
 37398                           indf1	equ	0xFE7
 37399                           postinc1	equ	0xFE6
 37400                           postdec1	equ	0xFE5
 37401                           plusw1	equ	0xFE3
 37402                           fsr1h	equ	0xFE2
 37403                           fsr1l	equ	0xFE1
 37404                           indf2	equ	0xFDF
 37405                           postinc2	equ	0xFDE
 37406                           postdec2	equ	0xFDD
 37407                           plusw2	equ	0xFDB
 37408                           fsr2h	equ	0xFDA
 37409                           fsr2l	equ	0xFD9
 37410                           status	equ	0xFD8
 37411                           
 37412 ;; *************** function _spi_tx_rx *****************
 37413 ;; Defined at:
 37414 ;;		line 199 in file "spi.c"
 37415 ;; Parameters:    Size  Location     Type
 37416 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37417 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 37418 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37419 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37420 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 37421 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 37422 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 37423 ;;  data_length     2    6[BANK0 ] unsigned int 
 37424 ;; Auto vars:     Size  Location     Type
 37425 ;;		None
 37426 ;; Return value:  Size  Location     Type
 37427 ;;                  1    wreg      void 
 37428 ;; Registers used:
 37429 ;;		wreg, status,2, status,0
 37430 ;; Tracked objects:
 37431 ;;		On entry : 0/0
 37432 ;;		On exit  : 0/0
 37433 ;;		Unchanged: 0/0
 37434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37435 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37437 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37438 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37439 ;;Total ram usage:       12 bytes
 37440 ;; Hardware stack levels used:    1
 37441 ;; Hardware stack levels required when called:   10
 37442 ;; This function calls:
 37443 ;;		Nothing
 37444 ;; This function is called by:
 37445 ;;		__flash_get_status
 37446 ;;		__flash_partial_read
 37447 ;;		__flash_buffer_read
 37448 ;; This function uses a non-reentrant model
 37449 ;;
 37450                           
 37451                           	psect	text151
 37452  01348E                     __ptext151:
 37453                           	opt stack 0
 37454  01348E                     _spi_tx_rx:
 37455                           	opt stack 15
 37456                           
 37457                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 37458                           
 37459                           ;incstack = 0
 37460  01348E  9E88               	bcf	3976,7,c	;volatile
 37461                           
 37462                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 37463  013490  9C88               	bcf	3976,6,c	;volatile
 37464                           
 37465                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 37466  013492  8A88               	bsf	3976,5,c	;volatile
 37467                           
 37468                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 37469  013494  9888               	bcf	3976,4,c	;volatile
 37470                           
 37471                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 37472  013496  9688               	bcf	3976,3,c	;volatile
 37473                           
 37474                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 37475  013498  8488               	bsf	3976,2,c	;volatile
 37476                           
 37477                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 37478  01349A  9288               	bcf	3976,1,c	;volatile
 37479                           
 37480                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 37481  01349C  9886               	bcf	3974,4,c	;volatile
 37482  01349E  9A86               	bcf	3974,5,c	;volatile
 37483  0134A0  9C86               	bcf	3974,6,c	;volatile
 37484  0134A2  9E86               	bcf	3974,7,c	;volatile
 37485                           
 37486                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 37487  0134A4  9086               	bcf	3974,0,c	;volatile
 37488  0134A6  9286               	bcf	3974,1,c	;volatile
 37489  0134A8  9486               	bcf	3974,2,c	;volatile
 37490  0134AA  9686               	bcf	3974,3,c	;volatile
 37491                           
 37492                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37493  0134AC  0100               	movlb	0	; () banked
 37494  0134AE  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 37495  0134B0  6E6A               	movwf	3946,c	;volatile
 37496                           
 37497                           ; BSR set to: 0
 37498                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37499  0134B2  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37500                           
 37501                           ; BSR set to: 0
 37502                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37503  0134B6  0EFF               	movlw	255
 37504  0134B8  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37505  0134BA  0EFF               	movlw	255
 37506  0134BC  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37507  0134BE  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37508  0134C2  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37509  0134C6  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37510  0134C8  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37511  0134CA  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37512  0134CC  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37513  0134CE  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37514  0134D2  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37515  0134D4  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37516  0134D6  6E66               	movwf	3942,c	;volatile
 37517                           
 37518                           ; BSR set to: 0
 37519                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37520  0134D8  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 37521  0134DA  6E67               	movwf	3943,c	;volatile
 37522                           
 37523                           ; BSR set to: 0
 37524                           ;spi.c: 227: LATDbits.LD7 = 0;
 37525  0134DC  9E8C               	bcf	3980,7,c	;volatile
 37526                           
 37527                           ; BSR set to: 0
 37528                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 37529  0134DE  8088               	bsf	3976,0,c	;volatile
 37530  0134E0                     
 37531                           ; BSR set to: 0
 37532  0134E0  B088               	btfsc	3976,0,c	;volatile
 37533  0134E2  D7FE               	goto	l2187
 37534                           
 37535                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 37536  0134E4  9A88               	bcf	3976,5,c	;volatile
 37537                           
 37538                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 37539  0134E6  8888               	bsf	3976,4,c	;volatile
 37540                           
 37541                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 37542  0134E8  9688               	bcf	3976,3,c	;volatile
 37543                           
 37544                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 37545  0134EA  9488               	bcf	3976,2,c	;volatile
 37546                           
 37547                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37548  0134EC  0100               	movlb	0	; () banked
 37549  0134EE  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 37550  0134F0  6E68               	movwf	3944,c	;volatile
 37551                           
 37552                           ; BSR set to: 0
 37553                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37554  0134F2  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37555                           
 37556                           ; BSR set to: 0
 37557                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37558  0134F6  0EFF               	movlw	255
 37559  0134F8  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37560  0134FA  0EFF               	movlw	255
 37561  0134FC  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37562  0134FE  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37563  013502  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37564  013506  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37565  013508  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37566  01350A  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37567  01350C  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37568  01350E  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37569  013512  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37570  013514  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37571  013516  6E66               	movwf	3942,c	;volatile
 37572                           
 37573                           ; BSR set to: 0
 37574                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37575  013518  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 37576  01351A  6E67               	movwf	3943,c	;volatile
 37577                           
 37578                           ; BSR set to: 0
 37579                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 37580  01351C  8088               	bsf	3976,0,c	;volatile
 37581  01351E                     
 37582                           ; BSR set to: 0
 37583  01351E  B088               	btfsc	3976,0,c	;volatile
 37584  013520  D7FE               	goto	l2190
 37585                           
 37586                           ;spi.c: 254: LATDbits.LD7 = 1;
 37587  013522  8E8C               	bsf	3980,7,c	;volatile
 37588  013524  0012               	return		;funcret
 37589  013526                     __end_of_spi_tx_rx:
 37590                           	opt stack 0
 37591                           tosu	equ	0xFFF
 37592                           tosh	equ	0xFFE
 37593                           tosl	equ	0xFFD
 37594                           pclath	equ	0xFFA
 37595                           tblptru	equ	0xFF8
 37596                           tblptrh	equ	0xFF7
 37597                           tblptrl	equ	0xFF6
 37598                           tablat	equ	0xFF5
 37599                           prodh	equ	0xFF4
 37600                           prodl	equ	0xFF3
 37601                           intcon	equ	0xFF2
 37602                           postinc0	equ	0xFEE
 37603                           wreg	equ	0xFE8
 37604                           indf1	equ	0xFE7
 37605                           postinc1	equ	0xFE6
 37606                           postdec1	equ	0xFE5
 37607                           plusw1	equ	0xFE3
 37608                           fsr1h	equ	0xFE2
 37609                           fsr1l	equ	0xFE1
 37610                           indf2	equ	0xFDF
 37611                           postinc2	equ	0xFDE
 37612                           postdec2	equ	0xFDD
 37613                           plusw2	equ	0xFDB
 37614                           fsr2h	equ	0xFDA
 37615                           fsr2l	equ	0xFD9
 37616                           status	equ	0xFD8
 37617                           
 37618 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37619 ;; Defined at:
 37620 ;;		line 993 in file "usb_device_msd.c"
 37621 ;; Parameters:    Size  Location     Type
 37622 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37623 ;; Auto vars:     Size  Location     Type
 37624 ;;		None
 37625 ;; Return value:  Size  Location     Type
 37626 ;;                  1    wreg      void 
 37627 ;; Registers used:
 37628 ;;		wreg, status,2, status,0
 37629 ;; Tracked objects:
 37630 ;;		On entry : 0/0
 37631 ;;		On exit  : 0/0
 37632 ;;		Unchanged: 0/0
 37633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37636 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37637 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37638 ;;Total ram usage:        6 bytes
 37639 ;; Hardware stack levels used:    1
 37640 ;; Hardware stack levels required when called:   10
 37641 ;; This function calls:
 37642 ;;		Nothing
 37643 ;; This function is called by:
 37644 ;;		_MSDProcessCommandMediaPresent
 37645 ;; This function uses a non-reentrant model
 37646 ;;
 37647                           
 37648                           	psect	text152
 37649  0129CC                     __ptext152:
 37650                           	opt stack 0
 37651  0129CC                     _MSDComputeDeviceInAndResidue:
 37652                           	opt stack 16
 37653                           
 37654                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37655                           
 37656                           ;incstack = 0
 37657  0129CC  0100               	movlb	0	; () banked
 37658  0129CE  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37659  0129D0  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37660  0129D2  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37661  0129D4  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37662  0129D6  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37663  0129D8  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37664  0129DA  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37665  0129DC  0102               	movlb	2	; () banked
 37666  0129DE  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 37667  0129E0  0100               	movlb	0	; () banked
 37668  0129E2  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37669  0129E4  0102               	movlb	2	; () banked
 37670  0129E6  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 37671  0129E8  0100               	movlb	0	; () banked
 37672  0129EA  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37673  0129EC  0102               	movlb	2	; () banked
 37674  0129EE  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 37675  0129F0  0100               	movlb	0	; () banked
 37676  0129F2  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37677  0129F4  0102               	movlb	2	; () banked
 37678  0129F6  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 37679  0129F8  B0D8               	btfsc	status,0,c
 37680  0129FA  D00E               	goto	l675
 37681                           
 37682                           ; BSR set to: 2
 37683                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37684  0129FC  0E00               	movlw	0
 37685  0129FE  010D               	movlb	13	; () banked
 37686  012A00  6F88               	movwf	136,b	;volatile
 37687  012A02  0E00               	movlw	0
 37688  012A04  6F89               	movwf	137,b	;volatile
 37689  012A06  0E00               	movlw	0
 37690  012A08  6F8A               	movwf	138,b	;volatile
 37691  012A0A  0E00               	movlw	0
 37692  012A0C  6F8B               	movwf	139,b	;volatile
 37693                           
 37694                           ; BSR set to: 13
 37695                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37696  012A0E  C208  F145         	movff	_gblCBW+8,_TransferLength
 37697  012A12  C209  F146         	movff	_gblCBW+9,_TransferLength+1
 37698                           
 37699                           ;usb_device_msd.c: 1002: }
 37700  012A16  0012               	return	
 37701  012A18                     l675:
 37702                           
 37703                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 37704                           
 37705                           ; BSR set to: 13
 37706  012A18  0101               	movlb	1	; () banked
 37707  012A1A  5145               	movf	_TransferLength& (0+255),w,b
 37708  012A1C  0100               	movlb	0	; () banked
 37709  012A1E  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37710  012A20  0101               	movlb	1	; () banked
 37711  012A22  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37712  012A24  0100               	movlb	0	; () banked
 37713  012A26  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37714  012A28  B0D8               	btfsc	status,0,c
 37715  012A2A  D004               	goto	l677
 37716                           
 37717                           ; BSR set to: 0
 37718                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37719  012A2C  C060  F145         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37720  012A30  C061  F146         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37721  012A34                     l677:
 37722                           
 37723                           ; BSR set to: 0
 37724                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 37725                           
 37726                           ; BSR set to: 0
 37727  012A34  0101               	movlb	1	; () banked
 37728  012A36  5145               	movf	_TransferLength& (0+255),w,b
 37729  012A38  0100               	movlb	0	; () banked
 37730  012A3A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37731  012A3C  0101               	movlb	1	; () banked
 37732  012A3E  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37733  012A40  0100               	movlb	0	; () banked
 37734  012A42  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37735  012A44  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37736  012A46  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37737  012A48  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37738  012A4A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37739  012A4C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37740  012A4E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37741  012A50  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37742  012A52  0E00               	movlw	0
 37743  012A54  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37744  012A56  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37745  012A58  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37746  012A5A  0102               	movlb	2	; () banked
 37747  012A5C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37748  012A5E  0100               	movlb	0	; () banked
 37749  012A60  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37750  012A62  010D               	movlb	13	; () banked
 37751  012A64  6F88               	movwf	136,b	;volatile
 37752  012A66  0102               	movlb	2	; () banked
 37753  012A68  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37754  012A6A  0100               	movlb	0	; () banked
 37755  012A6C  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37756  012A6E  010D               	movlb	13	; () banked
 37757  012A70  6F89               	movwf	137,b	;volatile
 37758  012A72  0102               	movlb	2	; () banked
 37759  012A74  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37760  012A76  0100               	movlb	0	; () banked
 37761  012A78  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37762  012A7A  010D               	movlb	13	; () banked
 37763  012A7C  6F8A               	movwf	138,b	;volatile
 37764  012A7E  0102               	movlb	2	; () banked
 37765  012A80  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37766  012A82  0100               	movlb	0	; () banked
 37767  012A84  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37768  012A86  010D               	movlb	13	; () banked
 37769  012A88  6F8B               	movwf	139,b	;volatile
 37770  012A8A  0012               	return	
 37771  012A8C                     __end_of_MSDComputeDeviceInAndResidue:
 37772                           	opt stack 0
 37773                           tosu	equ	0xFFF
 37774                           tosh	equ	0xFFE
 37775                           tosl	equ	0xFFD
 37776                           pclath	equ	0xFFA
 37777                           tblptru	equ	0xFF8
 37778                           tblptrh	equ	0xFF7
 37779                           tblptrl	equ	0xFF6
 37780                           tablat	equ	0xFF5
 37781                           prodh	equ	0xFF4
 37782                           prodl	equ	0xFF3
 37783                           intcon	equ	0xFF2
 37784                           postinc0	equ	0xFEE
 37785                           wreg	equ	0xFE8
 37786                           indf1	equ	0xFE7
 37787                           postinc1	equ	0xFE6
 37788                           postdec1	equ	0xFE5
 37789                           plusw1	equ	0xFE3
 37790                           fsr1h	equ	0xFE2
 37791                           fsr1l	equ	0xFE1
 37792                           indf2	equ	0xFDF
 37793                           postinc2	equ	0xFDE
 37794                           postdec2	equ	0xFDD
 37795                           plusw2	equ	0xFDB
 37796                           fsr2h	equ	0xFDA
 37797                           fsr2l	equ	0xFD9
 37798                           status	equ	0xFD8
 37799                           
 37800 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37801 ;; Defined at:
 37802 ;;		line 18 in file "external_flash.c"
 37803 ;; Parameters:    Size  Location     Type
 37804 ;;  config          2    0[BANK0 ] PTR void 
 37805 ;;		 -> NULL(0), 
 37806 ;; Auto vars:     Size  Location     Type
 37807 ;;		None
 37808 ;; Return value:  Size  Location     Type
 37809 ;;                  2    0[BANK0 ] unsigned int 
 37810 ;; Registers used:
 37811 ;;		wreg, status,2
 37812 ;; Tracked objects:
 37813 ;;		On entry : 0/0
 37814 ;;		On exit  : 0/0
 37815 ;;		Unchanged: 0/0
 37816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37820 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37821 ;;Total ram usage:        2 bytes
 37822 ;; Hardware stack levels used:    1
 37823 ;; Hardware stack levels required when called:   10
 37824 ;; This function calls:
 37825 ;;		Nothing
 37826 ;; This function is called by:
 37827 ;;		_MSDProcessCommandMediaPresent
 37828 ;; This function uses a non-reentrant model
 37829 ;;
 37830                           
 37831                           	psect	text153
 37832  0158EE                     __ptext153:
 37833                           	opt stack 0
 37834  0158EE                     _ExternalFlash_SectorSizeRead:
 37835                           	opt stack 16
 37836                           
 37837                           ;external_flash.c: 20: return 512;
 37838                           
 37839                           ; BSR set to: 13
 37840                           ;incstack = 0
 37841  0158EE  0E02               	movlw	2
 37842  0158F0  0100               	movlb	0	; () banked
 37843  0158F2  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37844  0158F4  0E00               	movlw	0
 37845  0158F6  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37846  0158F8  0012               	return	
 37847  0158FA                     __end_of_ExternalFlash_SectorSizeRead:
 37848                           	opt stack 0
 37849                           tosu	equ	0xFFF
 37850                           tosh	equ	0xFFE
 37851                           tosl	equ	0xFFD
 37852                           pclath	equ	0xFFA
 37853                           tblptru	equ	0xFF8
 37854                           tblptrh	equ	0xFF7
 37855                           tblptrl	equ	0xFF6
 37856                           tablat	equ	0xFF5
 37857                           prodh	equ	0xFF4
 37858                           prodl	equ	0xFF3
 37859                           intcon	equ	0xFF2
 37860                           postinc0	equ	0xFEE
 37861                           wreg	equ	0xFE8
 37862                           indf1	equ	0xFE7
 37863                           postinc1	equ	0xFE6
 37864                           postdec1	equ	0xFE5
 37865                           plusw1	equ	0xFE3
 37866                           fsr1h	equ	0xFE2
 37867                           fsr1l	equ	0xFE1
 37868                           indf2	equ	0xFDF
 37869                           postinc2	equ	0xFDE
 37870                           postdec2	equ	0xFDD
 37871                           plusw2	equ	0xFDB
 37872                           fsr2h	equ	0xFDA
 37873                           fsr2l	equ	0xFD9
 37874                           status	equ	0xFD8
 37875                           
 37876 ;; *************** function _ExternalFlash_CapacityRead *****************
 37877 ;; Defined at:
 37878 ;;		line 23 in file "external_flash.c"
 37879 ;; Parameters:    Size  Location     Type
 37880 ;;  config          2    0[BANK0 ] PTR void 
 37881 ;;		 -> NULL(0), 
 37882 ;; Auto vars:     Size  Location     Type
 37883 ;;		None
 37884 ;; Return value:  Size  Location     Type
 37885 ;;                  4    0[BANK0 ] unsigned long 
 37886 ;; Registers used:
 37887 ;;		wreg, status,2
 37888 ;; Tracked objects:
 37889 ;;		On entry : 0/0
 37890 ;;		On exit  : 0/0
 37891 ;;		Unchanged: 0/0
 37892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37893 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37896 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37897 ;;Total ram usage:        4 bytes
 37898 ;; Hardware stack levels used:    1
 37899 ;; Hardware stack levels required when called:   10
 37900 ;; This function calls:
 37901 ;;		Nothing
 37902 ;; This function is called by:
 37903 ;;		_MSDProcessCommandMediaPresent
 37904 ;; This function uses a non-reentrant model
 37905 ;;
 37906                           
 37907                           	psect	text154
 37908  015872                     __ptext154:
 37909                           	opt stack 0
 37910  015872                     _ExternalFlash_CapacityRead:
 37911                           	opt stack 16
 37912                           
 37913                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 37914                           
 37915                           ; BSR set to: 0
 37916                           ;incstack = 0
 37917  015872  0EFF               	movlw	255
 37918  015874  0100               	movlb	0	; () banked
 37919  015876  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 37920  015878  0E1F               	movlw	31
 37921  01587A  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 37922  01587C  0E00               	movlw	0
 37923  01587E  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 37924  015880  0E00               	movlw	0
 37925  015882  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 37926  015884  0012               	return	
 37927  015886                     __end_of_ExternalFlash_CapacityRead:
 37928                           	opt stack 0
 37929                           tosu	equ	0xFFF
 37930                           tosh	equ	0xFFE
 37931                           tosl	equ	0xFFD
 37932                           pclath	equ	0xFFA
 37933                           tblptru	equ	0xFF8
 37934                           tblptrh	equ	0xFF7
 37935                           tblptrl	equ	0xFF6
 37936                           tablat	equ	0xFF5
 37937                           prodh	equ	0xFF4
 37938                           prodl	equ	0xFF3
 37939                           intcon	equ	0xFF2
 37940                           postinc0	equ	0xFEE
 37941                           wreg	equ	0xFE8
 37942                           indf1	equ	0xFE7
 37943                           postinc1	equ	0xFE6
 37944                           postdec1	equ	0xFE5
 37945                           plusw1	equ	0xFE3
 37946                           fsr1h	equ	0xFE2
 37947                           fsr1l	equ	0xFE1
 37948                           indf2	equ	0xFDF
 37949                           postinc2	equ	0xFDE
 37950                           postdec2	equ	0xFDD
 37951                           plusw2	equ	0xFDB
 37952                           fsr2h	equ	0xFDA
 37953                           fsr2l	equ	0xFD9
 37954                           status	equ	0xFD8
 37955                           
 37956 ;; *************** function _ExternalFlash_MediaInitialize *****************
 37957 ;; Defined at:
 37958 ;;		line 10 in file "external_flash.c"
 37959 ;; Parameters:    Size  Location     Type
 37960 ;;  config          2    0[BANK0 ] PTR void 
 37961 ;;		 -> NULL(0), 
 37962 ;; Auto vars:     Size  Location     Type
 37963 ;;		None
 37964 ;; Return value:  Size  Location     Type
 37965 ;;                  2    0[BANK0 ] PTR struct .
 37966 ;; Registers used:
 37967 ;;		wreg, status,2, status,0
 37968 ;; Tracked objects:
 37969 ;;		On entry : 0/0
 37970 ;;		On exit  : 0/0
 37971 ;;		Unchanged: 0/0
 37972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37977 ;;Total ram usage:        2 bytes
 37978 ;; Hardware stack levels used:    1
 37979 ;; Hardware stack levels required when called:   10
 37980 ;; This function calls:
 37981 ;;		Nothing
 37982 ;; This function is called by:
 37983 ;;		_USBMSDInit
 37984 ;;		_MSDProcessCommand
 37985 ;; This function uses a non-reentrant model
 37986 ;;
 37987                           
 37988                           	psect	text155
 37989  015746                     __ptext155:
 37990                           	opt stack 0
 37991  015746                     _ExternalFlash_MediaInitialize:
 37992                           	opt stack 0
 37993                           
 37994                           ; BSR set to: 0
 37995                           ;Skip over the trampoline to the duplicate function for level 2
 37996  015746  B25F               	btfsc	btemp,1,c
 37997  015748  EF15  F0AC         	goto	i2_ExternalFlash_MediaInitialize
 37998  01574C                     _ExternalFlash_MediaInitialize$intlevel0:
 37999                           	opt stack 17
 38000                           
 38001                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 38002                           
 38003                           ;incstack = 0
 38004  01574C  0102               	movlb	2	; () banked
 38005  01574E  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 38006                           
 38007                           ; BSR set to: 2
 38008                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 38009  015750  0E02               	movlw	2
 38010  015752  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 38011  015754  0E00               	movlw	0
 38012  015756  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 38013                           
 38014                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 38015  015758  0E00               	movlw	0
 38016  01575A  6F84               	movwf	_mediaInformation& (0+255),b
 38017                           
 38018                           ; BSR set to: 2
 38019                           ;external_flash.c: 15: return &mediaInformation;
 38020  01575C  0E84               	movlw	low _mediaInformation
 38021  01575E  0100               	movlb	0	; () banked
 38022  015760  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 38023  015762  0E02               	movlw	high _mediaInformation
 38024  015764  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 38025  015766  0012               	return	
 38026  015768                     __end_of_ExternalFlash_MediaInitialize:
 38027                           	opt stack 0
 38028                           tosu	equ	0xFFF
 38029                           tosh	equ	0xFFE
 38030                           tosl	equ	0xFFD
 38031                           pclath	equ	0xFFA
 38032                           tblptru	equ	0xFF8
 38033                           tblptrh	equ	0xFF7
 38034                           tblptrl	equ	0xFF6
 38035                           tablat	equ	0xFF5
 38036                           prodh	equ	0xFF4
 38037                           prodl	equ	0xFF3
 38038                           intcon	equ	0xFF2
 38039                           postinc0	equ	0xFEE
 38040                           wreg	equ	0xFE8
 38041                           indf1	equ	0xFE7
 38042                           postinc1	equ	0xFE6
 38043                           postdec1	equ	0xFE5
 38044                           plusw1	equ	0xFE3
 38045                           fsr1h	equ	0xFE2
 38046                           fsr1l	equ	0xFE1
 38047                           indf2	equ	0xFDF
 38048                           postinc2	equ	0xFDE
 38049                           postdec2	equ	0xFDD
 38050                           plusw2	equ	0xFDB
 38051                           fsr2h	equ	0xFDA
 38052                           fsr2l	equ	0xFD9
 38053                           status	equ	0xFD8
 38054                           
 38055 ;; *************** function _ExternalFlash_MediaDetect *****************
 38056 ;; Defined at:
 38057 ;;		line 29 in file "external_flash.c"
 38058 ;; Parameters:    Size  Location     Type
 38059 ;;  config          2    0[BANK0 ] PTR void 
 38060 ;;		 -> NULL(0), 
 38061 ;; Auto vars:     Size  Location     Type
 38062 ;;		None
 38063 ;; Return value:  Size  Location     Type
 38064 ;;                  1    wreg      unsigned char 
 38065 ;; Registers used:
 38066 ;;		wreg
 38067 ;; Tracked objects:
 38068 ;;		On entry : 0/0
 38069 ;;		On exit  : 0/0
 38070 ;;		Unchanged: 0/0
 38071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38076 ;;Total ram usage:        2 bytes
 38077 ;; Hardware stack levels used:    1
 38078 ;; Hardware stack levels required when called:   10
 38079 ;; This function calls:
 38080 ;;		Nothing
 38081 ;; This function is called by:
 38082 ;;		_USBMSDInit
 38083 ;;		_MSDProcessCommand
 38084 ;; This function uses a non-reentrant model
 38085 ;;
 38086                           
 38087                           	psect	text156
 38088  01592E                     __ptext156:
 38089                           	opt stack 0
 38090  01592E                     _ExternalFlash_MediaDetect:
 38091                           	opt stack 0
 38092                           
 38093                           ; BSR set to: 0
 38094                           ;Skip over the trampoline to the duplicate function for level 2
 38095  01592E  B25F               	btfsc	btemp,1,c
 38096  015930  EFBC  F0AC         	goto	i2_ExternalFlash_MediaDetect
 38097  015934                     _ExternalFlash_MediaDetect$intlevel0:
 38098                           	opt stack 17
 38099                           
 38100                           ;external_flash.c: 31: return 1;
 38101                           
 38102                           ;incstack = 0
 38103  015934  0E01               	movlw	1
 38104  015936  0012               	return	
 38105  015938                     __end_of_ExternalFlash_MediaDetect:
 38106                           	opt stack 0
 38107                           tosu	equ	0xFFF
 38108                           tosh	equ	0xFFE
 38109                           tosl	equ	0xFFD
 38110                           pclath	equ	0xFFA
 38111                           tblptru	equ	0xFF8
 38112                           tblptrh	equ	0xFF7
 38113                           tblptrl	equ	0xFF6
 38114                           tablat	equ	0xFF5
 38115                           prodh	equ	0xFF4
 38116                           prodl	equ	0xFF3
 38117                           intcon	equ	0xFF2
 38118                           postinc0	equ	0xFEE
 38119                           wreg	equ	0xFE8
 38120                           indf1	equ	0xFE7
 38121                           postinc1	equ	0xFE6
 38122                           postdec1	equ	0xFE5
 38123                           plusw1	equ	0xFE3
 38124                           fsr1h	equ	0xFE2
 38125                           fsr1l	equ	0xFE1
 38126                           indf2	equ	0xFDF
 38127                           postinc2	equ	0xFDE
 38128                           postdec2	equ	0xFDD
 38129                           plusw2	equ	0xFDB
 38130                           fsr2h	equ	0xFDA
 38131                           fsr2l	equ	0xFD9
 38132                           status	equ	0xFD8
 38133                           
 38134 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 38135 ;; Defined at:
 38136 ;;		line 73 in file "app_device_custom_hid.c"
 38137 ;; Parameters:    Size  Location     Type
 38138 ;;		None
 38139 ;; Auto vars:     Size  Location     Type
 38140 ;;  idx             1    0        unsigned char 
 38141 ;; Return value:  Size  Location     Type
 38142 ;;                  1    wreg      void 
 38143 ;; Registers used:
 38144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38145 ;; Tracked objects:
 38146 ;;		On entry : 0/0
 38147 ;;		On exit  : 0/0
 38148 ;;		Unchanged: 0/0
 38149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38154 ;;Total ram usage:        0 bytes
 38155 ;; Hardware stack levels used:    1
 38156 ;; Hardware stack levels required when called:   17
 38157 ;; This function calls:
 38158 ;;		_USBTransferOnePacket
 38159 ;;		_api_parse
 38160 ;;		_api_prepare
 38161 ;; This function is called by:
 38162 ;;		_main
 38163 ;; This function uses a non-reentrant model
 38164 ;;
 38165                           
 38166                           	psect	text157
 38167  01316C                     __ptext157:
 38168                           	opt stack 0
 38169  01316C                     _APP_DeviceCustomHIDTasks:
 38170                           	opt stack 13
 38171                           
 38172                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 38173                           
 38174                           ;incstack = 0
 38175  01316C  0E20               	movlw	32
 38176  01316E  605E               	cpfslt	_USBDeviceState,c	;volatile
 38177  013170  D001               	goto	l944
 38178  013172  0012               	return	
 38179  013174                     l944:
 38180                           
 38181                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 38182  013174  B265               	btfsc	3941,1,c	;volatile
 38183  013176  0012               	return	
 38184                           
 38185                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 38186                           
 38187                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 38188  013178  0101               	movlb	1	; () banked
 38189  01317A  5143               	movf	_USBOutHandle& (0+255),w,b
 38190  01317C  1144               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 38191  01317E  B4D8               	btfsc	status,2,c
 38192  013180  D006               	goto	u17110
 38193                           
 38194                           ; BSR set to: 1
 38195  013182  C143  FFD9         	movff	_USBOutHandle,fsr2l
 38196  013186  C144  FFDA         	movff	_USBOutHandle+1,fsr2h
 38197  01318A  BEDF               	btfsc	indf2,7,c
 38198  01318C  0012               	return	
 38199  01318E                     u17110:
 38200                           
 38201                           ; BSR set to: 1
 38202                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 38203                           
 38204                           ; BSR set to: 1
 38205  01318E  5141               	movf	_USBInHandle& (0+255),w,b
 38206  013190  1142               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38207  013192  B4D8               	btfsc	status,2,c
 38208  013194  D006               	goto	u17130
 38209                           
 38210                           ; BSR set to: 1
 38211  013196  C141  FFD9         	movff	_USBInHandle,fsr2l
 38212  01319A  C142  FFDA         	movff	_USBInHandle+1,fsr2h
 38213  01319E  BEDF               	btfsc	indf2,7,c
 38214  0131A0  D01B               	goto	l950
 38215  0131A2                     u17130:
 38216                           
 38217                           ; BSR set to: 1
 38218                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 38219                           
 38220                           ; BSR set to: 1
 38221  0131A2  0E78               	movlw	low _ReceivedDataBuffer
 38222  0131A4  0100               	movlb	0	; () banked
 38223  0131A6  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 38224  0131A8  0E03               	movlw	high _ReceivedDataBuffer
 38225  0131AA  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 38226  0131AC  0E38               	movlw	low _ToSendDataBuffer
 38227  0131AE  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 38228  0131B0  0E03               	movlw	high _ToSendDataBuffer
 38229  0131B2  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 38230  0131B4  EC84  F08F         	call	_api_prepare	;wreg free
 38231                           
 38232                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38233  0131B8  0E01               	movlw	1
 38234  0131BA  0100               	movlb	0	; () banked
 38235  0131BC  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38236  0131BE  0E38               	movlw	low _ToSendDataBuffer
 38237  0131C0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38238  0131C2  0E03               	movlw	high _ToSendDataBuffer
 38239  0131C4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38240  0131C6  0E40               	movlw	64
 38241  0131C8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38242  0131CA  0E01               	movlw	1
 38243  0131CC  ECEA  F087         	call	_USBTransferOnePacket
 38244  0131D0  C060  F141         	movff	?_USBTransferOnePacket,_USBInHandle
 38245  0131D4  C061  F142         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 38246  0131D8                     l950:
 38247                           
 38248                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 38249  0131D8  0E78               	movlw	low _ReceivedDataBuffer
 38250  0131DA  0100               	movlb	0	; () banked
 38251  0131DC  6FC4               	movwf	api_parse@inBuffer& (0+255),b
 38252  0131DE  0E03               	movlw	high _ReceivedDataBuffer
 38253  0131E0  6FC5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 38254  0131E2  0E40               	movlw	64
 38255  0131E4  6FC6               	movwf	api_parse@receivedDataLength& (0+255),b
 38256  0131E6  0E38               	movlw	low _ToSendDataBuffer
 38257  0131E8  6FC7               	movwf	api_parse@outBuffer& (0+255),b
 38258  0131EA  0E03               	movlw	high _ToSendDataBuffer
 38259  0131EC  6FC8               	movwf	(api_parse@outBuffer+1)& (0+255),b
 38260  0131EE  EC23  F084         	call	_api_parse	;wreg free
 38261                           
 38262                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38263  0131F2  0E00               	movlw	0
 38264  0131F4  0100               	movlb	0	; () banked
 38265  0131F6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38266  0131F8  0E78               	movlw	low _ReceivedDataBuffer
 38267  0131FA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38268  0131FC  0E03               	movlw	high _ReceivedDataBuffer
 38269  0131FE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38270  013200  0E40               	movlw	64
 38271  013202  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38272  013204  0E01               	movlw	1
 38273  013206  ECEA  F087         	call	_USBTransferOnePacket
 38274  01320A  C060  F143         	movff	?_USBTransferOnePacket,_USBOutHandle
 38275  01320E  C061  F144         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38276  013212  0012               	return	
 38277  013214                     __end_of_APP_DeviceCustomHIDTasks:
 38278                           	opt stack 0
 38279                           tosu	equ	0xFFF
 38280                           tosh	equ	0xFFE
 38281                           tosl	equ	0xFFD
 38282                           pclath	equ	0xFFA
 38283                           tblptru	equ	0xFF8
 38284                           tblptrh	equ	0xFF7
 38285                           tblptrl	equ	0xFF6
 38286                           tablat	equ	0xFF5
 38287                           prodh	equ	0xFF4
 38288                           prodl	equ	0xFF3
 38289                           intcon	equ	0xFF2
 38290                           postinc0	equ	0xFEE
 38291                           wreg	equ	0xFE8
 38292                           indf1	equ	0xFE7
 38293                           postinc1	equ	0xFE6
 38294                           postdec1	equ	0xFE5
 38295                           plusw1	equ	0xFE3
 38296                           fsr1h	equ	0xFE2
 38297                           fsr1l	equ	0xFE1
 38298                           indf2	equ	0xFDF
 38299                           postinc2	equ	0xFDE
 38300                           postdec2	equ	0xFDD
 38301                           plusw2	equ	0xFDB
 38302                           fsr2h	equ	0xFDA
 38303                           fsr2l	equ	0xFD9
 38304                           status	equ	0xFD8
 38305                           
 38306 ;; *************** function _api_prepare *****************
 38307 ;; Defined at:
 38308 ;;		line 37 in file "api.c"
 38309 ;; Parameters:    Size  Location     Type
 38310 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 38311 ;;		 -> ReceivedDataBuffer(64), 
 38312 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 38313 ;;		 -> ToSendDataBuffer(64), 
 38314 ;; Auto vars:     Size  Location     Type
 38315 ;;  command         1   20[BANK0 ] enum E6715
 38316 ;; Return value:  Size  Location     Type
 38317 ;;                  1    wreg      void 
 38318 ;; Registers used:
 38319 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38320 ;; Tracked objects:
 38321 ;;		On entry : 0/0
 38322 ;;		On exit  : 0/0
 38323 ;;		Unchanged: 0/0
 38324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38325 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38328 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38329 ;;Total ram usage:        5 bytes
 38330 ;; Hardware stack levels used:    1
 38331 ;; Hardware stack levels required when called:   12
 38332 ;; This function calls:
 38333 ;;		__fill_buffer_get_display
 38334 ;;		__fill_buffer_get_mode_details
 38335 ;;		__fill_buffer_get_status
 38336 ;;		_memcpy
 38337 ;; This function is called by:
 38338 ;;		_APP_DeviceCustomHIDTasks
 38339 ;; This function uses a non-reentrant model
 38340 ;;
 38341                           
 38342                           	psect	text158
 38343  011F08                     __ptext158:
 38344                           	opt stack 0
 38345  011F08                     _api_prepare:
 38346                           	opt stack 17
 38347                           
 38348                           ;api.c: 39: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 38349                           
 38350                           ;incstack = 0
 38351  011F08  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 38352  011F0C  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 38353  011F10  50DF               	movf	indf2,w,c
 38354  011F12  0100               	movlb	0	; () banked
 38355  011F14  6F74               	movwf	api_prepare@command& (0+255),b
 38356                           
 38357                           ; BSR set to: 0
 38358                           ;api.c: 41: if(command>0x7F)
 38359  011F16  0E7F               	movlw	127
 38360  011F18  6574               	cpfsgt	api_prepare@command& (0+255),b
 38361  011F1A  D051               	goto	l2234
 38362                           
 38363                           ; BSR set to: 0
 38364                           ;api.c: 48: outBuffer[0] = 0x99;
 38365                           
 38366                           ; BSR set to: 0
 38367                           
 38368                           ;api.c: 44: {;api.c: 47: default:
 38369                           
 38370                           ; BSR set to: 0
 38371                           ;api.c: 42: {;api.c: 43: switch(command)
 38372  011F1C  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38373  011F20  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38374  011F24  0E99               	movlw	153
 38375  011F26  6EDF               	movwf	indf2,c
 38376                           
 38377                           ; BSR set to: 0
 38378                           ;api.c: 49: outBuffer[1] = 0x99;
 38379  011F28  EE20 F001          	lfsr	2,1
 38380  011F2C  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38381  011F2E  26D9               	addwf	fsr2l,f,c
 38382  011F30  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38383  011F32  22DA               	addwfc	fsr2h,f,c
 38384  011F34  0E99               	movlw	153
 38385  011F36  6EDF               	movwf	indf2,c
 38386                           
 38387                           ;api.c: 50: }
 38388  011F38  0012               	return	
 38389  011F3A                     
 38390                           ; BSR set to: 0
 38391                           ;api.c: 63: _fill_buffer_get_status(outBuffer);
 38392                           
 38393                           ; BSR set to: 0
 38394  011F3A  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 38395  011F3E  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 38396  011F42  EC2A  F077         	call	__fill_buffer_get_status	;wreg free
 38397                           
 38398                           ;api.c: 64: break;
 38399  011F46  0012               	return	
 38400  011F48                     
 38401                           ;api.c: 68: _fill_buffer_get_display(outBuffer, 0);
 38402  011F48  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38403  011F4C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38404  011F50  0E00               	movlw	0
 38405  011F52  0100               	movlb	0	; () banked
 38406  011F54  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38407  011F56  ECA4  F095         	call	__fill_buffer_get_display	;wreg free
 38408                           
 38409                           ;api.c: 69: break;
 38410  011F5A  0012               	return	
 38411  011F5C                     
 38412                           ;api.c: 73: _fill_buffer_get_display(outBuffer, 1);
 38413  011F5C  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38414  011F60  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38415  011F64  0E01               	movlw	1
 38416  011F66  0100               	movlb	0	; () banked
 38417  011F68  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38418  011F6A  ECA4  F095         	call	__fill_buffer_get_display	;wreg free
 38419                           
 38420                           ;api.c: 74: break;
 38421  011F6E  0012               	return	
 38422  011F70                     
 38423                           ;api.c: 78: _fill_buffer_get_mode_details(outBuffer);
 38424  011F70  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 38425  011F74  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 38426  011F78  EC06  F07A         	call	__fill_buffer_get_mode_details	;wreg free
 38427                           
 38428                           ;api.c: 79: break;
 38429  011F7C  0012               	return	
 38430  011F7E                     
 38431                           ;api.c: 83: memcpy(outBuffer, inBuffer, 64);
 38432  011F7E  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 38433  011F82  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 38434  011F86  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 38435  011F8A  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 38436  011F8E  0E00               	movlw	0
 38437  011F90  0100               	movlb	0	; () banked
 38438  011F92  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38439  011F94  0E40               	movlw	64
 38440  011F96  6F64               	movwf	memcpy@n& (0+255),b
 38441  011F98  ECD9  F0A1         	call	_memcpy	;wreg free
 38442                           
 38443                           ;api.c: 84: break;
 38444  011F9C  0012               	return	
 38445  011F9E                     
 38446                           ;api.c: 87: outBuffer[0] = 0x99;
 38447  011F9E  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38448  011FA2  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38449  011FA6  0E99               	movlw	153
 38450  011FA8  6EDF               	movwf	indf2,c
 38451                           
 38452                           ;api.c: 88: outBuffer[1] = 0x99;
 38453  011FAA  0100               	movlb	0	; () banked
 38454  011FAC  EE20 F001          	lfsr	2,1
 38455  011FB0  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38456  011FB2  26D9               	addwf	fsr2l,f,c
 38457  011FB4  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38458  011FB6  22DA               	addwfc	fsr2h,f,c
 38459  011FB8  0E99               	movlw	153
 38460  011FBA  6EDF               	movwf	indf2,c
 38461                           
 38462                           ;api.c: 89: }
 38463  011FBC  0012               	return	
 38464  011FBE                     l2234:
 38465                           
 38466                           ; BSR set to: 0
 38467                           
 38468                           ; BSR set to: 0
 38469  011FBE  5174               	movf	api_prepare@command& (0+255),w,b
 38470                           
 38471                           ; Switch size 1, requested type "space"
 38472                           ; Number of cases is 6, Range of values is 0 to 32
 38473                           ; switch strategies available:
 38474                           ; Name         Instructions Cycles
 38475                           ; simple_byte           19    10 (average)
 38476                           ;	Chosen strategy is simple_byte
 38477  011FC0  0A00               	xorlw	0	; case 0
 38478  011FC2  B4D8               	btfsc	status,2,c
 38479  011FC4  0012               	return	
 38480  011FC6  0A10               	xorlw	16	; case 16
 38481  011FC8  B4D8               	btfsc	status,2,c
 38482  011FCA  D7B7               	goto	l2237
 38483  011FCC  0A01               	xorlw	1	; case 17
 38484  011FCE  B4D8               	btfsc	status,2,c
 38485  011FD0  D7BB               	goto	l2238
 38486  011FD2  0A03               	xorlw	3	; case 18
 38487  011FD4  B4D8               	btfsc	status,2,c
 38488  011FD6  D7C2               	goto	l2239
 38489  011FD8  0A01               	xorlw	1	; case 19
 38490  011FDA  B4D8               	btfsc	status,2,c
 38491  011FDC  D7C9               	goto	l2240
 38492  011FDE  0A33               	xorlw	51	; case 32
 38493  011FE0  B4D8               	btfsc	status,2,c
 38494  011FE2  D7CD               	goto	l2241
 38495  011FE4  D7DC               	goto	l2242
 38496  011FE6                     __end_of_api_prepare:
 38497                           	opt stack 0
 38498                           tosu	equ	0xFFF
 38499                           tosh	equ	0xFFE
 38500                           tosl	equ	0xFFD
 38501                           pclath	equ	0xFFA
 38502                           tblptru	equ	0xFF8
 38503                           tblptrh	equ	0xFF7
 38504                           tblptrl	equ	0xFF6
 38505                           tablat	equ	0xFF5
 38506                           prodh	equ	0xFF4
 38507                           prodl	equ	0xFF3
 38508                           intcon	equ	0xFF2
 38509                           postinc0	equ	0xFEE
 38510                           wreg	equ	0xFE8
 38511                           indf1	equ	0xFE7
 38512                           postinc1	equ	0xFE6
 38513                           postdec1	equ	0xFE5
 38514                           plusw1	equ	0xFE3
 38515                           fsr1h	equ	0xFE2
 38516                           fsr1l	equ	0xFE1
 38517                           indf2	equ	0xFDF
 38518                           postinc2	equ	0xFDE
 38519                           postdec2	equ	0xFDD
 38520                           plusw2	equ	0xFDB
 38521                           fsr2h	equ	0xFDA
 38522                           fsr2l	equ	0xFD9
 38523                           status	equ	0xFD8
 38524                           
 38525 ;; *************** function __fill_buffer_get_status *****************
 38526 ;; Defined at:
 38527 ;;		line 170 in file "api.c"
 38528 ;; Parameters:    Size  Location     Type
 38529 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 38530 ;;		 -> ToSendDataBuffer(64), 
 38531 ;; Auto vars:     Size  Location     Type
 38532 ;;		None
 38533 ;; Return value:  Size  Location     Type
 38534 ;;                  1    wreg      void 
 38535 ;; Registers used:
 38536 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38537 ;; Tracked objects:
 38538 ;;		On entry : 0/0
 38539 ;;		On exit  : 0/0
 38540 ;;		Unchanged: 0/0
 38541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38546 ;;Total ram usage:        2 bytes
 38547 ;; Hardware stack levels used:    1
 38548 ;; Hardware stack levels required when called:   11
 38549 ;; This function calls:
 38550 ;;		_memcpy
 38551 ;; This function is called by:
 38552 ;;		_api_prepare
 38553 ;; This function uses a non-reentrant model
 38554 ;;
 38555                           
 38556                           	psect	text159
 38557  00EE54                     __ptext159:
 38558                           	opt stack 0
 38559  00EE54                     __fill_buffer_get_status:
 38560                           	opt stack 17
 38561                           
 38562                           ;api.c: 173: outBuffer[0] = DATAREQUEST_GET_STATUS;
 38563                           
 38564                           ;incstack = 0
 38565  00EE54  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 38566  00EE58  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 38567  00EE5C  0E10               	movlw	16
 38568  00EE5E  6EDF               	movwf	indf2,c
 38569                           
 38570                           ;api.c: 176: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38571  00EE60  0100               	movlb	0	; () banked
 38572  00EE62  EE20 F001          	lfsr	2,1
 38573  00EE66  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38574  00EE68  26D9               	addwf	fsr2l,f,c
 38575  00EE6A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38576  00EE6C  22DA               	addwfc	fsr2h,f,c
 38577  00EE6E  0EBC               	movlw	188
 38578  00EE70  6EDF               	movwf	indf2,c
 38579                           
 38580                           ; BSR set to: 0
 38581                           ;api.c: 177: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38582  00EE72  EE20 F002          	lfsr	2,2
 38583  00EE76  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38584  00EE78  26D9               	addwf	fsr2l,f,c
 38585  00EE7A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38586  00EE7C  22DA               	addwfc	fsr2h,f,c
 38587  00EE7E  0E26               	movlw	38
 38588  00EE80  6EDF               	movwf	indf2,c
 38589                           
 38590                           ; BSR set to: 0
 38591                           ;api.c: 180: outBuffer[3] = 0x00;
 38592  00EE82  EE20 F003          	lfsr	2,3
 38593  00EE86  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38594  00EE88  26D9               	addwf	fsr2l,f,c
 38595  00EE8A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38596  00EE8C  22DA               	addwfc	fsr2h,f,c
 38597  00EE8E  0E00               	movlw	0
 38598  00EE90  6EDF               	movwf	indf2,c
 38599                           
 38600                           ; BSR set to: 0
 38601                           ;api.c: 181: outBuffer[4] = 0x05;
 38602  00EE92  EE20 F004          	lfsr	2,4
 38603  00EE96  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38604  00EE98  26D9               	addwf	fsr2l,f,c
 38605  00EE9A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38606  00EE9C  22DA               	addwfc	fsr2h,f,c
 38607  00EE9E  0E05               	movlw	5
 38608  00EEA0  6EDF               	movwf	indf2,c
 38609                           
 38610                           ; BSR set to: 0
 38611                           ;api.c: 182: outBuffer[5] = 0x02;
 38612  00EEA2  EE20 F005          	lfsr	2,5
 38613  00EEA6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38614  00EEA8  26D9               	addwf	fsr2l,f,c
 38615  00EEAA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38616  00EEAC  22DA               	addwfc	fsr2h,f,c
 38617  00EEAE  0E02               	movlw	2
 38618  00EEB0  6EDF               	movwf	indf2,c
 38619                           
 38620                           ; BSR set to: 0
 38621                           ;api.c: 185: outBuffer[6] = os.subTimeSlot;
 38622  00EEB2  EE20 F006          	lfsr	2,6
 38623  00EEB6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38624  00EEB8  26D9               	addwf	fsr2l,f,c
 38625  00EEBA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38626  00EEBC  22DA               	addwfc	fsr2h,f,c
 38627  00EEBE  C171  FFDF         	movff	_os,indf2	;volatile
 38628                           
 38629                           ; BSR set to: 0
 38630                           ;api.c: 186: outBuffer[7] = os.timeSlot;
 38631  00EEC2  EE20 F007          	lfsr	2,7
 38632  00EEC6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38633  00EEC8  26D9               	addwf	fsr2l,f,c
 38634  00EECA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38635  00EECC  22DA               	addwfc	fsr2h,f,c
 38636  00EECE  C172  FFDF         	movff	_os+1,indf2	;volatile
 38637                           
 38638                           ; BSR set to: 0
 38639                           ;api.c: 187: outBuffer[8] = os.done;
 38640  00EED2  EE20 F008          	lfsr	2,8
 38641  00EED6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38642  00EED8  26D9               	addwf	fsr2l,f,c
 38643  00EEDA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38644  00EEDC  22DA               	addwfc	fsr2h,f,c
 38645  00EEDE  C173  FFDF         	movff	_os+2,indf2	;volatile
 38646                           
 38647                           ; BSR set to: 0
 38648                           ;api.c: 188: outBuffer[9] = os.encoder1Count;
 38649  00EEE2  EE20 F009          	lfsr	2,9
 38650  00EEE6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38651  00EEE8  26D9               	addwf	fsr2l,f,c
 38652  00EEEA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38653  00EEEC  22DA               	addwfc	fsr2h,f,c
 38654  00EEEE  C174  FFDF         	movff	_os+3,indf2	;volatile
 38655                           
 38656                           ; BSR set to: 0
 38657                           ;api.c: 189: outBuffer[10] = os.button1;
 38658  00EEF2  EE20 F00A          	lfsr	2,10
 38659  00EEF6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38660  00EEF8  26D9               	addwf	fsr2l,f,c
 38661  00EEFA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38662  00EEFC  22DA               	addwfc	fsr2h,f,c
 38663  00EEFE  C175  FFDF         	movff	_os+4,indf2	;volatile
 38664                           
 38665                           ; BSR set to: 0
 38666                           ;api.c: 190: outBuffer[11] = os.encoder2Count;
 38667  00EF02  EE20 F00B          	lfsr	2,11
 38668  00EF06  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38669  00EF08  26D9               	addwf	fsr2l,f,c
 38670  00EF0A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38671  00EF0C  22DA               	addwfc	fsr2h,f,c
 38672  00EF0E  C176  FFDF         	movff	_os+5,indf2	;volatile
 38673                           
 38674                           ; BSR set to: 0
 38675                           ;api.c: 191: outBuffer[12] = os.button2;
 38676  00EF12  EE20 F00C          	lfsr	2,12
 38677  00EF16  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38678  00EF18  26D9               	addwf	fsr2l,f,c
 38679  00EF1A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38680  00EF1C  22DA               	addwfc	fsr2h,f,c
 38681  00EF1E  C177  FFDF         	movff	_os+6,indf2	;volatile
 38682                           
 38683                           ; BSR set to: 0
 38684                           ;api.c: 192: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 38685  00EF22  0E0D               	movlw	13
 38686  00EF24  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38687  00EF26  6F60               	movwf	memcpy@d1& (0+255),b
 38688  00EF28  0E00               	movlw	0
 38689  00EF2A  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38690  00EF2C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38691  00EF2E  0E78               	movlw	low (_os+7)
 38692  00EF30  6F62               	movwf	memcpy@s1& (0+255),b
 38693  00EF32  0E01               	movlw	high (_os+7)
 38694  00EF34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38695  00EF36  0E00               	movlw	0
 38696  00EF38  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38697  00EF3A  0E04               	movlw	4
 38698  00EF3C  6F64               	movwf	memcpy@n& (0+255),b
 38699  00EF3E  ECD9  F0A1         	call	_memcpy	;wreg free
 38700                           
 38701                           ;api.c: 197: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 38702  00EF42  0E11               	movlw	17
 38703  00EF44  0100               	movlb	0	; () banked
 38704  00EF46  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38705  00EF48  6F60               	movwf	memcpy@d1& (0+255),b
 38706  00EF4A  0E00               	movlw	0
 38707  00EF4C  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38708  00EF4E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38709  00EF50  0E7C               	movlw	low (_os+11)
 38710  00EF52  6F62               	movwf	memcpy@s1& (0+255),b
 38711  00EF54  0E01               	movlw	high (_os+11)
 38712  00EF56  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38713  00EF58  0E00               	movlw	0
 38714  00EF5A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38715  00EF5C  0E04               	movlw	4
 38716  00EF5E  6F64               	movwf	memcpy@n& (0+255),b
 38717  00EF60  ECD9  F0A1         	call	_memcpy	;wreg free
 38718                           
 38719                           ;api.c: 202: outBuffer[21] = os.displayState;
 38720  00EF64  0100               	movlb	0	; () banked
 38721  00EF66  EE20 F015          	lfsr	2,21
 38722  00EF6A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38723  00EF6C  26D9               	addwf	fsr2l,f,c
 38724  00EF6E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38725  00EF70  22DA               	addwfc	fsr2h,f,c
 38726  00EF72  C17E  FFDF         	movff	_os+13,indf2	;volatile
 38727                           
 38728                           ; BSR set to: 0
 38729                           ;api.c: 203: outBuffer[22] = os.beep_count;
 38730  00EF76  EE20 F016          	lfsr	2,22
 38731  00EF7A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38732  00EF7C  26D9               	addwf	fsr2l,f,c
 38733  00EF7E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38734  00EF80  22DA               	addwfc	fsr2h,f,c
 38735  00EF82  C197  FFDF         	movff	_os+38,indf2	;volatile
 38736                           
 38737                           ; BSR set to: 0
 38738                           ;api.c: 204: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 38739  00EF86  EE20 F017          	lfsr	2,23
 38740  00EF8A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38741  00EF8C  26D9               	addwf	fsr2l,f,c
 38742  00EF8E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38743  00EF90  22DA               	addwfc	fsr2h,f,c
 38744  00EF92  C198  FFDF         	movff	_os+39,indf2	;volatile
 38745                           
 38746                           ; BSR set to: 0
 38747                           ;api.c: 205: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 38748  00EF96  EE20 F018          	lfsr	2,24
 38749  00EF9A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38750  00EF9C  26D9               	addwf	fsr2l,f,c
 38751  00EF9E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38752  00EFA0  22DA               	addwfc	fsr2h,f,c
 38753  00EFA2  0101               	movlb	1	; () banked
 38754  00EFA4  5199               	movf	(_os+40)& (0+255),w,b	;volatile
 38755  00EFA6  6EDF               	movwf	indf2,c
 38756                           
 38757                           ; BSR set to: 1
 38758                           ;api.c: 206: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 38759  00EFA8  0100               	movlb	0	; () banked
 38760  00EFAA  EE20 F019          	lfsr	2,25
 38761  00EFAE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38762  00EFB0  26D9               	addwf	fsr2l,f,c
 38763  00EFB2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38764  00EFB4  22DA               	addwfc	fsr2h,f,c
 38765  00EFB6  C19A  FFDF         	movff	_os+41,indf2	;volatile
 38766                           
 38767                           ; BSR set to: 0
 38768                           ;api.c: 207: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 38769  00EFBA  EE20 F01A          	lfsr	2,26
 38770  00EFBE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38771  00EFC0  26D9               	addwf	fsr2l,f,c
 38772  00EFC2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38773  00EFC4  22DA               	addwfc	fsr2h,f,c
 38774  00EFC6  0101               	movlb	1	; () banked
 38775  00EFC8  519B               	movf	(_os+42)& (0+255),w,b	;volatile
 38776  00EFCA  6EDF               	movwf	indf2,c
 38777                           
 38778                           ; BSR set to: 1
 38779                           ;api.c: 208: outBuffer[27] = os.fan_on;
 38780  00EFCC  0100               	movlb	0	; () banked
 38781  00EFCE  EE20 F01B          	lfsr	2,27
 38782  00EFD2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38783  00EFD4  26D9               	addwf	fsr2l,f,c
 38784  00EFD6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38785  00EFD8  22DA               	addwfc	fsr2h,f,c
 38786  00EFDA  C19F  FFDF         	movff	_os+46,indf2	;volatile
 38787                           
 38788                           ; BSR set to: 0
 38789                           ;api.c: 209: outBuffer[28] = os.brake_on;
 38790  00EFDE  EE20 F01C          	lfsr	2,28
 38791  00EFE2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38792  00EFE4  26D9               	addwf	fsr2l,f,c
 38793  00EFE6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38794  00EFE8  22DA               	addwfc	fsr2h,f,c
 38795  00EFEA  C1A0  FFDF         	movff	_os+47,indf2	;volatile
 38796                           
 38797                           ; BSR set to: 0
 38798                           ;api.c: 210: outBuffer[29] = os.busy;
 38799  00EFEE  EE20 F01D          	lfsr	2,29
 38800  00EFF2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38801  00EFF4  26D9               	addwf	fsr2l,f,c
 38802  00EFF6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38803  00EFF8  22DA               	addwfc	fsr2h,f,c
 38804  00EFFA  C17F  FFDF         	movff	_os+14,indf2	;volatile
 38805                           
 38806                           ; BSR set to: 0
 38807                           ;api.c: 212: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 38808  00EFFE  EE20 F01E          	lfsr	2,30
 38809  00F002  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38810  00F004  26D9               	addwf	fsr2l,f,c
 38811  00F006  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38812  00F008  22DA               	addwfc	fsr2h,f,c
 38813  00F00A  C194  FFDF         	movff	_os+35,indf2	;volatile
 38814                           
 38815                           ; BSR set to: 0
 38816                           ;api.c: 213: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 38817  00F00E  EE20 F01F          	lfsr	2,31
 38818  00F012  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38819  00F014  26D9               	addwf	fsr2l,f,c
 38820  00F016  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38821  00F018  22DA               	addwfc	fsr2h,f,c
 38822  00F01A  0101               	movlb	1	; () banked
 38823  00F01C  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 38824  00F01E  6EDF               	movwf	indf2,c
 38825                           
 38826                           ; BSR set to: 1
 38827                           ;api.c: 227: memcpy(&outBuffer[42], &config, 22);
 38828  00F020  0E2A               	movlw	42
 38829  00F022  0100               	movlb	0	; () banked
 38830  00F024  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38831  00F026  6F60               	movwf	memcpy@d1& (0+255),b
 38832  00F028  0E00               	movlw	0
 38833  00F02A  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38834  00F02C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38835  00F02E  0EA1               	movlw	low _config
 38836  00F030  6F62               	movwf	memcpy@s1& (0+255),b
 38837  00F032  0E01               	movlw	high _config
 38838  00F034  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38839  00F036  0E00               	movlw	0
 38840  00F038  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38841  00F03A  0E16               	movlw	22
 38842  00F03C  6F64               	movwf	memcpy@n& (0+255),b
 38843  00F03E  ECD9  F0A1         	call	_memcpy	;wreg free
 38844  00F042  0012               	return		;funcret
 38845  00F044                     __end_of__fill_buffer_get_status:
 38846                           	opt stack 0
 38847                           tosu	equ	0xFFF
 38848                           tosh	equ	0xFFE
 38849                           tosl	equ	0xFFD
 38850                           pclath	equ	0xFFA
 38851                           tblptru	equ	0xFF8
 38852                           tblptrh	equ	0xFF7
 38853                           tblptrl	equ	0xFF6
 38854                           tablat	equ	0xFF5
 38855                           prodh	equ	0xFF4
 38856                           prodl	equ	0xFF3
 38857                           intcon	equ	0xFF2
 38858                           postinc0	equ	0xFEE
 38859                           wreg	equ	0xFE8
 38860                           indf1	equ	0xFE7
 38861                           postinc1	equ	0xFE6
 38862                           postdec1	equ	0xFE5
 38863                           plusw1	equ	0xFE3
 38864                           fsr1h	equ	0xFE2
 38865                           fsr1l	equ	0xFE1
 38866                           indf2	equ	0xFDF
 38867                           postinc2	equ	0xFDE
 38868                           postdec2	equ	0xFDD
 38869                           plusw2	equ	0xFDB
 38870                           fsr2h	equ	0xFDA
 38871                           fsr2l	equ	0xFD9
 38872                           status	equ	0xFD8
 38873                           
 38874 ;; *************** function _memcpy *****************
 38875 ;; Defined at:
 38876 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 38877 ;; Parameters:    Size  Location     Type
 38878 ;;  d1              2    0[BANK0 ] PTR void 
 38879 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38880 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38881 ;;  s1              2    2[BANK0 ] PTR const void 
 38882 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38883 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38884 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38885 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38886 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38887 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38888 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38889 ;;  n               2    4[BANK0 ] unsigned int 
 38890 ;; Auto vars:     Size  Location     Type
 38891 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 38892 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38893 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38894 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38895 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38896 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38897 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38898 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38899 ;;  d               2    6[BANK0 ] PTR unsigned char 
 38900 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38901 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38902 ;;  tmp             1   10[BANK0 ] unsigned char 
 38903 ;; Return value:  Size  Location     Type
 38904 ;;                  2    0[BANK0 ] PTR void 
 38905 ;; Registers used:
 38906 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38907 ;; Tracked objects:
 38908 ;;		On entry : 0/0
 38909 ;;		On exit  : 0/0
 38910 ;;		Unchanged: 0/0
 38911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38912 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38913 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38915 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38916 ;;Total ram usage:       11 bytes
 38917 ;; Hardware stack levels used:    1
 38918 ;; Hardware stack levels required when called:   10
 38919 ;; This function calls:
 38920 ;;		Nothing
 38921 ;; This function is called by:
 38922 ;;		_MSDProcessCommandMediaPresent
 38923 ;;		__display_start
 38924 ;;		_display_prepare
 38925 ;;		__flash_set_page_size
 38926 ;;		_fat_create_file
 38927 ;;		_api_prepare
 38928 ;;		__fill_buffer_get_status
 38929 ;; This function uses a non-reentrant model
 38930 ;;
 38931                           
 38932                           	psect	text160
 38933  0143B2                     __ptext160:
 38934                           	opt stack 0
 38935  0143B2                     _memcpy:
 38936                           	opt stack 17
 38937                           
 38938                           ;incstack = 0
 38939  0143B2  C062  F068         	movff	memcpy@s1,memcpy@s
 38940  0143B6  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 38941  0143BA  C060  F066         	movff	memcpy@d1,memcpy@d
 38942  0143BE  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 38943  0143C2  D01D               	goto	l3696
 38944  0143C4                     l12818:
 38945  0143C4  C068  FFF6         	movff	memcpy@s,tblptrl
 38946  0143C8  C069  FFF7         	movff	memcpy@s+1,tblptrh
 38947  0143CC  0E00               	movlw	low (__mediumconst shr (0+16))
 38948  0143CE  6EF8               	movwf	tblptru,c
 38949  0143D0  0E0E               	movlw	(high __ramtop+-1)
 38950  0143D2  64F7               	cpfsgt	tblptrh,c
 38951  0143D4  D003               	bra	u11137
 38952  0143D6  0008               	tblrd		*
 38953  0143D8  50F5               	movf	tablat,w,c
 38954  0143DA  D005               	bra	u11130
 38955  0143DC                     u11137:
 38956  0143DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 38957  0143E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 38958  0143E4  50EF               	movf	indf0,w,c
 38959  0143E6                     u11130:
 38960  0143E6  0100               	movlb	0	; () banked
 38961  0143E8  6F6A               	movwf	memcpy@tmp& (0+255),b
 38962                           
 38963                           ; BSR set to: 0
 38964  0143EA  4B68               	infsnz	memcpy@s& (0+255),f,b
 38965  0143EC  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 38966                           
 38967                           ; BSR set to: 0
 38968  0143EE  C066  FFD9         	movff	memcpy@d,fsr2l
 38969  0143F2  C067  FFDA         	movff	memcpy@d+1,fsr2h
 38970  0143F6  C06A  FFDF         	movff	memcpy@tmp,indf2
 38971                           
 38972                           ; BSR set to: 0
 38973  0143FA  4B66               	infsnz	memcpy@d& (0+255),f,b
 38974  0143FC  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 38975  0143FE                     l3696:
 38976                           
 38977                           ; BSR set to: 0
 38978  0143FE  0100               	movlb	0	; () banked
 38979  014400  0764               	decf	memcpy@n& (0+255),f,b
 38980  014402  A0D8               	btfss	status,0,c
 38981  014404  0765               	decf	(memcpy@n+1)& (0+255),f,b
 38982  014406  2964               	incf	memcpy@n& (0+255),w,b
 38983  014408  E1DD               	bnz	l12818
 38984  01440A  2965               	incf	(memcpy@n+1)& (0+255),w,b
 38985  01440C  B4D8               	btfsc	status,2,c
 38986  01440E  0012               	return	
 38987  014410  D7D9               	goto	l3697
 38988  014412                     __end_of_memcpy:
 38989                           	opt stack 0
 38990                           tosu	equ	0xFFF
 38991                           tosh	equ	0xFFE
 38992                           tosl	equ	0xFFD
 38993                           pclath	equ	0xFFA
 38994                           tblptru	equ	0xFF8
 38995                           tblptrh	equ	0xFF7
 38996                           tblptrl	equ	0xFF6
 38997                           tablat	equ	0xFF5
 38998                           prodh	equ	0xFF4
 38999                           prodl	equ	0xFF3
 39000                           intcon	equ	0xFF2
 39001                           indf0	equ	0xFEF
 39002                           postinc0	equ	0xFEE
 39003                           fsr0h	equ	0xFEA
 39004                           fsr0l	equ	0xFE9
 39005                           wreg	equ	0xFE8
 39006                           indf1	equ	0xFE7
 39007                           postinc1	equ	0xFE6
 39008                           postdec1	equ	0xFE5
 39009                           plusw1	equ	0xFE3
 39010                           fsr1h	equ	0xFE2
 39011                           fsr1l	equ	0xFE1
 39012                           indf2	equ	0xFDF
 39013                           postinc2	equ	0xFDE
 39014                           postdec2	equ	0xFDD
 39015                           plusw2	equ	0xFDB
 39016                           fsr2h	equ	0xFDA
 39017                           fsr2l	equ	0xFD9
 39018                           status	equ	0xFD8
 39019                           
 39020 ;; *************** function __fill_buffer_get_mode_details *****************
 39021 ;; Defined at:
 39022 ;;		line 272 in file "api.c"
 39023 ;; Parameters:    Size  Location     Type
 39024 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 39025 ;;		 -> ToSendDataBuffer(64), 
 39026 ;; Auto vars:     Size  Location     Type
 39027 ;;		None
 39028 ;; Return value:  Size  Location     Type
 39029 ;;                  1    wreg      void 
 39030 ;; Registers used:
 39031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39032 ;; Tracked objects:
 39033 ;;		On entry : 0/0
 39034 ;;		On exit  : 0/0
 39035 ;;		Unchanged: 0/0
 39036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39037 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39039 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39040 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39041 ;;Total ram usage:        4 bytes
 39042 ;; Hardware stack levels used:    1
 39043 ;; Hardware stack levels required when called:   10
 39044 ;; This function calls:
 39045 ;;		Nothing
 39046 ;; This function is called by:
 39047 ;;		_api_prepare
 39048 ;; This function uses a non-reentrant model
 39049 ;;
 39050                           
 39051                           	psect	text161
 39052  00F40C                     __ptext161:
 39053                           	opt stack 0
 39054  00F40C                     __fill_buffer_get_mode_details:
 39055                           	opt stack 18
 39056                           
 39057                           ;api.c: 275: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 39058                           
 39059                           ; BSR set to: 0
 39060                           ;incstack = 0
 39061  00F40C  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 39062  00F410  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 39063  00F414  0E13               	movlw	19
 39064  00F416  6EDF               	movwf	indf2,c
 39065                           
 39066                           ;api.c: 278: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39067  00F418  0100               	movlb	0	; () banked
 39068  00F41A  EE20 F001          	lfsr	2,1
 39069  00F41E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39070  00F420  26D9               	addwf	fsr2l,f,c
 39071  00F422  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39072  00F424  22DA               	addwfc	fsr2h,f,c
 39073  00F426  0EBC               	movlw	188
 39074  00F428  6EDF               	movwf	indf2,c
 39075                           
 39076                           ; BSR set to: 0
 39077                           ;api.c: 279: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39078  00F42A  EE20 F002          	lfsr	2,2
 39079  00F42E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39080  00F430  26D9               	addwf	fsr2l,f,c
 39081  00F432  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39082  00F434  22DA               	addwfc	fsr2h,f,c
 39083  00F436  0E26               	movlw	38
 39084  00F438  6EDF               	movwf	indf2,c
 39085                           
 39086                           ; BSR set to: 0
 39087                           ;api.c: 282: outBuffer[3] = os.displayState;
 39088  00F43A  EE20 F003          	lfsr	2,3
 39089  00F43E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39090  00F440  26D9               	addwf	fsr2l,f,c
 39091  00F442  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39092  00F444  22DA               	addwfc	fsr2h,f,c
 39093  00F446  C17E  FFDF         	movff	_os+13,indf2	;volatile
 39094                           
 39095                           ;api.c: 284: switch(os.displayState & 0x0F)
 39096  00F44A  D090               	goto	l2277
 39097  00F44C                     
 39098                           ; BSR set to: 0
 39099                           ;api.c: 290: case DISPLAY_STATE_SETUP2:;api.c: 291: outBuffer[4] = os.setup_step_size;
 39100                           
 39101                           ; BSR set to: 0
 39102                           
 39103                           ; BSR set to: 0
 39104  00F44C  EE20 F004          	lfsr	2,4
 39105  00F450  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39106  00F452  26D9               	addwf	fsr2l,f,c
 39107  00F454  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39108  00F456  22DA               	addwfc	fsr2h,f,c
 39109  00F458  C181  FFDF         	movff	_os+16,indf2	;volatile
 39110                           
 39111                           ;api.c: 292: break;
 39112  00F45C  0012               	return	
 39113  00F45E                     
 39114                           ; BSR set to: 0
 39115                           ;api.c: 295: case DISPLAY_STATE_DIVIDE2:;api.c: 297: outBuffer[4] = os.divide_step_size;
 39116                           
 39117                           ; BSR set to: 0
 39118                           
 39119                           ; BSR set to: 0
 39120  00F45E  EE20 F004          	lfsr	2,4
 39121  00F462  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39122  00F464  26D9               	addwf	fsr2l,f,c
 39123  00F466  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39124  00F468  22DA               	addwfc	fsr2h,f,c
 39125  00F46A  C186  FFDF         	movff	_os+21,indf2	;volatile
 39126                           
 39127                           ;api.c: 298: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 39128  00F46E  EE20 F005          	lfsr	2,5
 39129  00F472  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39130  00F474  26D9               	addwf	fsr2l,f,c
 39131  00F476  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39132  00F478  22DA               	addwfc	fsr2h,f,c
 39133  00F47A  0101               	movlb	1	; () banked
 39134  00F47C  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 39135  00F47E  6EDF               	movwf	indf2,c
 39136                           
 39137                           ;api.c: 299: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 39138  00F480  0100               	movlb	0	; () banked
 39139  00F482  EE20 F006          	lfsr	2,6
 39140  00F486  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39141  00F488  26D9               	addwf	fsr2l,f,c
 39142  00F48A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39143  00F48C  22DA               	addwfc	fsr2h,f,c
 39144  00F48E  C184  FFDF         	movff	_os+19,indf2	;volatile
 39145                           
 39146                           ;api.c: 300: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 39147  00F492  EE20 F007          	lfsr	2,7
 39148  00F496  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39149  00F498  26D9               	addwf	fsr2l,f,c
 39150  00F49A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39151  00F49C  22DA               	addwfc	fsr2h,f,c
 39152  00F49E  0101               	movlb	1	; () banked
 39153  00F4A0  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 39154  00F4A2  6EDF               	movwf	indf2,c
 39155                           
 39156                           ;api.c: 301: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 39157  00F4A4  0100               	movlb	0	; () banked
 39158  00F4A6  EE20 F008          	lfsr	2,8
 39159  00F4AA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39160  00F4AC  26D9               	addwf	fsr2l,f,c
 39161  00F4AE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39162  00F4B0  22DA               	addwfc	fsr2h,f,c
 39163  00F4B2  C189  FFDF         	movff	_os+24,indf2	;volatile
 39164                           
 39165                           ;api.c: 302: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 39166  00F4B6  EE20 F009          	lfsr	2,9
 39167  00F4BA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39168  00F4BC  26D9               	addwf	fsr2l,f,c
 39169  00F4BE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39170  00F4C0  22DA               	addwfc	fsr2h,f,c
 39171  00F4C2  0101               	movlb	1	; () banked
 39172  00F4C4  5188               	movf	(_os+23)& (0+255),w,b	;volatile
 39173  00F4C6  6EDF               	movwf	indf2,c
 39174                           
 39175                           ;api.c: 303: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 39176  00F4C8  0100               	movlb	0	; () banked
 39177  00F4CA  EE20 F00A          	lfsr	2,10
 39178  00F4CE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39179  00F4D0  26D9               	addwf	fsr2l,f,c
 39180  00F4D2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39181  00F4D4  22DA               	addwfc	fsr2h,f,c
 39182  00F4D6  C187  FFDF         	movff	_os+22,indf2	;volatile
 39183                           
 39184                           ;api.c: 304: break;
 39185  00F4DA  0012               	return	
 39186  00F4DC                     
 39187                           ; BSR set to: 0
 39188                           ;api.c: 307: case DISPLAY_STATE_ARC2:;api.c: 308: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 39189                           
 39190                           ; BSR set to: 0
 39191                           
 39192                           ; BSR set to: 0
 39193  00F4DC  EE20 F004          	lfsr	2,4
 39194  00F4E0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39195  00F4E2  26D9               	addwf	fsr2l,f,c
 39196  00F4E4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39197  00F4E6  22DA               	addwfc	fsr2h,f,c
 39198  00F4E8  0101               	movlb	1	; () banked
 39199  00F4EA  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 39200  00F4EC  6EDF               	movwf	indf2,c
 39201                           
 39202                           ;api.c: 309: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 39203  00F4EE  0100               	movlb	0	; () banked
 39204  00F4F0  EE20 F005          	lfsr	2,5
 39205  00F4F4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39206  00F4F6  26D9               	addwf	fsr2l,f,c
 39207  00F4F8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39208  00F4FA  22DA               	addwfc	fsr2h,f,c
 39209  00F4FC  C18B  FFDF         	movff	_os+26,indf2	;volatile
 39210                           
 39211                           ;api.c: 310: outBuffer[6] = os.arc_direction;
 39212  00F500  EE20 F006          	lfsr	2,6
 39213  00F504  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39214  00F506  26D9               	addwf	fsr2l,f,c
 39215  00F508  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39216  00F50A  22DA               	addwfc	fsr2h,f,c
 39217  00F50C  C193  FFDF         	movff	_os+34,indf2	;volatile
 39218                           
 39219                           ;api.c: 311: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 39220  00F510  EE20 F007          	lfsr	2,7
 39221  00F514  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39222  00F516  26D9               	addwf	fsr2l,f,c
 39223  00F518  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39224  00F51A  22DA               	addwfc	fsr2h,f,c
 39225  00F51C  0101               	movlb	1	; () banked
 39226  00F51E  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 39227  00F520  6EDF               	movwf	indf2,c
 39228                           
 39229                           ;api.c: 312: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 39230  00F522  0100               	movlb	0	; () banked
 39231  00F524  EE20 F008          	lfsr	2,8
 39232  00F528  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39233  00F52A  26D9               	addwf	fsr2l,f,c
 39234  00F52C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39235  00F52E  22DA               	addwfc	fsr2h,f,c
 39236  00F530  C191  FFDF         	movff	_os+32,indf2	;volatile
 39237                           
 39238                           ; BSR set to: 0
 39239                           ;api.c: 316: break;
 39240                           
 39241                           ;api.c: 315: case DISPLAY_STATE_ZERO:
 39242                           
 39243                           ;api.c: 313: break;
 39244  00F534  0012               	return	
 39245  00F536                     
 39246                           ; BSR set to: 0
 39247                           ;api.c: 319: outBuffer[4] = os.manual_direction;
 39248                           
 39249                           ; BSR set to: 0
 39250  00F536  EE20 F004          	lfsr	2,4
 39251  00F53A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39252  00F53C  26D9               	addwf	fsr2l,f,c
 39253  00F53E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39254  00F540  22DA               	addwfc	fsr2h,f,c
 39255  00F542  C196  FFDF         	movff	_os+37,indf2	;volatile
 39256                           
 39257                           ;api.c: 320: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 39258  00F546  EE20 F005          	lfsr	2,5
 39259  00F54A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39260  00F54C  26D9               	addwf	fsr2l,f,c
 39261  00F54E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39262  00F550  22DA               	addwfc	fsr2h,f,c
 39263  00F552  0101               	movlb	1	; () banked
 39264  00F554  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 39265  00F556  6EDF               	movwf	indf2,c
 39266                           
 39267                           ;api.c: 321: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 39268  00F558  0100               	movlb	0	; () banked
 39269  00F55A  EE20 F006          	lfsr	2,6
 39270  00F55E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39271  00F560  26D9               	addwf	fsr2l,f,c
 39272  00F562  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39273  00F564  22DA               	addwfc	fsr2h,f,c
 39274  00F566  C194  FFDF         	movff	_os+35,indf2	;volatile
 39275                           
 39276                           ; BSR set to: 0
 39277                           ;api.c: 323: }
 39278                           
 39279                           ;api.c: 322: break;
 39280  00F56A  0012               	return	
 39281  00F56C                     l2277:
 39282                           
 39283                           ; BSR set to: 0
 39284                           
 39285                           ; BSR set to: 0
 39286  00F56C  0101               	movlb	1	; () banked
 39287  00F56E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 39288  00F570  0B0F               	andlw	15
 39289  00F572  0100               	movlb	0	; () banked
 39290  00F574  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 39291  00F576  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 39292                           
 39293                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39294                           ; Switch size 1, requested type "space"
 39295                           ; Number of cases is 1, Range of values is 0 to 0
 39296                           ; switch strategies available:
 39297                           ; Name         Instructions Cycles
 39298                           ; simple_byte            4     3 (average)
 39299                           ;	Chosen strategy is simple_byte
 39300  00F578  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 39301  00F57A  0A00               	xorlw	0	; case 0
 39302  00F57C  A4D8               	btfss	status,2,c
 39303  00F57E  0012               	return	
 39304                           
 39305                           ; BSR set to: 0
 39306                           ; Switch size 1, requested type "space"
 39307                           ; Number of cases is 9, Range of values is 0 to 128
 39308                           ; switch strategies available:
 39309                           ; Name         Instructions Cycles
 39310                           ; simple_byte           28    15 (average)
 39311                           ;	Chosen strategy is simple_byte
 39312  00F580  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 39313  00F582  0A00               	xorlw	0	; case 0
 39314  00F584  B4D8               	btfsc	status,2,c
 39315  00F586  0012               	return	
 39316  00F588  0A10               	xorlw	16	; case 16
 39317  00F58A  B4D8               	btfsc	status,2,c
 39318  00F58C  D75F               	goto	l2280
 39319  00F58E  0A30               	xorlw	48	; case 32
 39320  00F590  B4D8               	btfsc	status,2,c
 39321  00F592  D75C               	goto	l2280
 39322  00F594  0A10               	xorlw	16	; case 48
 39323  00F596  B4D8               	btfsc	status,2,c
 39324  00F598  D762               	goto	l2282
 39325  00F59A  0A70               	xorlw	112	; case 64
 39326  00F59C  B4D8               	btfsc	status,2,c
 39327  00F59E  D75F               	goto	l2282
 39328  00F5A0  0A10               	xorlw	16	; case 80
 39329  00F5A2  B4D8               	btfsc	status,2,c
 39330  00F5A4  D79B               	goto	l2284
 39331  00F5A6  0A30               	xorlw	48	; case 96
 39332  00F5A8  B4D8               	btfsc	status,2,c
 39333  00F5AA  D798               	goto	l2284
 39334  00F5AC  0A10               	xorlw	16	; case 112
 39335  00F5AE  B4D8               	btfsc	status,2,c
 39336  00F5B0  0012               	return	
 39337  00F5B2  0AF0               	xorlw	240	; case 128
 39338  00F5B4  A4D8               	btfss	status,2,c
 39339  00F5B6  0012               	return	
 39340  00F5B8  D7BE               	goto	l2287
 39341  00F5BA                     __end_of__fill_buffer_get_mode_details:
 39342                           	opt stack 0
 39343                           tosu	equ	0xFFF
 39344                           tosh	equ	0xFFE
 39345                           tosl	equ	0xFFD
 39346                           pclath	equ	0xFFA
 39347                           tblptru	equ	0xFF8
 39348                           tblptrh	equ	0xFF7
 39349                           tblptrl	equ	0xFF6
 39350                           tablat	equ	0xFF5
 39351                           prodh	equ	0xFF4
 39352                           prodl	equ	0xFF3
 39353                           intcon	equ	0xFF2
 39354                           indf0	equ	0xFEF
 39355                           postinc0	equ	0xFEE
 39356                           fsr0h	equ	0xFEA
 39357                           fsr0l	equ	0xFE9
 39358                           wreg	equ	0xFE8
 39359                           indf1	equ	0xFE7
 39360                           postinc1	equ	0xFE6
 39361                           postdec1	equ	0xFE5
 39362                           plusw1	equ	0xFE3
 39363                           fsr1h	equ	0xFE2
 39364                           fsr1l	equ	0xFE1
 39365                           indf2	equ	0xFDF
 39366                           postinc2	equ	0xFDE
 39367                           postdec2	equ	0xFDD
 39368                           plusw2	equ	0xFDB
 39369                           fsr2h	equ	0xFDA
 39370                           fsr2l	equ	0xFD9
 39371                           status	equ	0xFD8
 39372                           
 39373 ;; *************** function __fill_buffer_get_display *****************
 39374 ;; Defined at:
 39375 ;;		line 231 in file "api.c"
 39376 ;; Parameters:    Size  Location     Type
 39377 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 39378 ;;		 -> ToSendDataBuffer(64), 
 39379 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 39380 ;; Auto vars:     Size  Location     Type
 39381 ;;  position        1   15[BANK0 ] unsigned char 
 39382 ;;  start_line      1   14[BANK0 ] unsigned char 
 39383 ;;  line            1   13[BANK0 ] unsigned char 
 39384 ;;  cntr            1   12[BANK0 ] unsigned char 
 39385 ;; Return value:  Size  Location     Type
 39386 ;;                  1    wreg      void 
 39387 ;; Registers used:
 39388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39389 ;; Tracked objects:
 39390 ;;		On entry : 0/0
 39391 ;;		On exit  : 0/0
 39392 ;;		Unchanged: 0/0
 39393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39394 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39395 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39396 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39397 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39398 ;;Total ram usage:       12 bytes
 39399 ;; Hardware stack levels used:    1
 39400 ;; Hardware stack levels required when called:   11
 39401 ;; This function calls:
 39402 ;;		_display_get_character
 39403 ;; This function is called by:
 39404 ;;		_api_prepare
 39405 ;; This function uses a non-reentrant model
 39406 ;;
 39407                           
 39408                           	psect	text162
 39409  012B48                     __ptext162:
 39410                           	opt stack 0
 39411  012B48                     __fill_buffer_get_display:
 39412                           	opt stack 17
 39413                           
 39414                           ;api.c: 233: uint8_t cntr;;api.c: 234: uint8_t line;;api.c: 235: uint8_t start_line;;api
      +                          .c: 236: uint8_t position;;api.c: 239: if(secondHalf)
 39415                           
 39416                           ; BSR set to: 0
 39417                           ;incstack = 0
 39418  012B48  0100               	movlb	0	; () banked
 39419  012B4A  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39420  012B4C  B4D8               	btfsc	status,2,c
 39421  012B4E  D006               	goto	l2265
 39422                           
 39423                           ; BSR set to: 0
 39424                           ;api.c: 240: {;api.c: 241: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 39425  012B50  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39426  012B54  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39427  012B58  0E12               	movlw	18
 39428  012B5A  D005               	goto	L61
 39429  012B5C                     l2265:
 39430                           
 39431                           ; BSR set to: 0
 39432                           ;api.c: 243: else;api.c: 244: {;api.c: 245: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 39433                           
 39434                           ; BSR set to: 0
 39435  012B5C  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39436  012B60  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39437  012B64  0E11               	movlw	17
 39438  012B66                     L61:
 39439  012B66  6EDF               	movwf	indf2,c
 39440                           
 39441                           ; BSR set to: 0
 39442                           ;api.c: 246: };api.c: 249: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39443                           
 39444                           ; BSR set to: 0
 39445  012B68  EE20 F001          	lfsr	2,1
 39446  012B6C  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39447  012B6E  26D9               	addwf	fsr2l,f,c
 39448  012B70  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39449  012B72  22DA               	addwfc	fsr2h,f,c
 39450  012B74  0EBC               	movlw	188
 39451  012B76  6EDF               	movwf	indf2,c
 39452                           
 39453                           ; BSR set to: 0
 39454                           ;api.c: 250: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39455  012B78  EE20 F002          	lfsr	2,2
 39456  012B7C  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39457  012B7E  26D9               	addwf	fsr2l,f,c
 39458  012B80  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39459  012B82  22DA               	addwfc	fsr2h,f,c
 39460  012B84  0E26               	movlw	38
 39461  012B86  6EDF               	movwf	indf2,c
 39462                           
 39463                           ; BSR set to: 0
 39464                           ;api.c: 253: cntr = 3;
 39465  012B88  0E03               	movlw	3
 39466  012B8A  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 39467                           
 39468                           ; BSR set to: 0
 39469                           ;api.c: 254: if(secondHalf)
 39470  012B8C  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39471  012B8E  B4D8               	btfsc	status,2,c
 39472  012B90  D002               	goto	l2267
 39473                           
 39474                           ; BSR set to: 0
 39475                           ;api.c: 255: {;api.c: 256: start_line = 2;
 39476  012B92  0E02               	movlw	2
 39477  012B94  D001               	goto	L62
 39478  012B96                     l2267:
 39479                           
 39480                           ; BSR set to: 0
 39481                           ;api.c: 258: else;api.c: 259: {;api.c: 260: start_line = 0;
 39482                           
 39483                           ; BSR set to: 0
 39484  012B96  0E00               	movlw	0
 39485  012B98                     L62:
 39486  012B98  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 39487                           
 39488                           ; BSR set to: 0
 39489                           ;api.c: 261: };api.c: 262: for(line=start_line; line<start_line+2; ++line)
 39490                           
 39491                           ; BSR set to: 0
 39492  012B9A  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 39493  012B9E  D01B               	goto	l2269
 39494  012BA0                     
 39495                           ; BSR set to: 0
 39496                           ;api.c: 263: {;api.c: 264: for(position=0; position<20; ++position)
 39497                           
 39498                           ; BSR set to: 0
 39499  012BA0  0E00               	movlw	0
 39500  012BA2  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 39501  012BA4                     l15940:
 39502                           
 39503                           ; BSR set to: 0
 39504  012BA4  0E13               	movlw	19
 39505  012BA6  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 39506  012BA8  D001               	goto	l2271
 39507  012BAA  D014               	goto	u14820
 39508  012BAC                     l2271:
 39509                           
 39510                           ; BSR set to: 0
 39511                           ;api.c: 265: {;api.c: 266: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 39512                           
 39513                           ; BSR set to: 0
 39514  012BAC  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 39515  012BB0  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39516  012BB2  EC17  F0AA         	call	_display_get_character
 39517  012BB6  0100               	movlb	0	; () banked
 39518  012BB8  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39519  012BBA  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 39520  012BBC  0D01               	mullw	1
 39521  012BBE  50F3               	movf	prodl,w,c
 39522  012BC0  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39523  012BC2  6ED9               	movwf	fsr2l,c
 39524  012BC4  50F4               	movf	prodh,w,c
 39525  012BC6  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39526  012BC8  6EDA               	movwf	fsr2h,c
 39527  012BCA  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 39528                           
 39529                           ; BSR set to: 0
 39530                           ;api.c: 267: ++cntr;
 39531  012BCE  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 39532                           
 39533                           ; BSR set to: 0
 39534  012BD0  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 39535  012BD2  D7E8               	goto	l15940
 39536  012BD4                     u14820:
 39537                           
 39538                           ; BSR set to: 0
 39539                           
 39540                           ; BSR set to: 0
 39541  012BD4  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 39542  012BD6                     l2269:
 39543                           
 39544                           ; BSR set to: 0
 39545                           
 39546                           ; BSR set to: 0
 39547  012BD6  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 39548  012BD8  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39549  012BDA  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 39550  012BDC  0E02               	movlw	2
 39551  012BDE  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 39552  012BE0  0E00               	movlw	0
 39553  012BE2  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 39554  012BE4  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39555  012BE6  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 39556  012BE8  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 39557  012BEA  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 39558  012BEC  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 39559  012BEE  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 39560  012BF0  0A80               	xorlw	128
 39561  012BF2  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 39562  012BF4  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 39563  012BF6  0A80               	xorlw	128
 39564  012BF8  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 39565  012BFA  B0D8               	btfsc	status,0,c
 39566  012BFC  0012               	return	
 39567  012BFE  D7D0               	goto	l2270
 39568  012C00                     __end_of__fill_buffer_get_display:
 39569                           	opt stack 0
 39570                           tosu	equ	0xFFF
 39571                           tosh	equ	0xFFE
 39572                           tosl	equ	0xFFD
 39573                           pclath	equ	0xFFA
 39574                           tblptru	equ	0xFF8
 39575                           tblptrh	equ	0xFF7
 39576                           tblptrl	equ	0xFF6
 39577                           tablat	equ	0xFF5
 39578                           prodh	equ	0xFF4
 39579                           prodl	equ	0xFF3
 39580                           intcon	equ	0xFF2
 39581                           indf0	equ	0xFEF
 39582                           postinc0	equ	0xFEE
 39583                           fsr0h	equ	0xFEA
 39584                           fsr0l	equ	0xFE9
 39585                           wreg	equ	0xFE8
 39586                           indf1	equ	0xFE7
 39587                           postinc1	equ	0xFE6
 39588                           postdec1	equ	0xFE5
 39589                           plusw1	equ	0xFE3
 39590                           fsr1h	equ	0xFE2
 39591                           fsr1l	equ	0xFE1
 39592                           indf2	equ	0xFDF
 39593                           postinc2	equ	0xFDE
 39594                           postdec2	equ	0xFDD
 39595                           plusw2	equ	0xFDB
 39596                           fsr2h	equ	0xFDA
 39597                           fsr2l	equ	0xFD9
 39598                           status	equ	0xFD8
 39599                           
 39600 ;; *************** function _display_get_character *****************
 39601 ;; Defined at:
 39602 ;;		line 628 in file "display.c"
 39603 ;; Parameters:    Size  Location     Type
 39604 ;;  line            1    wreg     unsigned char 
 39605 ;;  position        1    0[BANK0 ] unsigned char 
 39606 ;; Auto vars:     Size  Location     Type
 39607 ;;  line            1    3[BANK0 ] unsigned char 
 39608 ;; Return value:  Size  Location     Type
 39609 ;;                  1    wreg      unsigned char 
 39610 ;; Registers used:
 39611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39612 ;; Tracked objects:
 39613 ;;		On entry : 0/0
 39614 ;;		On exit  : 0/0
 39615 ;;		Unchanged: 0/0
 39616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39617 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39618 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39620 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39621 ;;Total ram usage:        4 bytes
 39622 ;; Hardware stack levels used:    1
 39623 ;; Hardware stack levels required when called:   10
 39624 ;; This function calls:
 39625 ;;		Nothing
 39626 ;; This function is called by:
 39627 ;;		__fill_buffer_get_display
 39628 ;; This function uses a non-reentrant model
 39629 ;;
 39630                           
 39631                           	psect	text163
 39632  01542E                     __ptext163:
 39633                           	opt stack 0
 39634  01542E                     _display_get_character:
 39635                           	opt stack 17
 39636                           
 39637                           ; BSR set to: 0
 39638                           ;incstack = 0
 39639                           ;display_get_character@line stored from wreg
 39640  01542E  0100               	movlb	0	; () banked
 39641  015430  6F63               	movwf	display_get_character@line& (0+255),b
 39642                           
 39643                           ;display.c: 630: return display_content[line][position];
 39644  015432  0100               	movlb	0	; () banked
 39645  015434  5163               	movf	display_get_character@line& (0+255),w,b
 39646  015436  0D14               	mullw	20
 39647  015438  0E34               	movlw	low _display_content
 39648  01543A  6F61               	movwf	??_display_get_character& (0+255),b
 39649  01543C  0E02               	movlw	high _display_content
 39650  01543E  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 39651  015440  50F3               	movf	prodl,w,c
 39652  015442  2761               	addwf	??_display_get_character& (0+255),f,b
 39653  015444  50F4               	movf	prodh,w,c
 39654  015446  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 39655  015448  5160               	movf	display_get_character@position& (0+255),w,b
 39656  01544A  0D01               	mullw	1
 39657  01544C  50F3               	movf	prodl,w,c
 39658  01544E  2561               	addwf	??_display_get_character& (0+255),w,b
 39659  015450  6ED9               	movwf	fsr2l,c
 39660  015452  50F4               	movf	prodh,w,c
 39661  015454  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 39662  015456  6EDA               	movwf	fsr2h,c
 39663  015458  50DF               	movf	indf2,w,c
 39664  01545A  0012               	return	
 39665  01545C                     __end_of_display_get_character:
 39666                           	opt stack 0
 39667                           tosu	equ	0xFFF
 39668                           tosh	equ	0xFFE
 39669                           tosl	equ	0xFFD
 39670                           pclath	equ	0xFFA
 39671                           tblptru	equ	0xFF8
 39672                           tblptrh	equ	0xFF7
 39673                           tblptrl	equ	0xFF6
 39674                           tablat	equ	0xFF5
 39675                           prodh	equ	0xFF4
 39676                           prodl	equ	0xFF3
 39677                           intcon	equ	0xFF2
 39678                           indf0	equ	0xFEF
 39679                           postinc0	equ	0xFEE
 39680                           fsr0h	equ	0xFEA
 39681                           fsr0l	equ	0xFE9
 39682                           wreg	equ	0xFE8
 39683                           indf1	equ	0xFE7
 39684                           postinc1	equ	0xFE6
 39685                           postdec1	equ	0xFE5
 39686                           plusw1	equ	0xFE3
 39687                           fsr1h	equ	0xFE2
 39688                           fsr1l	equ	0xFE1
 39689                           indf2	equ	0xFDF
 39690                           postinc2	equ	0xFDE
 39691                           postdec2	equ	0xFDD
 39692                           plusw2	equ	0xFDB
 39693                           fsr2h	equ	0xFDA
 39694                           fsr2l	equ	0xFD9
 39695                           status	equ	0xFD8
 39696                           
 39697 ;; *************** function _api_parse *****************
 39698 ;; Defined at:
 39699 ;;		line 93 in file "api.c"
 39700 ;; Parameters:    Size  Location     Type
 39701 ;;  inBuffer        2  100[BANK0 ] PTR unsigned char 
 39702 ;;		 -> ReceivedDataBuffer(64), 
 39703 ;;  receivedData    1  102[BANK0 ] unsigned char 
 39704 ;;  outBuffer       2  103[BANK0 ] PTR unsigned char 
 39705 ;;		 -> ToSendDataBuffer(64), 
 39706 ;; Auto vars:     Size  Location     Type
 39707 ;;  out_idx_ptr     2  107[BANK0 ] PTR unsigned char 
 39708 ;;		 -> api_parse@out_idx(1), 
 39709 ;;  in_idx          1  110[BANK0 ] unsigned char 
 39710 ;;  out_idx         1  109[BANK0 ] unsigned char 
 39711 ;; Return value:  Size  Location     Type
 39712 ;;                  1    wreg      void 
 39713 ;; Registers used:
 39714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39715 ;; Tracked objects:
 39716 ;;		On entry : 0/0
 39717 ;;		On exit  : 0/0
 39718 ;;		Unchanged: 0/0
 39719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39720 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39721 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39722 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39723 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39724 ;;Total ram usage:       11 bytes
 39725 ;; Hardware stack levels used:    1
 39726 ;; Hardware stack levels required when called:   16
 39727 ;; This function calls:
 39728 ;;		__parse_command_long
 39729 ;;		__parse_command_short
 39730 ;; This function is called by:
 39731 ;;		_APP_DeviceCustomHIDTasks
 39732 ;; This function uses a non-reentrant model
 39733 ;;
 39734                           
 39735                           	psect	text164
 39736  010846                     __ptext164:
 39737                           	opt stack 0
 39738  010846                     _api_parse:
 39739                           	opt stack 13
 39740                           
 39741                           ;api.c: 97: uint8_t in_idx;;api.c: 98: uint8_t out_idx;;api.c: 99: uint8_t *out_idx_ptr;
      +                          ;api.c: 101: out_idx = 0;
 39742                           
 39743                           ; BSR set to: 0
 39744                           ;incstack = 0
 39745  010846  0E00               	movlw	0
 39746  010848  0100               	movlb	0	; () banked
 39747  01084A  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39748                           
 39749                           ; BSR set to: 0
 39750                           ;api.c: 102: out_idx_ptr = &out_idx;
 39751  01084C  0ECD               	movlw	low api_parse@out_idx
 39752  01084E  6FCB               	movwf	api_parse@out_idx_ptr& (0+255),b
 39753  010850  0E00               	movlw	high api_parse@out_idx
 39754  010852  6FCC               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 39755                           
 39756                           ; BSR set to: 0
 39757                           ;api.c: 104: if(inBuffer[0]>0x7F)
 39758  010854  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39759  010858  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39760  01085C  0E7F               	movlw	127
 39761  01085E  64DF               	cpfsgt	indf2,c
 39762  010860  D001               	goto	l2246
 39763  010862  0012               	return	
 39764  010864                     l2246:
 39765                           
 39766                           ; BSR set to: 0
 39767                           ;api.c: 109: };api.c: 111: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 39768                           
 39769                           ; BSR set to: 0
 39770  010864  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39771  010868  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39772  01086C  0E20               	movlw	32
 39773  01086E  18DE               	xorwf	postinc2,w,c
 39774  010870  B4D8               	btfsc	status,2,c
 39775  010872  0012               	return	
 39776                           
 39777                           ; BSR set to: 0
 39778                           ;api.c: 116: };api.c: 118: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 39779                           
 39780                           ; BSR set to: 0
 39781                           
 39782                           ; BSR set to: 0
 39783                           ;api.c: 112: {;api.c: 115: return;
 39784  010874  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39785  010878  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39786  01087C  50DF               	movf	indf2,w,c
 39787  01087E  A4D8               	btfss	status,2,c
 39788  010880  D018               	goto	l2249
 39789                           
 39790                           ; BSR set to: 0
 39791                           ;api.c: 119: {;api.c: 121: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 39792  010882  C0C7  FFD9         	movff	api_parse@outBuffer,fsr2l
 39793  010886  C0C8  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 39794  01088A  0E00               	movlw	0
 39795  01088C  6EDF               	movwf	indf2,c
 39796                           
 39797                           ; BSR set to: 0
 39798                           ;api.c: 124: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39799  01088E  EE20 F001          	lfsr	2,1
 39800  010892  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39801  010894  26D9               	addwf	fsr2l,f,c
 39802  010896  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39803  010898  22DA               	addwfc	fsr2h,f,c
 39804  01089A  0EBC               	movlw	188
 39805  01089C  6EDF               	movwf	indf2,c
 39806                           
 39807                           ; BSR set to: 0
 39808                           ;api.c: 125: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39809  01089E  EE20 F002          	lfsr	2,2
 39810  0108A2  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39811  0108A4  26D9               	addwf	fsr2l,f,c
 39812  0108A6  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39813  0108A8  22DA               	addwfc	fsr2h,f,c
 39814  0108AA  0E26               	movlw	38
 39815  0108AC  6EDF               	movwf	indf2,c
 39816                           
 39817                           ; BSR set to: 0
 39818                           ;api.c: 128: out_idx = 3;
 39819  0108AE  0E03               	movlw	3
 39820  0108B0  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39821  0108B2                     l2249:
 39822                           
 39823                           ; BSR set to: 0
 39824                           ;api.c: 129: };api.c: 131: in_idx = 1;
 39825                           
 39826                           ; BSR set to: 0
 39827  0108B2  0E01               	movlw	1
 39828  0108B4  6FCE               	movwf	api_parse@in_idx& (0+255),b
 39829                           
 39830                           ;api.c: 132: while(in_idx<receivedDataLength)
 39831  0108B6  D057               	goto	l2255
 39832  0108B8                     
 39833                           ; BSR set to: 0
 39834                           ;api.c: 133: {;api.c: 135: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 39835                           
 39836                           ; BSR set to: 0
 39837  0108B8  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39838  0108BA  0D01               	mullw	1
 39839  0108BC  50F3               	movf	prodl,w,c
 39840  0108BE  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39841  0108C0  6ED9               	movwf	fsr2l,c
 39842  0108C2  50F4               	movf	prodh,w,c
 39843  0108C4  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39844  0108C6  6EDA               	movwf	fsr2h,c
 39845  0108C8  0E99               	movlw	153
 39846  0108CA  18DE               	xorwf	postinc2,w,c
 39847  0108CC  B4D8               	btfsc	status,2,c
 39848  0108CE  0012               	return	
 39849  0108D0  D02F               	goto	l2253
 39850  0108D2                     
 39851                           ; BSR set to: 0
 39852                           ;api.c: 143: _parse_command_short(inBuffer[in_idx]);
 39853                           
 39854                           ; BSR set to: 0
 39855  0108D2  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39856  0108D4  0D01               	mullw	1
 39857  0108D6  50F3               	movf	prodl,w,c
 39858  0108D8  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39859  0108DA  6ED9               	movwf	fsr2l,c
 39860  0108DC  50F4               	movf	prodh,w,c
 39861  0108DE  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39862  0108E0  6EDA               	movwf	fsr2h,c
 39863  0108E2  50DF               	movf	indf2,w,c
 39864  0108E4  EC7B  F07C         	call	__parse_command_short
 39865  0108E8  D00B               	goto	l16804
 39866  0108EA                     
 39867                           ; BSR set to: 0
 39868                           ;api.c: 148: _parse_command_short(inBuffer[in_idx]);
 39869                           
 39870                           ; BSR set to: 0
 39871  0108EA  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39872  0108EC  0D01               	mullw	1
 39873  0108EE  50F3               	movf	prodl,w,c
 39874  0108F0  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39875  0108F2  6ED9               	movwf	fsr2l,c
 39876  0108F4  50F4               	movf	prodh,w,c
 39877  0108F6  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39878  0108F8  6EDA               	movwf	fsr2h,c
 39879  0108FA  50DF               	movf	indf2,w,c
 39880  0108FC  EC7B  F07C         	call	__parse_command_short
 39881  010900                     l16804:
 39882                           
 39883                           ;api.c: 149: ++in_idx;
 39884  010900  0100               	movlb	0	; () banked
 39885  010902  2BCE               	incf	api_parse@in_idx& (0+255),f,b
 39886                           
 39887                           ;api.c: 150: break;
 39888  010904  D030               	goto	l2255
 39889  010906                     
 39890                           ; BSR set to: 0
 39891                           ;api.c: 153: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 39892                           
 39893                           ; BSR set to: 0
 39894  010906  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39895  010908  0D01               	mullw	1
 39896  01090A  50F3               	movf	prodl,w,c
 39897  01090C  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39898  01090E  6FB3               	movwf	__parse_command_long@data& (0+255),b
 39899  010910  50F4               	movf	prodh,w,c
 39900  010912  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39901  010914  6FB4               	movwf	(__parse_command_long@data+1)& (0+255),b
 39902  010916  C0C7  F0B5         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 39903  01091A  C0C8  F0B6         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 39904  01091E  C0CB  F0B7         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 39905  010922  C0CC  F0B8         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 39906  010926  EC77  F0A1         	call	__parse_command_long	;wreg free
 39907  01092A  0100               	movlb	0	; () banked
 39908  01092C  27CE               	addwf	api_parse@in_idx& (0+255),f,b
 39909                           
 39910                           ;api.c: 154: break;
 39911  01092E  D01B               	goto	l2255
 39912  010930                     l2253:
 39913                           
 39914                           ; BSR set to: 0
 39915                           
 39916                           ; BSR set to: 0
 39917  010930  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39918  010932  0D01               	mullw	1
 39919  010934  50F3               	movf	prodl,w,c
 39920  010936  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39921  010938  6ED9               	movwf	fsr2l,c
 39922  01093A  50F4               	movf	prodh,w,c
 39923  01093C  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39924  01093E  6EDA               	movwf	fsr2h,c
 39925  010940  50DF               	movf	indf2,w,c
 39926  010942  0BF0               	andlw	240
 39927  010944  6FC9               	movwf	??_api_parse& (0+255),b
 39928  010946  6BCA               	clrf	(??_api_parse+1)& (0+255),b
 39929                           
 39930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39931                           ; Switch size 1, requested type "space"
 39932                           ; Number of cases is 1, Range of values is 0 to 0
 39933                           ; switch strategies available:
 39934                           ; Name         Instructions Cycles
 39935                           ; simple_byte            4     3 (average)
 39936                           ;	Chosen strategy is simple_byte
 39937  010948  51CA               	movf	(??_api_parse+1)& (0+255),w,b
 39938  01094A  0A00               	xorlw	0	; case 0
 39939  01094C  A4D8               	btfss	status,2,c
 39940  01094E  0012               	return	
 39941                           
 39942                           ; BSR set to: 0
 39943                           ; Switch size 1, requested type "space"
 39944                           ; Number of cases is 3, Range of values is 32 to 144
 39945                           ; switch strategies available:
 39946                           ; Name         Instructions Cycles
 39947                           ; simple_byte           10     6 (average)
 39948                           ;	Chosen strategy is simple_byte
 39949  010950  51C9               	movf	??_api_parse& (0+255),w,b
 39950  010952  0A20               	xorlw	32	; case 32
 39951  010954  B4D8               	btfsc	status,2,c
 39952  010956  D7BD               	goto	l2254
 39953  010958  0A10               	xorlw	16	; case 48
 39954  01095A  B4D8               	btfsc	status,2,c
 39955  01095C  D7C6               	goto	l2256
 39956  01095E  0AA0               	xorlw	160	; case 144
 39957  010960  A4D8               	btfss	status,2,c
 39958  010962  0012               	return	
 39959  010964  D7D0               	goto	l2257
 39960  010966                     l2255:
 39961                           
 39962                           ; BSR set to: 0
 39963                           
 39964                           ; BSR set to: 0
 39965                           
 39966                           ; BSR set to: 0
 39967  010966  51C6               	movf	api_parse@receivedDataLength& (0+255),w,b
 39968  010968  5DCE               	subwf	api_parse@in_idx& (0+255),w,b
 39969  01096A  B0D8               	btfsc	status,0,c
 39970  01096C  0012               	return	
 39971  01096E  D7A4               	goto	l2251
 39972  010970                     __end_of_api_parse:
 39973                           	opt stack 0
 39974                           tosu	equ	0xFFF
 39975                           tosh	equ	0xFFE
 39976                           tosl	equ	0xFFD
 39977                           pclath	equ	0xFFA
 39978                           tblptru	equ	0xFF8
 39979                           tblptrh	equ	0xFF7
 39980                           tblptrl	equ	0xFF6
 39981                           tablat	equ	0xFF5
 39982                           prodh	equ	0xFF4
 39983                           prodl	equ	0xFF3
 39984                           intcon	equ	0xFF2
 39985                           indf0	equ	0xFEF
 39986                           postinc0	equ	0xFEE
 39987                           fsr0h	equ	0xFEA
 39988                           fsr0l	equ	0xFE9
 39989                           wreg	equ	0xFE8
 39990                           indf1	equ	0xFE7
 39991                           postinc1	equ	0xFE6
 39992                           postdec1	equ	0xFE5
 39993                           plusw1	equ	0xFE3
 39994                           fsr1h	equ	0xFE2
 39995                           fsr1l	equ	0xFE1
 39996                           indf2	equ	0xFDF
 39997                           postinc2	equ	0xFDE
 39998                           postdec2	equ	0xFDD
 39999                           plusw2	equ	0xFDB
 40000                           fsr2h	equ	0xFDA
 40001                           fsr2l	equ	0xFD9
 40002                           status	equ	0xFD8
 40003                           
 40004 ;; *************** function __parse_command_short *****************
 40005 ;; Defined at:
 40006 ;;		line 326 in file "api.c"
 40007 ;; Parameters:    Size  Location     Type
 40008 ;;  cmd             1    wreg     unsigned char 
 40009 ;; Auto vars:     Size  Location     Type
 40010 ;;  cmd             1   99[BANK0 ] unsigned char 
 40011 ;; Return value:  Size  Location     Type
 40012 ;;                  1    wreg      void 
 40013 ;; Registers used:
 40014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40015 ;; Tracked objects:
 40016 ;;		On entry : 0/0
 40017 ;;		On exit  : 0/0
 40018 ;;		Unchanged: 0/0
 40019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40024 ;;Total ram usage:        1 bytes
 40025 ;; Hardware stack levels used:    1
 40026 ;; Hardware stack levels required when called:   15
 40027 ;; This function calls:
 40028 ;;		_motor_clear_command_cue
 40029 ;;		_motor_go_to_steps_position
 40030 ;;		_motor_schedule_command
 40031 ;;		_motor_set_zero
 40032 ;;		_motor_stop
 40033 ;; This function is called by:
 40034 ;;		_api_parse
 40035 ;; This function uses a non-reentrant model
 40036 ;;
 40037                           
 40038                           	psect	text165
 40039  00F8F6                     __ptext165:
 40040                           	opt stack 0
 40041  00F8F6                     __parse_command_short:
 40042                           	opt stack 13
 40043                           
 40044                           ; BSR set to: 0
 40045                           ;incstack = 0
 40046                           ;__parse_command_short@cmd stored from wreg
 40047  00F8F6  0100               	movlb	0	; () banked
 40048  00F8F8  6FC3               	movwf	__parse_command_short@cmd& (0+255),b
 40049                           
 40050                           ;api.c: 328: switch(cmd)
 40051  00F8FA  D07E               	goto	l2291
 40052  00F8FC                     
 40053                           ;api.c: 346: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40054  00F8FC  0E01               	movlw	1
 40055  00F8FE  0101               	movlb	1	; () banked
 40056  00F900  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40057                           
 40058                           ;api.c: 347: break;
 40059  00F902  0012               	return	
 40060  00F904                     
 40061                           ;api.c: 350: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 40062                           
 40063                           ; BSR set to: 1
 40064  00F904  0E11               	movlw	17
 40065  00F906  0101               	movlb	1	; () banked
 40066  00F908  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40067                           
 40068                           ;api.c: 351: break;
 40069  00F90A  0012               	return	
 40070  00F90C                     
 40071                           ;api.c: 354: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 40072                           
 40073                           ; BSR set to: 1
 40074  00F90C  0E31               	movlw	49
 40075  00F90E  0101               	movlb	1	; () banked
 40076  00F910  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40077                           
 40078                           ;api.c: 355: break;
 40079  00F912  0012               	return	
 40080  00F914                     
 40081                           ;api.c: 358: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 40082                           
 40083                           ; BSR set to: 1
 40084  00F914  0E51               	movlw	81
 40085  00F916  0101               	movlb	1	; () banked
 40086  00F918  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40087                           
 40088                           ;api.c: 359: break;
 40089  00F91A  0012               	return	
 40090  00F91C                     
 40091                           ;api.c: 362: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40092                           
 40093                           ; BSR set to: 1
 40094  00F91C  0E82               	movlw	130
 40095  00F91E  0101               	movlb	1	; () banked
 40096  00F920  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40097                           
 40098                           ;api.c: 363: break;
 40099  00F922  0012               	return	
 40100  00F924                     
 40101                           ;api.c: 366: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 40102                           
 40103                           ; BSR set to: 1
 40104  00F924  0E71               	movlw	113
 40105  00F926  0101               	movlb	1	; () banked
 40106  00F928  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40107                           
 40108                           ;api.c: 367: break;
 40109  00F92A  0012               	return	
 40110  00F92C                     
 40111                           ;api.c: 370: motor_set_zero(MOTOR_DIRECTION_CCW);
 40112                           
 40113                           ; BSR set to: 1
 40114  00F92C  0EFF               	movlw	255
 40115  00F92E  EC61  F098         	call	_motor_set_zero
 40116                           
 40117                           ;api.c: 371: break;
 40118  00F932  0012               	return	
 40119  00F934                     
 40120                           ;api.c: 374: motor_set_zero(MOTOR_DIRECTION_CW);
 40121  00F934  0E01               	movlw	1
 40122  00F936  EC61  F098         	call	_motor_set_zero
 40123                           
 40124                           ;api.c: 375: break;
 40125  00F93A  0012               	return	
 40126  00F93C                     
 40127                           ;api.c: 378: motor_go_to_steps_position(0);
 40128  00F93C  0E00               	movlw	0
 40129  00F93E  0100               	movlb	0	; () banked
 40130  00F940  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 40131  00F942  0E00               	movlw	0
 40132  00F944  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 40133  00F946  0E00               	movlw	0
 40134  00F948  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 40135  00F94A  0E00               	movlw	0
 40136  00F94C  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 40137  00F94E  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 40138                           
 40139                           ;api.c: 380: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 40140  00F952  0E05               	movlw	5
 40141  00F954  0101               	movlb	1	; () banked
 40142  00F956  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40143                           
 40144                           ; BSR set to: 1
 40145                           ;api.c: 381: os.divide_position = 0;
 40146  00F958  0E00               	movlw	0
 40147  00F95A  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40148  00F95C  0E00               	movlw	0
 40149  00F95E  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40150  00F960                     
 40151                           ;api.c: 384: --os.encoder2Count;
 40152                           
 40153                           ; BSR set to: 1
 40154  00F960  0101               	movlb	1	; () banked
 40155  00F962  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 40156                           
 40157                           ;api.c: 385: break;
 40158  00F964  0012               	return	
 40159  00F966                     
 40160                           ;api.c: 388: ++os.encoder2Count;
 40161                           
 40162                           ; BSR set to: 1
 40163  00F966  0101               	movlb	1	; () banked
 40164  00F968  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 40165                           
 40166                           ;api.c: 389: break;
 40167  00F96A  0012               	return	
 40168  00F96C                     
 40169                           ;api.c: 392: ++os.button2;
 40170                           
 40171                           ; BSR set to: 1
 40172  00F96C  0101               	movlb	1	; () banked
 40173  00F96E  2B77               	incf	(_os+6)& (0+255),f,b	;volatile
 40174                           
 40175                           ;api.c: 393: break;
 40176  00F970  0012               	return	
 40177  00F972                     
 40178                           ;api.c: 396: --os.encoder1Count;
 40179                           
 40180                           ; BSR set to: 1
 40181  00F972  0101               	movlb	1	; () banked
 40182  00F974  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 40183                           
 40184                           ;api.c: 397: break;
 40185  00F976  0012               	return	
 40186  00F978                     
 40187                           ;api.c: 400: ++os.encoder1Count;
 40188                           
 40189                           ; BSR set to: 1
 40190  00F978  0101               	movlb	1	; () banked
 40191  00F97A  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 40192                           
 40193                           ;api.c: 401: break;
 40194  00F97C  0012               	return	
 40195  00F97E                     
 40196                           ;api.c: 404: ++os.button1;
 40197                           
 40198                           ; BSR set to: 1
 40199  00F97E  0101               	movlb	1	; () banked
 40200  00F980  2B75               	incf	(_os+4)& (0+255),f,b	;volatile
 40201                           
 40202                           ;api.c: 405: break;
 40203  00F982  0012               	return	
 40204  00F984                     
 40205                           ;api.c: 408: if(!os.busy)
 40206                           
 40207                           ; BSR set to: 1
 40208  00F984  0101               	movlb	1	; () banked
 40209  00F986  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40210  00F988  A4D8               	btfss	status,2,c
 40211  00F98A  0012               	return	
 40212                           
 40213                           ; BSR set to: 1
 40214                           ;api.c: 409: {;api.c: 410: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40215  00F98C  0E84               	movlw	132
 40216  00F98E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40217                           
 40218                           ; BSR set to: 1
 40219                           ;api.c: 411: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.manual_speed);
 40220  00F990  0E00               	movlw	0
 40221  00F992  0100               	movlb	0	; () banked
 40222  00F994  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40223  00F996  0E00               	movlw	0
 40224  00F998  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40225  00F99A  0E00               	movlw	0
 40226  00F99C  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40227  00F99E  0E00               	movlw	0
 40228  00F9A0  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40229  00F9A2  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 40230  00F9A6  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40231  00F9AA  0EFF               	movlw	255
 40232  00F9AC  EC61  F097         	call	_motor_schedule_command
 40233                           
 40234                           ;api.c: 412: };api.c: 413: break;
 40235  00F9B0  0012               	return	
 40236  00F9B2                     
 40237                           ;api.c: 416: if(!os.busy)
 40238  00F9B2  0101               	movlb	1	; () banked
 40239  00F9B4  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40240  00F9B6  A4D8               	btfss	status,2,c
 40241  00F9B8  0012               	return	
 40242                           
 40243                           ; BSR set to: 1
 40244                           ;api.c: 417: {;api.c: 418: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40245  00F9BA  0E84               	movlw	132
 40246  00F9BC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40247                           
 40248                           ; BSR set to: 1
 40249                           ;api.c: 419: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 40250  00F9BE  0E00               	movlw	0
 40251  00F9C0  0100               	movlb	0	; () banked
 40252  00F9C2  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40253  00F9C4  0E00               	movlw	0
 40254  00F9C6  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40255  00F9C8  0E00               	movlw	0
 40256  00F9CA  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40257  00F9CC  0E00               	movlw	0
 40258  00F9CE  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40259  00F9D0  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 40260  00F9D4  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40261  00F9D8  0E01               	movlw	1
 40262  00F9DA  EC61  F097         	call	_motor_schedule_command
 40263                           
 40264                           ;api.c: 420: };api.c: 421: break;
 40265  00F9DE  0012               	return	
 40266  00F9E0                     
 40267                           ;api.c: 424: if(os.busy)
 40268  00F9E0  0101               	movlb	1	; () banked
 40269  00F9E2  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40270  00F9E4  B4D8               	btfsc	status,2,c
 40271  00F9E6  0012               	return	
 40272                           
 40273                           ; BSR set to: 1
 40274                           ;api.c: 425: {;api.c: 426: motor_stop();
 40275  00F9E8  EC4E  F0A7         	call	_motor_stop	;wreg free
 40276                           
 40277                           ;api.c: 427: motor_clear_command_cue();
 40278  00F9EC  ECB5  F0AC         	call	_motor_clear_command_cue	;wreg free
 40279                           
 40280                           ;api.c: 428: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40281  00F9F0  0E82               	movlw	130
 40282  00F9F2  0101               	movlb	1	; () banked
 40283  00F9F4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40284                           
 40285                           ; BSR set to: 1
 40286                           ;api.c: 431: }
 40287                           
 40288                           ; BSR set to: 1
 40289                           ;api.c: 429: };api.c: 430: break;
 40290  00F9F6  0012               	return	
 40291  00F9F8                     l2291:
 40292                           
 40293                           ; BSR set to: 1
 40294  00F9F8  0100               	movlb	0	; () banked
 40295  00F9FA  51C3               	movf	__parse_command_short@cmd& (0+255),w,b
 40296                           
 40297                           ; Switch size 1, requested type "space"
 40298                           ; Number of cases is 18, Range of values is 32 to 56
 40299                           ; switch strategies available:
 40300                           ; Name         Instructions Cycles
 40301                           ; simple_byte           55    28 (average)
 40302                           ;	Chosen strategy is simple_byte
 40303  00F9FC  0A20               	xorlw	32	; case 32
 40304  00F9FE  B4D8               	btfsc	status,2,c
 40305  00FA00  D77D               	goto	l2292
 40306  00FA02  0A01               	xorlw	1	; case 33
 40307  00FA04  B4D8               	btfsc	status,2,c
 40308  00FA06  D77E               	goto	l2294
 40309  00FA08  0A03               	xorlw	3	; case 34
 40310  00FA0A  B4D8               	btfsc	status,2,c
 40311  00FA0C  D77F               	goto	l2295
 40312  00FA0E  0A01               	xorlw	1	; case 35
 40313  00FA10  B4D8               	btfsc	status,2,c
 40314  00FA12  D780               	goto	l2296
 40315  00FA14  0A07               	xorlw	7	; case 36
 40316  00FA16  B4D8               	btfsc	status,2,c
 40317  00FA18  D781               	goto	l2297
 40318  00FA1A  0A01               	xorlw	1	; case 37
 40319  00FA1C  B4D8               	btfsc	status,2,c
 40320  00FA1E  D782               	goto	l2298
 40321  00FA20  0A03               	xorlw	3	; case 38
 40322  00FA22  B4D8               	btfsc	status,2,c
 40323  00FA24  D783               	goto	l2299
 40324  00FA26  0A01               	xorlw	1	; case 39
 40325  00FA28  B4D8               	btfsc	status,2,c
 40326  00FA2A  D784               	goto	l2300
 40327  00FA2C  0A0F               	xorlw	15	; case 40
 40328  00FA2E  B4D8               	btfsc	status,2,c
 40329  00FA30  D785               	goto	l2301
 40330  00FA32  0A18               	xorlw	24	; case 48
 40331  00FA34  B4D8               	btfsc	status,2,c
 40332  00FA36  D794               	goto	l2302
 40333  00FA38  0A01               	xorlw	1	; case 49
 40334  00FA3A  B4D8               	btfsc	status,2,c
 40335  00FA3C  D794               	goto	l2303
 40336  00FA3E  0A03               	xorlw	3	; case 50
 40337  00FA40  B4D8               	btfsc	status,2,c
 40338  00FA42  D794               	goto	l2304
 40339  00FA44  0A01               	xorlw	1	; case 51
 40340  00FA46  B4D8               	btfsc	status,2,c
 40341  00FA48  D794               	goto	l2305
 40342  00FA4A  0A07               	xorlw	7	; case 52
 40343  00FA4C  B4D8               	btfsc	status,2,c
 40344  00FA4E  D794               	goto	l2306
 40345  00FA50  0A01               	xorlw	1	; case 53
 40346  00FA52  B4D8               	btfsc	status,2,c
 40347  00FA54  D794               	goto	l2307
 40348  00FA56  0A03               	xorlw	3	; case 54
 40349  00FA58  B4D8               	btfsc	status,2,c
 40350  00FA5A  D794               	goto	l2308
 40351  00FA5C  0A01               	xorlw	1	; case 55
 40352  00FA5E  B4D8               	btfsc	status,2,c
 40353  00FA60  D7A8               	goto	l2310
 40354  00FA62  0A0F               	xorlw	15	; case 56
 40355  00FA64  A4D8               	btfss	status,2,c
 40356  00FA66  0012               	return	
 40357  00FA68  D7BB               	goto	l2312
 40358  00FA6A                     __end_of__parse_command_short:
 40359                           	opt stack 0
 40360                           tosu	equ	0xFFF
 40361                           tosh	equ	0xFFE
 40362                           tosl	equ	0xFFD
 40363                           pclath	equ	0xFFA
 40364                           tblptru	equ	0xFF8
 40365                           tblptrh	equ	0xFF7
 40366                           tblptrl	equ	0xFF6
 40367                           tablat	equ	0xFF5
 40368                           prodh	equ	0xFF4
 40369                           prodl	equ	0xFF3
 40370                           intcon	equ	0xFF2
 40371                           indf0	equ	0xFEF
 40372                           postinc0	equ	0xFEE
 40373                           fsr0h	equ	0xFEA
 40374                           fsr0l	equ	0xFE9
 40375                           wreg	equ	0xFE8
 40376                           indf1	equ	0xFE7
 40377                           postinc1	equ	0xFE6
 40378                           postdec1	equ	0xFE5
 40379                           plusw1	equ	0xFE3
 40380                           fsr1h	equ	0xFE2
 40381                           fsr1l	equ	0xFE1
 40382                           indf2	equ	0xFDF
 40383                           postinc2	equ	0xFDE
 40384                           postdec2	equ	0xFDD
 40385                           plusw2	equ	0xFDB
 40386                           fsr2h	equ	0xFDA
 40387                           fsr2l	equ	0xFD9
 40388                           status	equ	0xFD8
 40389                           
 40390 ;; *************** function _motor_stop *****************
 40391 ;; Defined at:
 40392 ;;		line 528 in file "motor.c"
 40393 ;; Parameters:    Size  Location     Type
 40394 ;;		None
 40395 ;; Auto vars:     Size  Location     Type
 40396 ;;		None
 40397 ;; Return value:  Size  Location     Type
 40398 ;;                  1    wreg      void 
 40399 ;; Registers used:
 40400 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 40401 ;; Tracked objects:
 40402 ;;		On entry : 0/0
 40403 ;;		On exit  : 0/0
 40404 ;;		Unchanged: 0/0
 40405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40410 ;;Total ram usage:        2 bytes
 40411 ;; Hardware stack levels used:    1
 40412 ;; Hardware stack levels required when called:   10
 40413 ;; This function calls:
 40414 ;;		Nothing
 40415 ;; This function is called by:
 40416 ;;		__parse_command_short
 40417 ;;		_encoder_statemachine
 40418 ;; This function uses a non-reentrant model
 40419 ;;
 40420                           
 40421                           	psect	text166
 40422  014E9C                     __ptext166:
 40423                           	opt stack 0
 40424  014E9C                     _motor_stop:
 40425                           	opt stack 19
 40426                           
 40427                           ;motor.c: 530: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 40428                           
 40429                           ;incstack = 0
 40430  014E9C  90D8               	bcf	status,0,c
 40431  014E9E  0100               	movlb	0	; () banked
 40432  014EA0  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 40433  014EA2  6EF6               	movwf	tblptrl,c
 40434  014EA4  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 40435  014EA6  6EF7               	movwf	tblptrh,c
 40436  014EA8  0E61               	movlw	low _motor_steps_lookup
 40437  014EAA  26F6               	addwf	tblptrl,f,c
 40438  014EAC  0E94               	movlw	high _motor_steps_lookup
 40439  014EAE  22F7               	addwfc	tblptrh,f,c
 40440  014EB0                     	if	1	;There are 3 active tblptr bytes
 40441  014EB0  6AF8               	clrf	tblptru,c
 40442  014EB2  0E00               	movlw	low (__mediumconst shr (0+16))
 40443  014EB4  22F8               	addwfc	tblptru,f,c
 40444  014EB6                     	endif
 40445  014EB6  0009               	tblrd		*+
 40446  014EB8  CFF5 F060          	movff	tablat,??_motor_stop
 40447  014EBC  0009               	tblrd		*+
 40448  014EBE  CFF5 F061          	movff	tablat,??_motor_stop+1
 40449  014EC2  5160               	movf	??_motor_stop& (0+255),w,b
 40450  014EC4  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 40451  014EC6  0101               	movlb	1	; () banked
 40452  014EC8  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 40453  014ECA  0100               	movlb	0	; () banked
 40454  014ECC  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 40455  014ECE  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 40456  014ED0  0101               	movlb	1	; () banked
 40457  014ED2  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 40458  014ED4  0E00               	movlw	0
 40459  014ED6  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 40460  014ED8  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 40461  014EDA  0E00               	movlw	0
 40462  014EDC  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 40463  014EDE  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 40464                           
 40465                           ; BSR set to: 1
 40466  014EE0  0012               	return		;funcret
 40467  014EE2                     __end_of_motor_stop:
 40468                           	opt stack 0
 40469                           tosu	equ	0xFFF
 40470                           tosh	equ	0xFFE
 40471                           tosl	equ	0xFFD
 40472                           pclath	equ	0xFFA
 40473                           tblptru	equ	0xFF8
 40474                           tblptrh	equ	0xFF7
 40475                           tblptrl	equ	0xFF6
 40476                           tablat	equ	0xFF5
 40477                           prodh	equ	0xFF4
 40478                           prodl	equ	0xFF3
 40479                           intcon	equ	0xFF2
 40480                           indf0	equ	0xFEF
 40481                           postinc0	equ	0xFEE
 40482                           fsr0h	equ	0xFEA
 40483                           fsr0l	equ	0xFE9
 40484                           wreg	equ	0xFE8
 40485                           indf1	equ	0xFE7
 40486                           postinc1	equ	0xFE6
 40487                           postdec1	equ	0xFE5
 40488                           plusw1	equ	0xFE3
 40489                           fsr1h	equ	0xFE2
 40490                           fsr1l	equ	0xFE1
 40491                           indf2	equ	0xFDF
 40492                           postinc2	equ	0xFDE
 40493                           postdec2	equ	0xFDD
 40494                           plusw2	equ	0xFDB
 40495                           fsr2h	equ	0xFDA
 40496                           fsr2l	equ	0xFD9
 40497                           status	equ	0xFD8
 40498                           
 40499 ;; *************** function _motor_set_zero *****************
 40500 ;; Defined at:
 40501 ;;		line 723 in file "motor.c"
 40502 ;; Parameters:    Size  Location     Type
 40503 ;;  direction       1    wreg     enum E6622
 40504 ;; Auto vars:     Size  Location     Type
 40505 ;;  direction       1   71[BANK0 ] enum E6622
 40506 ;; Return value:  Size  Location     Type
 40507 ;;                  1    wreg      void 
 40508 ;; Registers used:
 40509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40510 ;; Tracked objects:
 40511 ;;		On entry : 0/0
 40512 ;;		On exit  : 0/0
 40513 ;;		Unchanged: 0/0
 40514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40518 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40519 ;;Total ram usage:        1 bytes
 40520 ;; Hardware stack levels used:    1
 40521 ;; Hardware stack levels required when called:   14
 40522 ;; This function calls:
 40523 ;;		_motor_schedule_command
 40524 ;; This function is called by:
 40525 ;;		__parse_command_short
 40526 ;;		_encoder_statemachine
 40527 ;; This function uses a non-reentrant model
 40528 ;;
 40529                           
 40530                           	psect	text167
 40531  0130C2                     __ptext167:
 40532                           	opt stack 0
 40533  0130C2                     _motor_set_zero:
 40534                           	opt stack 15
 40535                           
 40536                           ; BSR set to: 1
 40537                           ;incstack = 0
 40538                           ;motor_set_zero@direction stored from wreg
 40539  0130C2  0100               	movlb	0	; () banked
 40540  0130C4  6FA7               	movwf	motor_set_zero@direction& (0+255),b
 40541                           
 40542                           ;motor.c: 725: if(config.overshoot_in_steps!=0)
 40543  0130C6  0101               	movlb	1	; () banked
 40544  0130C8  51A6               	movf	(_config+5)& (0+255),w,b
 40545  0130CA  11A7               	iorwf	(_config+6)& (0+255),w,b
 40546  0130CC  B4D8               	btfsc	status,2,c
 40547  0130CE  D03C               	goto	l2558
 40548                           
 40549                           ; BSR set to: 1
 40550                           ;motor.c: 726: {;motor.c: 727: if(direction==MOTOR_DIRECTION_CW)
 40551  0130D0  0100               	movlb	0	; () banked
 40552  0130D2  05A7               	decf	motor_set_zero@direction& (0+255),w,b
 40553  0130D4  A4D8               	btfss	status,2,c
 40554  0130D6  D01C               	goto	l2557
 40555                           
 40556                           ; BSR set to: 0
 40557                           ;motor.c: 728: {;motor.c: 729: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0);
 40558  0130D8  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40559  0130DC  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40560  0130E0  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40561  0130E2  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40562  0130E4  0E00               	movlw	0
 40563  0130E6  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40564  0130E8  0E00               	movlw	0
 40565  0130EA  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40566  0130EC  0EFF               	movlw	255
 40567  0130EE  EC61  F097         	call	_motor_schedule_command
 40568                           
 40569                           ;motor.c: 730: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 40570  0130F2  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40571  0130F6  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40572  0130FA  0100               	movlb	0	; () banked
 40573  0130FC  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40574  0130FE  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40575  013100  0E00               	movlw	0
 40576  013102  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40577  013104  0E00               	movlw	0
 40578  013106  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40579  013108  0E01               	movlw	1
 40580  01310A  EC61  F097         	call	_motor_schedule_command
 40581                           
 40582                           ;motor.c: 731: }
 40583  01310E  D01C               	goto	l2558
 40584  013110                     l2557:
 40585                           
 40586                           ;motor.c: 732: else;motor.c: 733: {;motor.c: 734: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, config.overshoot_in_steps, 0);
 40587  013110  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40588  013114  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40589  013118  0100               	movlb	0	; () banked
 40590  01311A  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40591  01311C  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40592  01311E  0E00               	movlw	0
 40593  013120  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40594  013122  0E00               	movlw	0
 40595  013124  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40596  013126  0E01               	movlw	1
 40597  013128  EC61  F097         	call	_motor_schedule_command
 40598                           
 40599                           ;motor.c: 735: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0)
      +                          ;
 40600  01312C  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40601  013130  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40602  013134  0100               	movlb	0	; () banked
 40603  013136  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40604  013138  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40605  01313A  0E00               	movlw	0
 40606  01313C  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40607  01313E  0E00               	movlw	0
 40608  013140  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40609  013142  0EFF               	movlw	255
 40610  013144  EC61  F097         	call	_motor_schedule_command
 40611  013148                     l2558:
 40612                           
 40613                           ;motor.c: 736: };motor.c: 737: };motor.c: 738: os.approach_direction = direction;
 40614  013148  C0A7  F183         	movff	motor_set_zero@direction,_os+18	;volatile
 40615                           
 40616                           ;motor.c: 739: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40617  01314C  0E01               	movlw	1
 40618  01314E  0101               	movlb	1	; () banked
 40619  013150  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40620                           
 40621                           ; BSR set to: 1
 40622                           ;motor.c: 740: os.current_position_in_steps = 0;
 40623  013152  0E00               	movlw	0
 40624  013154  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 40625  013156  0E00               	movlw	0
 40626  013158  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 40627  01315A  0E00               	movlw	0
 40628  01315C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 40629  01315E  0E00               	movlw	0
 40630  013160  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 40631                           
 40632                           ; BSR set to: 1
 40633                           ;motor.c: 741: os.divide_position = 0;
 40634  013162  0E00               	movlw	0
 40635  013164  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40636  013166  0E00               	movlw	0
 40637  013168  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40638                           
 40639                           ; BSR set to: 1
 40640  01316A  0012               	return		;funcret
 40641  01316C                     __end_of_motor_set_zero:
 40642                           	opt stack 0
 40643                           tosu	equ	0xFFF
 40644                           tosh	equ	0xFFE
 40645                           tosl	equ	0xFFD
 40646                           pclath	equ	0xFFA
 40647                           tblptru	equ	0xFF8
 40648                           tblptrh	equ	0xFF7
 40649                           tblptrl	equ	0xFF6
 40650                           tablat	equ	0xFF5
 40651                           prodh	equ	0xFF4
 40652                           prodl	equ	0xFF3
 40653                           intcon	equ	0xFF2
 40654                           indf0	equ	0xFEF
 40655                           postinc0	equ	0xFEE
 40656                           fsr0h	equ	0xFEA
 40657                           fsr0l	equ	0xFE9
 40658                           wreg	equ	0xFE8
 40659                           indf1	equ	0xFE7
 40660                           postinc1	equ	0xFE6
 40661                           postdec1	equ	0xFE5
 40662                           plusw1	equ	0xFE3
 40663                           fsr1h	equ	0xFE2
 40664                           fsr1l	equ	0xFE1
 40665                           indf2	equ	0xFDF
 40666                           postinc2	equ	0xFDE
 40667                           postdec2	equ	0xFDD
 40668                           plusw2	equ	0xFDB
 40669                           fsr2h	equ	0xFDA
 40670                           fsr2l	equ	0xFD9
 40671                           status	equ	0xFD8
 40672                           
 40673 ;; *************** function _motor_go_to_steps_position *****************
 40674 ;; Defined at:
 40675 ;;		line 571 in file "motor.c"
 40676 ;; Parameters:    Size  Location     Type
 40677 ;;  target_posit    4   71[BANK0 ] unsigned long 
 40678 ;; Auto vars:     Size  Location     Type
 40679 ;;  distance_ccw    4   95[BANK0 ] unsigned long 
 40680 ;;  distance_cw     4   91[BANK0 ] unsigned long 
 40681 ;;  overhead_ccw    4   87[BANK0 ] unsigned long 
 40682 ;;  overhead_cw     4   83[BANK0 ] unsigned long 
 40683 ;; Return value:  Size  Location     Type
 40684 ;;                  1    wreg      void 
 40685 ;; Registers used:
 40686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40687 ;; Tracked objects:
 40688 ;;		On entry : 0/0
 40689 ;;		On exit  : 0/0
 40690 ;;		Unchanged: 0/0
 40691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40692 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40693 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40694 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40695 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40696 ;;Total ram usage:       28 bytes
 40697 ;; Hardware stack levels used:    1
 40698 ;; Hardware stack levels required when called:   14
 40699 ;; This function calls:
 40700 ;;		_motor_schedule_command
 40701 ;; This function is called by:
 40702 ;;		__parse_command_short
 40703 ;;		_motor_divide_jump
 40704 ;;		_motor_divide_jump_to_nearest
 40705 ;;		_encoder_statemachine
 40706 ;;		_motor_go_to_degrees_position
 40707 ;; This function uses a non-reentrant model
 40708 ;;
 40709                           
 40710                           	psect	text168
 40711  00D2CA                     __ptext168:
 40712                           	opt stack 0
 40713  00D2CA                     _motor_go_to_steps_position:
 40714                           	opt stack 15
 40715                           
 40716                           ;motor.c: 573: uint32_t distance_cw;;motor.c: 574: uint32_t overhead_cw;;motor.c: 575: u
      +                          int32_t distance_ccw;;motor.c: 576: uint32_t overhead_ccw;;motor.c: 579: if(os.busy)
 40717                           
 40718                           ; BSR set to: 1
 40719                           ;incstack = 0
 40720  00D2CA  0101               	movlb	1	; () banked
 40721  00D2CC  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40722  00D2CE  A4D8               	btfss	status,2,c
 40723  00D2D0  0012               	return	
 40724                           
 40725                           ; BSR set to: 1
 40726                           ;motor.c: 582: };motor.c: 585: if(os.current_position_in_steps == target_position)
 40727                           
 40728                           ; BSR set to: 1
 40729                           
 40730                           ; BSR set to: 1
 40731                           ;motor.c: 580: {;motor.c: 581: return;
 40732  00D2D2  0100               	movlb	0	; () banked
 40733  00D2D4  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40734  00D2D6  0101               	movlb	1	; () banked
 40735  00D2D8  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 40736  00D2DA  E110               	bnz	l14994
 40737  00D2DC  0100               	movlb	0	; () banked
 40738  00D2DE  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40739  00D2E0  0101               	movlb	1	; () banked
 40740  00D2E2  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 40741  00D2E4  E10B               	bnz	l14994
 40742  00D2E6  0100               	movlb	0	; () banked
 40743  00D2E8  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40744  00D2EA  0101               	movlb	1	; () banked
 40745  00D2EC  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 40746  00D2EE  E106               	bnz	l14994
 40747  00D2F0  0100               	movlb	0	; () banked
 40748  00D2F2  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40749  00D2F4  0101               	movlb	1	; () banked
 40750  00D2F6  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 40751  00D2F8  B4D8               	btfsc	status,2,c
 40752  00D2FA  0012               	return	
 40753  00D2FC                     l14994:
 40754                           
 40755                           ; BSR set to: 1
 40756                           ;motor.c: 588: };motor.c: 591: overhead_cw = 0;
 40757  00D2FC  0E00               	movlw	0
 40758  00D2FE  0100               	movlb	0	; () banked
 40759  00D300  6FB3               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 40760  00D302  0E00               	movlw	0
 40761  00D304  6FB4               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 40762  00D306  0E00               	movlw	0
 40763  00D308  6FB5               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 40764  00D30A  0E00               	movlw	0
 40765  00D30C  6FB6               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 40766                           
 40767                           ; BSR set to: 0
 40768                           ;motor.c: 592: distance_cw = target_position - os.current_position_in_steps;
 40769  00D30E  C178  F0AB         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 40770  00D312  C179  F0AC         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 40771  00D316  C17A  F0AD         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 40772  00D31A  C17B  F0AE         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 40773  00D31E  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40774  00D320  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40775  00D322  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40776  00D324  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40777  00D326  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40778  00D328  0E00               	movlw	0
 40779  00D32A  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40780  00D32C  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40781  00D32E  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40782  00D330  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40783  00D332  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40784  00D334  6FBB               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 40785  00D336  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40786  00D338  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40787  00D33A  6FBC               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 40788  00D33C  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40789  00D33E  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40790  00D340  6FBD               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 40791  00D342  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40792  00D344  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40793  00D346  6FBE               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 40794                           
 40795                           ; BSR set to: 0
 40796                           ;motor.c: 593: if(distance_cw>config.full_circle_in_steps)
 40797  00D348  51BB               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40798  00D34A  0101               	movlb	1	; () banked
 40799  00D34C  5DA1               	subwf	_config& (0+255),w,b
 40800  00D34E  0100               	movlb	0	; () banked
 40801  00D350  51BC               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40802  00D352  0101               	movlb	1	; () banked
 40803  00D354  59A2               	subwfb	(_config+1)& (0+255),w,b
 40804  00D356  0100               	movlb	0	; () banked
 40805  00D358  51BD               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40806  00D35A  0101               	movlb	1	; () banked
 40807  00D35C  59A3               	subwfb	(_config+2)& (0+255),w,b
 40808  00D35E  0100               	movlb	0	; () banked
 40809  00D360  51BE               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40810  00D362  0101               	movlb	1	; () banked
 40811  00D364  59A4               	subwfb	(_config+3)& (0+255),w,b
 40812  00D366  B0D8               	btfsc	status,0,c
 40813  00D368  D00F               	goto	l2526
 40814                           
 40815                           ; BSR set to: 1
 40816                           ;motor.c: 594: {;motor.c: 595: distance_cw += config.full_circle_in_steps;
 40817  00D36A  51A1               	movf	_config& (0+255),w,b
 40818  00D36C  0100               	movlb	0	; () banked
 40819  00D36E  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40820  00D370  0101               	movlb	1	; () banked
 40821  00D372  51A2               	movf	(_config+1)& (0+255),w,b
 40822  00D374  0100               	movlb	0	; () banked
 40823  00D376  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40824  00D378  0101               	movlb	1	; () banked
 40825  00D37A  51A3               	movf	(_config+2)& (0+255),w,b
 40826  00D37C  0100               	movlb	0	; () banked
 40827  00D37E  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40828  00D380  0101               	movlb	1	; () banked
 40829  00D382  51A4               	movf	(_config+3)& (0+255),w,b
 40830  00D384  0100               	movlb	0	; () banked
 40831  00D386  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40832  00D388                     l2526:
 40833                           
 40834                           ;motor.c: 596: };motor.c: 597: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 40835  00D388  0101               	movlb	1	; () banked
 40836  00D38A  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40837  00D38C  A4D8               	btfss	status,2,c
 40838  00D38E  D023               	goto	l2527
 40839                           
 40840                           ; BSR set to: 1
 40841                           ;motor.c: 598: {;motor.c: 599: distance_cw += config.overshoot_in_steps;
 40842  00D390  51A6               	movf	(_config+5)& (0+255),w,b
 40843  00D392  0100               	movlb	0	; () banked
 40844  00D394  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40845  00D396  0101               	movlb	1	; () banked
 40846  00D398  51A7               	movf	(_config+6)& (0+255),w,b
 40847  00D39A  0100               	movlb	0	; () banked
 40848  00D39C  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40849  00D39E  0E00               	movlw	0
 40850  00D3A0  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40851  00D3A2  0E00               	movlw	0
 40852  00D3A4  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40853                           
 40854                           ;motor.c: 600: overhead_cw += config.overshoot_in_steps;
 40855  00D3A6  0101               	movlb	1	; () banked
 40856  00D3A8  51A6               	movf	(_config+5)& (0+255),w,b
 40857  00D3AA  0100               	movlb	0	; () banked
 40858  00D3AC  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40859  00D3AE  0101               	movlb	1	; () banked
 40860  00D3B0  51A7               	movf	(_config+6)& (0+255),w,b
 40861  00D3B2  0100               	movlb	0	; () banked
 40862  00D3B4  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40863  00D3B6  0E00               	movlw	0
 40864  00D3B8  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40865  00D3BA  0E00               	movlw	0
 40866  00D3BC  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40867                           
 40868                           ;motor.c: 601: overhead_cw += config.overshoot_cost_in_steps;
 40869  00D3BE  0101               	movlb	1	; () banked
 40870  00D3C0  51A8               	movf	(_config+7)& (0+255),w,b
 40871  00D3C2  0100               	movlb	0	; () banked
 40872  00D3C4  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40873  00D3C6  0101               	movlb	1	; () banked
 40874  00D3C8  51A9               	movf	(_config+8)& (0+255),w,b
 40875  00D3CA  0100               	movlb	0	; () banked
 40876  00D3CC  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40877  00D3CE  0E00               	movlw	0
 40878  00D3D0  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40879  00D3D2  0E00               	movlw	0
 40880  00D3D4  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40881  00D3D6                     l2527:
 40882                           
 40883                           ;motor.c: 602: };motor.c: 605: overhead_ccw = 0;
 40884                           
 40885                           ; BSR set to: 0
 40886  00D3D6  0E00               	movlw	0
 40887  00D3D8  0100               	movlb	0	; () banked
 40888  00D3DA  6FB7               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 40889  00D3DC  0E00               	movlw	0
 40890  00D3DE  6FB8               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 40891  00D3E0  0E00               	movlw	0
 40892  00D3E2  6FB9               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 40893  00D3E4  0E00               	movlw	0
 40894  00D3E6  6FBA               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 40895                           
 40896                           ; BSR set to: 0
 40897                           ;motor.c: 606: distance_ccw = os.current_position_in_steps - target_position;
 40898  00D3E8  C0A7  F0AB         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 40899  00D3EC  C0A8  F0AC         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 40900  00D3F0  C0A9  F0AD         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 40901  00D3F4  C0AA  F0AE         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 40902  00D3F8  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40903  00D3FA  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40904  00D3FC  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40905  00D3FE  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40906  00D400  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40907  00D402  0E00               	movlw	0
 40908  00D404  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40909  00D406  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40910  00D408  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40911  00D40A  0101               	movlb	1	; () banked
 40912  00D40C  5178               	movf	(_os+7)& (0+255),w,b	;volatile
 40913  00D40E  0100               	movlb	0	; () banked
 40914  00D410  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40915  00D412  6FBF               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 40916  00D414  0101               	movlb	1	; () banked
 40917  00D416  5179               	movf	(_os+8)& (0+255),w,b	;volatile
 40918  00D418  0100               	movlb	0	; () banked
 40919  00D41A  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40920  00D41C  6FC0               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 40921  00D41E  0101               	movlb	1	; () banked
 40922  00D420  517A               	movf	(_os+9)& (0+255),w,b	;volatile
 40923  00D422  0100               	movlb	0	; () banked
 40924  00D424  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40925  00D426  6FC1               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 40926  00D428  0101               	movlb	1	; () banked
 40927  00D42A  517B               	movf	(_os+10)& (0+255),w,b	;volatile
 40928  00D42C  0100               	movlb	0	; () banked
 40929  00D42E  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40930  00D430  6FC2               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 40931                           
 40932                           ; BSR set to: 0
 40933                           ;motor.c: 607: if(distance_ccw>config.full_circle_in_steps)
 40934  00D432  51BF               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40935  00D434  0101               	movlb	1	; () banked
 40936  00D436  5DA1               	subwf	_config& (0+255),w,b
 40937  00D438  0100               	movlb	0	; () banked
 40938  00D43A  51C0               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40939  00D43C  0101               	movlb	1	; () banked
 40940  00D43E  59A2               	subwfb	(_config+1)& (0+255),w,b
 40941  00D440  0100               	movlb	0	; () banked
 40942  00D442  51C1               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40943  00D444  0101               	movlb	1	; () banked
 40944  00D446  59A3               	subwfb	(_config+2)& (0+255),w,b
 40945  00D448  0100               	movlb	0	; () banked
 40946  00D44A  51C2               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40947  00D44C  0101               	movlb	1	; () banked
 40948  00D44E  59A4               	subwfb	(_config+3)& (0+255),w,b
 40949  00D450  B0D8               	btfsc	status,0,c
 40950  00D452  D00F               	goto	l2528
 40951                           
 40952                           ; BSR set to: 1
 40953                           ;motor.c: 608: {;motor.c: 609: distance_ccw += config.full_circle_in_steps;
 40954  00D454  51A1               	movf	_config& (0+255),w,b
 40955  00D456  0100               	movlb	0	; () banked
 40956  00D458  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40957  00D45A  0101               	movlb	1	; () banked
 40958  00D45C  51A2               	movf	(_config+1)& (0+255),w,b
 40959  00D45E  0100               	movlb	0	; () banked
 40960  00D460  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40961  00D462  0101               	movlb	1	; () banked
 40962  00D464  51A3               	movf	(_config+2)& (0+255),w,b
 40963  00D466  0100               	movlb	0	; () banked
 40964  00D468  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40965  00D46A  0101               	movlb	1	; () banked
 40966  00D46C  51A4               	movf	(_config+3)& (0+255),w,b
 40967  00D46E  0100               	movlb	0	; () banked
 40968  00D470  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40969  00D472                     l2528:
 40970                           
 40971                           ;motor.c: 610: };motor.c: 611: if(os.approach_direction==MOTOR_DIRECTION_CW)
 40972  00D472  0101               	movlb	1	; () banked
 40973  00D474  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 40974  00D476  A4D8               	btfss	status,2,c
 40975  00D478  D023               	goto	l2529
 40976                           
 40977                           ; BSR set to: 1
 40978                           ;motor.c: 612: {;motor.c: 613: distance_ccw += config.overshoot_in_steps;
 40979  00D47A  51A6               	movf	(_config+5)& (0+255),w,b
 40980  00D47C  0100               	movlb	0	; () banked
 40981  00D47E  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 40982  00D480  0101               	movlb	1	; () banked
 40983  00D482  51A7               	movf	(_config+6)& (0+255),w,b
 40984  00D484  0100               	movlb	0	; () banked
 40985  00D486  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 40986  00D488  0E00               	movlw	0
 40987  00D48A  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 40988  00D48C  0E00               	movlw	0
 40989  00D48E  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 40990                           
 40991                           ;motor.c: 614: overhead_ccw += config.overshoot_in_steps;
 40992  00D490  0101               	movlb	1	; () banked
 40993  00D492  51A6               	movf	(_config+5)& (0+255),w,b
 40994  00D494  0100               	movlb	0	; () banked
 40995  00D496  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 40996  00D498  0101               	movlb	1	; () banked
 40997  00D49A  51A7               	movf	(_config+6)& (0+255),w,b
 40998  00D49C  0100               	movlb	0	; () banked
 40999  00D49E  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41000  00D4A0  0E00               	movlw	0
 41001  00D4A2  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41002  00D4A4  0E00               	movlw	0
 41003  00D4A6  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41004                           
 41005                           ;motor.c: 615: overhead_ccw += config.overshoot_cost_in_steps;
 41006  00D4A8  0101               	movlb	1	; () banked
 41007  00D4AA  51A8               	movf	(_config+7)& (0+255),w,b
 41008  00D4AC  0100               	movlb	0	; () banked
 41009  00D4AE  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 41010  00D4B0  0101               	movlb	1	; () banked
 41011  00D4B2  51A9               	movf	(_config+8)& (0+255),w,b
 41012  00D4B4  0100               	movlb	0	; () banked
 41013  00D4B6  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41014  00D4B8  0E00               	movlw	0
 41015  00D4BA  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41016  00D4BC  0E00               	movlw	0
 41017  00D4BE  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41018  00D4C0                     l2529:
 41019                           
 41020                           ;motor.c: 616: };motor.c: 619: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 41021                           
 41022                           ; BSR set to: 0
 41023  00D4C0  0100               	movlb	0	; () banked
 41024  00D4C2  51B7               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 41025  00D4C4  25BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 41026  00D4C6  6FAB               	movwf	??_motor_go_to_steps_position& (0+255),b
 41027  00D4C8  51B8               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 41028  00D4CA  21C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 41029  00D4CC  6FAC               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 41030  00D4CE  51B9               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 41031  00D4D0  21C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 41032  00D4D2  6FAD               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 41033  00D4D4  51BA               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 41034  00D4D6  21C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 41035  00D4D8  6FAE               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 41036  00D4DA  51B3               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 41037  00D4DC  25BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 41038  00D4DE  6FAF               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 41039  00D4E0  51B4               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 41040  00D4E2  21BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 41041  00D4E4  6FB0               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 41042  00D4E6  51B5               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 41043  00D4E8  21BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 41044  00D4EA  6FB1               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 41045  00D4EC  51B6               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 41046  00D4EE  21BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 41047  00D4F0  6FB2               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 41048  00D4F2  51AB               	movf	??_motor_go_to_steps_position& (0+255),w,b
 41049  00D4F4  5DAF               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 41050  00D4F6  51AC               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 41051  00D4F8  59B0               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 41052  00D4FA  51AD               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 41053  00D4FC  59B1               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 41054  00D4FE  51AE               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 41055  00D500  59B2               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 41056  00D502  B0D8               	btfsc	status,0,c
 41057  00D504  D039               	goto	l2530
 41058                           
 41059                           ; BSR set to: 0
 41060                           ;motor.c: 620: {;motor.c: 621: if(os.approach_direction==MOTOR_DIRECTION_CW)
 41061  00D506  0101               	movlb	1	; () banked
 41062  00D508  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 41063  00D50A  A4D8               	btfss	status,2,c
 41064  00D50C  D011               	goto	l2531
 41065                           
 41066                           ; BSR set to: 1
 41067                           ;motor.c: 622: {;motor.c: 624: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          );
 41068  00D50E  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41069  00D512  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41070  00D516  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41071  00D51A  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41072  00D51E  0E00               	movlw	0
 41073  00D520  0100               	movlb	0	; () banked
 41074  00D522  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41075  00D524  0E00               	movlw	0
 41076  00D526  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41077  00D528  0E01               	movlw	1
 41078  00D52A  EC61  F097         	call	_motor_schedule_command
 41079                           
 41080                           ;motor.c: 625: }
 41081  00D52E  0012               	return	
 41082  00D530                     l2531:
 41083                           
 41084                           ;motor.c: 626: else;motor.c: 627: {;motor.c: 629: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0);
 41085  00D530  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41086  00D534  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41087  00D538  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41088  00D53C  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41089  00D540  0E00               	movlw	0
 41090  00D542  0100               	movlb	0	; () banked
 41091  00D544  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41092  00D546  0E00               	movlw	0
 41093  00D548  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41094  00D54A  0E01               	movlw	1
 41095  00D54C  EC61  F097         	call	_motor_schedule_command
 41096                           
 41097                           ;motor.c: 630: if(config.overshoot_in_steps!=0)
 41098  00D550  0101               	movlb	1	; () banked
 41099  00D552  51A6               	movf	(_config+5)& (0+255),w,b
 41100  00D554  11A7               	iorwf	(_config+6)& (0+255),w,b
 41101  00D556  B4D8               	btfsc	status,2,c
 41102  00D558  0012               	return	
 41103                           
 41104                           ; BSR set to: 1
 41105                           ;motor.c: 631: {;motor.c: 632: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0);
 41106  00D55A  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 41107  00D55E  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41108  00D562  0100               	movlb	0	; () banked
 41109  00D564  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41110  00D566  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41111  00D568  0E00               	movlw	0
 41112  00D56A  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41113  00D56C  0E00               	movlw	0
 41114  00D56E  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41115  00D570  0EFF               	movlw	255
 41116  00D572  EC61  F097         	call	_motor_schedule_command
 41117                           
 41118                           ;motor.c: 633: };motor.c: 634: };motor.c: 635: }
 41119  00D576  0012               	return	
 41120  00D578                     l2530:
 41121                           
 41122                           ;motor.c: 636: else;motor.c: 637: {;motor.c: 638: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 41123  00D578  0101               	movlb	1	; () banked
 41124  00D57A  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 41125  00D57C  A4D8               	btfss	status,2,c
 41126  00D57E  D011               	goto	l2535
 41127                           
 41128                           ; BSR set to: 1
 41129                           ;motor.c: 639: {;motor.c: 641: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0);
 41130  00D580  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41131  00D584  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41132  00D588  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41133  00D58C  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41134  00D590  0E00               	movlw	0
 41135  00D592  0100               	movlb	0	; () banked
 41136  00D594  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41137  00D596  0E00               	movlw	0
 41138  00D598  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41139  00D59A  0EFF               	movlw	255
 41140  00D59C  EC61  F097         	call	_motor_schedule_command
 41141                           
 41142                           ;motor.c: 642: }
 41143  00D5A0  0012               	return	
 41144  00D5A2                     l2535:
 41145                           
 41146                           ;motor.c: 643: else;motor.c: 644: {;motor.c: 646: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0);
 41147  00D5A2  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41148  00D5A6  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41149  00D5AA  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41150  00D5AE  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41151  00D5B2  0E00               	movlw	0
 41152  00D5B4  0100               	movlb	0	; () banked
 41153  00D5B6  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41154  00D5B8  0E00               	movlw	0
 41155  00D5BA  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41156  00D5BC  0EFF               	movlw	255
 41157  00D5BE  EC61  F097         	call	_motor_schedule_command
 41158                           
 41159                           ;motor.c: 647: if(config.overshoot_in_steps!=0)
 41160  00D5C2  0101               	movlb	1	; () banked
 41161  00D5C4  51A6               	movf	(_config+5)& (0+255),w,b
 41162  00D5C6  11A7               	iorwf	(_config+6)& (0+255),w,b
 41163  00D5C8  B4D8               	btfsc	status,2,c
 41164  00D5CA  0012               	return	
 41165                           
 41166                           ; BSR set to: 1
 41167                           ;motor.c: 648: {;motor.c: 649: motor_schedule_command(MOTOR_DIRECTION_CW, config.oversho
      +                          ot_in_steps, 0);
 41168  00D5CC  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 41169  00D5D0  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41170  00D5D4  0100               	movlb	0	; () banked
 41171  00D5D6  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41172  00D5D8  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41173  00D5DA  0E00               	movlw	0
 41174  00D5DC  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41175  00D5DE  0E00               	movlw	0
 41176  00D5E0  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41177  00D5E2  0E01               	movlw	1
 41178  00D5E4  EC61  F097         	call	_motor_schedule_command
 41179  00D5E8  0012               	return	
 41180  00D5EA                     __end_of_motor_go_to_steps_position:
 41181                           	opt stack 0
 41182                           tosu	equ	0xFFF
 41183                           tosh	equ	0xFFE
 41184                           tosl	equ	0xFFD
 41185                           pclath	equ	0xFFA
 41186                           tblptru	equ	0xFF8
 41187                           tblptrh	equ	0xFF7
 41188                           tblptrl	equ	0xFF6
 41189                           tablat	equ	0xFF5
 41190                           prodh	equ	0xFF4
 41191                           prodl	equ	0xFF3
 41192                           intcon	equ	0xFF2
 41193                           indf0	equ	0xFEF
 41194                           postinc0	equ	0xFEE
 41195                           fsr0h	equ	0xFEA
 41196                           fsr0l	equ	0xFE9
 41197                           wreg	equ	0xFE8
 41198                           indf1	equ	0xFE7
 41199                           postinc1	equ	0xFE6
 41200                           postdec1	equ	0xFE5
 41201                           plusw1	equ	0xFE3
 41202                           fsr1h	equ	0xFE2
 41203                           fsr1l	equ	0xFE1
 41204                           indf2	equ	0xFDF
 41205                           postinc2	equ	0xFDE
 41206                           postdec2	equ	0xFDD
 41207                           plusw2	equ	0xFDB
 41208                           fsr2h	equ	0xFDA
 41209                           fsr2l	equ	0xFD9
 41210                           status	equ	0xFD8
 41211                           
 41212 ;; *************** function _motor_clear_command_cue *****************
 41213 ;; Defined at:
 41214 ;;		line 153 in file "motor.c"
 41215 ;; Parameters:    Size  Location     Type
 41216 ;;		None
 41217 ;; Auto vars:     Size  Location     Type
 41218 ;;		None
 41219 ;; Return value:  Size  Location     Type
 41220 ;;                  1    wreg      void 
 41221 ;; Registers used:
 41222 ;;		None
 41223 ;; Tracked objects:
 41224 ;;		On entry : 0/0
 41225 ;;		On exit  : 0/0
 41226 ;;		Unchanged: 0/0
 41227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41232 ;;Total ram usage:        0 bytes
 41233 ;; Hardware stack levels used:    1
 41234 ;; Hardware stack levels required when called:   10
 41235 ;; This function calls:
 41236 ;;		Nothing
 41237 ;; This function is called by:
 41238 ;;		__parse_command_short
 41239 ;; This function uses a non-reentrant model
 41240 ;;
 41241                           
 41242                           	psect	text169
 41243  01596A                     __ptext169:
 41244                           	opt stack 0
 41245  01596A                     _motor_clear_command_cue:
 41246                           	opt stack 17
 41247                           
 41248                           ;motor.c: 156: motor_cue_write_index = motor_cue_read_index;
 41249                           
 41250                           ;incstack = 0
 41251  01596A  C158  F157         	movff	_motor_cue_read_index,_motor_cue_write_index
 41252  01596E  0012               	return		;funcret
 41253  015970                     __end_of_motor_clear_command_cue:
 41254                           	opt stack 0
 41255                           tosu	equ	0xFFF
 41256                           tosh	equ	0xFFE
 41257                           tosl	equ	0xFFD
 41258                           pclath	equ	0xFFA
 41259                           tblptru	equ	0xFF8
 41260                           tblptrh	equ	0xFF7
 41261                           tblptrl	equ	0xFF6
 41262                           tablat	equ	0xFF5
 41263                           prodh	equ	0xFF4
 41264                           prodl	equ	0xFF3
 41265                           intcon	equ	0xFF2
 41266                           indf0	equ	0xFEF
 41267                           postinc0	equ	0xFEE
 41268                           fsr0h	equ	0xFEA
 41269                           fsr0l	equ	0xFE9
 41270                           wreg	equ	0xFE8
 41271                           indf1	equ	0xFE7
 41272                           postinc1	equ	0xFE6
 41273                           postdec1	equ	0xFE5
 41274                           plusw1	equ	0xFE3
 41275                           fsr1h	equ	0xFE2
 41276                           fsr1l	equ	0xFE1
 41277                           indf2	equ	0xFDF
 41278                           postinc2	equ	0xFDE
 41279                           postdec2	equ	0xFDD
 41280                           plusw2	equ	0xFDB
 41281                           fsr2h	equ	0xFDA
 41282                           fsr2l	equ	0xFD9
 41283                           status	equ	0xFD8
 41284                           
 41285 ;; *************** function __parse_command_long *****************
 41286 ;; Defined at:
 41287 ;;		line 434 in file "api.c"
 41288 ;; Parameters:    Size  Location     Type
 41289 ;;  data            2   83[BANK0 ] PTR unsigned char 
 41290 ;;		 -> ReceivedDataBuffer(64), 
 41291 ;;  out_buffer      2   85[BANK0 ] PTR unsigned char 
 41292 ;;		 -> ToSendDataBuffer(64), 
 41293 ;;  out_idx_ptr     2   87[BANK0 ] PTR unsigned char 
 41294 ;;		 -> api_parse@out_idx(1), 
 41295 ;; Auto vars:     Size  Location     Type
 41296 ;;  length          1   89[BANK0 ] unsigned char 
 41297 ;; Return value:  Size  Location     Type
 41298 ;;                  1    wreg      unsigned char 
 41299 ;; Registers used:
 41300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41301 ;; Tracked objects:
 41302 ;;		On entry : 0/0
 41303 ;;		On exit  : 0/0
 41304 ;;		Unchanged: 0/0
 41305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41306 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41309 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41310 ;;Total ram usage:        7 bytes
 41311 ;; Hardware stack levels used:    1
 41312 ;; Hardware stack levels required when called:   15
 41313 ;; This function calls:
 41314 ;;		__parse_jump_steps
 41315 ;;		__parse_set_manual_speed
 41316 ;; This function is called by:
 41317 ;;		_api_parse
 41318 ;; This function uses a non-reentrant model
 41319 ;;
 41320                           
 41321                           	psect	text170
 41322  0142EE                     __ptext170:
 41323                           	opt stack 0
 41324  0142EE                     __parse_command_long:
 41325                           	opt stack 13
 41326                           
 41327                           ;api.c: 436: uint8_t length = 65;
 41328                           
 41329                           ;incstack = 0
 41330  0142EE  0E41               	movlw	65
 41331  0142F0  0100               	movlb	0	; () banked
 41332  0142F2  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41333                           
 41334                           ;api.c: 438: switch(data[0])
 41335  0142F4  D020               	goto	l2317
 41336  0142F6                     
 41337                           ; BSR set to: 0
 41338                           ;api.c: 445: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 41339                           
 41340                           ; BSR set to: 0
 41341  0142F6  C0B3  F0A7         	movff	__parse_command_long@data,__parse_jump_steps@data
 41342  0142FA  C0B4  F0A8         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 41343  0142FE  C0B5  F0A9         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 41344  014302  C0B6  F0AA         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 41345  014306  C0B7  F0AB         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 41346  01430A  C0B8  F0AC         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 41347  01430E  EC84  F07E         	call	__parse_jump_steps	;wreg free
 41348  014312  D00E               	goto	L63
 41349  014314                     
 41350                           ; BSR set to: 0
 41351                           ;api.c: 449: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 41352                           
 41353                           ; BSR set to: 0
 41354  014314  C0B3  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 41355  014318  C0B4  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 41356  01431C  C0B5  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 41357  014320  C0B6  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 41358  014324  C0B7  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 41359  014328  C0B8  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 41360  01432C  ECCD  F09C         	call	__parse_set_manual_speed	;wreg free
 41361  014330                     L63:
 41362  014330  0100               	movlb	0	; () banked
 41363  014332  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41364                           
 41365                           ; BSR set to: 0
 41366                           ;api.c: 451: }
 41367                           
 41368                           ;api.c: 450: break;
 41369  014334  D00B               	goto	l2319
 41370  014336                     l2317:
 41371                           
 41372                           ; BSR set to: 0
 41373                           
 41374                           ; BSR set to: 0
 41375  014336  C0B3  FFD9         	movff	__parse_command_long@data,fsr2l
 41376  01433A  C0B4  FFDA         	movff	__parse_command_long@data+1,fsr2h
 41377  01433E  50DF               	movf	indf2,w,c
 41378                           
 41379                           ; Switch size 1, requested type "space"
 41380                           ; Number of cases is 2, Range of values is 144 to 145
 41381                           ; switch strategies available:
 41382                           ; Name         Instructions Cycles
 41383                           ; simple_byte            7     4 (average)
 41384                           ;	Chosen strategy is simple_byte
 41385  014340  0A90               	xorlw	144	; case 144
 41386  014342  B4D8               	btfsc	status,2,c
 41387  014344  D7D8               	goto	l2318
 41388  014346  0A01               	xorlw	1	; case 145
 41389  014348  B4D8               	btfsc	status,2,c
 41390  01434A  D7E4               	goto	l2320
 41391  01434C                     l2319:
 41392                           
 41393                           ; BSR set to: 0
 41394                           ;api.c: 455: return length;
 41395                           
 41396                           ; BSR set to: 0
 41397  01434C  51B9               	movf	__parse_command_long@length& (0+255),w,b
 41398  01434E  0012               	return	
 41399  014350                     __end_of__parse_command_long:
 41400                           	opt stack 0
 41401                           tosu	equ	0xFFF
 41402                           tosh	equ	0xFFE
 41403                           tosl	equ	0xFFD
 41404                           pclath	equ	0xFFA
 41405                           tblptru	equ	0xFF8
 41406                           tblptrh	equ	0xFF7
 41407                           tblptrl	equ	0xFF6
 41408                           tablat	equ	0xFF5
 41409                           prodh	equ	0xFF4
 41410                           prodl	equ	0xFF3
 41411                           intcon	equ	0xFF2
 41412                           indf0	equ	0xFEF
 41413                           postinc0	equ	0xFEE
 41414                           fsr0h	equ	0xFEA
 41415                           fsr0l	equ	0xFE9
 41416                           wreg	equ	0xFE8
 41417                           indf1	equ	0xFE7
 41418                           postinc1	equ	0xFE6
 41419                           postdec1	equ	0xFE5
 41420                           plusw1	equ	0xFE3
 41421                           fsr1h	equ	0xFE2
 41422                           fsr1l	equ	0xFE1
 41423                           indf2	equ	0xFDF
 41424                           postinc2	equ	0xFDE
 41425                           postdec2	equ	0xFDD
 41426                           plusw2	equ	0xFDB
 41427                           fsr2h	equ	0xFDA
 41428                           fsr2l	equ	0xFD9
 41429                           status	equ	0xFD8
 41430                           
 41431 ;; *************** function __parse_set_manual_speed *****************
 41432 ;; Defined at:
 41433 ;;		line 516 in file "api.c"
 41434 ;; Parameters:    Size  Location     Type
 41435 ;;  data            2    4[BANK0 ] PTR unsigned char 
 41436 ;;		 -> ReceivedDataBuffer(64), 
 41437 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 41438 ;;		 -> ToSendDataBuffer(64), 
 41439 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 41440 ;;		 -> api_parse@out_idx(1), 
 41441 ;; Auto vars:     Size  Location     Type
 41442 ;;  new_speed       2   11[BANK0 ] unsigned int 
 41443 ;; Return value:  Size  Location     Type
 41444 ;;                  1    wreg      unsigned char 
 41445 ;; Registers used:
 41446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41447 ;; Tracked objects:
 41448 ;;		On entry : 0/0
 41449 ;;		On exit  : 0/0
 41450 ;;		Unchanged: 0/0
 41451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41452 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41454 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41455 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41456 ;;Total ram usage:        9 bytes
 41457 ;; Hardware stack levels used:    1
 41458 ;; Hardware stack levels required when called:   12
 41459 ;; This function calls:
 41460 ;;		_motor_set_manual_speed
 41461 ;; This function is called by:
 41462 ;;		__parse_command_long
 41463 ;; This function uses a non-reentrant model
 41464 ;;
 41465                           
 41466                           	psect	text171
 41467  01399A                     __ptext171:
 41468                           	opt stack 0
 41469  01399A                     __parse_set_manual_speed:
 41470                           	opt stack 15
 41471                           
 41472                           ;api.c: 520: uint16_t new_speed;;api.c: 522: new_speed = data[1];
 41473                           
 41474                           ; BSR set to: 0
 41475                           ;incstack = 0
 41476  01399A  0100               	movlb	0	; () banked
 41477  01399C  EE20 F001          	lfsr	2,1
 41478  0139A0  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41479  0139A2  26D9               	addwf	fsr2l,f,c
 41480  0139A4  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41481  0139A6  22DA               	addwfc	fsr2h,f,c
 41482  0139A8  50DF               	movf	indf2,w,c
 41483  0139AA  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41484  0139AC  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41485  0139AE  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 41486  0139B0  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41487                           
 41488                           ; BSR set to: 0
 41489                           ;api.c: 523: new_speed <<= 8;
 41490  0139B2  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 41491  0139B4  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41492  0139B6  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 41493                           
 41494                           ; BSR set to: 0
 41495                           ;api.c: 524: new_speed |= data[2];
 41496  0139B8  EE20 F002          	lfsr	2,2
 41497  0139BC  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41498  0139BE  26D9               	addwf	fsr2l,f,c
 41499  0139C0  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41500  0139C2  22DA               	addwfc	fsr2h,f,c
 41501  0139C4  50DF               	movf	indf2,w,c
 41502  0139C6  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41503  0139C8  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41504  0139CA  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 41505                           
 41506                           ; BSR set to: 0
 41507                           ;api.c: 526: motor_set_manual_speed(new_speed);
 41508  0139CC  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 41509  0139D0  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 41510  0139D4  EC46  F0A6         	call	_motor_set_manual_speed	;wreg free
 41511                           
 41512                           ;api.c: 529: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 41513  0139D8  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41514  0139DC  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41515  0139E0  50DF               	movf	indf2,w,c
 41516  0139E2  B4D8               	btfsc	status,2,c
 41517  0139E4  D01A               	goto	l2330
 41518  0139E6  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41519  0139EA  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41520  0139EE  0E3F               	movlw	63
 41521  0139F0  60DF               	cpfslt	indf2,c
 41522  0139F2  D013               	goto	l2330
 41523                           
 41524                           ;api.c: 530: {;api.c: 531: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 41525  0139F4  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41526  0139F8  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41527  0139FC  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 41528  013A00  0E01               	movlw	1
 41529  013A02  26DF               	addwf	indf2,f,c
 41530  013A04  0100               	movlb	0	; () banked
 41531  013A06  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41532  013A08  0D01               	mullw	1
 41533  013A0A  50F3               	movf	prodl,w,c
 41534  013A0C  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 41535  013A0E  6ED9               	movwf	fsr2l,c
 41536  013A10  50F4               	movf	prodh,w,c
 41537  013A12  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 41538  013A14  6EDA               	movwf	fsr2h,c
 41539  013A16  0E91               	movlw	145
 41540  013A18  6EDF               	movwf	indf2,c
 41541  013A1A                     l2330:
 41542                           
 41543                           ;api.c: 532: };api.c: 534: return 3;
 41544                           
 41545                           ; BSR set to: 0
 41546  013A1A  0E03               	movlw	3
 41547  013A1C  0012               	return	
 41548  013A1E                     __end_of__parse_set_manual_speed:
 41549                           	opt stack 0
 41550                           tosu	equ	0xFFF
 41551                           tosh	equ	0xFFE
 41552                           tosl	equ	0xFFD
 41553                           pclath	equ	0xFFA
 41554                           tblptru	equ	0xFF8
 41555                           tblptrh	equ	0xFF7
 41556                           tblptrl	equ	0xFF6
 41557                           tablat	equ	0xFF5
 41558                           prodh	equ	0xFF4
 41559                           prodl	equ	0xFF3
 41560                           intcon	equ	0xFF2
 41561                           indf0	equ	0xFEF
 41562                           postinc0	equ	0xFEE
 41563                           fsr0h	equ	0xFEA
 41564                           fsr0l	equ	0xFE9
 41565                           wreg	equ	0xFE8
 41566                           indf1	equ	0xFE7
 41567                           postinc1	equ	0xFE6
 41568                           postdec1	equ	0xFE5
 41569                           plusw1	equ	0xFE3
 41570                           fsr1h	equ	0xFE2
 41571                           fsr1l	equ	0xFE1
 41572                           indf2	equ	0xFDF
 41573                           postinc2	equ	0xFDE
 41574                           postdec2	equ	0xFDD
 41575                           plusw2	equ	0xFDB
 41576                           fsr2h	equ	0xFDA
 41577                           fsr2l	equ	0xFD9
 41578                           status	equ	0xFD8
 41579                           
 41580 ;; *************** function _motor_set_manual_speed *****************
 41581 ;; Defined at:
 41582 ;;		line 549 in file "motor.c"
 41583 ;; Parameters:    Size  Location     Type
 41584 ;;  new_speed       2    2[BANK0 ] unsigned int 
 41585 ;; Auto vars:     Size  Location     Type
 41586 ;;		None
 41587 ;; Return value:  Size  Location     Type
 41588 ;;                  1    wreg      void 
 41589 ;; Registers used:
 41590 ;;		wreg, status,2, status,0, cstack
 41591 ;; Tracked objects:
 41592 ;;		On entry : 0/0
 41593 ;;		On exit  : 0/0
 41594 ;;		Unchanged: 0/0
 41595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41596 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41599 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41600 ;;Total ram usage:        2 bytes
 41601 ;; Hardware stack levels used:    1
 41602 ;; Hardware stack levels required when called:   11
 41603 ;; This function calls:
 41604 ;;		_motor_change_speed
 41605 ;; This function is called by:
 41606 ;;		__parse_set_manual_speed
 41607 ;;		_motor_increase_manual_speed
 41608 ;;		_motor_decrease_manual_speed
 41609 ;; This function uses a non-reentrant model
 41610 ;;
 41611                           
 41612                           	psect	text172
 41613  014C8C                     __ptext172:
 41614                           	opt stack 0
 41615  014C8C                     _motor_set_manual_speed:
 41616                           	opt stack 17
 41617                           
 41618                           ;motor.c: 551: if(new_speed>config.maximum_speed_manual)
 41619                           
 41620                           ;incstack = 0
 41621  014C8C  0100               	movlb	0	; () banked
 41622  014C8E  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 41623  014C90  0101               	movlb	1	; () banked
 41624  014C92  5DB4               	subwf	(_config+19)& (0+255),w,b
 41625  014C94  0100               	movlb	0	; () banked
 41626  014C96  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41627  014C98  0101               	movlb	1	; () banked
 41628  014C9A  59B5               	subwfb	(_config+20)& (0+255),w,b
 41629  014C9C  B0D8               	btfsc	status,0,c
 41630  014C9E  D005               	goto	l2513
 41631                           
 41632                           ; BSR set to: 1
 41633                           ;motor.c: 552: {;motor.c: 553: os.manual_speed = config.maximum_speed_manual;
 41634  014CA0  C1B4  F194         	movff	_config+19,_os+35	;volatile
 41635  014CA4  C1B5  F195         	movff	_config+20,_os+36	;volatile
 41636                           
 41637                           ;motor.c: 554: }
 41638  014CA8  D012               	goto	l2516
 41639  014CAA                     l2513:
 41640                           
 41641                           ; BSR set to: 1
 41642                           ;motor.c: 555: else if(new_speed<config.minimum_speed)
 41643                           
 41644                           ; BSR set to: 1
 41645  014CAA  51AA               	movf	(_config+9)& (0+255),w,b
 41646  014CAC  0100               	movlb	0	; () banked
 41647  014CAE  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 41648  014CB0  0101               	movlb	1	; () banked
 41649  014CB2  51AB               	movf	(_config+10)& (0+255),w,b
 41650  014CB4  0100               	movlb	0	; () banked
 41651  014CB6  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41652  014CB8  B0D8               	btfsc	status,0,c
 41653  014CBA  D005               	goto	l2515
 41654                           
 41655                           ; BSR set to: 0
 41656                           ;motor.c: 556: {;motor.c: 557: os.manual_speed = config.minimum_speed;
 41657  014CBC  C1AA  F194         	movff	_config+9,_os+35	;volatile
 41658  014CC0  C1AB  F195         	movff	_config+10,_os+36	;volatile
 41659                           
 41660                           ;motor.c: 558: }
 41661  014CC4  D004               	goto	l2516
 41662  014CC6                     l2515:
 41663                           
 41664                           ; BSR set to: 0
 41665                           ;motor.c: 559: else;motor.c: 560: {;motor.c: 561: os.manual_speed = new_speed;
 41666  014CC6  C062  F194         	movff	motor_set_manual_speed@new_speed,_os+35	;volatile
 41667  014CCA  C063  F195         	movff	motor_set_manual_speed@new_speed+1,_os+36	;volatile
 41668  014CCE                     l2516:
 41669                           
 41670                           ;motor.c: 562: };motor.c: 563: motor_change_speed(new_speed);
 41671                           
 41672                           ; BSR set to: 0
 41673                           
 41674                           ; BSR set to: 0
 41675  014CCE  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 41676  014CD2  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 41677  014CD6  EC9C  F0AC         	call	_motor_change_speed	;wreg free
 41678  014CDA  0012               	return		;funcret
 41679  014CDC                     __end_of_motor_set_manual_speed:
 41680                           	opt stack 0
 41681                           tosu	equ	0xFFF
 41682                           tosh	equ	0xFFE
 41683                           tosl	equ	0xFFD
 41684                           pclath	equ	0xFFA
 41685                           tblptru	equ	0xFF8
 41686                           tblptrh	equ	0xFF7
 41687                           tblptrl	equ	0xFF6
 41688                           tablat	equ	0xFF5
 41689                           prodh	equ	0xFF4
 41690                           prodl	equ	0xFF3
 41691                           intcon	equ	0xFF2
 41692                           indf0	equ	0xFEF
 41693                           postinc0	equ	0xFEE
 41694                           fsr0h	equ	0xFEA
 41695                           fsr0l	equ	0xFE9
 41696                           wreg	equ	0xFE8
 41697                           indf1	equ	0xFE7
 41698                           postinc1	equ	0xFE6
 41699                           postdec1	equ	0xFE5
 41700                           plusw1	equ	0xFE3
 41701                           fsr1h	equ	0xFE2
 41702                           fsr1l	equ	0xFE1
 41703                           indf2	equ	0xFDF
 41704                           postinc2	equ	0xFDE
 41705                           postdec2	equ	0xFDD
 41706                           plusw2	equ	0xFDB
 41707                           fsr2h	equ	0xFDA
 41708                           fsr2l	equ	0xFD9
 41709                           status	equ	0xFD8
 41710                           
 41711 ;; *************** function _motor_change_speed *****************
 41712 ;; Defined at:
 41713 ;;		line 566 in file "motor.c"
 41714 ;; Parameters:    Size  Location     Type
 41715 ;;  new_speed       2    0[BANK0 ] unsigned int 
 41716 ;; Auto vars:     Size  Location     Type
 41717 ;;		None
 41718 ;; Return value:  Size  Location     Type
 41719 ;;                  1    wreg      void 
 41720 ;; Registers used:
 41721 ;;		None
 41722 ;; Tracked objects:
 41723 ;;		On entry : 0/0
 41724 ;;		On exit  : 0/0
 41725 ;;		Unchanged: 0/0
 41726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41727 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41731 ;;Total ram usage:        2 bytes
 41732 ;; Hardware stack levels used:    1
 41733 ;; Hardware stack levels required when called:   10
 41734 ;; This function calls:
 41735 ;;		Nothing
 41736 ;; This function is called by:
 41737 ;;		_motor_set_manual_speed
 41738 ;;		_encoder_statemachine
 41739 ;; This function uses a non-reentrant model
 41740 ;;
 41741                           
 41742                           	psect	text173
 41743  015938                     __ptext173:
 41744                           	opt stack 0
 41745  015938                     _motor_change_speed:
 41746                           	opt stack 17
 41747                           
 41748                           ;motor.c: 568: motor_maximum_speed = new_speed;
 41749                           
 41750                           ;incstack = 0
 41751  015938  C060  F13F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 41752  01593C  C061  F140         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 41753  015940  0012               	return		;funcret
 41754  015942                     __end_of_motor_change_speed:
 41755                           	opt stack 0
 41756                           tosu	equ	0xFFF
 41757                           tosh	equ	0xFFE
 41758                           tosl	equ	0xFFD
 41759                           pclath	equ	0xFFA
 41760                           tblptru	equ	0xFF8
 41761                           tblptrh	equ	0xFF7
 41762                           tblptrl	equ	0xFF6
 41763                           tablat	equ	0xFF5
 41764                           prodh	equ	0xFF4
 41765                           prodl	equ	0xFF3
 41766                           intcon	equ	0xFF2
 41767                           indf0	equ	0xFEF
 41768                           postinc0	equ	0xFEE
 41769                           fsr0h	equ	0xFEA
 41770                           fsr0l	equ	0xFE9
 41771                           wreg	equ	0xFE8
 41772                           indf1	equ	0xFE7
 41773                           postinc1	equ	0xFE6
 41774                           postdec1	equ	0xFE5
 41775                           plusw1	equ	0xFE3
 41776                           fsr1h	equ	0xFE2
 41777                           fsr1l	equ	0xFE1
 41778                           indf2	equ	0xFDF
 41779                           postinc2	equ	0xFDE
 41780                           postdec2	equ	0xFDD
 41781                           plusw2	equ	0xFDB
 41782                           fsr2h	equ	0xFDA
 41783                           fsr2l	equ	0xFD9
 41784                           status	equ	0xFD8
 41785                           
 41786 ;; *************** function __parse_jump_steps *****************
 41787 ;; Defined at:
 41788 ;;		line 481 in file "api.c"
 41789 ;; Parameters:    Size  Location     Type
 41790 ;;  data            2   71[BANK0 ] PTR unsigned char 
 41791 ;;		 -> ReceivedDataBuffer(64), 
 41792 ;;  out_buffer      2   73[BANK0 ] PTR unsigned char 
 41793 ;;		 -> ToSendDataBuffer(64), 
 41794 ;;  out_idx_ptr     2   75[BANK0 ] PTR unsigned char 
 41795 ;;		 -> api_parse@out_idx(1), 
 41796 ;; Auto vars:     Size  Location     Type
 41797 ;;  number_of_st    4   79[BANK0 ] long 
 41798 ;;  return_value    1   78[BANK0 ] unsigned char 
 41799 ;; Return value:  Size  Location     Type
 41800 ;;                  1    wreg      unsigned char 
 41801 ;; Registers used:
 41802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41803 ;; Tracked objects:
 41804 ;;		On entry : 0/0
 41805 ;;		On exit  : 0/0
 41806 ;;		Unchanged: 0/0
 41807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41808 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41809 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41811 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41812 ;;Total ram usage:       12 bytes
 41813 ;; Hardware stack levels used:    1
 41814 ;; Hardware stack levels required when called:   14
 41815 ;; This function calls:
 41816 ;;		_motor_schedule_command
 41817 ;; This function is called by:
 41818 ;;		__parse_command_long
 41819 ;; This function uses a non-reentrant model
 41820 ;;
 41821                           
 41822                           	psect	text174
 41823  00FD08                     __ptext174:
 41824                           	opt stack 0
 41825  00FD08                     __parse_jump_steps:
 41826                           	opt stack 13
 41827                           
 41828                           ;api.c: 485: uint8_t return_value;;api.c: 486: int32_t number_of_steps;;api.c: 488: numb
      +                          er_of_steps = data[1];
 41829                           
 41830                           ;incstack = 0
 41831  00FD08  0100               	movlb	0	; () banked
 41832  00FD0A  EE20 F001          	lfsr	2,1
 41833  00FD0E  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41834  00FD10  26D9               	addwf	fsr2l,f,c
 41835  00FD12  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41836  00FD14  22DA               	addwfc	fsr2h,f,c
 41837  00FD16  50DF               	movf	indf2,w,c
 41838  00FD18  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41839  00FD1A  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41840  00FD1C  6FAF               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 41841  00FD1E  6BB0               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 41842  00FD20  6BB1               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 41843  00FD22  6BB2               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 41844                           
 41845                           ; BSR set to: 0
 41846                           ;api.c: 489: number_of_steps <<= 8;
 41847  00FD24  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41848  00FD28  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41849  00FD2C  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41850  00FD30  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41851                           
 41852                           ; BSR set to: 0
 41853                           ;api.c: 490: number_of_steps |= data[2];
 41854  00FD32  EE20 F002          	lfsr	2,2
 41855  00FD36  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41856  00FD38  26D9               	addwf	fsr2l,f,c
 41857  00FD3A  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41858  00FD3C  22DA               	addwfc	fsr2h,f,c
 41859  00FD3E  50DF               	movf	indf2,w,c
 41860  00FD40  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41861  00FD42  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41862  00FD44  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41863                           
 41864                           ;api.c: 491: number_of_steps <<= 8;
 41865  00FD46  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41866  00FD4A  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41867  00FD4E  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41868  00FD52  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41869                           
 41870                           ; BSR set to: 0
 41871                           ;api.c: 492: number_of_steps |= data[3];
 41872  00FD54  EE20 F003          	lfsr	2,3
 41873  00FD58  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41874  00FD5A  26D9               	addwf	fsr2l,f,c
 41875  00FD5C  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41876  00FD5E  22DA               	addwfc	fsr2h,f,c
 41877  00FD60  50DF               	movf	indf2,w,c
 41878  00FD62  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41879  00FD64  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41880  00FD66  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41881                           
 41882                           ; BSR set to: 0
 41883                           ;api.c: 493: number_of_steps <<= 8;
 41884  00FD68  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41885  00FD6C  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41886  00FD70  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41887  00FD74  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41888                           
 41889                           ;api.c: 494: number_of_steps |= data[4];
 41890  00FD76  EE20 F004          	lfsr	2,4
 41891  00FD7A  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41892  00FD7C  26D9               	addwf	fsr2l,f,c
 41893  00FD7E  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41894  00FD80  22DA               	addwfc	fsr2h,f,c
 41895  00FD82  50DF               	movf	indf2,w,c
 41896  00FD84  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41897  00FD86  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41898  00FD88  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41899                           
 41900                           ; BSR set to: 0
 41901                           ;api.c: 496: if(number_of_steps>0)
 41902  00FD8A  BFB2               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 41903  00FD8C  D017               	goto	l2324
 41904  00FD8E  51B2               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 41905  00FD90  11B1               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 41906  00FD92  11B0               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 41907  00FD94  E103               	bnz	u13700
 41908  00FD96  05AF               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 41909  00FD98  A0D8               	btfss	status,0,c
 41910  00FD9A  D010               	goto	l2324
 41911  00FD9C                     u13700:
 41912                           
 41913                           ; BSR set to: 0
 41914                           ;api.c: 497: {;api.c: 498: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0);
 41915  00FD9C  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41916  00FDA0  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41917  00FDA4  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41918  00FDA8  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41919  00FDAC  0E00               	movlw	0
 41920  00FDAE  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41921  00FDB0  0E00               	movlw	0
 41922  00FDB2  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41923  00FDB4  0E01               	movlw	1
 41924  00FDB6  EC61  F097         	call	_motor_schedule_command
 41925  00FDBA  D017               	goto	L64
 41926  00FDBC                     l2324:
 41927                           
 41928                           ; BSR set to: 0
 41929                           ;api.c: 500: else;api.c: 501: {;api.c: 502: number_of_steps = -number_of_steps;
 41930                           
 41931                           ; BSR set to: 0
 41932  00FDBC  1FB2               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41933  00FDBE  1FB1               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41934  00FDC0  1FB0               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41935  00FDC2  6DAF               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 41936  00FDC4  0E00               	movlw	0
 41937  00FDC6  23B0               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41938  00FDC8  23B1               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41939  00FDCA  23B2               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41940                           
 41941                           ; BSR set to: 0
 41942                           ;api.c: 503: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0);
 41943  00FDCC  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41944  00FDD0  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41945  00FDD4  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41946  00FDD8  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41947  00FDDC  0E00               	movlw	0
 41948  00FDDE  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41949  00FDE0  0E00               	movlw	0
 41950  00FDE2  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41951  00FDE4  0EFF               	movlw	255
 41952  00FDE6  EC61  F097         	call	_motor_schedule_command
 41953  00FDEA                     L64:
 41954  00FDEA  0100               	movlb	0	; () banked
 41955  00FDEC  6FAE               	movwf	__parse_jump_steps@return_value& (0+255),b
 41956                           
 41957                           ; BSR set to: 0
 41958                           ;api.c: 504: };api.c: 507: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 41959                           
 41960                           ; BSR set to: 0
 41961  00FDEE  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41962  00FDF2  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41963  00FDF6  50DF               	movf	indf2,w,c
 41964  00FDF8  B4D8               	btfsc	status,2,c
 41965  00FDFA  D02B               	goto	l2326
 41966                           
 41967                           ; BSR set to: 0
 41968  00FDFC  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41969  00FE00  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41970  00FE04  0E3E               	movlw	62
 41971  00FE06  60DF               	cpfslt	indf2,c
 41972  00FE08  D024               	goto	l2326
 41973                           
 41974                           ; BSR set to: 0
 41975                           ;api.c: 508: {;api.c: 509: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 41976  00FE0A  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41977  00FE0E  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41978  00FE12  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 41979  00FE16  0E01               	movlw	1
 41980  00FE18  26DF               	addwf	indf2,f,c
 41981  00FE1A  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41982  00FE1C  0D01               	mullw	1
 41983  00FE1E  50F3               	movf	prodl,w,c
 41984  00FE20  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 41985  00FE22  6ED9               	movwf	fsr2l,c
 41986  00FE24  50F4               	movf	prodh,w,c
 41987  00FE26  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 41988  00FE28  6EDA               	movwf	fsr2h,c
 41989  00FE2A  0E90               	movlw	144
 41990  00FE2C  6EDF               	movwf	indf2,c
 41991                           
 41992                           ;api.c: 510: out_buffer[(*out_idx_ptr)++] = return_value;
 41993  00FE2E  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 41994  00FE32  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 41995  00FE36  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 41996  00FE3A  0E01               	movlw	1
 41997  00FE3C  26DF               	addwf	indf2,f,c
 41998  00FE3E  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41999  00FE40  0D01               	mullw	1
 42000  00FE42  50F3               	movf	prodl,w,c
 42001  00FE44  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 42002  00FE46  6ED9               	movwf	fsr2l,c
 42003  00FE48  50F4               	movf	prodh,w,c
 42004  00FE4A  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 42005  00FE4C  6EDA               	movwf	fsr2h,c
 42006  00FE4E  C0AE  FFDF         	movff	__parse_jump_steps@return_value,indf2
 42007  00FE52                     l2326:
 42008                           
 42009                           ; BSR set to: 0
 42010                           ;api.c: 511: };api.c: 513: return 5;
 42011                           
 42012                           ; BSR set to: 0
 42013  00FE52  0E05               	movlw	5
 42014  00FE54  0012               	return	
 42015  00FE56                     __end_of__parse_jump_steps:
 42016                           	opt stack 0
 42017                           tosu	equ	0xFFF
 42018                           tosh	equ	0xFFE
 42019                           tosl	equ	0xFFD
 42020                           pclath	equ	0xFFA
 42021                           tblptru	equ	0xFF8
 42022                           tblptrh	equ	0xFF7
 42023                           tblptrl	equ	0xFF6
 42024                           tablat	equ	0xFF5
 42025                           prodh	equ	0xFF4
 42026                           prodl	equ	0xFF3
 42027                           intcon	equ	0xFF2
 42028                           indf0	equ	0xFEF
 42029                           postinc0	equ	0xFEE
 42030                           fsr0h	equ	0xFEA
 42031                           fsr0l	equ	0xFE9
 42032                           wreg	equ	0xFE8
 42033                           indf1	equ	0xFE7
 42034                           postinc1	equ	0xFE6
 42035                           postdec1	equ	0xFE5
 42036                           plusw1	equ	0xFE3
 42037                           fsr1h	equ	0xFE2
 42038                           fsr1l	equ	0xFE1
 42039                           indf2	equ	0xFDF
 42040                           postinc2	equ	0xFDE
 42041                           postdec2	equ	0xFDD
 42042                           plusw2	equ	0xFDB
 42043                           fsr2h	equ	0xFDA
 42044                           fsr2l	equ	0xFD9
 42045                           status	equ	0xFD8
 42046                           
 42047 ;; *************** function _motor_schedule_command *****************
 42048 ;; Defined at:
 42049 ;;		line 124 in file "motor.c"
 42050 ;; Parameters:    Size  Location     Type
 42051 ;;  direction       1    wreg     enum E6622
 42052 ;;  distance_in_    4   64[BANK0 ] unsigned long 
 42053 ;;  speed           2   68[BANK0 ] unsigned int 
 42054 ;; Auto vars:     Size  Location     Type
 42055 ;;  direction       1   70[BANK0 ] enum E6622
 42056 ;; Return value:  Size  Location     Type
 42057 ;;                  1    wreg      unsigned char 
 42058 ;; Registers used:
 42059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42060 ;; Tracked objects:
 42061 ;;		On entry : 0/0
 42062 ;;		On exit  : 0/0
 42063 ;;		Unchanged: 0/0
 42064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42065 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42068 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42069 ;;Total ram usage:        7 bytes
 42070 ;; Hardware stack levels used:    1
 42071 ;; Hardware stack levels required when called:   13
 42072 ;; This function calls:
 42073 ;;		__motor_run
 42074 ;;		_motor_items_in_cue
 42075 ;; This function is called by:
 42076 ;;		__parse_command_short
 42077 ;;		__parse_jump_steps
 42078 ;;		_motor_go_to_steps_position
 42079 ;;		_motor_arc_move
 42080 ;;		_motor_set_zero
 42081 ;;		_encoder_statemachine
 42082 ;; This function uses a non-reentrant model
 42083 ;;
 42084                           
 42085                           	psect	text175
 42086  012EC2                     __ptext175:
 42087                           	opt stack 0
 42088  012EC2                     _motor_schedule_command:
 42089                           	opt stack 15
 42090                           
 42091                           ; BSR set to: 0
 42092                           ;incstack = 0
 42093                           ;motor_schedule_command@direction stored from wreg
 42094  012EC2  0100               	movlb	0	; () banked
 42095  012EC4  6FA6               	movwf	motor_schedule_command@direction& (0+255),b
 42096                           
 42097                           ;motor.c: 126: if((motor_items_in_cue()==0) && (os.busy==0))
 42098  012EC6  EC7D  F0AC         	call	_motor_items_in_cue	;wreg free
 42099  012ECA  0900               	iorlw	0
 42100  012ECC  A4D8               	btfss	status,2,c
 42101  012ECE  D016               	goto	l2433
 42102  012ED0  0101               	movlb	1	; () banked
 42103  012ED2  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 42104  012ED4  A4D8               	btfss	status,2,c
 42105  012ED6  D012               	goto	l2433
 42106                           
 42107                           ; BSR set to: 1
 42108                           ;motor.c: 127: {;motor.c: 130: _motor_run(direction, distance_in_steps, speed);
 42109  012ED8  C0A0  F08F         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 42110  012EDC  C0A1  F090         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 42111  012EE0  C0A2  F091         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 42112  012EE4  C0A3  F092         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 42113  012EE8  C0A4  F093         	movff	motor_schedule_command@speed,__motor_run@speed
 42114  012EEC  C0A5  F094         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 42115  012EF0  0100               	movlb	0	; () banked
 42116  012EF2  51A6               	movf	motor_schedule_command@direction& (0+255),w,b
 42117  012EF4  ECA3  F062         	call	__motor_run
 42118                           
 42119                           ;motor.c: 132: return 1;
 42120  012EF8  0E01               	movlw	1
 42121  012EFA  0012               	return	
 42122  012EFC                     l2433:
 42123                           
 42124                           ;motor.c: 133: };motor.c: 134: if(motor_items_in_cue()==8-1)
 42125  012EFC  EC7D  F0AC         	call	_motor_items_in_cue	;wreg free
 42126  012F00  0A07               	xorlw	7
 42127  012F02  A4D8               	btfss	status,2,c
 42128  012F04  D002               	goto	l2435
 42129                           
 42130                           ;motor.c: 135: {;motor.c: 138: return 0;
 42131  012F06  0E00               	movlw	0
 42132                           
 42133                           ;motor.c: 139: }
 42134  012F08  0012               	return	
 42135  012F0A                     l2435:
 42136                           
 42137                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 42138  012F0A  0101               	movlb	1	; () banked
 42139  012F0C  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42140  012F0E  0D07               	mullw	7
 42141  012F10  0E00               	movlw	low _motor_command_cue
 42142  012F12  24F3               	addwf	prodl,w,c
 42143  012F14  6ED9               	movwf	fsr2l,c
 42144  012F16  0E03               	movlw	high _motor_command_cue
 42145  012F18  20F4               	addwfc	prodh,w,c
 42146  012F1A  6EDA               	movwf	fsr2h,c
 42147  012F1C  C0A6  FFDF         	movff	motor_schedule_command@direction,indf2
 42148                           
 42149                           ;motor.c: 144: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 42150  012F20  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42151  012F22  0D07               	mullw	7
 42152  012F24  0E01               	movlw	1
 42153  012F26  26F3               	addwf	prodl,f,c
 42154  012F28  0E00               	movlw	0
 42155  012F2A  22F4               	addwfc	prodh,f,c
 42156  012F2C  0E00               	movlw	low _motor_command_cue
 42157  012F2E  24F3               	addwf	prodl,w,c
 42158  012F30  6ED9               	movwf	fsr2l,c
 42159  012F32  0E03               	movlw	high _motor_command_cue
 42160  012F34  20F4               	addwfc	prodh,w,c
 42161  012F36  6EDA               	movwf	fsr2h,c
 42162  012F38  C0A0  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 42163  012F3C  C0A1  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 42164  012F40  C0A2  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 42165  012F44  C0A3  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 42166                           
 42167                           ;motor.c: 145: motor_command_cue[motor_cue_write_index].speed = speed;
 42168  012F48  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42169  012F4A  0D07               	mullw	7
 42170  012F4C  0E05               	movlw	5
 42171  012F4E  26F3               	addwf	prodl,f,c
 42172  012F50  0E00               	movlw	0
 42173  012F52  22F4               	addwfc	prodh,f,c
 42174  012F54  0E00               	movlw	low _motor_command_cue
 42175  012F56  24F3               	addwf	prodl,w,c
 42176  012F58  6ED9               	movwf	fsr2l,c
 42177  012F5A  0E03               	movlw	high _motor_command_cue
 42178  012F5C  20F4               	addwfc	prodh,w,c
 42179  012F5E  6EDA               	movwf	fsr2h,c
 42180  012F60  C0A4  FFDE         	movff	motor_schedule_command@speed,postinc2
 42181  012F64  C0A5  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 42182                           
 42183                           ; BSR set to: 1
 42184                           ;motor.c: 147: ++motor_cue_write_index;
 42185  012F68  2B57               	incf	_motor_cue_write_index& (0+255),f,b
 42186                           
 42187                           ; BSR set to: 1
 42188                           ;motor.c: 149: return 1;
 42189  012F6A  0E01               	movlw	1
 42190                           
 42191                           ; BSR set to: 1
 42192  012F6C  0012               	return	
 42193  012F6E                     __end_of_motor_schedule_command:
 42194                           	opt stack 0
 42195                           tosu	equ	0xFFF
 42196                           tosh	equ	0xFFE
 42197                           tosl	equ	0xFFD
 42198                           pclath	equ	0xFFA
 42199                           tblptru	equ	0xFF8
 42200                           tblptrh	equ	0xFF7
 42201                           tblptrl	equ	0xFF6
 42202                           tablat	equ	0xFF5
 42203                           prodh	equ	0xFF4
 42204                           prodl	equ	0xFF3
 42205                           intcon	equ	0xFF2
 42206                           indf0	equ	0xFEF
 42207                           postinc0	equ	0xFEE
 42208                           fsr0h	equ	0xFEA
 42209                           fsr0l	equ	0xFE9
 42210                           wreg	equ	0xFE8
 42211                           indf1	equ	0xFE7
 42212                           postinc1	equ	0xFE6
 42213                           postdec1	equ	0xFE5
 42214                           plusw1	equ	0xFE3
 42215                           fsr1h	equ	0xFE2
 42216                           fsr1l	equ	0xFE1
 42217                           indf2	equ	0xFDF
 42218                           postinc2	equ	0xFDE
 42219                           postdec2	equ	0xFDD
 42220                           plusw2	equ	0xFDB
 42221                           fsr2h	equ	0xFDA
 42222                           fsr2l	equ	0xFD9
 42223                           status	equ	0xFD8
 42224                           
 42225 ;; *************** function _motor_items_in_cue *****************
 42226 ;; Defined at:
 42227 ;;		line 119 in file "motor.c"
 42228 ;; Parameters:    Size  Location     Type
 42229 ;;		None
 42230 ;; Auto vars:     Size  Location     Type
 42231 ;;		None
 42232 ;; Return value:  Size  Location     Type
 42233 ;;                  1    wreg      unsigned char 
 42234 ;; Registers used:
 42235 ;;		wreg, status,2, status,0
 42236 ;; Tracked objects:
 42237 ;;		On entry : 0/0
 42238 ;;		On exit  : 0/0
 42239 ;;		Unchanged: 0/0
 42240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42245 ;;Total ram usage:        0 bytes
 42246 ;; Hardware stack levels used:    1
 42247 ;; Hardware stack levels required when called:   10
 42248 ;; This function calls:
 42249 ;;		Nothing
 42250 ;; This function is called by:
 42251 ;;		_motor_schedule_command
 42252 ;;		_motor_process_cue
 42253 ;; This function uses a non-reentrant model
 42254 ;;
 42255                           
 42256                           	psect	text176
 42257  0158FA                     __ptext176:
 42258                           	opt stack 0
 42259  0158FA                     _motor_items_in_cue:
 42260                           	opt stack 19
 42261                           
 42262                           ;motor.c: 121: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 42263                           
 42264                           ;incstack = 0
 42265  0158FA  0101               	movlb	1	; () banked
 42266  0158FC  5158               	movf	_motor_cue_read_index& (0+255),w,b
 42267  0158FE  0800               	sublw	0
 42268  015900  2557               	addwf	_motor_cue_write_index& (0+255),w,b
 42269  015902  0B07               	andlw	7
 42270  015904  0012               	return	
 42271  015906                     __end_of_motor_items_in_cue:
 42272                           	opt stack 0
 42273                           tosu	equ	0xFFF
 42274                           tosh	equ	0xFFE
 42275                           tosl	equ	0xFFD
 42276                           pclath	equ	0xFFA
 42277                           tblptru	equ	0xFF8
 42278                           tblptrh	equ	0xFF7
 42279                           tblptrl	equ	0xFF6
 42280                           tablat	equ	0xFF5
 42281                           prodh	equ	0xFF4
 42282                           prodl	equ	0xFF3
 42283                           intcon	equ	0xFF2
 42284                           indf0	equ	0xFEF
 42285                           postinc0	equ	0xFEE
 42286                           fsr0h	equ	0xFEA
 42287                           fsr0l	equ	0xFE9
 42288                           wreg	equ	0xFE8
 42289                           indf1	equ	0xFE7
 42290                           postinc1	equ	0xFE6
 42291                           postdec1	equ	0xFE5
 42292                           plusw1	equ	0xFE3
 42293                           fsr1h	equ	0xFE2
 42294                           fsr1l	equ	0xFE1
 42295                           indf2	equ	0xFDF
 42296                           postinc2	equ	0xFDE
 42297                           postdec2	equ	0xFDD
 42298                           plusw2	equ	0xFDB
 42299                           fsr2h	equ	0xFDA
 42300                           fsr2l	equ	0xFD9
 42301                           status	equ	0xFD8
 42302                           
 42303 ;; *************** function __motor_run *****************
 42304 ;; Defined at:
 42305 ;;		line 208 in file "motor.c"
 42306 ;; Parameters:    Size  Location     Type
 42307 ;;  direction       1    wreg     enum E6622
 42308 ;;  distance_in_    4   47[BANK0 ] unsigned long 
 42309 ;;  speed           2   51[BANK0 ] unsigned int 
 42310 ;; Auto vars:     Size  Location     Type
 42311 ;;  direction       1   57[BANK0 ] enum E6622
 42312 ;;  maximum_dist    4   60[BANK0 ] unsigned long 
 42313 ;;  maximum_dist    2   58[BANK0 ] unsigned int 
 42314 ;; Return value:  Size  Location     Type
 42315 ;;                  1    wreg      void 
 42316 ;; Registers used:
 42317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42318 ;; Tracked objects:
 42319 ;;		On entry : 0/0
 42320 ;;		On exit  : 0/0
 42321 ;;		Unchanged: 0/0
 42322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42323 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42324 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42325 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42326 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42327 ;;Total ram usage:       17 bytes
 42328 ;; Hardware stack levels used:    1
 42329 ;; Hardware stack levels required when called:   12
 42330 ;; This function calls:
 42331 ;;		_motor_calculate_position_in_degrees
 42332 ;;		_motor_steps_from_degrees
 42333 ;; This function is called by:
 42334 ;;		_motor_schedule_command
 42335 ;;		_motor_process_cue
 42336 ;; This function uses a non-reentrant model
 42337 ;;
 42338                           
 42339                           	psect	text177
 42340  00C546                     __ptext177:
 42341                           	opt stack 0
 42342  00C546                     __motor_run:
 42343                           	opt stack 17
 42344                           
 42345                           ; BSR set to: 1
 42346                           ;incstack = 0
 42347                           ;__motor_run@direction stored from wreg
 42348  00C546  0100               	movlb	0	; () banked
 42349  00C548  6F99               	movwf	__motor_run@direction& (0+255),b
 42350                           
 42351                           ;motor.c: 210: uint16_t maximum_distance_in_degrees;;motor.c: 211: uint32_t maximum_dist
      +                          ance_in_steps;;motor.c: 214: motor_direction = direction;
 42352  00C54A  C099  F155         	movff	__motor_run@direction,_motor_direction
 42353                           
 42354                           ;motor.c: 217: if(distance_in_steps==0)
 42355  00C54E  0100               	movlb	0	; () banked
 42356  00C550  518F               	movf	__motor_run@distance_in_steps& (0+255),w,b
 42357  00C552  1190               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 42358  00C554  1191               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 42359  00C556  1192               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 42360  00C558  A4D8               	btfss	status,2,c
 42361  00C55A  D00A               	goto	l2452
 42362                           
 42363                           ; BSR set to: 0
 42364                           ;motor.c: 218: {;motor.c: 220: motor_final_stepcount = 0xFF000000;
 42365  00C55C  0E00               	movlw	0
 42366  00C55E  0101               	movlb	1	; () banked
 42367  00C560  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42368  00C562  0E00               	movlw	0
 42369  00C564  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42370  00C566  0E00               	movlw	0
 42371  00C568  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42372  00C56A  0EFF               	movlw	255
 42373  00C56C  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42374                           
 42375                           ;motor.c: 221: }
 42376  00C56E  D008               	goto	l2453
 42377  00C570                     l2452:
 42378                           
 42379                           ; BSR set to: 0
 42380                           ;motor.c: 222: else;motor.c: 223: {;motor.c: 224: motor_final_stepcount = distance_in_st
      +                          eps;
 42381  00C570  C08F  F127         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 42382  00C574  C090  F128         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42383  00C578  C091  F129         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42384  00C57C  C092  F12A         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42385  00C580                     l2453:
 42386                           
 42387                           ;motor.c: 225: };motor.c: 228: if((motor_direction==MOTOR_DIRECTION_CCW) && config.use_c
      +                          cw_limit)
 42388                           
 42389                           ; BSR set to: 0
 42390  00C580  0101               	movlb	1	; () banked
 42391  00C582  2955               	incf	_motor_direction& (0+255),w,b
 42392  00C584  A4D8               	btfss	status,2,c
 42393  00C586  D061               	goto	l2457
 42394                           
 42395                           ; BSR set to: 1
 42396  00C588  51BA               	movf	(_config+25)& (0+255),w,b
 42397  00C58A  B4D8               	btfsc	status,2,c
 42398  00C58C  D05E               	goto	l2457
 42399                           
 42400                           ; BSR set to: 1
 42401                           ;motor.c: 230: {;motor.c: 232: motor_calculate_position_in_degrees();
 42402  00C58E  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
 42403                           
 42404                           ;motor.c: 235: if(os.current_position_in_degrees >= config.ccw_limit)
 42405  00C592  0101               	movlb	1	; () banked
 42406  00C594  51BB               	movf	(_config+26)& (0+255),w,b
 42407  00C596  5D7C               	subwf	(_os+11)& (0+255),w,b	;volatile
 42408  00C598  51BC               	movf	(_config+27)& (0+255),w,b
 42409  00C59A  597D               	subwfb	(_os+12)& (0+255),w,b	;volatile
 42410  00C59C  A0D8               	btfss	status,0,c
 42411  00C59E  D014               	goto	l2455
 42412                           
 42413                           ; BSR set to: 1
 42414                           ;motor.c: 236: {;motor.c: 237: maximum_distance_in_degrees = os.current_position_in_degr
      +                          ees - config.ccw_limit;
 42415  00C5A0  EE21  F0BB         	lfsr	2,_config+26
 42416  00C5A4  CFDE F095          	movff	postinc2,??__motor_run
 42417  00C5A8  CFDD F096          	movff	postdec2,??__motor_run+1
 42418  00C5AC  0100               	movlb	0	; () banked
 42419  00C5AE  1F95               	comf	??__motor_run& (0+255),f,b
 42420  00C5B0  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42421  00C5B2  4B95               	infsnz	??__motor_run& (0+255),f,b
 42422  00C5B4  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42423  00C5B6  0101               	movlb	1	; () banked
 42424  00C5B8  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42425  00C5BA  0100               	movlb	0	; () banked
 42426  00C5BC  2595               	addwf	??__motor_run& (0+255),w,b
 42427  00C5BE  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42428  00C5C0  0101               	movlb	1	; () banked
 42429  00C5C2  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42430  00C5C4  0100               	movlb	0	; () banked
 42431  00C5C6  D017               	goto	L65
 42432  00C5C8                     l2455:
 42433                           
 42434                           ;motor.c: 239: else;motor.c: 240: {;motor.c: 242: maximum_distance_in_degrees = 36000 + 
      +                          os.current_position_in_degrees - config.ccw_limit;
 42435                           
 42436                           ; BSR set to: 0
 42437  00C5C8  EE21  F0BB         	lfsr	2,_config+26
 42438  00C5CC  CFDE F095          	movff	postinc2,??__motor_run
 42439  00C5D0  CFDD F096          	movff	postdec2,??__motor_run+1
 42440  00C5D4  0100               	movlb	0	; () banked
 42441  00C5D6  1F95               	comf	??__motor_run& (0+255),f,b
 42442  00C5D8  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42443  00C5DA  4B95               	infsnz	??__motor_run& (0+255),f,b
 42444  00C5DC  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42445  00C5DE  0101               	movlb	1	; () banked
 42446  00C5E0  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42447  00C5E2  0100               	movlb	0	; () banked
 42448  00C5E4  2795               	addwf	??__motor_run& (0+255),f,b
 42449  00C5E6  0101               	movlb	1	; () banked
 42450  00C5E8  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42451  00C5EA  0100               	movlb	0	; () banked
 42452  00C5EC  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 42453  00C5EE  0EA0               	movlw	160
 42454  00C5F0  2595               	addwf	??__motor_run& (0+255),w,b
 42455  00C5F2  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42456  00C5F4  0E8C               	movlw	140
 42457  00C5F6                     L65:
 42458  00C5F6  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 42459  00C5F8  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42460                           
 42461                           ; BSR set to: 0
 42462                           ;motor.c: 243: };motor.c: 245: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42463                           
 42464                           ; BSR set to: 0
 42465  00C5FA  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42466  00C5FE  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42467  00C602  ECA1  F08E         	call	_motor_steps_from_degrees	;wreg free
 42468  00C606  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42469  00C60A  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42470  00C60E  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42471  00C612  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42472                           
 42473                           ;motor.c: 247: if(maximum_distance_in_steps<motor_final_stepcount)
 42474  00C616  0101               	movlb	1	; () banked
 42475  00C618  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42476  00C61A  0100               	movlb	0	; () banked
 42477  00C61C  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42478  00C61E  0101               	movlb	1	; () banked
 42479  00C620  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42480  00C622  0100               	movlb	0	; () banked
 42481  00C624  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42482  00C626  0101               	movlb	1	; () banked
 42483  00C628  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42484  00C62A  0100               	movlb	0	; () banked
 42485  00C62C  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42486  00C62E  0101               	movlb	1	; () banked
 42487  00C630  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42488  00C632  0100               	movlb	0	; () banked
 42489  00C634  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42490  00C636  B0D8               	btfsc	status,0,c
 42491  00C638  D008               	goto	l2457
 42492                           
 42493                           ; BSR set to: 0
 42494                           ;motor.c: 248: {;motor.c: 249: motor_final_stepcount = maximum_distance_in_steps;
 42495  00C63A  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42496  00C63E  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42497  00C642  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42498  00C646  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42499  00C64A                     l2457:
 42500                           
 42501                           ;motor.c: 250: };motor.c: 251: };motor.c: 254: if((motor_direction==MOTOR_DIRECTION_CW) 
      +                          && config.use_cw_limit)
 42502                           
 42503                           ; BSR set to: 0
 42504                           
 42505                           ; BSR set to: 0
 42506  00C64A  0101               	movlb	1	; () banked
 42507  00C64C  0555               	decf	_motor_direction& (0+255),w,b
 42508  00C64E  A4D8               	btfss	status,2,c
 42509  00C650  D061               	goto	l2461
 42510                           
 42511                           ; BSR set to: 1
 42512  00C652  51B7               	movf	(_config+22)& (0+255),w,b
 42513  00C654  B4D8               	btfsc	status,2,c
 42514  00C656  D05E               	goto	l2461
 42515                           
 42516                           ; BSR set to: 1
 42517                           ;motor.c: 256: {;motor.c: 258: motor_calculate_position_in_degrees();
 42518  00C658  ECF3  F08F         	call	_motor_calculate_position_in_degrees	;wreg free
 42519                           
 42520                           ;motor.c: 261: if(config.cw_limit >= os.current_position_in_degrees)
 42521  00C65C  0101               	movlb	1	; () banked
 42522  00C65E  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42523  00C660  5DB8               	subwf	(_config+23)& (0+255),w,b
 42524  00C662  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42525  00C664  59B9               	subwfb	(_config+24)& (0+255),w,b
 42526  00C666  A0D8               	btfss	status,0,c
 42527  00C668  D014               	goto	l2459
 42528                           
 42529                           ; BSR set to: 1
 42530                           ;motor.c: 262: {;motor.c: 263: maximum_distance_in_degrees = config.cw_limit - os.curren
      +                          t_position_in_degrees;
 42531  00C66A  EE21  F07C         	lfsr	2,_os+11	;volatile
 42532  00C66E  CFDE F095          	movff	postinc2,??__motor_run
 42533  00C672  CFDD F096          	movff	postdec2,??__motor_run+1
 42534  00C676  0100               	movlb	0	; () banked
 42535  00C678  1F95               	comf	??__motor_run& (0+255),f,b
 42536  00C67A  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42537  00C67C  4B95               	infsnz	??__motor_run& (0+255),f,b
 42538  00C67E  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42539  00C680  0101               	movlb	1	; () banked
 42540  00C682  51B8               	movf	(_config+23)& (0+255),w,b
 42541  00C684  0100               	movlb	0	; () banked
 42542  00C686  2595               	addwf	??__motor_run& (0+255),w,b
 42543  00C688  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42544  00C68A  0101               	movlb	1	; () banked
 42545  00C68C  51B9               	movf	(_config+24)& (0+255),w,b
 42546  00C68E  0100               	movlb	0	; () banked
 42547  00C690  D017               	goto	L66
 42548  00C692                     l2459:
 42549                           
 42550                           ;motor.c: 265: else;motor.c: 266: {;motor.c: 268: maximum_distance_in_degrees = 36000 + 
      +                          config.cw_limit - os.current_position_in_degrees;
 42551                           
 42552                           ; BSR set to: 0
 42553  00C692  EE21  F07C         	lfsr	2,_os+11	;volatile
 42554  00C696  CFDE F095          	movff	postinc2,??__motor_run
 42555  00C69A  CFDD F096          	movff	postdec2,??__motor_run+1
 42556  00C69E  0100               	movlb	0	; () banked
 42557  00C6A0  1F95               	comf	??__motor_run& (0+255),f,b
 42558  00C6A2  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42559  00C6A4  4B95               	infsnz	??__motor_run& (0+255),f,b
 42560  00C6A6  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42561  00C6A8  0101               	movlb	1	; () banked
 42562  00C6AA  51B8               	movf	(_config+23)& (0+255),w,b
 42563  00C6AC  0100               	movlb	0	; () banked
 42564  00C6AE  2795               	addwf	??__motor_run& (0+255),f,b
 42565  00C6B0  0101               	movlb	1	; () banked
 42566  00C6B2  51B9               	movf	(_config+24)& (0+255),w,b
 42567  00C6B4  0100               	movlb	0	; () banked
 42568  00C6B6  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 42569  00C6B8  0EA0               	movlw	160
 42570  00C6BA  2595               	addwf	??__motor_run& (0+255),w,b
 42571  00C6BC  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42572  00C6BE  0E8C               	movlw	140
 42573  00C6C0                     L66:
 42574  00C6C0  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 42575  00C6C2  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42576                           
 42577                           ; BSR set to: 0
 42578                           ;motor.c: 269: };motor.c: 271: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42579                           
 42580                           ; BSR set to: 0
 42581  00C6C4  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42582  00C6C8  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42583  00C6CC  ECA1  F08E         	call	_motor_steps_from_degrees	;wreg free
 42584  00C6D0  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42585  00C6D4  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42586  00C6D8  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42587  00C6DC  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42588                           
 42589                           ;motor.c: 273: if(maximum_distance_in_steps<motor_final_stepcount)
 42590  00C6E0  0101               	movlb	1	; () banked
 42591  00C6E2  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42592  00C6E4  0100               	movlb	0	; () banked
 42593  00C6E6  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42594  00C6E8  0101               	movlb	1	; () banked
 42595  00C6EA  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42596  00C6EC  0100               	movlb	0	; () banked
 42597  00C6EE  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42598  00C6F0  0101               	movlb	1	; () banked
 42599  00C6F2  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42600  00C6F4  0100               	movlb	0	; () banked
 42601  00C6F6  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42602  00C6F8  0101               	movlb	1	; () banked
 42603  00C6FA  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42604  00C6FC  0100               	movlb	0	; () banked
 42605  00C6FE  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42606  00C700  B0D8               	btfsc	status,0,c
 42607  00C702  D008               	goto	l2461
 42608                           
 42609                           ; BSR set to: 0
 42610                           ;motor.c: 274: {;motor.c: 275: motor_final_stepcount = maximum_distance_in_steps;
 42611  00C704  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42612  00C708  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42613  00C70C  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42614  00C710  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42615  00C714                     l2461:
 42616                           
 42617                           ;motor.c: 276: };motor.c: 277: };motor.c: 281: if(motor_final_stepcount==0)
 42618                           
 42619                           ; BSR set to: 0
 42620                           
 42621                           ; BSR set to: 0
 42622  00C714  0101               	movlb	1	; () banked
 42623  00C716  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42624  00C718  1128               	iorwf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42625  00C71A  1129               	iorwf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42626  00C71C  112A               	iorwf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42627  00C71E  B4D8               	btfsc	status,2,c
 42628  00C720  0012               	return	
 42629                           
 42630                           ; BSR set to: 1
 42631                           ;motor.c: 284: };motor.c: 287: if(speed==0)
 42632                           
 42633                           ; BSR set to: 1
 42634                           
 42635                           ; BSR set to: 1
 42636                           ;motor.c: 282: {;motor.c: 283: return;
 42637  00C722  0100               	movlb	0	; () banked
 42638  00C724  5193               	movf	__motor_run@speed& (0+255),w,b
 42639  00C726  1194               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 42640  00C728  A4D8               	btfss	status,2,c
 42641  00C72A  D005               	goto	l2464
 42642                           
 42643                           ; BSR set to: 0
 42644                           ;motor.c: 288: {;motor.c: 289: motor_maximum_speed = config.maximum_speed;
 42645  00C72C  C1AC  F13F         	movff	_config+11,_motor_maximum_speed
 42646  00C730  C1AD  F140         	movff	_config+12,_motor_maximum_speed+1
 42647                           
 42648                           ;motor.c: 290: }
 42649  00C734  D004               	goto	l2465
 42650  00C736                     l2464:
 42651                           
 42652                           ; BSR set to: 0
 42653                           ;motor.c: 291: else;motor.c: 292: {;motor.c: 293: motor_maximum_speed = speed;
 42654  00C736  C093  F13F         	movff	__motor_run@speed,_motor_maximum_speed
 42655  00C73A  C094  F140         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 42656  00C73E                     l2465:
 42657                           
 42658                           ; BSR set to: 0
 42659                           ;motor.c: 294: };motor.c: 297: motor_current_speed = 0;
 42660                           
 42661                           ; BSR set to: 0
 42662  00C73E  0E00               	movlw	0
 42663  00C740  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 42664  00C742  0E00               	movlw	0
 42665  00C744  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 42666                           
 42667                           ;motor.c: 298: motor_current_stepcount = 0;
 42668  00C746  0E00               	movlw	0
 42669  00C748  6E58               	movwf	_motor_current_stepcount,c	;volatile
 42670  00C74A  0E00               	movlw	0
 42671  00C74C  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 42672  00C74E  0E00               	movlw	0
 42673  00C750  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 42674  00C752  0E00               	movlw	0
 42675  00C754  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 42676                           
 42677                           ; BSR set to: 0
 42678                           ;motor.c: 300: motor_next_speed_check = motor_steps_lookup[1];
 42679  00C756  0E63               	movlw	low (_motor_steps_lookup+2)
 42680  00C758  6EF6               	movwf	tblptrl,c
 42681  00C75A  0E94               	movlw	high (_motor_steps_lookup+2)
 42682  00C75C  6EF7               	movwf	tblptrh,c
 42683  00C75E                     	if	0	;tblptru may be non-zero
 42684  00C75E                     	endif
 42685  00C75E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42686  00C75E  0E00               	movlw	low (__mediumconst shr (0+16))
 42687  00C760  6EF8               	movwf	tblptru,c
 42688  00C762                     	endif
 42689  00C762  0009               	tblrd		*+
 42690  00C764  CFF5 F095          	movff	tablat,??__motor_run
 42691  00C768  0009               	tblrd		*+
 42692  00C76A  CFF5 F096          	movff	tablat,??__motor_run+1
 42693  00C76E  C095  F226         	movff	??__motor_run,_motor_next_speed_check	;volatile
 42694  00C772  C096  F227         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 42695  00C776  0102               	movlb	2	; () banked
 42696  00C778  6B28               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 42697  00C77A  6B29               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 42698                           
 42699                           ; BSR set to: 2
 42700                           ;motor.c: 303: CCP1CONbits.CCP1M = 0b0000;
 42701  00C77C  90BA               	bcf	4026,0,c	;volatile
 42702  00C77E  92BA               	bcf	4026,1,c	;volatile
 42703  00C780  94BA               	bcf	4026,2,c	;volatile
 42704  00C782  96BA               	bcf	4026,3,c	;volatile
 42705                           
 42706                           ; BSR set to: 2
 42707                           ;motor.c: 306: LATBbits.LB0 = 0;
 42708  00C784  908A               	bcf	3978,0,c	;volatile
 42709                           
 42710                           ; BSR set to: 2
 42711                           ;motor.c: 307: if(direction==MOTOR_DIRECTION_CCW)
 42712  00C786  0100               	movlb	0	; () banked
 42713  00C788  2999               	incf	__motor_run@direction& (0+255),w,b
 42714  00C78A  A4D8               	btfss	status,2,c
 42715  00C78C  D005               	goto	l2466
 42716                           
 42717                           ; BSR set to: 0
 42718                           ;motor.c: 308: {;motor.c: 309: if(config.inverse_direction)
 42719  00C78E  0101               	movlb	1	; () banked
 42720  00C790  51A5               	movf	(_config+4)& (0+255),w,b
 42721  00C792  B4D8               	btfsc	status,2,c
 42722  00C794  D005               	goto	u11770
 42723  00C796  D006               	goto	l2470
 42724  00C798                     l2466:
 42725                           
 42726                           ;motor.c: 314: else;motor.c: 315: {;motor.c: 316: if(config.inverse_direction)
 42727                           
 42728                           ; BSR set to: 1
 42729  00C798  0101               	movlb	1	; () banked
 42730  00C79A  51A5               	movf	(_config+4)& (0+255),w,b
 42731  00C79C  B4D8               	btfsc	status,2,c
 42732  00C79E  D002               	goto	l2470
 42733  00C7A0                     u11770:
 42734                           
 42735                           ; BSR set to: 1
 42736                           ;motor.c: 317: LATBbits.LB2 = 0;
 42737  00C7A0  948A               	bcf	3978,2,c	;volatile
 42738  00C7A2  D001               	goto	l2471
 42739  00C7A4                     l2470:
 42740                           
 42741                           ; BSR set to: 1
 42742                           ;motor.c: 318: else;motor.c: 319: LATBbits.LB2 = 1;
 42743  00C7A4  848A               	bsf	3978,2,c	;volatile
 42744  00C7A6                     l2471:
 42745                           
 42746                           ; BSR set to: 1
 42747                           ;motor.c: 320: };motor.c: 323: LATBbits.LB1 = 1;
 42748                           
 42749                           ; BSR set to: 1
 42750  00C7A6  828A               	bsf	3978,1,c	;volatile
 42751                           
 42752                           ; BSR set to: 1
 42753                           ;motor.c: 326: ++motor_current_stepcount;
 42754  00C7A8  0E01               	movlw	1
 42755  00C7AA  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 42756  00C7AC  0E00               	movlw	0
 42757  00C7AE  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 42758  00C7B0  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 42759  00C7B2  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 42760                           
 42761                           ;motor.c: 329: os.current_position_in_steps += motor_direction;
 42762  00C7B4  5155               	movf	_motor_direction& (0+255),w,b
 42763  00C7B6  0100               	movlb	0	; () banked
 42764  00C7B8  6F95               	movwf	??__motor_run& (0+255),b
 42765  00C7BA  0E00               	movlw	0
 42766  00C7BC  BF95               	btfsc	??__motor_run& (0+255),7,b
 42767  00C7BE  0EFF               	movlw	255
 42768  00C7C0  6F96               	movwf	(??__motor_run+1)& (0+255),b
 42769  00C7C2  6F97               	movwf	(??__motor_run+2)& (0+255),b
 42770  00C7C4  6F98               	movwf	(??__motor_run+3)& (0+255),b
 42771  00C7C6  5195               	movf	??__motor_run& (0+255),w,b
 42772  00C7C8  0101               	movlb	1	; () banked
 42773  00C7CA  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 42774  00C7CC  0100               	movlb	0	; () banked
 42775  00C7CE  5196               	movf	(??__motor_run+1)& (0+255),w,b
 42776  00C7D0  0101               	movlb	1	; () banked
 42777  00C7D2  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 42778  00C7D4  0100               	movlb	0	; () banked
 42779  00C7D6  5197               	movf	(??__motor_run+2)& (0+255),w,b
 42780  00C7D8  0101               	movlb	1	; () banked
 42781  00C7DA  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 42782  00C7DC  0100               	movlb	0	; () banked
 42783  00C7DE  5198               	movf	(??__motor_run+3)& (0+255),w,b
 42784  00C7E0  0101               	movlb	1	; () banked
 42785  00C7E2  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 42786                           
 42787                           ;motor.c: 330: if(os.current_position_in_steps==config.full_circle_in_steps)
 42788  00C7E4  51A1               	movf	_config& (0+255),w,b
 42789  00C7E6  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 42790  00C7E8  E112               	bnz	l13180
 42791  00C7EA  51A2               	movf	(_config+1)& (0+255),w,b
 42792  00C7EC  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 42793  00C7EE  E10F               	bnz	l13180
 42794  00C7F0  51A3               	movf	(_config+2)& (0+255),w,b
 42795  00C7F2  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 42796  00C7F4  E10C               	bnz	l13180
 42797  00C7F6  51A4               	movf	(_config+3)& (0+255),w,b
 42798  00C7F8  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 42799  00C7FA  A4D8               	btfss	status,2,c
 42800  00C7FC  D008               	goto	l2472
 42801                           
 42802                           ; BSR set to: 1
 42803                           ;motor.c: 331: os.current_position_in_steps = 0;
 42804  00C7FE  0E00               	movlw	0
 42805  00C800  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42806  00C802  0E00               	movlw	0
 42807  00C804  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42808  00C806  0E00               	movlw	0
 42809  00C808  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42810  00C80A  0E00               	movlw	0
 42811  00C80C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42812  00C80E                     l2472:
 42813  00C80E                     l13180:
 42814                           
 42815                           ; BSR set to: 1
 42816                           ;motor.c: 332: if(os.current_position_in_steps==0xFFFFFFFF)
 42817  00C80E  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 42818  00C810  E113               	bnz	l13184
 42819  00C812  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 42820  00C814  E111               	bnz	l13184
 42821  00C816  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 42822  00C818  E10F               	bnz	l13184
 42823  00C81A  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 42824  00C81C  A4D8               	btfss	status,2,c
 42825  00C81E  D00C               	goto	l2473
 42826                           
 42827                           ; BSR set to: 1
 42828                           ;motor.c: 333: os.current_position_in_steps = (config.full_circle_in_steps-1);
 42829  00C820  0EFF               	movlw	255
 42830  00C822  25A1               	addwf	_config& (0+255),w,b
 42831  00C824  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42832  00C826  0EFF               	movlw	255
 42833  00C828  21A2               	addwfc	(_config+1)& (0+255),w,b
 42834  00C82A  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42835  00C82C  0EFF               	movlw	255
 42836  00C82E  21A3               	addwfc	(_config+2)& (0+255),w,b
 42837  00C830  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42838  00C832  0EFF               	movlw	255
 42839  00C834  21A4               	addwfc	(_config+3)& (0+255),w,b
 42840  00C836  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42841  00C838                     l2473:
 42842  00C838                     l13184:
 42843                           
 42844                           ; BSR set to: 1
 42845                           ;motor.c: 336: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42846  00C838  0E55               	movlw	85
 42847  00C83A  6EA7               	movwf	4007,c	;volsfr
 42848                           
 42849                           ; BSR set to: 1
 42850  00C83C  0EAA               	movlw	170
 42851  00C83E  6EA7               	movwf	4007,c	;volsfr
 42852                           
 42853                           ; BSR set to: 1
 42854  00C840  010E               	movlb	14	; () banked
 42855  00C842  91BF               	bcf	191,0,b	;volatile
 42856                           
 42857                           ; BSR set to: 14
 42858                           ;motor.c: 337: RPOR4 = 0;
 42859  00C844  0E00               	movlw	0
 42860  00C846  6FC4               	movwf	196,b	;volatile
 42861                           
 42862                           ; BSR set to: 14
 42863                           ;motor.c: 338: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42864  00C848  0E55               	movlw	85
 42865  00C84A  6EA7               	movwf	4007,c	;volsfr
 42866                           
 42867                           ; BSR set to: 14
 42868  00C84C  0EAA               	movlw	170
 42869  00C84E  6EA7               	movwf	4007,c	;volsfr
 42870                           
 42871                           ; BSR set to: 14
 42872  00C850  81BF               	bsf	191,0,b	;volatile
 42873                           
 42874                           ; BSR set to: 14
 42875                           ;motor.c: 341: motor_mode = MOTOR_MODE_MANUAL;
 42876  00C852  0E00               	movlw	0
 42877  00C854  0101               	movlb	1	; () banked
 42878  00C856  6F56               	movwf	_motor_mode& (0+255),b
 42879                           
 42880                           ; BSR set to: 1
 42881                           ;motor.c: 345: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 42882  00C858  0EFD               	movlw	low _motor_prescaler_lookup
 42883  00C85A  0100               	movlb	0	; () banked
 42884  00C85C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42885  00C85E  6EF6               	movwf	tblptrl,c
 42886  00C860  0E9B               	movlw	high _motor_prescaler_lookup
 42887  00C862  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42888  00C864  6EF7               	movwf	tblptrh,c
 42889  00C866                     	if	1	;There are 3 active tblptr bytes
 42890  00C866  6AF8               	clrf	tblptru,c
 42891  00C868  0E00               	movlw	low (__mediumconst shr (0+16))
 42892  00C86A  22F8               	addwfc	tblptru,f,c
 42893  00C86C                     	endif
 42894  00C86C  0008               	tblrd		*
 42895  00C86E  CFF5 F095          	movff	tablat,??__motor_run
 42896  00C872  50CA               	movf	4042,w,c	;volatile
 42897  00C874  1995               	xorwf	??__motor_run& (0+255),w,b
 42898  00C876  0BFC               	andlw	-4
 42899  00C878  1995               	xorwf	??__motor_run& (0+255),w,b
 42900  00C87A  6ECA               	movwf	4042,c	;volatile
 42901                           
 42902                           ; BSR set to: 0
 42903                           ;motor.c: 347: PR2 = motor_period_lookup[motor_current_speed];
 42904  00C87C  0E16               	movlw	low _motor_period_lookup
 42905  00C87E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42906  00C880  6EF6               	movwf	tblptrl,c
 42907  00C882  0E9A               	movlw	high _motor_period_lookup
 42908  00C884  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42909  00C886  6EF7               	movwf	tblptrh,c
 42910  00C888                     	if	1	;There are 3 active tblptr bytes
 42911  00C888  6AF8               	clrf	tblptru,c
 42912  00C88A  0E00               	movlw	low (__mediumconst shr (0+16))
 42913  00C88C  22F8               	addwfc	tblptru,f,c
 42914  00C88E                     	endif
 42915  00C88E  0008               	tblrd		*
 42916  00C890  CFF5 FFCB          	movff	tablat,4043	;volatile
 42917                           
 42918                           ; BSR set to: 0
 42919                           ;motor.c: 349: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 42920  00C894  0E2F               	movlw	low _motor_postscaler_lookup
 42921  00C896  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42922  00C898  6EF6               	movwf	tblptrl,c
 42923  00C89A  0E98               	movlw	high _motor_postscaler_lookup
 42924  00C89C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42925  00C89E  6EF7               	movwf	tblptrh,c
 42926  00C8A0                     	if	1	;There are 3 active tblptr bytes
 42927  00C8A0  6AF8               	clrf	tblptru,c
 42928  00C8A2  0E00               	movlw	low (__mediumconst shr (0+16))
 42929  00C8A4  22F8               	addwfc	tblptru,f,c
 42930  00C8A6                     	endif
 42931  00C8A6  0008               	tblrd		*
 42932  00C8A8  CFF5 F095          	movff	tablat,??__motor_run
 42933  00C8AC  4795               	rlncf	??__motor_run& (0+255),f,b
 42934  00C8AE  4795               	rlncf	??__motor_run& (0+255),f,b
 42935  00C8B0  4795               	rlncf	??__motor_run& (0+255),f,b
 42936  00C8B2  50CA               	movf	4042,w,c	;volatile
 42937  00C8B4  1995               	xorwf	??__motor_run& (0+255),w,b
 42938  00C8B6  0B87               	andlw	-121
 42939  00C8B8  1995               	xorwf	??__motor_run& (0+255),w,b
 42940  00C8BA  6ECA               	movwf	4042,c	;volatile
 42941                           
 42942                           ; BSR set to: 0
 42943                           ;motor.c: 351: CCPR1L = PR2>>1;
 42944  00C8BC  90D8               	bcf	status,0,c
 42945  00C8BE  30CB               	rrcf	4043,w,c	;volatile
 42946  00C8C0  6EBB               	movwf	4027,c	;volatile
 42947                           
 42948                           ; BSR set to: 0
 42949                           ;motor.c: 354: PIR1bits.TMR2IF = 0;
 42950  00C8C2  929E               	bcf	3998,1,c	;volatile
 42951                           
 42952                           ; BSR set to: 0
 42953                           ;motor.c: 355: PIE1bits.TMR2IE = 1;
 42954  00C8C4  829D               	bsf	3997,1,c	;volatile
 42955                           
 42956                           ; BSR set to: 0
 42957                           ;motor.c: 358: TMR2 = 0;
 42958  00C8C6  0E00               	movlw	0
 42959  00C8C8  6ECC               	movwf	4044,c	;volatile
 42960                           
 42961                           ; BSR set to: 0
 42962                           ;motor.c: 359: T2CONbits.TMR2ON = 1;
 42963  00C8CA  84CA               	bsf	4042,2,c	;volatile
 42964                           
 42965                           ; BSR set to: 0
 42966                           ;motor.c: 362: os.busy = 1;
 42967  00C8CC  0E01               	movlw	1
 42968  00C8CE  0101               	movlb	1	; () banked
 42969  00C8D0  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 42970                           
 42971                           ; BSR set to: 1
 42972  00C8D2  0012               	return		;funcret
 42973  00C8D4                     __end_of__motor_run:
 42974                           	opt stack 0
 42975                           tosu	equ	0xFFF
 42976                           tosh	equ	0xFFE
 42977                           tosl	equ	0xFFD
 42978                           pclath	equ	0xFFA
 42979                           tblptru	equ	0xFF8
 42980                           tblptrh	equ	0xFF7
 42981                           tblptrl	equ	0xFF6
 42982                           tablat	equ	0xFF5
 42983                           prodh	equ	0xFF4
 42984                           prodl	equ	0xFF3
 42985                           intcon	equ	0xFF2
 42986                           indf0	equ	0xFEF
 42987                           postinc0	equ	0xFEE
 42988                           fsr0h	equ	0xFEA
 42989                           fsr0l	equ	0xFE9
 42990                           wreg	equ	0xFE8
 42991                           indf1	equ	0xFE7
 42992                           postinc1	equ	0xFE6
 42993                           postdec1	equ	0xFE5
 42994                           plusw1	equ	0xFE3
 42995                           fsr1h	equ	0xFE2
 42996                           fsr1l	equ	0xFE1
 42997                           indf2	equ	0xFDF
 42998                           postinc2	equ	0xFDE
 42999                           postdec2	equ	0xFDD
 43000                           plusw2	equ	0xFDB
 43001                           fsr2h	equ	0xFDA
 43002                           fsr2l	equ	0xFD9
 43003                           status	equ	0xFD8
 43004                           
 43005 ;; *************** function _motor_steps_from_degrees *****************
 43006 ;; Defined at:
 43007 ;;		line 32 in file "motor.c"
 43008 ;; Parameters:    Size  Location     Type
 43009 ;;  degrees         2   39[BANK0 ] unsigned int 
 43010 ;; Auto vars:     Size  Location     Type
 43011 ;;  steps           4   43[BANK0 ] float 
 43012 ;; Return value:  Size  Location     Type
 43013 ;;                  4   39[BANK0 ] unsigned long 
 43014 ;; Registers used:
 43015 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43016 ;; Tracked objects:
 43017 ;;		On entry : 0/0
 43018 ;;		On exit  : 0/0
 43019 ;;		Unchanged: 0/0
 43020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43022 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43024 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43025 ;;Total ram usage:        8 bytes
 43026 ;; Hardware stack levels used:    1
 43027 ;; Hardware stack levels required when called:   11
 43028 ;; This function calls:
 43029 ;;		___fldiv
 43030 ;;		___flmul
 43031 ;;		___fltol
 43032 ;;		___xxtofl
 43033 ;; This function is called by:
 43034 ;;		_motor_nonzero_steps_from_degrees
 43035 ;;		__motor_run
 43036 ;; This function uses a non-reentrant model
 43037 ;;
 43038                           
 43039                           	psect	text178
 43040  011D42                     __ptext178:
 43041                           	opt stack 0
 43042  011D42                     _motor_steps_from_degrees:
 43043                           	opt stack 17
 43044                           
 43045                           ;motor.c: 34: float steps;;motor.c: 37: if(degrees==0)
 43046                           
 43047                           ; BSR set to: 1
 43048                           ;incstack = 0
 43049  011D42  0100               	movlb	0	; () banked
 43050  011D44  5187               	movf	motor_steps_from_degrees@degrees& (0+255),w,b
 43051  011D46  1188               	iorwf	(motor_steps_from_degrees@degrees+1)& (0+255),w,b
 43052  011D48  A4D8               	btfss	status,2,c
 43053  011D4A  D009               	goto	l2403
 43054                           
 43055                           ; BSR set to: 0
 43056                           ;motor.c: 38: {;motor.c: 39: return 0;
 43057  011D4C  0E00               	movlw	0
 43058  011D4E  6F87               	movwf	?_motor_steps_from_degrees& (0+255),b
 43059  011D50  0E00               	movlw	0
 43060  011D52  6F88               	movwf	(?_motor_steps_from_degrees+1)& (0+255),b
 43061  011D54  0E00               	movlw	0
 43062  011D56  6F89               	movwf	(?_motor_steps_from_degrees+2)& (0+255),b
 43063  011D58  0E00               	movlw	0
 43064  011D5A  6F8A               	movwf	(?_motor_steps_from_degrees+3)& (0+255),b
 43065                           
 43066                           ; BSR set to: 0
 43067  011D5C  0012               	return	
 43068  011D5E                     l2403:
 43069                           
 43070                           ; BSR set to: 0
 43071                           ;motor.c: 40: };motor.c: 42: steps = (float) degrees;
 43072                           
 43073                           ; BSR set to: 0
 43074  011D5E  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 43075  011D62  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 43076  011D66  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 43077  011D68  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 43078  011D6A  0E00               	movlw	0
 43079  011D6C  EC17  F081         	call	___xxtofl
 43080  011D70  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 43081  011D74  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 43082  011D78  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 43083  011D7C  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 43084                           
 43085                           ;motor.c: 43: steps *= config.full_circle_in_steps;
 43086  011D80  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 43087  011D84  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 43088  011D88  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 43089  011D8C  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 43090  011D90  C1A1  F060         	movff	_config,___xxtofl@val
 43091  011D94  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43092  011D98  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43093  011D9C  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43094  011DA0  0E00               	movlw	0
 43095  011DA2  EC17  F081         	call	___xxtofl
 43096  011DA6  C060  F072         	movff	?___xxtofl,___flmul@a
 43097  011DAA  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 43098  011DAE  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 43099  011DB2  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 43100  011DB6  EC1E  F066         	call	___flmul	;wreg free
 43101  011DBA  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 43102  011DBE  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 43103  011DC2  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 43104  011DC6  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 43105                           
 43106                           ;motor.c: 44: steps /= 36000;
 43107  011DCA  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 43108  011DCE  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 43109  011DD2  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 43110  011DD6  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 43111  011DDA  0E00               	movlw	0
 43112  011DDC  0100               	movlb	0	; () banked
 43113  011DDE  6F72               	movwf	___fldiv@a& (0+255),b
 43114  011DE0  0EA0               	movlw	160
 43115  011DE2  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 43116  011DE4  0E0C               	movlw	12
 43117  011DE6  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 43118  011DE8  0E47               	movlw	71
 43119  011DEA  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 43120  011DEC  ECD6  F06D         	call	___fldiv	;wreg free
 43121  011DF0  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 43122  011DF4  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 43123  011DF8  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 43124  011DFC  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 43125                           
 43126                           ;motor.c: 46: return (uint32_t) steps;
 43127  011E00  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 43128  011E04  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 43129  011E08  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 43130  011E0C  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 43131  011E10  EC62  F090         	call	___fltol	;wreg free
 43132  011E14  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 43133  011E18  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 43134  011E1C  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 43135  011E20  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 43136  011E24  0012               	return	
 43137  011E26                     __end_of_motor_steps_from_degrees:
 43138                           	opt stack 0
 43139                           tosu	equ	0xFFF
 43140                           tosh	equ	0xFFE
 43141                           tosl	equ	0xFFD
 43142                           pclath	equ	0xFFA
 43143                           tblptru	equ	0xFF8
 43144                           tblptrh	equ	0xFF7
 43145                           tblptrl	equ	0xFF6
 43146                           tablat	equ	0xFF5
 43147                           prodh	equ	0xFF4
 43148                           prodl	equ	0xFF3
 43149                           intcon	equ	0xFF2
 43150                           indf0	equ	0xFEF
 43151                           postinc0	equ	0xFEE
 43152                           fsr0h	equ	0xFEA
 43153                           fsr0l	equ	0xFE9
 43154                           wreg	equ	0xFE8
 43155                           indf1	equ	0xFE7
 43156                           postinc1	equ	0xFE6
 43157                           postdec1	equ	0xFE5
 43158                           plusw1	equ	0xFE3
 43159                           fsr1h	equ	0xFE2
 43160                           fsr1l	equ	0xFE1
 43161                           indf2	equ	0xFDF
 43162                           postinc2	equ	0xFDE
 43163                           postdec2	equ	0xFDD
 43164                           plusw2	equ	0xFDB
 43165                           fsr2h	equ	0xFDA
 43166                           fsr2l	equ	0xFD9
 43167                           status	equ	0xFD8
 43168                           
 43169 ;; *************** function _motor_calculate_position_in_degrees *****************
 43170 ;; Defined at:
 43171 ;;		line 59 in file "motor.c"
 43172 ;; Parameters:    Size  Location     Type
 43173 ;;		None
 43174 ;; Auto vars:     Size  Location     Type
 43175 ;;  tmp             4   39[BANK0 ] float 
 43176 ;; Return value:  Size  Location     Type
 43177 ;;                  1    wreg      void 
 43178 ;; Registers used:
 43179 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43180 ;; Tracked objects:
 43181 ;;		On entry : 0/0
 43182 ;;		On exit  : 0/0
 43183 ;;		Unchanged: 0/0
 43184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43186 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43188 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43189 ;;Total ram usage:        4 bytes
 43190 ;; Hardware stack levels used:    1
 43191 ;; Hardware stack levels required when called:   11
 43192 ;; This function calls:
 43193 ;;		___fldiv
 43194 ;;		___flmul
 43195 ;;		___fltol
 43196 ;;		___xxtofl
 43197 ;; This function is called by:
 43198 ;;		_main
 43199 ;;		_system_init
 43200 ;;		__motor_run
 43201 ;; This function uses a non-reentrant model
 43202 ;;
 43203                           
 43204                           	psect	text179
 43205  011FE6                     __ptext179:
 43206                           	opt stack 0
 43207  011FE6                     _motor_calculate_position_in_degrees:
 43208                           	opt stack 18
 43209                           
 43210                           ;motor.c: 61: float tmp;;motor.c: 63: tmp = (float) os.current_position_in_steps;
 43211                           
 43212                           ;incstack = 0
 43213  011FE6  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 43214  011FEA  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 43215  011FEE  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 43216  011FF2  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 43217  011FF6  0E00               	movlw	0
 43218  011FF8  EC17  F081         	call	___xxtofl
 43219  011FFC  C060  F087         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
 43220  012000  C061  F088         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
 43221  012004  C062  F089         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
 43222  012008  C063  F08A         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
 43223                           
 43224                           ;motor.c: 64: tmp *= 36000;
 43225  01200C  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
 43226  012010  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
 43227  012014  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
 43228  012018  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
 43229  01201C  0E00               	movlw	0
 43230  01201E  0100               	movlb	0	; () banked
 43231  012020  6F72               	movwf	___flmul@a& (0+255),b
 43232  012022  0EA0               	movlw	160
 43233  012024  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43234  012026  0E0C               	movlw	12
 43235  012028  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43236  01202A  0E47               	movlw	71
 43237  01202C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43238  01202E  EC1E  F066         	call	___flmul	;wreg free
 43239  012032  C06E  F087         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
 43240  012036  C06F  F088         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
 43241  01203A  C070  F089         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
 43242  01203E  C071  F08A         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
 43243                           
 43244                           ;motor.c: 65: tmp /= config.full_circle_in_steps;
 43245  012042  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
 43246  012046  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
 43247  01204A  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
 43248  01204E  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
 43249  012052  C1A1  F060         	movff	_config,___xxtofl@val
 43250  012056  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43251  01205A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43252  01205E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43253  012062  0E00               	movlw	0
 43254  012064  EC17  F081         	call	___xxtofl
 43255  012068  C060  F072         	movff	?___xxtofl,___fldiv@a
 43256  01206C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 43257  012070  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 43258  012074  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 43259  012078  ECD6  F06D         	call	___fldiv	;wreg free
 43260  01207C  C06E  F087         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
 43261  012080  C06F  F088         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
 43262  012084  C070  F089         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
 43263  012088  C071  F08A         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
 43264                           
 43265                           ;motor.c: 67: os.current_position_in_degrees = (uint16_t) tmp;
 43266  01208C  C087  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
 43267  012090  C088  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
 43268  012094  C089  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
 43269  012098  C08A  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
 43270  01209C  EC62  F090         	call	___fltol	;wreg free
 43271  0120A0  C060  F17C         	movff	?___fltol,_os+11	;volatile
 43272  0120A4  C061  F17D         	movff	?___fltol+1,_os+12	;volatile
 43273                           
 43274                           ;motor.c: 68: if(os.current_position_in_degrees==36000)
 43275  0120A8  0EA0               	movlw	160
 43276  0120AA  0101               	movlb	1	; () banked
 43277  0120AC  197C               	xorwf	(_os+11)& (0+255),w,b	;volatile
 43278  0120AE  E109               	bnz	l2412
 43279  0120B0  0E8C               	movlw	140
 43280  0120B2  197D               	xorwf	(_os+12)& (0+255),w,b	;volatile
 43281  0120B4  A4D8               	btfss	status,2,c
 43282  0120B6  0012               	return	
 43283                           
 43284                           ; BSR set to: 1
 43285                           ;motor.c: 69: {;motor.c: 71: os.current_position_in_degrees = 0;
 43286  0120B8  0E00               	movlw	0
 43287  0120BA  6F7D               	movwf	(_os+12)& (0+255),b	;volatile
 43288  0120BC  0E00               	movlw	0
 43289  0120BE  6F7C               	movwf	(_os+11)& (0+255),b	;volatile
 43290  0120C0  0012               	return	
 43291  0120C2                     l2412:
 43292                           
 43293                           ; BSR set to: 1
 43294  0120C2  0012               	return		;funcret
 43295  0120C4                     __end_of_motor_calculate_position_in_degrees:
 43296                           	opt stack 0
 43297                           tosu	equ	0xFFF
 43298                           tosh	equ	0xFFE
 43299                           tosl	equ	0xFFD
 43300                           pclath	equ	0xFFA
 43301                           tblptru	equ	0xFF8
 43302                           tblptrh	equ	0xFF7
 43303                           tblptrl	equ	0xFF6
 43304                           tablat	equ	0xFF5
 43305                           prodh	equ	0xFF4
 43306                           prodl	equ	0xFF3
 43307                           intcon	equ	0xFF2
 43308                           indf0	equ	0xFEF
 43309                           postinc0	equ	0xFEE
 43310                           fsr0h	equ	0xFEA
 43311                           fsr0l	equ	0xFE9
 43312                           wreg	equ	0xFE8
 43313                           indf1	equ	0xFE7
 43314                           postinc1	equ	0xFE6
 43315                           postdec1	equ	0xFE5
 43316                           plusw1	equ	0xFE3
 43317                           fsr1h	equ	0xFE2
 43318                           fsr1l	equ	0xFE1
 43319                           indf2	equ	0xFDF
 43320                           postinc2	equ	0xFDE
 43321                           postdec2	equ	0xFDD
 43322                           plusw2	equ	0xFDB
 43323                           fsr2h	equ	0xFDA
 43324                           fsr2l	equ	0xFD9
 43325                           status	equ	0xFD8
 43326                           
 43327 ;; *************** function ___xxtofl *****************
 43328 ;; Defined at:
 43329 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 43330 ;; Parameters:    Size  Location     Type
 43331 ;;  sign            1    wreg     unsigned char 
 43332 ;;  val             4    0[BANK0 ] long 
 43333 ;; Auto vars:     Size  Location     Type
 43334 ;;  sign            1    8[BANK0 ] unsigned char 
 43335 ;;  arg             4   10[BANK0 ] unsigned long 
 43336 ;;  exp             1    9[BANK0 ] unsigned char 
 43337 ;; Return value:  Size  Location     Type
 43338 ;;                  4    0[BANK0 ] unsigned char 
 43339 ;; Registers used:
 43340 ;;		wreg, status,2, status,0
 43341 ;; Tracked objects:
 43342 ;;		On entry : 0/0
 43343 ;;		On exit  : 0/0
 43344 ;;		Unchanged: 0/0
 43345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43347 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43349 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43350 ;;Total ram usage:       14 bytes
 43351 ;; Hardware stack levels used:    1
 43352 ;; Hardware stack levels required when called:   10
 43353 ;; This function calls:
 43354 ;;		Nothing
 43355 ;; This function is called by:
 43356 ;;		_motor_steps_from_degrees
 43357 ;;		_motor_calculate_position_in_degrees
 43358 ;;		__motor_get_speed_in_degrees
 43359 ;;		__step_position_from_divide_position
 43360 ;;		_motor_divide_jump_to_nearest
 43361 ;;		_motor_arc_move
 43362 ;;		_adc_read_temperature
 43363 ;;		_motor_go_to_degrees_position
 43364 ;; This function uses a non-reentrant model
 43365 ;;
 43366                           
 43367                           	psect	text180
 43368  01022E                     __ptext180:
 43369                           	opt stack 0
 43370  01022E                     ___xxtofl:
 43371                           	opt stack 18
 43372                           
 43373                           ; BSR set to: 1
 43374                           ;incstack = 0
 43375                           ;___xxtofl@sign stored from wreg
 43376  01022E  0100               	movlb	0	; () banked
 43377  010230  6F68               	movwf	___xxtofl@sign& (0+255),b
 43378  010232  0100               	movlb	0	; () banked
 43379  010234  5168               	movf	___xxtofl@sign& (0+255),w,b
 43380  010236  A4D8               	btfss	status,2,c
 43381                           
 43382                           ; BSR set to: 0
 43383  010238  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43384  01023A  D01A               	goto	l3615
 43385                           
 43386                           ; BSR set to: 0
 43387  01023C  C060  F064         	movff	___xxtofl@val,??___xxtofl
 43388  010240  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 43389  010244  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 43390  010248  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 43391  01024C  1F64               	comf	??___xxtofl& (0+255),f,b
 43392  01024E  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 43393  010250  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 43394  010252  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 43395  010254  2B64               	incf	??___xxtofl& (0+255),f,b
 43396  010256  0E00               	movlw	0
 43397  010258  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 43398  01025A  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 43399  01025C  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 43400  01025E  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 43401  010262  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 43402  010266  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 43403  01026A  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 43404  01026E  D008               	goto	l3616
 43405  010270                     l3615:
 43406                           
 43407                           ; BSR set to: 0
 43408  010270  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 43409  010274  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 43410  010278  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 43411  01027C  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 43412  010280                     l3616:
 43413                           
 43414                           ; BSR set to: 0
 43415                           
 43416                           ; BSR set to: 0
 43417  010280  5160               	movf	___xxtofl@val& (0+255),w,b
 43418  010282  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 43419  010284  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 43420  010286  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 43421  010288  A4D8               	btfss	status,2,c
 43422  01028A  D009               	goto	l3617
 43423                           
 43424                           ; BSR set to: 0
 43425  01028C  0E00               	movlw	0
 43426  01028E  6F60               	movwf	?___xxtofl& (0+255),b
 43427  010290  0E00               	movlw	0
 43428  010292  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 43429  010294  0E00               	movlw	0
 43430  010296  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 43431  010298  0E00               	movlw	0
 43432  01029A  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 43433                           
 43434                           ; BSR set to: 0
 43435  01029C  0012               	return	
 43436  01029E                     l3617:
 43437                           
 43438                           ; BSR set to: 0
 43439                           
 43440                           ; BSR set to: 0
 43441  01029E  0E96               	movlw	150
 43442  0102A0  6F69               	movwf	___xxtofl@exp& (0+255),b
 43443  0102A2  D006               	goto	l3619
 43444  0102A4                     
 43445                           ; BSR set to: 0
 43446                           
 43447                           ; BSR set to: 0
 43448  0102A4  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43449  0102A6  90D8               	bcf	status,0,c
 43450  0102A8  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43451  0102AA  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43452  0102AC  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43453  0102AE  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43454  0102B0                     l3619:
 43455                           
 43456                           ; BSR set to: 0
 43457                           
 43458                           ; BSR set to: 0
 43459  0102B0  0E00               	movlw	0
 43460  0102B2  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43461  0102B4  6F64               	movwf	??___xxtofl& (0+255),b
 43462  0102B6  0E00               	movlw	0
 43463  0102B8  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43464  0102BA  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43465  0102BC  0E00               	movlw	0
 43466  0102BE  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43467  0102C0  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43468  0102C2  0EFE               	movlw	254
 43469  0102C4  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43470  0102C6  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43471  0102C8  5164               	movf	??___xxtofl& (0+255),w,b
 43472  0102CA  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43473  0102CC  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43474  0102CE  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43475  0102D0  B4D8               	btfsc	status,2,c
 43476  0102D2  D00D               	goto	l3622
 43477  0102D4  D7E7               	goto	l3620
 43478  0102D6                     
 43479                           ; BSR set to: 0
 43480                           
 43481                           ; BSR set to: 0
 43482  0102D6  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43483                           
 43484                           ; BSR set to: 0
 43485  0102D8  0E01               	movlw	1
 43486  0102DA  276A               	addwf	___xxtofl@arg& (0+255),f,b
 43487  0102DC  0E00               	movlw	0
 43488  0102DE  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 43489  0102E0  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 43490  0102E2  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 43491                           
 43492                           ; BSR set to: 0
 43493  0102E4  90D8               	bcf	status,0,c
 43494  0102E6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43495  0102E8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43496  0102EA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43497  0102EC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43498  0102EE                     l3622:
 43499                           
 43500                           ; BSR set to: 0
 43501  0102EE  0E00               	movlw	0
 43502  0102F0  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43503  0102F2  6F64               	movwf	??___xxtofl& (0+255),b
 43504  0102F4  0E00               	movlw	0
 43505  0102F6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43506  0102F8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43507  0102FA  0E00               	movlw	0
 43508  0102FC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43509  0102FE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43510  010300  0EFF               	movlw	255
 43511  010302  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43512  010304  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43513  010306  5164               	movf	??___xxtofl& (0+255),w,b
 43514  010308  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43515  01030A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43516  01030C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43517  01030E  B4D8               	btfsc	status,2,c
 43518  010310  D007               	goto	l3625
 43519  010312  D7E1               	goto	l3623
 43520  010314                     
 43521                           ; BSR set to: 0
 43522                           
 43523                           ; BSR set to: 0
 43524  010314  0769               	decf	___xxtofl@exp& (0+255),f,b
 43525  010316  90D8               	bcf	status,0,c
 43526  010318  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 43527  01031A  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 43528  01031C  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 43529  01031E  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 43530  010320                     l3625:
 43531                           
 43532                           ; BSR set to: 0
 43533                           
 43534                           ; BSR set to: 0
 43535  010320  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 43536  010322  D003               	goto	u10520
 43537                           
 43538                           ; BSR set to: 0
 43539  010324  0E02               	movlw	2
 43540  010326  6169               	cpfslt	___xxtofl@exp& (0+255),b
 43541  010328  D7F5               	goto	l3626
 43542  01032A                     u10520:
 43543                           
 43544                           ; BSR set to: 0
 43545                           
 43546                           ; BSR set to: 0
 43547  01032A  A169               	btfss	___xxtofl@exp& (0+255),0,b
 43548                           
 43549                           ; BSR set to: 0
 43550  01032C  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 43551                           
 43552                           ; BSR set to: 0
 43553                           
 43554                           ; BSR set to: 0
 43555  01032E  90D8               	bcf	status,0,c
 43556  010330  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 43557                           
 43558                           ; BSR set to: 0
 43559  010332  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 43560  010336  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43561  010338  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43562  01033A  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 43563  01033C  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 43564  010340  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43565  010342  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43566  010344  6B64               	clrf	??___xxtofl& (0+255),b
 43567  010346  5164               	movf	??___xxtofl& (0+255),w,b
 43568  010348  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 43569  01034A  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 43570  01034C  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 43571  01034E  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 43572  010350  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 43573  010352  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 43574  010354  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 43575                           
 43576                           ; BSR set to: 0
 43577  010356  5168               	movf	___xxtofl@sign& (0+255),w,b
 43578  010358  A4D8               	btfss	status,2,c
 43579                           
 43580                           ; BSR set to: 0
 43581  01035A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43582  01035C  D001               	goto	l3631
 43583                           
 43584                           ; BSR set to: 0
 43585  01035E  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 43586  010360                     l3631:
 43587                           
 43588                           ; BSR set to: 0
 43589                           
 43590                           ; BSR set to: 0
 43591  010360  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 43592  010364  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 43593  010368  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 43594  01036C  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 43595  010370  0012               	return	
 43596  010372                     __end_of___xxtofl:
 43597                           	opt stack 0
 43598                           tosu	equ	0xFFF
 43599                           tosh	equ	0xFFE
 43600                           tosl	equ	0xFFD
 43601                           pclath	equ	0xFFA
 43602                           tblptru	equ	0xFF8
 43603                           tblptrh	equ	0xFF7
 43604                           tblptrl	equ	0xFF6
 43605                           tablat	equ	0xFF5
 43606                           prodh	equ	0xFF4
 43607                           prodl	equ	0xFF3
 43608                           intcon	equ	0xFF2
 43609                           indf0	equ	0xFEF
 43610                           postinc0	equ	0xFEE
 43611                           fsr0h	equ	0xFEA
 43612                           fsr0l	equ	0xFE9
 43613                           wreg	equ	0xFE8
 43614                           indf1	equ	0xFE7
 43615                           postinc1	equ	0xFE6
 43616                           postdec1	equ	0xFE5
 43617                           plusw1	equ	0xFE3
 43618                           fsr1h	equ	0xFE2
 43619                           fsr1l	equ	0xFE1
 43620                           indf2	equ	0xFDF
 43621                           postinc2	equ	0xFDE
 43622                           postdec2	equ	0xFDD
 43623                           plusw2	equ	0xFDB
 43624                           fsr2h	equ	0xFDA
 43625                           fsr2l	equ	0xFD9
 43626                           status	equ	0xFD8
 43627                           
 43628 ;; *************** function ___fltol *****************
 43629 ;; Defined at:
 43630 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 43631 ;; Parameters:    Size  Location     Type
 43632 ;;  f1              4    0[BANK0 ] unsigned char 
 43633 ;; Auto vars:     Size  Location     Type
 43634 ;;  exp1            1    9[BANK0 ] unsigned char 
 43635 ;;  sign1           1    8[BANK0 ] unsigned char 
 43636 ;; Return value:  Size  Location     Type
 43637 ;;                  4    0[BANK0 ] long 
 43638 ;; Registers used:
 43639 ;;		wreg, status,2, status,0
 43640 ;; Tracked objects:
 43641 ;;		On entry : 0/0
 43642 ;;		On exit  : 0/0
 43643 ;;		Unchanged: 0/0
 43644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43646 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43647 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43648 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43649 ;;Total ram usage:       10 bytes
 43650 ;; Hardware stack levels used:    1
 43651 ;; Hardware stack levels required when called:   10
 43652 ;; This function calls:
 43653 ;;		Nothing
 43654 ;; This function is called by:
 43655 ;;		_motor_steps_from_degrees
 43656 ;;		_motor_calculate_position_in_degrees
 43657 ;;		__motor_get_speed_in_degrees
 43658 ;;		__step_position_from_divide_position
 43659 ;;		_motor_divide_jump_to_nearest
 43660 ;;		_motor_arc_move
 43661 ;;		_adc_read_temperature
 43662 ;;		_motor_go_to_degrees_position
 43663 ;; This function uses a non-reentrant model
 43664 ;;
 43665                           
 43666                           	psect	text181
 43667  0120C4                     __ptext181:
 43668                           	opt stack 0
 43669  0120C4                     ___fltol:
 43670                           	opt stack 18
 43671                           
 43672                           ; BSR set to: 0
 43673                           ;incstack = 0
 43674  0120C4  0100               	movlb	0	; () banked
 43675  0120C6  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 43676  0120C8  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 43677  0120CA  6F69               	movwf	___fltol@exp1& (0+255),b
 43678  0120CC  5169               	movf	___fltol@exp1& (0+255),w,b
 43679  0120CE  A4D8               	btfss	status,2,c
 43680  0120D0  D009               	goto	l3260
 43681                           
 43682                           ; BSR set to: 0
 43683  0120D2  0E00               	movlw	0
 43684  0120D4  6F60               	movwf	?___fltol& (0+255),b
 43685  0120D6  0E00               	movlw	0
 43686  0120D8  6F61               	movwf	(?___fltol+1)& (0+255),b
 43687  0120DA  0E00               	movlw	0
 43688  0120DC  6F62               	movwf	(?___fltol+2)& (0+255),b
 43689  0120DE  0E00               	movlw	0
 43690  0120E0  6F63               	movwf	(?___fltol+3)& (0+255),b
 43691                           
 43692                           ; BSR set to: 0
 43693  0120E2  0012               	return	
 43694  0120E4                     l3260:
 43695                           
 43696                           ; BSR set to: 0
 43697                           
 43698                           ; BSR set to: 0
 43699  0120E4  C060  F064         	movff	___fltol@f1,??___fltol
 43700  0120E8  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 43701  0120EC  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 43702  0120F0  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 43703  0120F4  0E20               	movlw	32
 43704  0120F6  D005               	goto	u10400
 43705  0120F8                     u10405:
 43706  0120F8  90D8               	bcf	status,0,c
 43707  0120FA  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 43708  0120FC  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 43709  0120FE  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 43710  012100  3364               	rrcf	??___fltol& (0+255),f,b
 43711  012102                     u10400:
 43712  012102  2EE8               	decfsz	wreg,f,c
 43713  012104  D7F9               	goto	u10405
 43714  012106  5164               	movf	??___fltol& (0+255),w,b
 43715  012108  6F68               	movwf	___fltol@sign1& (0+255),b
 43716                           
 43717                           ; BSR set to: 0
 43718  01210A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 43719                           
 43720                           ; BSR set to: 0
 43721  01210C  0EFF               	movlw	255
 43722  01210E  1760               	andwf	___fltol@f1& (0+255),f,b
 43723  012110  0EFF               	movlw	255
 43724  012112  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 43725  012114  0EFF               	movlw	255
 43726  012116  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 43727  012118  0E00               	movlw	0
 43728  01211A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 43729                           
 43730                           ; BSR set to: 0
 43731  01211C  0E96               	movlw	150
 43732  01211E  5F69               	subwf	___fltol@exp1& (0+255),f,b
 43733                           
 43734                           ; BSR set to: 0
 43735  012120  AF69               	btfss	___fltol@exp1& (0+255),7,b
 43736  012122  D016               	goto	l3262
 43737                           
 43738                           ; BSR set to: 0
 43739  012124  5169               	movf	___fltol@exp1& (0+255),w,b
 43740  012126  0A80               	xorlw	128
 43741  012128  0F97               	addlw	151
 43742  01212A  B0D8               	btfsc	status,0,c
 43743  01212C  D009               	goto	l3263
 43744                           
 43745                           ; BSR set to: 0
 43746  01212E  0E00               	movlw	0
 43747  012130  6F60               	movwf	?___fltol& (0+255),b
 43748  012132  0E00               	movlw	0
 43749  012134  6F61               	movwf	(?___fltol+1)& (0+255),b
 43750  012136  0E00               	movlw	0
 43751  012138  6F62               	movwf	(?___fltol+2)& (0+255),b
 43752  01213A  0E00               	movlw	0
 43753  01213C  6F63               	movwf	(?___fltol+3)& (0+255),b
 43754                           
 43755                           ; BSR set to: 0
 43756  01213E  0012               	return	
 43757  012140                     l3263:
 43758                           
 43759                           ; BSR set to: 0
 43760                           
 43761                           ; BSR set to: 0
 43762                           
 43763                           ; BSR set to: 0
 43764  012140  90D8               	bcf	status,0,c
 43765  012142  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 43766  012144  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 43767  012146  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 43768  012148  3360               	rrcf	___fltol@f1& (0+255),f,b
 43769                           
 43770                           ; BSR set to: 0
 43771  01214A  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 43772  01214C  D7F9               	goto	l3263
 43773                           
 43774                           ; BSR set to: 0
 43775  01214E  D015               	goto	u10440
 43776  012150                     l3262:
 43777                           
 43778                           ; BSR set to: 0
 43779                           
 43780                           ; BSR set to: 0
 43781  012150  0E1F               	movlw	31
 43782  012152  6569               	cpfsgt	___fltol@exp1& (0+255),b
 43783  012154  D00F               	goto	l3268
 43784                           
 43785                           ; BSR set to: 0
 43786  012156  0E00               	movlw	0
 43787  012158  6F60               	movwf	?___fltol& (0+255),b
 43788  01215A  0E00               	movlw	0
 43789  01215C  6F61               	movwf	(?___fltol+1)& (0+255),b
 43790  01215E  0E00               	movlw	0
 43791  012160  6F62               	movwf	(?___fltol+2)& (0+255),b
 43792  012162  0E00               	movlw	0
 43793  012164  6F63               	movwf	(?___fltol+3)& (0+255),b
 43794                           
 43795                           ; BSR set to: 0
 43796  012166  0012               	return	
 43797  012168                     
 43798                           ; BSR set to: 0
 43799                           
 43800                           ; BSR set to: 0
 43801  012168  90D8               	bcf	status,0,c
 43802  01216A  3760               	rlcf	___fltol@f1& (0+255),f,b
 43803  01216C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 43804  01216E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 43805  012170  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 43806  012172  0769               	decf	___fltol@exp1& (0+255),f,b
 43807  012174                     l3268:
 43808                           
 43809                           ; BSR set to: 0
 43810                           
 43811                           ; BSR set to: 0
 43812  012174  5169               	movf	___fltol@exp1& (0+255),w,b
 43813  012176  A4D8               	btfss	status,2,c
 43814  012178  D7F7               	goto	l3269
 43815  01217A                     u10440:
 43816                           
 43817                           ; BSR set to: 0
 43818                           
 43819                           ; BSR set to: 0
 43820                           
 43821                           ; BSR set to: 0
 43822  01217A  5168               	movf	___fltol@sign1& (0+255),w,b
 43823  01217C  B4D8               	btfsc	status,2,c
 43824  01217E  D008               	goto	l3271
 43825                           
 43826                           ; BSR set to: 0
 43827  012180  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 43828  012182  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 43829  012184  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 43830  012186  6D60               	negf	___fltol@f1& (0+255),b
 43831  012188  0E00               	movlw	0
 43832  01218A  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 43833  01218C  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 43834  01218E  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 43835  012190                     l3271:
 43836                           
 43837                           ; BSR set to: 0
 43838                           
 43839                           ; BSR set to: 0
 43840  012190  C060  F060         	movff	___fltol@f1,?___fltol
 43841  012194  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 43842  012198  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 43843  01219C  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 43844  0121A0  0012               	return	
 43845  0121A2                     __end_of___fltol:
 43846                           	opt stack 0
 43847                           tosu	equ	0xFFF
 43848                           tosh	equ	0xFFE
 43849                           tosl	equ	0xFFD
 43850                           pclath	equ	0xFFA
 43851                           tblptru	equ	0xFF8
 43852                           tblptrh	equ	0xFF7
 43853                           tblptrl	equ	0xFF6
 43854                           tablat	equ	0xFF5
 43855                           prodh	equ	0xFF4
 43856                           prodl	equ	0xFF3
 43857                           intcon	equ	0xFF2
 43858                           indf0	equ	0xFEF
 43859                           postinc0	equ	0xFEE
 43860                           fsr0h	equ	0xFEA
 43861                           fsr0l	equ	0xFE9
 43862                           wreg	equ	0xFE8
 43863                           indf1	equ	0xFE7
 43864                           postinc1	equ	0xFE6
 43865                           postdec1	equ	0xFE5
 43866                           plusw1	equ	0xFE3
 43867                           fsr1h	equ	0xFE2
 43868                           fsr1l	equ	0xFE1
 43869                           indf2	equ	0xFDF
 43870                           postinc2	equ	0xFDE
 43871                           postdec2	equ	0xFDD
 43872                           plusw2	equ	0xFDB
 43873                           fsr2h	equ	0xFDA
 43874                           fsr2l	equ	0xFD9
 43875                           status	equ	0xFD8
 43876                           
 43877 ;; *************** function ___flmul *****************
 43878 ;; Defined at:
 43879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 43880 ;; Parameters:    Size  Location     Type
 43881 ;;  b               4   14[BANK0 ] long 
 43882 ;;  a               4   18[BANK0 ] long 
 43883 ;; Auto vars:     Size  Location     Type
 43884 ;;  prod            4   33[BANK0 ] struct .
 43885 ;;  grs             4   27[BANK0 ] unsigned long 
 43886 ;;  temp            2   37[BANK0 ] struct .
 43887 ;;  bexp            1   32[BANK0 ] unsigned char 
 43888 ;;  aexp            1   31[BANK0 ] unsigned char 
 43889 ;;  sign            1   26[BANK0 ] unsigned char 
 43890 ;; Return value:  Size  Location     Type
 43891 ;;                  4   14[BANK0 ] unsigned char 
 43892 ;; Registers used:
 43893 ;;		wreg, status,2, status,0, prodl, prodh
 43894 ;; Tracked objects:
 43895 ;;		On entry : 0/0
 43896 ;;		On exit  : 0/0
 43897 ;;		Unchanged: 0/0
 43898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43899 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43900 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43901 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43902 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43903 ;;Total ram usage:       25 bytes
 43904 ;; Hardware stack levels used:    1
 43905 ;; Hardware stack levels required when called:   10
 43906 ;; This function calls:
 43907 ;;		Nothing
 43908 ;; This function is called by:
 43909 ;;		_motor_steps_from_degrees
 43910 ;;		_motor_calculate_position_in_degrees
 43911 ;;		__step_position_from_divide_position
 43912 ;;		_motor_divide_jump_to_nearest
 43913 ;;		_motor_arc_move
 43914 ;;		_adc_read_temperature
 43915 ;;		_motor_go_to_degrees_position
 43916 ;; This function uses a non-reentrant model
 43917 ;;
 43918                           
 43919                           	psect	text182
 43920  00CC3C                     __ptext182:
 43921                           	opt stack 0
 43922  00CC3C                     ___flmul:
 43923                           	opt stack 18
 43924                           
 43925                           ; BSR set to: 0
 43926                           ;incstack = 0
 43927  00CC3C  0100               	movlb	0	; () banked
 43928  00CC3E  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43929  00CC40  0B80               	andlw	128
 43930  00CC42  6F7A               	movwf	___flmul@sign& (0+255),b
 43931  00CC44  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43932  00CC46  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 43933  00CC48  6F80               	movwf	___flmul@bexp& (0+255),b
 43934                           
 43935                           ; BSR set to: 0
 43936  00CC4A  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 43937                           
 43938                           ; BSR set to: 0
 43939  00CC4C  8180               	bsf	___flmul@bexp& (0+255),0,b
 43940                           
 43941                           ; BSR set to: 0
 43942                           
 43943                           ; BSR set to: 0
 43944  00CC4E  5180               	movf	___flmul@bexp& (0+255),w,b
 43945  00CC50  B4D8               	btfsc	status,2,c
 43946  00CC52  D00D               	goto	l3568
 43947                           
 43948                           ; BSR set to: 0
 43949  00CC54  2980               	incf	___flmul@bexp& (0+255),w,b
 43950  00CC56  A4D8               	btfss	status,2,c
 43951  00CC58  D008               	goto	l3569
 43952                           
 43953                           ; BSR set to: 0
 43954  00CC5A  0E00               	movlw	0
 43955  00CC5C  6F6E               	movwf	___flmul@b& (0+255),b
 43956  00CC5E  0E00               	movlw	0
 43957  00CC60  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43958  00CC62  0E00               	movlw	0
 43959  00CC64  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43960  00CC66  0E00               	movlw	0
 43961  00CC68  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43962  00CC6A                     l3569:
 43963                           
 43964                           ; BSR set to: 0
 43965                           
 43966                           ; BSR set to: 0
 43967  00CC6A  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 43968  00CC6C  D008               	goto	l3570
 43969  00CC6E                     l3568:
 43970                           
 43971                           ; BSR set to: 0
 43972                           
 43973                           ; BSR set to: 0
 43974  00CC6E  0E00               	movlw	0
 43975  00CC70  6F6E               	movwf	___flmul@b& (0+255),b
 43976  00CC72  0E00               	movlw	0
 43977  00CC74  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 43978  00CC76  0E00               	movlw	0
 43979  00CC78  6F70               	movwf	(___flmul@b+2)& (0+255),b
 43980  00CC7A  0E00               	movlw	0
 43981  00CC7C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 43982  00CC7E                     l3570:
 43983                           
 43984                           ; BSR set to: 0
 43985                           
 43986                           ; BSR set to: 0
 43987  00CC7E  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43988  00CC80  0B80               	andlw	128
 43989  00CC82  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 43990                           
 43991                           ; BSR set to: 0
 43992  00CC84  5175               	movf	(___flmul@a+3)& (0+255),w,b
 43993  00CC86  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 43994  00CC88  6F7F               	movwf	___flmul@aexp& (0+255),b
 43995                           
 43996                           ; BSR set to: 0
 43997  00CC8A  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 43998                           
 43999                           ; BSR set to: 0
 44000  00CC8C  817F               	bsf	___flmul@aexp& (0+255),0,b
 44001                           
 44002                           ; BSR set to: 0
 44003                           
 44004                           ; BSR set to: 0
 44005  00CC8E  517F               	movf	___flmul@aexp& (0+255),w,b
 44006  00CC90  B4D8               	btfsc	status,2,c
 44007  00CC92  D00D               	goto	l3572
 44008                           
 44009                           ; BSR set to: 0
 44010  00CC94  297F               	incf	___flmul@aexp& (0+255),w,b
 44011  00CC96  A4D8               	btfss	status,2,c
 44012  00CC98  D008               	goto	l3573
 44013                           
 44014                           ; BSR set to: 0
 44015  00CC9A  0E00               	movlw	0
 44016  00CC9C  6F72               	movwf	___flmul@a& (0+255),b
 44017  00CC9E  0E00               	movlw	0
 44018  00CCA0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44019  00CCA2  0E00               	movlw	0
 44020  00CCA4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44021  00CCA6  0E00               	movlw	0
 44022  00CCA8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44023  00CCAA                     l3573:
 44024                           
 44025                           ; BSR set to: 0
 44026                           
 44027                           ; BSR set to: 0
 44028  00CCAA  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 44029  00CCAC  D008               	goto	l3574
 44030  00CCAE                     l3572:
 44031                           
 44032                           ; BSR set to: 0
 44033                           
 44034                           ; BSR set to: 0
 44035  00CCAE  0E00               	movlw	0
 44036  00CCB0  6F72               	movwf	___flmul@a& (0+255),b
 44037  00CCB2  0E00               	movlw	0
 44038  00CCB4  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44039  00CCB6  0E00               	movlw	0
 44040  00CCB8  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44041  00CCBA  0E00               	movlw	0
 44042  00CCBC  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44043  00CCBE                     l3574:
 44044                           
 44045                           ; BSR set to: 0
 44046  00CCBE  517F               	movf	___flmul@aexp& (0+255),w,b
 44047  00CCC0  B4D8               	btfsc	status,2,c
 44048  00CCC2  D003               	goto	u10270
 44049                           
 44050                           ; BSR set to: 0
 44051  00CCC4  5180               	movf	___flmul@bexp& (0+255),w,b
 44052  00CCC6  A4D8               	btfss	status,2,c
 44053  00CCC8  D009               	goto	l3575
 44054  00CCCA                     u10270:
 44055                           
 44056                           ; BSR set to: 0
 44057                           
 44058                           ; BSR set to: 0
 44059  00CCCA  0E00               	movlw	0
 44060  00CCCC  6F6E               	movwf	?___flmul& (0+255),b
 44061  00CCCE  0E00               	movlw	0
 44062  00CCD0  6F6F               	movwf	(?___flmul+1)& (0+255),b
 44063  00CCD2  0E00               	movlw	0
 44064  00CCD4  6F70               	movwf	(?___flmul+2)& (0+255),b
 44065  00CCD6  0E00               	movlw	0
 44066  00CCD8  6F71               	movwf	(?___flmul+3)& (0+255),b
 44067                           
 44068                           ; BSR set to: 0
 44069  00CCDA  0012               	return	
 44070  00CCDC                     l3575:
 44071                           
 44072                           ; BSR set to: 0
 44073                           
 44074                           ; BSR set to: 0
 44075  00CCDC  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44076  00CCDE  036E               	mulwf	___flmul@b& (0+255),b
 44077  00CCE0  CFF3 F085          	movff	prodl,___flmul@temp
 44078  00CCE4  CFF4 F086          	movff	prodh,___flmul@temp+1
 44079                           
 44080                           ; BSR set to: 0
 44081  00CCE8  5185               	movf	___flmul@temp& (0+255),w,b
 44082  00CCEA  6F7B               	movwf	___flmul@grs& (0+255),b
 44083  00CCEC  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 44084  00CCEE  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 44085  00CCF0  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 44086                           
 44087                           ; BSR set to: 0
 44088  00CCF2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44089  00CCF4  6F81               	movwf	___flmul@prod& (0+255),b
 44090  00CCF6  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 44091  00CCF8  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 44092  00CCFA  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 44093  00CCFC  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44094  00CCFE  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44095  00CD00  CFF3 F085          	movff	prodl,___flmul@temp
 44096  00CD04  CFF4 F086          	movff	prodh,___flmul@temp+1
 44097                           
 44098                           ; BSR set to: 0
 44099  00CD08  5185               	movf	___flmul@temp& (0+255),w,b
 44100  00CD0A  277B               	addwf	___flmul@grs& (0+255),f,b
 44101  00CD0C  0E00               	movlw	0
 44102  00CD0E  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44103  00CD10  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44104  00CD12  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44105                           
 44106                           ; BSR set to: 0
 44107  00CD14  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44108  00CD16  2781               	addwf	___flmul@prod& (0+255),f,b
 44109  00CD18  0E00               	movlw	0
 44110  00CD1A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44111  00CD1C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44112  00CD1E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44113  00CD20  5172               	movf	___flmul@a& (0+255),w,b
 44114  00CD22  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44115  00CD24  CFF3 F085          	movff	prodl,___flmul@temp
 44116  00CD28  CFF4 F086          	movff	prodh,___flmul@temp+1
 44117                           
 44118                           ; BSR set to: 0
 44119  00CD2C  5185               	movf	___flmul@temp& (0+255),w,b
 44120  00CD2E  277B               	addwf	___flmul@grs& (0+255),f,b
 44121  00CD30  0E00               	movlw	0
 44122  00CD32  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44123  00CD34  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44124  00CD36  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44125                           
 44126                           ; BSR set to: 0
 44127  00CD38  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44128  00CD3A  2781               	addwf	___flmul@prod& (0+255),f,b
 44129  00CD3C  0E00               	movlw	0
 44130  00CD3E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44131  00CD40  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44132  00CD42  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44133                           
 44134                           ; BSR set to: 0
 44135  00CD44  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44136  00CD48  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44137  00CD4C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44138  00CD50  6B7B               	clrf	___flmul@grs& (0+255),b
 44139                           
 44140                           ; BSR set to: 0
 44141  00CD52  5172               	movf	___flmul@a& (0+255),w,b
 44142  00CD54  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44143  00CD56  CFF3 F085          	movff	prodl,___flmul@temp
 44144  00CD5A  CFF4 F086          	movff	prodh,___flmul@temp+1
 44145                           
 44146                           ; BSR set to: 0
 44147  00CD5E  5185               	movf	___flmul@temp& (0+255),w,b
 44148  00CD60  277B               	addwf	___flmul@grs& (0+255),f,b
 44149  00CD62  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44150  00CD64  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44151  00CD66  0E00               	movlw	0
 44152  00CD68  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44153  00CD6A  0E00               	movlw	0
 44154  00CD6C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44155                           
 44156                           ; BSR set to: 0
 44157  00CD6E  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44158  00CD70  036E               	mulwf	___flmul@b& (0+255),b
 44159  00CD72  CFF3 F085          	movff	prodl,___flmul@temp
 44160  00CD76  CFF4 F086          	movff	prodh,___flmul@temp+1
 44161                           
 44162                           ; BSR set to: 0
 44163  00CD7A  5185               	movf	___flmul@temp& (0+255),w,b
 44164  00CD7C  277B               	addwf	___flmul@grs& (0+255),f,b
 44165  00CD7E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44166  00CD80  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44167  00CD82  0E00               	movlw	0
 44168  00CD84  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44169  00CD86  0E00               	movlw	0
 44170  00CD88  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44171                           
 44172                           ; BSR set to: 0
 44173  00CD8A  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44174  00CD8E  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44175  00CD92  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44176  00CD96  6B7B               	clrf	___flmul@grs& (0+255),b
 44177  00CD98  5172               	movf	___flmul@a& (0+255),w,b
 44178  00CD9A  036E               	mulwf	___flmul@b& (0+255),b
 44179  00CD9C  CFF3 F085          	movff	prodl,___flmul@temp
 44180  00CDA0  CFF4 F086          	movff	prodh,___flmul@temp+1
 44181                           
 44182                           ; BSR set to: 0
 44183  00CDA4  5185               	movf	___flmul@temp& (0+255),w,b
 44184  00CDA6  277B               	addwf	___flmul@grs& (0+255),f,b
 44185  00CDA8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44186  00CDAA  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44187  00CDAC  0E00               	movlw	0
 44188  00CDAE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44189  00CDB0  0E00               	movlw	0
 44190  00CDB2  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44191                           
 44192                           ; BSR set to: 0
 44193  00CDB4  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44194  00CDB6  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44195  00CDB8  CFF3 F085          	movff	prodl,___flmul@temp
 44196  00CDBC  CFF4 F086          	movff	prodh,___flmul@temp+1
 44197  00CDC0  5185               	movf	___flmul@temp& (0+255),w,b
 44198  00CDC2  2781               	addwf	___flmul@prod& (0+255),f,b
 44199  00CDC4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44200  00CDC6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44201  00CDC8  0E00               	movlw	0
 44202  00CDCA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44203  00CDCC  0E00               	movlw	0
 44204  00CDCE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44205                           
 44206                           ; BSR set to: 0
 44207  00CDD0  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44208  00CDD2  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44209  00CDD4  CFF3 F085          	movff	prodl,___flmul@temp
 44210  00CDD8  CFF4 F086          	movff	prodh,___flmul@temp+1
 44211                           
 44212                           ; BSR set to: 0
 44213  00CDDC  5185               	movf	___flmul@temp& (0+255),w,b
 44214  00CDDE  2781               	addwf	___flmul@prod& (0+255),f,b
 44215  00CDE0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44216  00CDE2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44217  00CDE4  0E00               	movlw	0
 44218  00CDE6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44219  00CDE8  0E00               	movlw	0
 44220  00CDEA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44221  00CDEC  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44222  00CDEE  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44223  00CDF0  CFF3 F085          	movff	prodl,___flmul@temp
 44224  00CDF4  CFF4 F086          	movff	prodh,___flmul@temp+1
 44225                           
 44226                           ; BSR set to: 0
 44227  00CDF8  5185               	movf	___flmul@temp& (0+255),w,b
 44228  00CDFA  6F76               	movwf	??___flmul& (0+255),b
 44229  00CDFC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44230  00CDFE  6F77               	movwf	(??___flmul+1)& (0+255),b
 44231  00CE00  6B78               	clrf	(??___flmul+2)& (0+255),b
 44232  00CE02  6B79               	clrf	(??___flmul+3)& (0+255),b
 44233  00CE04  C078  F079         	movff	??___flmul+2,??___flmul+3
 44234  00CE08  C077  F078         	movff	??___flmul+1,??___flmul+2
 44235  00CE0C  C076  F077         	movff	??___flmul,??___flmul+1
 44236  00CE10  6B76               	clrf	??___flmul& (0+255),b
 44237  00CE12  5176               	movf	??___flmul& (0+255),w,b
 44238  00CE14  2781               	addwf	___flmul@prod& (0+255),f,b
 44239  00CE16  5177               	movf	(??___flmul+1)& (0+255),w,b
 44240  00CE18  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44241  00CE1A  5178               	movf	(??___flmul+2)& (0+255),w,b
 44242  00CE1C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44243  00CE1E  5179               	movf	(??___flmul+3)& (0+255),w,b
 44244  00CE20  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44245                           
 44246                           ; BSR set to: 0
 44247  00CE22  C07B  F076         	movff	___flmul@grs,??___flmul
 44248  00CE26  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 44249  00CE2A  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 44250  00CE2E  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 44251  00CE32  0E19               	movlw	25
 44252  00CE34  D005               	goto	u10280
 44253  00CE36                     u10285:
 44254  00CE36  90D8               	bcf	status,0,c
 44255  00CE38  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44256  00CE3A  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44257  00CE3C  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44258  00CE3E  3376               	rrcf	??___flmul& (0+255),f,b
 44259  00CE40                     u10280:
 44260  00CE40  2EE8               	decfsz	wreg,f,c
 44261  00CE42  D7F9               	goto	u10285
 44262  00CE44  5176               	movf	??___flmul& (0+255),w,b
 44263  00CE46  2781               	addwf	___flmul@prod& (0+255),f,b
 44264  00CE48  5177               	movf	(??___flmul+1)& (0+255),w,b
 44265  00CE4A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44266  00CE4C  5178               	movf	(??___flmul+2)& (0+255),w,b
 44267  00CE4E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44268  00CE50  5179               	movf	(??___flmul+3)& (0+255),w,b
 44269  00CE52  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44270                           
 44271                           ; BSR set to: 0
 44272  00CE54  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44273  00CE58  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44274  00CE5C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44275  00CE60  6B7B               	clrf	___flmul@grs& (0+255),b
 44276                           
 44277                           ; BSR set to: 0
 44278  00CE62  517F               	movf	___flmul@aexp& (0+255),w,b
 44279  00CE64  C080  F076         	movff	___flmul@bexp,??___flmul
 44280  00CE68  6B77               	clrf	(??___flmul+1)& (0+255),b
 44281  00CE6A  2776               	addwf	??___flmul& (0+255),f,b
 44282  00CE6C  0E00               	movlw	0
 44283  00CE6E  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 44284  00CE70  0E82               	movlw	130
 44285  00CE72  2576               	addwf	??___flmul& (0+255),w,b
 44286  00CE74  6F85               	movwf	___flmul@temp& (0+255),b
 44287  00CE76  0EFF               	movlw	255
 44288  00CE78  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 44289  00CE7A  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 44290  00CE7C  D00F               	goto	l3579
 44291  00CE7E                     
 44292                           ; BSR set to: 0
 44293                           
 44294                           ; BSR set to: 0
 44295  00CE7E  90D8               	bcf	status,0,c
 44296  00CE80  3781               	rlcf	___flmul@prod& (0+255),f,b
 44297  00CE82  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 44298  00CE84  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 44299  00CE86  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 44300                           
 44301                           ; BSR set to: 0
 44302  00CE88  BF7E               	btfsc	(___flmul@grs+3)& (0+255),7,b
 44303                           
 44304                           ; BSR set to: 0
 44305  00CE8A  8181               	bsf	___flmul@prod& (0+255),0,b
 44306                           
 44307                           ; BSR set to: 0
 44308  00CE8C  90D8               	bcf	status,0,c
 44309  00CE8E  377B               	rlcf	___flmul@grs& (0+255),f,b
 44310  00CE90  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 44311  00CE92  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 44312  00CE94  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 44313  00CE96  0785               	decf	___flmul@temp& (0+255),f,b
 44314  00CE98  A0D8               	btfss	status,0,c
 44315  00CE9A  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 44316  00CE9C                     l3579:
 44317                           
 44318                           ; BSR set to: 0
 44319                           
 44320                           ; BSR set to: 0
 44321  00CE9C  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 44322  00CE9E  D7EF               	goto	l3580
 44323                           
 44324                           ; BSR set to: 0
 44325                           
 44326                           ; BSR set to: 0
 44327  00CEA0  0E00               	movlw	0
 44328  00CEA2  6F7F               	movwf	___flmul@aexp& (0+255),b
 44329                           
 44330                           ; BSR set to: 0
 44331  00CEA4  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 44332  00CEA6  D016               	goto	l3586
 44333                           
 44334                           ; BSR set to: 0
 44335  00CEA8  0EFF               	movlw	255
 44336  00CEAA  157B               	andwf	___flmul@grs& (0+255),w,b
 44337  00CEAC  6F76               	movwf	??___flmul& (0+255),b
 44338  00CEAE  0EFF               	movlw	255
 44339  00CEB0  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 44340  00CEB2  6F77               	movwf	(??___flmul+1)& (0+255),b
 44341  00CEB4  0EFF               	movlw	255
 44342  00CEB6  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 44343  00CEB8  6F78               	movwf	(??___flmul+2)& (0+255),b
 44344  00CEBA  0E7F               	movlw	127
 44345  00CEBC  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 44346  00CEBE  6F79               	movwf	(??___flmul+3)& (0+255),b
 44347  00CEC0  5176               	movf	??___flmul& (0+255),w,b
 44348  00CEC2  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 44349  00CEC4  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 44350  00CEC6  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 44351  00CEC8  A4D8               	btfss	status,2,c
 44352  00CECA  D002               	goto	u10330
 44353                           
 44354                           ; BSR set to: 0
 44355                           
 44356                           ; BSR set to: 0
 44357  00CECC  A181               	btfss	___flmul@prod& (0+255),0,b
 44358  00CECE  D002               	goto	l3586
 44359  00CED0                     u10330:
 44360                           
 44361                           ; BSR set to: 0
 44362  00CED0  0E01               	movlw	1
 44363  00CED2  6F7F               	movwf	___flmul@aexp& (0+255),b
 44364  00CED4                     l3586:
 44365                           
 44366                           ; BSR set to: 0
 44367                           
 44368                           ; BSR set to: 0
 44369                           
 44370                           ; BSR set to: 0
 44371  00CED4  517F               	movf	___flmul@aexp& (0+255),w,b
 44372  00CED6  B4D8               	btfsc	status,2,c
 44373  00CED8  D01F               	goto	l3588
 44374                           
 44375                           ; BSR set to: 0
 44376  00CEDA  0E01               	movlw	1
 44377  00CEDC  2781               	addwf	___flmul@prod& (0+255),f,b
 44378  00CEDE  0E00               	movlw	0
 44379  00CEE0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44380  00CEE2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44381  00CEE4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44382                           
 44383                           ; BSR set to: 0
 44384  00CEE6  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 44385  00CEE8  D017               	goto	l3588
 44386                           
 44387                           ; BSR set to: 0
 44388  00CEEA  C081  F076         	movff	___flmul@prod,??___flmul
 44389  00CEEE  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 44390  00CEF2  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 44391  00CEF6  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 44392  00CEFA  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 44393  00CEFC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44394  00CEFE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44395  00CF00  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44396  00CF02  3376               	rrcf	??___flmul& (0+255),f,b
 44397  00CF04  C076  F081         	movff	??___flmul,___flmul@prod
 44398  00CF08  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 44399  00CF0C  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 44400  00CF10  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 44401                           
 44402                           ; BSR set to: 0
 44403  00CF14  4B85               	infsnz	___flmul@temp& (0+255),f,b
 44404  00CF16  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 44405  00CF18                     l3588:
 44406                           
 44407                           ; BSR set to: 0
 44408                           
 44409                           ; BSR set to: 0
 44410                           
 44411                           ; BSR set to: 0
 44412  00CF18  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44413  00CF1A  D00D               	goto	l3589
 44414  00CF1C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44415  00CF1E  E103               	bnz	u10360
 44416  00CF20  2985               	incf	___flmul@temp& (0+255),w,b
 44417  00CF22  A0D8               	btfss	status,0,c
 44418  00CF24  D008               	goto	l3589
 44419  00CF26                     u10360:
 44420                           
 44421                           ; BSR set to: 0
 44422  00CF26  0E00               	movlw	0
 44423  00CF28  6F81               	movwf	___flmul@prod& (0+255),b
 44424  00CF2A  0E00               	movlw	0
 44425  00CF2C  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44426  00CF2E  0E80               	movlw	128
 44427  00CF30  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44428  00CF32  0E7F               	movlw	127
 44429  00CF34  D020               	goto	L67
 44430  00CF36                     l3589:
 44431                           
 44432                           ; BSR set to: 0
 44433                           
 44434                           ; BSR set to: 0
 44435  00CF36  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44436  00CF38  D005               	goto	u10370
 44437  00CF3A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44438  00CF3C  E10E               	bnz	l3591
 44439  00CF3E  0585               	decf	___flmul@temp& (0+255),w,b
 44440  00CF40  B0D8               	btfsc	status,0,c
 44441  00CF42  D00B               	goto	l3591
 44442  00CF44                     u10370:
 44443                           
 44444                           ; BSR set to: 0
 44445  00CF44  0E00               	movlw	0
 44446  00CF46  6F81               	movwf	___flmul@prod& (0+255),b
 44447  00CF48  0E00               	movlw	0
 44448  00CF4A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44449  00CF4C  0E00               	movlw	0
 44450  00CF4E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44451  00CF50  0E00               	movlw	0
 44452  00CF52  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44453  00CF54  0E00               	movlw	0
 44454  00CF56  6F7A               	movwf	___flmul@sign& (0+255),b
 44455  00CF58  D00F               	goto	l3592
 44456  00CF5A                     l3591:
 44457                           
 44458                           ; BSR set to: 0
 44459  00CF5A  C085  F080         	movff	___flmul@temp,___flmul@bexp
 44460                           
 44461                           ; BSR set to: 0
 44462  00CF5E  0EFF               	movlw	255
 44463  00CF60  1781               	andwf	___flmul@prod& (0+255),f,b
 44464  00CF62  0EFF               	movlw	255
 44465  00CF64  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 44466  00CF66  0E7F               	movlw	127
 44467  00CF68  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 44468  00CF6A  0E00               	movlw	0
 44469  00CF6C  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 44470                           
 44471                           ; BSR set to: 0
 44472  00CF6E  B180               	btfsc	___flmul@bexp& (0+255),0,b
 44473                           
 44474                           ; BSR set to: 0
 44475  00CF70  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 44476                           
 44477                           ; BSR set to: 0
 44478                           
 44479                           ; BSR set to: 0
 44480  00CF72  90D8               	bcf	status,0,c
 44481  00CF74  3180               	rrcf	___flmul@bexp& (0+255),w,b
 44482  00CF76                     L67:
 44483  00CF76  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44484  00CF78                     l3592:
 44485                           
 44486                           ; BSR set to: 0
 44487                           
 44488                           ; BSR set to: 0
 44489                           
 44490                           ; BSR set to: 0
 44491  00CF78  517A               	movf	___flmul@sign& (0+255),w,b
 44492  00CF7A  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 44493                           
 44494                           ; BSR set to: 0
 44495  00CF7C  C081  F06E         	movff	___flmul@prod,?___flmul
 44496  00CF80  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 44497  00CF84  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 44498  00CF88  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 44499  00CF8C  0012               	return	
 44500  00CF8E                     __end_of___flmul:
 44501                           	opt stack 0
 44502                           tosu	equ	0xFFF
 44503                           tosh	equ	0xFFE
 44504                           tosl	equ	0xFFD
 44505                           pclath	equ	0xFFA
 44506                           tblptru	equ	0xFF8
 44507                           tblptrh	equ	0xFF7
 44508                           tblptrl	equ	0xFF6
 44509                           tablat	equ	0xFF5
 44510                           prodh	equ	0xFF4
 44511                           prodl	equ	0xFF3
 44512                           intcon	equ	0xFF2
 44513                           indf0	equ	0xFEF
 44514                           postinc0	equ	0xFEE
 44515                           fsr0h	equ	0xFEA
 44516                           fsr0l	equ	0xFE9
 44517                           wreg	equ	0xFE8
 44518                           indf1	equ	0xFE7
 44519                           postinc1	equ	0xFE6
 44520                           postdec1	equ	0xFE5
 44521                           plusw1	equ	0xFE3
 44522                           fsr1h	equ	0xFE2
 44523                           fsr1l	equ	0xFE1
 44524                           indf2	equ	0xFDF
 44525                           postinc2	equ	0xFDE
 44526                           postdec2	equ	0xFDD
 44527                           plusw2	equ	0xFDB
 44528                           fsr2h	equ	0xFDA
 44529                           fsr2l	equ	0xFD9
 44530                           status	equ	0xFD8
 44531                           
 44532 ;; *************** function ___fldiv *****************
 44533 ;; Defined at:
 44534 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 44535 ;; Parameters:    Size  Location     Type
 44536 ;;  b               4   14[BANK0 ] unsigned char 
 44537 ;;  a               4   18[BANK0 ] unsigned char 
 44538 ;; Auto vars:     Size  Location     Type
 44539 ;;  grs             4   33[BANK0 ] unsigned long 
 44540 ;;  rem             4   26[BANK0 ] unsigned long 
 44541 ;;  new_exp         2   31[BANK0 ] int 
 44542 ;;  aexp            1   38[BANK0 ] unsigned char 
 44543 ;;  bexp            1   37[BANK0 ] unsigned char 
 44544 ;;  sign            1   30[BANK0 ] unsigned char 
 44545 ;; Return value:  Size  Location     Type
 44546 ;;                  4   14[BANK0 ] unsigned char 
 44547 ;; Registers used:
 44548 ;;		wreg, status,2, status,0
 44549 ;; Tracked objects:
 44550 ;;		On entry : 0/0
 44551 ;;		On exit  : 0/0
 44552 ;;		Unchanged: 0/0
 44553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44554 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44555 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44557 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44558 ;;Total ram usage:       25 bytes
 44559 ;; Hardware stack levels used:    1
 44560 ;; Hardware stack levels required when called:   10
 44561 ;; This function calls:
 44562 ;;		Nothing
 44563 ;; This function is called by:
 44564 ;;		_motor_steps_from_degrees
 44565 ;;		_motor_calculate_position_in_degrees
 44566 ;;		__motor_get_speed_in_degrees
 44567 ;;		__step_position_from_divide_position
 44568 ;;		_motor_divide_jump_to_nearest
 44569 ;;		_motor_arc_move
 44570 ;;		_motor_go_to_degrees_position
 44571 ;; This function uses a non-reentrant model
 44572 ;;
 44573                           
 44574                           	psect	text183
 44575  00DBAC                     __ptext183:
 44576                           	opt stack 0
 44577  00DBAC                     ___fldiv:
 44578                           	opt stack 18
 44579                           
 44580                           ; BSR set to: 0
 44581                           ;incstack = 0
 44582  00DBAC  0100               	movlb	0	; () banked
 44583  00DBAE  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44584  00DBB0  0B80               	andlw	128
 44585  00DBB2  6F7E               	movwf	___fldiv@sign& (0+255),b
 44586  00DBB4  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44587  00DBB6  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 44588  00DBB8  6F85               	movwf	___fldiv@bexp& (0+255),b
 44589                           
 44590                           ; BSR set to: 0
 44591  00DBBA  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 44592                           
 44593                           ; BSR set to: 0
 44594  00DBBC  8185               	bsf	___fldiv@bexp& (0+255),0,b
 44595                           
 44596                           ; BSR set to: 0
 44597                           
 44598                           ; BSR set to: 0
 44599  00DBBE  5185               	movf	___fldiv@bexp& (0+255),w,b
 44600  00DBC0  B4D8               	btfsc	status,2,c
 44601  00DBC2  D00D               	goto	l3534
 44602                           
 44603                           ; BSR set to: 0
 44604  00DBC4  2985               	incf	___fldiv@bexp& (0+255),w,b
 44605  00DBC6  A4D8               	btfss	status,2,c
 44606  00DBC8  D008               	goto	l3535
 44607                           
 44608                           ; BSR set to: 0
 44609  00DBCA  0E00               	movlw	0
 44610  00DBCC  6F6E               	movwf	___fldiv@b& (0+255),b
 44611  00DBCE  0E00               	movlw	0
 44612  00DBD0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44613  00DBD2  0E00               	movlw	0
 44614  00DBD4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44615  00DBD6  0E00               	movlw	0
 44616  00DBD8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44617  00DBDA                     l3535:
 44618                           
 44619                           ; BSR set to: 0
 44620                           
 44621                           ; BSR set to: 0
 44622  00DBDA  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44623  00DBDC  D006               	goto	L68
 44624  00DBDE                     l3534:
 44625                           
 44626                           ; BSR set to: 0
 44627                           
 44628                           ; BSR set to: 0
 44629  00DBDE  0E00               	movlw	0
 44630  00DBE0  6F6E               	movwf	___fldiv@b& (0+255),b
 44631  00DBE2  0E00               	movlw	0
 44632  00DBE4  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44633  00DBE6  0E00               	movlw	0
 44634  00DBE8  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44635  00DBEA                     L68:
 44636  00DBEA  0E00               	movlw	0
 44637  00DBEC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44638                           
 44639                           ; BSR set to: 0
 44640                           
 44641                           ; BSR set to: 0
 44642  00DBEE  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44643  00DBF0  0B80               	andlw	128
 44644  00DBF2  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 44645                           
 44646                           ; BSR set to: 0
 44647  00DBF4  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44648  00DBF6  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 44649  00DBF8  6F86               	movwf	___fldiv@aexp& (0+255),b
 44650                           
 44651                           ; BSR set to: 0
 44652  00DBFA  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 44653                           
 44654                           ; BSR set to: 0
 44655  00DBFC  8186               	bsf	___fldiv@aexp& (0+255),0,b
 44656                           
 44657                           ; BSR set to: 0
 44658                           
 44659                           ; BSR set to: 0
 44660  00DBFE  5186               	movf	___fldiv@aexp& (0+255),w,b
 44661  00DC00  B4D8               	btfsc	status,2,c
 44662  00DC02  D00D               	goto	l3538
 44663                           
 44664                           ; BSR set to: 0
 44665  00DC04  2986               	incf	___fldiv@aexp& (0+255),w,b
 44666  00DC06  A4D8               	btfss	status,2,c
 44667  00DC08  D008               	goto	l3539
 44668                           
 44669                           ; BSR set to: 0
 44670  00DC0A  0E00               	movlw	0
 44671  00DC0C  6F72               	movwf	___fldiv@a& (0+255),b
 44672  00DC0E  0E00               	movlw	0
 44673  00DC10  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44674  00DC12  0E00               	movlw	0
 44675  00DC14  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44676  00DC16  0E00               	movlw	0
 44677  00DC18  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44678  00DC1A                     l3539:
 44679                           
 44680                           ; BSR set to: 0
 44681                           
 44682                           ; BSR set to: 0
 44683  00DC1A  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 44684  00DC1C  D006               	goto	L69
 44685  00DC1E                     l3538:
 44686                           
 44687                           ; BSR set to: 0
 44688                           
 44689                           ; BSR set to: 0
 44690  00DC1E  0E00               	movlw	0
 44691  00DC20  6F72               	movwf	___fldiv@a& (0+255),b
 44692  00DC22  0E00               	movlw	0
 44693  00DC24  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44694  00DC26  0E00               	movlw	0
 44695  00DC28  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44696  00DC2A                     L69:
 44697  00DC2A  0E00               	movlw	0
 44698  00DC2C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44699                           
 44700                           ; BSR set to: 0
 44701                           
 44702                           ; BSR set to: 0
 44703  00DC2E  5172               	movf	___fldiv@a& (0+255),w,b
 44704  00DC30  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 44705  00DC32  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 44706  00DC34  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 44707  00DC36  A4D8               	btfss	status,2,c
 44708  00DC38  D017               	goto	l3541
 44709                           
 44710                           ; BSR set to: 0
 44711  00DC3A  0E00               	movlw	0
 44712  00DC3C  6F6E               	movwf	___fldiv@b& (0+255),b
 44713  00DC3E  0E00               	movlw	0
 44714  00DC40  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44715  00DC42  0E00               	movlw	0
 44716  00DC44  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44717  00DC46  0E00               	movlw	0
 44718  00DC48  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44719                           
 44720                           ; BSR set to: 0
 44721  00DC4A  0E80               	movlw	128
 44722  00DC4C  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 44723  00DC4E  0E7F               	movlw	127
 44724  00DC50  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44725                           
 44726                           ; BSR set to: 0
 44727  00DC52  517E               	movf	___fldiv@sign& (0+255),w,b
 44728  00DC54  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44729                           
 44730                           ; BSR set to: 0
 44731  00DC56  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44732  00DC5A  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44733  00DC5E  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44734  00DC62  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44735                           
 44736                           ; BSR set to: 0
 44737  00DC66  0012               	return	
 44738  00DC68                     l3541:
 44739                           
 44740                           ; BSR set to: 0
 44741                           
 44742                           ; BSR set to: 0
 44743  00DC68  5185               	movf	___fldiv@bexp& (0+255),w,b
 44744  00DC6A  A4D8               	btfss	status,2,c
 44745  00DC6C  D011               	goto	l3543
 44746                           
 44747                           ; BSR set to: 0
 44748  00DC6E  0E00               	movlw	0
 44749  00DC70  6F6E               	movwf	___fldiv@b& (0+255),b
 44750  00DC72  0E00               	movlw	0
 44751  00DC74  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44752  00DC76  0E00               	movlw	0
 44753  00DC78  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44754  00DC7A  0E00               	movlw	0
 44755  00DC7C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44756                           
 44757                           ; BSR set to: 0
 44758  00DC7E  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44759  00DC82  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44760  00DC86  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44761  00DC8A  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44762                           
 44763                           ; BSR set to: 0
 44764  00DC8E  0012               	return	
 44765  00DC90                     l3543:
 44766                           
 44767                           ; BSR set to: 0
 44768                           
 44769                           ; BSR set to: 0
 44770  00DC90  5186               	movf	___fldiv@aexp& (0+255),w,b
 44771  00DC92  6F76               	movwf	??___fldiv& (0+255),b
 44772  00DC94  6B77               	clrf	(??___fldiv+1)& (0+255),b
 44773  00DC96  1F76               	comf	??___fldiv& (0+255),f,b
 44774  00DC98  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 44775  00DC9A  4B76               	infsnz	??___fldiv& (0+255),f,b
 44776  00DC9C  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 44777  00DC9E  5185               	movf	___fldiv@bexp& (0+255),w,b
 44778  00DCA0  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44779  00DCA2  6B79               	clrf	(??___fldiv+3)& (0+255),b
 44780  00DCA4  5176               	movf	??___fldiv& (0+255),w,b
 44781  00DCA6  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 44782  00DCA8  5177               	movf	(??___fldiv+1)& (0+255),w,b
 44783  00DCAA  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 44784  00DCAC  0E7F               	movlw	127
 44785  00DCAE  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 44786  00DCB0  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44787  00DCB2  0E00               	movlw	0
 44788  00DCB4  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 44789  00DCB6  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44790                           
 44791                           ; BSR set to: 0
 44792  00DCB8  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 44793  00DCBC  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 44794  00DCC0  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 44795  00DCC4  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 44796                           
 44797                           ; BSR set to: 0
 44798  00DCC8  0E00               	movlw	0
 44799  00DCCA  6F6E               	movwf	___fldiv@b& (0+255),b
 44800  00DCCC  0E00               	movlw	0
 44801  00DCCE  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44802  00DCD0  0E00               	movlw	0
 44803  00DCD2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44804  00DCD4  0E00               	movlw	0
 44805  00DCD6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44806                           
 44807                           ; BSR set to: 0
 44808  00DCD8  0E00               	movlw	0
 44809  00DCDA  6F81               	movwf	___fldiv@grs& (0+255),b
 44810  00DCDC  0E00               	movlw	0
 44811  00DCDE  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 44812  00DCE0  0E00               	movlw	0
 44813  00DCE2  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 44814  00DCE4  0E00               	movlw	0
 44815  00DCE6  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 44816                           
 44817                           ; BSR set to: 0
 44818  00DCE8  0E00               	movlw	0
 44819  00DCEA  6F86               	movwf	___fldiv@aexp& (0+255),b
 44820  00DCEC  D028               	goto	l3544
 44821  00DCEE                     
 44822                           ; BSR set to: 0
 44823                           
 44824                           ; BSR set to: 0
 44825  00DCEE  5186               	movf	___fldiv@aexp& (0+255),w,b
 44826  00DCF0  B4D8               	btfsc	status,2,c
 44827  00DCF2  D011               	goto	l3546
 44828                           
 44829                           ; BSR set to: 0
 44830  00DCF4  90D8               	bcf	status,0,c
 44831  00DCF6  377A               	rlcf	___fldiv@rem& (0+255),f,b
 44832  00DCF8  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 44833  00DCFA  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 44834  00DCFC  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 44835  00DCFE  90D8               	bcf	status,0,c
 44836  00DD00  376E               	rlcf	___fldiv@b& (0+255),f,b
 44837  00DD02  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44838  00DD04  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44839  00DD06  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44840                           
 44841                           ; BSR set to: 0
 44842  00DD08  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44843                           
 44844                           ; BSR set to: 0
 44845  00DD0A  816E               	bsf	___fldiv@b& (0+255),0,b
 44846                           
 44847                           ; BSR set to: 0
 44848  00DD0C  90D8               	bcf	status,0,c
 44849  00DD0E  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44850  00DD10  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44851  00DD12  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44852  00DD14  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44853  00DD16                     l3546:
 44854                           
 44855                           ; BSR set to: 0
 44856                           
 44857                           ; BSR set to: 0
 44858  00DD16  5172               	movf	___fldiv@a& (0+255),w,b
 44859  00DD18  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 44860  00DD1A  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44861  00DD1C  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 44862  00DD1E  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44863  00DD20  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 44864  00DD22  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44865  00DD24  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 44866  00DD26  A0D8               	btfss	status,0,c
 44867  00DD28  D009               	goto	l3548
 44868                           
 44869                           ; BSR set to: 0
 44870  00DD2A  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 44871                           
 44872                           ; BSR set to: 0
 44873  00DD2C  5172               	movf	___fldiv@a& (0+255),w,b
 44874  00DD2E  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 44875  00DD30  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44876  00DD32  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 44877  00DD34  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44878  00DD36  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 44879  00DD38  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44880  00DD3A  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 44881  00DD3C                     l3548:
 44882                           
 44883                           ; BSR set to: 0
 44884                           
 44885                           ; BSR set to: 0
 44886  00DD3C  2B86               	incf	___fldiv@aexp& (0+255),f,b
 44887  00DD3E                     l3544:
 44888                           
 44889                           ; BSR set to: 0
 44890  00DD3E  0E19               	movlw	25
 44891  00DD40  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 44892  00DD42  D7D5               	goto	l3545
 44893                           
 44894                           ; BSR set to: 0
 44895                           
 44896                           ; BSR set to: 0
 44897  00DD44  517A               	movf	___fldiv@rem& (0+255),w,b
 44898  00DD46  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 44899  00DD48  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 44900  00DD4A  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 44901  00DD4C  B4D8               	btfsc	status,2,c
 44902  00DD4E  D011               	goto	l3551
 44903                           
 44904                           ; BSR set to: 0
 44905  00DD50  8181               	bsf	___fldiv@grs& (0+255),0,b
 44906                           
 44907                           ; BSR set to: 0
 44908  00DD52  D00F               	goto	l3551
 44909  00DD54                     
 44910                           ; BSR set to: 0
 44911                           
 44912                           ; BSR set to: 0
 44913  00DD54  90D8               	bcf	status,0,c
 44914  00DD56  376E               	rlcf	___fldiv@b& (0+255),f,b
 44915  00DD58  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44916  00DD5A  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44917  00DD5C  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44918                           
 44919                           ; BSR set to: 0
 44920  00DD5E  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44921                           
 44922                           ; BSR set to: 0
 44923  00DD60  816E               	bsf	___fldiv@b& (0+255),0,b
 44924                           
 44925                           ; BSR set to: 0
 44926  00DD62  90D8               	bcf	status,0,c
 44927  00DD64  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44928  00DD66  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44929  00DD68  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44930  00DD6A  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44931  00DD6C  077F               	decf	___fldiv@new_exp& (0+255),f,b
 44932  00DD6E  A0D8               	btfss	status,0,c
 44933  00DD70  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 44934  00DD72                     l3551:
 44935                           
 44936                           ; BSR set to: 0
 44937                           
 44938                           ; BSR set to: 0
 44939  00DD72  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 44940  00DD74  D7EF               	goto	l3552
 44941                           
 44942                           ; BSR set to: 0
 44943                           
 44944                           ; BSR set to: 0
 44945  00DD76  0E00               	movlw	0
 44946  00DD78  6F86               	movwf	___fldiv@aexp& (0+255),b
 44947                           
 44948                           ; BSR set to: 0
 44949  00DD7A  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 44950  00DD7C  D016               	goto	l3558
 44951                           
 44952                           ; BSR set to: 0
 44953  00DD7E  0EFF               	movlw	255
 44954  00DD80  1581               	andwf	___fldiv@grs& (0+255),w,b
 44955  00DD82  6F76               	movwf	??___fldiv& (0+255),b
 44956  00DD84  0EFF               	movlw	255
 44957  00DD86  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 44958  00DD88  6F77               	movwf	(??___fldiv+1)& (0+255),b
 44959  00DD8A  0EFF               	movlw	255
 44960  00DD8C  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 44961  00DD8E  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44962  00DD90  0E7F               	movlw	127
 44963  00DD92  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 44964  00DD94  6F79               	movwf	(??___fldiv+3)& (0+255),b
 44965  00DD96  5176               	movf	??___fldiv& (0+255),w,b
 44966  00DD98  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 44967  00DD9A  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 44968  00DD9C  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 44969  00DD9E  A4D8               	btfss	status,2,c
 44970  00DDA0  D002               	goto	u10140
 44971                           
 44972                           ; BSR set to: 0
 44973                           
 44974                           ; BSR set to: 0
 44975  00DDA2  A16E               	btfss	___fldiv@b& (0+255),0,b
 44976  00DDA4  D002               	goto	l3558
 44977  00DDA6                     u10140:
 44978                           
 44979                           ; BSR set to: 0
 44980  00DDA6  0E01               	movlw	1
 44981  00DDA8  6F86               	movwf	___fldiv@aexp& (0+255),b
 44982  00DDAA                     l3558:
 44983                           
 44984                           ; BSR set to: 0
 44985                           
 44986                           ; BSR set to: 0
 44987                           
 44988                           ; BSR set to: 0
 44989  00DDAA  5186               	movf	___fldiv@aexp& (0+255),w,b
 44990  00DDAC  B4D8               	btfsc	status,2,c
 44991  00DDAE  D01F               	goto	l3560
 44992                           
 44993                           ; BSR set to: 0
 44994  00DDB0  0E01               	movlw	1
 44995  00DDB2  276E               	addwf	___fldiv@b& (0+255),f,b
 44996  00DDB4  0E00               	movlw	0
 44997  00DDB6  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 44998  00DDB8  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 44999  00DDBA  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 45000                           
 45001                           ; BSR set to: 0
 45002  00DDBC  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 45003  00DDBE  D017               	goto	l3560
 45004                           
 45005                           ; BSR set to: 0
 45006  00DDC0  C06E  F076         	movff	___fldiv@b,??___fldiv
 45007  00DDC4  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 45008  00DDC8  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 45009  00DDCC  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 45010  00DDD0  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 45011  00DDD2  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 45012  00DDD4  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 45013  00DDD6  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 45014  00DDD8  3376               	rrcf	??___fldiv& (0+255),f,b
 45015  00DDDA  C076  F06E         	movff	??___fldiv,___fldiv@b
 45016  00DDDE  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 45017  00DDE2  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 45018  00DDE6  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 45019                           
 45020                           ; BSR set to: 0
 45021  00DDEA  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 45022  00DDEC  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 45023  00DDEE                     l3560:
 45024                           
 45025                           ; BSR set to: 0
 45026                           
 45027                           ; BSR set to: 0
 45028                           
 45029                           ; BSR set to: 0
 45030  00DDEE  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45031  00DDF0  D010               	goto	l3561
 45032  00DDF2  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45033  00DDF4  E103               	bnz	u10170
 45034  00DDF6  297F               	incf	___fldiv@new_exp& (0+255),w,b
 45035  00DDF8  A0D8               	btfss	status,0,c
 45036  00DDFA  D00B               	goto	l3561
 45037  00DDFC                     u10170:
 45038                           
 45039                           ; BSR set to: 0
 45040  00DDFC  0E00               	movlw	0
 45041  00DDFE  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45042  00DE00  697F               	setf	___fldiv@new_exp& (0+255),b
 45043  00DE02  0E00               	movlw	0
 45044  00DE04  6F6E               	movwf	___fldiv@b& (0+255),b
 45045  00DE06  0E00               	movlw	0
 45046  00DE08  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45047  00DE0A  0E00               	movlw	0
 45048  00DE0C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45049  00DE0E  0E00               	movlw	0
 45050  00DE10  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45051  00DE12                     l3561:
 45052                           
 45053                           ; BSR set to: 0
 45054                           
 45055                           ; BSR set to: 0
 45056  00DE12  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45057  00DE14  D005               	goto	u10180
 45058  00DE16  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45059  00DE18  E111               	bnz	l12116
 45060  00DE1A  057F               	decf	___fldiv@new_exp& (0+255),w,b
 45061  00DE1C  B0D8               	btfsc	status,0,c
 45062  00DE1E  D00E               	goto	l3562
 45063  00DE20                     u10180:
 45064                           
 45065                           ; BSR set to: 0
 45066  00DE20  0E00               	movlw	0
 45067  00DE22  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45068  00DE24  0E00               	movlw	0
 45069  00DE26  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 45070  00DE28  0E00               	movlw	0
 45071  00DE2A  6F6E               	movwf	___fldiv@b& (0+255),b
 45072  00DE2C  0E00               	movlw	0
 45073  00DE2E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45074  00DE30  0E00               	movlw	0
 45075  00DE32  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45076  00DE34  0E00               	movlw	0
 45077  00DE36  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45078  00DE38  0E00               	movlw	0
 45079  00DE3A  6F7E               	movwf	___fldiv@sign& (0+255),b
 45080  00DE3C                     l3562:
 45081  00DE3C                     l12116:
 45082                           
 45083                           ; BSR set to: 0
 45084  00DE3C  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 45085                           
 45086                           ; BSR set to: 0
 45087  00DE40  A185               	btfss	___fldiv@bexp& (0+255),0,b
 45088  00DE42  D002               	goto	l3563
 45089                           
 45090                           ; BSR set to: 0
 45091  00DE44  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 45092  00DE46  D001               	goto	l3564
 45093  00DE48                     l3563:
 45094                           
 45095                           ; BSR set to: 0
 45096                           
 45097                           ; BSR set to: 0
 45098  00DE48  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 45099  00DE4A                     l3564:
 45100                           
 45101                           ; BSR set to: 0
 45102                           
 45103                           ; BSR set to: 0
 45104  00DE4A  90D8               	bcf	status,0,c
 45105  00DE4C  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 45106  00DE4E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45107                           
 45108                           ; BSR set to: 0
 45109  00DE50  517E               	movf	___fldiv@sign& (0+255),w,b
 45110  00DE52  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 45111                           
 45112                           ; BSR set to: 0
 45113  00DE54  C06E  F06E         	movff	___fldiv@b,?___fldiv
 45114  00DE58  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 45115  00DE5C  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 45116  00DE60  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 45117  00DE64  0012               	return	
 45118  00DE66                     __end_of___fldiv:
 45119                           	opt stack 0
 45120                           tosu	equ	0xFFF
 45121                           tosh	equ	0xFFE
 45122                           tosl	equ	0xFFD
 45123                           pclath	equ	0xFFA
 45124                           tblptru	equ	0xFF8
 45125                           tblptrh	equ	0xFF7
 45126                           tblptrl	equ	0xFF6
 45127                           tablat	equ	0xFF5
 45128                           prodh	equ	0xFF4
 45129                           prodl	equ	0xFF3
 45130                           intcon	equ	0xFF2
 45131                           indf0	equ	0xFEF
 45132                           postinc0	equ	0xFEE
 45133                           fsr0h	equ	0xFEA
 45134                           fsr0l	equ	0xFE9
 45135                           wreg	equ	0xFE8
 45136                           indf1	equ	0xFE7
 45137                           postinc1	equ	0xFE6
 45138                           postdec1	equ	0xFE5
 45139                           plusw1	equ	0xFE3
 45140                           fsr1h	equ	0xFE2
 45141                           fsr1l	equ	0xFE1
 45142                           indf2	equ	0xFDF
 45143                           postinc2	equ	0xFDE
 45144                           postdec2	equ	0xFDD
 45145                           plusw2	equ	0xFDB
 45146                           fsr2h	equ	0xFDA
 45147                           fsr2l	equ	0xFD9
 45148                           status	equ	0xFD8
 45149                           
 45150 ;; *************** function _USBTransferOnePacket *****************
 45151 ;; Defined at:
 45152 ;;		line 995 in file "usb_device.c"
 45153 ;; Parameters:    Size  Location     Type
 45154 ;;  ep              1    wreg     unsigned char 
 45155 ;;  dir             1    0[BANK0 ] unsigned char 
 45156 ;;  data            2    1[BANK0 ] PTR unsigned char 
 45157 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 45158 ;;		 -> msd_cbw(31), NULL(0), 
 45159 ;;  len             1    3[BANK0 ] unsigned char 
 45160 ;; Auto vars:     Size  Location     Type
 45161 ;;  ep              1    8[BANK0 ] unsigned char 
 45162 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 45163 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 45164 ;; Return value:  Size  Location     Type
 45165 ;;                  2    0[BANK0 ] PTR void 
 45166 ;; Registers used:
 45167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45168 ;; Tracked objects:
 45169 ;;		On entry : 0/0
 45170 ;;		On exit  : 0/0
 45171 ;;		Unchanged: 0/0
 45172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45173 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45174 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45176 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45177 ;;Total ram usage:       11 bytes
 45178 ;; Hardware stack levels used:    1
 45179 ;; Hardware stack levels required when called:   10
 45180 ;; This function calls:
 45181 ;;		Nothing
 45182 ;; This function is called by:
 45183 ;;		_MSDTasks
 45184 ;;		_MSDProcessCommandMediaPresent
 45185 ;;		_MSDReadHandler
 45186 ;;		_MSDWriteHandler
 45187 ;;		_APP_DeviceCustomHIDTasks
 45188 ;; This function uses a non-reentrant model
 45189 ;;
 45190                           
 45191                           	psect	text184
 45192  010FD4                     __ptext184:
 45193                           	opt stack 0
 45194  010FD4                     _USBTransferOnePacket:
 45195                           	opt stack 18
 45196                           
 45197                           ; BSR set to: 0
 45198                           ;incstack = 0
 45199                           ;USBTransferOnePacket@ep stored from wreg
 45200  010FD4  0100               	movlb	0	; () banked
 45201  010FD6  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 45202                           
 45203                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 45204  010FD8  0100               	movlb	0	; () banked
 45205  010FDA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45206  010FDC  B4D8               	btfsc	status,2,c
 45207  010FDE  D007               	goto	l184
 45208                           
 45209                           ; BSR set to: 0
 45210                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 45211  010FE0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45212  010FE2  0D02               	mullw	2
 45213  010FE4  0E1B               	movlw	low _pBDTEntryIn
 45214  010FE6  24F3               	addwf	prodl,w,c
 45215  010FE8  6ED9               	movwf	fsr2l,c
 45216  010FEA  0E01               	movlw	high _pBDTEntryIn
 45217  010FEC  D006               	goto	L70
 45218  010FEE                     l184:
 45219                           
 45220                           ; BSR set to: 0
 45221                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 45222                           
 45223                           ; BSR set to: 0
 45224  010FEE  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45225  010FF0  0D02               	mullw	2
 45226  010FF2  0E21               	movlw	low _pBDTEntryOut
 45227  010FF4  24F3               	addwf	prodl,w,c
 45228  010FF6  6ED9               	movwf	fsr2l,c
 45229  010FF8  0E01               	movlw	high _pBDTEntryOut
 45230  010FFA                     L70:
 45231  010FFA  20F4               	addwfc	prodh,w,c
 45232  010FFC  6EDA               	movwf	fsr2h,c
 45233  010FFE  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 45234  011002  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 45235                           
 45236                           ; BSR set to: 0
 45237                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 45238                           
 45239                           ; BSR set to: 0
 45240  011006  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45241  011008  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45242  01100A  A4D8               	btfss	status,2,c
 45243  01100C  D005               	goto	l186
 45244                           
 45245                           ; BSR set to: 0
 45246                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 45247  01100E  0E00               	movlw	0
 45248  011010  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 45249  011012  0E00               	movlw	0
 45250  011014  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 45251                           
 45252                           ; BSR set to: 0
 45253  011016  0012               	return	
 45254  011018                     l186:
 45255                           
 45256                           ; BSR set to: 0
 45257                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 45258                           
 45259                           ; BSR set to: 0
 45260  011018  EE20 F002          	lfsr	2,2
 45261  01101C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45262  01101E  26D9               	addwf	fsr2l,f,c
 45263  011020  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45264  011022  22DA               	addwfc	fsr2h,f,c
 45265  011024  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 45266  011028  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 45267                           
 45268                           ;usb_device.c: 1030: handle->CNT = len;
 45269  01102C  EE20 F001          	lfsr	2,1
 45270  011030  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45271  011032  26D9               	addwf	fsr2l,f,c
 45272  011034  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45273  011036  22DA               	addwfc	fsr2h,f,c
 45274  011038  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 45275                           
 45276                           ; BSR set to: 0
 45277                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 45278  01103C  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45279  011040  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45280  011044  0E40               	movlw	64
 45281  011046  16DF               	andwf	indf2,f,c
 45282                           
 45283                           ; BSR set to: 0
 45284                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 45285  011048  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45286  01104C  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45287  011050  0E00               	movlw	0
 45288  011052  86DB               	bsf	plusw2,3,c
 45289                           
 45290                           ; BSR set to: 0
 45291                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 45292  011054  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45293  011058  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45294  01105C  0E00               	movlw	0
 45295  01105E  8EDB               	bsf	plusw2,7,c
 45296                           
 45297                           ; BSR set to: 0
 45298                           ;usb_device.c: 1036: if(dir != 0)
 45299  011060  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45300  011062  B4D8               	btfsc	status,2,c
 45301  011064  D018               	goto	l188
 45302                           
 45303                           ; BSR set to: 0
 45304                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 45305  011066  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45306  011068  0D02               	mullw	2
 45307  01106A  0E1B               	movlw	low _pBDTEntryIn
 45308  01106C  24F3               	addwf	prodl,w,c
 45309  01106E  6ED9               	movwf	fsr2l,c
 45310  011070  0E01               	movlw	high _pBDTEntryIn
 45311  011072  20F4               	addwfc	prodh,w,c
 45312  011074  6EDA               	movwf	fsr2h,c
 45313  011076  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45314  01107A  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45315  01107E  0E04               	movlw	4
 45316  011080  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45317  011082  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45318  011084  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45319  011086  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45320  011088  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45321  01108A  0D02               	mullw	2
 45322  01108C  0E1B               	movlw	low _pBDTEntryIn
 45323  01108E  24F3               	addwf	prodl,w,c
 45324  011090  6ED9               	movwf	fsr2l,c
 45325  011092  0E01               	movlw	high _pBDTEntryIn
 45326  011094  D017               	goto	L71
 45327  011096                     l188:
 45328                           
 45329                           ; BSR set to: 0
 45330                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 45331                           
 45332                           ; BSR set to: 0
 45333  011096  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45334  011098  0D02               	mullw	2
 45335  01109A  0E21               	movlw	low _pBDTEntryOut
 45336  01109C  24F3               	addwf	prodl,w,c
 45337  01109E  6ED9               	movwf	fsr2l,c
 45338  0110A0  0E01               	movlw	high _pBDTEntryOut
 45339  0110A2  20F4               	addwfc	prodh,w,c
 45340  0110A4  6EDA               	movwf	fsr2h,c
 45341  0110A6  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45342  0110AA  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45343  0110AE  0E04               	movlw	4
 45344  0110B0  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45345  0110B2  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45346  0110B4  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45347  0110B6  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45348  0110B8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45349  0110BA  0D02               	mullw	2
 45350  0110BC  0E21               	movlw	low _pBDTEntryOut
 45351  0110BE  24F3               	addwf	prodl,w,c
 45352  0110C0  6ED9               	movwf	fsr2l,c
 45353  0110C2  0E01               	movlw	high _pBDTEntryOut
 45354  0110C4                     L71:
 45355  0110C4  20F4               	addwfc	prodh,w,c
 45356  0110C6  6EDA               	movwf	fsr2h,c
 45357  0110C8  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 45358  0110CC  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 45359                           
 45360                           ; BSR set to: 0
 45361                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 45362                           
 45363                           ; BSR set to: 0
 45364  0110D0  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 45365  0110D4  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 45366  0110D8  0012               	return	
 45367  0110DA                     __end_of_USBTransferOnePacket:
 45368                           	opt stack 0
 45369                           tosu	equ	0xFFF
 45370                           tosh	equ	0xFFE
 45371                           tosl	equ	0xFFD
 45372                           pclath	equ	0xFFA
 45373                           tblptru	equ	0xFF8
 45374                           tblptrh	equ	0xFF7
 45375                           tblptrl	equ	0xFF6
 45376                           tablat	equ	0xFF5
 45377                           prodh	equ	0xFF4
 45378                           prodl	equ	0xFF3
 45379                           intcon	equ	0xFF2
 45380                           indf0	equ	0xFEF
 45381                           postinc0	equ	0xFEE
 45382                           fsr0h	equ	0xFEA
 45383                           fsr0l	equ	0xFE9
 45384                           wreg	equ	0xFE8
 45385                           indf1	equ	0xFE7
 45386                           postinc1	equ	0xFE6
 45387                           postdec1	equ	0xFE5
 45388                           plusw1	equ	0xFE3
 45389                           fsr1h	equ	0xFE2
 45390                           fsr1l	equ	0xFE1
 45391                           indf2	equ	0xFDF
 45392                           postinc2	equ	0xFDE
 45393                           postdec2	equ	0xFDD
 45394                           plusw2	equ	0xFDB
 45395                           fsr2h	equ	0xFDA
 45396                           fsr2l	equ	0xFD9
 45397                           status	equ	0xFD8
 45398                           
 45399 ;; *************** function _SYS_InterruptHigh *****************
 45400 ;; Defined at:
 45401 ;;		line 162 in file "system.c"
 45402 ;; Parameters:    Size  Location     Type
 45403 ;;		None
 45404 ;; Auto vars:     Size  Location     Type
 45405 ;;		None
 45406 ;; Return value:  Size  Location     Type
 45407 ;;                  1    wreg      void 
 45408 ;; Registers used:
 45409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45410 ;; Tracked objects:
 45411 ;;		On entry : 0/0
 45412 ;;		On exit  : 0/0
 45413 ;;		Unchanged: 0/0
 45414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45417 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45418 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45419 ;;Total ram usage:       14 bytes
 45420 ;; Hardware stack levels used:    1
 45421 ;; Hardware stack levels required when called:    9
 45422 ;; This function calls:
 45423 ;;		_USBDeviceTasks
 45424 ;;		_motor_isr
 45425 ;;		_tmr0_isr
 45426 ;; This function is called by:
 45427 ;;		Interrupt level 2
 45428 ;; This function uses a non-reentrant model
 45429 ;;
 45430                           
 45431                           	psect	intcode
 45432  009008                     __pintcode:
 45433                           	opt stack 0
 45434  009008                     _SYS_InterruptHigh:
 45435                           	opt stack 9
 45436                           
 45437                           ; BSR set to: 0
 45438                           ;incstack = 0
 45439  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 45440  00900A  CFFA F044          	movff	pclath,??_SYS_InterruptHigh
 45441  00900E  CFFB F045          	movff	pclatu,??_SYS_InterruptHigh+1
 45442  009012  CFE9 F046          	movff	fsr0l,??_SYS_InterruptHigh+2
 45443  009016  CFEA F047          	movff	fsr0h,??_SYS_InterruptHigh+3
 45444  00901A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh+4
 45445  00901E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+5
 45446  009022  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+6
 45447  009026  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+7
 45448  00902A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+8
 45449  00902E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+9
 45450  009032  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+10
 45451  009036  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+11
 45452  00903A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+12
 45453  00903E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+13
 45454                           
 45455                           ;system.c: 165: USBDeviceTasks();
 45456  009042  ECD1  F07F         	call	_USBDeviceTasks	;wreg free
 45457                           
 45458                           ;system.c: 169: if(PIR1bits.TMR2IF)
 45459  009046  B29E               	btfsc	3998,1,c	;volatile
 45460                           
 45461                           ;system.c: 170: {;system.c: 171: motor_isr();
 45462  009048  ECFE  F05B         	call	_motor_isr	;wreg free
 45463                           
 45464                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 45465  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 45466                           
 45467                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 45468  00904E  EC93  F0A8         	call	_tmr0_isr	;wreg free
 45469  009052  C051  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 45470  009056  C050  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 45471  00905A  C04F  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 45472  00905E  C04E  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 45473  009062  C04D  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 45474  009066  C04C  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 45475  00906A  C04B  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 45476  00906E  C04A  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 45477  009072  C049  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 45478  009076  C048  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 45479  00907A  C047  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 45480  00907E  C046  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 45481  009082  C045  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 45482  009086  C044  FFFA         	movff	??_SYS_InterruptHigh,pclath
 45483  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 45484  00908C  0011               	retfie		f
 45485  00908E                     __end_of_SYS_InterruptHigh:
 45486                           	opt stack 0
 45487                           tosu	equ	0xFFF
 45488                           tosh	equ	0xFFE
 45489                           tosl	equ	0xFFD
 45490                           pclatu	equ	0xFFB
 45491                           pclath	equ	0xFFA
 45492                           tblptru	equ	0xFF8
 45493                           tblptrh	equ	0xFF7
 45494                           tblptrl	equ	0xFF6
 45495                           tablat	equ	0xFF5
 45496                           prodh	equ	0xFF4
 45497                           prodl	equ	0xFF3
 45498                           intcon	equ	0xFF2
 45499                           indf0	equ	0xFEF
 45500                           postinc0	equ	0xFEE
 45501                           fsr0h	equ	0xFEA
 45502                           fsr0l	equ	0xFE9
 45503                           wreg	equ	0xFE8
 45504                           indf1	equ	0xFE7
 45505                           postinc1	equ	0xFE6
 45506                           postdec1	equ	0xFE5
 45507                           plusw1	equ	0xFE3
 45508                           fsr1h	equ	0xFE2
 45509                           fsr1l	equ	0xFE1
 45510                           indf2	equ	0xFDF
 45511                           postinc2	equ	0xFDE
 45512                           postdec2	equ	0xFDD
 45513                           plusw2	equ	0xFDB
 45514                           fsr2h	equ	0xFDA
 45515                           fsr2l	equ	0xFD9
 45516                           status	equ	0xFD8
 45517                           
 45518 ;; *************** function _tmr0_isr *****************
 45519 ;; Defined at:
 45520 ;;		line 24 in file "os.c"
 45521 ;; Parameters:    Size  Location     Type
 45522 ;;		None
 45523 ;; Auto vars:     Size  Location     Type
 45524 ;;		None
 45525 ;; Return value:  Size  Location     Type
 45526 ;;                  1    wreg      void 
 45527 ;; Registers used:
 45528 ;;		wreg, status,2, status,0, cstack
 45529 ;; Tracked objects:
 45530 ;;		On entry : 0/0
 45531 ;;		On exit  : 0/0
 45532 ;;		Unchanged: 0/0
 45533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45538 ;;Total ram usage:        0 bytes
 45539 ;; Hardware stack levels used:    1
 45540 ;; Hardware stack levels required when called:    1
 45541 ;; This function calls:
 45542 ;;		_encoder_run
 45543 ;; This function is called by:
 45544 ;;		_SYS_InterruptHigh
 45545 ;; This function uses a non-reentrant model
 45546 ;;
 45547                           
 45548                           	psect	text186
 45549  015126                     __ptext186:
 45550                           	opt stack 0
 45551  015126                     _tmr0_isr:
 45552                           	opt stack 16
 45553                           
 45554                           ;os.c: 27: if(INTCONbits.T0IF)
 45555                           
 45556                           ;incstack = 0
 45557  015126  A4F2               	btfss	intcon,2,c	;volatile
 45558  015128  0012               	return	
 45559                           
 45560                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 45561  01512A  0EFA               	movlw	250
 45562  01512C  6ED7               	movwf	4055,c	;volatile
 45563                           
 45564                           ;os.c: 31: TMR0L = 0x24;
 45565  01512E  0E24               	movlw	36
 45566  015130  6ED6               	movwf	4054,c	;volatile
 45567                           
 45568                           ;os.c: 34: INTCONbits.T0IF = 0;
 45569  015132  94F2               	bcf	intcon,2,c	;volatile
 45570                           
 45571                           ;os.c: 37: encoder_run();
 45572  015134  EC6A  F08B         	call	_encoder_run	;wreg free
 45573                           
 45574                           ;os.c: 40: ++os.subTimeSlot;
 45575  015138  0101               	movlb	1	; () banked
 45576  01513A  2B71               	incf	_os& (0+255),f,b	;volatile
 45577                           
 45578                           ; BSR set to: 1
 45579                           ;os.c: 41: if(os.subTimeSlot>=10)
 45580  01513C  0E09               	movlw	9
 45581  01513E  6571               	cpfsgt	_os& (0+255),b	;volatile
 45582  015140  0012               	return	
 45583                           
 45584                           ; BSR set to: 1
 45585                           ;os.c: 42: {;os.c: 43: if(os.done)
 45586  015142  5173               	movf	(_os+2)& (0+255),w,b	;volatile
 45587  015144  B4D8               	btfsc	status,2,c
 45588  015146  0012               	return	
 45589                           
 45590                           ; BSR set to: 1
 45591                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 45592  015148  2B72               	incf	(_os+1)& (0+255),f,b	;volatile
 45593                           
 45594                           ; BSR set to: 1
 45595                           ;os.c: 46: if(os.timeSlot==16)
 45596  01514A  0E10               	movlw	16
 45597  01514C  1972               	xorwf	(_os+1)& (0+255),w,b	;volatile
 45598  01514E  A4D8               	btfss	status,2,c
 45599  015150  D002               	goto	i2l1066
 45600                           
 45601                           ; BSR set to: 1
 45602                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 45603  015152  0E00               	movlw	0
 45604  015154  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 45605  015156                     i2l1066:
 45606                           
 45607                           ; BSR set to: 1
 45608                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 45609  015156  0E00               	movlw	0
 45610  015158  6F71               	movwf	_os& (0+255),b	;volatile
 45611                           
 45612                           ;os.c: 51: os.done = 0;
 45613  01515A  0E00               	movlw	0
 45614  01515C  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 45615                           
 45616                           ; BSR set to: 1
 45617                           
 45618                           ; BSR set to: 1
 45619  01515E  0012               	return	
 45620  015160                     __end_of_tmr0_isr:
 45621                           	opt stack 0
 45622                           tosu	equ	0xFFF
 45623                           tosh	equ	0xFFE
 45624                           tosl	equ	0xFFD
 45625                           pclatu	equ	0xFFB
 45626                           pclath	equ	0xFFA
 45627                           tblptru	equ	0xFF8
 45628                           tblptrh	equ	0xFF7
 45629                           tblptrl	equ	0xFF6
 45630                           tablat	equ	0xFF5
 45631                           prodh	equ	0xFF4
 45632                           prodl	equ	0xFF3
 45633                           intcon	equ	0xFF2
 45634                           indf0	equ	0xFEF
 45635                           postinc0	equ	0xFEE
 45636                           fsr0h	equ	0xFEA
 45637                           fsr0l	equ	0xFE9
 45638                           wreg	equ	0xFE8
 45639                           indf1	equ	0xFE7
 45640                           postinc1	equ	0xFE6
 45641                           postdec1	equ	0xFE5
 45642                           plusw1	equ	0xFE3
 45643                           fsr1h	equ	0xFE2
 45644                           fsr1l	equ	0xFE1
 45645                           indf2	equ	0xFDF
 45646                           postinc2	equ	0xFDE
 45647                           postdec2	equ	0xFDD
 45648                           plusw2	equ	0xFDB
 45649                           fsr2h	equ	0xFDA
 45650                           fsr2l	equ	0xFD9
 45651                           status	equ	0xFD8
 45652                           
 45653 ;; *************** function _encoder_run *****************
 45654 ;; Defined at:
 45655 ;;		line 103 in file "encoder.c"
 45656 ;; Parameters:    Size  Location     Type
 45657 ;;		None
 45658 ;; Auto vars:     Size  Location     Type
 45659 ;;		None
 45660 ;; Return value:  Size  Location     Type
 45661 ;;                  1    wreg      void 
 45662 ;; Registers used:
 45663 ;;		wreg, status,2, status,0
 45664 ;; Tracked objects:
 45665 ;;		On entry : 0/0
 45666 ;;		On exit  : 0/0
 45667 ;;		Unchanged: 0/0
 45668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45673 ;;Total ram usage:        0 bytes
 45674 ;; Hardware stack levels used:    1
 45675 ;; This function calls:
 45676 ;;		Nothing
 45677 ;; This function is called by:
 45678 ;;		_tmr0_isr
 45679 ;; This function uses a non-reentrant model
 45680 ;;
 45681                           
 45682                           	psect	text187
 45683  0116D4                     __ptext187:
 45684                           	opt stack 0
 45685  0116D4                     _encoder_run:
 45686                           	opt stack 16
 45687                           
 45688                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 45689                           
 45690                           ;incstack = 0
 45691  0116D4  5084               	movf	3972,w,c	;volatile
 45692  0116D6  0B07               	andlw	7
 45693  0116D8  0101               	movlb	1	; () banked
 45694  0116DA  1954               	xorwf	_enc1& (0+255),w,b
 45695  0116DC  B4D8               	btfsc	status,2,c
 45696  0116DE  D033               	goto	i2l2644
 45697                           
 45698                           ; BSR set to: 1
 45699                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 45700  0116E0  B084               	btfsc	3972,0,c	;volatile
 45701                           
 45702                           ; BSR set to: 1
 45703  0116E2  A484               	btfss	3972,2,c	;volatile
 45704  0116E4  D00D               	goto	i2l2647
 45705                           
 45706                           ; BSR set to: 1
 45707  0116E6  B154               	btfsc	_enc1& (0+255),0,b
 45708  0116E8  D00B               	goto	i2l2647
 45709                           
 45710                           ; BSR set to: 1
 45711                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 45712  0116EA  0E7F               	movlw	127
 45713  0116EC  1974               	xorwf	(_os+3)& (0+255),w,b	;volatile
 45714  0116EE  B4D8               	btfsc	status,2,c
 45715  0116F0  D007               	goto	i2l2647
 45716                           
 45717                           ; BSR set to: 1
 45718                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 45719  0116F2  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 45720                           
 45721                           ; BSR set to: 1
 45722                           ;encoder.c: 113: if(config.beep_duration)
 45723  0116F4  51B6               	movf	(_config+21)& (0+255),w,b
 45724  0116F6  B4D8               	btfsc	status,2,c
 45725  0116F8  D003               	goto	i2l2647
 45726                           
 45727                           ; BSR set to: 1
 45728                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 45729  0116FA  8E8B               	bsf	3979,7,c	;volatile
 45730                           
 45731                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 45732  0116FC  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45733  011700                     i2l2647:
 45734                           
 45735                           ; BSR set to: 1
 45736                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 45737                           
 45738                           ; BSR set to: 1
 45739                           
 45740                           ; BSR set to: 1
 45741  011700  B484               	btfsc	3972,2,c	;volatile
 45742                           
 45743                           ; BSR set to: 1
 45744  011702  A084               	btfss	3972,0,c	;volatile
 45745  011704  D00E               	goto	i2l2650
 45746                           
 45747                           ; BSR set to: 1
 45748  011706  B554               	btfsc	_enc1& (0+255),2,b
 45749  011708  D00C               	goto	i2l2650
 45750                           
 45751                           ; BSR set to: 1
 45752                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 45753  01170A  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 45754  01170C  0A80               	xorlw	128
 45755  01170E  0FFF               	addlw	255
 45756  011710  A0D8               	btfss	status,0,c
 45757  011712  D007               	goto	i2l2650
 45758                           
 45759                           ; BSR set to: 1
 45760                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 45761  011714  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 45762                           
 45763                           ; BSR set to: 1
 45764                           ;encoder.c: 126: if(config.beep_duration)
 45765  011716  51B6               	movf	(_config+21)& (0+255),w,b
 45766  011718  B4D8               	btfsc	status,2,c
 45767  01171A  D003               	goto	i2l2650
 45768                           
 45769                           ; BSR set to: 1
 45770                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 45771  01171C  8E8B               	bsf	3979,7,c	;volatile
 45772                           
 45773                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 45774  01171E  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45775  011722                     i2l2650:
 45776                           
 45777                           ; BSR set to: 1
 45778                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 45779                           
 45780                           ; BSR set to: 1
 45781                           
 45782                           ; BSR set to: 1
 45783  011722  B284               	btfsc	3972,1,c	;volatile
 45784                           
 45785                           ; BSR set to: 1
 45786  011724  B354               	btfsc	_enc1& (0+255),1,b
 45787  011726  D008               	goto	i2l2652
 45788                           
 45789                           ; BSR set to: 1
 45790                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 45791  011728  0E01               	movlw	1
 45792  01172A  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 45793                           
 45794                           ;encoder.c: 137: if(config.beep_duration)
 45795  01172C  51B6               	movf	(_config+21)& (0+255),w,b
 45796  01172E  B4D8               	btfsc	status,2,c
 45797  011730  D003               	goto	i2l2652
 45798                           
 45799                           ; BSR set to: 1
 45800                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 45801  011732  8E8B               	bsf	3979,7,c	;volatile
 45802                           
 45803                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 45804  011734  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45805  011738                     i2l2652:
 45806                           
 45807                           ; BSR set to: 1
 45808                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 45809                           
 45810                           ; BSR set to: 1
 45811  011738  A284               	btfss	3972,1,c	;volatile
 45812                           
 45813                           ; BSR set to: 1
 45814  01173A  A354               	btfss	_enc1& (0+255),1,b
 45815  01173C  D001               	goto	i2l2653
 45816                           
 45817                           ; BSR set to: 1
 45818                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 45819  01173E  6975               	setf	(_os+4)& (0+255),b	;volatile
 45820  011740                     i2l2653:
 45821                           
 45822                           ; BSR set to: 1
 45823                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 45824                           
 45825                           ; BSR set to: 1
 45826  011740  5084               	movf	3972,w,c	;volatile
 45827  011742  0B07               	andlw	7
 45828  011744  6F54               	movwf	_enc1& (0+255),b
 45829  011746                     i2l2644:
 45830                           
 45831                           ; BSR set to: 1
 45832                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 45833  011746  5080               	movf	3968,w,c	;volatile
 45834  011748  0B07               	andlw	7
 45835  01174A  1953               	xorwf	_enc2& (0+255),w,b
 45836  01174C  B4D8               	btfsc	status,2,c
 45837  01174E  D033               	goto	i2l2654
 45838                           
 45839                           ; BSR set to: 1
 45840                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 45841  011750  B480               	btfsc	3968,2,c	;volatile
 45842                           
 45843                           ; BSR set to: 1
 45844  011752  A080               	btfss	3968,0,c	;volatile
 45845  011754  D00D               	goto	i2l2657
 45846                           
 45847                           ; BSR set to: 1
 45848  011756  B553               	btfsc	_enc2& (0+255),2,b
 45849  011758  D00B               	goto	i2l2657
 45850                           
 45851                           ; BSR set to: 1
 45852                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 45853  01175A  0E7F               	movlw	127
 45854  01175C  1976               	xorwf	(_os+5)& (0+255),w,b	;volatile
 45855  01175E  B4D8               	btfsc	status,2,c
 45856  011760  D007               	goto	i2l2657
 45857                           
 45858                           ; BSR set to: 1
 45859                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 45860  011762  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 45861                           
 45862                           ; BSR set to: 1
 45863                           ;encoder.c: 160: if(config.beep_duration)
 45864  011764  51B6               	movf	(_config+21)& (0+255),w,b
 45865  011766  B4D8               	btfsc	status,2,c
 45866  011768  D003               	goto	i2l2657
 45867                           
 45868                           ; BSR set to: 1
 45869                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 45870  01176A  8E8B               	bsf	3979,7,c	;volatile
 45871                           
 45872                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 45873  01176C  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45874  011770                     i2l2657:
 45875                           
 45876                           ; BSR set to: 1
 45877                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 45878                           
 45879                           ; BSR set to: 1
 45880                           
 45881                           ; BSR set to: 1
 45882  011770  B080               	btfsc	3968,0,c	;volatile
 45883                           
 45884                           ; BSR set to: 1
 45885  011772  A480               	btfss	3968,2,c	;volatile
 45886  011774  D00E               	goto	i2l2660
 45887                           
 45888                           ; BSR set to: 1
 45889  011776  B153               	btfsc	_enc2& (0+255),0,b
 45890  011778  D00C               	goto	i2l2660
 45891                           
 45892                           ; BSR set to: 1
 45893                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 45894  01177A  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 45895  01177C  0A80               	xorlw	128
 45896  01177E  0FFF               	addlw	255
 45897  011780  A0D8               	btfss	status,0,c
 45898  011782  D007               	goto	i2l2660
 45899                           
 45900                           ; BSR set to: 1
 45901                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 45902  011784  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 45903                           
 45904                           ; BSR set to: 1
 45905                           ;encoder.c: 173: if(config.beep_duration)
 45906  011786  51B6               	movf	(_config+21)& (0+255),w,b
 45907  011788  B4D8               	btfsc	status,2,c
 45908  01178A  D003               	goto	i2l2660
 45909                           
 45910                           ; BSR set to: 1
 45911                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 45912  01178C  8E8B               	bsf	3979,7,c	;volatile
 45913                           
 45914                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 45915  01178E  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45916  011792                     i2l2660:
 45917                           
 45918                           ; BSR set to: 1
 45919                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 45920                           
 45921                           ; BSR set to: 1
 45922                           
 45923                           ; BSR set to: 1
 45924  011792  B280               	btfsc	3968,1,c	;volatile
 45925                           
 45926                           ; BSR set to: 1
 45927  011794  B353               	btfsc	_enc2& (0+255),1,b
 45928  011796  D008               	goto	i2l2662
 45929                           
 45930                           ; BSR set to: 1
 45931                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 45932  011798  0E01               	movlw	1
 45933  01179A  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 45934                           
 45935                           ;encoder.c: 184: if(config.beep_duration)
 45936  01179C  51B6               	movf	(_config+21)& (0+255),w,b
 45937  01179E  B4D8               	btfsc	status,2,c
 45938  0117A0  D003               	goto	i2l2662
 45939                           
 45940                           ; BSR set to: 1
 45941                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 45942  0117A2  8E8B               	bsf	3979,7,c	;volatile
 45943                           
 45944                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 45945  0117A4  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45946  0117A8                     i2l2662:
 45947                           
 45948                           ; BSR set to: 1
 45949                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 45950                           
 45951                           ; BSR set to: 1
 45952  0117A8  A280               	btfss	3968,1,c	;volatile
 45953                           
 45954                           ; BSR set to: 1
 45955  0117AA  A353               	btfss	_enc2& (0+255),1,b
 45956  0117AC  D001               	goto	i2l2663
 45957                           
 45958                           ; BSR set to: 1
 45959                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 45960  0117AE  6977               	setf	(_os+6)& (0+255),b	;volatile
 45961  0117B0                     i2l2663:
 45962                           
 45963                           ; BSR set to: 1
 45964                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 45965                           
 45966                           ; BSR set to: 1
 45967  0117B0  5080               	movf	3968,w,c	;volatile
 45968  0117B2  0B07               	andlw	7
 45969  0117B4  6F53               	movwf	_enc2& (0+255),b
 45970  0117B6                     i2l2654:
 45971                           
 45972                           ; BSR set to: 1
 45973                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 45974                           
 45975                           ; BSR set to: 1
 45976  0117B6  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45977  0117B8  B4D8               	btfsc	status,2,c
 45978  0117BA  0012               	return	
 45979                           
 45980                           ; BSR set to: 1
 45981                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 45982  0117BC  0797               	decf	(_os+38)& (0+255),f,b	;volatile
 45983                           
 45984                           ; BSR set to: 1
 45985                           ;encoder.c: 203: if(!os.beep_count)
 45986  0117BE  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 45987  0117C0  A4D8               	btfss	status,2,c
 45988  0117C2  0012               	return	
 45989                           
 45990                           ; BSR set to: 1
 45991                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 45992  0117C4  9E8B               	bcf	3979,7,c	;volatile
 45993                           
 45994                           ; BSR set to: 1
 45995  0117C6  0012               	return	
 45996  0117C8                     __end_of_encoder_run:
 45997                           	opt stack 0
 45998                           tosu	equ	0xFFF
 45999                           tosh	equ	0xFFE
 46000                           tosl	equ	0xFFD
 46001                           pclatu	equ	0xFFB
 46002                           pclath	equ	0xFFA
 46003                           tblptru	equ	0xFF8
 46004                           tblptrh	equ	0xFF7
 46005                           tblptrl	equ	0xFF6
 46006                           tablat	equ	0xFF5
 46007                           prodh	equ	0xFF4
 46008                           prodl	equ	0xFF3
 46009                           intcon	equ	0xFF2
 46010                           indf0	equ	0xFEF
 46011                           postinc0	equ	0xFEE
 46012                           fsr0h	equ	0xFEA
 46013                           fsr0l	equ	0xFE9
 46014                           wreg	equ	0xFE8
 46015                           indf1	equ	0xFE7
 46016                           postinc1	equ	0xFE6
 46017                           postdec1	equ	0xFE5
 46018                           plusw1	equ	0xFE3
 46019                           fsr1h	equ	0xFE2
 46020                           fsr1l	equ	0xFE1
 46021                           indf2	equ	0xFDF
 46022                           postinc2	equ	0xFDE
 46023                           postdec2	equ	0xFDD
 46024                           plusw2	equ	0xFDB
 46025                           fsr2h	equ	0xFDA
 46026                           fsr2l	equ	0xFD9
 46027                           status	equ	0xFD8
 46028                           
 46029 ;; *************** function _motor_isr *****************
 46030 ;; Defined at:
 46031 ;;		line 365 in file "motor.c"
 46032 ;; Parameters:    Size  Location     Type
 46033 ;;		None
 46034 ;; Auto vars:     Size  Location     Type
 46035 ;;  steps_remain    4   63[COMRAM] unsigned long 
 46036 ;;  steps_until_    2   61[COMRAM] unsigned int 
 46037 ;;  steps_until_    2   59[COMRAM] unsigned int 
 46038 ;; Return value:  Size  Location     Type
 46039 ;;                  1    wreg      void 
 46040 ;; Registers used:
 46041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46042 ;; Tracked objects:
 46043 ;;		On entry : 0/0
 46044 ;;		On exit  : 0/0
 46045 ;;		Unchanged: 0/0
 46046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46048 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46049 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46050 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46051 ;;Total ram usage:       24 bytes
 46052 ;; Hardware stack levels used:    1
 46053 ;; Hardware stack levels required when called:    4
 46054 ;; This function calls:
 46055 ;;		_i2c_eeprom_writeUint32
 46056 ;; This function is called by:
 46057 ;;		_SYS_InterruptHigh
 46058 ;; This function uses a non-reentrant model
 46059 ;;
 46060                           
 46061                           	psect	text188
 46062  00B7FC                     __ptext188:
 46063                           	opt stack 0
 46064  00B7FC                     _motor_isr:
 46065                           	opt stack 13
 46066                           
 46067                           ;motor.c: 367: uint32_t steps_remaining;;motor.c: 368: uint16_t steps_until_standstill;;
      +                          motor.c: 369: uint16_t steps_until_standstill_if_accelerate;;motor.c: 372: PIR1bits.TMR2
      +                          IF = 0;
 46068                           
 46069                           ; BSR set to: 1
 46070                           ;incstack = 0
 46071  00B7FC  929E               	bcf	3998,1,c	;volatile
 46072                           
 46073                           ;motor.c: 374: if(motor_mode==MOTOR_MODE_MANUAL)
 46074  00B7FE  0101               	movlb	1	; () banked
 46075  00B800  5156               	movf	_motor_mode& (0+255),w,b
 46076  00B802  A4D8               	btfss	status,2,c
 46077  00B804  D026               	goto	i2l2480
 46078                           
 46079                           ; BSR set to: 1
 46080                           ;motor.c: 375: {;motor.c: 377: if(LATBbits.LB1)
 46081  00B806  A28A               	btfss	3978,1,c	;volatile
 46082  00B808  D023               	goto	i2l2477
 46083                           
 46084                           ; BSR set to: 1
 46085                           ;motor.c: 378: {;motor.c: 380: LATBbits.LB1 = 0;
 46086  00B80A  928A               	bcf	3978,1,c	;volatile
 46087                           
 46088                           ; BSR set to: 1
 46089                           ;motor.c: 383: if(motor_current_stepcount==motor_final_stepcount)
 46090  00B80C  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46091  00B80E  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46092  00B810  E109               	bnz	i2u1846_41
 46093  00B812  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46094  00B814  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46095  00B816  E106               	bnz	i2u1846_41
 46096  00B818  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46097  00B81A  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46098  00B81C  E103               	bnz	i2u1846_41
 46099  00B81E  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46100  00B820  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46101  00B822  A4D8               	btfss	status,2,c
 46102  00B824                     i2u1846_41:
 46103  00B824  0012               	return	
 46104                           
 46105                           ; BSR set to: 1
 46106                           ;motor.c: 384: {;motor.c: 387: T2CONbits.TMR2ON = 0;
 46107  00B826  94CA               	bcf	4042,2,c	;volatile
 46108                           
 46109                           ;motor.c: 389: PIR1bits.TMR2IF = 0;
 46110  00B828  929E               	bcf	3998,1,c	;volatile
 46111                           
 46112                           ;motor.c: 390: PIE1bits.TMR2IE = 0;
 46113  00B82A  929D               	bcf	3997,1,c	;volatile
 46114                           
 46115                           ; BSR set to: 1
 46116                           ;motor.c: 392: i2c_eeprom_writeUint32(0x200, os.current_position_in_steps);
 46117  00B82C  0E02               	movlw	2
 46118  00B82E  6E27               	movwf	i2c_eeprom_writeUint32@address+1,c
 46119  00B830  0E00               	movlw	0
 46120  00B832  6E26               	movwf	i2c_eeprom_writeUint32@address,c
 46121  00B834  C178  F028         	movff	_os+7,i2c_eeprom_writeUint32@data	;volatile
 46122  00B838  C179  F029         	movff	_os+8,i2c_eeprom_writeUint32@data+1	;volatile
 46123  00B83C  C17A  F02A         	movff	_os+9,i2c_eeprom_writeUint32@data+2	;volatile
 46124  00B840  C17B  F02B         	movff	_os+10,i2c_eeprom_writeUint32@data+3	;volatile
 46125  00B844  EC08  F0AC         	call	_i2c_eeprom_writeUint32	;wreg free
 46126                           
 46127                           ;motor.c: 394: os.busy = 0;
 46128  00B848  0E00               	movlw	0
 46129  00B84A  0101               	movlb	1	; () banked
 46130  00B84C  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 46131                           
 46132                           ; BSR set to: 1
 46133                           ;motor.c: 395: };motor.c: 398: return;
 46134                           
 46135                           ; BSR set to: 1
 46136  00B84E  0012               	return	
 46137  00B850                     i2l2477:
 46138                           
 46139                           ; BSR set to: 1
 46140                           ;motor.c: 400: else;motor.c: 401: {;motor.c: 403: LATBbits.LB1 = 1;
 46141  00B850  828A               	bsf	3978,1,c	;volatile
 46142  00B852                     i2l2480:
 46143                           
 46144                           ; BSR set to: 1
 46145                           ;motor.c: 404: };motor.c: 405: };motor.c: 407: ++motor_current_stepcount;
 46146                           
 46147                           ; BSR set to: 1
 46148                           
 46149                           ; BSR set to: 1
 46150  00B852  0E01               	movlw	1
 46151  00B854  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46152  00B856  0E00               	movlw	0
 46153  00B858  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46154  00B85A  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46155  00B85C  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46156                           
 46157                           ;motor.c: 410: os.current_position_in_steps += motor_direction;
 46158  00B85E  5155               	movf	_motor_direction& (0+255),w,b
 46159  00B860  6E2C               	movwf	??_motor_isr& (0+255),c
 46160  00B862  0E00               	movlw	0
 46161  00B864  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46162  00B866  0EFF               	movlw	255
 46163  00B868  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46164  00B86A  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46165  00B86C  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46166  00B86E  502C               	movf	??_motor_isr,w,c
 46167  00B870  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46168  00B872  502D               	movf	??_motor_isr+1,w,c
 46169  00B874  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46170  00B876  502E               	movf	??_motor_isr+2,w,c
 46171  00B878  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46172  00B87A  502F               	movf	??_motor_isr+3,w,c
 46173  00B87C  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46174                           
 46175                           ;motor.c: 411: if(os.current_position_in_steps==config.full_circle_in_steps)
 46176  00B87E  51A1               	movf	_config& (0+255),w,b
 46177  00B880  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46178  00B882  E112               	bnz	i2l18524
 46179  00B884  51A2               	movf	(_config+1)& (0+255),w,b
 46180  00B886  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46181  00B888  E10F               	bnz	i2l18524
 46182  00B88A  51A3               	movf	(_config+2)& (0+255),w,b
 46183  00B88C  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46184  00B88E  E10C               	bnz	i2l18524
 46185  00B890  51A4               	movf	(_config+3)& (0+255),w,b
 46186  00B892  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46187  00B894  A4D8               	btfss	status,2,c
 46188  00B896  D008               	goto	i2l2481
 46189                           
 46190                           ; BSR set to: 1
 46191                           ;motor.c: 412: os.current_position_in_steps = 0;
 46192  00B898  0E00               	movlw	0
 46193  00B89A  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46194  00B89C  0E00               	movlw	0
 46195  00B89E  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46196  00B8A0  0E00               	movlw	0
 46197  00B8A2  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46198  00B8A4  0E00               	movlw	0
 46199  00B8A6  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46200  00B8A8                     i2l2481:
 46201  00B8A8                     i2l18524:
 46202                           
 46203                           ; BSR set to: 1
 46204                           ;motor.c: 413: if(os.current_position_in_steps==0xFFFFFFFF)
 46205  00B8A8  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46206  00B8AA  E113               	bnz	i2l2482
 46207  00B8AC  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46208  00B8AE  E111               	bnz	i2l2482
 46209  00B8B0  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46210  00B8B2  E10F               	bnz	i2l2482
 46211  00B8B4  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46212  00B8B6  A4D8               	btfss	status,2,c
 46213  00B8B8  D00C               	goto	i2l2482
 46214                           
 46215                           ; BSR set to: 1
 46216                           ;motor.c: 414: os.current_position_in_steps = (config.full_circle_in_steps-1);
 46217  00B8BA  0EFF               	movlw	255
 46218  00B8BC  25A1               	addwf	_config& (0+255),w,b
 46219  00B8BE  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46220  00B8C0  0EFF               	movlw	255
 46221  00B8C2  21A2               	addwfc	(_config+1)& (0+255),w,b
 46222  00B8C4  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46223  00B8C6  0EFF               	movlw	255
 46224  00B8C8  21A3               	addwfc	(_config+2)& (0+255),w,b
 46225  00B8CA  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46226  00B8CC  0EFF               	movlw	255
 46227  00B8CE  21A4               	addwfc	(_config+3)& (0+255),w,b
 46228  00B8D0  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46229  00B8D2                     i2l2482:
 46230                           
 46231                           ; BSR set to: 1
 46232                           ;motor.c: 417: if(motor_current_stepcount==motor_next_speed_check)
 46233  00B8D2  0102               	movlb	2	; () banked
 46234  00B8D4  5126               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 46235  00B8D6  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46236  00B8D8  E109               	bnz	i2u1849_41
 46237  00B8DA  5127               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 46238  00B8DC  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46239  00B8DE  E106               	bnz	i2u1849_41
 46240  00B8E0  5128               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 46241  00B8E2  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46242  00B8E4  E103               	bnz	i2u1849_41
 46243  00B8E6  5129               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 46244  00B8E8  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46245  00B8EA  A4D8               	btfss	status,2,c
 46246  00B8EC                     i2u1849_41:
 46247  00B8EC  D217               	goto	i2l2495
 46248                           
 46249                           ; BSR set to: 2
 46250                           ;motor.c: 418: {;motor.c: 420: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 46251  00B8EE  C058  F02C         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 46252  00B8F2  C059  F02D         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 46253  00B8F6  C05A  F02E         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 46254  00B8FA  C05B  F02F         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 46255  00B8FE  1E2C               	comf	??_motor_isr,f,c
 46256  00B900  1E2D               	comf	??_motor_isr+1,f,c
 46257  00B902  1E2E               	comf	??_motor_isr+2,f,c
 46258  00B904  1E2F               	comf	??_motor_isr+3,f,c
 46259  00B906  2A2C               	incf	??_motor_isr,f,c
 46260  00B908  0E00               	movlw	0
 46261  00B90A  222D               	addwfc	??_motor_isr+1,f,c
 46262  00B90C  222E               	addwfc	??_motor_isr+2,f,c
 46263  00B90E  222F               	addwfc	??_motor_isr+3,f,c
 46264  00B910  0101               	movlb	1	; () banked
 46265  00B912  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46266  00B914  242C               	addwf	??_motor_isr,w,c
 46267  00B916  6E40               	movwf	motor_isr@steps_remaining,c
 46268  00B918  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46269  00B91A  202D               	addwfc	??_motor_isr+1,w,c
 46270  00B91C  6E41               	movwf	motor_isr@steps_remaining+1,c
 46271  00B91E  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46272  00B920  202E               	addwfc	??_motor_isr+2,w,c
 46273  00B922  6E42               	movwf	motor_isr@steps_remaining+2,c
 46274  00B924  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46275  00B926  202F               	addwfc	??_motor_isr+3,w,c
 46276  00B928  6E43               	movwf	motor_isr@steps_remaining+3,c
 46277                           
 46278                           ; BSR set to: 1
 46279                           ;motor.c: 421: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 46280  00B92A  90D8               	bcf	status,0,c
 46281  00B92C  0100               	movlb	0	; () banked
 46282  00B92E  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46283  00B930  6EF6               	movwf	tblptrl,c
 46284  00B932  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46285  00B934  6EF7               	movwf	tblptrh,c
 46286  00B936  0E61               	movlw	low _motor_steps_lookup
 46287  00B938  26F6               	addwf	tblptrl,f,c
 46288  00B93A  0E94               	movlw	high _motor_steps_lookup
 46289  00B93C  22F7               	addwfc	tblptrh,f,c
 46290  00B93E                     	if	1	;There are 3 active tblptr bytes
 46291  00B93E  6AF8               	clrf	tblptru,c
 46292  00B940  0E00               	movlw	low (__mediumconst shr (0+16))
 46293  00B942  22F8               	addwfc	tblptru,f,c
 46294  00B944                     	endif
 46295  00B944  0009               	tblrd		*+
 46296  00B946  CFF5 F03C          	movff	tablat,motor_isr@steps_until_standstill
 46297  00B94A  000A               	tblrd		*-
 46298  00B94C  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill+1
 46299                           
 46300                           ; BSR set to: 0
 46301                           ;motor.c: 422: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 46302  00B950  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr	;volatile
 46303  00B954  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 46304  00B958  90D8               	bcf	status,0,c
 46305  00B95A  362C               	rlcf	??_motor_isr,f,c
 46306  00B95C  362D               	rlcf	??_motor_isr+1,f,c
 46307  00B95E  0E04               	movlw	4
 46308  00B960  262C               	addwf	??_motor_isr,f,c
 46309  00B962  0E00               	movlw	0
 46310  00B964  222D               	addwfc	??_motor_isr+1,f,c
 46311  00B966  0E61               	movlw	low _motor_steps_lookup
 46312  00B968  242C               	addwf	??_motor_isr,w,c
 46313  00B96A  6EF6               	movwf	tblptrl,c
 46314  00B96C  0E94               	movlw	high _motor_steps_lookup
 46315  00B96E  202D               	addwfc	??_motor_isr+1,w,c
 46316  00B970  6EF7               	movwf	tblptrh,c
 46317  00B972                     	if	1	;There are 3 active tblptr bytes
 46318  00B972  6AF8               	clrf	tblptru,c
 46319  00B974  0E00               	movlw	low (__mediumconst shr (0+16))
 46320  00B976  22F8               	addwfc	tblptru,f,c
 46321  00B978                     	endif
 46322  00B978  0009               	tblrd		*+
 46323  00B97A  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 46324  00B97E  000A               	tblrd		*-
 46325  00B980  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 46326                           
 46327                           ;motor.c: 424: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 46328  00B984  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46329  00B986  0101               	movlb	1	; () banked
 46330  00B988  5D3F               	subwf	_motor_maximum_speed& (0+255),w,b
 46331  00B98A  0100               	movlb	0	; () banked
 46332  00B98C  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46333  00B98E  0101               	movlb	1	; () banked
 46334  00B990  5940               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 46335  00B992  A0D8               	btfss	status,0,c
 46336  00B994  D010               	goto	i2u1851_40
 46337                           
 46338                           ; BSR set to: 1
 46339  00B996  503C               	movf	motor_isr@steps_until_standstill,w,c
 46340  00B998  6E2C               	movwf	??_motor_isr& (0+255),c
 46341  00B99A  503D               	movf	motor_isr@steps_until_standstill+1,w,c
 46342  00B99C  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46343  00B99E  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46344  00B9A0  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46345  00B9A2  5040               	movf	motor_isr@steps_remaining,w,c
 46346  00B9A4  5C2C               	subwf	??_motor_isr,w,c
 46347  00B9A6  5041               	movf	motor_isr@steps_remaining+1,w,c
 46348  00B9A8  582D               	subwfb	??_motor_isr+1,w,c
 46349  00B9AA  5042               	movf	motor_isr@steps_remaining+2,w,c
 46350  00B9AC  582E               	subwfb	??_motor_isr+2,w,c
 46351  00B9AE  5043               	movf	motor_isr@steps_remaining+3,w,c
 46352  00B9B0  582F               	subwfb	??_motor_isr+3,w,c
 46353  00B9B2  A0D8               	btfss	status,0,c
 46354  00B9B4  D0E3               	goto	i2l2484
 46355  00B9B6                     i2u1851_40:
 46356                           
 46357                           ; BSR set to: 1
 46358                           ;motor.c: 425: {;motor.c: 427: if(motor_current_speed>0)
 46359                           
 46360                           ; BSR set to: 1
 46361  00B9B6  0100               	movlb	0	; () banked
 46362  00B9B8  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46363  00B9BA  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46364  00B9BC  B4D8               	btfsc	status,2,c
 46365  00B9BE  D003               	goto	i2l2487
 46366                           
 46367                           ; BSR set to: 0
 46368                           ;motor.c: 428: {;motor.c: 429: --motor_current_speed;
 46369  00B9C0  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 46370  00B9C2  A0D8               	btfss	status,0,c
 46371  00B9C4  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46372  00B9C6                     i2l2487:
 46373                           
 46374                           ; BSR set to: 0
 46375                           ;motor.c: 430: };motor.c: 433: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 46376                           
 46377                           ; BSR set to: 0
 46378  00B9C6  0101               	movlb	1	; () banked
 46379  00B9C8  0556               	decf	_motor_mode& (0+255),w,b
 46380  00B9CA  A4D8               	btfss	status,2,c
 46381  00B9CC  D026               	goto	i2l2488
 46382                           
 46383                           ; BSR set to: 1
 46384  00B9CE  0E2F               	movlw	low _motor_postscaler_lookup
 46385  00B9D0  0100               	movlb	0	; () banked
 46386  00B9D2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46387  00B9D4  6EF6               	movwf	tblptrl,c
 46388  00B9D6  0E98               	movlw	high _motor_postscaler_lookup
 46389  00B9D8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46390  00B9DA  6EF7               	movwf	tblptrh,c
 46391  00B9DC                     	if	1	;There are 3 active tblptr bytes
 46392  00B9DC  6AF8               	clrf	tblptru,c
 46393  00B9DE  0E00               	movlw	low (__mediumconst shr (0+16))
 46394  00B9E0  22F8               	addwfc	tblptru,f,c
 46395  00B9E2                     	endif
 46396  00B9E2  0008               	tblrd		*
 46397  00B9E4  50F5               	movf	tablat,w,c
 46398  00B9E6  0900               	iorlw	0
 46399  00B9E8  B4D8               	btfsc	status,2,c
 46400  00B9EA  D017               	goto	i2l2488
 46401                           
 46402                           ; BSR set to: 0
 46403                           ;motor.c: 434: {;motor.c: 436: motor_mode = MOTOR_MODE_MANUAL;
 46404  00B9EC  0E00               	movlw	0
 46405  00B9EE  0101               	movlb	1	; () banked
 46406  00B9F0  6F56               	movwf	_motor_mode& (0+255),b
 46407                           
 46408                           ; BSR set to: 1
 46409                           ;motor.c: 439: LATBbits.LB1 = 1;
 46410  00B9F2  828A               	bsf	3978,1,c	;volatile
 46411                           
 46412                           ;motor.c: 440: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46413  00B9F4  0E55               	movlw	85
 46414  00B9F6  6EA7               	movwf	4007,c	;volsfr
 46415  00B9F8  0EAA               	movlw	170
 46416  00B9FA  6EA7               	movwf	4007,c	;volsfr
 46417                           
 46418                           ; BSR set to: 1
 46419  00B9FC  010E               	movlb	14	; () banked
 46420  00B9FE  91BF               	bcf	191,0,b	;volatile
 46421                           
 46422                           ;motor.c: 441: RPOR4 = 0;
 46423  00BA00  0E00               	movlw	0
 46424  00BA02  6FC4               	movwf	196,b	;volatile
 46425                           
 46426                           ;motor.c: 442: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46427  00BA04  0E55               	movlw	85
 46428  00BA06  6EA7               	movwf	4007,c	;volsfr
 46429  00BA08  0EAA               	movlw	170
 46430  00BA0A  6EA7               	movwf	4007,c	;volsfr
 46431                           
 46432                           ; BSR set to: 14
 46433  00BA0C  81BF               	bsf	191,0,b	;volatile
 46434                           
 46435                           ;motor.c: 445: TMR2 = 0;
 46436  00BA0E  0E00               	movlw	0
 46437  00BA10  6ECC               	movwf	4044,c	;volatile
 46438                           
 46439                           ; BSR set to: 14
 46440                           ;motor.c: 448: CCP1CONbits.CCP1M = 0b0000;
 46441  00BA12  90BA               	bcf	4026,0,c	;volatile
 46442  00BA14  92BA               	bcf	4026,1,c	;volatile
 46443  00BA16  94BA               	bcf	4026,2,c	;volatile
 46444  00BA18  96BA               	bcf	4026,3,c	;volatile
 46445  00BA1A                     i2l2488:
 46446                           
 46447                           ;motor.c: 449: };motor.c: 453: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 46448                           
 46449                           ; BSR set to: 14
 46450  00BA1A  0EFD               	movlw	low _motor_prescaler_lookup
 46451  00BA1C  0100               	movlb	0	; () banked
 46452  00BA1E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46453  00BA20  6EF6               	movwf	tblptrl,c
 46454  00BA22  0E9B               	movlw	high _motor_prescaler_lookup
 46455  00BA24  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46456  00BA26  6EF7               	movwf	tblptrh,c
 46457  00BA28                     	if	1	;There are 3 active tblptr bytes
 46458  00BA28  6AF8               	clrf	tblptru,c
 46459  00BA2A  0E00               	movlw	low (__mediumconst shr (0+16))
 46460  00BA2C  22F8               	addwfc	tblptru,f,c
 46461  00BA2E                     	endif
 46462  00BA2E  0008               	tblrd		*
 46463  00BA30  CFF5 F02C          	movff	tablat,??_motor_isr
 46464  00BA34  50CA               	movf	4042,w,c	;volatile
 46465  00BA36  182C               	xorwf	??_motor_isr,w,c
 46466  00BA38  0BFC               	andlw	-4
 46467  00BA3A  182C               	xorwf	??_motor_isr,w,c
 46468  00BA3C  6ECA               	movwf	4042,c	;volatile
 46469                           
 46470                           ; BSR set to: 0
 46471                           ;motor.c: 455: PR2 = motor_period_lookup[motor_current_speed];
 46472  00BA3E  0E16               	movlw	low _motor_period_lookup
 46473  00BA40  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46474  00BA42  6EF6               	movwf	tblptrl,c
 46475  00BA44  0E9A               	movlw	high _motor_period_lookup
 46476  00BA46  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46477  00BA48  6EF7               	movwf	tblptrh,c
 46478  00BA4A                     	if	1	;There are 3 active tblptr bytes
 46479  00BA4A  6AF8               	clrf	tblptru,c
 46480  00BA4C  0E00               	movlw	low (__mediumconst shr (0+16))
 46481  00BA4E  22F8               	addwfc	tblptru,f,c
 46482  00BA50                     	endif
 46483  00BA50  0008               	tblrd		*
 46484  00BA52  CFF5 FFCB          	movff	tablat,4043	;volatile
 46485                           
 46486                           ; BSR set to: 0
 46487                           ;motor.c: 457: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46488  00BA56  0E2F               	movlw	low _motor_postscaler_lookup
 46489  00BA58  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46490  00BA5A  6EF6               	movwf	tblptrl,c
 46491  00BA5C  0E98               	movlw	high _motor_postscaler_lookup
 46492  00BA5E  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46493  00BA60  6EF7               	movwf	tblptrh,c
 46494  00BA62                     	if	1	;There are 3 active tblptr bytes
 46495  00BA62  6AF8               	clrf	tblptru,c
 46496  00BA64  0E00               	movlw	low (__mediumconst shr (0+16))
 46497  00BA66  22F8               	addwfc	tblptru,f,c
 46498  00BA68                     	endif
 46499  00BA68  0008               	tblrd		*
 46500  00BA6A  CFF5 F02C          	movff	tablat,??_motor_isr
 46501  00BA6E  462C               	rlncf	??_motor_isr,f,c
 46502  00BA70  462C               	rlncf	??_motor_isr,f,c
 46503  00BA72  462C               	rlncf	??_motor_isr,f,c
 46504  00BA74  50CA               	movf	4042,w,c	;volatile
 46505  00BA76  182C               	xorwf	??_motor_isr,w,c
 46506  00BA78  0B87               	andlw	-121
 46507  00BA7A  182C               	xorwf	??_motor_isr,w,c
 46508  00BA7C  6ECA               	movwf	4042,c	;volatile
 46509                           
 46510                           ; BSR set to: 0
 46511                           ;motor.c: 459: CCPR1L = PR2>>1;
 46512  00BA7E  90D8               	bcf	status,0,c
 46513  00BA80  30CB               	rrcf	4043,w,c	;volatile
 46514  00BA82  6EBB               	movwf	4027,c	;volatile
 46515                           
 46516                           ; BSR set to: 0
 46517                           ;motor.c: 462: if(motor_current_speed>0)
 46518  00BA84  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46519  00BA86  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46520  00BA88  B4D8               	btfsc	status,2,c
 46521  00BA8A  D058               	goto	i2l2489
 46522                           
 46523                           ; BSR set to: 0
 46524                           ;motor.c: 463: {;motor.c: 464: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 46525  00BA8C  0EFE               	movlw	254
 46526  00BA8E  6E2C               	movwf	??_motor_isr& (0+255),c
 46527  00BA90  0EFF               	movlw	255
 46528  00BA92  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46529  00BA94  C0FE  F02E         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 46530  00BA98  C0FF  F02F         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 46531  00BA9C  90D8               	bcf	status,0,c
 46532  00BA9E  362E               	rlcf	??_motor_isr+2,f,c
 46533  00BAA0  362F               	rlcf	??_motor_isr+3,f,c
 46534  00BAA2  502C               	movf	??_motor_isr,w,c
 46535  00BAA4  262E               	addwf	??_motor_isr+2,f,c
 46536  00BAA6  502D               	movf	??_motor_isr+1,w,c
 46537  00BAA8  222F               	addwfc	??_motor_isr+3,f,c
 46538  00BAAA  0E61               	movlw	low _motor_steps_lookup
 46539  00BAAC  242E               	addwf	??_motor_isr+2,w,c
 46540  00BAAE  6EF6               	movwf	tblptrl,c
 46541  00BAB0  0E94               	movlw	high _motor_steps_lookup
 46542  00BAB2  202F               	addwfc	??_motor_isr+3,w,c
 46543  00BAB4  6EF7               	movwf	tblptrh,c
 46544  00BAB6                     	if	1	;There are 3 active tblptr bytes
 46545  00BAB6  6AF8               	clrf	tblptru,c
 46546  00BAB8  0E00               	movlw	low (__mediumconst shr (0+16))
 46547  00BABA  22F8               	addwfc	tblptru,f,c
 46548  00BABC                     	endif
 46549  00BABC  0009               	tblrd		*+
 46550  00BABE  CFF5 F030          	movff	tablat,??_motor_isr+4
 46551  00BAC2  0009               	tblrd		*+
 46552  00BAC4  CFF5 F031          	movff	tablat,??_motor_isr+5
 46553  00BAC8  5030               	movf	??_motor_isr+4,w,c
 46554  00BACA  6E32               	movwf	(??_motor_isr+6)& (0+255),c
 46555  00BACC  5031               	movf	??_motor_isr+5,w,c
 46556  00BACE  6E33               	movwf	(??_motor_isr+7)& (0+255),c
 46557  00BAD0  6A34               	clrf	(??_motor_isr+8)& (0+255),c
 46558  00BAD2  6A35               	clrf	(??_motor_isr+9)& (0+255),c
 46559  00BAD4  1E32               	comf	??_motor_isr+6,f,c
 46560  00BAD6  1E33               	comf	??_motor_isr+7,f,c
 46561  00BAD8  1E34               	comf	??_motor_isr+8,f,c
 46562  00BADA  1E35               	comf	??_motor_isr+9,f,c
 46563  00BADC  2A32               	incf	??_motor_isr+6,f,c
 46564  00BADE  0E00               	movlw	0
 46565  00BAE0  2233               	addwfc	??_motor_isr+7,f,c
 46566  00BAE2  2234               	addwfc	??_motor_isr+8,f,c
 46567  00BAE4  2235               	addwfc	??_motor_isr+9,f,c
 46568  00BAE6  90D8               	bcf	status,0,c
 46569  00BAE8  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46570  00BAEA  6EF6               	movwf	tblptrl,c
 46571  00BAEC  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46572  00BAEE  6EF7               	movwf	tblptrh,c
 46573  00BAF0  0E61               	movlw	low _motor_steps_lookup
 46574  00BAF2  26F6               	addwf	tblptrl,f,c
 46575  00BAF4  0E94               	movlw	high _motor_steps_lookup
 46576  00BAF6  22F7               	addwfc	tblptrh,f,c
 46577  00BAF8                     	if	1	;There are 3 active tblptr bytes
 46578  00BAF8  6AF8               	clrf	tblptru,c
 46579  00BAFA  0E00               	movlw	low (__mediumconst shr (0+16))
 46580  00BAFC  22F8               	addwfc	tblptru,f,c
 46581  00BAFE                     	endif
 46582  00BAFE  0009               	tblrd		*+
 46583  00BB00  CFF5 F036          	movff	tablat,??_motor_isr+10
 46584  00BB04  0009               	tblrd		*+
 46585  00BB06  CFF5 F037          	movff	tablat,??_motor_isr+11
 46586  00BB0A  5036               	movf	??_motor_isr+10,w,c
 46587  00BB0C  2432               	addwf	??_motor_isr+6,w,c
 46588  00BB0E  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46589  00BB10  5037               	movf	??_motor_isr+11,w,c
 46590  00BB12  2033               	addwfc	??_motor_isr+7,w,c
 46591  00BB14  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46592  00BB16  0E00               	movlw	0
 46593  00BB18  2034               	addwfc	??_motor_isr+8,w,c
 46594  00BB1A  6E3A               	movwf	(??_motor_isr+14)& (0+255),c
 46595  00BB1C  0E00               	movlw	0
 46596  00BB1E  2035               	addwfc	??_motor_isr+9,w,c
 46597  00BB20  6E3B               	movwf	(??_motor_isr+15)& (0+255),c
 46598  00BB22  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46599  00BB24  2438               	addwf	??_motor_isr+12,w,c
 46600  00BB26  0102               	movlb	2	; () banked
 46601  00BB28  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46602  00BB2A  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46603  00BB2C  2039               	addwfc	??_motor_isr+13,w,c
 46604  00BB2E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46605  00BB30  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46606  00BB32  203A               	addwfc	??_motor_isr+14,w,c
 46607  00BB34  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46608  00BB36  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46609  00BB38  203B               	addwfc	??_motor_isr+15,w,c
 46610  00BB3A  D0EF               	goto	L75
 46611  00BB3C                     i2l2489:
 46612                           
 46613                           ;motor.c: 466: else;motor.c: 467: {;motor.c: 468: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 46614                           
 46615                           ; BSR set to: 2
 46616  00BB3C  90D8               	bcf	status,0,c
 46617  00BB3E  0100               	movlb	0	; () banked
 46618  00BB40  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46619  00BB42  6EF6               	movwf	tblptrl,c
 46620  00BB44  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46621  00BB46  6EF7               	movwf	tblptrh,c
 46622  00BB48  0E61               	movlw	low _motor_steps_lookup
 46623  00BB4A  26F6               	addwf	tblptrl,f,c
 46624  00BB4C  0E94               	movlw	high _motor_steps_lookup
 46625  00BB4E  22F7               	addwfc	tblptrh,f,c
 46626  00BB50                     	if	1	;There are 3 active tblptr bytes
 46627  00BB50  6AF8               	clrf	tblptru,c
 46628  00BB52  0E00               	movlw	low (__mediumconst shr (0+16))
 46629  00BB54  22F8               	addwfc	tblptru,f,c
 46630  00BB56                     	endif
 46631  00BB56  0009               	tblrd		*+
 46632  00BB58  CFF5 F02C          	movff	tablat,??_motor_isr
 46633  00BB5C  0009               	tblrd		*+
 46634  00BB5E  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46635  00BB62  502C               	movf	??_motor_isr,w,c
 46636  00BB64  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 46637  00BB66  0102               	movlb	2	; () banked
 46638  00BB68  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46639  00BB6A  502D               	movf	??_motor_isr+1,w,c
 46640  00BB6C  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 46641  00BB6E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46642  00BB70  0E00               	movlw	0
 46643  00BB72  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 46644  00BB74  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46645  00BB76  0E00               	movlw	0
 46646  00BB78  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 46647  00BB7A  D0CF               	goto	L75
 46648  00BB7C                     i2l2484:
 46649                           
 46650                           ;motor.c: 471: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 46651                           
 46652                           ; BSR set to: 2
 46653  00BB7C  0101               	movlb	1	; () banked
 46654  00BB7E  513F               	movf	_motor_maximum_speed& (0+255),w,b
 46655  00BB80  0100               	movlb	0	; () banked
 46656  00BB82  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 46657  00BB84  E106               	bnz	i2u1856_40
 46658  00BB86  0101               	movlb	1	; () banked
 46659  00BB88  5140               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 46660  00BB8A  0100               	movlb	0	; () banked
 46661  00BB8C  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46662  00BB8E  B4D8               	btfsc	status,2,c
 46663  00BB90  D010               	goto	i2u1857_40
 46664  00BB92                     i2u1856_40:
 46665                           
 46666                           ; BSR set to: 0
 46667  00BB92  503E               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 46668  00BB94  6E2C               	movwf	??_motor_isr& (0+255),c
 46669  00BB96  503F               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 46670  00BB98  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46671  00BB9A  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46672  00BB9C  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46673  00BB9E  5040               	movf	motor_isr@steps_remaining,w,c
 46674  00BBA0  5C2C               	subwf	??_motor_isr,w,c
 46675  00BBA2  5041               	movf	motor_isr@steps_remaining+1,w,c
 46676  00BBA4  582D               	subwfb	??_motor_isr+1,w,c
 46677  00BBA6  5042               	movf	motor_isr@steps_remaining+2,w,c
 46678  00BBA8  582E               	subwfb	??_motor_isr+2,w,c
 46679  00BBAA  5043               	movf	motor_isr@steps_remaining+3,w,c
 46680  00BBAC  582F               	subwfb	??_motor_isr+3,w,c
 46681  00BBAE  A0D8               	btfss	status,0,c
 46682  00BBB0  D002               	goto	i2l2492
 46683  00BBB2                     i2u1857_40:
 46684                           
 46685                           ; BSR set to: 0
 46686                           ;motor.c: 472: {;motor.c: 475: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46687                           
 46688                           ; BSR set to: 0
 46689  00BBB2  90D8               	bcf	status,0,c
 46690  00BBB4  D060               	goto	L74
 46691  00BBB6                     i2l2492:
 46692                           
 46693                           ;motor.c: 477: else;motor.c: 478: {;motor.c: 480: ++motor_current_speed;
 46694                           
 46695                           ; BSR set to: 2
 46696  00BBB6  0100               	movlb	0	; () banked
 46697  00BBB8  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 46698  00BBBA  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46699                           
 46700                           ; BSR set to: 0
 46701                           ;motor.c: 484: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 46702  00BBBC  0EFD               	movlw	low _motor_prescaler_lookup
 46703  00BBBE  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46704  00BBC0  6EF6               	movwf	tblptrl,c
 46705  00BBC2  0E9B               	movlw	high _motor_prescaler_lookup
 46706  00BBC4  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46707  00BBC6  6EF7               	movwf	tblptrh,c
 46708  00BBC8                     	if	1	;There are 3 active tblptr bytes
 46709  00BBC8  6AF8               	clrf	tblptru,c
 46710  00BBCA  0E00               	movlw	low (__mediumconst shr (0+16))
 46711  00BBCC  22F8               	addwfc	tblptru,f,c
 46712  00BBCE                     	endif
 46713  00BBCE  0008               	tblrd		*
 46714  00BBD0  CFF5 F02C          	movff	tablat,??_motor_isr
 46715  00BBD4  50CA               	movf	4042,w,c	;volatile
 46716  00BBD6  182C               	xorwf	??_motor_isr,w,c
 46717  00BBD8  0BFC               	andlw	-4
 46718  00BBDA  182C               	xorwf	??_motor_isr,w,c
 46719  00BBDC  6ECA               	movwf	4042,c	;volatile
 46720                           
 46721                           ; BSR set to: 0
 46722                           ;motor.c: 486: PR2 = motor_period_lookup[motor_current_speed];
 46723  00BBDE  0E16               	movlw	low _motor_period_lookup
 46724  00BBE0  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46725  00BBE2  6EF6               	movwf	tblptrl,c
 46726  00BBE4  0E9A               	movlw	high _motor_period_lookup
 46727  00BBE6  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46728  00BBE8  6EF7               	movwf	tblptrh,c
 46729  00BBEA                     	if	1	;There are 3 active tblptr bytes
 46730  00BBEA  6AF8               	clrf	tblptru,c
 46731  00BBEC  0E00               	movlw	low (__mediumconst shr (0+16))
 46732  00BBEE  22F8               	addwfc	tblptru,f,c
 46733  00BBF0                     	endif
 46734  00BBF0  0008               	tblrd		*
 46735  00BBF2  CFF5 FFCB          	movff	tablat,4043	;volatile
 46736                           
 46737                           ; BSR set to: 0
 46738                           ;motor.c: 488: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46739  00BBF6  0E2F               	movlw	low _motor_postscaler_lookup
 46740  00BBF8  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46741  00BBFA  6EF6               	movwf	tblptrl,c
 46742  00BBFC  0E98               	movlw	high _motor_postscaler_lookup
 46743  00BBFE  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46744  00BC00  6EF7               	movwf	tblptrh,c
 46745  00BC02                     	if	1	;There are 3 active tblptr bytes
 46746  00BC02  6AF8               	clrf	tblptru,c
 46747  00BC04  0E00               	movlw	low (__mediumconst shr (0+16))
 46748  00BC06  22F8               	addwfc	tblptru,f,c
 46749  00BC08                     	endif
 46750  00BC08  0008               	tblrd		*
 46751  00BC0A  CFF5 F02C          	movff	tablat,??_motor_isr
 46752  00BC0E  462C               	rlncf	??_motor_isr,f,c
 46753  00BC10  462C               	rlncf	??_motor_isr,f,c
 46754  00BC12  462C               	rlncf	??_motor_isr,f,c
 46755  00BC14  50CA               	movf	4042,w,c	;volatile
 46756  00BC16  182C               	xorwf	??_motor_isr,w,c
 46757  00BC18  0B87               	andlw	-121
 46758  00BC1A  182C               	xorwf	??_motor_isr,w,c
 46759  00BC1C  6ECA               	movwf	4042,c	;volatile
 46760                           
 46761                           ; BSR set to: 0
 46762                           ;motor.c: 490: CCPR1L = PR2>>1;
 46763  00BC1E  90D8               	bcf	status,0,c
 46764  00BC20  30CB               	rrcf	4043,w,c	;volatile
 46765  00BC22  6EBB               	movwf	4027,c	;volatile
 46766                           
 46767                           ; BSR set to: 0
 46768                           ;motor.c: 492: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 46769  00BC24  0101               	movlb	1	; () banked
 46770  00BC26  5156               	movf	_motor_mode& (0+255),w,b
 46771  00BC28  A4D8               	btfss	status,2,c
 46772  00BC2A  D023               	goto	i2l2496
 46773                           
 46774                           ; BSR set to: 1
 46775  00BC2C  0E2F               	movlw	low _motor_postscaler_lookup
 46776  00BC2E  0100               	movlb	0	; () banked
 46777  00BC30  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46778  00BC32  6EF6               	movwf	tblptrl,c
 46779  00BC34  0E98               	movlw	high _motor_postscaler_lookup
 46780  00BC36  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46781  00BC38  6EF7               	movwf	tblptrh,c
 46782  00BC3A                     	if	1	;There are 3 active tblptr bytes
 46783  00BC3A  6AF8               	clrf	tblptru,c
 46784  00BC3C  0E00               	movlw	low (__mediumconst shr (0+16))
 46785  00BC3E  22F8               	addwfc	tblptru,f,c
 46786  00BC40                     	endif
 46787  00BC40  0008               	tblrd		*
 46788  00BC42  50F5               	movf	tablat,w,c
 46789  00BC44  0900               	iorlw	0
 46790  00BC46  A4D8               	btfss	status,2,c
 46791  00BC48  D014               	goto	i2l2496
 46792                           
 46793                           ; BSR set to: 0
 46794                           ;motor.c: 493: {;motor.c: 495: motor_mode = MOTOR_MODE_PWM;
 46795  00BC4A  0E01               	movlw	1
 46796  00BC4C  0101               	movlb	1	; () banked
 46797  00BC4E  6F56               	movwf	_motor_mode& (0+255),b
 46798                           
 46799                           ;motor.c: 498: CCP1CONbits.CCP1M = 0b1100;
 46800  00BC50  50BA               	movf	4026,w,c	;volatile
 46801  00BC52  0BF0               	andlw	-16
 46802  00BC54  090C               	iorlw	12
 46803  00BC56  6EBA               	movwf	4026,c	;volatile
 46804                           
 46805                           ;motor.c: 501: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46806  00BC58  0E55               	movlw	85
 46807  00BC5A  6EA7               	movwf	4007,c	;volsfr
 46808  00BC5C  0EAA               	movlw	170
 46809  00BC5E  6EA7               	movwf	4007,c	;volsfr
 46810                           
 46811                           ; BSR set to: 1
 46812  00BC60  010E               	movlb	14	; () banked
 46813  00BC62  91BF               	bcf	191,0,b	;volatile
 46814                           
 46815                           ;motor.c: 502: RPOR4 = 14;
 46816  00BC64  0E0E               	movlw	14
 46817  00BC66  6FC4               	movwf	196,b	;volatile
 46818                           
 46819                           ;motor.c: 503: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46820  00BC68  0E55               	movlw	85
 46821  00BC6A  6EA7               	movwf	4007,c	;volsfr
 46822  00BC6C  0EAA               	movlw	170
 46823  00BC6E  6EA7               	movwf	4007,c	;volsfr
 46824                           
 46825                           ; BSR set to: 14
 46826  00BC70  81BF               	bsf	191,0,b	;volatile
 46827  00BC72                     i2l2496:
 46828                           
 46829                           ;motor.c: 504: };motor.c: 507: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46830                           
 46831                           ; BSR set to: 14
 46832  00BC72  90D8               	bcf	status,0,c
 46833  00BC74  0100               	movlb	0	; () banked
 46834  00BC76                     L74:
 46835  00BC76  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46836  00BC78  6EF6               	movwf	tblptrl,c
 46837  00BC7A  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46838  00BC7C  6EF7               	movwf	tblptrh,c
 46839  00BC7E  0E61               	movlw	low _motor_steps_lookup
 46840  00BC80  26F6               	addwf	tblptrl,f,c
 46841  00BC82  0E94               	movlw	high _motor_steps_lookup
 46842  00BC84  22F7               	addwfc	tblptrh,f,c
 46843  00BC86                     	if	1	;There are 3 active tblptr bytes
 46844  00BC86  6AF8               	clrf	tblptru,c
 46845  00BC88  0E00               	movlw	low (__mediumconst shr (0+16))
 46846  00BC8A  22F8               	addwfc	tblptru,f,c
 46847  00BC8C                     	endif
 46848  00BC8C  0009               	tblrd		*+
 46849  00BC8E  CFF5 F02C          	movff	tablat,??_motor_isr
 46850  00BC92  0009               	tblrd		*+
 46851  00BC94  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46852  00BC98  502C               	movf	??_motor_isr,w,c
 46853  00BC9A  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46854  00BC9C  502D               	movf	??_motor_isr+1,w,c
 46855  00BC9E  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46856  00BCA0  6A30               	clrf	(??_motor_isr+4)& (0+255),c
 46857  00BCA2  6A31               	clrf	(??_motor_isr+5)& (0+255),c
 46858  00BCA4  1E2E               	comf	??_motor_isr+2,f,c
 46859  00BCA6  1E2F               	comf	??_motor_isr+3,f,c
 46860  00BCA8  1E30               	comf	??_motor_isr+4,f,c
 46861  00BCAA  1E31               	comf	??_motor_isr+5,f,c
 46862  00BCAC  2A2E               	incf	??_motor_isr+2,f,c
 46863  00BCAE  0E00               	movlw	0
 46864  00BCB0  222F               	addwfc	??_motor_isr+3,f,c
 46865  00BCB2  2230               	addwfc	??_motor_isr+4,f,c
 46866  00BCB4  2231               	addwfc	??_motor_isr+5,f,c
 46867  00BCB6  C0FE  F032         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 46868  00BCBA  C0FF  F033         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 46869  00BCBE  90D8               	bcf	status,0,c
 46870  00BCC0  3632               	rlcf	??_motor_isr+6,f,c
 46871  00BCC2  3633               	rlcf	??_motor_isr+7,f,c
 46872  00BCC4  0E02               	movlw	2
 46873  00BCC6  2632               	addwf	??_motor_isr+6,f,c
 46874  00BCC8  0E00               	movlw	0
 46875  00BCCA  2233               	addwfc	??_motor_isr+7,f,c
 46876  00BCCC  0E61               	movlw	low _motor_steps_lookup
 46877  00BCCE  2432               	addwf	??_motor_isr+6,w,c
 46878  00BCD0  6EF6               	movwf	tblptrl,c
 46879  00BCD2  0E94               	movlw	high _motor_steps_lookup
 46880  00BCD4  2033               	addwfc	??_motor_isr+7,w,c
 46881  00BCD6  6EF7               	movwf	tblptrh,c
 46882  00BCD8                     	if	1	;There are 3 active tblptr bytes
 46883  00BCD8  6AF8               	clrf	tblptru,c
 46884  00BCDA  0E00               	movlw	low (__mediumconst shr (0+16))
 46885  00BCDC  22F8               	addwfc	tblptru,f,c
 46886  00BCDE                     	endif
 46887  00BCDE  0009               	tblrd		*+
 46888  00BCE0  CFF5 F034          	movff	tablat,??_motor_isr+8
 46889  00BCE4  0009               	tblrd		*+
 46890  00BCE6  CFF5 F035          	movff	tablat,??_motor_isr+9
 46891  00BCEA  5034               	movf	??_motor_isr+8,w,c
 46892  00BCEC  242E               	addwf	??_motor_isr+2,w,c
 46893  00BCEE  6E36               	movwf	(??_motor_isr+10)& (0+255),c
 46894  00BCF0  5035               	movf	??_motor_isr+9,w,c
 46895  00BCF2  202F               	addwfc	??_motor_isr+3,w,c
 46896  00BCF4  6E37               	movwf	(??_motor_isr+11)& (0+255),c
 46897  00BCF6  0E00               	movlw	0
 46898  00BCF8  2030               	addwfc	??_motor_isr+4,w,c
 46899  00BCFA  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46900  00BCFC  0E00               	movlw	0
 46901  00BCFE  2031               	addwfc	??_motor_isr+5,w,c
 46902  00BD00  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46903  00BD02  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46904  00BD04  2436               	addwf	??_motor_isr+10,w,c
 46905  00BD06  0102               	movlb	2	; () banked
 46906  00BD08  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46907  00BD0A  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46908  00BD0C  2037               	addwfc	??_motor_isr+11,w,c
 46909  00BD0E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46910  00BD10  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46911  00BD12  2038               	addwfc	??_motor_isr+12,w,c
 46912  00BD14  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46913  00BD16  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46914  00BD18  2039               	addwfc	??_motor_isr+13,w,c
 46915  00BD1A                     L75:
 46916  00BD1A  6F29               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 46917  00BD1C                     i2l2495:
 46918                           
 46919                           ; BSR set to: 2
 46920                           ;motor.c: 508: };motor.c: 509: };motor.c: 512: if(PIR1bits.TMR2IF)
 46921                           
 46922                           ; BSR set to: 2
 46923                           
 46924                           ; BSR set to: 2
 46925                           
 46926                           ; BSR set to: 2
 46927  00BD1C  A29E               	btfss	3998,1,c	;volatile
 46928  00BD1E  0012               	return	
 46929                           
 46930                           ; BSR set to: 2
 46931                           ;motor.c: 513: {;motor.c: 515: PIR1bits.TMR2IF = 0;
 46932  00BD20  929E               	bcf	3998,1,c	;volatile
 46933                           
 46934                           ; BSR set to: 2
 46935                           ;motor.c: 517: ++motor_current_stepcount;
 46936  00BD22  0E01               	movlw	1
 46937  00BD24  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46938  00BD26  0E00               	movlw	0
 46939  00BD28  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46940  00BD2A  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46941  00BD2C  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46942                           
 46943                           ;motor.c: 520: os.current_position_in_steps += motor_direction;
 46944  00BD2E  0101               	movlb	1	; () banked
 46945  00BD30  5155               	movf	_motor_direction& (0+255),w,b
 46946  00BD32  6E2C               	movwf	??_motor_isr& (0+255),c
 46947  00BD34  0E00               	movlw	0
 46948  00BD36  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46949  00BD38  0EFF               	movlw	255
 46950  00BD3A  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46951  00BD3C  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46952  00BD3E  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46953  00BD40  502C               	movf	??_motor_isr,w,c
 46954  00BD42  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46955  00BD44  502D               	movf	??_motor_isr+1,w,c
 46956  00BD46  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46957  00BD48  502E               	movf	??_motor_isr+2,w,c
 46958  00BD4A  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46959  00BD4C  502F               	movf	??_motor_isr+3,w,c
 46960  00BD4E  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46961                           
 46962                           ;motor.c: 521: if(os.current_position_in_steps==config.full_circle_in_steps)
 46963  00BD50  51A1               	movf	_config& (0+255),w,b
 46964  00BD52  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46965  00BD54  E112               	bnz	i2l18604
 46966  00BD56  51A2               	movf	(_config+1)& (0+255),w,b
 46967  00BD58  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46968  00BD5A  E10F               	bnz	i2l18604
 46969  00BD5C  51A3               	movf	(_config+2)& (0+255),w,b
 46970  00BD5E  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46971  00BD60  E10C               	bnz	i2l18604
 46972  00BD62  51A4               	movf	(_config+3)& (0+255),w,b
 46973  00BD64  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46974  00BD66  A4D8               	btfss	status,2,c
 46975  00BD68  D008               	goto	i2l2498
 46976                           
 46977                           ; BSR set to: 1
 46978                           ;motor.c: 522: os.current_position_in_steps = 0;
 46979  00BD6A  0E00               	movlw	0
 46980  00BD6C  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46981  00BD6E  0E00               	movlw	0
 46982  00BD70  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46983  00BD72  0E00               	movlw	0
 46984  00BD74  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46985  00BD76  0E00               	movlw	0
 46986  00BD78  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46987  00BD7A                     i2l2498:
 46988  00BD7A                     i2l18604:
 46989                           
 46990                           ; BSR set to: 1
 46991                           ;motor.c: 523: if(os.current_position_in_steps==0xFFFFFFFF)
 46992  00BD7A  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46993  00BD7C  E114               	bnz	i2l2479
 46994  00BD7E  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46995  00BD80  E112               	bnz	i2l2479
 46996  00BD82  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46997  00BD84  E110               	bnz	i2l2479
 46998  00BD86  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46999  00BD88  A4D8               	btfss	status,2,c
 47000  00BD8A  0012               	return	
 47001                           
 47002                           ; BSR set to: 1
 47003                           ;motor.c: 524: os.current_position_in_steps = (config.full_circle_in_steps-1);
 47004  00BD8C  0EFF               	movlw	255
 47005  00BD8E  25A1               	addwf	_config& (0+255),w,b
 47006  00BD90  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 47007  00BD92  0EFF               	movlw	255
 47008  00BD94  21A2               	addwfc	(_config+1)& (0+255),w,b
 47009  00BD96  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 47010  00BD98  0EFF               	movlw	255
 47011  00BD9A  21A3               	addwfc	(_config+2)& (0+255),w,b
 47012  00BD9C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 47013  00BD9E  0EFF               	movlw	255
 47014  00BDA0  21A4               	addwfc	(_config+3)& (0+255),w,b
 47015  00BDA2  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 47016                           
 47017                           ; BSR set to: 1
 47018  00BDA4  0012               	return	
 47019  00BDA6                     i2l2479:
 47020  00BDA6  0012               	return		;funcret
 47021  00BDA8                     __end_of_motor_isr:
 47022                           	opt stack 0
 47023                           tosu	equ	0xFFF
 47024                           tosh	equ	0xFFE
 47025                           tosl	equ	0xFFD
 47026                           pclatu	equ	0xFFB
 47027                           pclath	equ	0xFFA
 47028                           tblptru	equ	0xFF8
 47029                           tblptrh	equ	0xFF7
 47030                           tblptrl	equ	0xFF6
 47031                           tablat	equ	0xFF5
 47032                           prodh	equ	0xFF4
 47033                           prodl	equ	0xFF3
 47034                           intcon	equ	0xFF2
 47035                           indf0	equ	0xFEF
 47036                           postinc0	equ	0xFEE
 47037                           fsr0h	equ	0xFEA
 47038                           fsr0l	equ	0xFE9
 47039                           wreg	equ	0xFE8
 47040                           indf1	equ	0xFE7
 47041                           postinc1	equ	0xFE6
 47042                           postdec1	equ	0xFE5
 47043                           plusw1	equ	0xFE3
 47044                           fsr1h	equ	0xFE2
 47045                           fsr1l	equ	0xFE1
 47046                           indf2	equ	0xFDF
 47047                           postinc2	equ	0xFDE
 47048                           postdec2	equ	0xFDD
 47049                           plusw2	equ	0xFDB
 47050                           fsr2h	equ	0xFDA
 47051                           fsr2l	equ	0xFD9
 47052                           status	equ	0xFD8
 47053                           
 47054 ;; *************** function _i2c_eeprom_writeUint32 *****************
 47055 ;; Defined at:
 47056 ;;		line 230 in file "i2c.c"
 47057 ;; Parameters:    Size  Location     Type
 47058 ;;  address         2   37[COMRAM] unsigned int 
 47059 ;;  data            4   39[COMRAM] unsigned long 
 47060 ;; Auto vars:     Size  Location     Type
 47061 ;;		None
 47062 ;; Return value:  Size  Location     Type
 47063 ;;                  1    wreg      void 
 47064 ;; Registers used:
 47065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47066 ;; Tracked objects:
 47067 ;;		On entry : 0/0
 47068 ;;		On exit  : 0/0
 47069 ;;		Unchanged: 0/0
 47070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47071 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47075 ;;Total ram usage:        6 bytes
 47076 ;; Hardware stack levels used:    1
 47077 ;; Hardware stack levels required when called:    3
 47078 ;; This function calls:
 47079 ;;		_i2c_eeprom_write
 47080 ;; This function is called by:
 47081 ;;		_motor_isr
 47082 ;; This function uses a non-reentrant model
 47083 ;;
 47084                           
 47085                           	psect	text189
 47086  015810                     __ptext189:
 47087                           	opt stack 0
 47088  015810                     _i2c_eeprom_writeUint32:
 47089                           	opt stack 13
 47090                           
 47091                           ;i2c.c: 232: i2c_eeprom_write(address, &data, 4);
 47092                           
 47093                           ;incstack = 0
 47094  015810  C026  F00B         	movff	i2c_eeprom_writeUint32@address,i2c_eeprom_write@address
 47095  015814  C027  F00C         	movff	i2c_eeprom_writeUint32@address+1,i2c_eeprom_write@address+1
 47096  015818  0E28               	movlw	low i2c_eeprom_writeUint32@data
 47097  01581A  6E0D               	movwf	i2c_eeprom_write@data,c
 47098  01581C  0E00               	movlw	high i2c_eeprom_writeUint32@data
 47099  01581E  6E0E               	movwf	i2c_eeprom_write@data+1,c
 47100  015820  0E04               	movlw	4
 47101  015822  6E0F               	movwf	i2c_eeprom_write@length,c
 47102  015824  EC0F  F09D         	call	_i2c_eeprom_write	;wreg free
 47103  015828  0012               	return		;funcret
 47104  01582A                     __end_of_i2c_eeprom_writeUint32:
 47105                           	opt stack 0
 47106                           tosu	equ	0xFFF
 47107                           tosh	equ	0xFFE
 47108                           tosl	equ	0xFFD
 47109                           pclatu	equ	0xFFB
 47110                           pclath	equ	0xFFA
 47111                           tblptru	equ	0xFF8
 47112                           tblptrh	equ	0xFF7
 47113                           tblptrl	equ	0xFF6
 47114                           tablat	equ	0xFF5
 47115                           prodh	equ	0xFF4
 47116                           prodl	equ	0xFF3
 47117                           intcon	equ	0xFF2
 47118                           indf0	equ	0xFEF
 47119                           postinc0	equ	0xFEE
 47120                           fsr0h	equ	0xFEA
 47121                           fsr0l	equ	0xFE9
 47122                           wreg	equ	0xFE8
 47123                           indf1	equ	0xFE7
 47124                           postinc1	equ	0xFE6
 47125                           postdec1	equ	0xFE5
 47126                           plusw1	equ	0xFE3
 47127                           fsr1h	equ	0xFE2
 47128                           fsr1l	equ	0xFE1
 47129                           indf2	equ	0xFDF
 47130                           postinc2	equ	0xFDE
 47131                           postdec2	equ	0xFDD
 47132                           plusw2	equ	0xFDB
 47133                           fsr2h	equ	0xFDA
 47134                           fsr2l	equ	0xFD9
 47135                           status	equ	0xFD8
 47136                           
 47137 ;; *************** function _i2c_eeprom_write *****************
 47138 ;; Defined at:
 47139 ;;		line 242 in file "i2c.c"
 47140 ;; Parameters:    Size  Location     Type
 47141 ;;  address         2   10[COMRAM] unsigned int 
 47142 ;;  data            2   12[COMRAM] PTR unsigned char 
 47143 ;;		 -> i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), 
 47144 ;;  length          1   14[COMRAM] unsigned char 
 47145 ;; Auto vars:     Size  Location     Type
 47146 ;;  dat            17   18[COMRAM] unsigned char [17]
 47147 ;;  cntr            1   36[COMRAM] unsigned char 
 47148 ;;  slave_addres    1   35[COMRAM] unsigned char 
 47149 ;; Return value:  Size  Location     Type
 47150 ;;                  1    wreg      void 
 47151 ;; Registers used:
 47152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47153 ;; Tracked objects:
 47154 ;;		On entry : 0/0
 47155 ;;		On exit  : 0/0
 47156 ;;		Unchanged: 0/0
 47157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47158 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47159 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47160 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47161 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47162 ;;Total ram usage:       27 bytes
 47163 ;; Hardware stack levels used:    1
 47164 ;; Hardware stack levels required when called:    2
 47165 ;; This function calls:
 47166 ;;		i2__i2c_eeprom_busy
 47167 ;;		i2__i2c_write
 47168 ;; This function is called by:
 47169 ;;		_i2c_eeprom_writeUint32
 47170 ;;		_i2c_eeprom_writeUint16
 47171 ;; This function uses a non-reentrant model
 47172 ;;
 47173                           
 47174                           	psect	text190
 47175  013A1E                     __ptext190:
 47176                           	opt stack 0
 47177  013A1E                     _i2c_eeprom_write:
 47178                           	opt stack 13
 47179                           
 47180                           ;i2c.c: 244: uint8_t cntr;;i2c.c: 245: uint8_t slave_address;;i2c.c: 246: uint8_t dat[17
      +                          ];;i2c.c: 248: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 47181                           
 47182                           ;incstack = 0
 47183  013A1E  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 47184  013A22  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 47185  013A26  0E07               	movlw	7
 47186  013A28  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 47187  013A2A                     i2u1408_45:
 47188  013A2A  90D8               	bcf	status,0,c
 47189  013A2C  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 47190  013A2E  3210               	rrcf	??_i2c_eeprom_write,f,c
 47191  013A30  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 47192  013A32  D7FB               	goto	i2u1408_45
 47193  013A34  5010               	movf	??_i2c_eeprom_write,w,c
 47194  013A36  0B0E               	andlw	14
 47195  013A38  09A0               	iorlw	160
 47196  013A3A  6E24               	movwf	i2c_eeprom_write@slave_address,c
 47197                           
 47198                           ;i2c.c: 249: dat[0] = address & 0xFF;
 47199  013A3C  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 47200                           
 47201                           ;i2c.c: 251: length &= 0b00001111;
 47202  013A40  0E0F               	movlw	15
 47203  013A42  160F               	andwf	i2c_eeprom_write@length,f,c
 47204                           
 47205                           ;i2c.c: 252: for(cntr=0; cntr<length; ++cntr)
 47206  013A44  0E00               	movlw	0
 47207  013A46  6E25               	movwf	i2c_eeprom_write@cntr,c
 47208  013A48  D018               	goto	i2l1203
 47209  013A4A                     
 47210                           ;i2c.c: 253: {;i2c.c: 254: dat[cntr+1] = data[cntr];
 47211  013A4A  5025               	movf	i2c_eeprom_write@cntr,w,c
 47212  013A4C  0D01               	mullw	1
 47213  013A4E  50F3               	movf	prodl,w,c
 47214  013A50  240D               	addwf	i2c_eeprom_write@data,w,c
 47215  013A52  6ED9               	movwf	fsr2l,c
 47216  013A54  50F4               	movf	prodh,w,c
 47217  013A56  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 47218  013A58  6EDA               	movwf	fsr2h,c
 47219  013A5A  5025               	movf	i2c_eeprom_write@cntr,w,c
 47220  013A5C  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 47221  013A5E  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 47222  013A60  0E01               	movlw	1
 47223  013A62  2610               	addwf	??_i2c_eeprom_write,f,c
 47224  013A64  0E00               	movlw	0
 47225  013A66  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 47226  013A68  0E13               	movlw	low i2c_eeprom_write@dat
 47227  013A6A  2410               	addwf	??_i2c_eeprom_write,w,c
 47228  013A6C  6EE1               	movwf	fsr1l,c
 47229  013A6E  0E00               	movlw	high i2c_eeprom_write@dat
 47230  013A70  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 47231  013A72  6EE2               	movwf	fsr1h,c
 47232  013A74  CFDF FFE7          	movff	indf2,indf1
 47233  013A78  2A25               	incf	i2c_eeprom_write@cntr,f,c
 47234  013A7A                     i2l1203:
 47235  013A7A  500F               	movf	i2c_eeprom_write@length,w,c
 47236  013A7C  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 47237  013A7E  A0D8               	btfss	status,0,c
 47238  013A80  D7E4               	goto	i2l1204
 47239  013A82                     i2u1409_40:
 47240                           
 47241                           ;i2c.c: 255: };i2c.c: 258: while(_i2c_eeprom_busy());
 47242  013A82  EC27  F0AB         	call	i2__i2c_eeprom_busy	;wreg free
 47243  013A86  0900               	iorlw	0
 47244  013A88  A4D8               	btfss	status,2,c
 47245  013A8A  D7FB               	goto	i2u1409_40
 47246                           
 47247                           ;i2c.c: 260: _i2c_write(slave_address, &dat[0], length+1);
 47248  013A8C  0E13               	movlw	low i2c_eeprom_write@dat
 47249  013A8E  6E06               	movwf	i2__i2c_write@data,c
 47250  013A90  0E00               	movlw	high i2c_eeprom_write@dat
 47251  013A92  6E07               	movwf	i2__i2c_write@data+1,c
 47252  013A94  280F               	incf	i2c_eeprom_write@length,w,c
 47253  013A96  6E08               	movwf	i2__i2c_write@length,c
 47254  013A98  5024               	movf	i2c_eeprom_write@slave_address,w,c
 47255  013A9A  EC2A  F0A7         	call	i2__i2c_write
 47256  013A9E  0012               	return		;funcret
 47257  013AA0                     __end_of_i2c_eeprom_write:
 47258                           	opt stack 0
 47259                           tosu	equ	0xFFF
 47260                           tosh	equ	0xFFE
 47261                           tosl	equ	0xFFD
 47262                           pclatu	equ	0xFFB
 47263                           pclath	equ	0xFFA
 47264                           tblptru	equ	0xFF8
 47265                           tblptrh	equ	0xFF7
 47266                           tblptrl	equ	0xFF6
 47267                           tablat	equ	0xFF5
 47268                           prodh	equ	0xFF4
 47269                           prodl	equ	0xFF3
 47270                           intcon	equ	0xFF2
 47271                           indf0	equ	0xFEF
 47272                           postinc0	equ	0xFEE
 47273                           fsr0h	equ	0xFEA
 47274                           fsr0l	equ	0xFE9
 47275                           wreg	equ	0xFE8
 47276                           indf1	equ	0xFE7
 47277                           postinc1	equ	0xFE6
 47278                           postdec1	equ	0xFE5
 47279                           plusw1	equ	0xFE3
 47280                           fsr1h	equ	0xFE2
 47281                           fsr1l	equ	0xFE1
 47282                           indf2	equ	0xFDF
 47283                           postinc2	equ	0xFDE
 47284                           postdec2	equ	0xFDD
 47285                           plusw2	equ	0xFDB
 47286                           fsr2h	equ	0xFDA
 47287                           fsr2l	equ	0xFD9
 47288                           status	equ	0xFD8
 47289                           
 47290 ;; *************** function i2__i2c_write *****************
 47291 ;; Defined at:
 47292 ;;		line 84 in file "i2c.c"
 47293 ;; Parameters:    Size  Location     Type
 47294 ;;  slave_addres    1    wreg     unsigned char 
 47295 ;;  data            2    5[COMRAM] PTR unsigned char 
 47296 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 47297 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 47298 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 47299 ;;  length          1    7[COMRAM] unsigned char 
 47300 ;; Auto vars:     Size  Location     Type
 47301 ;;  slave_addres    1    8[COMRAM] unsigned char 
 47302 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 47303 ;; Return value:  Size  Location     Type
 47304 ;;                  1    wreg      void 
 47305 ;; Registers used:
 47306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47307 ;; Tracked objects:
 47308 ;;		On entry : 0/0
 47309 ;;		On exit  : 0/0
 47310 ;;		Unchanged: 0/0
 47311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47312 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47315 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47316 ;;Total ram usage:        5 bytes
 47317 ;; Hardware stack levels used:    1
 47318 ;; Hardware stack levels required when called:    1
 47319 ;; This function calls:
 47320 ;;		i2__i2c_send
 47321 ;;		i2__i2c_start
 47322 ;;		i2__i2c_stop
 47323 ;;		i2__i2c_wait_idle
 47324 ;; This function is called by:
 47325 ;;		_i2c_eeprom_write
 47326 ;; This function uses a non-reentrant model
 47327 ;;
 47328                           
 47329                           	psect	text191
 47330  014E54                     __ptext191:
 47331                           	opt stack 0
 47332  014E54                     i2__i2c_write:
 47333                           	opt stack 13
 47334                           
 47335                           ;incstack = 0
 47336                           ;i2__i2c_write@slave_address stored from wreg
 47337  014E54  6E09               	movwf	i2__i2c_write@slave_address,c
 47338                           
 47339                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 47340  014E56  EC53  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47341                           
 47342                           ;i2c.c: 89: _i2c_start();
 47343  014E5A  ECAD  F0AC         	call	i2__i2c_start	;wreg free
 47344                           
 47345                           ;i2c.c: 90: _i2c_wait_idle();
 47346  014E5E  EC53  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47347                           
 47348                           ;i2c.c: 91: _i2c_send(slave_address);
 47349  014E62  5009               	movf	i2__i2c_write@slave_address,w,c
 47350  014E64  ECB1  F0AC         	call	i2__i2c_send
 47351                           
 47352                           ;i2c.c: 92: _i2c_wait_idle();
 47353  014E68  EC53  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47354                           
 47355                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 47356  014E6C  0E00               	movlw	0
 47357  014E6E  6E0A               	movwf	i2__i2c_write@cntr,c
 47358  014E70  D00E               	goto	i2l1158
 47359  014E72                     
 47360                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 47361  014E72  500A               	movf	i2__i2c_write@cntr,w,c
 47362  014E74  0D01               	mullw	1
 47363  014E76  50F3               	movf	prodl,w,c
 47364  014E78  2406               	addwf	i2__i2c_write@data,w,c
 47365  014E7A  6ED9               	movwf	fsr2l,c
 47366  014E7C  50F4               	movf	prodh,w,c
 47367  014E7E  2007               	addwfc	i2__i2c_write@data+1,w,c
 47368  014E80  6EDA               	movwf	fsr2h,c
 47369  014E82  50DF               	movf	indf2,w,c
 47370  014E84  ECB1  F0AC         	call	i2__i2c_send
 47371                           
 47372                           ;i2c.c: 97: _i2c_wait_idle();
 47373  014E88  EC53  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47374  014E8C  2A0A               	incf	i2__i2c_write@cntr,f,c
 47375  014E8E                     i2l1158:
 47376  014E8E  5008               	movf	i2__i2c_write@length,w,c
 47377  014E90  5C0A               	subwf	i2__i2c_write@cntr,w,c
 47378  014E92  A0D8               	btfss	status,0,c
 47379  014E94  D7EE               	goto	i2l1159
 47380                           
 47381                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 47382  014E96  ECA9  F0AC         	call	i2__i2c_stop	;wreg free
 47383  014E9A  0012               	return		;funcret
 47384  014E9C                     __end_ofi2__i2c_write:
 47385                           	opt stack 0
 47386                           tosu	equ	0xFFF
 47387                           tosh	equ	0xFFE
 47388                           tosl	equ	0xFFD
 47389                           pclatu	equ	0xFFB
 47390                           pclath	equ	0xFFA
 47391                           tblptru	equ	0xFF8
 47392                           tblptrh	equ	0xFF7
 47393                           tblptrl	equ	0xFF6
 47394                           tablat	equ	0xFF5
 47395                           prodh	equ	0xFF4
 47396                           prodl	equ	0xFF3
 47397                           intcon	equ	0xFF2
 47398                           indf0	equ	0xFEF
 47399                           postinc0	equ	0xFEE
 47400                           fsr0h	equ	0xFEA
 47401                           fsr0l	equ	0xFE9
 47402                           wreg	equ	0xFE8
 47403                           indf1	equ	0xFE7
 47404                           postinc1	equ	0xFE6
 47405                           postdec1	equ	0xFE5
 47406                           plusw1	equ	0xFE3
 47407                           fsr1h	equ	0xFE2
 47408                           fsr1l	equ	0xFE1
 47409                           indf2	equ	0xFDF
 47410                           postinc2	equ	0xFDE
 47411                           postdec2	equ	0xFDD
 47412                           plusw2	equ	0xFDB
 47413                           fsr2h	equ	0xFDA
 47414                           fsr2l	equ	0xFD9
 47415                           status	equ	0xFD8
 47416                           
 47417 ;; *************** function i2__i2c_eeprom_busy *****************
 47418 ;; Defined at:
 47419 ;;		line 169 in file "i2c.c"
 47420 ;; Parameters:    Size  Location     Type
 47421 ;;		None
 47422 ;; Auto vars:     Size  Location     Type
 47423 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 47424 ;; Return value:  Size  Location     Type
 47425 ;;                  1    wreg      unsigned char 
 47426 ;; Registers used:
 47427 ;;		wreg, status,2, status,0, cstack
 47428 ;; Tracked objects:
 47429 ;;		On entry : 0/0
 47430 ;;		On exit  : 0/0
 47431 ;;		Unchanged: 0/0
 47432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47437 ;;Total ram usage:        1 bytes
 47438 ;; Hardware stack levels used:    1
 47439 ;; Hardware stack levels required when called:    1
 47440 ;; This function calls:
 47441 ;;		i2__i2c_send
 47442 ;;		i2__i2c_start
 47443 ;;		i2__i2c_stop
 47444 ;;		i2__i2c_wait_idle
 47445 ;; This function is called by:
 47446 ;;		_i2c_eeprom_write
 47447 ;; This function uses a non-reentrant model
 47448 ;;
 47449                           
 47450                           	psect	text192
 47451  01564E                     __ptext192:
 47452                           	opt stack 0
 47453  01564E                     i2__i2c_eeprom_busy:
 47454                           	opt stack 13
 47455                           
 47456                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 47457                           
 47458                           ;incstack = 0
 47459  01564E  EC53  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47460                           
 47461                           ;i2c.c: 173: _i2c_start();
 47462  015652  ECAD  F0AC         	call	i2__i2c_start	;wreg free
 47463                           
 47464                           ;i2c.c: 174: _i2c_wait_idle();
 47465  015656  EC53  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47466                           
 47467                           ;i2c.c: 175: _i2c_send(0b10100000);
 47468  01565A  0EA0               	movlw	160
 47469  01565C  ECB1  F0AC         	call	i2__i2c_send
 47470                           
 47471                           ;i2c.c: 176: _i2c_wait_idle();
 47472  015660  EC53  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47473                           
 47474                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 47475  015664  0E00               	movlw	0
 47476  015666  BCC5               	btfsc	4037,6,c	;volatile
 47477  015668  0E01               	movlw	1
 47478  01566A  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 47479                           
 47480                           ;i2c.c: 181: _i2c_stop();
 47481  01566C  ECA9  F0AC         	call	i2__i2c_stop	;wreg free
 47482                           
 47483                           ;i2c.c: 183: return 0;
 47484  015670  0E00               	movlw	0
 47485  015672  0012               	return	
 47486  015674                     __end_ofi2__i2c_eeprom_busy:
 47487                           	opt stack 0
 47488                           tosu	equ	0xFFF
 47489                           tosh	equ	0xFFE
 47490                           tosl	equ	0xFFD
 47491                           pclatu	equ	0xFFB
 47492                           pclath	equ	0xFFA
 47493                           tblptru	equ	0xFF8
 47494                           tblptrh	equ	0xFF7
 47495                           tblptrl	equ	0xFF6
 47496                           tablat	equ	0xFF5
 47497                           prodh	equ	0xFF4
 47498                           prodl	equ	0xFF3
 47499                           intcon	equ	0xFF2
 47500                           indf0	equ	0xFEF
 47501                           postinc0	equ	0xFEE
 47502                           fsr0h	equ	0xFEA
 47503                           fsr0l	equ	0xFE9
 47504                           wreg	equ	0xFE8
 47505                           indf1	equ	0xFE7
 47506                           postinc1	equ	0xFE6
 47507                           postdec1	equ	0xFE5
 47508                           plusw1	equ	0xFE3
 47509                           fsr1h	equ	0xFE2
 47510                           fsr1l	equ	0xFE1
 47511                           indf2	equ	0xFDF
 47512                           postinc2	equ	0xFDE
 47513                           postdec2	equ	0xFDD
 47514                           plusw2	equ	0xFDB
 47515                           fsr2h	equ	0xFDA
 47516                           fsr2l	equ	0xFD9
 47517                           status	equ	0xFD8
 47518                           
 47519 ;; *************** function i2__i2c_wait_idle *****************
 47520 ;; Defined at:
 47521 ;;		line 40 in file "i2c.c"
 47522 ;; Parameters:    Size  Location     Type
 47523 ;;		None
 47524 ;; Auto vars:     Size  Location     Type
 47525 ;;		None
 47526 ;; Return value:  Size  Location     Type
 47527 ;;                  1    wreg      void 
 47528 ;; Registers used:
 47529 ;;		wreg, status,2, status,0
 47530 ;; Tracked objects:
 47531 ;;		On entry : 0/0
 47532 ;;		On exit  : 0/0
 47533 ;;		Unchanged: 0/0
 47534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47537 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47538 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47539 ;;Total ram usage:        5 bytes
 47540 ;; Hardware stack levels used:    1
 47541 ;; This function calls:
 47542 ;;		Nothing
 47543 ;; This function is called by:
 47544 ;;		i2__i2c_write
 47545 ;;		i2__i2c_eeprom_busy
 47546 ;; This function uses a non-reentrant model
 47547 ;;
 47548                           
 47549                           	psect	text193
 47550  0148A6                     __ptext193:
 47551                           	opt stack 0
 47552  0148A6                     i2__i2c_wait_idle:
 47553                           	opt stack 13
 47554                           
 47555                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 47556                           
 47557                           ;incstack = 0
 47558  0148A6  A4C7               	btfss	4039,2,c	;volatile
 47559  0148A8  D003               	goto	i2u1285_40
 47560  0148AA  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47561  0148AC  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 47562  0148AE  D001               	goto	i2u1285_48
 47563  0148B0                     i2u1285_40:
 47564  0148B0  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47565  0148B2                     i2u1285_48:
 47566  0148B2  A0C5               	btfss	4037,0,c	;volatile
 47567  0148B4  D003               	goto	i2u1286_40
 47568  0148B6  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47569  0148B8  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 47570  0148BA  D001               	goto	i2u1286_48
 47571  0148BC                     i2u1286_40:
 47572  0148BC  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47573  0148BE                     i2u1286_48:
 47574  0148BE  A2C5               	btfss	4037,1,c	;volatile
 47575  0148C0  D003               	goto	i2u1287_40
 47576  0148C2  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47577  0148C4  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 47578  0148C6  D001               	goto	i2u1287_48
 47579  0148C8                     i2u1287_40:
 47580  0148C8  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47581  0148CA                     i2u1287_48:
 47582  0148CA  A4C5               	btfss	4037,2,c	;volatile
 47583  0148CC  D003               	goto	i2u1288_40
 47584  0148CE  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47585  0148D0  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 47586  0148D2  D001               	goto	i2u1288_48
 47587  0148D4                     i2u1288_40:
 47588  0148D4  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47589  0148D6                     i2u1288_48:
 47590  0148D6  A6C5               	btfss	4037,3,c	;volatile
 47591  0148D8  D003               	goto	i2u1289_40
 47592  0148DA  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47593  0148DC  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 47594  0148DE  D001               	goto	i2u1289_48
 47595  0148E0                     i2u1289_40:
 47596  0148E0  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47597  0148E2                     i2u1289_48:
 47598  0148E2  A8C5               	btfss	4037,4,c	;volatile
 47599  0148E4  D002               	goto	i2u1290_40
 47600  0148E6  0E01               	movlw	1
 47601  0148E8  D001               	goto	i2u1290_46
 47602  0148EA                     i2u1290_40:
 47603  0148EA  0E00               	movlw	0
 47604  0148EC                     i2u1290_46:
 47605  0148EC  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 47606  0148EE  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 47607  0148F0  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 47608  0148F2  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 47609  0148F4  1001               	iorwf	??i2__i2c_wait_idle,w,c
 47610  0148F6  0900               	iorlw	0
 47611  0148F8  B4D8               	btfsc	status,2,c
 47612  0148FA  0012               	return	
 47613  0148FC  D7D4               	goto	i2__i2c_wait_idle
 47614  0148FE                     __end_ofi2__i2c_wait_idle:
 47615                           	opt stack 0
 47616                           tosu	equ	0xFFF
 47617                           tosh	equ	0xFFE
 47618                           tosl	equ	0xFFD
 47619                           pclatu	equ	0xFFB
 47620                           pclath	equ	0xFFA
 47621                           tblptru	equ	0xFF8
 47622                           tblptrh	equ	0xFF7
 47623                           tblptrl	equ	0xFF6
 47624                           tablat	equ	0xFF5
 47625                           prodh	equ	0xFF4
 47626                           prodl	equ	0xFF3
 47627                           intcon	equ	0xFF2
 47628                           indf0	equ	0xFEF
 47629                           postinc0	equ	0xFEE
 47630                           fsr0h	equ	0xFEA
 47631                           fsr0l	equ	0xFE9
 47632                           wreg	equ	0xFE8
 47633                           indf1	equ	0xFE7
 47634                           postinc1	equ	0xFE6
 47635                           postdec1	equ	0xFE5
 47636                           plusw1	equ	0xFE3
 47637                           fsr1h	equ	0xFE2
 47638                           fsr1l	equ	0xFE1
 47639                           indf2	equ	0xFDF
 47640                           postinc2	equ	0xFDE
 47641                           postdec2	equ	0xFDD
 47642                           plusw2	equ	0xFDB
 47643                           fsr2h	equ	0xFDA
 47644                           fsr2l	equ	0xFD9
 47645                           status	equ	0xFD8
 47646                           
 47647 ;; *************** function i2__i2c_stop *****************
 47648 ;; Defined at:
 47649 ;;		line 63 in file "i2c.c"
 47650 ;; Parameters:    Size  Location     Type
 47651 ;;		None
 47652 ;; Auto vars:     Size  Location     Type
 47653 ;;		None
 47654 ;; Return value:  Size  Location     Type
 47655 ;;                  1    wreg      void 
 47656 ;; Registers used:
 47657 ;;		None
 47658 ;; Tracked objects:
 47659 ;;		On entry : 0/0
 47660 ;;		On exit  : 0/0
 47661 ;;		Unchanged: 0/0
 47662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47667 ;;Total ram usage:        0 bytes
 47668 ;; Hardware stack levels used:    1
 47669 ;; This function calls:
 47670 ;;		Nothing
 47671 ;; This function is called by:
 47672 ;;		i2__i2c_write
 47673 ;;		i2__i2c_eeprom_busy
 47674 ;; This function uses a non-reentrant model
 47675 ;;
 47676                           
 47677                           	psect	text194
 47678  015952                     __ptext194:
 47679                           	opt stack 0
 47680  015952                     i2__i2c_stop:
 47681                           	opt stack 13
 47682                           
 47683                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 47684                           
 47685                           ;incstack = 0
 47686  015952  84C5               	bsf	4037,2,c	;volatile
 47687  015954  A4C5               	btfss	4037,2,c	;volatile
 47688  015956  0012               	return	
 47689  015958  D7FD               	goto	i2l1141
 47690  01595A                     __end_ofi2__i2c_stop:
 47691                           	opt stack 0
 47692                           tosu	equ	0xFFF
 47693                           tosh	equ	0xFFE
 47694                           tosl	equ	0xFFD
 47695                           pclatu	equ	0xFFB
 47696                           pclath	equ	0xFFA
 47697                           tblptru	equ	0xFF8
 47698                           tblptrh	equ	0xFF7
 47699                           tblptrl	equ	0xFF6
 47700                           tablat	equ	0xFF5
 47701                           prodh	equ	0xFF4
 47702                           prodl	equ	0xFF3
 47703                           intcon	equ	0xFF2
 47704                           indf0	equ	0xFEF
 47705                           postinc0	equ	0xFEE
 47706                           fsr0h	equ	0xFEA
 47707                           fsr0l	equ	0xFE9
 47708                           wreg	equ	0xFE8
 47709                           indf1	equ	0xFE7
 47710                           postinc1	equ	0xFE6
 47711                           postdec1	equ	0xFE5
 47712                           plusw1	equ	0xFE3
 47713                           fsr1h	equ	0xFE2
 47714                           fsr1l	equ	0xFE1
 47715                           indf2	equ	0xFDF
 47716                           postinc2	equ	0xFDE
 47717                           postdec2	equ	0xFDD
 47718                           plusw2	equ	0xFDB
 47719                           fsr2h	equ	0xFDA
 47720                           fsr2l	equ	0xFD9
 47721                           status	equ	0xFD8
 47722                           
 47723 ;; *************** function i2__i2c_start *****************
 47724 ;; Defined at:
 47725 ;;		line 45 in file "i2c.c"
 47726 ;; Parameters:    Size  Location     Type
 47727 ;;		None
 47728 ;; Auto vars:     Size  Location     Type
 47729 ;;		None
 47730 ;; Return value:  Size  Location     Type
 47731 ;;                  1    wreg      void 
 47732 ;; Registers used:
 47733 ;;		None
 47734 ;; Tracked objects:
 47735 ;;		On entry : 0/0
 47736 ;;		On exit  : 0/0
 47737 ;;		Unchanged: 0/0
 47738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47743 ;;Total ram usage:        0 bytes
 47744 ;; Hardware stack levels used:    1
 47745 ;; This function calls:
 47746 ;;		Nothing
 47747 ;; This function is called by:
 47748 ;;		i2__i2c_write
 47749 ;;		i2__i2c_eeprom_busy
 47750 ;; This function uses a non-reentrant model
 47751 ;;
 47752                           
 47753                           	psect	text195
 47754  01595A                     __ptext195:
 47755                           	opt stack 0
 47756  01595A                     i2__i2c_start:
 47757                           	opt stack 13
 47758                           
 47759                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 47760                           
 47761                           ;incstack = 0
 47762  01595A  80C5               	bsf	4037,0,c	;volatile
 47763  01595C  A0C5               	btfss	4037,0,c	;volatile
 47764  01595E  0012               	return	
 47765  015960  D7FD               	goto	i2l1126
 47766  015962                     __end_ofi2__i2c_start:
 47767                           	opt stack 0
 47768                           tosu	equ	0xFFF
 47769                           tosh	equ	0xFFE
 47770                           tosl	equ	0xFFD
 47771                           pclatu	equ	0xFFB
 47772                           pclath	equ	0xFFA
 47773                           tblptru	equ	0xFF8
 47774                           tblptrh	equ	0xFF7
 47775                           tblptrl	equ	0xFF6
 47776                           tablat	equ	0xFF5
 47777                           prodh	equ	0xFF4
 47778                           prodl	equ	0xFF3
 47779                           intcon	equ	0xFF2
 47780                           indf0	equ	0xFEF
 47781                           postinc0	equ	0xFEE
 47782                           fsr0h	equ	0xFEA
 47783                           fsr0l	equ	0xFE9
 47784                           wreg	equ	0xFE8
 47785                           indf1	equ	0xFE7
 47786                           postinc1	equ	0xFE6
 47787                           postdec1	equ	0xFE5
 47788                           plusw1	equ	0xFE3
 47789                           fsr1h	equ	0xFE2
 47790                           fsr1l	equ	0xFE1
 47791                           indf2	equ	0xFDF
 47792                           postinc2	equ	0xFDE
 47793                           postdec2	equ	0xFDD
 47794                           plusw2	equ	0xFDB
 47795                           fsr2h	equ	0xFDA
 47796                           fsr2l	equ	0xFD9
 47797                           status	equ	0xFD8
 47798                           
 47799 ;; *************** function i2__i2c_send *****************
 47800 ;; Defined at:
 47801 ;;		line 51 in file "i2c.c"
 47802 ;; Parameters:    Size  Location     Type
 47803 ;;  dat             1    wreg     unsigned char 
 47804 ;; Auto vars:     Size  Location     Type
 47805 ;;  dat             1    0[COMRAM] unsigned char 
 47806 ;; Return value:  Size  Location     Type
 47807 ;;                  1    wreg      void 
 47808 ;; Registers used:
 47809 ;;		wreg
 47810 ;; Tracked objects:
 47811 ;;		On entry : 0/0
 47812 ;;		On exit  : 0/0
 47813 ;;		Unchanged: 0/0
 47814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47819 ;;Total ram usage:        1 bytes
 47820 ;; Hardware stack levels used:    1
 47821 ;; This function calls:
 47822 ;;		Nothing
 47823 ;; This function is called by:
 47824 ;;		i2__i2c_write
 47825 ;;		i2__i2c_eeprom_busy
 47826 ;; This function uses a non-reentrant model
 47827 ;;
 47828                           
 47829                           	psect	text196
 47830  015962                     __ptext196:
 47831                           	opt stack 0
 47832  015962                     i2__i2c_send:
 47833                           	opt stack 13
 47834                           
 47835                           ;incstack = 0
 47836                           ;i2__i2c_send@dat stored from wreg
 47837  015962  6E01               	movwf	i2__i2c_send@dat,c
 47838                           
 47839                           ;i2c.c: 53: SSP1BUF = dat;
 47840  015964  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 47841  015968  0012               	return		;funcret
 47842  01596A                     __end_ofi2__i2c_send:
 47843                           	opt stack 0
 47844                           tosu	equ	0xFFF
 47845                           tosh	equ	0xFFE
 47846                           tosl	equ	0xFFD
 47847                           pclatu	equ	0xFFB
 47848                           pclath	equ	0xFFA
 47849                           tblptru	equ	0xFF8
 47850                           tblptrh	equ	0xFF7
 47851                           tblptrl	equ	0xFF6
 47852                           tablat	equ	0xFF5
 47853                           prodh	equ	0xFF4
 47854                           prodl	equ	0xFF3
 47855                           intcon	equ	0xFF2
 47856                           indf0	equ	0xFEF
 47857                           postinc0	equ	0xFEE
 47858                           fsr0h	equ	0xFEA
 47859                           fsr0l	equ	0xFE9
 47860                           wreg	equ	0xFE8
 47861                           indf1	equ	0xFE7
 47862                           postinc1	equ	0xFE6
 47863                           postdec1	equ	0xFE5
 47864                           plusw1	equ	0xFE3
 47865                           fsr1h	equ	0xFE2
 47866                           fsr1l	equ	0xFE1
 47867                           indf2	equ	0xFDF
 47868                           postinc2	equ	0xFDE
 47869                           postdec2	equ	0xFDD
 47870                           plusw2	equ	0xFDB
 47871                           fsr2h	equ	0xFDA
 47872                           fsr2l	equ	0xFD9
 47873                           status	equ	0xFD8
 47874                           
 47875 ;; *************** function _USBDeviceTasks *****************
 47876 ;; Defined at:
 47877 ;;		line 477 in file "usb_device.c"
 47878 ;; Parameters:    Size  Location     Type
 47879 ;;		None
 47880 ;; Auto vars:     Size  Location     Type
 47881 ;;  i               1   30[COMRAM] unsigned char 
 47882 ;; Return value:  Size  Location     Type
 47883 ;;                  1    wreg      void 
 47884 ;; Registers used:
 47885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 47886 ;; Tracked objects:
 47887 ;;		On entry : 0/0
 47888 ;;		On exit  : 0/0
 47889 ;;		Unchanged: 0/0
 47890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47895 ;;Total ram usage:        1 bytes
 47896 ;; Hardware stack levels used:    1
 47897 ;; Hardware stack levels required when called:    8
 47898 ;; This function calls:
 47899 ;;		_USBCtrlEPAllowStatusStage
 47900 ;;		_USBCtrlEPService
 47901 ;;		_USBIncrement1msInternalTimers
 47902 ;;		_USBStallHandler
 47903 ;;		_USBSuspend
 47904 ;;		_USBWakeFromSuspend
 47905 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47906 ;;		i2_USBDeviceInit
 47907 ;; This function is called by:
 47908 ;;		_SYS_InterruptHigh
 47909 ;; This function uses a non-reentrant model
 47910 ;;
 47911                           
 47912                           	psect	text197
 47913  00FFA2                     __ptext197:
 47914                           	opt stack 0
 47915  00FFA2                     _USBDeviceTasks:
 47916                           	opt stack 9
 47917                           
 47918                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 47919                           
 47920                           ;incstack = 0
 47921  00FFA2  045E               	decf	_USBDeviceState,w,c	;volatile
 47922  00FFA4  B4D8               	btfsc	status,2,c
 47923                           
 47924                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 47925  00FFA6  BA65               	btfsc	3941,5,c	;volatile
 47926  00FFA8  D007               	goto	i2l155
 47927                           
 47928                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 47929  00FFAA  0E00               	movlw	0
 47930  00FFAC  6E62               	movwf	3938,c	;volatile
 47931                           
 47932                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 47933  00FFAE  010F               	movlb	15	; () banked
 47934  00FFB0  8136               	bsf	54,0,b	;volatile
 47935                           
 47936                           ; BSR set to: 15
 47937                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 47938  00FFB2  8936               	bsf	54,4,b	;volatile
 47939                           
 47940                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 47941  00FFB4  0E02               	movlw	2
 47942  00FFB6  6E5E               	movwf	_USBDeviceState,c	;volatile
 47943  00FFB8                     i2l155:
 47944                           
 47945                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 47946                           
 47947                           ; BSR set to: 15
 47948                           
 47949                           ; BSR set to: 15
 47950  00FFB8  A462               	btfss	3938,2,c	;volatile
 47951  00FFBA  D006               	goto	i2l156
 47952  00FFBC  010F               	movlb	15	; () banked
 47953  00FFBE  A536               	btfss	54,2,b	;volatile
 47954  00FFC0  D003               	goto	i2l156
 47955                           
 47956                           ; BSR set to: 15
 47957                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 47958  00FFC2  9462               	bcf	3938,2,c	;volatile
 47959                           
 47960                           ; BSR set to: 15
 47961                           ;usb_device.c: 640: USBWakeFromSuspend();
 47962  00FFC4  ECE8  F0A8         	call	_USBWakeFromSuspend	;wreg free
 47963  00FFC8                     i2l156:
 47964                           
 47965                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 47966  00FFC8  A265               	btfss	3941,1,c	;volatile
 47967  00FFCA  D002               	goto	i2l157
 47968                           
 47969                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 47970  00FFCC  98A1               	bcf	4001,4,c	;volatile
 47971                           
 47972                           ;usb_device.c: 650: return;
 47973  00FFCE  0012               	return	
 47974  00FFD0                     i2l157:
 47975                           
 47976                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 47977  00FFD0  A062               	btfss	3938,0,c	;volatile
 47978  00FFD2  D009               	goto	i2l159
 47979  00FFD4  010F               	movlb	15	; () banked
 47980  00FFD6  A136               	btfss	54,0,b	;volatile
 47981  00FFD8  D006               	goto	i2l159
 47982                           
 47983                           ; BSR set to: 15
 47984                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 47985  00FFDA  EC74  F080         	call	i2_USBDeviceInit	;wreg free
 47986                           
 47987                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 47988  00FFDE  88A0               	bsf	4000,4,c	;volatile
 47989                           
 47990                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 47991  00FFE0  0E04               	movlw	4
 47992  00FFE2  6E5E               	movwf	_USBDeviceState,c	;volatile
 47993                           
 47994                           ;usb_device.c: 681: (UIR &= 0xFE);
 47995  00FFE4  9062               	bcf	3938,0,c	;volatile
 47996  00FFE6                     i2l159:
 47997                           
 47998                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 47999  00FFE6  A862               	btfss	3938,4,c	;volatile
 48000  00FFE8  D004               	goto	i2l160
 48001  00FFEA  010F               	movlb	15	; () banked
 48002  00FFEC  B936               	btfsc	54,4,b	;volatile
 48003                           
 48004                           ; BSR set to: 15
 48005                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 48006  00FFEE  ECE8  F0A9         	call	_USBSuspend	;wreg free
 48007  00FFF2                     i2l160:
 48008                           
 48009                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 48010  00FFF2  AC62               	btfss	3938,6,c	;volatile
 48011  00FFF4  D01C               	goto	i2l164
 48012                           
 48013                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 48014  00FFF6  010F               	movlb	15	; () banked
 48015  00FFF8  AD36               	btfss	54,6,b	;volatile
 48016  00FFFA  D00E               	goto	i2l162
 48017                           
 48018                           ; BSR set to: 15
 48019                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 48020  00FFFC  0E00               	movlw	0
 48021  00FFFE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48022  010000  0E73               	movlw	115
 48023  010002  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48024  010004  0E00               	movlw	0
 48025  010006  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48026  010008  0E00               	movlw	0
 48027  01000A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48028  01000C  0E00               	movlw	0
 48029  01000E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48030  010010  0E01               	movlw	1
 48031  010012  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48032  010014  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48033  010018                     i2l162:
 48034                           
 48035                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 48036  010018  9C62               	bcf	3938,6,c	;volatile
 48037                           
 48038                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 48039  01001A  ECB4  F0AB         	call	_USBIncrement1msInternalTimers	;wreg free
 48040                           
 48041                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 48042  01001E  0101               	movlb	1	; () banked
 48043  010020  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48044  010022  A4D8               	btfss	status,2,c
 48045                           
 48046                           ; BSR set to: 1
 48047                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 48048  010024  076A               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 48049                           
 48050                           ; BSR set to: 1
 48051                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 48052                           
 48053                           ; BSR set to: 1
 48054  010026  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48055  010028  B4D8               	btfsc	status,2,c
 48056                           
 48057                           ; BSR set to: 1
 48058                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 48059  01002A  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 48060  01002E                     i2l164:
 48061                           
 48062                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 48063  01002E  AA62               	btfss	3938,5,c	;volatile
 48064  010030  D004               	goto	i2l165
 48065  010032  010F               	movlb	15	; () banked
 48066  010034  BB36               	btfsc	54,5,b	;volatile
 48067                           
 48068                           ; BSR set to: 15
 48069                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 48070  010036  ECD7  F0A7         	call	_USBStallHandler	;wreg free
 48071  01003A                     i2l165:
 48072                           
 48073                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 48074  01003A  A262               	btfss	3938,1,c	;volatile
 48075  01003C  D012               	goto	i2l166
 48076  01003E  010F               	movlb	15	; () banked
 48077  010040  A336               	btfss	54,1,b	;volatile
 48078  010042  D00F               	goto	i2l166
 48079                           
 48080                           ; BSR set to: 15
 48081                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 48082  010044  0E7F               	movlw	127
 48083  010046  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48084  010048  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48085  01004A  0E00               	movlw	0
 48086  01004C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48087  01004E  0E00               	movlw	0
 48088  010050  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48089  010052  0E00               	movlw	0
 48090  010054  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48091  010056  0E01               	movlw	1
 48092  010058  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48093  01005A  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48094                           
 48095                           ;usb_device.c: 759: {UEIR = 0;};
 48096  01005E  0E00               	movlw	0
 48097  010060  6E63               	movwf	3939,c	;volatile
 48098  010062                     i2l166:
 48099                           
 48100                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 48101  010062  0E04               	movlw	4
 48102  010064  605E               	cpfslt	_USBDeviceState,c	;volatile
 48103  010066  D002               	goto	i2l167
 48104                           
 48105                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 48106  010068  98A1               	bcf	4001,4,c	;volatile
 48107                           
 48108                           ;usb_device.c: 777: return;
 48109  01006A  0012               	return	
 48110  01006C                     i2l167:
 48111                           
 48112                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 48113  01006C  010F               	movlb	15	; () banked
 48114  01006E  A736               	btfss	54,3,b	;volatile
 48115  010070  D039               	goto	i2u1700_40
 48116                           
 48117                           ; BSR set to: 15
 48118                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 48119  010072  0E00               	movlw	0
 48120  010074  6E1F               	movwf	USBDeviceTasks@i,c
 48121  010076                     i2l17554:
 48122                           
 48123                           ; BSR set to: 15
 48124  010076  0E03               	movlw	3
 48125  010078  641F               	cpfsgt	USBDeviceTasks@i,c
 48126  01007A  D001               	goto	i2l169
 48127  01007C  D033               	goto	i2u1700_40
 48128  01007E                     i2l169:
 48129                           
 48130                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 48131  01007E  A662               	btfss	3938,3,c	;volatile
 48132  010080  D031               	goto	i2u1700_40
 48133                           
 48134                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 48135  010082  CF64 F1C1          	movff	3940,_USTATcopy	;volatile
 48136                           
 48137                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 48138  010086  0101               	movlb	1	; () banked
 48139  010088  31C1               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 48140  01008A  32E8               	rrcf	wreg,f,c
 48141  01008C  32E8               	rrcf	wreg,f,c
 48142  01008E  0B0F               	andlw	15
 48143  010090  6F6C               	movwf	_endpoint_number& (0+255),b	;volatile
 48144                           
 48145                           ; BSR set to: 1
 48146                           ;usb_device.c: 793: (UIR &= 0xF7);
 48147  010092  9662               	bcf	3938,3,c	;volatile
 48148                           
 48149                           ; BSR set to: 1
 48150                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 48151  010094  B5C1               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 48152  010096  D007               	goto	i2l172
 48153                           
 48154                           ; BSR set to: 1
 48155                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 48156  010098  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48157  01009A  0D01               	mullw	1
 48158  01009C  0E39               	movlw	low _ep_data_out
 48159  01009E  24F3               	addwf	prodl,w,c
 48160  0100A0  6ED9               	movwf	fsr2l,c
 48161  0100A2  0E01               	movlw	high _ep_data_out
 48162  0100A4  D006               	goto	L76
 48163  0100A6                     i2l172:
 48164                           
 48165                           ; BSR set to: 1
 48166                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 48167                           
 48168                           ; BSR set to: 1
 48169  0100A6  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48170  0100A8  0D01               	mullw	1
 48171  0100AA  0E3C               	movlw	low _ep_data_in
 48172  0100AC  24F3               	addwf	prodl,w,c
 48173  0100AE  6ED9               	movwf	fsr2l,c
 48174  0100B0  0E01               	movlw	high _ep_data_in
 48175  0100B2                     L76:
 48176  0100B2  20F4               	addwfc	prodh,w,c
 48177  0100B4  6EDA               	movwf	fsr2h,c
 48178  0100B6  70DF               	btg	indf2,0,c
 48179                           
 48180                           ; BSR set to: 1
 48181                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 48182                           
 48183                           ; BSR set to: 1
 48184  0100B8  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48185  0100BA  A4D8               	btfss	status,2,c
 48186  0100BC  D003               	goto	i2l174
 48187                           
 48188                           ; BSR set to: 1
 48189                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 48190  0100BE  ECAD  F099         	call	_USBCtrlEPService	;wreg free
 48191                           
 48192                           ;usb_device.c: 813: }
 48193  0100C2  D00E               	goto	i2l176
 48194  0100C4                     i2l174:
 48195                           
 48196                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 48197  0100C4  0E00               	movlw	0
 48198  0100C6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48199  0100C8  0E72               	movlw	114
 48200  0100CA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48201  0100CC  0EC1               	movlw	low _USTATcopy
 48202  0100CE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48203  0100D0  0E01               	movlw	high _USTATcopy
 48204  0100D2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48205  0100D4  0E00               	movlw	0
 48206  0100D6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48207  0100D8  0E00               	movlw	0
 48208  0100DA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48209  0100DC  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48210  0100E0                     i2l176:
 48211  0100E0  2A1F               	incf	USBDeviceTasks@i,f,c
 48212  0100E2  D7C9               	goto	i2l17554
 48213  0100E4                     i2u1700_40:
 48214                           
 48215                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 48216  0100E4  98A1               	bcf	4001,4,c	;volatile
 48217  0100E6  0012               	return		;funcret
 48218  0100E8                     __end_of_USBDeviceTasks:
 48219                           	opt stack 0
 48220                           tosu	equ	0xFFF
 48221                           tosh	equ	0xFFE
 48222                           tosl	equ	0xFFD
 48223                           pclatu	equ	0xFFB
 48224                           pclath	equ	0xFFA
 48225                           tblptru	equ	0xFF8
 48226                           tblptrh	equ	0xFF7
 48227                           tblptrl	equ	0xFF6
 48228                           tablat	equ	0xFF5
 48229                           prodh	equ	0xFF4
 48230                           prodl	equ	0xFF3
 48231                           intcon	equ	0xFF2
 48232                           indf0	equ	0xFEF
 48233                           postinc0	equ	0xFEE
 48234                           fsr0h	equ	0xFEA
 48235                           fsr0l	equ	0xFE9
 48236                           wreg	equ	0xFE8
 48237                           indf1	equ	0xFE7
 48238                           postinc1	equ	0xFE6
 48239                           postdec1	equ	0xFE5
 48240                           plusw1	equ	0xFE3
 48241                           fsr1h	equ	0xFE2
 48242                           fsr1l	equ	0xFE1
 48243                           indf2	equ	0xFDF
 48244                           postinc2	equ	0xFDE
 48245                           postdec2	equ	0xFDD
 48246                           plusw2	equ	0xFDB
 48247                           fsr2h	equ	0xFDA
 48248                           fsr2l	equ	0xFD9
 48249                           status	equ	0xFD8
 48250                           
 48251 ;; *************** function i2_USBDeviceInit *****************
 48252 ;; Defined at:
 48253 ;;		line 277 in file "usb_device.c"
 48254 ;; Parameters:    Size  Location     Type
 48255 ;;		None
 48256 ;; Auto vars:     Size  Location     Type
 48257 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 48258 ;; Return value:  Size  Location     Type
 48259 ;;                  1    wreg      void 
 48260 ;; Registers used:
 48261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48262 ;; Tracked objects:
 48263 ;;		On entry : 0/0
 48264 ;;		On exit  : 0/0
 48265 ;;		Unchanged: 0/0
 48266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48271 ;;Total ram usage:        1 bytes
 48272 ;; Hardware stack levels used:    1
 48273 ;; Hardware stack levels required when called:    1
 48274 ;; This function calls:
 48275 ;;		i2_memset
 48276 ;; This function is called by:
 48277 ;;		_USBDeviceTasks
 48278 ;; This function uses a non-reentrant model
 48279 ;;
 48280                           
 48281                           	psect	text198
 48282  0100E8                     __ptext198:
 48283                           	opt stack 0
 48284  0100E8                     i2_USBDeviceInit:
 48285                           	opt stack 15
 48286                           
 48287                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 48288                           
 48289                           ;incstack = 0
 48290  0100E8  98A0               	bcf	4000,4,c	;volatile
 48291                           
 48292                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 48293  0100EA  0E00               	movlw	0
 48294  0100EC  6E63               	movwf	3939,c	;volatile
 48295                           
 48296                           ;usb_device.c: 291: {UIR = 0;};
 48297  0100EE  0E00               	movlw	0
 48298  0100F0  6E62               	movwf	3938,c	;volatile
 48299                           
 48300                           ;usb_device.c: 294: UEP0 = 0;
 48301  0100F2  0E00               	movlw	0
 48302  0100F4  010F               	movlb	15	; () banked
 48303  0100F6  6F26               	movwf	38,b	;volatile
 48304                           
 48305                           ; BSR set to: 15
 48306                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 48307  0100F8  0E27               	movlw	39
 48308  0100FA  6E01               	movwf	i2memset@p1,c
 48309  0100FC  0E0F               	movlw	15
 48310  0100FE  6E02               	movwf	i2memset@p1+1,c
 48311  010100  0E00               	movlw	0
 48312  010102  6E04               	movwf	i2memset@c+1,c
 48313  010104  0E00               	movlw	0
 48314  010106  6E03               	movwf	i2memset@c,c
 48315  010108  0E00               	movlw	0
 48316  01010A  6E06               	movwf	i2memset@n+1,c
 48317  01010C  0E02               	movlw	2
 48318  01010E  6E05               	movwf	i2memset@n,c
 48319  010110  EC5A  F0AA         	call	i2_memset	;wreg free
 48320                           
 48321                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 48322  010114  0E16               	movlw	22
 48323  010116  010F               	movlb	15	; () banked
 48324  010118  6F39               	movwf	57,b	;volatile
 48325                           
 48326                           ; BSR set to: 15
 48327  01011A  0E9F               	movlw	159
 48328  01011C  6F37               	movwf	55,b	;volatile
 48329                           
 48330                           ; BSR set to: 15
 48331  01011E  0E7B               	movlw	123
 48332  010120  6F36               	movwf	54,b	;volatile
 48333                           
 48334                           ; BSR set to: 15
 48335                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 48336  010122  0E00               	movlw	0
 48337  010124  6E09               	movwf	i2USBDeviceInit@i,c
 48338  010126                     i2l17348:
 48339                           
 48340                           ; BSR set to: 15
 48341  010126  0E0B               	movlw	11
 48342  010128  6409               	cpfsgt	i2USBDeviceInit@i,c
 48343  01012A  D001               	goto	i2l145
 48344  01012C  D00E               	goto	i2u1668_40
 48345  01012E                     i2l145:
 48346                           
 48347                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 48348                           
 48349                           ; BSR set to: 15
 48350  01012E  5009               	movf	i2USBDeviceInit@i,w,c
 48351  010130  0D04               	mullw	4
 48352  010132  0E00               	movlw	0
 48353  010134  24F3               	addwf	prodl,w,c
 48354  010136  6ED9               	movwf	fsr2l,c
 48355  010138  0E0D               	movlw	13
 48356  01013A  20F4               	addwfc	prodh,w,c
 48357  01013C  6EDA               	movwf	fsr2h,c
 48358  01013E  6ADE               	clrf	postinc2,c
 48359  010140  6ADE               	clrf	postinc2,c
 48360  010142  6ADE               	clrf	postinc2,c
 48361  010144  6ADD               	clrf	postdec2,c
 48362  010146  2A09               	incf	i2USBDeviceInit@i,f,c
 48363  010148  D7EE               	goto	i2l17348
 48364  01014A                     i2u1668_40:
 48365                           
 48366                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 48367  01014A  8C65               	bsf	3941,6,c	;volatile
 48368                           
 48369                           ;usb_device.c: 316: UADDR = 0x00;
 48370  01014C  0E00               	movlw	0
 48371  01014E  010F               	movlb	15	; () banked
 48372  010150  6F38               	movwf	56,b	;volatile
 48373                           
 48374                           ; BSR set to: 15
 48375                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 48376  010152  9865               	bcf	3941,4,c	;volatile
 48377                           
 48378                           ; BSR set to: 15
 48379                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 48380  010154  9C65               	bcf	3941,6,c	;volatile
 48381  010156                     
 48382                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 48383                           
 48384                           ; BSR set to: 15
 48385  010156  9662               	bcf	3938,3,c	;volatile
 48386                           
 48387                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 48388  010158  0E00               	movlw	0
 48389  01015A  6E55               	movwf	_inPipes+3,c	;volatile
 48390                           
 48391                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 48392  01015C  0E00               	movlw	0
 48393  01015E  0101               	movlb	1	; () banked
 48394  010160  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 48395                           
 48396                           ; BSR set to: 1
 48397                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 48398  010162  0E00               	movlw	0
 48399  010164  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 48400  010166  0E00               	movlw	0
 48401  010168  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 48402                           
 48403                           ; BSR set to: 1
 48404                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 48405  01016A  B662               	btfsc	3938,3,c	;volatile
 48406  01016C  D7F4               	goto	i2l147
 48407                           
 48408                           ; BSR set to: 1
 48409                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 48410                           
 48411                           ; BSR set to: 1
 48412  01016E  0E01               	movlw	1
 48413  010170  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48414                           
 48415                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 48416  010172  0E01               	movlw	1
 48417  010174  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48418                           
 48419                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 48420  010176  0E00               	movlw	0
 48421  010178  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48422                           
 48423                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 48424  01017A  0E00               	movlw	0
 48425  01017C  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48426                           
 48427                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 48428  01017E  0E00               	movlw	0
 48429  010180  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48430                           
 48431                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 48432  010182  0E00               	movlw	0
 48433  010184  6E09               	movwf	i2USBDeviceInit@i,c
 48434  010186                     i2l17376:
 48435                           
 48436                           ; BSR set to: 1
 48437  010186  0E02               	movlw	2
 48438  010188  6409               	cpfsgt	i2USBDeviceInit@i,c
 48439  01018A  D001               	goto	i2l149
 48440  01018C  D02E               	goto	i2u1671_40
 48441  01018E                     i2l149:
 48442                           
 48443                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 48444                           
 48445                           ; BSR set to: 1
 48446  01018E  5009               	movf	i2USBDeviceInit@i,w,c
 48447  010190  0D02               	mullw	2
 48448  010192  0E1B               	movlw	low _pBDTEntryIn
 48449  010194  24F3               	addwf	prodl,w,c
 48450  010196  6ED9               	movwf	fsr2l,c
 48451  010198  0E01               	movlw	high _pBDTEntryIn
 48452  01019A  20F4               	addwfc	prodh,w,c
 48453  01019C  6EDA               	movwf	fsr2h,c
 48454  01019E  0E00               	movlw	0
 48455  0101A0  6EDE               	movwf	postinc2,c
 48456  0101A2  0E00               	movlw	0
 48457  0101A4  6EDD               	movwf	postdec2,c
 48458                           
 48459                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 48460  0101A6  5009               	movf	i2USBDeviceInit@i,w,c
 48461  0101A8  0D02               	mullw	2
 48462  0101AA  0E21               	movlw	low _pBDTEntryOut
 48463  0101AC  24F3               	addwf	prodl,w,c
 48464  0101AE  6ED9               	movwf	fsr2l,c
 48465  0101B0  0E01               	movlw	high _pBDTEntryOut
 48466  0101B2  20F4               	addwfc	prodh,w,c
 48467  0101B4  6EDA               	movwf	fsr2h,c
 48468  0101B6  0E00               	movlw	0
 48469  0101B8  6EDE               	movwf	postinc2,c
 48470  0101BA  0E00               	movlw	0
 48471  0101BC  6EDD               	movwf	postdec2,c
 48472                           
 48473                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 48474  0101BE  5009               	movf	i2USBDeviceInit@i,w,c
 48475  0101C0  0D01               	mullw	1
 48476  0101C2  0E3C               	movlw	low _ep_data_in
 48477  0101C4  24F3               	addwf	prodl,w,c
 48478  0101C6  6ED9               	movwf	fsr2l,c
 48479  0101C8  0E01               	movlw	high _ep_data_in
 48480  0101CA  20F4               	addwfc	prodh,w,c
 48481  0101CC  6EDA               	movwf	fsr2h,c
 48482  0101CE  0E00               	movlw	0
 48483  0101D0  6EDF               	movwf	indf2,c
 48484                           
 48485                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 48486  0101D2  5009               	movf	i2USBDeviceInit@i,w,c
 48487  0101D4  0D01               	mullw	1
 48488  0101D6  0E39               	movlw	low _ep_data_out
 48489  0101D8  24F3               	addwf	prodl,w,c
 48490  0101DA  6ED9               	movwf	fsr2l,c
 48491  0101DC  0E01               	movlw	high _ep_data_out
 48492  0101DE  20F4               	addwfc	prodh,w,c
 48493  0101E0  6EDA               	movwf	fsr2h,c
 48494  0101E2  0E00               	movlw	0
 48495  0101E4  6EDF               	movwf	indf2,c
 48496  0101E6  2A09               	incf	i2USBDeviceInit@i,f,c
 48497  0101E8  D7CE               	goto	i2l17376
 48498  0101EA                     i2u1671_40:
 48499                           
 48500                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 48501  0101EA  0E08               	movlw	8
 48502  0101EC  0101               	movlb	1	; () banked
 48503  0101EE  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48504  0101F0  0E0D               	movlw	13
 48505  0101F2  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48506                           
 48507                           ; BSR set to: 1
 48508                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 48509  0101F4  0E16               	movlw	22
 48510  0101F6  010F               	movlb	15	; () banked
 48511  0101F8  6F26               	movwf	38,b	;volatile
 48512                           
 48513                           ; BSR set to: 15
 48514                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 48515  0101FA  0E0D               	movlw	13
 48516  0101FC  010D               	movlb	13	; () banked
 48517  0101FE  6F03               	movwf	3,b	;volatile
 48518  010200  0E30               	movlw	48
 48519  010202  6F02               	movwf	2,b	;volatile
 48520                           
 48521                           ; BSR set to: 13
 48522                           ;usb_device.c: 359: BDT[0].CNT = 8;
 48523  010204  0E08               	movlw	8
 48524  010206  6F01               	movwf	1,b	;volatile
 48525                           
 48526                           ; BSR set to: 13
 48527                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 48528  010208  0E04               	movlw	4
 48529  01020A  6F00               	movwf	0,b	;volatile
 48530                           
 48531                           ; BSR set to: 13
 48532                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 48533  01020C  8F00               	bsf	0,7,b	;volatile
 48534                           
 48535                           ; BSR set to: 13
 48536                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 48537  01020E  0E00               	movlw	0
 48538  010210  0101               	movlb	1	; () banked
 48539  010212  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 48540                           
 48541                           ; BSR set to: 1
 48542                           ;usb_device.c: 366: USB1msTickCount = 0;
 48543  010214  0E00               	movlw	0
 48544  010216  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 48545  010218  0E00               	movlw	0
 48546  01021A  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 48547  01021C  0E00               	movlw	0
 48548  01021E  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 48549  010220  0E00               	movlw	0
 48550  010222  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 48551                           
 48552                           ; BSR set to: 1
 48553                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 48554  010224  0E00               	movlw	0
 48555  010226  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48556                           
 48557                           ; BSR set to: 1
 48558                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 48559  010228  0E00               	movlw	0
 48560  01022A  6E5E               	movwf	_USBDeviceState,c	;volatile
 48561                           
 48562                           ; BSR set to: 1
 48563  01022C  0012               	return		;funcret
 48564  01022E                     __end_ofi2_USBDeviceInit:
 48565                           	opt stack 0
 48566                           tosu	equ	0xFFF
 48567                           tosh	equ	0xFFE
 48568                           tosl	equ	0xFFD
 48569                           pclatu	equ	0xFFB
 48570                           pclath	equ	0xFFA
 48571                           tblptru	equ	0xFF8
 48572                           tblptrh	equ	0xFF7
 48573                           tblptrl	equ	0xFF6
 48574                           tablat	equ	0xFF5
 48575                           prodh	equ	0xFF4
 48576                           prodl	equ	0xFF3
 48577                           intcon	equ	0xFF2
 48578                           indf0	equ	0xFEF
 48579                           postinc0	equ	0xFEE
 48580                           fsr0h	equ	0xFEA
 48581                           fsr0l	equ	0xFE9
 48582                           wreg	equ	0xFE8
 48583                           indf1	equ	0xFE7
 48584                           postinc1	equ	0xFE6
 48585                           postdec1	equ	0xFE5
 48586                           plusw1	equ	0xFE3
 48587                           fsr1h	equ	0xFE2
 48588                           fsr1l	equ	0xFE1
 48589                           indf2	equ	0xFDF
 48590                           postinc2	equ	0xFDE
 48591                           postdec2	equ	0xFDD
 48592                           plusw2	equ	0xFDB
 48593                           fsr2h	equ	0xFDA
 48594                           fsr2l	equ	0xFD9
 48595                           status	equ	0xFD8
 48596                           
 48597 ;; *************** function _USBWakeFromSuspend *****************
 48598 ;; Defined at:
 48599 ;;		line 2305 in file "usb_device.c"
 48600 ;; Parameters:    Size  Location     Type
 48601 ;;		None
 48602 ;; Auto vars:     Size  Location     Type
 48603 ;;		None
 48604 ;; Return value:  Size  Location     Type
 48605 ;;                  1    wreg      void 
 48606 ;; Registers used:
 48607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48608 ;; Tracked objects:
 48609 ;;		On entry : 0/0
 48610 ;;		On exit  : 0/0
 48611 ;;		Unchanged: 0/0
 48612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48617 ;;Total ram usage:        0 bytes
 48618 ;; Hardware stack levels used:    1
 48619 ;; Hardware stack levels required when called:    4
 48620 ;; This function calls:
 48621 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48622 ;; This function is called by:
 48623 ;;		_USBDeviceTasks
 48624 ;; This function uses a non-reentrant model
 48625 ;;
 48626                           
 48627                           	psect	text199
 48628  0151D0                     __ptext199:
 48629                           	opt stack 0
 48630  0151D0                     _USBWakeFromSuspend:
 48631                           	opt stack 12
 48632                           
 48633                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 48634                           
 48635                           ; BSR set to: 1
 48636                           ;incstack = 0
 48637  0151D0  0E00               	movlw	0
 48638  0151D2  0101               	movlb	1	; () banked
 48639  0151D4  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48640                           
 48641                           ; BSR set to: 1
 48642                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 48643  0151D6  0E00               	movlw	0
 48644  0151D8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48645  0151DA  0E74               	movlw	116
 48646  0151DC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48647  0151DE  0E00               	movlw	0
 48648  0151E0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48649  0151E2  0E00               	movlw	0
 48650  0151E4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48651  0151E6  0E00               	movlw	0
 48652  0151E8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48653  0151EA  0E00               	movlw	0
 48654  0151EC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48655  0151EE  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48656                           
 48657                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 48658  0151F2  9265               	bcf	3941,1,c	;volatile
 48659                           
 48660                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 48661  0151F4  010F               	movlb	15	; () banked
 48662  0151F6  9536               	bcf	54,2,b	;volatile
 48663                           
 48664                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 48665  0151F8  D001               	goto	i2l315
 48666  0151FA                     
 48667                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 48668                           
 48669                           ; BSR set to: 15
 48670  0151FA  9462               	bcf	3938,2,c	;volatile
 48671  0151FC                     i2l315:
 48672  0151FC  B462               	btfsc	3938,2,c	;volatile
 48673  0151FE  D7FD               	goto	i2l316
 48674                           
 48675                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 48676  015200  0E00               	movlw	0
 48677  015202  0101               	movlb	1	; () banked
 48678  015204  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48679                           
 48680                           ; BSR set to: 1
 48681  015206  0012               	return		;funcret
 48682  015208                     __end_of_USBWakeFromSuspend:
 48683                           	opt stack 0
 48684                           tosu	equ	0xFFF
 48685                           tosh	equ	0xFFE
 48686                           tosl	equ	0xFFD
 48687                           pclatu	equ	0xFFB
 48688                           pclath	equ	0xFFA
 48689                           tblptru	equ	0xFF8
 48690                           tblptrh	equ	0xFF7
 48691                           tblptrl	equ	0xFF6
 48692                           tablat	equ	0xFF5
 48693                           prodh	equ	0xFF4
 48694                           prodl	equ	0xFF3
 48695                           intcon	equ	0xFF2
 48696                           indf0	equ	0xFEF
 48697                           postinc0	equ	0xFEE
 48698                           fsr0h	equ	0xFEA
 48699                           fsr0l	equ	0xFE9
 48700                           wreg	equ	0xFE8
 48701                           indf1	equ	0xFE7
 48702                           postinc1	equ	0xFE6
 48703                           postdec1	equ	0xFE5
 48704                           plusw1	equ	0xFE3
 48705                           fsr1h	equ	0xFE2
 48706                           fsr1l	equ	0xFE1
 48707                           indf2	equ	0xFDF
 48708                           postinc2	equ	0xFDE
 48709                           postdec2	equ	0xFDD
 48710                           plusw2	equ	0xFDB
 48711                           fsr2h	equ	0xFDA
 48712                           fsr2l	equ	0xFD9
 48713                           status	equ	0xFD8
 48714                           
 48715 ;; *************** function _USBSuspend *****************
 48716 ;; Defined at:
 48717 ;;		line 2247 in file "usb_device.c"
 48718 ;; Parameters:    Size  Location     Type
 48719 ;;		None
 48720 ;; Auto vars:     Size  Location     Type
 48721 ;;		None
 48722 ;; Return value:  Size  Location     Type
 48723 ;;                  1    wreg      void 
 48724 ;; Registers used:
 48725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48726 ;; Tracked objects:
 48727 ;;		On entry : 0/0
 48728 ;;		On exit  : 0/0
 48729 ;;		Unchanged: 0/0
 48730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48735 ;;Total ram usage:        0 bytes
 48736 ;; Hardware stack levels used:    1
 48737 ;; Hardware stack levels required when called:    4
 48738 ;; This function calls:
 48739 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48740 ;; This function is called by:
 48741 ;;		_USBDeviceTasks
 48742 ;; This function uses a non-reentrant model
 48743 ;;
 48744                           
 48745                           	psect	text200
 48746  0153D0                     __ptext200:
 48747                           	opt stack 0
 48748  0153D0                     _USBSuspend:
 48749                           	opt stack 12
 48750                           
 48751                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 48752                           
 48753                           ; BSR set to: 1
 48754                           ;incstack = 0
 48755  0153D0  010F               	movlb	15	; () banked
 48756  0153D2  8536               	bsf	54,2,b	;volatile
 48757                           
 48758                           ; BSR set to: 15
 48759                           ;usb_device.c: 2273: (UIR &= 0xEF);
 48760  0153D4  9862               	bcf	3938,4,c	;volatile
 48761                           
 48762                           ; BSR set to: 15
 48763                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 48764  0153D6  8265               	bsf	3941,1,c	;volatile
 48765                           
 48766                           ; BSR set to: 15
 48767                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 48768  0153D8  0E01               	movlw	1
 48769  0153DA  0101               	movlb	1	; () banked
 48770  0153DC  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48771                           
 48772                           ; BSR set to: 1
 48773                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 48774  0153DE  0E00               	movlw	0
 48775  0153E0  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48776                           
 48777                           ; BSR set to: 1
 48778                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 48779  0153E2  0E00               	movlw	0
 48780  0153E4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48781  0153E6  0E75               	movlw	117
 48782  0153E8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48783  0153EA  0E00               	movlw	0
 48784  0153EC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48785  0153EE  0E00               	movlw	0
 48786  0153F0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48787  0153F2  0E00               	movlw	0
 48788  0153F4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48789  0153F6  0E00               	movlw	0
 48790  0153F8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48791  0153FA  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48792  0153FE  0012               	return		;funcret
 48793  015400                     __end_of_USBSuspend:
 48794                           	opt stack 0
 48795                           tosu	equ	0xFFF
 48796                           tosh	equ	0xFFE
 48797                           tosl	equ	0xFFD
 48798                           pclatu	equ	0xFFB
 48799                           pclath	equ	0xFFA
 48800                           tblptru	equ	0xFF8
 48801                           tblptrh	equ	0xFF7
 48802                           tblptrl	equ	0xFF6
 48803                           tablat	equ	0xFF5
 48804                           prodh	equ	0xFF4
 48805                           prodl	equ	0xFF3
 48806                           intcon	equ	0xFF2
 48807                           indf0	equ	0xFEF
 48808                           postinc0	equ	0xFEE
 48809                           fsr0h	equ	0xFEA
 48810                           fsr0l	equ	0xFE9
 48811                           wreg	equ	0xFE8
 48812                           indf1	equ	0xFE7
 48813                           postinc1	equ	0xFE6
 48814                           postdec1	equ	0xFE5
 48815                           plusw1	equ	0xFE3
 48816                           fsr1h	equ	0xFE2
 48817                           fsr1l	equ	0xFE1
 48818                           indf2	equ	0xFDF
 48819                           postinc2	equ	0xFDE
 48820                           postdec2	equ	0xFDD
 48821                           plusw2	equ	0xFDB
 48822                           fsr2h	equ	0xFDA
 48823                           fsr2l	equ	0xFD9
 48824                           status	equ	0xFD8
 48825                           
 48826 ;; *************** function _USBStallHandler *****************
 48827 ;; Defined at:
 48828 ;;		line 2204 in file "usb_device.c"
 48829 ;; Parameters:    Size  Location     Type
 48830 ;;		None
 48831 ;; Auto vars:     Size  Location     Type
 48832 ;;		None
 48833 ;; Return value:  Size  Location     Type
 48834 ;;                  1    wreg      void 
 48835 ;; Registers used:
 48836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48837 ;; Tracked objects:
 48838 ;;		On entry : 0/0
 48839 ;;		On exit  : 0/0
 48840 ;;		Unchanged: 0/0
 48841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48846 ;;Total ram usage:        1 bytes
 48847 ;; Hardware stack levels used:    1
 48848 ;; This function calls:
 48849 ;;		Nothing
 48850 ;; This function is called by:
 48851 ;;		_USBDeviceTasks
 48852 ;; This function uses a non-reentrant model
 48853 ;;
 48854                           
 48855                           	psect	text201
 48856  014FAE                     __ptext201:
 48857                           	opt stack 0
 48858  014FAE                     _USBStallHandler:
 48859                           	opt stack 16
 48860                           
 48861                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 48862                           
 48863                           ;incstack = 0
 48864  014FAE  010F               	movlb	15	; () banked
 48865  014FB0  A126               	btfss	38,0,b	;volatile
 48866  014FB2  D01D               	goto	i2l307
 48867                           
 48868                           ; BSR set to: 15
 48869                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 48870  014FB4  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48871  014FB8  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48872  014FBC  0E80               	movlw	128
 48873  014FBE  18DE               	xorwf	postinc2,w,c
 48874  014FC0  A4D8               	btfss	status,2,c
 48875  014FC2  D014               	goto	i2l308
 48876                           
 48877                           ; BSR set to: 15
 48878  014FC4  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48879  014FC8  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48880  014FCC  0E84               	movlw	132
 48881  014FCE  18DE               	xorwf	postinc2,w,c
 48882  014FD0  A4D8               	btfss	status,2,c
 48883  014FD2  D00C               	goto	i2l308
 48884                           
 48885                           ; BSR set to: 15
 48886                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 48887  014FD4  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48888  014FD8  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48889  014FDC  0E0C               	movlw	12
 48890  014FDE  6EDF               	movwf	indf2,c
 48891                           
 48892                           ; BSR set to: 15
 48893                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 48894  014FE0  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48895  014FE4  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48896  014FE8  0E00               	movlw	0
 48897  014FEA  8EDB               	bsf	plusw2,7,c
 48898  014FEC                     i2l308:
 48899                           
 48900                           ; BSR set to: 15
 48901                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 48902                           
 48903                           ; BSR set to: 15
 48904  014FEC  9126               	bcf	38,0,b	;volatile
 48905  014FEE                     i2l307:
 48906                           
 48907                           ; BSR set to: 15
 48908                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 48909  014FEE  9A62               	bcf	3938,5,c	;volatile
 48910                           
 48911                           ; BSR set to: 15
 48912  014FF0  0012               	return		;funcret
 48913  014FF2                     __end_of_USBStallHandler:
 48914                           	opt stack 0
 48915                           tosu	equ	0xFFF
 48916                           tosh	equ	0xFFE
 48917                           tosl	equ	0xFFD
 48918                           pclatu	equ	0xFFB
 48919                           pclath	equ	0xFFA
 48920                           tblptru	equ	0xFF8
 48921                           tblptrh	equ	0xFF7
 48922                           tblptrl	equ	0xFF6
 48923                           tablat	equ	0xFF5
 48924                           prodh	equ	0xFF4
 48925                           prodl	equ	0xFF3
 48926                           intcon	equ	0xFF2
 48927                           indf0	equ	0xFEF
 48928                           postinc0	equ	0xFEE
 48929                           fsr0h	equ	0xFEA
 48930                           fsr0l	equ	0xFE9
 48931                           wreg	equ	0xFE8
 48932                           indf1	equ	0xFE7
 48933                           postinc1	equ	0xFE6
 48934                           postdec1	equ	0xFE5
 48935                           plusw1	equ	0xFE3
 48936                           fsr1h	equ	0xFE2
 48937                           fsr1l	equ	0xFE1
 48938                           indf2	equ	0xFDF
 48939                           postinc2	equ	0xFDE
 48940                           postdec2	equ	0xFDD
 48941                           plusw2	equ	0xFDB
 48942                           fsr2h	equ	0xFDA
 48943                           fsr2l	equ	0xFD9
 48944                           status	equ	0xFD8
 48945                           
 48946 ;; *************** function _USBIncrement1msInternalTimers *****************
 48947 ;; Defined at:
 48948 ;;		line 3027 in file "usb_device.c"
 48949 ;; Parameters:    Size  Location     Type
 48950 ;;		None
 48951 ;; Auto vars:     Size  Location     Type
 48952 ;;		None
 48953 ;; Return value:  Size  Location     Type
 48954 ;;                  1    wreg      void 
 48955 ;; Registers used:
 48956 ;;		wreg, status,2, status,0
 48957 ;; Tracked objects:
 48958 ;;		On entry : 0/0
 48959 ;;		On exit  : 0/0
 48960 ;;		Unchanged: 0/0
 48961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48966 ;;Total ram usage:        0 bytes
 48967 ;; Hardware stack levels used:    1
 48968 ;; This function calls:
 48969 ;;		Nothing
 48970 ;; This function is called by:
 48971 ;;		_USBDeviceTasks
 48972 ;; This function uses a non-reentrant model
 48973 ;;
 48974                           
 48975                           	psect	text202
 48976  015768                     __ptext202:
 48977                           	opt stack 0
 48978  015768                     _USBIncrement1msInternalTimers:
 48979                           	opt stack 16
 48980                           
 48981                           ;usb_device.c: 3035: USB1msTickCount++;
 48982                           
 48983                           ; BSR set to: 15
 48984                           ;incstack = 0
 48985  015768  0E01               	movlw	1
 48986  01576A  0101               	movlb	1	; () banked
 48987  01576C  272F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 48988  01576E  0E00               	movlw	0
 48989  015770  2330               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 48990  015772  2331               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 48991  015774  2332               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 48992                           
 48993                           ; BSR set to: 1
 48994                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 48995  015776  516D               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 48996  015778  A4D8               	btfss	status,2,c
 48997  01577A  0012               	return	
 48998                           
 48999                           ; BSR set to: 1
 49000                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 49001  01577C  2B64               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 49002                           
 49003                           ; BSR set to: 1
 49004                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 49005  01577E  5164               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 49006  015780  A4D8               	btfss	status,2,c
 49007  015782  0012               	return	
 49008                           
 49009                           ; BSR set to: 1
 49010                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 49011  015784  6964               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49012                           
 49013                           ; BSR set to: 1
 49014  015786  0012               	return	
 49015  015788                     __end_of_USBIncrement1msInternalTimers:
 49016                           	opt stack 0
 49017                           tosu	equ	0xFFF
 49018                           tosh	equ	0xFFE
 49019                           tosl	equ	0xFFD
 49020                           pclatu	equ	0xFFB
 49021                           pclath	equ	0xFFA
 49022                           tblptru	equ	0xFF8
 49023                           tblptrh	equ	0xFF7
 49024                           tblptrl	equ	0xFF6
 49025                           tablat	equ	0xFF5
 49026                           prodh	equ	0xFF4
 49027                           prodl	equ	0xFF3
 49028                           intcon	equ	0xFF2
 49029                           indf0	equ	0xFEF
 49030                           postinc0	equ	0xFEE
 49031                           fsr0h	equ	0xFEA
 49032                           fsr0l	equ	0xFE9
 49033                           wreg	equ	0xFE8
 49034                           indf1	equ	0xFE7
 49035                           postinc1	equ	0xFE6
 49036                           postdec1	equ	0xFE5
 49037                           plusw1	equ	0xFE3
 49038                           fsr1h	equ	0xFE2
 49039                           fsr1l	equ	0xFE1
 49040                           indf2	equ	0xFDF
 49041                           postinc2	equ	0xFDE
 49042                           postdec2	equ	0xFDD
 49043                           plusw2	equ	0xFDB
 49044                           fsr2h	equ	0xFDA
 49045                           fsr2l	equ	0xFD9
 49046                           status	equ	0xFD8
 49047                           
 49048 ;; *************** function _USBCtrlEPService *****************
 49049 ;; Defined at:
 49050 ;;		line 2374 in file "usb_device.c"
 49051 ;; Parameters:    Size  Location     Type
 49052 ;;		None
 49053 ;; Auto vars:     Size  Location     Type
 49054 ;;		None
 49055 ;; Return value:  Size  Location     Type
 49056 ;;                  1    wreg      void 
 49057 ;; Registers used:
 49058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49059 ;; Tracked objects:
 49060 ;;		On entry : 0/0
 49061 ;;		On exit  : 0/0
 49062 ;;		Unchanged: 0/0
 49063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49068 ;;Total ram usage:        1 bytes
 49069 ;; Hardware stack levels used:    1
 49070 ;; Hardware stack levels required when called:    7
 49071 ;; This function calls:
 49072 ;;		_USBCtrlTrfInHandler
 49073 ;;		_USBCtrlTrfOutHandler
 49074 ;;		_USBCtrlTrfSetupHandler
 49075 ;;		i2_memcpy
 49076 ;; This function is called by:
 49077 ;;		_USBDeviceTasks
 49078 ;; This function uses a non-reentrant model
 49079 ;;
 49080                           
 49081                           	psect	text203
 49082  01335A                     __ptext203:
 49083                           	opt stack 0
 49084  01335A                     _USBCtrlEPService:
 49085                           	opt stack 9
 49086                           
 49087                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 49088                           
 49089                           ; BSR set to: 1
 49090                           ;incstack = 0
 49091  01335A  0E2D               	movlw	45
 49092  01335C  0101               	movlb	1	; () banked
 49093  01335E  6F6A               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 49094                           
 49095                           ; BSR set to: 1
 49096                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 49097  013360  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49098  013364  0EFD               	movlw	253
 49099  013366  161E               	andwf	??_USBCtrlEPService,f,c
 49100  013368  A4D8               	btfss	status,2,c
 49101  01336A  D03B               	goto	i2l321
 49102                           
 49103                           ; BSR set to: 1
 49104                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 49105  01336C  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49106  013370  90D8               	bcf	status,0,c
 49107  013372  321E               	rrcf	??_USBCtrlEPService,f,c
 49108  013374  0E3F               	movlw	63
 49109  013376  161E               	andwf	??_USBCtrlEPService,f,c
 49110  013378  501E               	movf	??_USBCtrlEPService,w,c
 49111  01337A  0D04               	mullw	4
 49112  01337C  0E00               	movlw	0
 49113  01337E  24F3               	addwf	prodl,w,c
 49114  013380  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 49115  013382  0E0D               	movlw	13
 49116  013384  20F4               	addwfc	prodh,w,c
 49117  013386  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 49118                           
 49119                           ; BSR set to: 1
 49120                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 49121  013388  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 49122  01338C  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 49123                           
 49124                           ; BSR set to: 1
 49125                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 49126  013390  0E04               	movlw	4
 49127  013392  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 49128  013394  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 49129  013396  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49130  013398  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 49131                           
 49132                           ; BSR set to: 1
 49133                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 49134  01339A  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49135  01339E  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49136  0133A2  30DF               	rrcf	223,w,c
 49137  0133A4  32E8               	rrcf	wreg,f,c
 49138  0133A6  0B0F               	andlw	15
 49139  0133A8  0A0D               	xorlw	13
 49140  0133AA  A4D8               	btfss	status,2,c
 49141  0133AC  D017               	goto	i2l322
 49142                           
 49143                           ; BSR set to: 1
 49144                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 49145  0133AE  0E30               	movlw	48
 49146  0133B0  6E01               	movwf	i2memcpy@d1,c
 49147  0133B2  0E0D               	movlw	13
 49148  0133B4  6E02               	movwf	i2memcpy@d1+1,c
 49149  0133B6  EE20 F002          	lfsr	2,2
 49150  0133BA  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 49151  0133BC  26D9               	addwf	fsr2l,f,c
 49152  0133BE  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 49153  0133C0  22DA               	addwfc	fsr2h,f,c
 49154  0133C2  CFDE F003          	movff	postinc2,i2memcpy@s1
 49155  0133C6  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 49156  0133CA  0E00               	movlw	0
 49157  0133CC  6E06               	movwf	i2memcpy@n+1,c
 49158  0133CE  0E08               	movlw	8
 49159  0133D0  6E05               	movwf	i2memcpy@n,c
 49160  0133D2  EC68  F0A2         	call	i2_memcpy	;wreg free
 49161                           
 49162                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 49163  0133D6  ECB9  F09B         	call	_USBCtrlTrfSetupHandler	;wreg free
 49164                           
 49165                           ;usb_device.c: 2411: }
 49166  0133DA  0012               	return	
 49167  0133DC                     i2l322:
 49168                           
 49169                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 49170  0133DC  EC09  F0A2         	call	_USBCtrlTrfOutHandler	;wreg free
 49171                           
 49172                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 49173  0133E0  0012               	return	
 49174  0133E2                     i2l321:
 49175                           
 49176                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 49177  0133E2  0101               	movlb	1	; () banked
 49178  0133E4  51C1               	movf	_USTATcopy& (0+255),w,b	;volatile
 49179  0133E6  0BFD               	andlw	253
 49180  0133E8  0A04               	xorlw	4
 49181  0133EA  A4D8               	btfss	status,2,c
 49182  0133EC  0012               	return	
 49183                           
 49184                           ; BSR set to: 1
 49185                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 49186  0133EE  EC84  F094         	call	_USBCtrlTrfInHandler	;wreg free
 49187  0133F2  0012               	return	
 49188  0133F4                     __end_of_USBCtrlEPService:
 49189                           	opt stack 0
 49190                           tosu	equ	0xFFF
 49191                           tosh	equ	0xFFE
 49192                           tosl	equ	0xFFD
 49193                           pclatu	equ	0xFFB
 49194                           pclath	equ	0xFFA
 49195                           tblptru	equ	0xFF8
 49196                           tblptrh	equ	0xFF7
 49197                           tblptrl	equ	0xFF6
 49198                           tablat	equ	0xFF5
 49199                           prodh	equ	0xFF4
 49200                           prodl	equ	0xFF3
 49201                           intcon	equ	0xFF2
 49202                           indf0	equ	0xFEF
 49203                           postinc0	equ	0xFEE
 49204                           fsr0h	equ	0xFEA
 49205                           fsr0l	equ	0xFE9
 49206                           wreg	equ	0xFE8
 49207                           indf1	equ	0xFE7
 49208                           postinc1	equ	0xFE6
 49209                           postdec1	equ	0xFE5
 49210                           plusw1	equ	0xFE3
 49211                           fsr1h	equ	0xFE2
 49212                           fsr1l	equ	0xFE1
 49213                           indf2	equ	0xFDF
 49214                           postinc2	equ	0xFDE
 49215                           postdec2	equ	0xFDD
 49216                           plusw2	equ	0xFDB
 49217                           fsr2h	equ	0xFDA
 49218                           fsr2l	equ	0xFD9
 49219                           status	equ	0xFD8
 49220                           
 49221 ;; *************** function i2_memcpy *****************
 49222 ;; Defined at:
 49223 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 49224 ;; Parameters:    Size  Location     Type
 49225 ;;  d1              2    0[COMRAM] PTR void 
 49226 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49227 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49228 ;;  s1              2    2[COMRAM] PTR const void 
 49229 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49230 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49231 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49232 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49233 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49234 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49235 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49236 ;;  n               2    4[COMRAM] unsigned int 
 49237 ;; Auto vars:     Size  Location     Type
 49238 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 49239 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49240 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49241 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49242 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49243 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49244 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49245 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49246 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 49247 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49248 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49249 ;;  memcpy          1   10[COMRAM] unsigned char 
 49250 ;; Return value:  Size  Location     Type
 49251 ;;                  2    0[COMRAM] PTR void 
 49252 ;; Registers used:
 49253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 49254 ;; Tracked objects:
 49255 ;;		On entry : 0/0
 49256 ;;		On exit  : 0/0
 49257 ;;		Unchanged: 0/0
 49258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49259 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49260 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49262 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49263 ;;Total ram usage:       11 bytes
 49264 ;; Hardware stack levels used:    1
 49265 ;; This function calls:
 49266 ;;		Nothing
 49267 ;; This function is called by:
 49268 ;;		_USBCtrlEPService
 49269 ;; This function uses a non-reentrant model
 49270 ;;
 49271                           
 49272                           	psect	text204
 49273  0144D0                     __ptext204:
 49274                           	opt stack 0
 49275  0144D0                     i2_memcpy:
 49276                           	opt stack 15
 49277                           
 49278                           ;incstack = 0
 49279  0144D0  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 49280  0144D4  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 49281  0144D8  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 49282  0144DC  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 49283  0144E0  D01C               	goto	i2l3696
 49284  0144E2                     i2l16540:
 49285  0144E2  C009  FFF6         	movff	i2memcpy@s,tblptrl
 49286  0144E6  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 49287  0144EA  0E00               	movlw	low (__mediumconst shr (0+16))
 49288  0144EC  6EF8               	movwf	tblptru,c
 49289  0144EE  0E0E               	movlw	(high __ramtop+-1)
 49290  0144F0  64F7               	cpfsgt	tblptrh,c
 49291  0144F2  D003               	bra	i2u1566_47
 49292  0144F4  0008               	tblrd		*
 49293  0144F6  50F5               	movf	tablat,w,c
 49294  0144F8  D005               	bra	i2u1566_40
 49295  0144FA                     i2u1566_47:
 49296  0144FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 49297  0144FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 49298  014502  50EF               	movf	indf0,w,c
 49299  014504                     i2u1566_40:
 49300  014504  6E0B               	movwf	i2memcpy@tmp,c
 49301  014506  4A09               	infsnz	i2memcpy@s,f,c
 49302  014508  2A0A               	incf	i2memcpy@s+1,f,c
 49303  01450A  C007  FFD9         	movff	i2memcpy@d,fsr2l
 49304  01450E  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 49305  014512  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 49306  014516  4A07               	infsnz	i2memcpy@d,f,c
 49307  014518  2A08               	incf	i2memcpy@d+1,f,c
 49308  01451A                     i2l3696:
 49309  01451A  0605               	decf	i2memcpy@n,f,c
 49310  01451C  A0D8               	btfss	status,0,c
 49311  01451E  0606               	decf	i2memcpy@n+1,f,c
 49312  014520  2805               	incf	i2memcpy@n,w,c
 49313  014522  E1DF               	bnz	i2l16540
 49314  014524  2806               	incf	i2memcpy@n+1,w,c
 49315  014526  B4D8               	btfsc	status,2,c
 49316  014528  0012               	return	
 49317  01452A  D7DB               	goto	i2l3697
 49318  01452C                     __end_ofi2_memcpy:
 49319                           	opt stack 0
 49320                           tosu	equ	0xFFF
 49321                           tosh	equ	0xFFE
 49322                           tosl	equ	0xFFD
 49323                           pclatu	equ	0xFFB
 49324                           pclath	equ	0xFFA
 49325                           tblptru	equ	0xFF8
 49326                           tblptrh	equ	0xFF7
 49327                           tblptrl	equ	0xFF6
 49328                           tablat	equ	0xFF5
 49329                           prodh	equ	0xFF4
 49330                           prodl	equ	0xFF3
 49331                           intcon	equ	0xFF2
 49332                           indf0	equ	0xFEF
 49333                           postinc0	equ	0xFEE
 49334                           fsr0h	equ	0xFEA
 49335                           fsr0l	equ	0xFE9
 49336                           wreg	equ	0xFE8
 49337                           indf1	equ	0xFE7
 49338                           postinc1	equ	0xFE6
 49339                           postdec1	equ	0xFE5
 49340                           plusw1	equ	0xFE3
 49341                           fsr1h	equ	0xFE2
 49342                           fsr1l	equ	0xFE1
 49343                           indf2	equ	0xFDF
 49344                           postinc2	equ	0xFDE
 49345                           postdec2	equ	0xFDD
 49346                           plusw2	equ	0xFDB
 49347                           fsr2h	equ	0xFDA
 49348                           fsr2l	equ	0xFD9
 49349                           status	equ	0xFD8
 49350                           
 49351 ;; *************** function _USBCtrlTrfSetupHandler *****************
 49352 ;; Defined at:
 49353 ;;		line 2467 in file "usb_device.c"
 49354 ;; Parameters:    Size  Location     Type
 49355 ;;		None
 49356 ;; Auto vars:     Size  Location     Type
 49357 ;;		None
 49358 ;; Return value:  Size  Location     Type
 49359 ;;                  1    wreg      void 
 49360 ;; Registers used:
 49361 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49362 ;; Tracked objects:
 49363 ;;		On entry : 0/0
 49364 ;;		On exit  : 0/0
 49365 ;;		Unchanged: 0/0
 49366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49371 ;;Total ram usage:        0 bytes
 49372 ;; Hardware stack levels used:    1
 49373 ;; Hardware stack levels required when called:    6
 49374 ;; This function calls:
 49375 ;;		_USBCheckStdRequest
 49376 ;;		_USBCtrlEPServiceComplete
 49377 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49378 ;; This function is called by:
 49379 ;;		_USBCtrlEPService
 49380 ;; This function uses a non-reentrant model
 49381 ;;
 49382                           
 49383                           	psect	text205
 49384  013772                     __ptext205:
 49385                           	opt stack 0
 49386  013772                     _USBCtrlTrfSetupHandler:
 49387                           	opt stack 9
 49388                           
 49389                           ;usb_device.c: 2472: shortPacketStatus = 0;
 49390                           
 49391                           ;incstack = 0
 49392  013772  0E00               	movlw	0
 49393  013774  0101               	movlb	1	; () banked
 49394  013776  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 49395                           
 49396                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 49397  013778  0E00               	movlw	0
 49398  01377A  6F69               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 49399                           
 49400                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 49401  01377C  0E00               	movlw	0
 49402  01377E  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49403                           
 49404                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 49405  013780  0E00               	movlw	0
 49406  013782  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49407                           
 49408                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 49409  013784  0E00               	movlw	0
 49410  013786  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 49411                           
 49412                           ;usb_device.c: 2477: controlTransferState = 0;
 49413  013788  0E00               	movlw	0
 49414  01378A  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49415                           
 49416                           ; BSR set to: 1
 49417                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49418  01378C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49419  013790  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49420  013794  0E7F               	movlw	127
 49421  013796  16DF               	andwf	indf2,f,c
 49422                           
 49423                           ; BSR set to: 1
 49424                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49425  013798  0E04               	movlw	4
 49426  01379A  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49427  01379C  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49428  01379E  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49429  0137A0  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49430                           
 49431                           ; BSR set to: 1
 49432                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49433  0137A2  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49434  0137A6  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49435  0137AA  0E7F               	movlw	127
 49436  0137AC  16DF               	andwf	indf2,f,c
 49437                           
 49438                           ; BSR set to: 1
 49439                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49440  0137AE  0E04               	movlw	4
 49441  0137B0  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49442  0137B2  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49443  0137B4  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49444  0137B6  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49445                           
 49446                           ; BSR set to: 1
 49447                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 49448  0137B8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49449  0137BC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49450  0137C0  0E7F               	movlw	127
 49451  0137C2  16DF               	andwf	indf2,f,c
 49452                           
 49453                           ; BSR set to: 1
 49454                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 49455  0137C4  0E00               	movlw	0
 49456  0137C6  6E55               	movwf	_inPipes+3,c	;volatile
 49457                           
 49458                           ; BSR set to: 1
 49459                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 49460  0137C8  0E00               	movlw	0
 49461  0137CA  6E57               	movwf	_inPipes+5,c	;volatile
 49462  0137CC  0E00               	movlw	0
 49463  0137CE  6E56               	movwf	_inPipes+4,c	;volatile
 49464                           
 49465                           ; BSR set to: 1
 49466                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 49467  0137D0  0E00               	movlw	0
 49468  0137D2  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49469                           
 49470                           ; BSR set to: 1
 49471                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 49472  0137D4  0E00               	movlw	0
 49473  0137D6  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49474  0137D8  0E00               	movlw	0
 49475  0137DA  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49476                           
 49477                           ; BSR set to: 1
 49478                           ;usb_device.c: 2502: USBCheckStdRequest();
 49479  0137DC  ECAC  F091         	call	_USBCheckStdRequest	;wreg free
 49480                           
 49481                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 49482  0137E0  0E00               	movlw	0
 49483  0137E2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49484  0137E4  0E03               	movlw	3
 49485  0137E6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49486  0137E8  0E00               	movlw	0
 49487  0137EA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49488  0137EC  0E00               	movlw	0
 49489  0137EE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49490  0137F0  0E00               	movlw	0
 49491  0137F2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49492  0137F4  0E00               	movlw	0
 49493  0137F6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49494  0137F8  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49495                           
 49496                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 49497  0137FC  ECED  F08A         	call	_USBCtrlEPServiceComplete	;wreg free
 49498  013800  0012               	return		;funcret
 49499  013802                     __end_of_USBCtrlTrfSetupHandler:
 49500                           	opt stack 0
 49501                           tosu	equ	0xFFF
 49502                           tosh	equ	0xFFE
 49503                           tosl	equ	0xFFD
 49504                           pclatu	equ	0xFFB
 49505                           pclath	equ	0xFFA
 49506                           tblptru	equ	0xFF8
 49507                           tblptrh	equ	0xFF7
 49508                           tblptrl	equ	0xFF6
 49509                           tablat	equ	0xFF5
 49510                           prodh	equ	0xFF4
 49511                           prodl	equ	0xFF3
 49512                           intcon	equ	0xFF2
 49513                           indf0	equ	0xFEF
 49514                           postinc0	equ	0xFEE
 49515                           fsr0h	equ	0xFEA
 49516                           fsr0l	equ	0xFE9
 49517                           wreg	equ	0xFE8
 49518                           indf1	equ	0xFE7
 49519                           postinc1	equ	0xFE6
 49520                           postdec1	equ	0xFE5
 49521                           plusw1	equ	0xFE3
 49522                           fsr1h	equ	0xFE2
 49523                           fsr1l	equ	0xFE1
 49524                           indf2	equ	0xFDF
 49525                           postinc2	equ	0xFDE
 49526                           postdec2	equ	0xFDD
 49527                           plusw2	equ	0xFDB
 49528                           fsr2h	equ	0xFDA
 49529                           fsr2l	equ	0xFD9
 49530                           status	equ	0xFD8
 49531                           
 49532 ;; *************** function _USBCtrlEPServiceComplete *****************
 49533 ;; Defined at:
 49534 ;;		line 1618 in file "usb_device.c"
 49535 ;; Parameters:    Size  Location     Type
 49536 ;;		None
 49537 ;; Auto vars:     Size  Location     Type
 49538 ;;		None
 49539 ;; Return value:  Size  Location     Type
 49540 ;;                  1    wreg      void 
 49541 ;; Registers used:
 49542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49543 ;; Tracked objects:
 49544 ;;		On entry : 0/0
 49545 ;;		On exit  : 0/0
 49546 ;;		Unchanged: 0/0
 49547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49552 ;;Total ram usage:        0 bytes
 49553 ;; Hardware stack levels used:    1
 49554 ;; Hardware stack levels required when called:    2
 49555 ;; This function calls:
 49556 ;;		_USBCtrlEPAllowDataStage
 49557 ;;		_USBCtrlEPAllowStatusStage
 49558 ;; This function is called by:
 49559 ;;		_USBCtrlTrfSetupHandler
 49560 ;; This function uses a non-reentrant model
 49561 ;;
 49562                           
 49563                           	psect	text206
 49564  0115DA                     __ptext206:
 49565                           	opt stack 0
 49566  0115DA                     _USBCtrlEPServiceComplete:
 49567                           	opt stack 12
 49568                           
 49569                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 49570                           
 49571                           ;incstack = 0
 49572  0115DA  9865               	bcf	3941,4,c	;volatile
 49573                           
 49574                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 49575  0115DC  BE55               	btfsc	_inPipes+3,7,c	;volatile
 49576  0115DE  D03A               	goto	i2l231
 49577                           
 49578                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 49579  0115E0  0101               	movlb	1	; () banked
 49580  0115E2  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 49581  0115E4  D00C               	goto	i2l232
 49582                           
 49583                           ; BSR set to: 1
 49584                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 49585  0115E6  0E02               	movlw	2
 49586  0115E8  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49587                           
 49588                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 49589  0115EA  5165               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 49590  0115EC  B4D8               	btfsc	status,2,c
 49591                           
 49592                           ; BSR set to: 1
 49593                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 49594  0115EE  ECFA  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 49595                           
 49596                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 49597  0115F2  0E00               	movlw	0
 49598  0115F4  0101               	movlb	1	; () banked
 49599  0115F6  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49600                           
 49601                           ; BSR set to: 1
 49602                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 49603  0115F8  0E00               	movlw	0
 49604  0115FA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49605                           
 49606                           ;usb_device.c: 1654: }
 49607  0115FC  0012               	return	
 49608  0115FE                     i2l232:
 49609                           
 49610                           ; BSR set to: 1
 49611                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 49612                           
 49613                           ; BSR set to: 1
 49614  0115FE  EE20 F001          	lfsr	2,1
 49615  011602  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49616  011604  26D9               	addwf	fsr2l,f,c
 49617  011606  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49618  011608  22DA               	addwfc	fsr2h,f,c
 49619  01160A  0E08               	movlw	8
 49620  01160C  6EDF               	movwf	indf2,c
 49621                           
 49622                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49623  01160E  EE20 F002          	lfsr	2,2
 49624  011612  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49625  011614  26D9               	addwf	fsr2l,f,c
 49626  011616  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49627  011618  22DA               	addwfc	fsr2h,f,c
 49628  01161A  0E30               	movlw	48
 49629  01161C  6EDE               	movwf	postinc2,c
 49630  01161E  0E0D               	movlw	13
 49631  011620  6EDD               	movwf	postdec2,c
 49632                           
 49633                           ; BSR set to: 1
 49634                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49635  011622  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49636  011626  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49637  01162A  0E0C               	movlw	12
 49638  01162C  6EDF               	movwf	indf2,c
 49639                           
 49640                           ; BSR set to: 1
 49641                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49642  01162E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49643  011632  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49644  011636  0E00               	movlw	0
 49645  011638  8EDB               	bsf	plusw2,7,c
 49646                           
 49647                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 49648  01163A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49649  01163E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49650  011642  0E04               	movlw	4
 49651  011644  6EDF               	movwf	indf2,c
 49652                           
 49653                           ; BSR set to: 1
 49654                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49655  011646  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49656  01164A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49657  01164E  0E00               	movlw	0
 49658  011650  8EDB               	bsf	plusw2,7,c
 49659                           
 49660                           ; BSR set to: 1
 49661                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 49662  011652  0012               	return	
 49663  011654                     i2l231:
 49664                           
 49665                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 49666  011654  010D               	movlb	13	; () banked
 49667  011656  AF30               	btfss	48,7,b	;volatile
 49668  011658  D012               	goto	i2l236
 49669                           
 49670                           ; BSR set to: 13
 49671                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 49672  01165A  0E01               	movlw	1
 49673  01165C  0101               	movlb	1	; () banked
 49674  01165E  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49675                           
 49676                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 49677  011660  5166               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 49678  011662  B4D8               	btfsc	status,2,c
 49679                           
 49680                           ; BSR set to: 1
 49681                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 49682  011664  ECFA  F099         	call	_USBCtrlEPAllowDataStage	;wreg free
 49683                           
 49684                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 49685  011668  0E00               	movlw	0
 49686  01166A  0101               	movlb	1	; () banked
 49687  01166C  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49688                           
 49689                           ; BSR set to: 1
 49690                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 49691  01166E  0E00               	movlw	0
 49692  011670  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49693                           
 49694                           ; BSR set to: 1
 49695                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 49696  011672  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49697  011674  A4D8               	btfss	status,2,c
 49698  011676  0012               	return	
 49699                           
 49700                           ; BSR set to: 1
 49701                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 49702  011678  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49703                           
 49704                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 49705  01167C  0012               	return	
 49706  01167E                     i2l236:
 49707                           
 49708                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 49709  01167E  0E02               	movlw	2
 49710  011680  0101               	movlb	1	; () banked
 49711  011682  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49712                           
 49713                           ; BSR set to: 1
 49714                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 49715  011684  EE20 F001          	lfsr	2,1
 49716  011688  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49717  01168A  26D9               	addwf	fsr2l,f,c
 49718  01168C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49719  01168E  22DA               	addwfc	fsr2h,f,c
 49720  011690  0E08               	movlw	8
 49721  011692  6EDF               	movwf	indf2,c
 49722                           
 49723                           ; BSR set to: 1
 49724                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49725  011694  EE20 F002          	lfsr	2,2
 49726  011698  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49727  01169A  26D9               	addwf	fsr2l,f,c
 49728  01169C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49729  01169E  22DA               	addwfc	fsr2h,f,c
 49730  0116A0  0E30               	movlw	48
 49731  0116A2  6EDE               	movwf	postinc2,c
 49732  0116A4  0E0D               	movlw	13
 49733  0116A6  6EDD               	movwf	postdec2,c
 49734                           
 49735                           ; BSR set to: 1
 49736                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49737  0116A8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49738  0116AC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49739  0116B0  0E04               	movlw	4
 49740  0116B2  6EDF               	movwf	indf2,c
 49741                           
 49742                           ; BSR set to: 1
 49743                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49744  0116B4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49745  0116B8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49746  0116BC  0E00               	movlw	0
 49747  0116BE  8EDB               	bsf	plusw2,7,c
 49748                           
 49749                           ; BSR set to: 1
 49750                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 49751  0116C0  0E00               	movlw	0
 49752  0116C2  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49753                           
 49754                           ; BSR set to: 1
 49755                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 49756  0116C4  0E00               	movlw	0
 49757  0116C6  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49758                           
 49759                           ; BSR set to: 1
 49760                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 49761  0116C8  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49762  0116CA  A4D8               	btfss	status,2,c
 49763  0116CC  0012               	return	
 49764                           
 49765                           ; BSR set to: 1
 49766                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 49767  0116CE  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49768  0116D2  0012               	return	
 49769  0116D4                     __end_of_USBCtrlEPServiceComplete:
 49770                           	opt stack 0
 49771                           tosu	equ	0xFFF
 49772                           tosh	equ	0xFFE
 49773                           tosl	equ	0xFFD
 49774                           pclatu	equ	0xFFB
 49775                           pclath	equ	0xFFA
 49776                           tblptru	equ	0xFF8
 49777                           tblptrh	equ	0xFF7
 49778                           tblptrl	equ	0xFF6
 49779                           tablat	equ	0xFF5
 49780                           prodh	equ	0xFF4
 49781                           prodl	equ	0xFF3
 49782                           intcon	equ	0xFF2
 49783                           indf0	equ	0xFEF
 49784                           postinc0	equ	0xFEE
 49785                           fsr0h	equ	0xFEA
 49786                           fsr0l	equ	0xFE9
 49787                           wreg	equ	0xFE8
 49788                           indf1	equ	0xFE7
 49789                           postinc1	equ	0xFE6
 49790                           postdec1	equ	0xFE5
 49791                           plusw1	equ	0xFE3
 49792                           fsr1h	equ	0xFE2
 49793                           fsr1l	equ	0xFE1
 49794                           indf2	equ	0xFDF
 49795                           postinc2	equ	0xFDE
 49796                           postdec2	equ	0xFDD
 49797                           plusw2	equ	0xFDB
 49798                           fsr2h	equ	0xFDA
 49799                           fsr2l	equ	0xFD9
 49800                           status	equ	0xFD8
 49801                           
 49802 ;; *************** function _USBCtrlEPAllowDataStage *****************
 49803 ;; Defined at:
 49804 ;;		line 1490 in file "usb_device.c"
 49805 ;; Parameters:    Size  Location     Type
 49806 ;;		None
 49807 ;; Auto vars:     Size  Location     Type
 49808 ;;		None
 49809 ;; Return value:  Size  Location     Type
 49810 ;;                  1    wreg      void 
 49811 ;; Registers used:
 49812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49813 ;; Tracked objects:
 49814 ;;		On entry : 0/0
 49815 ;;		On exit  : 0/0
 49816 ;;		Unchanged: 0/0
 49817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49822 ;;Total ram usage:        0 bytes
 49823 ;; Hardware stack levels used:    1
 49824 ;; Hardware stack levels required when called:    1
 49825 ;; This function calls:
 49826 ;;		_USBCtrlTrfTxService
 49827 ;; This function is called by:
 49828 ;;		_USBCtrlEPServiceComplete
 49829 ;; This function uses a non-reentrant model
 49830 ;;
 49831                           
 49832                           	psect	text207
 49833  0133F4                     __ptext207:
 49834                           	opt stack 0
 49835  0133F4                     _USBCtrlEPAllowDataStage:
 49836                           	opt stack 12
 49837                           
 49838                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 49839                           
 49840                           ;incstack = 0
 49841  0133F4  0E00               	movlw	0
 49842  0133F6  0101               	movlb	1	; () banked
 49843  0133F8  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49844                           
 49845                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 49846  0133FA  0E00               	movlw	0
 49847  0133FC  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49848                           
 49849                           ; BSR set to: 1
 49850                           ;usb_device.c: 1495: if(controlTransferState == 2)
 49851  0133FE  0E02               	movlw	2
 49852  013400  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 49853  013402  A4D8               	btfss	status,2,c
 49854  013404  D01F               	goto	i2l220
 49855                           
 49856                           ; BSR set to: 1
 49857                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 49858  013406  EE20 F001          	lfsr	2,1
 49859  01340A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49860  01340C  26D9               	addwf	fsr2l,f,c
 49861  01340E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49862  013410  22DA               	addwfc	fsr2h,f,c
 49863  013412  0E08               	movlw	8
 49864  013414  6EDF               	movwf	indf2,c
 49865                           
 49866                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49867  013416  EE20 F002          	lfsr	2,2
 49868  01341A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49869  01341C  26D9               	addwf	fsr2l,f,c
 49870  01341E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49871  013420  22DA               	addwfc	fsr2h,f,c
 49872  013422  0E38               	movlw	56
 49873  013424  6EDE               	movwf	postinc2,c
 49874  013426  0E0D               	movlw	13
 49875  013428  6EDD               	movwf	postdec2,c
 49876                           
 49877                           ; BSR set to: 1
 49878                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 49879  01342A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49880  01342E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49881  013432  0E48               	movlw	72
 49882  013434  6EDF               	movwf	indf2,c
 49883                           
 49884                           ; BSR set to: 1
 49885                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49886  013436  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49887  01343A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49888  01343E  0E00               	movlw	0
 49889  013440  8EDB               	bsf	plusw2,7,c
 49890                           
 49891                           ;usb_device.c: 1502: }
 49892  013442  0012               	return	
 49893  013444                     i2l220:
 49894                           
 49895                           ; BSR set to: 1
 49896                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 49897                           
 49898                           ; BSR set to: 1
 49899  013444  5056               	movf	_inPipes+4,w,c	;volatile
 49900  013446  010D               	movlb	13	; () banked
 49901  013448  5D36               	subwf	54,w,b	;volatile
 49902  01344A  5057               	movf	_inPipes+5,w,c	;volatile
 49903  01344C  5937               	subwfb	55,w,b	;volatile
 49904  01344E  B0D8               	btfsc	status,0,c
 49905  013450  D004               	goto	i2l222
 49906                           
 49907                           ; BSR set to: 13
 49908                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 49909  013452  CD36 F056          	movff	3382,_inPipes+4	;volatile
 49910  013456  CD37 F057          	movff	3383,_inPipes+5	;volatile
 49911  01345A                     i2l222:
 49912                           
 49913                           ; BSR set to: 13
 49914                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 49915                           
 49916                           ; BSR set to: 13
 49917  01345A  EC83  F092         	call	_USBCtrlTrfTxService	;wreg free
 49918                           
 49919                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 49920  01345E  0101               	movlb	1	; () banked
 49921  013460  EE20 F002          	lfsr	2,2
 49922  013464  511B               	movf	_pBDTEntryIn& (0+255),w,b
 49923  013466  26D9               	addwf	fsr2l,f,c
 49924  013468  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49925  01346A  22DA               	addwfc	fsr2h,f,c
 49926  01346C  0E38               	movlw	56
 49927  01346E  6EDE               	movwf	postinc2,c
 49928  013470  0E0D               	movlw	13
 49929  013472  6EDD               	movwf	postdec2,c
 49930                           
 49931                           ; BSR set to: 1
 49932                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49933  013474  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49934  013478  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49935  01347C  0E48               	movlw	72
 49936  01347E  6EDF               	movwf	indf2,c
 49937                           
 49938                           ; BSR set to: 1
 49939                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49940  013480  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49941  013484  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49942  013488  0E00               	movlw	0
 49943  01348A  8EDB               	bsf	plusw2,7,c
 49944  01348C  0012               	return	
 49945  01348E                     __end_of_USBCtrlEPAllowDataStage:
 49946                           	opt stack 0
 49947                           tosu	equ	0xFFF
 49948                           tosh	equ	0xFFE
 49949                           tosl	equ	0xFFD
 49950                           pclatu	equ	0xFFB
 49951                           pclath	equ	0xFFA
 49952                           tblptru	equ	0xFF8
 49953                           tblptrh	equ	0xFF7
 49954                           tblptrl	equ	0xFF6
 49955                           tablat	equ	0xFF5
 49956                           prodh	equ	0xFF4
 49957                           prodl	equ	0xFF3
 49958                           intcon	equ	0xFF2
 49959                           indf0	equ	0xFEF
 49960                           postinc0	equ	0xFEE
 49961                           fsr0h	equ	0xFEA
 49962                           fsr0l	equ	0xFE9
 49963                           wreg	equ	0xFE8
 49964                           indf1	equ	0xFE7
 49965                           postinc1	equ	0xFE6
 49966                           postdec1	equ	0xFE5
 49967                           plusw1	equ	0xFE3
 49968                           fsr1h	equ	0xFE2
 49969                           fsr1l	equ	0xFE1
 49970                           indf2	equ	0xFDF
 49971                           postinc2	equ	0xFDE
 49972                           postdec2	equ	0xFDD
 49973                           plusw2	equ	0xFDB
 49974                           fsr2h	equ	0xFDA
 49975                           fsr2l	equ	0xFD9
 49976                           status	equ	0xFD8
 49977                           
 49978 ;; *************** function _USBCheckStdRequest *****************
 49979 ;; Defined at:
 49980 ;;		line 2688 in file "usb_device.c"
 49981 ;; Parameters:    Size  Location     Type
 49982 ;;		None
 49983 ;; Auto vars:     Size  Location     Type
 49984 ;;		None
 49985 ;; Return value:  Size  Location     Type
 49986 ;;                  1    wreg      void 
 49987 ;; Registers used:
 49988 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49989 ;; Tracked objects:
 49990 ;;		On entry : 0/0
 49991 ;;		On exit  : 0/0
 49992 ;;		Unchanged: 0/0
 49993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49998 ;;Total ram usage:        0 bytes
 49999 ;; Hardware stack levels used:    1
 50000 ;; Hardware stack levels required when called:    5
 50001 ;; This function calls:
 50002 ;;		_USBStdFeatureReqHandler
 50003 ;;		_USBStdGetDscHandler
 50004 ;;		_USBStdGetStatusHandler
 50005 ;;		_USBStdSetCfgHandler
 50006 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50007 ;; This function is called by:
 50008 ;;		_USBCtrlTrfSetupHandler
 50009 ;; This function uses a non-reentrant model
 50010 ;;
 50011                           
 50012                           	psect	text208
 50013  012358                     __ptext208:
 50014                           	opt stack 0
 50015  012358                     _USBCheckStdRequest:
 50016                           	opt stack 9
 50017                           
 50018                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 50019                           
 50020                           ; BSR set to: 1
 50021                           ;incstack = 0
 50022  012358  010D               	movlb	13	; () banked
 50023  01235A  3930               	swapf	48,w,b	;volatile
 50024  01235C  32E8               	rrcf	wreg,f,c
 50025  01235E  0B03               	andlw	3
 50026  012360  0900               	iorlw	0
 50027  012362  A4D8               	btfss	status,2,c
 50028  012364  0012               	return	
 50029  012366  D042               	goto	i2l355
 50030  012368                     i2l356:
 50031                           
 50032                           ; BSR set to: 13
 50033                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 50034  012368  8E55               	bsf	_inPipes+3,7,c	;volatile
 50035                           
 50036                           ; BSR set to: 13
 50037                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 50038  01236A  0E08               	movlw	8
 50039  01236C  6E5E               	movwf	_USBDeviceState,c	;volatile
 50040                           
 50041                           ;usb_device.c: 2698: break;
 50042  01236E  0012               	return	
 50043  012370                     
 50044                           ; BSR set to: 13
 50045                           ;usb_device.c: 2700: USBStdGetDscHandler();
 50046                           
 50047                           ; BSR set to: 13
 50048  012370  EC8D  F083         	call	_USBStdGetDscHandler	;wreg free
 50049                           
 50050                           ;usb_device.c: 2701: break;
 50051  012374  0012               	return	
 50052  012376                     
 50053                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 50054  012376  ECD1  F090         	call	_USBStdSetCfgHandler	;wreg free
 50055                           
 50056                           ;usb_device.c: 2704: break;
 50057  01237A  0012               	return	
 50058  01237C                     
 50059                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 50060  01237C  0EC2               	movlw	low _USBActiveConfiguration
 50061  01237E  6E52               	movwf	_inPipes,c	;volatile
 50062  012380  0E01               	movlw	high _USBActiveConfiguration
 50063  012382  6E53               	movwf	_inPipes+1,c	;volatile
 50064                           
 50065                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50066  012384  8055               	bsf	_inPipes+3,0,c	;volatile
 50067                           
 50068                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 50069  012386  0E01               	movlw	1
 50070  012388  6E56               	movwf	_inPipes+4,c	;volatile
 50071                           
 50072                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 50073  01238A  8E55               	bsf	_inPipes+3,7,c	;volatile
 50074                           
 50075                           ;usb_device.c: 2710: break;
 50076  01238C  0012               	return	
 50077  01238E                     
 50078                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 50079  01238E  EC5D  F099         	call	_USBStdGetStatusHandler	;wreg free
 50080                           
 50081                           ;usb_device.c: 2713: break;
 50082  012392  0012               	return	
 50083  012394                     
 50084                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 50085  012394  EC33  F06F         	call	_USBStdFeatureReqHandler	;wreg free
 50086                           
 50087                           ;usb_device.c: 2717: break;
 50088  012398  0012               	return	
 50089  01239A                     
 50090                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 50091  01239A  010D               	movlb	13	; () banked
 50092  01239C  5134               	movf	52,w,b	;volatile
 50093  01239E  0D01               	mullw	1
 50094  0123A0  0EBD               	movlw	low _USBAlternateInterface
 50095  0123A2  24F3               	addwf	prodl,w,c
 50096  0123A4  6E52               	movwf	_inPipes,c	;volatile
 50097  0123A6  0E01               	movlw	high _USBAlternateInterface
 50098  0123A8  20F4               	addwfc	prodh,w,c
 50099  0123AA  6E53               	movwf	_inPipes+1,c	;volatile
 50100                           
 50101                           ; BSR set to: 13
 50102                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50103  0123AC  8055               	bsf	_inPipes+3,0,c	;volatile
 50104                           
 50105                           ; BSR set to: 13
 50106                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 50107  0123AE  0E01               	movlw	1
 50108  0123B0  6E56               	movwf	_inPipes+4,c	;volatile
 50109                           
 50110                           ; BSR set to: 13
 50111                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 50112  0123B2  8E55               	bsf	_inPipes+3,7,c	;volatile
 50113                           
 50114                           ;usb_device.c: 2723: break;
 50115  0123B4  0012               	return	
 50116  0123B6                     i2l365:
 50117                           
 50118                           ; BSR set to: 13
 50119                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 50120  0123B6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50121                           
 50122                           ; BSR set to: 13
 50123                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 50124  0123B8  5134               	movf	52,w,b	;volatile
 50125  0123BA  0D01               	mullw	1
 50126  0123BC  0EBD               	movlw	low _USBAlternateInterface
 50127  0123BE  24F3               	addwf	prodl,w,c
 50128  0123C0  6ED9               	movwf	fsr2l,c
 50129  0123C2  0E01               	movlw	high _USBAlternateInterface
 50130  0123C4  20F4               	addwfc	prodh,w,c
 50131  0123C6  6EDA               	movwf	fsr2h,c
 50132  0123C8  CD32 FFDF          	movff	3378,indf2	;volatile
 50133                           
 50134                           ;usb_device.c: 2727: break;
 50135  0123CC  0012               	return	
 50136  0123CE                     
 50137                           ; BSR set to: 13
 50138                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 50139                           
 50140                           ; BSR set to: 13
 50141  0123CE  0E00               	movlw	0
 50142  0123D0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50143  0123D2  0E02               	movlw	2
 50144  0123D4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50145  0123D6  0E00               	movlw	0
 50146  0123D8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50147  0123DA  0E00               	movlw	0
 50148  0123DC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50149  0123DE  0E00               	movlw	0
 50150  0123E0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50151  0123E2  0E00               	movlw	0
 50152  0123E4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50153  0123E6  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50154                           
 50155                           ;usb_device.c: 2734: }
 50156                           
 50157                           ;usb_device.c: 2733: break;
 50158                           
 50159                           ;usb_device.c: 2732: default:
 50160                           
 50161                           ;usb_device.c: 2731: case 12:
 50162                           
 50163                           ;usb_device.c: 2730: break;
 50164  0123EA  0012               	return	
 50165  0123EC                     i2l355:
 50166  0123EC  010D               	movlb	13	; () banked
 50167  0123EE  5131               	movf	49,w,b	;volatile
 50168                           
 50169                           ; Switch size 1, requested type "space"
 50170                           ; Number of cases is 11, Range of values is 0 to 12
 50171                           ; switch strategies available:
 50172                           ; Name         Instructions Cycles
 50173                           ; simple_byte           34    18 (average)
 50174                           ;	Chosen strategy is simple_byte
 50175  0123F0  0A00               	xorlw	0	; case 0
 50176  0123F2  B4D8               	btfsc	status,2,c
 50177  0123F4  D7CC               	goto	i2l361
 50178  0123F6  0A01               	xorlw	1	; case 1
 50179  0123F8  B4D8               	btfsc	status,2,c
 50180  0123FA  D7CC               	goto	i2l362
 50181  0123FC  0A02               	xorlw	2	; case 3
 50182  0123FE  B4D8               	btfsc	status,2,c
 50183  012400  D7C9               	goto	i2l362
 50184  012402  0A06               	xorlw	6	; case 5
 50185  012404  B4D8               	btfsc	status,2,c
 50186  012406  D7B0               	goto	i2l356
 50187  012408  0A03               	xorlw	3	; case 6
 50188  01240A  B4D8               	btfsc	status,2,c
 50189  01240C  D7B1               	goto	i2l358
 50190  01240E  0A01               	xorlw	1	; case 7
 50191  012410  B4D8               	btfsc	status,2,c
 50192  012412  D7DD               	goto	i2l366
 50193  012414  0A0F               	xorlw	15	; case 8
 50194  012416  B4D8               	btfsc	status,2,c
 50195  012418  D7B1               	goto	i2l360
 50196  01241A  0A01               	xorlw	1	; case 9
 50197  01241C  B4D8               	btfsc	status,2,c
 50198  01241E  D7AB               	goto	i2l359
 50199  012420  0A03               	xorlw	3	; case 10
 50200  012422  B4D8               	btfsc	status,2,c
 50201  012424  D7BA               	goto	i2l364
 50202  012426  0A01               	xorlw	1	; case 11
 50203  012428  B4D8               	btfsc	status,2,c
 50204  01242A  D7C5               	goto	i2l365
 50205  01242C  0A07               	xorlw	7	; case 12
 50206  01242E  0012               	return	
 50207  012430                     __end_of_USBCheckStdRequest:
 50208                           	opt stack 0
 50209                           tosu	equ	0xFFF
 50210                           tosh	equ	0xFFE
 50211                           tosl	equ	0xFFD
 50212                           pclatu	equ	0xFFB
 50213                           pclath	equ	0xFFA
 50214                           tblptru	equ	0xFF8
 50215                           tblptrh	equ	0xFF7
 50216                           tblptrl	equ	0xFF6
 50217                           tablat	equ	0xFF5
 50218                           prodh	equ	0xFF4
 50219                           prodl	equ	0xFF3
 50220                           intcon	equ	0xFF2
 50221                           indf0	equ	0xFEF
 50222                           postinc0	equ	0xFEE
 50223                           fsr0h	equ	0xFEA
 50224                           fsr0l	equ	0xFE9
 50225                           wreg	equ	0xFE8
 50226                           indf1	equ	0xFE7
 50227                           postinc1	equ	0xFE6
 50228                           postdec1	equ	0xFE5
 50229                           plusw1	equ	0xFE3
 50230                           fsr1h	equ	0xFE2
 50231                           fsr1l	equ	0xFE1
 50232                           indf2	equ	0xFDF
 50233                           postinc2	equ	0xFDE
 50234                           postdec2	equ	0xFDD
 50235                           plusw2	equ	0xFDB
 50236                           fsr2h	equ	0xFDA
 50237                           fsr2l	equ	0xFD9
 50238                           status	equ	0xFD8
 50239                           
 50240 ;; *************** function _USBStdSetCfgHandler *****************
 50241 ;; Defined at:
 50242 ;;		line 1970 in file "usb_device.c"
 50243 ;; Parameters:    Size  Location     Type
 50244 ;;		None
 50245 ;; Auto vars:     Size  Location     Type
 50246 ;;  i               1   23[COMRAM] unsigned char 
 50247 ;; Return value:  Size  Location     Type
 50248 ;;                  1    wreg      void 
 50249 ;; Registers used:
 50250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50251 ;; Tracked objects:
 50252 ;;		On entry : 0/0
 50253 ;;		On exit  : 0/0
 50254 ;;		Unchanged: 0/0
 50255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50260 ;;Total ram usage:        1 bytes
 50261 ;; Hardware stack levels used:    1
 50262 ;; Hardware stack levels required when called:    4
 50263 ;; This function calls:
 50264 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50265 ;;		i2_memset
 50266 ;; This function is called by:
 50267 ;;		_USBCheckStdRequest
 50268 ;; This function uses a non-reentrant model
 50269 ;;
 50270                           
 50271                           	psect	text209
 50272  0121A2                     __ptext209:
 50273                           	opt stack 0
 50274  0121A2                     _USBStdSetCfgHandler:
 50275                           	opt stack 9
 50276                           
 50277                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 50278                           
 50279                           ;incstack = 0
 50280  0121A2  8E55               	bsf	_inPipes+3,7,c	;volatile
 50281                           
 50282                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 50283  0121A4  0E27               	movlw	39
 50284  0121A6  6E01               	movwf	i2memset@p1,c
 50285  0121A8  0E0F               	movlw	15
 50286  0121AA  6E02               	movwf	i2memset@p1+1,c
 50287  0121AC  0E00               	movlw	0
 50288  0121AE  6E04               	movwf	i2memset@c+1,c
 50289  0121B0  0E00               	movlw	0
 50290  0121B2  6E03               	movwf	i2memset@c,c
 50291  0121B4  0E00               	movlw	0
 50292  0121B6  6E06               	movwf	i2memset@n+1,c
 50293  0121B8  0E02               	movlw	2
 50294  0121BA  6E05               	movwf	i2memset@n,c
 50295  0121BC  EC5A  F0AA         	call	i2_memset	;wreg free
 50296                           
 50297                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 50298  0121C0  0E00               	movlw	0
 50299  0121C2  6E01               	movwf	i2memset@p1,c
 50300  0121C4  0E0D               	movlw	13
 50301  0121C6  6E02               	movwf	i2memset@p1+1,c
 50302  0121C8  0E00               	movlw	0
 50303  0121CA  6E04               	movwf	i2memset@c+1,c
 50304  0121CC  0E00               	movlw	0
 50305  0121CE  6E03               	movwf	i2memset@c,c
 50306  0121D0  0E00               	movlw	0
 50307  0121D2  6E06               	movwf	i2memset@n+1,c
 50308  0121D4  0E30               	movlw	48
 50309  0121D6  6E05               	movwf	i2memset@n,c
 50310  0121D8  EC5A  F0AA         	call	i2_memset	;wreg free
 50311                           
 50312                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 50313  0121DC  8C65               	bsf	3941,6,c	;volatile
 50314                           
 50315                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 50316  0121DE  0E00               	movlw	0
 50317  0121E0  6E18               	movwf	USBStdSetCfgHandler@i,c
 50318  0121E2                     i2l13360:
 50319  0121E2  0E02               	movlw	2
 50320  0121E4  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 50321  0121E6  D001               	goto	i2l272
 50322  0121E8  D016               	goto	i2u1197_40
 50323  0121EA                     i2l272:
 50324                           
 50325                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 50326  0121EA  5018               	movf	USBStdSetCfgHandler@i,w,c
 50327  0121EC  0D01               	mullw	1
 50328  0121EE  0E3C               	movlw	low _ep_data_in
 50329  0121F0  24F3               	addwf	prodl,w,c
 50330  0121F2  6ED9               	movwf	fsr2l,c
 50331  0121F4  0E01               	movlw	high _ep_data_in
 50332  0121F6  20F4               	addwfc	prodh,w,c
 50333  0121F8  6EDA               	movwf	fsr2h,c
 50334  0121FA  0E00               	movlw	0
 50335  0121FC  6EDF               	movwf	indf2,c
 50336                           
 50337                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 50338  0121FE  5018               	movf	USBStdSetCfgHandler@i,w,c
 50339  012200  0D01               	mullw	1
 50340  012202  0E39               	movlw	low _ep_data_out
 50341  012204  24F3               	addwf	prodl,w,c
 50342  012206  6ED9               	movwf	fsr2l,c
 50343  012208  0E01               	movlw	high _ep_data_out
 50344  01220A  20F4               	addwfc	prodh,w,c
 50345  01220C  6EDA               	movwf	fsr2h,c
 50346  01220E  0E00               	movlw	0
 50347  012210  6EDF               	movwf	indf2,c
 50348  012212  2A18               	incf	USBStdSetCfgHandler@i,f,c
 50349  012214  D7E6               	goto	i2l13360
 50350  012216                     i2u1197_40:
 50351                           
 50352                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 50353  012216  0EBD               	movlw	low _USBAlternateInterface
 50354  012218  6E01               	movwf	i2memset@p1,c
 50355  01221A  0E01               	movlw	high _USBAlternateInterface
 50356  01221C  6E02               	movwf	i2memset@p1+1,c
 50357  01221E  0E00               	movlw	0
 50358  012220  6E04               	movwf	i2memset@c+1,c
 50359  012222  0E00               	movlw	0
 50360  012224  6E03               	movwf	i2memset@c,c
 50361  012226  0E00               	movlw	0
 50362  012228  6E06               	movwf	i2memset@n+1,c
 50363  01222A  0E02               	movlw	2
 50364  01222C  6E05               	movwf	i2memset@n,c
 50365  01222E  EC5A  F0AA         	call	i2_memset	;wreg free
 50366                           
 50367                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 50368  012232  9C65               	bcf	3941,6,c	;volatile
 50369                           
 50370                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 50371  012234  0E08               	movlw	8
 50372  012236  0101               	movlb	1	; () banked
 50373  012238  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 50374  01223A  0E0D               	movlw	13
 50375  01223C  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50376                           
 50377                           ; BSR set to: 1
 50378                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 50379  01223E  0E00               	movlw	0
 50380  012240  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 50381  012242  0E0D               	movlw	13
 50382  012244  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 50383                           
 50384                           ; BSR set to: 1
 50385                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50386  012246  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50387  01224A  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50388                           
 50389                           ; BSR set to: 1
 50390                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 50391  01224E  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 50392                           
 50393                           ; BSR set to: 1
 50394                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 50395  012252  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 50396  012254  A4D8               	btfss	status,2,c
 50397  012256  D003               	goto	i2l274
 50398                           
 50399                           ; BSR set to: 1
 50400                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 50401  012258  0E10               	movlw	16
 50402  01225A  6E5E               	movwf	_USBDeviceState,c	;volatile
 50403                           
 50404                           ;usb_device.c: 2015: }
 50405  01225C  0012               	return	
 50406  01225E                     i2l274:
 50407                           
 50408                           ; BSR set to: 1
 50409                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 50410                           
 50411                           ; BSR set to: 1
 50412  01225E  0E00               	movlw	0
 50413  012260  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50414  012262  0E01               	movlw	1
 50415  012264  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50416  012266  0EC2               	movlw	low _USBActiveConfiguration
 50417  012268  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50418  01226A  0E01               	movlw	high _USBActiveConfiguration
 50419  01226C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50420  01226E  0E00               	movlw	0
 50421  012270  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50422  012272  0E01               	movlw	1
 50423  012274  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50424  012276  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50425                           
 50426                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 50427  01227A  0E20               	movlw	32
 50428  01227C  6E5E               	movwf	_USBDeviceState,c	;volatile
 50429  01227E  0012               	return	
 50430  012280                     __end_of_USBStdSetCfgHandler:
 50431                           	opt stack 0
 50432                           tosu	equ	0xFFF
 50433                           tosh	equ	0xFFE
 50434                           tosl	equ	0xFFD
 50435                           pclatu	equ	0xFFB
 50436                           pclath	equ	0xFFA
 50437                           tblptru	equ	0xFF8
 50438                           tblptrh	equ	0xFF7
 50439                           tblptrl	equ	0xFF6
 50440                           tablat	equ	0xFF5
 50441                           prodh	equ	0xFF4
 50442                           prodl	equ	0xFF3
 50443                           intcon	equ	0xFF2
 50444                           indf0	equ	0xFEF
 50445                           postinc0	equ	0xFEE
 50446                           fsr0h	equ	0xFEA
 50447                           fsr0l	equ	0xFE9
 50448                           wreg	equ	0xFE8
 50449                           indf1	equ	0xFE7
 50450                           postinc1	equ	0xFE6
 50451                           postdec1	equ	0xFE5
 50452                           plusw1	equ	0xFE3
 50453                           fsr1h	equ	0xFE2
 50454                           fsr1l	equ	0xFE1
 50455                           indf2	equ	0xFDF
 50456                           postinc2	equ	0xFDE
 50457                           postdec2	equ	0xFDD
 50458                           plusw2	equ	0xFDB
 50459                           fsr2h	equ	0xFDA
 50460                           fsr2l	equ	0xFD9
 50461                           status	equ	0xFD8
 50462                           
 50463 ;; *************** function i2_memset *****************
 50464 ;; Defined at:
 50465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 50466 ;; Parameters:    Size  Location     Type
 50467 ;;  p1              2    0[COMRAM] PTR void 
 50468 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50469 ;;  c               2    2[COMRAM] int 
 50470 ;;  n               2    4[COMRAM] unsigned int 
 50471 ;; Auto vars:     Size  Location     Type
 50472 ;;  memset          2    6[COMRAM] PTR unsigned char 
 50473 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50474 ;; Return value:  Size  Location     Type
 50475 ;;                  2    0[COMRAM] PTR void 
 50476 ;; Registers used:
 50477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50478 ;; Tracked objects:
 50479 ;;		On entry : 0/0
 50480 ;;		On exit  : 0/0
 50481 ;;		Unchanged: 0/0
 50482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50483 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50486 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50487 ;;Total ram usage:        8 bytes
 50488 ;; Hardware stack levels used:    1
 50489 ;; This function calls:
 50490 ;;		Nothing
 50491 ;; This function is called by:
 50492 ;;		_USBStdSetCfgHandler
 50493 ;;		i2_USBDeviceInit
 50494 ;; This function uses a non-reentrant model
 50495 ;;
 50496                           
 50497                           	psect	text210
 50498  0154B4                     __ptext210:
 50499                           	opt stack 0
 50500  0154B4                     i2_memset:
 50501                           	opt stack 15
 50502                           
 50503                           ;incstack = 0
 50504  0154B4  C001  F007         	movff	i2memset@p1,i2memset@p
 50505  0154B8  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 50506  0154BC  D008               	goto	i2l3702
 50507  0154BE                     i2l13290:
 50508  0154BE  C007  FFD9         	movff	i2memset@p,fsr2l
 50509  0154C2  C008  FFDA         	movff	i2memset@p+1,fsr2h
 50510  0154C6  C003  FFDF         	movff	i2memset@c,indf2
 50511  0154CA  4A07               	infsnz	i2memset@p,f,c
 50512  0154CC  2A08               	incf	i2memset@p+1,f,c
 50513  0154CE                     i2l3702:
 50514  0154CE  0605               	decf	i2memset@n,f,c
 50515  0154D0  A0D8               	btfss	status,0,c
 50516  0154D2  0606               	decf	i2memset@n+1,f,c
 50517  0154D4  2805               	incf	i2memset@n,w,c
 50518  0154D6  E1F3               	bnz	i2l13290
 50519  0154D8  2806               	incf	i2memset@n+1,w,c
 50520  0154DA  B4D8               	btfsc	status,2,c
 50521  0154DC  0012               	return	
 50522  0154DE  D7EF               	goto	i2l3703
 50523  0154E0                     __end_ofi2_memset:
 50524                           	opt stack 0
 50525                           tosu	equ	0xFFF
 50526                           tosh	equ	0xFFE
 50527                           tosl	equ	0xFFD
 50528                           pclatu	equ	0xFFB
 50529                           pclath	equ	0xFFA
 50530                           tblptru	equ	0xFF8
 50531                           tblptrh	equ	0xFF7
 50532                           tblptrl	equ	0xFF6
 50533                           tablat	equ	0xFF5
 50534                           prodh	equ	0xFF4
 50535                           prodl	equ	0xFF3
 50536                           intcon	equ	0xFF2
 50537                           indf0	equ	0xFEF
 50538                           postinc0	equ	0xFEE
 50539                           fsr0h	equ	0xFEA
 50540                           fsr0l	equ	0xFE9
 50541                           wreg	equ	0xFE8
 50542                           indf1	equ	0xFE7
 50543                           postinc1	equ	0xFE6
 50544                           postdec1	equ	0xFE5
 50545                           plusw1	equ	0xFE3
 50546                           fsr1h	equ	0xFE2
 50547                           fsr1l	equ	0xFE1
 50548                           indf2	equ	0xFDF
 50549                           postinc2	equ	0xFDE
 50550                           postdec2	equ	0xFDD
 50551                           plusw2	equ	0xFDB
 50552                           fsr2h	equ	0xFDA
 50553                           fsr2l	equ	0xFD9
 50554                           status	equ	0xFD8
 50555                           
 50556 ;; *************** function _USBStdGetStatusHandler *****************
 50557 ;; Defined at:
 50558 ;;		line 2131 in file "usb_device.c"
 50559 ;; Parameters:    Size  Location     Type
 50560 ;;		None
 50561 ;; Auto vars:     Size  Location     Type
 50562 ;;  p               2    1[COMRAM] PTR struct __BDT
 50563 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50564 ;; Return value:  Size  Location     Type
 50565 ;;                  1    wreg      void 
 50566 ;; Registers used:
 50567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50568 ;; Tracked objects:
 50569 ;;		On entry : 0/0
 50570 ;;		On exit  : 0/0
 50571 ;;		Unchanged: 0/0
 50572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50577 ;;Total ram usage:        3 bytes
 50578 ;; Hardware stack levels used:    1
 50579 ;; This function calls:
 50580 ;;		Nothing
 50581 ;; This function is called by:
 50582 ;;		_USBCheckStdRequest
 50583 ;; This function uses a non-reentrant model
 50584 ;;
 50585                           
 50586                           	psect	text211
 50587  0132BA                     __ptext211:
 50588                           	opt stack 0
 50589  0132BA                     _USBStdGetStatusHandler:
 50590                           	opt stack 13
 50591                           
 50592                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 50593                           
 50594                           ;incstack = 0
 50595  0132BA  0E00               	movlw	0
 50596  0132BC  010D               	movlb	13	; () banked
 50597  0132BE  6F38               	movwf	56,b	;volatile
 50598                           
 50599                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 50600  0132C0  0E00               	movlw	0
 50601  0132C2  6F39               	movwf	57,b	;volatile
 50602                           
 50603                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 50604  0132C4  D035               	goto	i2l293
 50605  0132C6                     i2l294:
 50606                           
 50607                           ; BSR set to: 13
 50608                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 50609  0132C6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50610                           
 50611                           ; BSR set to: 13
 50612                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 50613                           
 50614                           ; BSR set to: 13
 50615                           
 50616                           ; BSR set to: 13
 50617                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 50618                           
 50619                           ;usb_device.c: 2144: if(0 == 1)
 50620  0132C8  0101               	movlb	1	; () banked
 50621  0132CA  056E               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 50622  0132CC  A4D8               	btfss	status,2,c
 50623  0132CE  D03B               	goto	i2l297
 50624                           
 50625                           ; BSR set to: 1
 50626                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 50627  0132D0  010D               	movlb	13	; () banked
 50628  0132D2  8338               	bsf	56,1,b	;volatile
 50629                           
 50630                           ; BSR set to: 13
 50631                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 50632  0132D4  D038               	goto	i2l297
 50633  0132D6                     i2l298:
 50634                           
 50635                           ; BSR set to: 13
 50636                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 50637  0132D6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50638                           
 50639                           ;usb_device.c: 2156: break;
 50640  0132D8  D036               	goto	i2l297
 50641  0132DA                     i2l299:
 50642                           
 50643                           ; BSR set to: 13
 50644                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 50645  0132DA  8E55               	bsf	_inPipes+3,7,c	;volatile
 50646                           
 50647                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 50648  0132DC  BF34               	btfsc	52,7,b	;volatile
 50649  0132DE  D00A               	goto	i2l300
 50650                           
 50651                           ; BSR set to: 13
 50652                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50653  0132E0  5134               	movf	52,w,b	;volatile
 50654  0132E2  0B0F               	andlw	15
 50655  0132E4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50656  0132E6  5001               	movf	??_USBStdGetStatusHandler,w,c
 50657  0132E8  0D02               	mullw	2
 50658  0132EA  0E21               	movlw	low _pBDTEntryOut
 50659  0132EC  24F3               	addwf	prodl,w,c
 50660  0132EE  6ED9               	movwf	fsr2l,c
 50661  0132F0  0E01               	movlw	high _pBDTEntryOut
 50662  0132F2  D009               	goto	L77
 50663  0132F4                     i2l300:
 50664                           
 50665                           ; BSR set to: 13
 50666                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50667                           
 50668                           ; BSR set to: 13
 50669  0132F4  5134               	movf	52,w,b	;volatile
 50670  0132F6  0B0F               	andlw	15
 50671  0132F8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50672  0132FA  5001               	movf	??_USBStdGetStatusHandler,w,c
 50673  0132FC  0D02               	mullw	2
 50674  0132FE  0E1B               	movlw	low _pBDTEntryIn
 50675  013300  24F3               	addwf	prodl,w,c
 50676  013302  6ED9               	movwf	fsr2l,c
 50677  013304  0E01               	movlw	high _pBDTEntryIn
 50678  013306                     L77:
 50679  013306  20F4               	addwfc	prodh,w,c
 50680  013308  6EDA               	movwf	fsr2h,c
 50681  01330A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 50682  01330E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 50683                           
 50684                           ; BSR set to: 13
 50685                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 50686                           
 50687                           ; BSR set to: 13
 50688  013312  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50689  013316  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50690  01331A  AEDF               	btfss	indf2,7,c
 50691  01331C  D014               	goto	i2l297
 50692                           
 50693                           ; BSR set to: 13
 50694  01331E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50695  013322  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50696  013326  A4DF               	btfss	indf2,2,c
 50697  013328  D00E               	goto	i2l297
 50698                           
 50699                           ; BSR set to: 13
 50700                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 50701  01332A  0E01               	movlw	1
 50702  01332C  6F38               	movwf	56,b	;volatile
 50703                           
 50704                           ; BSR set to: 13
 50705                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 50706                           
 50707                           ; BSR set to: 13
 50708                           ;usb_device.c: 2176: break;
 50709  01332E  D00B               	goto	i2l297
 50710  013330                     i2l293:
 50711                           
 50712                           ; BSR set to: 13
 50713                           
 50714                           ; BSR set to: 13
 50715  013330  5130               	movf	48,w,b	;volatile
 50716  013332  0B1F               	andlw	31
 50717                           
 50718                           ; Switch size 1, requested type "space"
 50719                           ; Number of cases is 3, Range of values is 0 to 2
 50720                           ; switch strategies available:
 50721                           ; Name         Instructions Cycles
 50722                           ; simple_byte           10     6 (average)
 50723                           ;	Chosen strategy is simple_byte
 50724  013334  0A00               	xorlw	0	; case 0
 50725  013336  B4D8               	btfsc	status,2,c
 50726  013338  D7C6               	goto	i2l294
 50727  01333A  0A01               	xorlw	1	; case 1
 50728  01333C  B4D8               	btfsc	status,2,c
 50729  01333E  D7CB               	goto	i2l298
 50730  013340  0A03               	xorlw	3	; case 2
 50731  013342  B4D8               	btfsc	status,2,c
 50732  013344  D7CA               	goto	i2l299
 50733  013346                     i2l297:
 50734                           
 50735                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 50736  013346  AE55               	btfss	_inPipes+3,7,c	;volatile
 50737  013348  0012               	return	
 50738                           
 50739                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 50740  01334A  0E38               	movlw	56
 50741  01334C  6E52               	movwf	_inPipes,c	;volatile
 50742  01334E  0E0D               	movlw	13
 50743  013350  6E53               	movwf	_inPipes+1,c	;volatile
 50744                           
 50745                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50746  013352  8055               	bsf	_inPipes+3,0,c	;volatile
 50747                           
 50748                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 50749  013354  0E02               	movlw	2
 50750  013356  6E56               	movwf	_inPipes+4,c	;volatile
 50751  013358  0012               	return	
 50752  01335A                     __end_of_USBStdGetStatusHandler:
 50753                           	opt stack 0
 50754                           tosu	equ	0xFFF
 50755                           tosh	equ	0xFFE
 50756                           tosl	equ	0xFFD
 50757                           pclatu	equ	0xFFB
 50758                           pclath	equ	0xFFA
 50759                           tblptru	equ	0xFF8
 50760                           tblptrh	equ	0xFF7
 50761                           tblptrl	equ	0xFF6
 50762                           tablat	equ	0xFF5
 50763                           prodh	equ	0xFF4
 50764                           prodl	equ	0xFF3
 50765                           intcon	equ	0xFF2
 50766                           indf0	equ	0xFEF
 50767                           postinc0	equ	0xFEE
 50768                           fsr0h	equ	0xFEA
 50769                           fsr0l	equ	0xFE9
 50770                           wreg	equ	0xFE8
 50771                           indf1	equ	0xFE7
 50772                           postinc1	equ	0xFE6
 50773                           postdec1	equ	0xFE5
 50774                           plusw1	equ	0xFE3
 50775                           fsr1h	equ	0xFE2
 50776                           fsr1l	equ	0xFE1
 50777                           indf2	equ	0xFDF
 50778                           postinc2	equ	0xFDE
 50779                           postdec2	equ	0xFDD
 50780                           plusw2	equ	0xFDB
 50781                           fsr2h	equ	0xFDA
 50782                           fsr2l	equ	0xFD9
 50783                           status	equ	0xFD8
 50784                           
 50785 ;; *************** function _USBStdGetDscHandler *****************
 50786 ;; Defined at:
 50787 ;;		line 2045 in file "usb_device.c"
 50788 ;; Parameters:    Size  Location     Type
 50789 ;;		None
 50790 ;; Auto vars:     Size  Location     Type
 50791 ;;		None
 50792 ;; Return value:  Size  Location     Type
 50793 ;;                  1    wreg      void 
 50794 ;; Registers used:
 50795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 50796 ;; Tracked objects:
 50797 ;;		On entry : 0/0
 50798 ;;		On exit  : 0/0
 50799 ;;		Unchanged: 0/0
 50800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50805 ;;Total ram usage:        2 bytes
 50806 ;; Hardware stack levels used:    1
 50807 ;; This function calls:
 50808 ;;		Nothing
 50809 ;; This function is called by:
 50810 ;;		_USBCheckStdRequest
 50811 ;; This function uses a non-reentrant model
 50812 ;;
 50813                           
 50814                           	psect	text212
 50815  01071A                     __ptext212:
 50816                           	opt stack 0
 50817  01071A                     _USBStdGetDscHandler:
 50818                           	opt stack 13
 50819                           
 50820                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 50821                           
 50822                           ;incstack = 0
 50823  01071A  0E80               	movlw	128
 50824  01071C  010D               	movlb	13	; () banked
 50825  01071E  1930               	xorwf	48,w,b	;volatile
 50826  010720  A4D8               	btfss	status,2,c
 50827  010722  0012               	return	
 50828                           
 50829                           ; BSR set to: 13
 50830                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 50831  010724  0EC0               	movlw	192
 50832  010726  6E55               	movwf	_inPipes+3,c	;volatile
 50833                           
 50834                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 50835  010728  D082               	goto	i2l280
 50836  01072A                     
 50837                           ; BSR set to: 13
 50838                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 50839                           
 50840                           ; BSR set to: 13
 50841  01072A  0E5B               	movlw	low _device_dsc
 50842  01072C  6E52               	movwf	_inPipes,c	;volatile
 50843  01072E  0EA2               	movlw	high _device_dsc
 50844  010730  6E53               	movwf	_inPipes+1,c	;volatile
 50845                           
 50846                           ; BSR set to: 13
 50847                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 50848  010732  0E00               	movlw	0
 50849  010734  6E57               	movwf	_inPipes+5,c	;volatile
 50850  010736  0E12               	movlw	18
 50851  010738  6E56               	movwf	_inPipes+4,c	;volatile
 50852                           
 50853                           ;usb_device.c: 2060: break;
 50854  01073A  0012               	return	
 50855  01073C                     
 50856                           ; BSR set to: 13
 50857                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 50858                           
 50859                           ; BSR set to: 13
 50860  01073C  5132               	movf	50,w,b	;volatile
 50861  01073E  A4D8               	btfss	status,2,c
 50862  010740  D042               	goto	i2l284
 50863                           
 50864                           ; BSR set to: 13
 50865                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 50866  010742  5132               	movf	50,w,b	;volatile
 50867  010744  0D02               	mullw	2
 50868  010746  0EEC               	movlw	low _USB_CD_Ptr
 50869  010748  24F3               	addwf	prodl,w,c
 50870  01074A  6EF6               	movwf	tblptrl,c
 50871  01074C  0E9D               	movlw	high _USB_CD_Ptr
 50872  01074E  20F4               	addwfc	prodh,w,c
 50873  010750  6EF7               	movwf	tblptrh,c
 50874  010752                     	if	1	;There are 3 active tblptr bytes
 50875  010752  6AF8               	clrf	tblptru,c
 50876  010754  0E00               	movlw	low (__mediumconst shr (0+16))
 50877  010756  22F8               	addwfc	tblptru,f,c
 50878  010758                     	endif
 50879  010758  0009               	tblrd		*+
 50880  01075A  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50881  01075E  000A               	tblrd		*-
 50882  010760  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50883                           
 50884                           ; BSR set to: 13
 50885                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 50886  010764  0E02               	movlw	2
 50887  010766  2452               	addwf	_inPipes,w,c	;volatile
 50888  010768  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50889  01076A  0E00               	movlw	0
 50890  01076C  2053               	addwfc	_inPipes+1,w,c	;volatile
 50891  01076E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50892  010770  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50893  010774  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50894  010778  0E00               	movlw	low (__mediumconst shr (0+16))
 50895  01077A  6EF8               	movwf	tblptru,c
 50896  01077C  0E0E               	movlw	(high __ramtop+-1)
 50897  01077E  64F7               	cpfsgt	tblptrh,c
 50898  010780  D003               	bra	i2u1201_47
 50899  010782  0008               	tblrd		*
 50900  010784  50F5               	movf	tablat,w,c
 50901  010786  D005               	bra	i2u1201_40
 50902  010788                     i2u1201_47:
 50903  010788  CFF6 FFE9          	movff	tblptrl,fsr0l
 50904  01078C  CFF7 FFEA          	movff	tblptrh,fsr0h
 50905  010790  50EF               	movf	indf0,w,c
 50906  010792                     i2u1201_40:
 50907  010792  6E56               	movwf	_inPipes+4,c	;volatile
 50908                           
 50909                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 50910  010794  0E03               	movlw	3
 50911  010796  2452               	addwf	_inPipes,w,c	;volatile
 50912  010798  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50913  01079A  0E00               	movlw	0
 50914  01079C  2053               	addwfc	_inPipes+1,w,c	;volatile
 50915  01079E  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50916  0107A0  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50917  0107A4  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50918  0107A8  0E00               	movlw	low (__mediumconst shr (0+16))
 50919  0107AA  6EF8               	movwf	tblptru,c
 50920  0107AC  0E0E               	movlw	(high __ramtop+-1)
 50921  0107AE  64F7               	cpfsgt	tblptrh,c
 50922  0107B0  D003               	bra	i2u1202_47
 50923  0107B2  0008               	tblrd		*
 50924  0107B4  50F5               	movf	tablat,w,c
 50925  0107B6  D005               	bra	i2u1202_40
 50926  0107B8                     i2u1202_47:
 50927  0107B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 50928  0107BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 50929  0107C0  50EF               	movf	indf0,w,c
 50930  0107C2                     i2u1202_40:
 50931  0107C2  6E57               	movwf	_inPipes+5,c	;volatile
 50932                           
 50933                           ;usb_device.c: 2078: }
 50934  0107C4  0012               	return	
 50935  0107C6                     i2l284:
 50936                           
 50937                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 50938  0107C6  0E00               	movlw	0
 50939  0107C8  6E55               	movwf	_inPipes+3,c	;volatile
 50940                           
 50941                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 50942  0107CA  0012               	return	
 50943  0107CC                     
 50944                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 50945  0107CC  0E04               	movlw	4
 50946  0107CE  010D               	movlb	13	; () banked
 50947  0107D0  6132               	cpfslt	50,b	;volatile
 50948  0107D2  D027               	goto	i2l287
 50949                           
 50950                           ; BSR set to: 13
 50951                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 50952  0107D4  5132               	movf	50,w,b	;volatile
 50953  0107D6  0D02               	mullw	2
 50954  0107D8  0EE4               	movlw	low _USB_SD_Ptr
 50955  0107DA  24F3               	addwf	prodl,w,c
 50956  0107DC  6EF6               	movwf	tblptrl,c
 50957  0107DE  0E9D               	movlw	high _USB_SD_Ptr
 50958  0107E0  20F4               	addwfc	prodh,w,c
 50959  0107E2  6EF7               	movwf	tblptrh,c
 50960  0107E4                     	if	1	;There are 3 active tblptr bytes
 50961  0107E4  6AF8               	clrf	tblptru,c
 50962  0107E6  0E00               	movlw	low (__mediumconst shr (0+16))
 50963  0107E8  22F8               	addwfc	tblptru,f,c
 50964  0107EA                     	endif
 50965  0107EA  0009               	tblrd		*+
 50966  0107EC  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50967  0107F0  000A               	tblrd		*-
 50968  0107F2  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50969                           
 50970                           ; BSR set to: 13
 50971                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 50972  0107F6  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 50973  0107FA  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 50974  0107FE  0E00               	movlw	low (__mediumconst shr (0+16))
 50975  010800  6EF8               	movwf	tblptru,c
 50976  010802  0E0E               	movlw	(high __ramtop+-1)
 50977  010804  64F7               	cpfsgt	tblptrh,c
 50978  010806  D003               	bra	i2u1204_47
 50979  010808  0008               	tblrd		*
 50980  01080A  50F5               	movf	tablat,w,c
 50981  01080C  D005               	bra	i2u1204_40
 50982  01080E                     i2u1204_47:
 50983  01080E  CFF6 FFE9          	movff	tblptrl,fsr0l
 50984  010812  CFF7 FFEA          	movff	tblptrh,fsr0h
 50985  010816  50EF               	movf	indf0,w,c
 50986  010818                     i2u1204_40:
 50987  010818  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50988  01081A  5001               	movf	??_USBStdGetDscHandler,w,c
 50989  01081C  6E56               	movwf	_inPipes+4,c	;volatile
 50990  01081E  6A57               	clrf	_inPipes+5,c	;volatile
 50991                           
 50992                           ;usb_device.c: 2094: }
 50993  010820  0012               	return	
 50994  010822                     i2l287:
 50995                           
 50996                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 50997  010822  0E00               	movlw	0
 50998  010824  6E55               	movwf	_inPipes+3,c	;volatile
 50999                           
 51000                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 51001  010826  0012               	return	
 51002  010828                     
 51003                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 51004  010828  0E00               	movlw	0
 51005  01082A  6E55               	movwf	_inPipes+3,c	;volatile
 51006                           
 51007                           ;usb_device.c: 2112: }
 51008                           
 51009                           ;usb_device.c: 2111: break;
 51010  01082C  0012               	return	
 51011  01082E                     i2l280:
 51012  01082E  010D               	movlb	13	; () banked
 51013  010830  5133               	movf	51,w,b	;volatile
 51014                           
 51015                           ; Switch size 1, requested type "space"
 51016                           ; Number of cases is 3, Range of values is 1 to 3
 51017                           ; switch strategies available:
 51018                           ; Name         Instructions Cycles
 51019                           ; simple_byte           10     6 (average)
 51020                           ;	Chosen strategy is simple_byte
 51021  010832  0A01               	xorlw	1	; case 1
 51022  010834  B4D8               	btfsc	status,2,c
 51023  010836  D779               	goto	i2l281
 51024  010838  0A03               	xorlw	3	; case 2
 51025  01083A  B4D8               	btfsc	status,2,c
 51026  01083C  D77F               	goto	i2l283
 51027  01083E  0A01               	xorlw	1	; case 3
 51028  010840  B4D8               	btfsc	status,2,c
 51029  010842  D7C4               	goto	i2l286
 51030  010844  D7F1               	goto	i2l289
 51031  010846                     __end_of_USBStdGetDscHandler:
 51032                           	opt stack 0
 51033                           tosu	equ	0xFFF
 51034                           tosh	equ	0xFFE
 51035                           tosl	equ	0xFFD
 51036                           pclatu	equ	0xFFB
 51037                           pclath	equ	0xFFA
 51038                           tblptru	equ	0xFF8
 51039                           tblptrh	equ	0xFF7
 51040                           tblptrl	equ	0xFF6
 51041                           tablat	equ	0xFF5
 51042                           prodh	equ	0xFF4
 51043                           prodl	equ	0xFF3
 51044                           intcon	equ	0xFF2
 51045                           indf0	equ	0xFEF
 51046                           postinc0	equ	0xFEE
 51047                           fsr0h	equ	0xFEA
 51048                           fsr0l	equ	0xFE9
 51049                           wreg	equ	0xFE8
 51050                           indf1	equ	0xFE7
 51051                           postinc1	equ	0xFE6
 51052                           postdec1	equ	0xFE5
 51053                           plusw1	equ	0xFE3
 51054                           fsr1h	equ	0xFE2
 51055                           fsr1l	equ	0xFE1
 51056                           indf2	equ	0xFDF
 51057                           postinc2	equ	0xFDE
 51058                           postdec2	equ	0xFDD
 51059                           plusw2	equ	0xFDB
 51060                           fsr2h	equ	0xFDA
 51061                           fsr2l	equ	0xFD9
 51062                           status	equ	0xFD8
 51063                           
 51064 ;; *************** function _USBStdFeatureReqHandler *****************
 51065 ;; Defined at:
 51066 ;;		line 2756 in file "usb_device.c"
 51067 ;; Parameters:    Size  Location     Type
 51068 ;;		None
 51069 ;; Auto vars:     Size  Location     Type
 51070 ;;  p               2   27[COMRAM] PTR struct __BDT
 51071 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51072 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 51073 ;;		 -> UEP0(1), 
 51074 ;;  current_ep_d    1   26[COMRAM] struct .
 51075 ;; Return value:  Size  Location     Type
 51076 ;;                  1    wreg      void 
 51077 ;; Registers used:
 51078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51079 ;; Tracked objects:
 51080 ;;		On entry : 0/0
 51081 ;;		On exit  : 0/0
 51082 ;;		Unchanged: 0/0
 51083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51085 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51087 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51088 ;;Total ram usage:        6 bytes
 51089 ;; Hardware stack levels used:    1
 51090 ;; Hardware stack levels required when called:    4
 51091 ;; This function calls:
 51092 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51093 ;; This function is called by:
 51094 ;;		_USBCheckStdRequest
 51095 ;; This function uses a non-reentrant model
 51096 ;;
 51097                           
 51098                           	psect	text213
 51099  00DE66                     __ptext213:
 51100                           	opt stack 0
 51101  00DE66                     _USBStdFeatureReqHandler:
 51102                           	opt stack 9
 51103                           
 51104                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 51105                           
 51106                           ;incstack = 0
 51107  00DE66  010D               	movlb	13	; () banked
 51108  00DE68  0532               	decf	50,w,b	;volatile
 51109  00DE6A  A4D8               	btfss	status,2,c
 51110  00DE6C  D00F               	goto	i2l373
 51111                           
 51112                           ; BSR set to: 13
 51113  00DE6E  5130               	movf	48,w,b	;volatile
 51114  00DE70  0B1F               	andlw	31
 51115  00DE72  0900               	iorlw	0
 51116  00DE74  A4D8               	btfss	status,2,c
 51117  00DE76  D00A               	goto	i2l373
 51118                           
 51119                           ; BSR set to: 13
 51120                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 51121  00DE78  8E55               	bsf	_inPipes+3,7,c	;volatile
 51122                           
 51123                           ; BSR set to: 13
 51124                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 51125  00DE7A  0E03               	movlw	3
 51126  00DE7C  1931               	xorwf	49,w,b	;volatile
 51127  00DE7E  A4D8               	btfss	status,2,c
 51128  00DE80  D002               	goto	i2l372
 51129                           
 51130                           ; BSR set to: 13
 51131                           ;usb_device.c: 2806: RemoteWakeup = 1;
 51132  00DE82  0E01               	movlw	1
 51133  00DE84  D001               	goto	L78
 51134  00DE86                     i2l372:
 51135                           
 51136                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 51137                           
 51138                           ; BSR set to: 1
 51139  00DE86  0E00               	movlw	0
 51140  00DE88                     L78:
 51141  00DE88  0101               	movlb	1	; () banked
 51142  00DE8A  6F6E               	movwf	_RemoteWakeup& (0+255),b	;volatile
 51143  00DE8C                     i2l373:
 51144                           
 51145                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 51146                           
 51147                           ; BSR set to: 1
 51148  00DE8C  010D               	movlb	13	; () banked
 51149  00DE8E  5132               	movf	50,w,b	;volatile
 51150  00DE90  A4D8               	btfss	status,2,c
 51151  00DE92  0012               	return	
 51152                           
 51153                           ; BSR set to: 13
 51154  00DE94  5130               	movf	48,w,b	;volatile
 51155  00DE96  0B1F               	andlw	31
 51156  00DE98  0A02               	xorlw	2
 51157  00DE9A  A4D8               	btfss	status,2,c
 51158  00DE9C  0012               	return	
 51159                           
 51160                           ; BSR set to: 13
 51161  00DE9E  5134               	movf	52,w,b	;volatile
 51162  00DEA0  0B0F               	andlw	15
 51163  00DEA2  0900               	iorlw	0
 51164  00DEA4  B4D8               	btfsc	status,2,c
 51165  00DEA6  0012               	return	
 51166                           
 51167                           ; BSR set to: 13
 51168  00DEA8  5134               	movf	52,w,b	;volatile
 51169  00DEAA  0B0F               	andlw	15
 51170  00DEAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51171  00DEAE  0E03               	movlw	3
 51172  00DEB0  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 51173  00DEB2  0012               	return	
 51174                           
 51175                           ; BSR set to: 13
 51176  00DEB4  0E20               	movlw	32
 51177  00DEB6  185E               	xorwf	_USBDeviceState,w,c	;volatile
 51178  00DEB8  A4D8               	btfss	status,2,c
 51179  00DEBA  0012               	return	
 51180                           
 51181                           ; BSR set to: 13
 51182                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 51183  00DEBC  8E55               	bsf	_inPipes+3,7,c	;volatile
 51184                           
 51185                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 51186  00DEBE  BF34               	btfsc	52,7,b	;volatile
 51187  00DEC0  D019               	goto	i2l375
 51188                           
 51189                           ; BSR set to: 13
 51190                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51191  00DEC2  5134               	movf	52,w,b	;volatile
 51192  00DEC4  0B0F               	andlw	15
 51193  00DEC6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51194  00DEC8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51195  00DECA  0D02               	mullw	2
 51196  00DECC  0E21               	movlw	low _pBDTEntryOut
 51197  00DECE  24F3               	addwf	prodl,w,c
 51198  00DED0  6ED9               	movwf	fsr2l,c
 51199  00DED2  0E01               	movlw	high _pBDTEntryOut
 51200  00DED4  20F4               	addwfc	prodh,w,c
 51201  00DED6  6EDA               	movwf	fsr2h,c
 51202  00DED8  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51203  00DEDC  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51204                           
 51205                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 51206  00DEE0  5134               	movf	52,w,b	;volatile
 51207  00DEE2  0B0F               	andlw	15
 51208  00DEE4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51209  00DEE6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51210  00DEE8  0D01               	mullw	1
 51211  00DEEA  0E39               	movlw	low _ep_data_out
 51212  00DEEC  24F3               	addwf	prodl,w,c
 51213  00DEEE  6ED9               	movwf	fsr2l,c
 51214  00DEF0  0E01               	movlw	high _ep_data_out
 51215  00DEF2  D018               	goto	L79
 51216  00DEF4                     i2l375:
 51217                           
 51218                           ; BSR set to: 13
 51219                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51220                           
 51221                           ; BSR set to: 13
 51222  00DEF4  5134               	movf	52,w,b	;volatile
 51223  00DEF6  0B0F               	andlw	15
 51224  00DEF8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51225  00DEFA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51226  00DEFC  0D02               	mullw	2
 51227  00DEFE  0E1B               	movlw	low _pBDTEntryIn
 51228  00DF00  24F3               	addwf	prodl,w,c
 51229  00DF02  6ED9               	movwf	fsr2l,c
 51230  00DF04  0E01               	movlw	high _pBDTEntryIn
 51231  00DF06  20F4               	addwfc	prodh,w,c
 51232  00DF08  6EDA               	movwf	fsr2h,c
 51233  00DF0A  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51234  00DF0E  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51235                           
 51236                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 51237  00DF12  5134               	movf	52,w,b	;volatile
 51238  00DF14  0B0F               	andlw	15
 51239  00DF16  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51240  00DF18  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51241  00DF1A  0D01               	mullw	1
 51242  00DF1C  0E3C               	movlw	low _ep_data_in
 51243  00DF1E  24F3               	addwf	prodl,w,c
 51244  00DF20  6ED9               	movwf	fsr2l,c
 51245  00DF22  0E01               	movlw	high _ep_data_in
 51246  00DF24                     L79:
 51247  00DF24  20F4               	addwfc	prodh,w,c
 51248  00DF26  6EDA               	movwf	fsr2h,c
 51249  00DF28  50DF               	movf	indf2,w,c
 51250  00DF2A  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 51251                           
 51252                           ; BSR set to: 13
 51253                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 51254                           
 51255                           ; BSR set to: 13
 51256  00DF2C  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 51257  00DF2E  D006               	goto	i2l377
 51258                           
 51259                           ; BSR set to: 13
 51260                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 51261  00DF30  0EFB               	movlw	251
 51262  00DF32  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 51263  00DF34  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51264  00DF36  0EFF               	movlw	255
 51265  00DF38  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 51266  00DF3A  D004               	goto	L80
 51267  00DF3C                     i2l377:
 51268                           
 51269                           ; BSR set to: 13
 51270                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 51271                           
 51272                           ; BSR set to: 13
 51273  00DF3C  0E04               	movlw	4
 51274  00DF3E  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 51275  00DF40  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51276  00DF42  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51277  00DF44                     L80:
 51278  00DF44  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51279                           
 51280                           ; BSR set to: 13
 51281                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 51282                           
 51283                           ; BSR set to: 13
 51284  00DF46  BF34               	btfsc	52,7,b	;volatile
 51285  00DF48  D00A               	goto	i2l379
 51286                           
 51287                           ; BSR set to: 13
 51288                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 51289  00DF4A  5134               	movf	52,w,b	;volatile
 51290  00DF4C  0B0F               	andlw	15
 51291  00DF4E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51292  00DF50  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51293  00DF52  0D02               	mullw	2
 51294  00DF54  0E21               	movlw	low _pBDTEntryOut
 51295  00DF56  24F3               	addwf	prodl,w,c
 51296  00DF58  6ED9               	movwf	fsr2l,c
 51297  00DF5A  0E01               	movlw	high _pBDTEntryOut
 51298  00DF5C  D009               	goto	L81
 51299  00DF5E                     i2l379:
 51300                           
 51301                           ; BSR set to: 13
 51302                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 51303                           
 51304                           ; BSR set to: 13
 51305  00DF5E  5134               	movf	52,w,b	;volatile
 51306  00DF60  0B0F               	andlw	15
 51307  00DF62  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51308  00DF64  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51309  00DF66  0D02               	mullw	2
 51310  00DF68  0E1B               	movlw	low _pBDTEntryIn
 51311  00DF6A  24F3               	addwf	prodl,w,c
 51312  00DF6C  6ED9               	movwf	fsr2l,c
 51313  00DF6E  0E01               	movlw	high _pBDTEntryIn
 51314  00DF70                     L81:
 51315  00DF70  20F4               	addwfc	prodh,w,c
 51316  00DF72  6EDA               	movwf	fsr2h,c
 51317  00DF74  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 51318  00DF78  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 51319                           
 51320                           ; BSR set to: 13
 51321                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 51322                           
 51323                           ; BSR set to: 13
 51324  00DF7C  0E03               	movlw	3
 51325  00DF7E  1931               	xorwf	49,w,b	;volatile
 51326  00DF80  A4D8               	btfss	status,2,c
 51327  00DF82  D02D               	goto	i2l381
 51328                           
 51329                           ; BSR set to: 13
 51330                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 51331  00DF84  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51332  00DF88  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51333  00DF8C  AEDF               	btfss	indf2,7,c
 51334  00DF8E  D01A               	goto	i2l384
 51335                           
 51336                           ; BSR set to: 13
 51337                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 51338  00DF90  BF34               	btfsc	52,7,b	;volatile
 51339  00DF92  D00A               	goto	i2l383
 51340                           
 51341                           ; BSR set to: 13
 51342                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 51343  00DF94  5134               	movf	52,w,b	;volatile
 51344  00DF96  0B0F               	andlw	15
 51345  00DF98  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51346  00DF9A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51347  00DF9C  0D01               	mullw	1
 51348  00DF9E  0E39               	movlw	low _ep_data_out
 51349  00DFA0  24F3               	addwf	prodl,w,c
 51350  00DFA2  6ED9               	movwf	fsr2l,c
 51351  00DFA4  0E01               	movlw	high _ep_data_out
 51352  00DFA6  D00A               	goto	L82
 51353  00DFA8                     i2l383:
 51354                           
 51355                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 51356                           
 51357                           ; BSR set to: 1
 51358  00DFA8  010D               	movlb	13	; () banked
 51359  00DFAA  5134               	movf	52,w,b	;volatile
 51360  00DFAC  0B0F               	andlw	15
 51361  00DFAE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51362  00DFB0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51363  00DFB2  0D01               	mullw	1
 51364  00DFB4  0E3C               	movlw	low _ep_data_in
 51365  00DFB6  24F3               	addwf	prodl,w,c
 51366  00DFB8  6ED9               	movwf	fsr2l,c
 51367  00DFBA  0E01               	movlw	high _ep_data_in
 51368  00DFBC                     L82:
 51369  00DFBC  20F4               	addwfc	prodh,w,c
 51370  00DFBE  6EDA               	movwf	fsr2h,c
 51371  00DFC0  0101               	movlb	1	; () banked
 51372  00DFC2  82DF               	bsf	indf2,1,c
 51373  00DFC4                     i2l384:
 51374                           
 51375                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 51376                           
 51377                           ; BSR set to: 1
 51378                           
 51379                           ; BSR set to: 1
 51380  00DFC4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51381  00DFC8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51382  00DFCC  0E00               	movlw	0
 51383  00DFCE  84DB               	bsf	plusw2,2,c
 51384                           
 51385                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 51386  00DFD0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51387  00DFD4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51388  00DFD8  0E00               	movlw	0
 51389  00DFDA  8EDB               	bsf	plusw2,7,c
 51390                           
 51391                           ;usb_device.c: 2878: }
 51392  00DFDC  0012               	return	
 51393  00DFDE                     i2l381:
 51394                           
 51395                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 51396  00DFDE  0E04               	movlw	4
 51397  00DFE0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51398  00DFE2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51399  00DFE4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51400  00DFE6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51401                           
 51402                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 51403  00DFE8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51404  00DFEC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51405  00DFF0  AEDF               	btfss	indf2,7,c
 51406  00DFF2  D01B               	goto	i2l386
 51407                           
 51408                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 51409  00DFF4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51410  00DFF8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51411  00DFFC  0E7F               	movlw	127
 51412  00DFFE  16DF               	andwf	indf2,f,c
 51413                           
 51414                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 51415  00E000  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51416  00E004  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51417  00E008  0E00               	movlw	0
 51418  00E00A  8CDB               	bsf	plusw2,6,c
 51419                           
 51420                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51421  00E00C  0E00               	movlw	0
 51422  00E00E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51423  00E010  0E05               	movlw	5
 51424  00E012  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51425  00E014  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51426  00E018  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51427  00E01C  0E00               	movlw	0
 51428  00E01E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51429  00E020  0E02               	movlw	2
 51430  00E022  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51431  00E024  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51432                           
 51433                           ;usb_device.c: 2893: }
 51434  00E028  D006               	goto	i2l387
 51435  00E02A                     i2l386:
 51436                           
 51437                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 51438  00E02A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51439  00E02E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51440  00E032  0E00               	movlw	0
 51441  00E034  8CDB               	bsf	plusw2,6,c
 51442  00E036                     i2l387:
 51443                           
 51444                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 51445  00E036  0E04               	movlw	4
 51446  00E038  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51447  00E03A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51448  00E03C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51449  00E03E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51450                           
 51451                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 51452  00E040  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 51453  00E042  D006               	goto	i2u1226_40
 51454  00E044  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51455  00E048  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51456  00E04C  AEDF               	btfss	indf2,7,c
 51457  00E04E  D030               	goto	i2l388
 51458  00E050                     i2u1226_40:
 51459                           
 51460                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 51461  00E050  010D               	movlb	13	; () banked
 51462  00E052  BF34               	btfsc	52,7,b	;volatile
 51463  00E054  D00A               	goto	i2l391
 51464                           
 51465                           ; BSR set to: 13
 51466                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 51467  00E056  5134               	movf	52,w,b	;volatile
 51468  00E058  0B0F               	andlw	15
 51469  00E05A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51470  00E05C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51471  00E05E  0D01               	mullw	1
 51472  00E060  0E39               	movlw	low _ep_data_out
 51473  00E062  24F3               	addwf	prodl,w,c
 51474  00E064  6ED9               	movwf	fsr2l,c
 51475  00E066  0E01               	movlw	high _ep_data_out
 51476  00E068  D00A               	goto	L83
 51477  00E06A                     i2l391:
 51478                           
 51479                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 51480                           
 51481                           ; BSR set to: 1
 51482  00E06A  010D               	movlb	13	; () banked
 51483  00E06C  5134               	movf	52,w,b	;volatile
 51484  00E06E  0B0F               	andlw	15
 51485  00E070  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51486  00E072  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51487  00E074  0D01               	mullw	1
 51488  00E076  0E3C               	movlw	low _ep_data_in
 51489  00E078  24F3               	addwf	prodl,w,c
 51490  00E07A  6ED9               	movwf	fsr2l,c
 51491  00E07C  0E01               	movlw	high _ep_data_in
 51492  00E07E                     L83:
 51493  00E07E  20F4               	addwfc	prodh,w,c
 51494  00E080  6EDA               	movwf	fsr2h,c
 51495  00E082  0101               	movlb	1	; () banked
 51496  00E084  92DF               	bcf	indf2,1,c
 51497                           
 51498                           ; BSR set to: 1
 51499                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 51500                           
 51501                           ; BSR set to: 1
 51502  00E086  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51503  00E08A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51504  00E08E  0E3B               	movlw	59
 51505  00E090  16DF               	andwf	indf2,f,c
 51506                           
 51507                           ; BSR set to: 1
 51508                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51509  00E092  0E00               	movlw	0
 51510  00E094  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51511  00E096  0E05               	movlw	5
 51512  00E098  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51513  00E09A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51514  00E09E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51515  00E0A2  0E00               	movlw	0
 51516  00E0A4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51517  00E0A6  0E02               	movlw	2
 51518  00E0A8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51519  00E0AA  EC48  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51520                           
 51521                           ;usb_device.c: 2923: }
 51522  00E0AE  D006               	goto	i2l393
 51523  00E0B0                     i2l388:
 51524                           
 51525                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 51526  00E0B0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51527  00E0B4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51528  00E0B8  0E3B               	movlw	59
 51529  00E0BA  16DF               	andwf	indf2,f,c
 51530  00E0BC                     i2l393:
 51531                           
 51532                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 51533  00E0BC  010D               	movlb	13	; () banked
 51534  00E0BE  5134               	movf	52,w,b	;volatile
 51535  00E0C0  0B0F               	andlw	15
 51536  00E0C2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51537  00E0C4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51538  00E0C6  0D01               	mullw	1
 51539  00E0C8  0E26               	movlw	38
 51540  00E0CA  24F3               	addwf	prodl,w,c
 51541  00E0CC  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 51542  00E0CE  0E0F               	movlw	15
 51543  00E0D0  20F4               	addwfc	prodh,w,c
 51544  00E0D2  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 51545                           
 51546                           ; BSR set to: 13
 51547                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 51548  00E0D4  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 51549  00E0D8  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 51550  00E0DC  0EFE               	movlw	254
 51551  00E0DE  16DF               	andwf	indf2,f,c
 51552                           
 51553                           ; BSR set to: 13
 51554  00E0E0  0012               	return	
 51555  00E0E2                     __end_of_USBStdFeatureReqHandler:
 51556                           	opt stack 0
 51557                           tosu	equ	0xFFF
 51558                           tosh	equ	0xFFE
 51559                           tosl	equ	0xFFD
 51560                           pclatu	equ	0xFFB
 51561                           pclath	equ	0xFFA
 51562                           tblptru	equ	0xFF8
 51563                           tblptrh	equ	0xFF7
 51564                           tblptrl	equ	0xFF6
 51565                           tablat	equ	0xFF5
 51566                           prodh	equ	0xFF4
 51567                           prodl	equ	0xFF3
 51568                           intcon	equ	0xFF2
 51569                           indf0	equ	0xFEF
 51570                           postinc0	equ	0xFEE
 51571                           fsr0h	equ	0xFEA
 51572                           fsr0l	equ	0xFE9
 51573                           wreg	equ	0xFE8
 51574                           indf1	equ	0xFE7
 51575                           postinc1	equ	0xFE6
 51576                           postdec1	equ	0xFE5
 51577                           plusw1	equ	0xFE3
 51578                           fsr1h	equ	0xFE2
 51579                           fsr1l	equ	0xFE1
 51580                           indf2	equ	0xFDF
 51581                           postinc2	equ	0xFDE
 51582                           postdec2	equ	0xFDD
 51583                           plusw2	equ	0xFDB
 51584                           fsr2h	equ	0xFDA
 51585                           fsr2l	equ	0xFD9
 51586                           status	equ	0xFD8
 51587                           
 51588 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 51589 ;; Defined at:
 51590 ;;		line 54 in file "usb_events.c"
 51591 ;; Parameters:    Size  Location     Type
 51592 ;;  event           2   15[COMRAM] enum E6832
 51593 ;;  pdata           2   17[COMRAM] PTR void 
 51594 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 51595 ;;		 -> BDT(48), 
 51596 ;;  size            2   19[COMRAM] unsigned int 
 51597 ;; Auto vars:     Size  Location     Type
 51598 ;;		None
 51599 ;; Return value:  Size  Location     Type
 51600 ;;                  1    wreg      unsigned char 
 51601 ;; Registers used:
 51602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51603 ;; Tracked objects:
 51604 ;;		On entry : 0/0
 51605 ;;		On exit  : 0/0
 51606 ;;		Unchanged: 0/0
 51607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51608 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51611 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51612 ;;Total ram usage:        8 bytes
 51613 ;; Hardware stack levels used:    1
 51614 ;; Hardware stack levels required when called:    3
 51615 ;; This function calls:
 51616 ;;		_APP_DeviceCustomHIDInitialize
 51617 ;;		_APP_DeviceMSDInitialize
 51618 ;;		_MSDTransferTerminated
 51619 ;;		_USBCheckHIDRequest
 51620 ;;		_USBCheckMSDRequest
 51621 ;;		i2_SYSTEM_Initialize
 51622 ;; This function is called by:
 51623 ;;		_USBDeviceTasks
 51624 ;;		_USBStdSetCfgHandler
 51625 ;;		_USBSuspend
 51626 ;;		_USBWakeFromSuspend
 51627 ;;		_USBCtrlTrfSetupHandler
 51628 ;;		_USBCheckStdRequest
 51629 ;;		_USBStdFeatureReqHandler
 51630 ;; This function uses a non-reentrant model
 51631 ;;
 51632                           
 51633                           	psect	text214
 51634  013890                     __ptext214:
 51635                           	opt stack 0
 51636  013890                     _USER_USB_CALLBACK_EVENT_HANDLER:
 51637                           	opt stack 13
 51638                           
 51639                           ;usb_events.c: 56: switch((int)event)
 51640                           
 51641                           ;incstack = 0
 51642  013890  D019               	goto	i2l816
 51643  013892                     
 51644                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 51645  013892  0E01               	movlw	1
 51646  013894  EC53  F0A5         	call	i2_SYSTEM_Initialize
 51647                           
 51648                           ;usb_events.c: 79: break;
 51649  013898  0012               	return	
 51650  01389A                     
 51651                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 51652  01389A  0E02               	movlw	2
 51653  01389C  EC53  F0A5         	call	i2_SYSTEM_Initialize
 51654                           
 51655                           ;usb_events.c: 90: break;
 51656  0138A0  0012               	return	
 51657  0138A2                     
 51658                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 51659  0138A2  EC6D  F0A9         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 51660                           
 51661                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 51662  0138A6  EC5C  F0AC         	call	_APP_DeviceMSDInitialize	;wreg free
 51663                           
 51664                           ;usb_events.c: 100: break;
 51665                           
 51666                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 51667                           
 51668                           ;usb_events.c: 97: break;
 51669  0138AA  0012               	return	
 51670  0138AC                     
 51671                           ;usb_events.c: 105: USBCheckHIDRequest();
 51672  0138AC  EC18  F092         	call	_USBCheckHIDRequest	;wreg free
 51673                           
 51674                           ;usb_events.c: 108: USBCheckMSDRequest();
 51675  0138B0  EC46  F095         	call	_USBCheckMSDRequest	;wreg free
 51676                           
 51677                           ;usb_events.c: 112: break;
 51678                           
 51679                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 51680                           
 51681                           ;usb_events.c: 109: break;
 51682  0138B4  0012               	return	
 51683  0138B6                     
 51684                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 51685  0138B6  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 51686  0138BA  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 51687  0138BE  ECAA  F0A4         	call	_MSDTransferTerminated	;wreg free
 51688                           
 51689                           ;usb_events.c: 129: }
 51690                           
 51691                           ;usb_events.c: 128: break;
 51692                           
 51693                           ;usb_events.c: 127: default:
 51694                           
 51695                           ;usb_events.c: 125: break;
 51696  0138C2  0012               	return	
 51697  0138C4                     i2l816:
 51698  0138C4  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 51699  0138C8  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 51700                           
 51701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 51702                           ; Switch size 1, requested type "space"
 51703                           ; Number of cases is 2, Range of values is 0 to 127
 51704                           ; switch strategies available:
 51705                           ; Name         Instructions Cycles
 51706                           ; simple_byte            7     4 (average)
 51707                           ;	Chosen strategy is simple_byte
 51708  0138CC  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 51709  0138CE  0A00               	xorlw	0	; case 0
 51710  0138D0  B4D8               	btfsc	status,2,c
 51711  0138D2  D004               	goto	i2l19366
 51712  0138D4  0A7F               	xorlw	127	; case 127
 51713  0138D6  A4D8               	btfss	status,2,c
 51714  0138D8  0012               	return	
 51715  0138DA  D01A               	goto	i2l19368
 51716  0138DC                     i2l19366:
 51717                           
 51718                           ; Switch size 1, requested type "space"
 51719                           ; Number of cases is 8, Range of values is 1 to 117
 51720                           ; switch strategies available:
 51721                           ; Name         Instructions Cycles
 51722                           ; simple_byte           25    13 (average)
 51723                           ;	Chosen strategy is simple_byte
 51724  0138DC  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51725  0138DE  0A01               	xorlw	1	; case 1
 51726  0138E0  B4D8               	btfsc	status,2,c
 51727  0138E2  D7DF               	goto	i2l822
 51728  0138E4  0A03               	xorlw	3	; case 2
 51729  0138E6  B4D8               	btfsc	status,2,c
 51730  0138E8  0012               	return	
 51731  0138EA  0A01               	xorlw	1	; case 3
 51732  0138EC  B4D8               	btfsc	status,2,c
 51733  0138EE  D7DE               	goto	i2l824
 51734  0138F0  0A06               	xorlw	6	; case 5
 51735  0138F2  B4D8               	btfsc	status,2,c
 51736  0138F4  D7E0               	goto	i2l826
 51737  0138F6  0A77               	xorlw	119	; case 114
 51738  0138F8  B4D8               	btfsc	status,2,c
 51739  0138FA  0012               	return	
 51740  0138FC  0A01               	xorlw	1	; case 115
 51741  0138FE  B4D8               	btfsc	status,2,c
 51742  013900  0012               	return	
 51743  013902  0A07               	xorlw	7	; case 116
 51744  013904  B4D8               	btfsc	status,2,c
 51745  013906  D7C9               	goto	i2l821
 51746  013908  0A01               	xorlw	1	; case 117
 51747  01390A  A4D8               	btfss	status,2,c
 51748  01390C  0012               	return	
 51749  01390E  D7C1               	goto	i2l820
 51750  013910                     i2l19368:
 51751                           
 51752                           ; Switch size 1, requested type "space"
 51753                           ; Number of cases is 1, Range of values is 255 to 255
 51754                           ; switch strategies available:
 51755                           ; Name         Instructions Cycles
 51756                           ; simple_byte            4     3 (average)
 51757                           ;	Chosen strategy is simple_byte
 51758  013910  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51759  013912  0AFF               	xorlw	255	; case 255
 51760  013914  0012               	return	
 51761  013916                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 51762                           	opt stack 0
 51763                           tosu	equ	0xFFF
 51764                           tosh	equ	0xFFE
 51765                           tosl	equ	0xFFD
 51766                           pclatu	equ	0xFFB
 51767                           pclath	equ	0xFFA
 51768                           tblptru	equ	0xFF8
 51769                           tblptrh	equ	0xFF7
 51770                           tblptrl	equ	0xFF6
 51771                           tablat	equ	0xFF5
 51772                           prodh	equ	0xFF4
 51773                           prodl	equ	0xFF3
 51774                           intcon	equ	0xFF2
 51775                           indf0	equ	0xFEF
 51776                           postinc0	equ	0xFEE
 51777                           fsr0h	equ	0xFEA
 51778                           fsr0l	equ	0xFE9
 51779                           wreg	equ	0xFE8
 51780                           indf1	equ	0xFE7
 51781                           postinc1	equ	0xFE6
 51782                           postdec1	equ	0xFE5
 51783                           plusw1	equ	0xFE3
 51784                           fsr1h	equ	0xFE2
 51785                           fsr1l	equ	0xFE1
 51786                           indf2	equ	0xFDF
 51787                           postinc2	equ	0xFDE
 51788                           postdec2	equ	0xFDD
 51789                           plusw2	equ	0xFDB
 51790                           fsr2h	equ	0xFDA
 51791                           fsr2l	equ	0xFD9
 51792                           status	equ	0xFD8
 51793                           
 51794 ;; *************** function i2_SYSTEM_Initialize *****************
 51795 ;; Defined at:
 51796 ;;		line 39 in file "system.c"
 51797 ;; Parameters:    Size  Location     Type
 51798 ;;  state           1    wreg     enum E6623
 51799 ;; Auto vars:     Size  Location     Type
 51800 ;;  state           1    4[COMRAM] enum E6623
 51801 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 51802 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 51803 ;; Return value:  Size  Location     Type
 51804 ;;                  1    wreg      void 
 51805 ;; Registers used:
 51806 ;;		wreg, status,2, status,0
 51807 ;; Tracked objects:
 51808 ;;		On entry : 0/0
 51809 ;;		On exit  : 0/0
 51810 ;;		Unchanged: 0/0
 51811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51813 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51815 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51816 ;;Total ram usage:        5 bytes
 51817 ;; Hardware stack levels used:    1
 51818 ;; This function calls:
 51819 ;;		Nothing
 51820 ;; This function is called by:
 51821 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51822 ;; This function uses a non-reentrant model
 51823 ;;
 51824                           
 51825                           	psect	text215
 51826  014AA6                     __ptext215:
 51827                           	opt stack 0
 51828  014AA6                     i2_SYSTEM_Initialize:
 51829                           	opt stack 15
 51830                           
 51831                           ;incstack = 0
 51832                           ;i2SYSTEM_Initialize@state stored from wreg
 51833  014AA6  6E05               	movwf	i2SYSTEM_Initialize@state,c
 51834                           
 51835                           ;system.c: 41: switch(state)
 51836  014AA8  D01D               	goto	i2l897
 51837  014AAA                     
 51838                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 51839  014AAA  0E02               	movlw	2
 51840  014AAC  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 51841  014AAE  0E58               	movlw	88
 51842  014AB0  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 51843                           
 51844                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 51845  014AB2  8C9B               	bsf	3995,6,c	;volatile
 51846  014AB4                     i2l12734:
 51847  014AB4  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 51848  014AB6  A0D8               	btfss	status,0,c
 51849  014AB8  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 51850  014ABA  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 51851  014ABC  E1FB               	bnz	i2l12734
 51852  014ABE  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 51853  014AC0  B4D8               	btfsc	status,2,c
 51854  014AC2  0012               	return	
 51855  014AC4  D7F7               	goto	i2l900
 51856  014AC6                     
 51857                           ;system.c: 78: OSCCON = 0x70;
 51858  014AC6  0E70               	movlw	112
 51859  014AC8  6ED3               	movwf	4051,c	;volatile
 51860                           
 51861                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 51862  014ACA  0E03               	movlw	3
 51863  014ACC  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,c
 51864  014ACE  0E20               	movlw	32
 51865  014AD0  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132,c
 51866  014AD2                     i2l12738:
 51867  014AD2  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132,f,c
 51868  014AD4  A0D8               	btfss	status,0,c
 51869  014AD6  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,f,c
 51870  014AD8  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132,w,c
 51871  014ADA  E1FB               	bnz	i2l12738
 51872  014ADC  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,w,c
 51873  014ADE  B4D8               	btfsc	status,2,c
 51874  014AE0  0012               	return	
 51875  014AE2  D7F7               	goto	i2l906
 51876  014AE4                     i2l897:
 51877  014AE4  5005               	movf	i2SYSTEM_Initialize@state,w,c
 51878                           
 51879                           ; Switch size 1, requested type "space"
 51880                           ; Number of cases is 3, Range of values is 0 to 2
 51881                           ; switch strategies available:
 51882                           ; Name         Instructions Cycles
 51883                           ; simple_byte           10     6 (average)
 51884                           ;	Chosen strategy is simple_byte
 51885  014AE6  0A00               	xorlw	0	; case 0
 51886  014AE8  B4D8               	btfsc	status,2,c
 51887  014AEA  D7DF               	goto	i2l898
 51888  014AEC  0A01               	xorlw	1	; case 1
 51889  014AEE  B4D8               	btfsc	status,2,c
 51890  014AF0  0012               	return	
 51891  014AF2  0A03               	xorlw	3	; case 2
 51892  014AF4  A4D8               	btfss	status,2,c
 51893  014AF6  0012               	return	
 51894  014AF8  D7E6               	goto	i2l904
 51895  014AFA                     __end_ofi2_SYSTEM_Initialize:
 51896                           	opt stack 0
 51897                           tosu	equ	0xFFF
 51898                           tosh	equ	0xFFE
 51899                           tosl	equ	0xFFD
 51900                           pclatu	equ	0xFFB
 51901                           pclath	equ	0xFFA
 51902                           tblptru	equ	0xFF8
 51903                           tblptrh	equ	0xFF7
 51904                           tblptrl	equ	0xFF6
 51905                           tablat	equ	0xFF5
 51906                           prodh	equ	0xFF4
 51907                           prodl	equ	0xFF3
 51908                           intcon	equ	0xFF2
 51909                           indf0	equ	0xFEF
 51910                           postinc0	equ	0xFEE
 51911                           fsr0h	equ	0xFEA
 51912                           fsr0l	equ	0xFE9
 51913                           wreg	equ	0xFE8
 51914                           indf1	equ	0xFE7
 51915                           postinc1	equ	0xFE6
 51916                           postdec1	equ	0xFE5
 51917                           plusw1	equ	0xFE3
 51918                           fsr1h	equ	0xFE2
 51919                           fsr1l	equ	0xFE1
 51920                           indf2	equ	0xFDF
 51921                           postinc2	equ	0xFDE
 51922                           postdec2	equ	0xFDD
 51923                           plusw2	equ	0xFDB
 51924                           fsr2h	equ	0xFDA
 51925                           fsr2l	equ	0xFD9
 51926                           status	equ	0xFD8
 51927                           
 51928 ;; *************** function _USBCheckMSDRequest *****************
 51929 ;; Defined at:
 51930 ;;		line 218 in file "usb_device_msd.c"
 51931 ;; Parameters:    Size  Location     Type
 51932 ;;		None
 51933 ;; Auto vars:     Size  Location     Type
 51934 ;;		None
 51935 ;; Return value:  Size  Location     Type
 51936 ;;                  1    wreg      void 
 51937 ;; Registers used:
 51938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51939 ;; Tracked objects:
 51940 ;;		On entry : 0/0
 51941 ;;		On exit  : 0/0
 51942 ;;		Unchanged: 0/0
 51943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51948 ;;Total ram usage:        4 bytes
 51949 ;; Hardware stack levels used:    1
 51950 ;; Hardware stack levels required when called:    1
 51951 ;; This function calls:
 51952 ;;		i2_USBTransferOnePacket
 51953 ;; This function is called by:
 51954 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51955 ;; This function uses a non-reentrant model
 51956 ;;
 51957                           
 51958                           	psect	text216
 51959  012A8C                     __ptext216:
 51960                           	opt stack 0
 51961  012A8C                     _USBCheckMSDRequest:
 51962                           	opt stack 14
 51963                           
 51964                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 51965                           
 51966                           ;incstack = 0
 51967  012A8C  010D               	movlb	13	; () banked
 51968  012A8E  5130               	movf	48,w,b	;volatile
 51969  012A90  0B1F               	andlw	31
 51970  012A92  06E8               	decf	wreg,f,c
 51971  012A94  A4D8               	btfss	status,2,c
 51972  012A96  0012               	return	
 51973                           
 51974                           ; BSR set to: 13
 51975                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 51976                           
 51977                           ; BSR set to: 13
 51978                           
 51979                           ; BSR set to: 13
 51980                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 51981  012A98  5134               	movf	52,w,b	;volatile
 51982  012A9A  A4D8               	btfss	status,2,c
 51983  012A9C  0012               	return	
 51984  012A9E  D04C               	goto	i2l545
 51985  012AA0                     
 51986                           ; BSR set to: 13
 51987                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 51988                           
 51989                           ; BSR set to: 13
 51990  012AA0  5132               	movf	50,w,b	;volatile
 51991  012AA2  1133               	iorwf	51,w,b	;volatile
 51992  012AA4  A4D8               	btfss	status,2,c
 51993  012AA6  0012               	return	
 51994                           
 51995                           ; BSR set to: 13
 51996  012AA8  5136               	movf	54,w,b	;volatile
 51997  012AAA  1137               	iorwf	55,w,b	;volatile
 51998  012AAC  A4D8               	btfss	status,2,c
 51999  012AAE  0012               	return	
 52000                           
 52001                           ; BSR set to: 13
 52002                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 52003                           
 52004                           ; BSR set to: 13
 52005                           
 52006                           ; BSR set to: 13
 52007                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 52008  012AB0  0E00               	movlw	0
 52009  012AB2  0101               	movlb	1	; () banked
 52010  012AB4  6F63               	movwf	_MSD_State& (0+255),b
 52011                           
 52012                           ; BSR set to: 1
 52013                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 52014  012AB6  6962               	setf	_MSDCommandState& (0+255),b
 52015                           
 52016                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 52017  012AB8  0E00               	movlw	0
 52018  012ABA  6F61               	movwf	_MSDReadState& (0+255),b
 52019                           
 52020                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 52021  012ABC  0E00               	movlw	0
 52022  012ABE  6F60               	movwf	_MSDWriteState& (0+255),b
 52023                           
 52024                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 52025  012AC0  0E01               	movlw	1
 52026  012AC2  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52027                           
 52028                           ; BSR set to: 1
 52029                           
 52030                           ; BSR set to: 1
 52031                           
 52032                           ; BSR set to: 1
 52033                           
 52034                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 52035  012AC4  C125  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 52036  012AC8  C126  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 52037                           
 52038                           ; BSR set to: 1
 52039  012ACC  500C               	movf	_USBCheckMSDRequest$2534,w,c
 52040  012ACE  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 52041  012AD0  B4D8               	btfsc	status,2,c
 52042  012AD2  D00A               	goto	i2u1070_40
 52043                           
 52044                           ; BSR set to: 1
 52045                           
 52046                           ; BSR set to: 1
 52047                           
 52048                           ; BSR set to: 1
 52049                           
 52050                           ; BSR set to: 1
 52051  012AD4  C125  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 52052  012AD8  C126  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 52053                           
 52054                           ; BSR set to: 1
 52055                           
 52056                           ; BSR set to: 1
 52057  012ADC  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 52058  012AE0  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 52059  012AE4  BEDF               	btfsc	indf2,7,c
 52060  012AE6  D00F               	goto	i2l550
 52061  012AE8                     i2u1070_40:
 52062                           
 52063                           ; BSR set to: 1
 52064                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 52065                           
 52066                           ; BSR set to: 1
 52067  012AE8  0E00               	movlw	0
 52068  012AEA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52069  012AEC  0E40               	movlw	64
 52070  012AEE  6E02               	movwf	i2USBTransferOnePacket@data,c
 52071  012AF0  0E0D               	movlw	13
 52072  012AF2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52073  012AF4  0E40               	movlw	64
 52074  012AF6  6E04               	movwf	i2USBTransferOnePacket@len,c
 52075  012AF8  0E02               	movlw	2
 52076  012AFA  ECF0  F088         	call	i2_USBTransferOnePacket
 52077  012AFE  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52078  012B02  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52079  012B06                     i2l550:
 52080                           
 52081                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 52082  012B06  0E80               	movlw	128
 52083  012B08  6E55               	movwf	_inPipes+3,c	;volatile
 52084                           
 52085                           ;usb_device_msd.c: 263: break;
 52086  012B0A  0012               	return	
 52087  012B0C                     
 52088                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 52089  012B0C  010D               	movlb	13	; () banked
 52090  012B0E  5132               	movf	50,w,b	;volatile
 52091  012B10  1133               	iorwf	51,w,b	;volatile
 52092  012B12  A4D8               	btfss	status,2,c
 52093  012B14  0012               	return	
 52094                           
 52095                           ; BSR set to: 13
 52096  012B16  0536               	decf	54,w,b	;volatile
 52097  012B18  1137               	iorwf	55,w,b	;volatile
 52098  012B1A  A4D8               	btfss	status,2,c
 52099  012B1C  0012               	return	
 52100                           
 52101                           ; BSR set to: 13
 52102                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 52103                           
 52104                           ; BSR set to: 13
 52105                           
 52106                           ; BSR set to: 13
 52107                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 52108  012B1E  0E00               	movlw	0
 52109  012B20  6F38               	movwf	56,b	;volatile
 52110                           
 52111                           ; BSR set to: 13
 52112                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52113  012B22  0E38               	movlw	56
 52114  012B24  6E52               	movwf	_inPipes,c	;volatile
 52115  012B26  0E0D               	movlw	13
 52116  012B28  6E53               	movwf	_inPipes+1,c	;volatile
 52117                           
 52118                           ; BSR set to: 13
 52119  012B2A  0E00               	movlw	0
 52120  012B2C  6E57               	movwf	_inPipes+5,c	;volatile
 52121  012B2E  0E01               	movlw	1
 52122  012B30  6E56               	movwf	_inPipes+4,c	;volatile
 52123                           
 52124                           ; BSR set to: 13
 52125  012B32  0EC1               	movlw	193
 52126  012B34  6E55               	movwf	_inPipes+3,c	;volatile
 52127                           
 52128                           ; BSR set to: 13
 52129                           ;usb_device_msd.c: 278: }
 52130                           
 52131                           ;usb_device_msd.c: 277: break;
 52132  012B36  0012               	return	
 52133  012B38                     i2l545:
 52134                           
 52135                           ; BSR set to: 13
 52136                           
 52137                           ; BSR set to: 13
 52138  012B38  5131               	movf	49,w,b	;volatile
 52139                           
 52140                           ; Switch size 1, requested type "space"
 52141                           ; Number of cases is 2, Range of values is 254 to 255
 52142                           ; switch strategies available:
 52143                           ; Name         Instructions Cycles
 52144                           ; simple_byte            7     4 (average)
 52145                           ;	Chosen strategy is simple_byte
 52146  012B3A  0AFE               	xorlw	254	; case 254
 52147  012B3C  B4D8               	btfsc	status,2,c
 52148  012B3E  D7E6               	goto	i2l562
 52149  012B40  0A01               	xorlw	1	; case 255
 52150  012B42  A4D8               	btfss	status,2,c
 52151  012B44  0012               	return	
 52152  012B46  D7AC               	goto	i2l546
 52153  012B48                     __end_of_USBCheckMSDRequest:
 52154                           	opt stack 0
 52155                           tosu	equ	0xFFF
 52156                           tosh	equ	0xFFE
 52157                           tosl	equ	0xFFD
 52158                           pclatu	equ	0xFFB
 52159                           pclath	equ	0xFFA
 52160                           tblptru	equ	0xFF8
 52161                           tblptrh	equ	0xFF7
 52162                           tblptrl	equ	0xFF6
 52163                           tablat	equ	0xFF5
 52164                           prodh	equ	0xFF4
 52165                           prodl	equ	0xFF3
 52166                           intcon	equ	0xFF2
 52167                           indf0	equ	0xFEF
 52168                           postinc0	equ	0xFEE
 52169                           fsr0h	equ	0xFEA
 52170                           fsr0l	equ	0xFE9
 52171                           wreg	equ	0xFE8
 52172                           indf1	equ	0xFE7
 52173                           postinc1	equ	0xFE6
 52174                           postdec1	equ	0xFE5
 52175                           plusw1	equ	0xFE3
 52176                           fsr1h	equ	0xFE2
 52177                           fsr1l	equ	0xFE1
 52178                           indf2	equ	0xFDF
 52179                           postinc2	equ	0xFDE
 52180                           postdec2	equ	0xFDD
 52181                           plusw2	equ	0xFDB
 52182                           fsr2h	equ	0xFDA
 52183                           fsr2l	equ	0xFD9
 52184                           status	equ	0xFD8
 52185                           
 52186 ;; *************** function _USBCheckHIDRequest *****************
 52187 ;; Defined at:
 52188 ;;		line 153 in file "usb_device_hid.c"
 52189 ;; Parameters:    Size  Location     Type
 52190 ;;		None
 52191 ;; Auto vars:     Size  Location     Type
 52192 ;;		None
 52193 ;; Return value:  Size  Location     Type
 52194 ;;                  1    wreg      void 
 52195 ;; Registers used:
 52196 ;;		wreg, status,2, status,0
 52197 ;; Tracked objects:
 52198 ;;		On entry : 0/0
 52199 ;;		On exit  : 0/0
 52200 ;;		Unchanged: 0/0
 52201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52206 ;;Total ram usage:        0 bytes
 52207 ;; Hardware stack levels used:    1
 52208 ;; This function calls:
 52209 ;;		Nothing
 52210 ;; This function is called by:
 52211 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52212 ;; This function uses a non-reentrant model
 52213 ;;
 52214                           
 52215                           	psect	text217
 52216  012430                     __ptext217:
 52217                           	opt stack 0
 52218  012430                     _USBCheckHIDRequest:
 52219                           	opt stack 15
 52220                           
 52221                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 52222                           
 52223                           ;incstack = 0
 52224  012430  010D               	movlb	13	; () banked
 52225  012432  5130               	movf	48,w,b	;volatile
 52226  012434  0B1F               	andlw	31
 52227  012436  06E8               	decf	wreg,f,c
 52228  012438  A4D8               	btfss	status,2,c
 52229  01243A  0012               	return	
 52230                           
 52231                           ; BSR set to: 13
 52232                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 52233                           
 52234                           ; BSR set to: 13
 52235                           
 52236                           ; BSR set to: 13
 52237  01243C  5134               	movf	52,w,b	;volatile
 52238  01243E  A4D8               	btfss	status,2,c
 52239  012440  0012               	return	
 52240                           
 52241                           ; BSR set to: 13
 52242                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 52243                           
 52244                           ; BSR set to: 13
 52245                           
 52246                           ; BSR set to: 13
 52247  012442  0E06               	movlw	6
 52248  012444  1931               	xorwf	49,w,b	;volatile
 52249  012446  B4D8               	btfsc	status,2,c
 52250  012448  D019               	goto	i2l425
 52251  01244A  D021               	goto	i2l428
 52252  01244C                     
 52253                           ; BSR set to: 13
 52254                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 52255                           
 52256                           ; BSR set to: 13
 52257  01244C  0101               	movlb	1	; () banked
 52258  01244E  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 52259  012450  A4D8               	btfss	status,2,c
 52260  012452  D01D               	goto	i2l428
 52261                           
 52262                           ; BSR set to: 1
 52263                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 52264  012454  0ED0               	movlw	low (_configDescriptor1+18)
 52265  012456  6E52               	movwf	_inPipes,c	;volatile
 52266  012458  0EA0               	movlw	high (_configDescriptor1+18)
 52267  01245A  6E53               	movwf	_inPipes+1,c	;volatile
 52268                           
 52269                           ; BSR set to: 1
 52270  01245C  0E00               	movlw	0
 52271  01245E  6E57               	movwf	_inPipes+5,c	;volatile
 52272  012460  0E09               	movlw	9
 52273  012462  D00A               	goto	L84
 52274  012464                     i2l12422:
 52275                           
 52276                           ; BSR set to: 1
 52277  012464  0EC0               	movlw	192
 52278  012466  6E55               	movwf	_inPipes+3,c	;volatile
 52279                           
 52280                           ; BSR set to: 1
 52281                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 52282  012468  D012               	goto	i2l428
 52283  01246A                     
 52284                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 52285                           
 52286                           ; BSR set to: 1
 52287  01246A  0E84               	movlw	low _hid_rpt01
 52288  01246C  6E52               	movwf	_inPipes,c	;volatile
 52289  01246E  0EA1               	movlw	high _hid_rpt01
 52290  012470  6E53               	movwf	_inPipes+1,c	;volatile
 52291  012472  0E00               	movlw	0
 52292  012474  6E57               	movwf	_inPipes+5,c	;volatile
 52293  012476  0E1D               	movlw	29
 52294  012478                     L84:
 52295  012478  6E56               	movwf	_inPipes+4,c	;volatile
 52296  01247A  D7F4               	goto	i2l12422
 52297  01247C                     i2l425:
 52298  01247C  010D               	movlb	13	; () banked
 52299  01247E  5133               	movf	51,w,b	;volatile
 52300                           
 52301                           ; Switch size 1, requested type "space"
 52302                           ; Number of cases is 3, Range of values is 33 to 35
 52303                           ; switch strategies available:
 52304                           ; Name         Instructions Cycles
 52305                           ; simple_byte           10     6 (average)
 52306                           ;	Chosen strategy is simple_byte
 52307  012480  0A21               	xorlw	33	; case 33
 52308  012482  B4D8               	btfsc	status,2,c
 52309  012484  D7E3               	goto	i2l426
 52310  012486  0A03               	xorlw	3	; case 34
 52311  012488  B4D8               	btfsc	status,2,c
 52312  01248A  D7EF               	goto	i2l429
 52313  01248C  0A01               	xorlw	1	; case 35
 52314  01248E                     i2l428:
 52315                           
 52316                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 52317                           
 52318                           ; BSR set to: 13
 52319                           
 52320                           ; BSR set to: 13
 52321  01248E  010D               	movlb	13	; () banked
 52322  012490  3930               	swapf	48,w,b	;volatile
 52323  012492  32E8               	rrcf	wreg,f,c
 52324  012494  0B03               	andlw	3
 52325  012496  06E8               	decf	wreg,f,c
 52326  012498  A4D8               	btfss	status,2,c
 52327  01249A  0012               	return	
 52328  01249C  D020               	goto	i2l432
 52329  01249E                     
 52330                           ; BSR set to: 13
 52331                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52332                           
 52333                           ; BSR set to: 13
 52334  01249E  0EC0               	movlw	low _idle_rate
 52335  0124A0  6E52               	movwf	_inPipes,c	;volatile
 52336  0124A2  0E01               	movlw	high _idle_rate
 52337  0124A4  6E53               	movwf	_inPipes+1,c	;volatile
 52338                           
 52339                           ; BSR set to: 13
 52340  0124A6  0E00               	movlw	0
 52341  0124A8  6E57               	movwf	_inPipes+5,c	;volatile
 52342  0124AA  0E01               	movlw	1
 52343  0124AC  6E56               	movwf	_inPipes+4,c	;volatile
 52344                           
 52345                           ; BSR set to: 13
 52346  0124AE  0EC1               	movlw	193
 52347  0124B0  6E55               	movwf	_inPipes+3,c	;volatile
 52348                           
 52349                           ;usb_device_hid.c: 223: break;
 52350  0124B2  0012               	return	
 52351  0124B4                     
 52352                           ; BSR set to: 13
 52353                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 52354                           
 52355                           ; BSR set to: 13
 52356  0124B4  0E80               	movlw	128
 52357  0124B6  6E55               	movwf	_inPipes+3,c	;volatile
 52358                           
 52359                           ; BSR set to: 13
 52360                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 52361  0124B8  CD33 F1C0          	movff	3379,_idle_rate	;volatile
 52362                           
 52363                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 52364  0124BC  0012               	return	
 52365  0124BE                     
 52366                           ; BSR set to: 13
 52367                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 52368                           
 52369                           ; BSR set to: 13
 52370  0124BE  0EBF               	movlw	low _active_protocol
 52371  0124C0  6E52               	movwf	_inPipes,c	;volatile
 52372  0124C2  0E01               	movlw	high _active_protocol
 52373  0124C4  6E53               	movwf	_inPipes+1,c	;volatile
 52374                           
 52375                           ; BSR set to: 13
 52376  0124C6  0E00               	movlw	0
 52377  0124C8  6E57               	movwf	_inPipes+5,c	;volatile
 52378  0124CA  0E01               	movlw	1
 52379  0124CC  6E56               	movwf	_inPipes+4,c	;volatile
 52380                           
 52381                           ; BSR set to: 13
 52382  0124CE  0E81               	movlw	129
 52383  0124D0  6E55               	movwf	_inPipes+3,c	;volatile
 52384                           
 52385                           ;usb_device_hid.c: 234: break;
 52386  0124D2  0012               	return	
 52387  0124D4                     
 52388                           ; BSR set to: 13
 52389                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 52390                           
 52391                           ; BSR set to: 13
 52392  0124D4  0E80               	movlw	128
 52393  0124D6  6E55               	movwf	_inPipes+3,c	;volatile
 52394                           
 52395                           ; BSR set to: 13
 52396                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 52397  0124D8  CD32 F1BF          	movff	3378,_active_protocol	;volatile
 52398                           
 52399                           ; BSR set to: 13
 52400                           ;usb_device_hid.c: 239: }
 52401                           
 52402                           ;usb_device_hid.c: 238: break;
 52403  0124DC  0012               	return	
 52404  0124DE                     i2l432:
 52405                           
 52406                           ; BSR set to: 13
 52407                           
 52408                           ; BSR set to: 13
 52409  0124DE  5131               	movf	49,w,b	;volatile
 52410                           
 52411                           ; Switch size 1, requested type "space"
 52412                           ; Number of cases is 6, Range of values is 1 to 11
 52413                           ; switch strategies available:
 52414                           ; Name         Instructions Cycles
 52415                           ; simple_byte           19    10 (average)
 52416                           ;	Chosen strategy is simple_byte
 52417  0124E0  0A01               	xorlw	1	; case 1
 52418  0124E2  B4D8               	btfsc	status,2,c
 52419  0124E4  0012               	return	
 52420  0124E6  0A03               	xorlw	3	; case 2
 52421  0124E8  B4D8               	btfsc	status,2,c
 52422  0124EA  D7D9               	goto	i2l436
 52423  0124EC  0A01               	xorlw	1	; case 3
 52424  0124EE  B4D8               	btfsc	status,2,c
 52425  0124F0  D7E6               	goto	i2l438
 52426  0124F2  0A0A               	xorlw	10	; case 9
 52427  0124F4  B4D8               	btfsc	status,2,c
 52428  0124F6  0012               	return	
 52429  0124F8  0A03               	xorlw	3	; case 10
 52430  0124FA  B4D8               	btfsc	status,2,c
 52431  0124FC  D7DB               	goto	i2l437
 52432  0124FE  0A01               	xorlw	1	; case 11
 52433  012500  A4D8               	btfss	status,2,c
 52434  012502  0012               	return	
 52435  012504  D7E7               	goto	i2l439
 52436  012506                     __end_of_USBCheckHIDRequest:
 52437                           	opt stack 0
 52438                           tosu	equ	0xFFF
 52439                           tosh	equ	0xFFE
 52440                           tosl	equ	0xFFD
 52441                           pclatu	equ	0xFFB
 52442                           pclath	equ	0xFFA
 52443                           tblptru	equ	0xFF8
 52444                           tblptrh	equ	0xFF7
 52445                           tblptrl	equ	0xFF6
 52446                           tablat	equ	0xFF5
 52447                           prodh	equ	0xFF4
 52448                           prodl	equ	0xFF3
 52449                           intcon	equ	0xFF2
 52450                           indf0	equ	0xFEF
 52451                           postinc0	equ	0xFEE
 52452                           fsr0h	equ	0xFEA
 52453                           fsr0l	equ	0xFE9
 52454                           wreg	equ	0xFE8
 52455                           indf1	equ	0xFE7
 52456                           postinc1	equ	0xFE6
 52457                           postdec1	equ	0xFE5
 52458                           plusw1	equ	0xFE3
 52459                           fsr1h	equ	0xFE2
 52460                           fsr1l	equ	0xFE1
 52461                           indf2	equ	0xFDF
 52462                           postinc2	equ	0xFDE
 52463                           postdec2	equ	0xFDD
 52464                           plusw2	equ	0xFDB
 52465                           fsr2h	equ	0xFDA
 52466                           fsr2l	equ	0xFD9
 52467                           status	equ	0xFD8
 52468                           
 52469 ;; *************** function _MSDTransferTerminated *****************
 52470 ;; Defined at:
 52471 ;;		line 1674 in file "usb_device_msd.c"
 52472 ;; Parameters:    Size  Location     Type
 52473 ;;  handle          2   11[COMRAM] PTR void 
 52474 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52475 ;;		 -> BDT(48), 
 52476 ;; Auto vars:     Size  Location     Type
 52477 ;;		None
 52478 ;; Return value:  Size  Location     Type
 52479 ;;                  1    wreg      void 
 52480 ;; Registers used:
 52481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52482 ;; Tracked objects:
 52483 ;;		On entry : 0/0
 52484 ;;		On exit  : 0/0
 52485 ;;		Unchanged: 0/0
 52486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52490 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52491 ;;Total ram usage:        4 bytes
 52492 ;; Hardware stack levels used:    1
 52493 ;; Hardware stack levels required when called:    1
 52494 ;; This function calls:
 52495 ;;		i2_USBStallEndpoint
 52496 ;;		i2_USBTransferOnePacket
 52497 ;; This function is called by:
 52498 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52499 ;; This function uses a non-reentrant model
 52500 ;;
 52501                           
 52502                           	psect	text218
 52503  014954                     __ptext218:
 52504                           	opt stack 0
 52505  014954                     _MSDTransferTerminated:
 52506                           	opt stack 14
 52507                           
 52508                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 52509                           
 52510                           ; BSR set to: 13
 52511                           ;incstack = 0
 52512  014954  0101               	movlb	1	; () banked
 52513  014956  515B               	movf	_MSDCBWValid& (0+255),w,b
 52514  014958  A4D8               	btfss	status,2,c
 52515  01495A  D00B               	goto	i2l780
 52516                           
 52517                           ; BSR set to: 1
 52518                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 52519  01495C  0E01               	movlw	1
 52520  01495E  6E01               	movwf	i2USBStallEndpoint@dir,c
 52521  014960  0E02               	movlw	2
 52522  014962  EC6D  F088         	call	i2_USBStallEndpoint
 52523                           
 52524                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 52525  014966  0E00               	movlw	0
 52526  014968  6E01               	movwf	i2USBStallEndpoint@dir,c
 52527  01496A  0E02               	movlw	2
 52528  01496C  EC6D  F088         	call	i2_USBStallEndpoint
 52529                           
 52530                           ;usb_device_msd.c: 1681: }
 52531  014970  0012               	return	
 52532  014972                     i2l780:
 52533  014972  C125  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 52534  014976  C126  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 52535  01497A  500E               	movf	_MSDTransferTerminated$2623,w,c
 52536  01497C  180C               	xorwf	MSDTransferTerminated@handle,w,c
 52537  01497E  E114               	bnz	i2l783
 52538  014980  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 52539  014982  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 52540  014984  A4D8               	btfss	status,2,c
 52541  014986  0012               	return	
 52542                           
 52543                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 52544  014988  0E00               	movlw	0
 52545  01498A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52546  01498C  0E40               	movlw	64
 52547  01498E  6E02               	movwf	i2USBTransferOnePacket@data,c
 52548  014990  0E0D               	movlw	13
 52549  014992  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52550  014994  0E40               	movlw	64
 52551  014996  6E04               	movwf	i2USBTransferOnePacket@len,c
 52552  014998  0E02               	movlw	2
 52553  01499A  ECF0  F088         	call	i2_USBTransferOnePacket
 52554  01499E  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52555  0149A2  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52556  0149A6  0012               	return	
 52557  0149A8                     i2l783:
 52558  0149A8  0012               	return		;funcret
 52559  0149AA                     __end_of_MSDTransferTerminated:
 52560                           	opt stack 0
 52561                           tosu	equ	0xFFF
 52562                           tosh	equ	0xFFE
 52563                           tosl	equ	0xFFD
 52564                           pclatu	equ	0xFFB
 52565                           pclath	equ	0xFFA
 52566                           tblptru	equ	0xFF8
 52567                           tblptrh	equ	0xFF7
 52568                           tblptrl	equ	0xFF6
 52569                           tablat	equ	0xFF5
 52570                           prodh	equ	0xFF4
 52571                           prodl	equ	0xFF3
 52572                           intcon	equ	0xFF2
 52573                           indf0	equ	0xFEF
 52574                           postinc0	equ	0xFEE
 52575                           fsr0h	equ	0xFEA
 52576                           fsr0l	equ	0xFE9
 52577                           wreg	equ	0xFE8
 52578                           indf1	equ	0xFE7
 52579                           postinc1	equ	0xFE6
 52580                           postdec1	equ	0xFE5
 52581                           plusw1	equ	0xFE3
 52582                           fsr1h	equ	0xFE2
 52583                           fsr1l	equ	0xFE1
 52584                           indf2	equ	0xFDF
 52585                           postinc2	equ	0xFDE
 52586                           postdec2	equ	0xFDD
 52587                           plusw2	equ	0xFDB
 52588                           fsr2h	equ	0xFDA
 52589                           fsr2l	equ	0xFD9
 52590                           status	equ	0xFD8
 52591                           
 52592 ;; *************** function i2_USBStallEndpoint *****************
 52593 ;; Defined at:
 52594 ;;		line 1073 in file "usb_device.c"
 52595 ;; Parameters:    Size  Location     Type
 52596 ;;  ep              1    wreg     unsigned char 
 52597 ;;  dir             1    0[COMRAM] unsigned char 
 52598 ;; Auto vars:     Size  Location     Type
 52599 ;;  ep              1    5[COMRAM] unsigned char 
 52600 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 52601 ;;		 -> BDT(48), 
 52602 ;; Return value:  Size  Location     Type
 52603 ;;                  1    wreg      void 
 52604 ;; Registers used:
 52605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52606 ;; Tracked objects:
 52607 ;;		On entry : 0/0
 52608 ;;		On exit  : 0/0
 52609 ;;		Unchanged: 0/0
 52610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52611 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52612 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52613 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52614 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52615 ;;Total ram usage:        8 bytes
 52616 ;; Hardware stack levels used:    1
 52617 ;; This function calls:
 52618 ;;		Nothing
 52619 ;; This function is called by:
 52620 ;;		_MSDTransferTerminated
 52621 ;; This function uses a non-reentrant model
 52622 ;;
 52623                           
 52624                           	psect	text219
 52625  0110DA                     __ptext219:
 52626                           	opt stack 0
 52627  0110DA                     i2_USBStallEndpoint:
 52628                           	opt stack 14
 52629                           
 52630                           ;incstack = 0
 52631                           ;i2USBStallEndpoint@ep stored from wreg
 52632  0110DA  6E06               	movwf	i2USBStallEndpoint@ep,c
 52633                           
 52634                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 52635  0110DC  5006               	movf	i2USBStallEndpoint@ep,w,c
 52636  0110DE  A4D8               	btfss	status,2,c
 52637  0110E0  D02B               	goto	i2l192
 52638                           
 52639                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 52640  0110E2  EE20 F001          	lfsr	2,1
 52641  0110E6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52642  0110E8  26D9               	addwf	fsr2l,f,c
 52643  0110EA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52644  0110EC  22DA               	addwfc	fsr2h,f,c
 52645  0110EE  0E08               	movlw	8
 52646  0110F0  6EDF               	movwf	indf2,c
 52647                           
 52648                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52649  0110F2  EE20 F002          	lfsr	2,2
 52650  0110F6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52651  0110F8  26D9               	addwf	fsr2l,f,c
 52652  0110FA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52653  0110FC  22DA               	addwfc	fsr2h,f,c
 52654  0110FE  0E30               	movlw	48
 52655  011100  6EDE               	movwf	postinc2,c
 52656  011102  0E0D               	movlw	13
 52657  011104  6EDD               	movwf	postdec2,c
 52658                           
 52659                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 52660  011106  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52661  01110A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52662  01110E  0E0C               	movlw	12
 52663  011110  6EDF               	movwf	indf2,c
 52664                           
 52665                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52666  011112  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52667  011116  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52668  01111A  0E00               	movlw	0
 52669  01111C  8EDB               	bsf	plusw2,7,c
 52670                           
 52671                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 52672  01111E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52673  011122  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52674  011126  0E04               	movlw	4
 52675  011128  6EDF               	movwf	indf2,c
 52676                           
 52677                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52678  01112A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52679  01112E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52680  011132  0E00               	movlw	0
 52681  011134  8EDB               	bsf	plusw2,7,c
 52682                           
 52683                           ;usb_device.c: 1089: }
 52684  011136  0012               	return	
 52685  011138                     i2l192:
 52686                           
 52687                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 52688  011138  5001               	movf	i2USBStallEndpoint@dir,w,c
 52689  01113A  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 52690  01113C  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 52691  01113E  90D8               	bcf	status,0,c
 52692  011140  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52693  011142  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52694  011144  5006               	movf	i2USBStallEndpoint@ep,w,c
 52695  011146  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 52696  011148  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 52697  01114A  90D8               	bcf	status,0,c
 52698  01114C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52699  01114E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52700  011150  90D8               	bcf	status,0,c
 52701  011152  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52702  011154  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52703  011156  5002               	movf	??i2_USBStallEndpoint,w,c
 52704  011158  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 52705  01115A  5003               	movf	??i2_USBStallEndpoint+1,w,c
 52706  01115C  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 52707  01115E  90D8               	bcf	status,0,c
 52708  011160  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52709  011162  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52710  011164  90D8               	bcf	status,0,c
 52711  011166  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52712  011168  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52713  01116A  0E00               	movlw	0
 52714  01116C  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 52715  01116E  6E07               	movwf	i2USBStallEndpoint@p,c
 52716  011170  0E0D               	movlw	13
 52717  011172  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 52718  011174  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52719                           
 52720                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 52721  011176  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52722  01117A  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52723  01117E  0E00               	movlw	0
 52724  011180  84DB               	bsf	plusw2,2,c
 52725                           
 52726                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 52727  011182  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52728  011186  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52729  01118A  0E00               	movlw	0
 52730  01118C  8EDB               	bsf	plusw2,7,c
 52731                           
 52732                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 52733  01118E  5006               	movf	i2USBStallEndpoint@ep,w,c
 52734  011190  0D04               	mullw	4
 52735  011192  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 52736  011196  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 52737  01119A  5001               	movf	i2USBStallEndpoint@dir,w,c
 52738  01119C  0D02               	mullw	2
 52739  01119E  50F3               	movf	prodl,w,c
 52740  0111A0  2602               	addwf	??i2_USBStallEndpoint,f,c
 52741  0111A2  50F4               	movf	prodh,w,c
 52742  0111A4  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52743  0111A6  90D8               	bcf	status,0,c
 52744  0111A8  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52745  0111AA  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52746  0111AC  90D8               	bcf	status,0,c
 52747  0111AE  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52748  0111B0  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52749  0111B2  0E04               	movlw	4
 52750  0111B4  2602               	addwf	??i2_USBStallEndpoint,f,c
 52751  0111B6  0E00               	movlw	0
 52752  0111B8  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52753  0111BA  0E00               	movlw	0
 52754  0111BC  2402               	addwf	??i2_USBStallEndpoint,w,c
 52755  0111BE  6E07               	movwf	i2USBStallEndpoint@p,c
 52756  0111C0  0E0D               	movlw	13
 52757  0111C2  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 52758  0111C4  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52759                           
 52760                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 52761  0111C6  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52762  0111CA  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52763  0111CE  0E00               	movlw	0
 52764  0111D0  84DB               	bsf	plusw2,2,c
 52765                           
 52766                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 52767  0111D2  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52768  0111D6  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52769  0111DA  0E00               	movlw	0
 52770  0111DC  8EDB               	bsf	plusw2,7,c
 52771  0111DE  0012               	return	
 52772  0111E0                     __end_ofi2_USBStallEndpoint:
 52773                           	opt stack 0
 52774                           tosu	equ	0xFFF
 52775                           tosh	equ	0xFFE
 52776                           tosl	equ	0xFFD
 52777                           pclatu	equ	0xFFB
 52778                           pclath	equ	0xFFA
 52779                           tblptru	equ	0xFF8
 52780                           tblptrh	equ	0xFF7
 52781                           tblptrl	equ	0xFF6
 52782                           tablat	equ	0xFF5
 52783                           prodh	equ	0xFF4
 52784                           prodl	equ	0xFF3
 52785                           intcon	equ	0xFF2
 52786                           indf0	equ	0xFEF
 52787                           postinc0	equ	0xFEE
 52788                           fsr0h	equ	0xFEA
 52789                           fsr0l	equ	0xFE9
 52790                           wreg	equ	0xFE8
 52791                           indf1	equ	0xFE7
 52792                           postinc1	equ	0xFE6
 52793                           postdec1	equ	0xFE5
 52794                           plusw1	equ	0xFE3
 52795                           fsr1h	equ	0xFE2
 52796                           fsr1l	equ	0xFE1
 52797                           indf2	equ	0xFDF
 52798                           postinc2	equ	0xFDE
 52799                           postdec2	equ	0xFDD
 52800                           plusw2	equ	0xFDB
 52801                           fsr2h	equ	0xFDA
 52802                           fsr2l	equ	0xFD9
 52803                           status	equ	0xFD8
 52804                           
 52805 ;; *************** function _APP_DeviceMSDInitialize *****************
 52806 ;; Defined at:
 52807 ;;		line 84 in file "app_device_msd.c"
 52808 ;; Parameters:    Size  Location     Type
 52809 ;;		None
 52810 ;; Auto vars:     Size  Location     Type
 52811 ;;		None
 52812 ;; Return value:  Size  Location     Type
 52813 ;;                  1    wreg      void 
 52814 ;; Registers used:
 52815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52816 ;; Tracked objects:
 52817 ;;		On entry : 0/0
 52818 ;;		On exit  : 0/0
 52819 ;;		Unchanged: 0/0
 52820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52825 ;;Total ram usage:        0 bytes
 52826 ;; Hardware stack levels used:    1
 52827 ;; Hardware stack levels required when called:    2
 52828 ;; This function calls:
 52829 ;;		_USBEnableEndpoint
 52830 ;;		_USBMSDInit
 52831 ;; This function is called by:
 52832 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52833 ;; This function uses a non-reentrant model
 52834 ;;
 52835                           
 52836                           	psect	text220
 52837  0158B8                     __ptext220:
 52838                           	opt stack 0
 52839  0158B8                     _APP_DeviceMSDInitialize:
 52840                           	opt stack 13
 52841                           
 52842                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 52843                           
 52844                           ;incstack = 0
 52845  0158B8  0E1E               	movlw	30
 52846  0158BA  6E09               	movwf	USBEnableEndpoint@options,c
 52847  0158BC  0E02               	movlw	2
 52848  0158BE  EC58  F0A8         	call	_USBEnableEndpoint
 52849                           
 52850                           ;app_device_msd.c: 93: USBMSDInit();
 52851  0158C2  EC57  F086         	call	_USBMSDInit	;wreg free
 52852  0158C6  0012               	return		;funcret
 52853  0158C8                     __end_of_APP_DeviceMSDInitialize:
 52854                           	opt stack 0
 52855                           tosu	equ	0xFFF
 52856                           tosh	equ	0xFFE
 52857                           tosl	equ	0xFFD
 52858                           pclatu	equ	0xFFB
 52859                           pclath	equ	0xFFA
 52860                           tblptru	equ	0xFF8
 52861                           tblptrh	equ	0xFF7
 52862                           tblptrl	equ	0xFF6
 52863                           tablat	equ	0xFF5
 52864                           prodh	equ	0xFF4
 52865                           prodl	equ	0xFF3
 52866                           intcon	equ	0xFF2
 52867                           indf0	equ	0xFEF
 52868                           postinc0	equ	0xFEE
 52869                           fsr0h	equ	0xFEA
 52870                           fsr0l	equ	0xFE9
 52871                           wreg	equ	0xFE8
 52872                           indf1	equ	0xFE7
 52873                           postinc1	equ	0xFE6
 52874                           postdec1	equ	0xFE5
 52875                           plusw1	equ	0xFE3
 52876                           fsr1h	equ	0xFE2
 52877                           fsr1l	equ	0xFE1
 52878                           indf2	equ	0xFDF
 52879                           postinc2	equ	0xFDE
 52880                           postdec2	equ	0xFDD
 52881                           plusw2	equ	0xFDB
 52882                           fsr2h	equ	0xFDA
 52883                           fsr2l	equ	0xFD9
 52884                           status	equ	0xFD8
 52885                           
 52886 ;; *************** function _USBMSDInit *****************
 52887 ;; Defined at:
 52888 ;;		line 142 in file "usb_device_msd.c"
 52889 ;; Parameters:    Size  Location     Type
 52890 ;;		None
 52891 ;; Auto vars:     Size  Location     Type
 52892 ;;		None
 52893 ;; Return value:  Size  Location     Type
 52894 ;;                  1    wreg      void 
 52895 ;; Registers used:
 52896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52897 ;; Tracked objects:
 52898 ;;		On entry : 0/0
 52899 ;;		On exit  : 0/0
 52900 ;;		Unchanged: 0/0
 52901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52904 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52905 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52906 ;;Total ram usage:        3 bytes
 52907 ;; Hardware stack levels used:    1
 52908 ;; Hardware stack levels required when called:    1
 52909 ;; This function calls:
 52910 ;;		i2_ExternalFlash_MediaDetect
 52911 ;;		i2_ExternalFlash_MediaInitialize
 52912 ;;		i2_ResetSenseData
 52913 ;;		i2_USBTransferOnePacket
 52914 ;; This function is called by:
 52915 ;;		_APP_DeviceMSDInitialize
 52916 ;; This function uses a non-reentrant model
 52917 ;;
 52918                           
 52919                           	psect	text221
 52920  010CAE                     __ptext221:
 52921                           	opt stack 0
 52922  010CAE                     _USBMSDInit:
 52923                           	opt stack 13
 52924                           
 52925                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 52926                           
 52927                           ;incstack = 0
 52928  010CAE  0E00               	movlw	0
 52929  010CB0  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52930  010CB2  0E40               	movlw	64
 52931  010CB4  6E02               	movwf	i2USBTransferOnePacket@data,c
 52932  010CB6  0E0D               	movlw	13
 52933  010CB8  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52934  010CBA  0E40               	movlw	64
 52935  010CBC  6E04               	movwf	i2USBTransferOnePacket@len,c
 52936  010CBE  0E02               	movlw	2
 52937  010CC0  ECF0  F088         	call	i2_USBTransferOnePacket
 52938  010CC4  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52939  010CC8  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52940  010CCC  C11F  F149         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 52941  010CD0  C120  F14A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 52942                           
 52943                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 52944  010CD4  0E00               	movlw	0
 52945  010CD6  0101               	movlb	1	; () banked
 52946  010CD8  6F63               	movwf	_MSD_State& (0+255),b
 52947                           
 52948                           ; BSR set to: 1
 52949                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 52950  010CDA  6962               	setf	_MSDCommandState& (0+255),b
 52951                           
 52952                           ; BSR set to: 1
 52953                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 52954  010CDC  0E00               	movlw	0
 52955  010CDE  6F61               	movwf	_MSDReadState& (0+255),b
 52956                           
 52957                           ; BSR set to: 1
 52958                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 52959  010CE0  0E00               	movlw	0
 52960  010CE2  6F60               	movwf	_MSDWriteState& (0+255),b
 52961                           
 52962                           ; BSR set to: 1
 52963                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 52964  010CE4  0E00               	movlw	0
 52965  010CE6  6F5C               	movwf	_MSDHostNoData& (0+255),b
 52966                           
 52967                           ; BSR set to: 1
 52968                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 52969  010CE8  0E00               	movlw	0
 52970  010CEA  0102               	movlb	2	; () banked
 52971  010CEC  6F2E               	movwf	_gblNumBLKS& (0+255),b
 52972  010CEE  0E00               	movlw	0
 52973  010CF0  6F2F               	movwf	(_gblNumBLKS+1)& (0+255),b
 52974  010CF2  0E00               	movlw	0
 52975  010CF4  6F30               	movwf	(_gblNumBLKS+2)& (0+255),b
 52976  010CF6  0E00               	movlw	0
 52977  010CF8  6F31               	movwf	(_gblNumBLKS+3)& (0+255),b
 52978                           
 52979                           ; BSR set to: 2
 52980                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 52981  010CFA  0E00               	movlw	0
 52982  010CFC  6F2A               	movwf	_gblBLKLen& (0+255),b
 52983  010CFE  0E00               	movlw	0
 52984  010D00  6F2B               	movwf	(_gblBLKLen+1)& (0+255),b
 52985  010D02  0E00               	movlw	0
 52986  010D04  6F2C               	movwf	(_gblBLKLen+2)& (0+255),b
 52987  010D06  0E00               	movlw	0
 52988  010D08  6F2D               	movwf	(_gblBLKLen+3)& (0+255),b
 52989                           
 52990                           ; BSR set to: 2
 52991                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 52992  010D0A  0E01               	movlw	1
 52993  010D0C  0101               	movlb	1	; () banked
 52994  010D0E  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52995                           
 52996                           ; BSR set to: 1
 52997                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 52998  010D10  0E00               	movlw	0
 52999  010D12  6F48               	movwf	(_gblMediaPresent+1)& (0+255),b
 53000  010D14  0E00               	movlw	0
 53001  010D16  6F47               	movwf	_gblMediaPresent& (0+255),b
 53002                           
 53003                           ; BSR set to: 1
 53004                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 53005  010D18  0E00               	movlw	0
 53006  010D1A  0102               	movlb	2	; () banked
 53007  010D1C  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 53008  010D1E  D04A               	goto	i2l534
 53009  010D20                     
 53010                           ; BSR set to: 2
 53011                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 53012                           
 53013                           ; BSR set to: 2
 53014  010D20  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53015  010D22  0D01               	mullw	1
 53016  010D24  0E5D               	movlw	low _SoftDetach
 53017  010D26  24F3               	addwf	prodl,w,c
 53018  010D28  6ED9               	movwf	fsr2l,c
 53019  010D2A  0E01               	movlw	high _SoftDetach
 53020  010D2C  20F4               	addwfc	prodh,w,c
 53021  010D2E  6EDA               	movwf	fsr2h,c
 53022  010D30  0E00               	movlw	0
 53023  010D32  6EDF               	movwf	indf2,c
 53024                           
 53025                           ; BSR set to: 2
 53026                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 53027  010D34  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 53028  010D38  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 53029  010D3C  EE22  F092         	lfsr	2,_LUN+9
 53030  010D40  D801               	call	i2u984_48
 53031  010D42  D00A               	goto	i2u984_49
 53032  010D44                     i2u984_48:
 53033  010D44  0005               	push	
 53034  010D46  6EFA               	movwf	pclath,c
 53035  010D48  50DE               	movf	postinc2,w,c
 53036  010D4A  6EFD               	movwf	tosl,c
 53037  010D4C  50DE               	movf	postinc2,w,c
 53038  010D4E  6EFE               	movwf	tosh,c
 53039  010D50  50DE               	movf	postinc2,w,c
 53040  010D52  6EFF               	movwf	tosu,c
 53041  010D54  50FA               	movf	pclath,w,c
 53042  010D56  0012               	return		;indir
 53043  010D58                     i2u984_49:
 53044  010D58  0900               	iorlw	0
 53045  010D5A  B4D8               	btfsc	status,2,c
 53046  010D5C  D027               	goto	i2l537
 53047                           
 53048                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 53049  010D5E  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 53050  010D62  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 53051  010D66  D801               	call	i2u986_48
 53052  010D68  D00B               	goto	i2u986_49
 53053  010D6A                     i2u986_48:
 53054  010D6A  0005               	push	
 53055  010D6C  6EFA               	movwf	pclath,c
 53056  010D6E  0102               	movlb	2	; () banked
 53057  010D70  5189               	movf	_LUN& (0+255),w,b
 53058  010D72  6EFD               	movwf	tosl,c
 53059  010D74  518A               	movf	(_LUN+1)& (0+255),w,b
 53060  010D76  6EFE               	movwf	tosh,c
 53061  010D78  518B               	movf	(_LUN+2)& (0+255),w,b
 53062  010D7A  6EFF               	movwf	tosu,c
 53063  010D7C  50FA               	movf	pclath,w,c
 53064  010D7E  0012               	return		;indir
 53065  010D80                     i2u986_49:
 53066  010D80  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 53067  010D82  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 53068  010D84  B4D8               	btfsc	status,2,c
 53069  010D86  D012               	goto	i2l537
 53070                           
 53071                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 53072  010D88  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 53073  010D8C  0E01               	movlw	1
 53074  010D8E  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 53075  010D90  0E00               	movlw	0
 53076  010D92  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 53077  010D94  2A0C               	incf	??_USBMSDInit,f,c
 53078  010D96  D003               	goto	i2u988_44
 53079  010D98                     i2u988_45:
 53080  010D98  90D8               	bcf	status,0,c
 53081  010D9A  360D               	rlcf	??_USBMSDInit+1,f,c
 53082  010D9C  360E               	rlcf	??_USBMSDInit+2,f,c
 53083  010D9E                     i2u988_44:
 53084  010D9E  2E0C               	decfsz	??_USBMSDInit,f,c
 53085  010DA0  D7FB               	goto	i2u988_45
 53086  010DA2  500D               	movf	??_USBMSDInit+1,w,c
 53087  010DA4  0101               	movlb	1	; () banked
 53088  010DA6  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 53089  010DA8  500E               	movf	??_USBMSDInit+2,w,c
 53090  010DAA  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 53091  010DAC                     i2l537:
 53092                           
 53093                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 53094                           
 53095                           ; BSR set to: 1
 53096                           
 53097                           ; BSR set to: 1
 53098  010DAC  ECA8  F0A1         	call	i2_ResetSenseData	;wreg free
 53099  010DB0  0102               	movlb	2	; () banked
 53100  010DB2  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 53101  010DB4                     i2l534:
 53102                           
 53103                           ; BSR set to: 2
 53104                           
 53105                           ; BSR set to: 2
 53106  010DB4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53107  010DB6  A4D8               	btfss	status,2,c
 53108  010DB8  0012               	return	
 53109  010DBA  D7B2               	goto	i2l535
 53110  010DBC                     __end_of_USBMSDInit:
 53111                           	opt stack 0
 53112                           tosu	equ	0xFFF
 53113                           tosh	equ	0xFFE
 53114                           tosl	equ	0xFFD
 53115                           pclatu	equ	0xFFB
 53116                           pclath	equ	0xFFA
 53117                           tblptru	equ	0xFF8
 53118                           tblptrh	equ	0xFF7
 53119                           tblptrl	equ	0xFF6
 53120                           tablat	equ	0xFF5
 53121                           prodh	equ	0xFF4
 53122                           prodl	equ	0xFF3
 53123                           intcon	equ	0xFF2
 53124                           indf0	equ	0xFEF
 53125                           postinc0	equ	0xFEE
 53126                           fsr0h	equ	0xFEA
 53127                           fsr0l	equ	0xFE9
 53128                           wreg	equ	0xFE8
 53129                           indf1	equ	0xFE7
 53130                           postinc1	equ	0xFE6
 53131                           postdec1	equ	0xFE5
 53132                           plusw1	equ	0xFE3
 53133                           fsr1h	equ	0xFE2
 53134                           fsr1l	equ	0xFE1
 53135                           indf2	equ	0xFDF
 53136                           postinc2	equ	0xFDE
 53137                           postdec2	equ	0xFDD
 53138                           plusw2	equ	0xFDB
 53139                           fsr2h	equ	0xFDA
 53140                           fsr2l	equ	0xFD9
 53141                           status	equ	0xFD8
 53142                           
 53143 ;; *************** function i2_ResetSenseData *****************
 53144 ;; Defined at:
 53145 ;;		line 1373 in file "usb_device_msd.c"
 53146 ;; Parameters:    Size  Location     Type
 53147 ;;		None
 53148 ;; Auto vars:     Size  Location     Type
 53149 ;;		None
 53150 ;; Return value:  Size  Location     Type
 53151 ;;                  1    wreg      void 
 53152 ;; Registers used:
 53153 ;;		wreg, status,2
 53154 ;; Tracked objects:
 53155 ;;		On entry : 0/0
 53156 ;;		On exit  : 0/0
 53157 ;;		Unchanged: 0/0
 53158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53163 ;;Total ram usage:        0 bytes
 53164 ;; Hardware stack levels used:    1
 53165 ;; This function calls:
 53166 ;;		Nothing
 53167 ;; This function is called by:
 53168 ;;		_USBMSDInit
 53169 ;; This function uses a non-reentrant model
 53170 ;;
 53171                           
 53172                           	psect	text222
 53173  014350                     __ptext222:
 53174                           	opt stack 0
 53175  014350                     i2_ResetSenseData:
 53176                           	opt stack 13
 53177                           
 53178                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 53179                           
 53180                           ; BSR set to: 2
 53181                           ;incstack = 0
 53182  014350  0101               	movlb	1	; () banked
 53183  014352  9100               	bcf	_gblSenseData& (0+255),0,b
 53184  014354  9300               	bcf	_gblSenseData& (0+255),1,b
 53185  014356  9500               	bcf	_gblSenseData& (0+255),2,b
 53186  014358  9700               	bcf	_gblSenseData& (0+255),3,b
 53187  01435A  8900               	bsf	_gblSenseData& (0+255),4,b
 53188  01435C  8B00               	bsf	_gblSenseData& (0+255),5,b
 53189  01435E  8D00               	bsf	_gblSenseData& (0+255),6,b
 53190                           
 53191                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 53192  014360  9F00               	bcf	_gblSenseData& (0+255),7,b
 53193                           
 53194                           ; BSR set to: 1
 53195                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 53196  014362  0E00               	movlw	0
 53197  014364  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 53198                           
 53199                           ; BSR set to: 1
 53200                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 53201  014366  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 53202  014368  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 53203  01436A  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 53204  01436C  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 53205                           
 53206                           ; BSR set to: 1
 53207                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 53208  01436E  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 53209                           
 53210                           ; BSR set to: 1
 53211                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 53212  014370  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 53213                           
 53214                           ; BSR set to: 1
 53215                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 53216  014372  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 53217                           
 53218                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 53219  014374  0E00               	movlw	0
 53220  014376  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 53221                           
 53222                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 53223  014378  0E00               	movlw	0
 53224  01437A  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 53225                           
 53226                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 53227  01437C  0E00               	movlw	0
 53228  01437E  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 53229                           
 53230                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 53231  014380  0E00               	movlw	0
 53232  014382  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 53233                           
 53234                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 53235  014384  0E0A               	movlw	10
 53236  014386  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 53237                           
 53238                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 53239  014388  0E00               	movlw	0
 53240  01438A  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 53241  01438C  0E00               	movlw	0
 53242  01438E  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 53243  014390  0E00               	movlw	0
 53244  014392  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 53245  014394  0E00               	movlw	0
 53246  014396  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 53247                           
 53248                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 53249  014398  0E00               	movlw	0
 53250  01439A  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 53251                           
 53252                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 53253  01439C  0E00               	movlw	0
 53254  01439E  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 53255                           
 53256                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 53257  0143A0  0E00               	movlw	0
 53258  0143A2  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 53259                           
 53260                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 53261  0143A4  0E00               	movlw	0
 53262  0143A6  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 53263                           
 53264                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 53265  0143A8  0E00               	movlw	0
 53266  0143AA  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 53267                           
 53268                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 53269  0143AC  0E00               	movlw	0
 53270  0143AE  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 53271                           
 53272                           ; BSR set to: 1
 53273  0143B0  0012               	return		;funcret
 53274  0143B2                     __end_ofi2_ResetSenseData:
 53275                           	opt stack 0
 53276                           tosu	equ	0xFFF
 53277                           tosh	equ	0xFFE
 53278                           tosl	equ	0xFFD
 53279                           pclatu	equ	0xFFB
 53280                           pclath	equ	0xFFA
 53281                           tblptru	equ	0xFF8
 53282                           tblptrh	equ	0xFF7
 53283                           tblptrl	equ	0xFF6
 53284                           tablat	equ	0xFF5
 53285                           prodh	equ	0xFF4
 53286                           prodl	equ	0xFF3
 53287                           intcon	equ	0xFF2
 53288                           indf0	equ	0xFEF
 53289                           postinc0	equ	0xFEE
 53290                           fsr0h	equ	0xFEA
 53291                           fsr0l	equ	0xFE9
 53292                           wreg	equ	0xFE8
 53293                           indf1	equ	0xFE7
 53294                           postinc1	equ	0xFE6
 53295                           postdec1	equ	0xFE5
 53296                           plusw1	equ	0xFE3
 53297                           fsr1h	equ	0xFE2
 53298                           fsr1l	equ	0xFE1
 53299                           indf2	equ	0xFDF
 53300                           postinc2	equ	0xFDE
 53301                           postdec2	equ	0xFDD
 53302                           plusw2	equ	0xFDB
 53303                           fsr2h	equ	0xFDA
 53304                           fsr2l	equ	0xFD9
 53305                           status	equ	0xFD8
 53306                           
 53307 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 53308 ;; Defined at:
 53309 ;;		line 10 in file "external_flash.c"
 53310 ;; Parameters:    Size  Location     Type
 53311 ;;  config          2    0[COMRAM] PTR void 
 53312 ;;		 -> NULL(0), 
 53313 ;; Auto vars:     Size  Location     Type
 53314 ;;		None
 53315 ;; Return value:  Size  Location     Type
 53316 ;;                  2    0[COMRAM] PTR struct .
 53317 ;; Registers used:
 53318 ;;		wreg, status,2, status,0
 53319 ;; Tracked objects:
 53320 ;;		On entry : 0/0
 53321 ;;		On exit  : 0/0
 53322 ;;		Unchanged: 0/0
 53323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53328 ;;Total ram usage:        2 bytes
 53329 ;; Hardware stack levels used:    1
 53330 ;; This function calls:
 53331 ;;		Nothing
 53332 ;; This function is called by:
 53333 ;;		_USBMSDInit
 53334 ;;		_MSDProcessCommand
 53335 ;; This function uses a non-reentrant model
 53336 ;;
 53337                           
 53338                           	psect	text223
 53339  01582A                     __ptext223:
 53340                           	opt stack 0
 53341  01582A                     i2_ExternalFlash_MediaInitialize:
 53342                           	opt stack 13
 53343                           
 53344                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 53345                           
 53346                           ; BSR set to: 1
 53347                           ;incstack = 0
 53348  01582A  0102               	movlb	2	; () banked
 53349  01582C  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 53350                           
 53351                           ; BSR set to: 2
 53352                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 53353  01582E  0E02               	movlw	2
 53354  015830  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 53355  015832  0E00               	movlw	0
 53356  015834  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 53357                           
 53358                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 53359  015836  0E00               	movlw	0
 53360  015838  6F84               	movwf	_mediaInformation& (0+255),b
 53361                           
 53362                           ; BSR set to: 2
 53363                           ;external_flash.c: 15: return &mediaInformation;
 53364  01583A  0E84               	movlw	low _mediaInformation
 53365  01583C  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 53366  01583E  0E02               	movlw	high _mediaInformation
 53367  015840  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 53368  015842  0012               	return	
 53369  015844                     __end_ofi2_ExternalFlash_MediaInitialize:
 53370                           	opt stack 0
 53371                           tosu	equ	0xFFF
 53372                           tosh	equ	0xFFE
 53373                           tosl	equ	0xFFD
 53374                           pclatu	equ	0xFFB
 53375                           pclath	equ	0xFFA
 53376                           tblptru	equ	0xFF8
 53377                           tblptrh	equ	0xFF7
 53378                           tblptrl	equ	0xFF6
 53379                           tablat	equ	0xFF5
 53380                           prodh	equ	0xFF4
 53381                           prodl	equ	0xFF3
 53382                           intcon	equ	0xFF2
 53383                           indf0	equ	0xFEF
 53384                           postinc0	equ	0xFEE
 53385                           fsr0h	equ	0xFEA
 53386                           fsr0l	equ	0xFE9
 53387                           wreg	equ	0xFE8
 53388                           indf1	equ	0xFE7
 53389                           postinc1	equ	0xFE6
 53390                           postdec1	equ	0xFE5
 53391                           plusw1	equ	0xFE3
 53392                           fsr1h	equ	0xFE2
 53393                           fsr1l	equ	0xFE1
 53394                           indf2	equ	0xFDF
 53395                           postinc2	equ	0xFDE
 53396                           postdec2	equ	0xFDD
 53397                           plusw2	equ	0xFDB
 53398                           fsr2h	equ	0xFDA
 53399                           fsr2l	equ	0xFD9
 53400                           status	equ	0xFD8
 53401                           
 53402 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 53403 ;; Defined at:
 53404 ;;		line 29 in file "external_flash.c"
 53405 ;; Parameters:    Size  Location     Type
 53406 ;;  config          2    0[COMRAM] PTR void 
 53407 ;;		 -> NULL(0), 
 53408 ;; Auto vars:     Size  Location     Type
 53409 ;;		None
 53410 ;; Return value:  Size  Location     Type
 53411 ;;                  1    wreg      unsigned char 
 53412 ;; Registers used:
 53413 ;;		wreg
 53414 ;; Tracked objects:
 53415 ;;		On entry : 0/0
 53416 ;;		On exit  : 0/0
 53417 ;;		Unchanged: 0/0
 53418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53423 ;;Total ram usage:        2 bytes
 53424 ;; Hardware stack levels used:    1
 53425 ;; This function calls:
 53426 ;;		Nothing
 53427 ;; This function is called by:
 53428 ;;		_USBMSDInit
 53429 ;;		_MSDProcessCommand
 53430 ;; This function uses a non-reentrant model
 53431 ;;
 53432                           
 53433                           	psect	text224
 53434  015978                     __ptext224:
 53435                           	opt stack 0
 53436  015978                     i2_ExternalFlash_MediaDetect:
 53437                           	opt stack 13
 53438                           
 53439                           ;external_flash.c: 31: return 1;
 53440                           
 53441                           ; BSR set to: 2
 53442                           ;incstack = 0
 53443  015978  0E01               	movlw	1
 53444  01597A  0012               	return	
 53445  01597C                     __end_ofi2_ExternalFlash_MediaDetect:
 53446                           	opt stack 0
 53447                           tosu	equ	0xFFF
 53448                           tosh	equ	0xFFE
 53449                           tosl	equ	0xFFD
 53450                           pclatu	equ	0xFFB
 53451                           pclath	equ	0xFFA
 53452                           tblptru	equ	0xFF8
 53453                           tblptrh	equ	0xFF7
 53454                           tblptrl	equ	0xFF6
 53455                           tablat	equ	0xFF5
 53456                           prodh	equ	0xFF4
 53457                           prodl	equ	0xFF3
 53458                           intcon	equ	0xFF2
 53459                           indf0	equ	0xFEF
 53460                           postinc0	equ	0xFEE
 53461                           fsr0h	equ	0xFEA
 53462                           fsr0l	equ	0xFE9
 53463                           wreg	equ	0xFE8
 53464                           indf1	equ	0xFE7
 53465                           postinc1	equ	0xFE6
 53466                           postdec1	equ	0xFE5
 53467                           plusw1	equ	0xFE3
 53468                           fsr1h	equ	0xFE2
 53469                           fsr1l	equ	0xFE1
 53470                           indf2	equ	0xFDF
 53471                           postinc2	equ	0xFDE
 53472                           postdec2	equ	0xFDD
 53473                           plusw2	equ	0xFDB
 53474                           fsr2h	equ	0xFDA
 53475                           fsr2l	equ	0xFD9
 53476                           status	equ	0xFD8
 53477                           
 53478 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 53479 ;; Defined at:
 53480 ;;		line 46 in file "app_device_custom_hid.c"
 53481 ;; Parameters:    Size  Location     Type
 53482 ;;		None
 53483 ;; Auto vars:     Size  Location     Type
 53484 ;;		None
 53485 ;; Return value:  Size  Location     Type
 53486 ;;                  1    wreg      void 
 53487 ;; Registers used:
 53488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53489 ;; Tracked objects:
 53490 ;;		On entry : 0/0
 53491 ;;		On exit  : 0/0
 53492 ;;		Unchanged: 0/0
 53493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53498 ;;Total ram usage:        0 bytes
 53499 ;; Hardware stack levels used:    1
 53500 ;; Hardware stack levels required when called:    2
 53501 ;; This function calls:
 53502 ;;		_USBEnableEndpoint
 53503 ;;		i2_USBTransferOnePacket
 53504 ;; This function is called by:
 53505 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53506 ;; This function uses a non-reentrant model
 53507 ;;
 53508                           
 53509                           	psect	text225
 53510  0152DA                     __ptext225:
 53511                           	opt stack 0
 53512  0152DA                     _APP_DeviceCustomHIDInitialize:
 53513                           	opt stack 13
 53514                           
 53515                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 53516                           
 53517                           ;incstack = 0
 53518  0152DA  0E00               	movlw	0
 53519  0152DC  0101               	movlb	1	; () banked
 53520  0152DE  6F41               	movwf	_USBInHandle& (0+255),b
 53521  0152E0  0E00               	movlw	0
 53522  0152E2  6F42               	movwf	(_USBInHandle+1)& (0+255),b
 53523                           
 53524                           ; BSR set to: 1
 53525                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 53526  0152E4  0E1E               	movlw	30
 53527  0152E6  6E09               	movwf	USBEnableEndpoint@options,c
 53528  0152E8  0E01               	movlw	1
 53529  0152EA  EC58  F0A8         	call	_USBEnableEndpoint
 53530                           
 53531                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 53532  0152EE  0E00               	movlw	0
 53533  0152F0  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53534  0152F2  0E78               	movlw	low _ReceivedDataBuffer
 53535  0152F4  6E02               	movwf	i2USBTransferOnePacket@data,c
 53536  0152F6  0E03               	movlw	high _ReceivedDataBuffer
 53537  0152F8  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53538  0152FA  0E40               	movlw	64
 53539  0152FC  6E04               	movwf	i2USBTransferOnePacket@len,c
 53540  0152FE  0E01               	movlw	1
 53541  015300  ECF0  F088         	call	i2_USBTransferOnePacket
 53542  015304  C001  F143         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 53543  015308  C002  F144         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 53544  01530C  0012               	return		;funcret
 53545  01530E                     __end_of_APP_DeviceCustomHIDInitialize:
 53546                           	opt stack 0
 53547                           tosu	equ	0xFFF
 53548                           tosh	equ	0xFFE
 53549                           tosl	equ	0xFFD
 53550                           pclatu	equ	0xFFB
 53551                           pclath	equ	0xFFA
 53552                           tblptru	equ	0xFF8
 53553                           tblptrh	equ	0xFF7
 53554                           tblptrl	equ	0xFF6
 53555                           tablat	equ	0xFF5
 53556                           prodh	equ	0xFF4
 53557                           prodl	equ	0xFF3
 53558                           intcon	equ	0xFF2
 53559                           indf0	equ	0xFEF
 53560                           postinc0	equ	0xFEE
 53561                           fsr0h	equ	0xFEA
 53562                           fsr0l	equ	0xFE9
 53563                           wreg	equ	0xFE8
 53564                           indf1	equ	0xFE7
 53565                           postinc1	equ	0xFE6
 53566                           postdec1	equ	0xFE5
 53567                           plusw1	equ	0xFE3
 53568                           fsr1h	equ	0xFE2
 53569                           fsr1l	equ	0xFE1
 53570                           indf2	equ	0xFDF
 53571                           postinc2	equ	0xFDE
 53572                           postdec2	equ	0xFDD
 53573                           plusw2	equ	0xFDB
 53574                           fsr2h	equ	0xFDA
 53575                           fsr2l	equ	0xFD9
 53576                           status	equ	0xFD8
 53577                           
 53578 ;; *************** function i2_USBTransferOnePacket *****************
 53579 ;; Defined at:
 53580 ;;		line 995 in file "usb_device.c"
 53581 ;; Parameters:    Size  Location     Type
 53582 ;;  ep              1    wreg     unsigned char 
 53583 ;;  dir             1    0[COMRAM] unsigned char 
 53584 ;;  data            2    1[COMRAM] PTR unsigned char 
 53585 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 53586 ;;		 -> msd_cbw(31), NULL(0), 
 53587 ;;  len             1    3[COMRAM] unsigned char 
 53588 ;; Auto vars:     Size  Location     Type
 53589 ;;  ep              1    8[COMRAM] unsigned char 
 53590 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 53591 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 53592 ;; Return value:  Size  Location     Type
 53593 ;;                  2    0[COMRAM] PTR void 
 53594 ;; Registers used:
 53595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53596 ;; Tracked objects:
 53597 ;;		On entry : 0/0
 53598 ;;		On exit  : 0/0
 53599 ;;		Unchanged: 0/0
 53600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53602 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53603 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53604 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53605 ;;Total ram usage:       11 bytes
 53606 ;; Hardware stack levels used:    1
 53607 ;; This function calls:
 53608 ;;		Nothing
 53609 ;; This function is called by:
 53610 ;;		_USBMSDInit
 53611 ;;		_USBCheckMSDRequest
 53612 ;;		_MSDTransferTerminated
 53613 ;;		_APP_DeviceCustomHIDInitialize
 53614 ;; This function uses a non-reentrant model
 53615 ;;
 53616                           
 53617                           	psect	text226
 53618  0111E0                     __ptext226:
 53619                           	opt stack 0
 53620  0111E0                     i2_USBTransferOnePacket:
 53621                           	opt stack 14
 53622                           
 53623                           ;incstack = 0
 53624                           ;i2USBTransferOnePacket@ep stored from wreg
 53625  0111E0  6E09               	movwf	i2USBTransferOnePacket@ep,c
 53626                           
 53627                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 53628  0111E2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53629  0111E4  B4D8               	btfsc	status,2,c
 53630  0111E6  D007               	goto	i2l184
 53631                           
 53632                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 53633  0111E8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53634  0111EA  0D02               	mullw	2
 53635  0111EC  0E1B               	movlw	low _pBDTEntryIn
 53636  0111EE  24F3               	addwf	prodl,w,c
 53637  0111F0  6ED9               	movwf	fsr2l,c
 53638  0111F2  0E01               	movlw	high _pBDTEntryIn
 53639  0111F4  D006               	goto	L85
 53640  0111F6                     i2l184:
 53641                           
 53642                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 53643  0111F6  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53644  0111F8  0D02               	mullw	2
 53645  0111FA  0E21               	movlw	low _pBDTEntryOut
 53646  0111FC  24F3               	addwf	prodl,w,c
 53647  0111FE  6ED9               	movwf	fsr2l,c
 53648  011200  0E01               	movlw	high _pBDTEntryOut
 53649  011202                     L85:
 53650  011202  20F4               	addwfc	prodh,w,c
 53651  011204  6EDA               	movwf	fsr2h,c
 53652  011206  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 53653  01120A  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 53654                           
 53655                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 53656  01120E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53657  011210  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 53658  011212  A4D8               	btfss	status,2,c
 53659  011214  D005               	goto	i2l186
 53660                           
 53661                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 53662  011216  0E00               	movlw	0
 53663  011218  6E01               	movwf	?i2_USBTransferOnePacket,c
 53664  01121A  0E00               	movlw	0
 53665  01121C  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 53666  01121E  0012               	return	
 53667  011220                     i2l186:
 53668                           
 53669                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 53670  011220  EE20 F002          	lfsr	2,2
 53671  011224  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53672  011226  26D9               	addwf	fsr2l,f,c
 53673  011228  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53674  01122A  22DA               	addwfc	fsr2h,f,c
 53675  01122C  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 53676  011230  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 53677                           
 53678                           ;usb_device.c: 1030: handle->CNT = len;
 53679  011234  EE20 F001          	lfsr	2,1
 53680  011238  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53681  01123A  26D9               	addwf	fsr2l,f,c
 53682  01123C  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53683  01123E  22DA               	addwfc	fsr2h,f,c
 53684  011240  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 53685                           
 53686                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 53687  011244  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53688  011248  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53689  01124C  0E40               	movlw	64
 53690  01124E  16DF               	andwf	indf2,f,c
 53691                           
 53692                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 53693  011250  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53694  011254  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53695  011258  0E00               	movlw	0
 53696  01125A  86DB               	bsf	plusw2,3,c
 53697                           
 53698                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 53699  01125C  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53700  011260  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53701  011264  0E00               	movlw	0
 53702  011266  8EDB               	bsf	plusw2,7,c
 53703                           
 53704                           ;usb_device.c: 1036: if(dir != 0)
 53705  011268  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53706  01126A  B4D8               	btfsc	status,2,c
 53707  01126C  D018               	goto	i2l188
 53708                           
 53709                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 53710  01126E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53711  011270  0D02               	mullw	2
 53712  011272  0E1B               	movlw	low _pBDTEntryIn
 53713  011274  24F3               	addwf	prodl,w,c
 53714  011276  6ED9               	movwf	fsr2l,c
 53715  011278  0E01               	movlw	high _pBDTEntryIn
 53716  01127A  20F4               	addwfc	prodh,w,c
 53717  01127C  6EDA               	movwf	fsr2h,c
 53718  01127E  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53719  011282  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53720  011286  0E04               	movlw	4
 53721  011288  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53722  01128A  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53723  01128C  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53724  01128E  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53725  011290  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53726  011292  0D02               	mullw	2
 53727  011294  0E1B               	movlw	low _pBDTEntryIn
 53728  011296  24F3               	addwf	prodl,w,c
 53729  011298  6ED9               	movwf	fsr2l,c
 53730  01129A  0E01               	movlw	high _pBDTEntryIn
 53731  01129C  D017               	goto	L86
 53732  01129E                     i2l188:
 53733                           
 53734                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 53735  01129E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53736  0112A0  0D02               	mullw	2
 53737  0112A2  0E21               	movlw	low _pBDTEntryOut
 53738  0112A4  24F3               	addwf	prodl,w,c
 53739  0112A6  6ED9               	movwf	fsr2l,c
 53740  0112A8  0E01               	movlw	high _pBDTEntryOut
 53741  0112AA  20F4               	addwfc	prodh,w,c
 53742  0112AC  6EDA               	movwf	fsr2h,c
 53743  0112AE  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53744  0112B2  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53745  0112B6  0E04               	movlw	4
 53746  0112B8  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53747  0112BA  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53748  0112BC  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53749  0112BE  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53750  0112C0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53751  0112C2  0D02               	mullw	2
 53752  0112C4  0E21               	movlw	low _pBDTEntryOut
 53753  0112C6  24F3               	addwf	prodl,w,c
 53754  0112C8  6ED9               	movwf	fsr2l,c
 53755  0112CA  0E01               	movlw	high _pBDTEntryOut
 53756  0112CC                     L86:
 53757  0112CC  20F4               	addwfc	prodh,w,c
 53758  0112CE  6EDA               	movwf	fsr2h,c
 53759  0112D0  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 53760  0112D4  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 53761                           
 53762                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 53763  0112D8  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 53764  0112DC  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 53765  0112E0  0012               	return	
 53766  0112E2                     __end_ofi2_USBTransferOnePacket:
 53767                           	opt stack 0
 53768                           tosu	equ	0xFFF
 53769                           tosh	equ	0xFFE
 53770                           tosl	equ	0xFFD
 53771                           pclatu	equ	0xFFB
 53772                           pclath	equ	0xFFA
 53773                           tblptru	equ	0xFF8
 53774                           tblptrh	equ	0xFF7
 53775                           tblptrl	equ	0xFF6
 53776                           tablat	equ	0xFF5
 53777                           prodh	equ	0xFF4
 53778                           prodl	equ	0xFF3
 53779                           intcon	equ	0xFF2
 53780                           indf0	equ	0xFEF
 53781                           postinc0	equ	0xFEE
 53782                           fsr0h	equ	0xFEA
 53783                           fsr0l	equ	0xFE9
 53784                           wreg	equ	0xFE8
 53785                           indf1	equ	0xFE7
 53786                           postinc1	equ	0xFE6
 53787                           postdec1	equ	0xFE5
 53788                           plusw1	equ	0xFE3
 53789                           fsr1h	equ	0xFE2
 53790                           fsr1l	equ	0xFE1
 53791                           indf2	equ	0xFDF
 53792                           postinc2	equ	0xFDE
 53793                           postdec2	equ	0xFDD
 53794                           plusw2	equ	0xFDB
 53795                           fsr2h	equ	0xFDA
 53796                           fsr2l	equ	0xFD9
 53797                           status	equ	0xFD8
 53798                           
 53799 ;; *************** function _USBEnableEndpoint *****************
 53800 ;; Defined at:
 53801 ;;		line 878 in file "usb_device.c"
 53802 ;; Parameters:    Size  Location     Type
 53803 ;;  ep              1    wreg     unsigned char 
 53804 ;;  options         1    8[COMRAM] unsigned char 
 53805 ;; Auto vars:     Size  Location     Type
 53806 ;;  ep              1   11[COMRAM] unsigned char 
 53807 ;;  p               2    9[COMRAM] PTR unsigned char 
 53808 ;;		 -> UEP0(1), 
 53809 ;; Return value:  Size  Location     Type
 53810 ;;                  1    wreg      void 
 53811 ;; Registers used:
 53812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53813 ;; Tracked objects:
 53814 ;;		On entry : 0/0
 53815 ;;		On exit  : 0/0
 53816 ;;		Unchanged: 0/0
 53817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53818 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53819 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53821 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53822 ;;Total ram usage:        4 bytes
 53823 ;; Hardware stack levels used:    1
 53824 ;; Hardware stack levels required when called:    1
 53825 ;; This function calls:
 53826 ;;		_USBConfigureEndpoint
 53827 ;; This function is called by:
 53828 ;;		_APP_DeviceCustomHIDInitialize
 53829 ;;		_APP_DeviceMSDInitialize
 53830 ;; This function uses a non-reentrant model
 53831 ;;
 53832                           
 53833                           	psect	text227
 53834  0150B0                     __ptext227:
 53835                           	opt stack 0
 53836  0150B0                     _USBEnableEndpoint:
 53837                           	opt stack 13
 53838                           
 53839                           ;incstack = 0
 53840                           ;USBEnableEndpoint@ep stored from wreg
 53841  0150B0  6E0C               	movwf	USBEnableEndpoint@ep,c
 53842                           
 53843                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 53844  0150B2  A409               	btfss	USBEnableEndpoint@options,2,c
 53845  0150B4  D005               	goto	i2l179
 53846                           
 53847                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 53848  0150B6  0E00               	movlw	0
 53849  0150B8  6E01               	movwf	USBConfigureEndpoint@direction,c
 53850  0150BA  500C               	movf	USBEnableEndpoint@ep,w,c
 53851  0150BC  EC27  F09B         	call	_USBConfigureEndpoint
 53852  0150C0                     i2l179:
 53853                           
 53854                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 53855  0150C0  A209               	btfss	USBEnableEndpoint@options,1,c
 53856  0150C2  D005               	goto	i2l180
 53857                           
 53858                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 53859  0150C4  0E01               	movlw	1
 53860  0150C6  6E01               	movwf	USBConfigureEndpoint@direction,c
 53861  0150C8  500C               	movf	USBEnableEndpoint@ep,w,c
 53862  0150CA  EC27  F09B         	call	_USBConfigureEndpoint
 53863  0150CE                     i2l180:
 53864                           
 53865                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 53866  0150CE  500C               	movf	USBEnableEndpoint@ep,w,c
 53867  0150D0  0D01               	mullw	1
 53868  0150D2  0E26               	movlw	38
 53869  0150D4  24F3               	addwf	prodl,w,c
 53870  0150D6  6E0A               	movwf	USBEnableEndpoint@p,c
 53871  0150D8  0E0F               	movlw	15
 53872  0150DA  20F4               	addwfc	prodh,w,c
 53873  0150DC  6E0B               	movwf	USBEnableEndpoint@p+1,c
 53874                           
 53875                           ;usb_device.c: 901: *p = options;
 53876  0150DE  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 53877  0150E2  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 53878  0150E6  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 53879  0150EA  0012               	return		;funcret
 53880  0150EC                     __end_of_USBEnableEndpoint:
 53881                           	opt stack 0
 53882                           tosu	equ	0xFFF
 53883                           tosh	equ	0xFFE
 53884                           tosl	equ	0xFFD
 53885                           pclatu	equ	0xFFB
 53886                           pclath	equ	0xFFA
 53887                           tblptru	equ	0xFF8
 53888                           tblptrh	equ	0xFF7
 53889                           tblptrl	equ	0xFF6
 53890                           tablat	equ	0xFF5
 53891                           prodh	equ	0xFF4
 53892                           prodl	equ	0xFF3
 53893                           intcon	equ	0xFF2
 53894                           indf0	equ	0xFEF
 53895                           postinc0	equ	0xFEE
 53896                           fsr0h	equ	0xFEA
 53897                           fsr0l	equ	0xFE9
 53898                           wreg	equ	0xFE8
 53899                           indf1	equ	0xFE7
 53900                           postinc1	equ	0xFE6
 53901                           postdec1	equ	0xFE5
 53902                           plusw1	equ	0xFE3
 53903                           fsr1h	equ	0xFE2
 53904                           fsr1l	equ	0xFE1
 53905                           indf2	equ	0xFDF
 53906                           postinc2	equ	0xFDE
 53907                           postdec2	equ	0xFDD
 53908                           plusw2	equ	0xFDB
 53909                           fsr2h	equ	0xFDA
 53910                           fsr2l	equ	0xFD9
 53911                           status	equ	0xFD8
 53912                           
 53913 ;; *************** function _USBConfigureEndpoint *****************
 53914 ;; Defined at:
 53915 ;;		line 1545 in file "usb_device.c"
 53916 ;; Parameters:    Size  Location     Type
 53917 ;;  EPNum           1    wreg     unsigned char 
 53918 ;;  direction       1    0[COMRAM] unsigned char 
 53919 ;; Auto vars:     Size  Location     Type
 53920 ;;  EPNum           1    5[COMRAM] unsigned char 
 53921 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 53922 ;;		 -> BDT(48), 
 53923 ;; Return value:  Size  Location     Type
 53924 ;;                  1    wreg      void 
 53925 ;; Registers used:
 53926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53927 ;; Tracked objects:
 53928 ;;		On entry : 0/0
 53929 ;;		On exit  : 0/0
 53930 ;;		Unchanged: 0/0
 53931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53933 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53934 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53935 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53936 ;;Total ram usage:        8 bytes
 53937 ;; Hardware stack levels used:    1
 53938 ;; This function calls:
 53939 ;;		Nothing
 53940 ;; This function is called by:
 53941 ;;		_USBEnableEndpoint
 53942 ;; This function uses a non-reentrant model
 53943 ;;
 53944                           
 53945                           	psect	text228
 53946  01364E                     __ptext228:
 53947                           	opt stack 0
 53948  01364E                     _USBConfigureEndpoint:
 53949                           	opt stack 13
 53950                           
 53951                           ;incstack = 0
 53952                           ;USBConfigureEndpoint@EPNum stored from wreg
 53953  01364E  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 53954                           
 53955                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 53956  013650  0E00               	movlw	0
 53957  013652  6E07               	movwf	USBConfigureEndpoint@handle,c
 53958  013654  0E0D               	movlw	13
 53959  013656  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 53960                           
 53961                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 53962  013658  5001               	movf	USBConfigureEndpoint@direction,w,c
 53963  01365A  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 53964  01365C  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 53965  01365E  90D8               	bcf	status,0,c
 53966  013660  3602               	rlcf	??_USBConfigureEndpoint,f,c
 53967  013662  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 53968  013664  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 53969  013666  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 53970  013668  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 53971  01366A  90D8               	bcf	status,0,c
 53972  01366C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53973  01366E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53974  013670  90D8               	bcf	status,0,c
 53975  013672  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53976  013674  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53977  013676  5002               	movf	??_USBConfigureEndpoint,w,c
 53978  013678  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 53979  01367A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 53980  01367C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 53981  01367E  90D8               	bcf	status,0,c
 53982  013680  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53983  013682  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53984  013684  90D8               	bcf	status,0,c
 53985  013686  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 53986  013688  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 53987  01368A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 53988  01368C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 53989  01368E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 53990  013690  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 53991                           
 53992                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 53993  013692  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 53994  013696  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 53995  01369A  9EDF               	bcf	indf2,7,c
 53996                           
 53997                           ;usb_device.c: 1559: if(direction == 0)
 53998  01369C  5001               	movf	USBConfigureEndpoint@direction,w,c
 53999  01369E  A4D8               	btfss	status,2,c
 54000  0136A0  D007               	goto	i2l226
 54001                           
 54002                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 54003  0136A2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54004  0136A4  0D02               	mullw	2
 54005  0136A6  0E21               	movlw	low _pBDTEntryOut
 54006  0136A8  24F3               	addwf	prodl,w,c
 54007  0136AA  6ED9               	movwf	fsr2l,c
 54008  0136AC  0E01               	movlw	high _pBDTEntryOut
 54009  0136AE  D006               	goto	L87
 54010  0136B0                     i2l226:
 54011                           
 54012                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 54013  0136B0  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54014  0136B2  0D02               	mullw	2
 54015  0136B4  0E1B               	movlw	low _pBDTEntryIn
 54016  0136B6  24F3               	addwf	prodl,w,c
 54017  0136B8  6ED9               	movwf	fsr2l,c
 54018  0136BA  0E01               	movlw	high _pBDTEntryIn
 54019  0136BC                     L87:
 54020  0136BC  20F4               	addwfc	prodh,w,c
 54021  0136BE  6EDA               	movwf	fsr2h,c
 54022  0136C0  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 54023  0136C4  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 54024                           
 54025                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 54026  0136C8  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54027  0136CC  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54028  0136D0  9CDF               	bcf	indf2,6,c
 54029                           
 54030                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 54031  0136D2  EE20 F004          	lfsr	2,4
 54032  0136D6  5007               	movf	USBConfigureEndpoint@handle,w,c
 54033  0136D8  26D9               	addwf	fsr2l,f,c
 54034  0136DA  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 54035  0136DC  22DA               	addwfc	fsr2h,f,c
 54036  0136DE  8CDF               	bsf	indf2,6,c
 54037  0136E0  0012               	return		;funcret
 54038  0136E2                     __end_of_USBConfigureEndpoint:
 54039                           	opt stack 0
 54040                           tosu	equ	0xFFF
 54041                           tosh	equ	0xFFE
 54042                           tosl	equ	0xFFD
 54043                           pclatu	equ	0xFFB
 54044                           pclath	equ	0xFFA
 54045                           tblptru	equ	0xFF8
 54046                           tblptrh	equ	0xFF7
 54047                           tblptrl	equ	0xFF6
 54048                           tablat	equ	0xFF5
 54049                           prodh	equ	0xFF4
 54050                           prodl	equ	0xFF3
 54051                           intcon	equ	0xFF2
 54052                           indf0	equ	0xFEF
 54053                           postinc0	equ	0xFEE
 54054                           fsr0h	equ	0xFEA
 54055                           fsr0l	equ	0xFE9
 54056                           wreg	equ	0xFE8
 54057                           indf1	equ	0xFE7
 54058                           postinc1	equ	0xFE6
 54059                           postdec1	equ	0xFE5
 54060                           plusw1	equ	0xFE3
 54061                           fsr1h	equ	0xFE2
 54062                           fsr1l	equ	0xFE1
 54063                           indf2	equ	0xFDF
 54064                           postinc2	equ	0xFDE
 54065                           postdec2	equ	0xFDD
 54066                           plusw2	equ	0xFDB
 54067                           fsr2h	equ	0xFDA
 54068                           fsr2l	equ	0xFD9
 54069                           status	equ	0xFD8
 54070                           
 54071 ;; *************** function _USBCtrlTrfOutHandler *****************
 54072 ;; Defined at:
 54073 ;;		line 2540 in file "usb_device.c"
 54074 ;; Parameters:    Size  Location     Type
 54075 ;;		None
 54076 ;; Auto vars:     Size  Location     Type
 54077 ;;		None
 54078 ;; Return value:  Size  Location     Type
 54079 ;;                  1    wreg      void 
 54080 ;; Registers used:
 54081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54082 ;; Tracked objects:
 54083 ;;		On entry : 0/0
 54084 ;;		On exit  : 0/0
 54085 ;;		Unchanged: 0/0
 54086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54091 ;;Total ram usage:        0 bytes
 54092 ;; Hardware stack levels used:    1
 54093 ;; Hardware stack levels required when called:    2
 54094 ;; This function calls:
 54095 ;;		_USBCtrlTrfRxService
 54096 ;; This function is called by:
 54097 ;;		_USBCtrlEPService
 54098 ;; This function uses a non-reentrant model
 54099 ;;
 54100                           
 54101                           	psect	text229
 54102  014412                     __ptext229:
 54103                           	opt stack 0
 54104  014412                     _USBCtrlTrfOutHandler:
 54105                           	opt stack 13
 54106                           
 54107                           ;usb_device.c: 2542: if(controlTransferState == 2)
 54108                           
 54109                           ;incstack = 0
 54110  014412  0E02               	movlw	2
 54111  014414  0101               	movlb	1	; () banked
 54112  014416  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54113  014418  A4D8               	btfss	status,2,c
 54114  01441A  D003               	goto	i2l332
 54115                           
 54116                           ; BSR set to: 1
 54117                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 54118  01441C  ECDE  F086         	call	_USBCtrlTrfRxService	;wreg free
 54119                           
 54120                           ;usb_device.c: 2545: }
 54121  014420  0012               	return	
 54122  014422                     i2l332:
 54123                           
 54124                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 54125  014422  0E00               	movlw	0
 54126  014424  0101               	movlb	1	; () banked
 54127  014426  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54128                           
 54129                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 54130  014428  516B               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 54131  01442A  A4D8               	btfss	status,2,c
 54132  01442C  D01F               	goto	i2l334
 54133                           
 54134                           ; BSR set to: 1
 54135                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 54136  01442E  EE20 F001          	lfsr	2,1
 54137  014432  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54138  014434  26D9               	addwf	fsr2l,f,c
 54139  014436  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54140  014438  22DA               	addwfc	fsr2h,f,c
 54141  01443A  0E08               	movlw	8
 54142  01443C  6EDF               	movwf	indf2,c
 54143                           
 54144                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54145  01443E  EE20 F002          	lfsr	2,2
 54146  014442  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54147  014444  26D9               	addwf	fsr2l,f,c
 54148  014446  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54149  014448  22DA               	addwfc	fsr2h,f,c
 54150  01444A  0E30               	movlw	48
 54151  01444C  6EDE               	movwf	postinc2,c
 54152  01444E  0E0D               	movlw	13
 54153  014450  6EDD               	movwf	postdec2,c
 54154                           
 54155                           ; BSR set to: 1
 54156                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 54157  014452  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54158  014456  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54159  01445A  0E0C               	movlw	12
 54160  01445C  6EDF               	movwf	indf2,c
 54161                           
 54162                           ; BSR set to: 1
 54163                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54164  01445E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54165  014462  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54166  014466  0E00               	movlw	0
 54167  014468  8EDB               	bsf	plusw2,7,c
 54168                           
 54169                           ;usb_device.c: 2563: }
 54170  01446A  0012               	return	
 54171  01446C                     i2l334:
 54172                           
 54173                           ; BSR set to: 1
 54174                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 54175                           
 54176                           ; BSR set to: 1
 54177  01446C  0E00               	movlw	0
 54178  01446E  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54179                           
 54180                           ; BSR set to: 1
 54181  014470  0012               	return	
 54182  014472                     __end_of_USBCtrlTrfOutHandler:
 54183                           	opt stack 0
 54184                           tosu	equ	0xFFF
 54185                           tosh	equ	0xFFE
 54186                           tosl	equ	0xFFD
 54187                           pclatu	equ	0xFFB
 54188                           pclath	equ	0xFFA
 54189                           tblptru	equ	0xFF8
 54190                           tblptrh	equ	0xFF7
 54191                           tblptrl	equ	0xFF6
 54192                           tablat	equ	0xFF5
 54193                           prodh	equ	0xFF4
 54194                           prodl	equ	0xFF3
 54195                           intcon	equ	0xFF2
 54196                           indf0	equ	0xFEF
 54197                           postinc0	equ	0xFEE
 54198                           fsr0h	equ	0xFEA
 54199                           fsr0l	equ	0xFE9
 54200                           wreg	equ	0xFE8
 54201                           indf1	equ	0xFE7
 54202                           postinc1	equ	0xFE6
 54203                           postdec1	equ	0xFE5
 54204                           plusw1	equ	0xFE3
 54205                           fsr1h	equ	0xFE2
 54206                           fsr1l	equ	0xFE1
 54207                           indf2	equ	0xFDF
 54208                           postinc2	equ	0xFDE
 54209                           postdec2	equ	0xFDD
 54210                           plusw2	equ	0xFDB
 54211                           fsr2h	equ	0xFDA
 54212                           fsr2l	equ	0xFD9
 54213                           status	equ	0xFD8
 54214                           
 54215 ;; *************** function _USBCtrlTrfRxService *****************
 54216 ;; Defined at:
 54217 ;;		line 1854 in file "usb_device.c"
 54218 ;; Parameters:    Size  Location     Type
 54219 ;;		None
 54220 ;; Auto vars:     Size  Location     Type
 54221 ;;  byteToRead      1    1[COMRAM] unsigned char 
 54222 ;;  i               1    0[COMRAM] unsigned char 
 54223 ;; Return value:  Size  Location     Type
 54224 ;;                  1    wreg      void 
 54225 ;; Registers used:
 54226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54227 ;; Tracked objects:
 54228 ;;		On entry : 0/0
 54229 ;;		On exit  : 0/0
 54230 ;;		Unchanged: 0/0
 54231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54236 ;;Total ram usage:        2 bytes
 54237 ;; Hardware stack levels used:    1
 54238 ;; Hardware stack levels required when called:    1
 54239 ;; This function calls:
 54240 ;;		_USBCtrlEPAllowStatusStage
 54241 ;; This function is called by:
 54242 ;;		_USBCtrlTrfOutHandler
 54243 ;; This function uses a non-reentrant model
 54244 ;;
 54245                           
 54246                           	psect	text230
 54247  010DBC                     __ptext230:
 54248                           	opt stack 0
 54249  010DBC                     _USBCtrlTrfRxService:
 54250                           	opt stack 13
 54251                           
 54252                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 54253                           
 54254                           ;incstack = 0
 54255  010DBC  0101               	movlb	1	; () banked
 54256  010DBE  EE20 F001          	lfsr	2,1
 54257  010DC2  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54258  010DC4  26D9               	addwf	fsr2l,f,c
 54259  010DC6  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54260  010DC8  22DA               	addwfc	fsr2h,f,c
 54261  010DCA  50DF               	movf	indf2,w,c
 54262  010DCC  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 54263                           
 54264                           ; BSR set to: 1
 54265                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 54266  010DCE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54267  010DD0  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 54268  010DD2  0E00               	movlw	0
 54269  010DD4  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 54270  010DD6  A0D8               	btfss	status,0,c
 54271                           
 54272                           ; BSR set to: 1
 54273                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 54274  010DD8  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 54275                           
 54276                           ; BSR set to: 1
 54277                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 54278                           
 54279                           ; BSR set to: 1
 54280  010DDC  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54281  010DDE  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 54282  010DE0  0E00               	movlw	0
 54283  010DE2  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 54284                           
 54285                           ; BSR set to: 1
 54286                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 54287  010DE4  0E00               	movlw	0
 54288  010DE6  6E01               	movwf	USBCtrlTrfRxService@i,c
 54289  010DE8  D011               	goto	i2l260
 54290  010DEA                     
 54291                           ; BSR set to: 1
 54292                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 54293                           
 54294                           ; BSR set to: 1
 54295  010DEA  5001               	movf	USBCtrlTrfRxService@i,w,c
 54296  010DEC  0D01               	mullw	1
 54297  010DEE  0E38               	movlw	56
 54298  010DF0  24F3               	addwf	prodl,w,c
 54299  010DF2  6ED9               	movwf	fsr2l,c
 54300  010DF4  0E0D               	movlw	13
 54301  010DF6  20F4               	addwfc	prodh,w,c
 54302  010DF8  6EDA               	movwf	fsr2h,c
 54303  010DFA  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 54304  010DFE  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 54305  010E02  CFDF FFE7          	movff	indf2,indf1
 54306                           
 54307                           ; BSR set to: 1
 54308  010E06  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 54309  010E08  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 54310                           
 54311                           ; BSR set to: 1
 54312  010E0A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 54313  010E0C                     i2l260:
 54314                           
 54315                           ; BSR set to: 1
 54316                           
 54317                           ; BSR set to: 1
 54318  010E0C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54319  010E0E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 54320  010E10  A0D8               	btfss	status,0,c
 54321  010E12  D7EB               	goto	i2l261
 54322                           
 54323                           ; BSR set to: 1
 54324                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 54325                           
 54326                           ; BSR set to: 1
 54327  010E14  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 54328  010E16  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 54329  010E18  B4D8               	btfsc	status,2,c
 54330  010E1A  D032               	goto	i2l263
 54331                           
 54332                           ; BSR set to: 1
 54333                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 54334  010E1C  EE20 F001          	lfsr	2,1
 54335  010E20  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54336  010E22  26D9               	addwf	fsr2l,f,c
 54337  010E24  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54338  010E26  22DA               	addwfc	fsr2h,f,c
 54339  010E28  0E08               	movlw	8
 54340  010E2A  6EDF               	movwf	indf2,c
 54341                           
 54342                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 54343  010E2C  EE20 F002          	lfsr	2,2
 54344  010E30  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54345  010E32  26D9               	addwf	fsr2l,f,c
 54346  010E34  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54347  010E36  22DA               	addwfc	fsr2h,f,c
 54348  010E38  0E38               	movlw	56
 54349  010E3A  6EDE               	movwf	postinc2,c
 54350  010E3C  0E0D               	movlw	13
 54351  010E3E  6EDD               	movwf	postdec2,c
 54352                           
 54353                           ; BSR set to: 1
 54354                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 54355  010E40  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54356  010E44  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54357  010E48  BCDF               	btfsc	indf2,6,c
 54358  010E4A  D00D               	goto	i2l264
 54359                           
 54360                           ; BSR set to: 1
 54361                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 54362  010E4C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54363  010E50  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54364  010E54  0E48               	movlw	72
 54365  010E56  6EDF               	movwf	indf2,c
 54366                           
 54367                           ; BSR set to: 1
 54368                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54369  010E58  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54370  010E5C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54371  010E60  0E00               	movlw	0
 54372  010E62  8EDB               	bsf	plusw2,7,c
 54373                           
 54374                           ;usb_device.c: 1891: }
 54375  010E64  0012               	return	
 54376  010E66                     i2l264:
 54377                           
 54378                           ; BSR set to: 1
 54379                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 54380                           
 54381                           ; BSR set to: 1
 54382  010E66  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54383  010E6A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54384  010E6E  0E08               	movlw	8
 54385  010E70  6EDF               	movwf	indf2,c
 54386                           
 54387                           ; BSR set to: 1
 54388                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54389  010E72  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54390  010E76  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54391  010E7A  0E00               	movlw	0
 54392  010E7C  8EDB               	bsf	plusw2,7,c
 54393                           
 54394                           ; BSR set to: 1
 54395                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 54396  010E7E  0012               	return	
 54397  010E80                     i2l263:
 54398                           
 54399                           ; BSR set to: 1
 54400                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 54401                           
 54402                           ; BSR set to: 1
 54403  010E80  EE20 F001          	lfsr	2,1
 54404  010E84  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54405  010E86  26D9               	addwf	fsr2l,f,c
 54406  010E88  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54407  010E8A  22DA               	addwfc	fsr2h,f,c
 54408  010E8C  0E08               	movlw	8
 54409  010E8E  6EDF               	movwf	indf2,c
 54410                           
 54411                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54412  010E90  EE20 F002          	lfsr	2,2
 54413  010E94  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54414  010E96  26D9               	addwf	fsr2l,f,c
 54415  010E98  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54416  010E9A  22DA               	addwfc	fsr2h,f,c
 54417  010E9C  0E30               	movlw	48
 54418  010E9E  6EDE               	movwf	postinc2,c
 54419  010EA0  0E0D               	movlw	13
 54420  010EA2  6EDD               	movwf	postdec2,c
 54421                           
 54422                           ; BSR set to: 1
 54423                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 54424  010EA4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54425  010EA8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54426  010EAC  0E04               	movlw	4
 54427  010EAE  6EDF               	movwf	indf2,c
 54428                           
 54429                           ; BSR set to: 1
 54430                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54431  010EB0  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54432  010EB4  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54433  010EB8  0E00               	movlw	0
 54434  010EBA  8EDB               	bsf	plusw2,7,c
 54435                           
 54436                           ; BSR set to: 1
 54437                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 54438                           
 54439                           ; BSR set to: 1
 54440                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 54441  010EBC  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54442                           
 54443                           ; BSR set to: 1
 54444                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 54445  010EBE  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 54446  010EC0  A4D8               	btfss	status,2,c
 54447  010EC2  0012               	return	
 54448                           
 54449                           ; BSR set to: 1
 54450                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 54451  010EC4  EC22  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 54452  010EC8  0012               	return	
 54453  010ECA                     __end_of_USBCtrlTrfRxService:
 54454                           	opt stack 0
 54455                           tosu	equ	0xFFF
 54456                           tosh	equ	0xFFE
 54457                           tosl	equ	0xFFD
 54458                           pclatu	equ	0xFFB
 54459                           pclath	equ	0xFFA
 54460                           tblptru	equ	0xFF8
 54461                           tblptrh	equ	0xFF7
 54462                           tblptrl	equ	0xFF6
 54463                           tablat	equ	0xFF5
 54464                           prodh	equ	0xFF4
 54465                           prodl	equ	0xFF3
 54466                           intcon	equ	0xFF2
 54467                           indf0	equ	0xFEF
 54468                           postinc0	equ	0xFEE
 54469                           fsr0h	equ	0xFEA
 54470                           fsr0l	equ	0xFE9
 54471                           wreg	equ	0xFE8
 54472                           indf1	equ	0xFE7
 54473                           postinc1	equ	0xFE6
 54474                           postdec1	equ	0xFE5
 54475                           plusw1	equ	0xFE3
 54476                           fsr1h	equ	0xFE2
 54477                           fsr1l	equ	0xFE1
 54478                           indf2	equ	0xFDF
 54479                           postinc2	equ	0xFDE
 54480                           postdec2	equ	0xFDD
 54481                           plusw2	equ	0xFDB
 54482                           fsr2h	equ	0xFDA
 54483                           fsr2l	equ	0xFD9
 54484                           status	equ	0xFD8
 54485                           
 54486 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 54487 ;; Defined at:
 54488 ;;		line 1418 in file "usb_device.c"
 54489 ;; Parameters:    Size  Location     Type
 54490 ;;		None
 54491 ;; Auto vars:     Size  Location     Type
 54492 ;;		None
 54493 ;; Return value:  Size  Location     Type
 54494 ;;                  1    wreg      void 
 54495 ;; Registers used:
 54496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54497 ;; Tracked objects:
 54498 ;;		On entry : 0/0
 54499 ;;		On exit  : 0/0
 54500 ;;		Unchanged: 0/0
 54501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54506 ;;Total ram usage:        0 bytes
 54507 ;; Hardware stack levels used:    1
 54508 ;; This function calls:
 54509 ;;		Nothing
 54510 ;; This function is called by:
 54511 ;;		_USBDeviceTasks
 54512 ;;		_USBCtrlEPServiceComplete
 54513 ;;		_USBCtrlTrfRxService
 54514 ;; This function uses a non-reentrant model
 54515 ;;
 54516                           
 54517                           	psect	text231
 54518  012844                     __ptext231:
 54519                           	opt stack 0
 54520  012844                     _USBCtrlEPAllowStatusStage:
 54521                           	opt stack 13
 54522                           
 54523                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 54524                           
 54525                           ;incstack = 0
 54526  012844  0101               	movlb	1	; () banked
 54527  012846  5168               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 54528  012848  A4D8               	btfss	status,2,c
 54529  01284A  0012               	return	
 54530                           
 54531                           ; BSR set to: 1
 54532                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 54533  01284C  0E01               	movlw	1
 54534  01284E  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 54535                           
 54536                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 54537  012850  5167               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 54538  012852  A4D8               	btfss	status,2,c
 54539  012854  0012               	return	
 54540                           
 54541                           ; BSR set to: 1
 54542                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 54543  012856  0E01               	movlw	1
 54544  012858  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 54545                           
 54546                           ; BSR set to: 1
 54547                           ;usb_device.c: 1434: if(controlTransferState == 2)
 54548  01285A  0E02               	movlw	2
 54549  01285C  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54550  01285E  A4D8               	btfss	status,2,c
 54551  012860  D015               	goto	i2l214
 54552                           
 54553                           ; BSR set to: 1
 54554                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 54555  012862  EE20 F001          	lfsr	2,1
 54556  012866  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54557  012868  26D9               	addwf	fsr2l,f,c
 54558  01286A  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54559  01286C  22DA               	addwfc	fsr2h,f,c
 54560  01286E  0E00               	movlw	0
 54561  012870  6EDF               	movwf	indf2,c
 54562                           
 54563                           ; BSR set to: 1
 54564                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 54565  012872  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54566  012876  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54567  01287A  0E48               	movlw	72
 54568  01287C  6EDF               	movwf	indf2,c
 54569                           
 54570                           ; BSR set to: 1
 54571                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54572  01287E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54573  012882  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54574  012886  0E00               	movlw	0
 54575  012888  8EDB               	bsf	plusw2,7,c
 54576                           
 54577                           ;usb_device.c: 1439: }
 54578  01288A  0012               	return	
 54579  01288C                     i2l214:
 54580                           
 54581                           ; BSR set to: 1
 54582                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 54583                           
 54584                           ; BSR set to: 1
 54585  01288C  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54586  01288E  A4D8               	btfss	status,2,c
 54587  012890  0012               	return	
 54588                           
 54589                           ; BSR set to: 1
 54590                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 54591  012892  0E00               	movlw	0
 54592  012894  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54593                           
 54594                           ; BSR set to: 1
 54595                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 54596  012896  EE20 F001          	lfsr	2,1
 54597  01289A  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54598  01289C  26D9               	addwf	fsr2l,f,c
 54599  01289E  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54600  0128A0  22DA               	addwfc	fsr2h,f,c
 54601  0128A2  0E08               	movlw	8
 54602  0128A4  6EDF               	movwf	indf2,c
 54603                           
 54604                           ; BSR set to: 1
 54605                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 54606  0128A6  EE20 F002          	lfsr	2,2
 54607  0128AA  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54608  0128AC  26D9               	addwf	fsr2l,f,c
 54609  0128AE  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54610  0128B0  22DA               	addwfc	fsr2h,f,c
 54611  0128B2  0E30               	movlw	48
 54612  0128B4  6EDE               	movwf	postinc2,c
 54613  0128B6  0E0D               	movlw	13
 54614  0128B8  6EDD               	movwf	postdec2,c
 54615                           
 54616                           ; BSR set to: 1
 54617                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 54618  0128BA  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54619  0128BE  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54620  0128C2  0E04               	movlw	4
 54621  0128C4  6EDF               	movwf	indf2,c
 54622                           
 54623                           ; BSR set to: 1
 54624                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 54625  0128C6  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54626  0128CA  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54627  0128CE  0E00               	movlw	0
 54628  0128D0  8EDB               	bsf	plusw2,7,c
 54629                           
 54630                           ; BSR set to: 1
 54631                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 54632  0128D2  0E01               	movlw	1
 54633  0128D4  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54634                           
 54635                           ; BSR set to: 1
 54636                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 54637  0128D6  EE20 F001          	lfsr	2,1
 54638  0128DA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54639  0128DC  26D9               	addwf	fsr2l,f,c
 54640  0128DE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54641  0128E0  22DA               	addwfc	fsr2h,f,c
 54642  0128E2  0E08               	movlw	8
 54643  0128E4  6EDF               	movwf	indf2,c
 54644                           
 54645                           ; BSR set to: 1
 54646                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54647  0128E6  EE20 F002          	lfsr	2,2
 54648  0128EA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54649  0128EC  26D9               	addwf	fsr2l,f,c
 54650  0128EE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54651  0128F0  22DA               	addwfc	fsr2h,f,c
 54652  0128F2  0E30               	movlw	48
 54653  0128F4  6EDE               	movwf	postinc2,c
 54654  0128F6  0E0D               	movlw	13
 54655  0128F8  6EDD               	movwf	postdec2,c
 54656                           
 54657                           ; BSR set to: 1
 54658                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 54659  0128FA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54660  0128FE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54661  012902  0E80               	movlw	128
 54662  012904  6EDF               	movwf	indf2,c
 54663                           
 54664                           ; BSR set to: 1
 54665                           
 54666                           ; BSR set to: 1
 54667                           
 54668                           ; BSR set to: 1
 54669  012906  0012               	return	
 54670  012908                     __end_of_USBCtrlEPAllowStatusStage:
 54671                           	opt stack 0
 54672                           tosu	equ	0xFFF
 54673                           tosh	equ	0xFFE
 54674                           tosl	equ	0xFFD
 54675                           pclatu	equ	0xFFB
 54676                           pclath	equ	0xFFA
 54677                           tblptru	equ	0xFF8
 54678                           tblptrh	equ	0xFF7
 54679                           tblptrl	equ	0xFF6
 54680                           tablat	equ	0xFF5
 54681                           prodh	equ	0xFF4
 54682                           prodl	equ	0xFF3
 54683                           intcon	equ	0xFF2
 54684                           indf0	equ	0xFEF
 54685                           postinc0	equ	0xFEE
 54686                           fsr0h	equ	0xFEA
 54687                           fsr0l	equ	0xFE9
 54688                           wreg	equ	0xFE8
 54689                           indf1	equ	0xFE7
 54690                           postinc1	equ	0xFE6
 54691                           postdec1	equ	0xFE5
 54692                           plusw1	equ	0xFE3
 54693                           fsr1h	equ	0xFE2
 54694                           fsr1l	equ	0xFE1
 54695                           indf2	equ	0xFDF
 54696                           postinc2	equ	0xFDE
 54697                           postdec2	equ	0xFDD
 54698                           plusw2	equ	0xFDB
 54699                           fsr2h	equ	0xFDA
 54700                           fsr2l	equ	0xFD9
 54701                           status	equ	0xFD8
 54702                           
 54703 ;; *************** function _USBCtrlTrfInHandler *****************
 54704 ;; Defined at:
 54705 ;;		line 2594 in file "usb_device.c"
 54706 ;; Parameters:    Size  Location     Type
 54707 ;;		None
 54708 ;; Auto vars:     Size  Location     Type
 54709 ;;  lastDTS         1    1[COMRAM] unsigned char 
 54710 ;; Return value:  Size  Location     Type
 54711 ;;                  1    wreg      void 
 54712 ;; Registers used:
 54713 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54714 ;; Tracked objects:
 54715 ;;		On entry : 0/0
 54716 ;;		On exit  : 0/0
 54717 ;;		Unchanged: 0/0
 54718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54723 ;;Total ram usage:        1 bytes
 54724 ;; Hardware stack levels used:    1
 54725 ;; Hardware stack levels required when called:    1
 54726 ;; This function calls:
 54727 ;;		_USBCtrlTrfTxService
 54728 ;; This function is called by:
 54729 ;;		_USBCtrlEPService
 54730 ;; This function uses a non-reentrant model
 54731 ;;
 54732                           
 54733                           	psect	text232
 54734  012908                     __ptext232:
 54735                           	opt stack 0
 54736  012908                     _USBCtrlTrfInHandler:
 54737                           	opt stack 14
 54738                           
 54739                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 54740                           
 54741                           ; BSR set to: 1
 54742                           ;incstack = 0
 54743  012908  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54744  01290C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54745  012910  0101               	movlb	1	; () banked
 54746  012912  0E00               	movlw	0
 54747  012914  BCDF               	btfsc	indf2,6,c
 54748  012916  0E01               	movlw	1
 54749  012918  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 54750                           
 54751                           ; BSR set to: 1
 54752                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 54753  01291A  0E04               	movlw	4
 54754  01291C  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 54755  01291E  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 54756  012920  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54757  012922  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 54758                           
 54759                           ; BSR set to: 1
 54760                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 54761  012924  0E08               	movlw	8
 54762  012926  185E               	xorwf	_USBDeviceState,w,c	;volatile
 54763  012928  A4D8               	btfss	status,2,c
 54764  01292A  D00C               	goto	i2l341
 54765                           
 54766                           ; BSR set to: 1
 54767                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 54768  01292C  010D               	movlb	13	; () banked
 54769  01292E  5132               	movf	50,w,b	;volatile
 54770  012930  0B7F               	andlw	127
 54771  012932  010F               	movlb	15	; () banked
 54772  012934  6F38               	movwf	56,b	;volatile
 54773                           
 54774                           ; BSR set to: 15
 54775                           ;usb_device.c: 2609: if(UADDR != 0u)
 54776  012936  5138               	movf	56,w,b	;volatile
 54777  012938  B4D8               	btfsc	status,2,c
 54778  01293A  D002               	goto	i2l340
 54779                           
 54780                           ; BSR set to: 15
 54781                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 54782  01293C  0E10               	movlw	16
 54783  01293E  D001               	goto	L88
 54784  012940                     i2l340:
 54785                           
 54786                           ; BSR set to: 15
 54787                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 54788                           
 54789                           ; BSR set to: 15
 54790  012940  0E04               	movlw	4
 54791  012942                     L88:
 54792  012942  6E5E               	movwf	_USBDeviceState,c	;volatile
 54793  012944                     i2l341:
 54794                           
 54795                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 54796                           
 54797                           ; BSR set to: 15
 54798                           
 54799                           ; BSR set to: 15
 54800  012944  0101               	movlb	1	; () banked
 54801  012946  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54802  012948  A4D8               	btfss	status,2,c
 54803  01294A  D03B               	goto	i2l342
 54804                           
 54805                           ; BSR set to: 1
 54806                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 54807  01294C  EE20 F002          	lfsr	2,2
 54808  012950  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54809  012952  26D9               	addwf	fsr2l,f,c
 54810  012954  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54811  012956  22DA               	addwfc	fsr2h,f,c
 54812  012958  0E38               	movlw	56
 54813  01295A  6EDE               	movwf	postinc2,c
 54814  01295C  0E0D               	movlw	13
 54815  01295E  6EDD               	movwf	postdec2,c
 54816                           
 54817                           ; BSR set to: 1
 54818                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 54819  012960  EC83  F092         	call	_USBCtrlTrfTxService	;wreg free
 54820                           
 54821                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 54822  012964  0E02               	movlw	2
 54823  012966  0101               	movlb	1	; () banked
 54824  012968  1970               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 54825  01296A  A4D8               	btfss	status,2,c
 54826  01296C  D00D               	goto	i2l343
 54827                           
 54828                           ; BSR set to: 1
 54829                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 54830  01296E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54831  012972  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54832  012976  0E04               	movlw	4
 54833  012978  6EDF               	movwf	indf2,c
 54834                           
 54835                           ; BSR set to: 1
 54836                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54837  01297A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54838  01297E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54839  012982  0E00               	movlw	0
 54840  012984  8EDB               	bsf	plusw2,7,c
 54841                           
 54842                           ;usb_device.c: 2635: }
 54843  012986  0012               	return	
 54844  012988                     i2l343:
 54845                           
 54846                           ; BSR set to: 1
 54847                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 54848                           
 54849                           ; BSR set to: 1
 54850  012988  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 54851  01298A  A4D8               	btfss	status,2,c
 54852  01298C  D00D               	goto	i2l345
 54853                           
 54854                           ; BSR set to: 1
 54855                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 54856  01298E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54857  012992  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54858  012996  0E48               	movlw	72
 54859  012998  6EDF               	movwf	indf2,c
 54860                           
 54861                           ; BSR set to: 1
 54862                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54863  01299A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54864  01299E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54865  0129A2  0E00               	movlw	0
 54866  0129A4  8EDB               	bsf	plusw2,7,c
 54867                           
 54868                           ;usb_device.c: 2642: }
 54869  0129A6  0012               	return	
 54870  0129A8                     i2l345:
 54871                           
 54872                           ; BSR set to: 1
 54873                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 54874                           
 54875                           ; BSR set to: 1
 54876  0129A8  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54877  0129AC  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54878  0129B0  0E08               	movlw	8
 54879  0129B2  6EDF               	movwf	indf2,c
 54880                           
 54881                           ; BSR set to: 1
 54882                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54883  0129B4  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54884  0129B8  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54885  0129BC  0E00               	movlw	0
 54886  0129BE  8EDB               	bsf	plusw2,7,c
 54887                           
 54888                           ; BSR set to: 1
 54889                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 54890                           
 54891                           ; BSR set to: 1
 54892  0129C0  0012               	return	
 54893  0129C2                     i2l342:
 54894                           
 54895                           ; BSR set to: 1
 54896                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 54897  0129C2  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 54898                           
 54899                           ; BSR set to: 1
 54900                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 54901                           
 54902                           ; BSR set to: 1
 54903                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 54904  0129C4  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54905                           
 54906                           ; BSR set to: 1
 54907                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 54908                           
 54909                           ; BSR set to: 1
 54910  0129C6  0E00               	movlw	0
 54911  0129C8  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54912  0129CA  0012               	return	
 54913  0129CC                     __end_of_USBCtrlTrfInHandler:
 54914                           	opt stack 0
 54915                           tosu	equ	0xFFF
 54916                           tosh	equ	0xFFE
 54917                           tosl	equ	0xFFD
 54918                           pclatu	equ	0xFFB
 54919                           pclath	equ	0xFFA
 54920                           tblptru	equ	0xFF8
 54921                           tblptrh	equ	0xFF7
 54922                           tblptrl	equ	0xFF6
 54923                           tablat	equ	0xFF5
 54924                           prodh	equ	0xFF4
 54925                           prodl	equ	0xFF3
 54926                           intcon	equ	0xFF2
 54927                           indf0	equ	0xFEF
 54928                           postinc0	equ	0xFEE
 54929                           fsr0h	equ	0xFEA
 54930                           fsr0l	equ	0xFE9
 54931                           wreg	equ	0xFE8
 54932                           indf1	equ	0xFE7
 54933                           postinc1	equ	0xFE6
 54934                           postdec1	equ	0xFE5
 54935                           plusw1	equ	0xFE3
 54936                           fsr1h	equ	0xFE2
 54937                           fsr1l	equ	0xFE1
 54938                           indf2	equ	0xFDF
 54939                           postinc2	equ	0xFDE
 54940                           postdec2	equ	0xFDD
 54941                           plusw2	equ	0xFDB
 54942                           fsr2h	equ	0xFDA
 54943                           fsr2l	equ	0xFD9
 54944                           status	equ	0xFD8
 54945                           
 54946 ;; *************** function _USBCtrlTrfTxService *****************
 54947 ;; Defined at:
 54948 ;;		line 1773 in file "usb_device.c"
 54949 ;; Parameters:    Size  Location     Type
 54950 ;;		None
 54951 ;; Auto vars:     Size  Location     Type
 54952 ;;  byteToSend      1    0[COMRAM] unsigned char 
 54953 ;; Return value:  Size  Location     Type
 54954 ;;                  1    wreg      void 
 54955 ;; Registers used:
 54956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 54957 ;; Tracked objects:
 54958 ;;		On entry : 0/0
 54959 ;;		On exit  : 0/0
 54960 ;;		Unchanged: 0/0
 54961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54966 ;;Total ram usage:        1 bytes
 54967 ;; Hardware stack levels used:    1
 54968 ;; This function calls:
 54969 ;;		Nothing
 54970 ;; This function is called by:
 54971 ;;		_USBCtrlEPAllowDataStage
 54972 ;;		_USBCtrlTrfInHandler
 54973 ;; This function uses a non-reentrant model
 54974 ;;
 54975                           
 54976                           	psect	text233
 54977  012506                     __ptext233:
 54978                           	opt stack 0
 54979  012506                     _USBCtrlTrfTxService:
 54980                           	opt stack 12
 54981                           
 54982                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 54983                           
 54984                           ; BSR set to: 1
 54985                           ;incstack = 0
 54986  012506  0E08               	movlw	8
 54987  012508  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 54988                           
 54989                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 54990  01250A  5057               	movf	_inPipes+5,w,c	;volatile
 54991  01250C  E111               	bnz	i2l12786
 54992  01250E  0E08               	movlw	8
 54993  012510  5C56               	subwf	_inPipes+4,w,c	;volatile
 54994  012512  B0D8               	btfsc	status,0,c
 54995  012514  D00D               	goto	i2l247
 54996                           
 54997                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 54998  012516  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 54999                           
 55000                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 55001  01251A  0101               	movlb	1	; () banked
 55002  01251C  5170               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 55003  01251E  A4D8               	btfss	status,2,c
 55004  012520  D002               	goto	i2l245
 55005                           
 55006                           ; BSR set to: 1
 55007                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 55008  012522  0E01               	movlw	1
 55009  012524  D004               	goto	L89
 55010  012526                     i2l245:
 55011                           
 55012                           ; BSR set to: 1
 55013                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 55014                           
 55015                           ; BSR set to: 1
 55016  012526  0570               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 55017  012528  A4D8               	btfss	status,2,c
 55018  01252A  D002               	goto	i2l247
 55019                           
 55020                           ; BSR set to: 1
 55021                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 55022  01252C  0E02               	movlw	2
 55023  01252E                     L89:
 55024  01252E  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 55025  012530                     i2l247:
 55026  012530                     i2l12786:
 55027                           
 55028                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 55029  012530  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55030  012532  5E56               	subwf	_inPipes+4,f,c	;volatile
 55031  012534  0E00               	movlw	0
 55032  012536  5A57               	subwfb	_inPipes+5,f,c	;volatile
 55033                           
 55034                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 55035  012538  0101               	movlb	1	; () banked
 55036  01253A  EE20 F001          	lfsr	2,1
 55037  01253E  511B               	movf	_pBDTEntryIn& (0+255),w,b
 55038  012540  26D9               	addwf	fsr2l,f,c
 55039  012542  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55040  012544  22DA               	addwfc	fsr2h,f,c
 55041  012546  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 55042                           
 55043                           ; BSR set to: 1
 55044                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 55045  01254A  0E38               	movlw	56
 55046  01254C  6F4F               	movwf	_pDst& (0+255),b
 55047  01254E  0E0D               	movlw	13
 55048  012550  6F50               	movwf	(_pDst+1)& (0+255),b
 55049                           
 55050                           ; BSR set to: 1
 55051                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 55052  012552  A055               	btfss	_inPipes+3,0,c	;volatile
 55053  012554  D01D               	goto	i2l249
 55054  012556  D03C               	goto	i2l253
 55055  012558                     
 55056                           ; BSR set to: 1
 55057                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 55058                           
 55059                           ; BSR set to: 1
 55060  012558  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55061  01255C  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55062  012560  0E00               	movlw	low (__mediumconst shr (0+16))
 55063  012562  6EF8               	movwf	tblptru,c
 55064  012564  C14F  FFD9         	movff	_pDst,fsr2l
 55065  012568  C150  FFDA         	movff	_pDst+1,fsr2h
 55066  01256C  0E0E               	movlw	(high __ramtop+-1)
 55067  01256E  64F7               	cpfsgt	tblptrh,c
 55068  012570  D003               	bra	i2u1109_47
 55069  012572  0008               	tblrd		*
 55070  012574  50F5               	movf	tablat,w,c
 55071  012576  D005               	bra	i2u1109_40
 55072  012578                     i2u1109_47:
 55073  012578  CFF6 FFE9          	movff	tblptrl,fsr0l
 55074  01257C  CFF7 FFEA          	movff	tblptrh,fsr0h
 55075  012580  50EF               	movf	indf0,w,c
 55076  012582                     i2u1109_40:
 55077  012582  6EDF               	movwf	indf2,c
 55078  012584  4A52               	infsnz	_inPipes,f,c	;volatile
 55079  012586  2A53               	incf	_inPipes+1,f,c	;volatile
 55080  012588  0101               	movlb	1	; () banked
 55081  01258A  4B4F               	infsnz	_pDst& (0+255),f,b
 55082  01258C  2B50               	incf	(_pDst+1)& (0+255),f,b
 55083                           
 55084                           ; BSR set to: 1
 55085                           ;usb_device.c: 1816: byteToSend--;
 55086  01258E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55087  012590                     i2l249:
 55088                           
 55089                           ; BSR set to: 1
 55090                           
 55091                           ; BSR set to: 1
 55092  012590  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55093  012592  B4D8               	btfsc	status,2,c
 55094  012594  0012               	return	
 55095  012596  D7E0               	goto	i2l250
 55096  012598                     
 55097                           ; BSR set to: 1
 55098                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 55099                           
 55100                           ; BSR set to: 1
 55101  012598  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55102  01259C  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55103  0125A0  0E00               	movlw	low (__mediumconst shr (0+16))
 55104  0125A2  6EF8               	movwf	tblptru,c
 55105  0125A4  C14F  FFD9         	movff	_pDst,fsr2l
 55106  0125A8  C150  FFDA         	movff	_pDst+1,fsr2h
 55107  0125AC  0E0E               	movlw	(high __ramtop+-1)
 55108  0125AE  64F7               	cpfsgt	tblptrh,c
 55109  0125B0  D003               	bra	i2u1111_47
 55110  0125B2  0008               	tblrd		*
 55111  0125B4  50F5               	movf	tablat,w,c
 55112  0125B6  D005               	bra	i2u1111_40
 55113  0125B8                     i2u1111_47:
 55114  0125B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 55115  0125BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 55116  0125C0  50EF               	movf	indf0,w,c
 55117  0125C2                     i2u1111_40:
 55118  0125C2  6EDF               	movwf	indf2,c
 55119  0125C4  4A52               	infsnz	_inPipes,f,c	;volatile
 55120  0125C6  2A53               	incf	_inPipes+1,f,c	;volatile
 55121  0125C8  0101               	movlb	1	; () banked
 55122  0125CA  4B4F               	infsnz	_pDst& (0+255),f,b
 55123  0125CC  2B50               	incf	(_pDst+1)& (0+255),f,b
 55124                           
 55125                           ; BSR set to: 1
 55126                           ;usb_device.c: 1824: byteToSend--;
 55127  0125CE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55128  0125D0                     i2l253:
 55129                           
 55130                           ; BSR set to: 1
 55131                           
 55132                           ; BSR set to: 1
 55133  0125D0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55134  0125D2  B4D8               	btfsc	status,2,c
 55135  0125D4  0012               	return	
 55136  0125D6  D7E0               	goto	i2l254
 55137  0125D8                     __end_of_USBCtrlTrfTxService:
 55138                           	opt stack 0
 55139                           tosu	equ	0xFFF
 55140                           tosh	equ	0xFFE
 55141                           tosl	equ	0xFFD
 55142                           pclatu	equ	0xFFB
 55143                           pclath	equ	0xFFA
 55144                           tblptru	equ	0xFF8
 55145                           tblptrh	equ	0xFF7
 55146                           tblptrl	equ	0xFF6
 55147                           tablat	equ	0xFF5
 55148                           prodh	equ	0xFF4
 55149                           prodl	equ	0xFF3
 55150                           intcon	equ	0xFF2
 55151                           indf0	equ	0xFEF
 55152                           postinc0	equ	0xFEE
 55153                           fsr0h	equ	0xFEA
 55154                           fsr0l	equ	0xFE9
 55155                           wreg	equ	0xFE8
 55156                           indf1	equ	0xFE7
 55157                           postinc1	equ	0xFE6
 55158                           postdec1	equ	0xFE5
 55159                           plusw1	equ	0xFE3
 55160                           fsr1h	equ	0xFE2
 55161                           fsr1l	equ	0xFE1
 55162                           indf2	equ	0xFDF
 55163                           postinc2	equ	0xFDE
 55164                           postdec2	equ	0xFDD
 55165                           plusw2	equ	0xFDB
 55166                           fsr2h	equ	0xFDA
 55167                           fsr2l	equ	0xFD9
 55168                           status	equ	0xFD8
 55169                           tosu	equ	0xFFF
 55170                           tosh	equ	0xFFE
 55171                           tosl	equ	0xFFD
 55172                           pclatu	equ	0xFFB
 55173                           pclath	equ	0xFFA
 55174                           tblptru	equ	0xFF8
 55175                           tblptrh	equ	0xFF7
 55176                           tblptrl	equ	0xFF6
 55177                           tablat	equ	0xFF5
 55178                           prodh	equ	0xFF4
 55179                           prodl	equ	0xFF3
 55180                           intcon	equ	0xFF2
 55181                           indf0	equ	0xFEF
 55182                           postinc0	equ	0xFEE
 55183                           fsr0h	equ	0xFEA
 55184                           fsr0l	equ	0xFE9
 55185                           wreg	equ	0xFE8
 55186                           indf1	equ	0xFE7
 55187                           postinc1	equ	0xFE6
 55188                           postdec1	equ	0xFE5
 55189                           plusw1	equ	0xFE3
 55190                           fsr1h	equ	0xFE2
 55191                           fsr1l	equ	0xFE1
 55192                           indf2	equ	0xFDF
 55193                           postinc2	equ	0xFDE
 55194                           postdec2	equ	0xFDD
 55195                           plusw2	equ	0xFDB
 55196                           fsr2h	equ	0xFDA
 55197                           fsr2l	equ	0xFD9
 55198                           status	equ	0xFD8
 55199                           
 55200                           	psect	text234
 55201  000000                     __ptext234:
 55202                           	opt stack 0
 55203                           tosu	equ	0xFFF
 55204                           tosh	equ	0xFFE
 55205                           tosl	equ	0xFFD
 55206                           pclatu	equ	0xFFB
 55207                           pclath	equ	0xFFA
 55208                           tblptru	equ	0xFF8
 55209                           tblptrh	equ	0xFF7
 55210                           tblptrl	equ	0xFF6
 55211                           tablat	equ	0xFF5
 55212                           prodh	equ	0xFF4
 55213                           prodl	equ	0xFF3
 55214                           intcon	equ	0xFF2
 55215                           indf0	equ	0xFEF
 55216                           postinc0	equ	0xFEE
 55217                           fsr0h	equ	0xFEA
 55218                           fsr0l	equ	0xFE9
 55219                           wreg	equ	0xFE8
 55220                           indf1	equ	0xFE7
 55221                           postinc1	equ	0xFE6
 55222                           postdec1	equ	0xFE5
 55223                           plusw1	equ	0xFE3
 55224                           fsr1h	equ	0xFE2
 55225                           fsr1l	equ	0xFE1
 55226                           indf2	equ	0xFDF
 55227                           postinc2	equ	0xFDE
 55228                           postdec2	equ	0xFDD
 55229                           plusw2	equ	0xFDB
 55230                           fsr2h	equ	0xFDA
 55231                           fsr2l	equ	0xFD9
 55232                           status	equ	0xFD8
 55233                           
 55234                           	psect	rparam
 55235  0000                     tosu	equ	0xFFF
 55236                           tosh	equ	0xFFE
 55237                           tosl	equ	0xFFD
 55238                           pclatu	equ	0xFFB
 55239                           pclath	equ	0xFFA
 55240                           tblptru	equ	0xFF8
 55241                           tblptrh	equ	0xFF7
 55242                           tblptrl	equ	0xFF6
 55243                           tablat	equ	0xFF5
 55244                           prodh	equ	0xFF4
 55245                           prodl	equ	0xFF3
 55246                           intcon	equ	0xFF2
 55247                           indf0	equ	0xFEF
 55248                           postinc0	equ	0xFEE
 55249                           fsr0h	equ	0xFEA
 55250                           fsr0l	equ	0xFE9
 55251                           wreg	equ	0xFE8
 55252                           indf1	equ	0xFE7
 55253                           postinc1	equ	0xFE6
 55254                           postdec1	equ	0xFE5
 55255                           plusw1	equ	0xFE3
 55256                           fsr1h	equ	0xFE2
 55257                           fsr1l	equ	0xFE1
 55258                           indf2	equ	0xFDF
 55259                           postinc2	equ	0xFDE
 55260                           postdec2	equ	0xFDD
 55261                           plusw2	equ	0xFDB
 55262                           fsr2h	equ	0xFDA
 55263                           fsr2l	equ	0xFD9
 55264                           status	equ	0xFD8
 55265                           
 55266                           	psect	temp
 55267  00005F                     btemp:
 55268                           	opt stack 0
 55269  00005F                     	ds	1
 55270  0000                     int$flags	set	btemp
 55271  0000                     wtemp8	set	btemp+1
 55272  0000                     ttemp5	set	btemp+1
 55273  0000                     ttemp6	set	btemp+4
 55274  0000                     ttemp7	set	btemp+8
 55275                           tosu	equ	0xFFF
 55276                           tosh	equ	0xFFE
 55277                           tosl	equ	0xFFD
 55278                           pclatu	equ	0xFFB
 55279                           pclath	equ	0xFFA
 55280                           tblptru	equ	0xFF8
 55281                           tblptrh	equ	0xFF7
 55282                           tblptrl	equ	0xFF6
 55283                           tablat	equ	0xFF5
 55284                           prodh	equ	0xFF4
 55285                           prodl	equ	0xFF3
 55286                           intcon	equ	0xFF2
 55287                           indf0	equ	0xFEF
 55288                           postinc0	equ	0xFEE
 55289                           fsr0h	equ	0xFEA
 55290                           fsr0l	equ	0xFE9
 55291                           wreg	equ	0xFE8
 55292                           indf1	equ	0xFE7
 55293                           postinc1	equ	0xFE6
 55294                           postdec1	equ	0xFE5
 55295                           plusw1	equ	0xFE3
 55296                           fsr1h	equ	0xFE2
 55297                           fsr1l	equ	0xFE1
 55298                           indf2	equ	0xFDF
 55299                           postinc2	equ	0xFDE
 55300                           postdec2	equ	0xFDD
 55301                           plusw2	equ	0xFDB
 55302                           fsr2h	equ	0xFDA
 55303                           fsr2l	equ	0xFD9
 55304                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1555
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     214
    BANK3           256      0     184
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_writeUint32
    _i2c_eeprom_writeUint32->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_eeprom_readUint32->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->_atol
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_set_zero->_motor_schedule_command
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->__motor_run
    __motor_run->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  851940
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  378374
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
              _i2c_eeprom_readUint32
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readUint32                                8     4      4    3272
                                             25 BANK0      8     4      4
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3113
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231129
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75530
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83178
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35708
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6215
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   80075
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   13915
                                             26 BANK0      4     0      4
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1700
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1043
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0   17215
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  173015
                                            109 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
        _motor_increase_manual_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    8696
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   40685
                                             99 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   29926
                                             99 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    8339
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       9     9      0   28913
                                             71 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   43870
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    6589
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    6389
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     778
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0    8400
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     134
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2644
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113120
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113120
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108320
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   54911
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53205
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24547
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0  106111
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16518
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7690
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   86592
                                            100 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   62996
                                             99 BANK0      1     1      0
            _motor_clear_command_cue
         _motor_go_to_steps_position
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0   20773
                                             71 BANK0      1     1      0
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4   21472
                                             71 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   22850
                                             83 BANK0      7     1      6
                  __parse_jump_steps
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6   21336
                                             71 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) _motor_schedule_command                               7     1      6   20729
                                             64 BANK0      7     1      6
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          17    11      6   17215
                                             47 BANK0     17    11      6
_motor_calculate_position_in_degrees
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    8450
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    8139
                                             39 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     941
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2864
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2519
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   55930
                                             67 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1308
                                             43 COMRAM    24    24      0
             _i2c_eeprom_writeUint32
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_writeUint32                              6     0      6    1217
                                             37 COMRAM     6     0      6
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5     994
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_go_to_steps_position
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
         _motor_set_zero
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       __motor_run
         _motor_calculate_position_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
       _motor_items_in_cue
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_set_zero
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _motor_process_cue
     __motor_run
       _motor_calculate_position_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_readUint32
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_writeUint32
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B8      11       71.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DB      31        0.0%
DATA                 0      0     7DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Dec 20 22:26:13 2019

                           __end_of_fat_read_from_file 1C5E  
                               _motor_next_speed_check 0226  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 007E  
               motor_calculate_position_in_degrees@tmp 0087  
                                  __system_timer0_init 5488  
                      __size_of_configFile_readDefault 0064  
                            __end_of_motor_divide_jump 3018  
                              configFile_read@position 01FB  
                                                   _os 0171  
                                        _USBDeviceInit FE56  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2430  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 542E  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5400  
                                     __i2c_eeprom_busy 5588  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 19A4  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 12E2  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                  l206 5336  
                                                  l207 5334  
                                                  l145 FEA0  
                                                  l147 FEC8  
                                                  l149 FF02  
                          __end_of_USBStdGetDscHandler 0846  
                                                  l184 0FEE  
                                                  l192 0F2C  
                                                  l186 1018  
                                                  l602 E57E  
                                                  l188 1096  
                                                  l700 D8AC  
                                                  l620 422C  
                                                  l612 0710  
                                                  l701 D5EC  
                                                  l613 070A  
                                                  l605 E586  
                                                  l710 D6EC  
                                                  l630 C14A  
                                                  l622 4248  
                                                  l703 D8D0  
                                                  l711 D75A  
                                                  l631 BDAA  
                                                  l615 0714  
                                                  l720 D892  
                                                  l712 D756  
                                                  l704 D698  
                                                  l640 BEEE  
                                                  l624 4254  
                                                  l608 0664  
                                                  l641 BEF8  
                                                  l625 425A  
                                                  l714 D76E  
                                                  l706 D69E  
                                                  l650 BFF0  
                                                  l642 BF1C  
                                                  l634 BDBA  
                                                  l626 4260  
                                                  l570 E59E  
                                                  l731 0AF2  
                                                  l715 D7F2  
                                                  l707 D6AA  
                                                  l619 4268  
                                                  l571 E362  
                                                  l708 D6C8  
                                                  l660 C096  
                                                  l652 C026  
                                                  l644 BF4C  
                                                  l636 BDCA  
                                                  l580 E474  
                                                  l900 45F2  
                                                  l709 D714  
                                                  l661 C0AA  
                                                  l637 BDD4  
                                                  l734 0AFE  
                                                  l726 0A9C  
                                                  l718 D862  
                                                  l670 C142  
                                                  l662 C0D2  
                                                  l654 C042  
                                                  l646 BF8C  
                                                  l582 E48C  
                                                  l735 0B26  
                                                  l719 D87A  
                                                  l639 BE28  
                                                  l591 E500  
                                                  l575 E386  
                                                  l728 0AB4  
                                                  l664 C106  
                                                  l656 C05A  
                                                  l592 E504  
                                                  l904 4604  
                                                  l753 0B90  
                                                  l737 0B62  
                                                  l681 F204  
                                                  l665 C0DA  
                                                  l649 BFC4  
                                                  l593 E52A  
                                                  l577 E4B2  
                                                  l770 0A16  
                                                  l738 0B48  
                                                  l690 F11A  
                                                  l682 F046  
                                                  l666 C0EC  
                                                  l578 E498  
                                                  l586 E5BC  
                                                  l906 4610  
                                                  l675 2A18  
                                                  l763 0A60  
                                                  l771 0A52  
                                                  l747 0B70  
                                                  l691 F144  
                                                  l667 C102  
                                                  l587 E4D2  
                                                  l579 E46A  
                                                  l764 09CA  
                                                  l684 F228  
                                                  l692 F172  
                                                  _BDT 000D00  
                                                  l677 2A34  
                                                  l757 099E  
                                                  l749 0B7E  
                                                  l693 F184  
                                                  l685 F0A0  
                                                  l589 E4DE  
                                                  l950 31D8  
                                                  l766 09D2  
                                                  l694 F18A  
                                                  l686 F0AC  
                                                  l862 381C  
                                                  l767 09E0  
                                                  l695 F19E  
                                                  l687 F0B6  
                                                  l871 3856  
                                                  l863 382E  
                                                  l944 3174  
                                                  l768 09F4  
                                                  l696 F1EC  
                                                  l688 F0CA  
                                                  l872 385A  
                                                  l769 0A02  
                                                  l873 3860  
                                                  l867 3866  
                                                  l869 3888  
                                                  l897 4622  
                                                  l986 588E  
                                                  l898 45E6  
                                                  _LBA 012B  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0289  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 00A7  
                                   api_prepare@command 0074  
                                           _USBSuspend 53D0  
                               __end_of_display_update 51D0  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks FFA2  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                         ?__write_root 0088  
                              __parse_item@item_string 007A  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                                    __find_nth_cluster 3214  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 46F8  
                                                 l2001 46FC  
                                                 l2002 4700  
                                                 l2003 4704  
                                                 l2011 F79E  
                                                 l2004 4708  
                                                 l2020 F822  
                                                 l1141 5944  
                                                 l2021 F826  
                                                 l2013 F7D6  
                                                 l1213 4920  
                                                 l1310 4DD0  
                                                 l1126 594C  
                                                 l2030 F84A  
                                                 l2022 F82A  
                                                 l2015 F866  
                                                 l2031 F84E  
                                                 l2023 F82E  
                                                 l1135 5912  
                                                 l1312 4DDC  
                                                 l1320 1ED2  
                                                 l1400 A460  
                                                 l3000 3946  
                                                 l2040 5506  
                                                 l2032 F852  
                                                 l2024 F832  
                                                 l2016 F812  
                                                 l1321 1EA2  
                                                 l1401 A47E  
                                                 l3001 393A  
                                                 l2033 F856  
                                                 l2025 F836  
                                                 l2017 F816  
                                                 l2009 F790  
                                                 l1153 590A  
                                                 l1410 A560  
                                                 l1402 A4C2  
                                                 l2034 F85A  
                                                 l2026 F83A  
                                                 l2018 F81A  
                                                 l2050 2E0A  
                                                 l1082 199A  
                                                 l1331 EAF8  
                                                 l1411 A5D0  
                                                 l1243 49F0  
                                                 l2035 F85E  
                                                 l2027 F83E  
                                                 l2019 F81E  
                                                 l1147 591E  
                                                 l2300 F934  
                                                 l1420 A740  
                                                 l1412 A5A0  
                                                 l1404 A510  
                                                 l3004 397A  
                                                 l1244 49D2  
                                                 l2036 F862  
                                                 l2028 F842  
                                                 l1164 35FE  
                                                 l2301 F93C  
                                                 l1341 EB68  
                                                 l1317 1E74  
                                                 l3005 3988  
                                                 l2037 F8F2  
                                                 l2029 F846  
                                                 l1165 35E0  
                                                 l2310 F9B2  
                                                 l2302 F960  
                                                 l1342 EB7C  
                                                 l1318 1E5E  
                                                 l1326 4EFC  
                                                 l1430 A8C6  
                                                 l1422 A816  
                                                 l1414 A654  
                                                 l1406 A54C  
                                                 l1158 4C2E  
                                                 l2046 2DB6  
                                                 l2303 F966  
                                                 l1343 EBDC  
                                                 l1335 EAD0  
                                                 l1431 A896  
                                                 l1423 A7E6  
                                                 l1407 A538  
                                                 l1159 4C10  
                                                 l2320 4314  
                                                 l2312 F9E0  
                                                 l2304 F96C  
                                                 l2240 1F70  
                                                 l1344 EB96  
                                                 l1336 EAEE  
                                                 l1440 A9B2  
                                                 l1416 A6E2  
                                                 l2080 3C8E  
                                                 l2305 F972  
                                                 l2241 1F7E  
                                                 l3041 2794  
                                                 l1345 EBDA  
                                                 l1353 0BF0  
                                                 l1441 AA0C  
                                                 l1433 A924  
                                                 l1425 A82E  
                                                 l1417 A6B2  
                                                 l1409 A542  
                                                 l1249 3B42  
                                                 l2330 3A1A  
                                                 l2306 F978  
                                                 l2234 1FBE  
                                                 l2242 1F9E  
                                                 l1530 4894  
                                                 l3050 2832  
                                                 l3042 27AC  
                                                 l1338 EB84  
                                                 l1450 AB50  
                                                 l1442 A9BE  
                                                 l1426 A85C  
                                                 l1362 2C60  
                                                 l1522 3F0E  
                                                 l2403 1D5E  
                                                 l2307 F97E  
                                                 l2251 08B8  
                                                 l1531 4850  
                                                 l1347 EC16  
                                                 l1443 AA66  
                                                 l1435 A960  
                                                 l1427 A84C  
                                                 l1419 A770  
                                                 l1523 3F32  
                                                 l2412 20C2  
                                                 l2324 FDBC  
                                                 l2308 F984  
                                                 l2172 46E6  
                                                 l3044 27DA  
                                                 l1348 EBE6  
                                                 l1460 AC62  
                                                 l1452 AB98  
                                                 l1444 AA36  
                                                 l1436 A930  
                                                 l1428 A86C  
                                                 l1540 4542  
                                                 l1364 2C80  
                                                 l2164 501C  
                                                 l2317 4336  
                                                 l2253 0930  
                                                 l2237 1F3A  
                                                 l1533 487A  
                                                 l2181 376A  
                                                 l3045 27CE  
                                                 l3061 2E8C  
                                                 l1461 ACA0  
                                                 l1453 AC0A  
                                                 l1429 A854  
                                                 l1381 A35E  
                                                 l1541 454C  
                                                 l2165 4FF8  
                                                 l2326 FE52  
                                                 l2318 42F6  
                                                 l2254 08D2  
                                                 l2246 0864  
                                                 l2270 2BA0  
                                                 l2238 1F48  
                                                 l2190 351E  
                                                 l3062 2E9A  
                                                 l3054 2E32  
                                                 l1462 AD68  
                                                 l1454 ABDA  
                                                 l1446 AB0C  
                                                 l1438 A994  
                                                 l1390 A3E8  
                                                 l2078 3C28  
                                                 l1366 2CA0  
                                                 l2166 502C  
                                                 l2319 434C  
                                                 l2255 0966  
                                                 l2271 2BAC  
                                                 l2239 1F5C  
                                                 l1551 3BF4  
                                                 l3063 2EB0  
                                                 l3055 2E46  
                                                 l1471 AE86  
                                                 l1463 AD30  
                                                 l1447 AAD4  
                                                 l1439 A9FC  
                                                 l1383 A368  
                                                 l2407 4DB0  
                                                 l1359 2C40  
                                                 l2167 500A  
                                                 l2256 08EA  
                                                 l2280 F44C  
                                                 l3048 280E  
                                                 l1376 AF1C  
                                                 l1456 AC38  
                                                 l2433 2EFC  
                                                 l2513 4CAA  
                                                 l2257 0906  
                                                 l2249 08B2  
                                                 l2265 2B5C  
                                                 l1553 3C14  
                                                 l3049 281C  
                                                 l3057 2E64  
                                                 l1473 AEB0  
                                                 l1465 ADDC  
                                                 l1457 ACDE  
                                                 l1449 AB80  
                                                 l1385 AF78  
                                                 l1377 A334  
                                                 l2530 D578  
                                                 l2282 F45E  
                                                 l2178 3734  
                                                 l3058 2E58  
                                                 l1466 ADAC  
                                                 l1458 AC56  
                                                 l1386 A392  
                                                 l1378 A372  
                                                 l2602 3E32  
                                                 l2435 2F0A  
                                                 l2515 4CC6  
                                                 l2531 D530  
                                                 l2291 F9F8  
                                                 l2267 2B96  
                                                 l2187 34E0  
                                                 l1475 AEDC  
                                                 l1459 ACF4  
                                                 l1387 A3DC  
                                                 l1379 A354  
                                                 l2603 3DFE  
                                                 l3260 20E4  
                                                 l2452 C570  
                                                 l2516 4CCE  
                                                 l2292 F8FC  
                                                 l2284 F4DC  
                                                 l1548 3BB2  
                                                 l3500 D12A  
                                                 l1468 AE4E  
                                                 l1396 A436  
                                                 l2612 5416  
                                                 l2700 B162  
                                                 l1900 12F2  
                           USBConfigureEndpoint@handle 0007  
                                                 l2461 C714  
                                                 l2453 C580  
                                                 l2269 2BD6  
                                                 l2277 F56C  
                                                 l1581 56DC  
                                                 l1549 3BBC  
                                                 l3237 538E  
                                                 l1477 AEEA  
                                                 l1469 AE78  
                                                 l1397 A46A  
                                                 l1389 A418  
                                                 l2621 3EA2  
                                                 l2613 5406  
                                                 l2605 3E0A  
                                                 l1741 4480  
                                                 l1485 51A6  
                                                 l3262 2150  
                                                 l2470 C7A4  
                                                 l2526 D388  
                                                 l2294 F904  
                                                 l3510 D20E  
                                                 l1398 A456  
                                                 l2622 3E6E  
                                                 l2606 3E14  
                                                 l2710 B202  
                                                 l1806 4034  
                                                 l1814 5542  
                                                 l1910 E63A  
                                                 l1902 1302  
                                                 l3271 2190  
                                                 l3263 2140  
                                                 l2471 C7A6  
                                                 l2455 C5C8  
                                                 l2535 D5A2  
                                                 l2527 D3D6  
                                                 l2295 F90C  
                                                 l2287 F536  
                                                 l1575 4650  
                                                 l1567 4B10  
                                                 l3503 D1C4  
                                                 l1479 AF14  
                                                 l2631 5048  
                                                 l2615 540A  
                                                 l2607 3E1E  
                                                 l2543 2FBA  
                                                 l2711 B210  
                                                 l2703 B194  
                                                 l1743 44BA  
                                                 l1911 E7D2  
                                                 l1903 13BE  
                                                 l2472 C80E  
                                                 l2464 C736  
                                                 l2528 D472  
                                                 l2296 F914  
                                                 l1576 465A  
                                                 l1568 4B1A  
                                                 l3520 D27E  
                                                 l3512 D218  
                                                 l2624 3E7A  
                                                 l2616 540E  
                                                 l2608 3E28  
                                                 l2720 B2A2  
                                                 l1808 408C  
                                                 l1816 5554  
                                                 l1760 275C  
                                                 l1912 E6C0  
                                                 l1904 13B6  
                                                 l2473 C838  
                                                 l2465 C73E  
                                                 l2457 C64A  
                                                 l2529 D4C0  
                                                 l2297 F91C  
                                                 l1681 525A  
                                                 l3505 D1D4  
                                                 l2625 3E84  
                                                 l2617 5412  
                                                 l2801 B780  
                                                 l2713 B24A  
                                                 l1833 1B74  
                                                 l1913 E6E8  
                                                 l1921 25DE  
                                                 l2466 C798  
                                                 l2298 F924  
                                                 l2626 3E8E  
                                                 l2546 2FDE  
                                                 l2706 B7E8  
                                                 l2810 B73A  
                                                 l2802 B6DE  
                                                 l2714 B218  
                                                 l1842 1B5E  
                                                 l1762 2766  
                                                 l1914 E790  
                                                 l1930 2602  
                                                 l1922 25E2  
                                                 l2459 C692  
                                                 l2299 F92C  
                                                 l2627 3E98  
                                                 l2811 B764  
                                                 l2803 B70C  
                                                 l2715 B222  
                                                 l1851 03A2  
                                                 l1931 2606  
                                                 l1923 25E6  
                                                 l3268 2174  
                                                 l3620 02A4  
                                                 l3524 D2A4  
                                                 l3508 D1F8  
                                                 l3452 4A72  
                                                 l2636 3F5E  
                                                 l2740 B3C4  
                                                 l2724 B3B2  
                                                 l2732 B348  
                                                 l2708 B23A  
                                                 l2716 B230  
                                                 l1836 1AE6  
                                                 l1780 DABC  
                                                 l1852 0400  
                                                 l1932 260A  
                                                 l1924 25EA  
                                                 l3541 DC68  
                                                 l3269 2168  
                                                 l2557 3110  
                                                 l1677 528E  
                                                 l3525 D2AC  
                                                 l3517 D238  
                                                 l3453 4A6A  
                                                 l2813 B76E  
                                                 l2741 B3D4  
                                                 l2733 B35A  
                                                 l2725 B2DC  
                                                 l2709 B1E0  
                                                 l1845 3CB0  
                                                 l3381 411A  
                                                 l1757 2702  
                                                 l1933 260E  
                                                 l1925 25EE  
                                                 l3534 DBDE  
                                                 l3622 02EE  
                                                 l2558 3148  
                                                 l3702 53BC  
                                                 l3526 D2AE  
                                                 l3462 4F82  
                                                 l2806 B71A  
                                                 l2750 B43E  
                                                 l2742 B3E2  
                                                 l2726 B2F0  
                                                 l2718 B264  
                                                 l3710 4592  
                                                 l3382 410E  
                                                 l1790 DB0C  
                                                 l1774 D944  
                                                 l1942 E214  
                                                 l1950 E126  
                                                 l1918 2626  
                                                 l1934 2612  
                                                 l1926 25F2  
                                                 l3551 DD72  
                                                 l3543 DC90  
                                                 l3535 DBDA  
                                                 l3631 0360  
                                                 l3623 02D6  
                                                 l3615 0270  
                                                 l3703 53AA  
                                                 l3463 4F7A  
                                                 l2671 B79E  
                                                 l2807 B724  
                                                 l3711 4588  
                                                 l1767 32A6  
                                                 l1791 DB54  
                                                 l1951 E138  
                                                 l1943 E0E4  
                                                 l1935 2616  
                                                 l1927 25F6  
                                                 l1919 25DA  
                                                 l3560 DDEE  
                                                 l3552 DD54  
                                                 l3544 DD3E  
                                                 l3616 0280  
                                                 l2840 F3E8  
                                                 l3456 4A92  
                                                 l2808 B732  
                                                 l2760 B4F0  
                                                 l2752 B472  
                                                 l2744 B41C  
                                                 l2736 B38C  
                                                 l1768 323C  
                                                 l1880 E838  
                                                 l2912 1C9E  
                                                 l1784 DA88  
                                                 l1960 E194  
                                                 l1952 E14A  
                                                 l1936 261A  
                                                 l1928 25FA  
                                                 l3561 DE12  
                                                 l3545 DCEE  
                                                 l3625 0320  
                                                 l3617 029E  
                                                 l3457 4A9C  
                                                 l2761 B4AC  
                                                 l2745 B3EA  
                                                 l2729 B322  
                                                 l2673 B1BA  
                                                 l2681 B01A  
                                                 l2921 FA78  
                                                 l1769 3288  
                                                 l3385 4142  
                                                 l2913 1C66  
                                                 l1777 D94E  
                                                 l1849 0390  
                                                 l1961 E198  
                                                 l1953 E15C  
                                                 l1945 E0E8  
                                                 l1937 261E  
                                                 l1929 25FE  
                                                 l3562 DE3C  
                                                 l3546 DD16  
                                                 l3538 DC1E  
                                                 l3570 CC7E  
                                                 l3626 0314  
                                                 l3490 D0BE  
                                                 l3482 D008  
                                                 l3466 4F9A  
                                                 l2770 B51A  
                                                 l2762 B4B8  
                                                 l2754 B47E  
                                                 l2746 B3F4  
                                                 l2682 B02A  
                                                 l2674 AFB2  
                                                 l3642 231A  
                                                 l1882 EA02  
                                                 l3386 4150  
                                                 l1786 DA96  
                                                 l1778 D9F4  
                                                 l1970 E1BC  
                                                 l1962 E19C  
                                                 l1954 E16E  
                                                 l1946 E0EC  
                                                 l1938 2622  
                                                 l3563 DE48  
                                                 l3539 DC1A  
                                                 l3619 02B0  
                                                 l3491 D0CC  
                                                 l3483 D004  
                                                 l2843 F3FE  
                                                 l3467 4FA4  
                                                 l2763 B4C6  
                                                 l2755 B48A  
                                                 l2739 B40C  
                                                 l2747 B402  
                                                 l2691 B0C4  
                                                 l2675 AFC2  
                                                 l3643 22DC  
                                                 l1883 E8F0  
                                                 l2915 1D10  
                                                 l1795 DB8E  
                                                 l1787 DA9E  
                                                 l1779 D9A0  
                                                 l1971 E1C0  
                                                 l1963 E1A0  
                                                 l1955 E180  
                                                 l1947 E0F0  
                                                 l3564 DE4A  
                                                 l3548 DD3C  
                                                 l3580 CE7E  
                                                 l3572 CCAE  
                                                 l3492 D0D0  
                                                 l2780 B5FC  
                                                 l2772 B55E  
                                                 l2924 FADA  
                                                 l3636 2288  
                                                 l2940 C9B4  
                                                 l3724 3B04  
                                                 l1884 E918  
                                                 l2916 1D0C  
                                                 l1796 DBA2  
                                                 l1980 E1E4  
                                                 l1972 E1C4  
                                                 l1964 E1A4  
                                                 l1956 E184  
                                                 l1948 E102  
                                                 l3573 CCAA  
                                                 l3485 D064  
                                                 l3477 CFC0  
                                                 l2837 F3C2  
                                                 l2765 B500  
                                                 l2749 B42C  
                                                 l2693 B0EA  
                                                 l2685 B05C  
                                                 l3645 234E  
                                                 l3637 2282  
                                                 l3653 1520  
                                                 l3733 5858  
                                                 l2941 C9EA  
                                                 l3725 3AA2  
                                                 l1885 E9C0  
                                                 l1877 1C10  
                                                 l1789 DB14  
                                                 l1973 E1C8  
                                                 l1965 E1A8  
                                                 l1957 E188  
                                                 l1949 E114  
                                                 l3558 DDAA  
                                                 l3574 CCBE  
                                                 l3486 D028  
                                                 l3478 CFBC  
                                                 l3670 4F4C  
                                                 l3718 5082  
                                                 l2782 B676  
                                                 l2790 B654  
                                                 l2766 B4CE  
                                                 l2694 B0FA  
                                                 l2678 AFF4  
                                                 l2950 CBD0  
                                                 l2942 CA20  
                                                 l3726 3AFA  
                                                 l1990 E208  
                                                 l1982 E1E8  
                                                 l1974 E1CC  
                                                 l1966 E1AC  
                                                 l1958 E18C  
                                                 l3591 CF5A  
                                                 l3575 CCDC  
                                                 l3495 D13C  
                                                 l3719 507C  
                                                 l2783 B610  
                                                 l2775 B5B6  
                                                 l2767 B4D8  
                                                 l2687 B082  
                                                 l3639 22CA  
                                                 l2951 CC06  
                                                 l2943 CA56  
                                                 l1991 E20C  
                                                 l1983 E1EC  
                                                 l1975 E1D0  
                                                 l1967 E1B0  
                                                 l1959 E190  
                                                 l3592 CF78  
                                                 l3568 CC6E  
                                                 l3496 D104  
                                                 l2792 B65C  
                                                 l2784 B624  
                                                 l2768 B4E6  
                                                 l2688 B092  
                                                 l3664 571C  
                                                 l3656 1582  
                                                 l2944 CA8C  
                                                 l2936 C912  
                                                 l2960 F710  
                                                 l1992 E210  
                                                 l1984 E1F0  
                                                 l1976 E1D4  
                                                 l1968 E1B4  
                                                 l3569 CC6A  
                                                 l3489 D0E0  
                                                 l2793 B66E  
                                                 l2777 B5D2  
                                                 l2697 B12C  
                                                 l2929 FBB4  
                                                 l3657 152A  
                                                 l2945 CAC2  
                                                 l2961 F604  
                                                 l1985 E1F4  
                                                 l1977 E1D8  
                                                 l1969 E1B8  
                                                 l3586 CED4  
                                                 l3674 3020  
                                                 l2778 B5E4  
                                                 l2946 CAF8  
                                                 l2938 C948  
                                                 l2962 F69A  
                                                 l3690 144C  
                                                 l1986 E1F8  
                                                 l1978 E1DC  
                                                 l3579 CE9C  
                                                 l3499 D126  
                                                 l2795 B68E  
                                                 l2787 B632  
                                                 l2699 B152  
                                                 l3659 15C8  
                                                 l2947 CB2E  
                                                 l2939 C97E  
                                                 l2963 F6CC  
                                                 l3691 14BA  
                                                 l1987 E1FC  
                                                 l1979 E1E0  
                                                 l3588 CF18  
                                                 l3676 305C  
                                                 l2796 B6BA  
                                                 l2788 B646  
                                                 l2948 CB64  
                                                 l3684 4A2C  
                                                 l1996 470C  
                                                 l1988 E200  
                                                 l3589 CF36  
                                                 l3677 309E  
                                                 l2981 4808  
                                                 l2949 CB9A  
                                                 l1997 46F0  
                                                 l1989 E204  
                            ?__offset_from_file_number 0060  
                                                 l2982 481C  
                                                 l2798 B6C4  
                                                 l2967 C506  
                                                 l1999 46F4  
                                                 l3696 43FE  
                                                 l3688 13F0  
                                                 l2968 C51C  
                                                 l3697 43C4  
                  __end_of__encoder_next_arc_step_size 3EDC  
                          __encoder_next_arc_step_size 3E6C  
                        __size_of_encoder_statemachine 0868  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02D3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 u9910 098A  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 u9675 3BC8  
                                                 u9765 4666  
                                                 u9785 3D26  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                 __motor_run@maximum_distance_in_steps 009C  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00CB  
                                       _ResetSenseData 428C  
                                                 _enc1 0154  
                                                 _enc2 0153  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 014F  
                                                 _atoi 2280  
                                                 _atol 14DE  
                                                 _main 3802  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 4F26  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 49FE  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 530E  
                                                 btemp 005F  
                                                 _utoa 3018  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00AC  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 592E  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 58C8  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 542E  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 0001  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E7F4  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2430  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0143  
                     __end_of__fat_sector_from_cluster 57DC  
                               __get_available_cluster 26A8  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 5674  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3A1E  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 52A6  
                 __make_cluster_chain@sector_in_buffer 00A6  
                           i2c_eeprom_writeUint32@data 0028  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 1D42  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02C0  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l12116 DE3C  
                                                l13180 C80E  
                                                l12540 0AFE  
                                                l13184 C838  
                                                l15400 3B3A  
                                                l12818 43C4  
                                                l14418 1B74  
                                                l14354 553A  
                                                l16108 FA70  
                                                l13592 BF14  
                                                l15440 EA68  
                                                l16128 FAD2  
                                                l15168 2316  
                                                l14384 1AC8  
                                                l15460 EB12  
                                                l17124 0BF0  
                                                l13828 3AA2  
                                                l15516 3EE0  
                                                l13758 26CC  
                                                l13782 276C  
                                                l12896 F1FE  
                                                l14840 F7D6  
                                                l14832 F79E  
                                                l15800 ED46  
                                         spi_tx@length 0062  
                                                l14826 F790  
                                                l15810 ED6E  
                                                l17420 FE98  
                                                l14932 F866  
                                                l15812 ED76  
                                                l15708 2D86  
                                                l17094 4DD4  
                                                l18222 A4BA  
                                                l15574 0400  
                                                l14950 5506  
                                                l15726 2DDA  
                                                l17600 45F2  
                                                l16552 53AA  
                                                l17088 4DC8  
                                                l15760 EC90  
                                                l15850 EE14  
                                                l15826 EDBE  
                                                l15746 EC48  
                                                l16804 0900  
                                                l15940 2BA4  
                                                l17604 4610  
                                                l18236 A508  
                                                l16638 E37E  
                                                l16734 519E  
                                                l15838 EDE4  
                                                l15774 ECD8  
                                                l17448 FEFA  
                                                l15848 EE0C  
                                                l14994 D2FC  
                                                l15788 ED20  
                                                l19352 3E4C  
                                                l19344 E22E  
                                                l19354 3E62  
                                                l19346 E346  
                                                l19356 3EBC  
                                                l19358 3ED2  
                                        ___fltol@sign1 0068  
                                      __end_of___aldiv 2844  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 2EC2  
                                                ?_atol 006C  
                                      __end_of___fladd D2CA  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv DE66  
                                                ?_itoa 0070  
                                      __end_of___flneg 53A0  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul CF8E  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 21A2  
                                      __end_of___lldiv 399A  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u11010 4F86  
                                                u10140 DDA6  
                                                u10400 2102  
                                                u10170 DDFC  
                                                u10330 CED0  
                                                u11130 43E6  
                                                u10180 DE20  
                                                u10405 20F8  
                                                u10270 CCCA  
                                                u10360 CF26  
                                                u10280 CE40  
                                                u10440 217A  
                                                u10520 032A  
                                                u11208 F0F4  
                                                u11400 D830  
                                                u11137 43DC  
                                                u11209 F108  
                                                u10370 CF44  
                                                u11155 F072  
                                                u11500 41A6  
                                                u10285 CE36  
                                                u13110 2C6C  
                                                u11510 41B2  
                                                u13200 DA36  
                                                u13120 2C8C  
                                                u11265 D618  
                                      __end_of___llmod 4162  
                               __end_of_USBDeviceTasks 00E8  
                                                u11418 D83C  
                                                u14010 062A  
                                                u13210 DA62  
                                                u11419 D850  
                                                u10900 0B8C  
                                                u11348 D724  
                                                u11516 41B4  
                                                u11508 41AA  
                                                u11460 416E  
                                                u11349 D738  
                                                u10830 0B44  
                                                u11390 D82E  
                                                u12430 C06E  
                                                u11470 417C  
                                                u11288 D650  
                                                u12440 C080  
                                                u12360 BF44  
                                                u12328 BE38  
                                                u14024 0642  
                                                u13400 1B74  
                                                u13320 555A  
                                                u13240 DAEC  
                                                u13160 D986  
                                                u11480 418A  
                                                u11289 D664  
                                                u12329 BE4C  
                                                u14025 063C  
                                                u12338 BE6C  
                                                u14034 067C  
                                                u11810 394A  
                                                u12610 276C  
                                                u11490 4198  
                                                u12339 BE80  
                                                u14035 0676  
                                                u14131 4BA6  
                                                u14115 4910  
                                                u10940 528A  
                                                u10860 0B5E  
                                                u14220 EA7C  
                                                u13260 DB68  
                                                u13180 DA00  
                                                u11468 4172  
                                                u10950 5256  
                                                u12470 C10E  
                                                u14230 EAF2  
                                                u13430 3C8A  
                                                u12630 3274  
                                                u13270 DB74  
                                                u13190 DA2A  
                                                u11478 4180  
                                                u10880 0B78  
                                                u13440 E814  
                                                u11840 411E  
                                                u11488 418E  
                                                u14160 3B88  
                                                u11585 4558  
                                                u11770 C7A0  
                                                u12378 BF68  
                                                u14074 06DA  
                                                u14058 06A4  
                                                u14410 133E  
                                                u11498 419C  
                                                u12379 BF7C  
                                                u14075 06D4  
                                                u14059 06BA  
                                                u11595 5574  
                                                u13531 F7A8  
                                                u13700 FD9C  
                                                u10980 4A76  
                                                u14260 EB26  
                                                u14420 1370  
                                                u13445 E808  
                                                u14270 EB80  
                                                u13390 1B6A  
                                                u12670 4088  
                                                u12590 272C  
                                                u14430 138A  
                                                u14415 1334  
                                                u15240 2E68  
                                                u14600 2E10  
                                                u13465 E8AC  
                                                u14425 1366  
                                                u15410 D0E8  
                                                u12690 3AC8  
                                                u14370 03C8  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15180 27DE  
                                                u14700 ED6E  
                                                u14620 EC72  
                                                u17110 318E  
                                                u14375 03BE  
                                                u15360 D094  
                                                u17200 AFEE  
                                                u14480 E660  
                                                u14720 EDA0  
                                                u14640 ECBA  
                                                u17130 31A2  
                                                u15370 D0A4  
                                                u13770 45D4  
                                                u14570 2DBC  
                                                u14820 2BD4  
                                                u15620 D28A  
                                                u15540 D21C  
                                                u15380 D0A6  
                                                u14740 EDDC  
                                                u14660 ED02  
                                                u14485 E656  
                                                u17310 B0F6  
                                                u17230 B026  
                                                u15800 E378  
                                                u18120 F3AC  
                                                u18200 A4EA  
                                                u17320 B126  
                                                u17240 B056  
                                                u14920 FAB8  
                                                u14760 EE0C  
                                                u14680 ED3E  
                                                u15570 D234  
                                                u18130 F3BC  
                                                u16451 F75C  
                                                u15820 E3AE  
                                                u18140 F3D2  
                                                u17500 B2EA  
                                                u14780 EE3E  
                                                u18150 F3E2  
                                                u17510 B31C  
                                                u17350 B15E  
                                                u17270 B08E  
                                                u17190 AFBE  
                                                u17360 B18E  
                                                u17280 B0BE  
                                                u14960 FB50  
                                                u16730 FEBC  
                                                u16490 4E08  
                                                u14875 04E2  
                                                u19107 4BCC  
                                                u17540 B354  
                                                u14980 FBAA  
                                                u19117 486C  
                                                u13998 05F8  
                                                u16590 2F7E  
                                                u17550 B386  
                                                u19127 487E  
                                                u13999 060C  
                                                u16760 FF5E  
                                                u19137 4888  
                                                u17810 B5A4  
                                      __end_of___lwdiv 4AA6  
                                                u17811 B5A2  
                                                u18700 3836  
                                                u15990 E55E  
                                                u19097 4BB8  
                         __flash_write_to_buffer@start 0073  
                                                u17790 B54E  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 4FAE  
                                                i2l300 32F4  
                                                i2l220 3444  
                                                i2l214 288C  
                                                i2l222 345A  
                                                i2l231 1654  
                                                i2l232 15FE  
                                                i2l160 FFF2  
                                                i2l321 33E2  
                                                i2l145 012E  
                                                i2l250 2558  
                                                i2l226 36B0  
                                                i2l322 33DC  
                                                i2l162 0018  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 4FEE  
                                                i2l315 51FC  
                                                i2l147 0156  
                                                i2l155 FFB8  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2940  
                                                i2l260 0E0C  
                                                i2l332 4422  
                                                i2l180 50CE  
                                                i2l236 167E  
                                                i2l308 4FEC  
                                                i2l316 51FA  
                                                i2l172 00A6  
                                                i2l164 002E  
                                                i2l156 FFC8  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 25D0  
                                                i2l245 2526  
                                                i2l341 2944  
                                                i2l261 0DEA  
                                                i2l149 018E  
                                                i2l165 003A  
                                                i2l157 FFD0  
                                                i2l254 2598  
                                                i2l342 29C2  
                                                i2l334 446C  
                                                i2l174 00C4  
                                                i2l166 0062  
                                                i2l247 2530  
                                                i2l343 2988  
                                                i2l263 0E80  
                                                i2l167 006C  
                                                i2l159 FFE6  
                                                i2l264 0E66  
                                                i2l184 11F6  
                                                i2l192 1138  
                                                i2l432 24DE  
                                                i2l280 082E  
                                                i2l272 21EA  
                                                i2l360 237C  
                                                i2l176 00E0  
                                                i2l249 2590  
                                                i2l345 29A8  
                                                i2l425 247C  
                                                i2l281 072A  
                                                i2l361 238E  
                                                i2l169 007E  
                                                i2l186 1220  
                                                i2l426 244C  
                                                i2l274 225E  
                                                i2l362 2394  
                                                i2l179 50C0  
                                                i2l283 073C  
                                                i2l355 23EC  
                                                i2l188 129E  
                                                i2l436 249E  
                                                i2l428 248E  
                                                i2l372 DE86  
                                                i2l284 07C6  
                                                i2l364 239A  
                                                i2l356 2368  
                                                i2l437 24B4  
                                                i2l429 246A  
                                                i2l381 DFDE  
                                                i2l373 DE8C  
                                                i2l293 3330  
                                                i2l365 23B6  
                                                i2l534 0DB4  
                                                i2l438 24BE  
                                                i2l550 2B06  
                                                i2l286 07CC  
                                                i2l294 32C6  
                                                i2l366 23CE  
                                                i2l358 2370  
                                                i2l535 0D20  
                                                i2l439 24D4  
                                                i2l391 E06A  
                                                i2l383 DFA8  
                                                i2l375 DEF4  
                                                i2l287 0822  
                                                i2l359 2376  
                                                i2l384 DFC4  
                                                i2l537 0DAC  
                                                i2l545 2B38  
                                                i2l393 E0BC  
                                                i2l377 DF3C  
                                                i2l289 0828  
                                                i2l297 3346  
                                                i2l562 2B0C  
                                                i2l546 2AA0  
                                                i2l386 E02A  
                                                i2l298 32D6  
                                                i2l387 E036  
                                                i2l379 DF5E  
                                                i2l299 32DA  
                                                i2l900 4AB4  
                                                i2l820 3892  
                                                i2l388 E0B0  
                                                i2l821 389A  
                                                i2l822 38A2  
                                                i2l904 4AC6  
                                                i2l816 38C4  
                                                i2l824 38AC  
                                                i2l906 4AD2  
                                                i2l826 38B6  
                                                i2l780 4972  
                                                i2l783 49A8  
                                                _UADDR 000F38  
                                                i2l897 4AE4  
                                                i2l898 4AAA  
          __end_of_motor_calculate_position_in_degrees 20C4  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0087  
                  _motor_calculate_position_in_degrees 1FE6  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 48FE  
                                  ___lmul@multiplicand 0064  
                            __end_of__find_nth_cluster 32BA  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E5C0  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2A8C  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 348E  
            motor_divide_jump@target_position_in_steps 00C4  
                                                _sd000 A2E5  
                               __write_value_to_offset 5208  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 49AA  
                                         _gblCBWLength 015E  
                __i2c_display_send_init_sequence@F6939 02AF  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 41C6  
                                      __end_of_isdigit 5724  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 42EE  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 5974  
                                                _ultoa 13E0  
                             __parse_command_long@data 00B3  
                            __data_sector_from_cluster 58A8  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0CAE  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0162  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 43B2  
                motor_go_to_steps_position@overhead_cw 00B3  
                                      __end_of_stricmp 45E0  
                                      __end_of_strncmp 3B20  
                                      __end_of_toupper 585C  
                                     __end_ofi2_memcpy 452C  
                                     __end_ofi2_memset 54E0  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 0368  
                                       _MSDReadHandler F044  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain DBAC  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3526  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 52DA  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 5844  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5768  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 582A  
                        _ExternalFlash_MediaInitialize 5746  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 18B8  
                              __end_of_fat_resize_file 13E0  
                                         __end_of_atoi 2358  
                                         __end_of_atol 15DA  
                                         __end_of_main 3890  
                                         __end_of_itoa 4F6A  
               __end_of__ic2_display_set_ddram_address 56BC  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5698  
                                         __end_of_ltoa 4A52  
                      __end_of_i2c_display_write_fixed 49FE  
                                         __end_of_utoa 30C2  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 00C3  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 57C2  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 5924  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00AA  
                         __motor_run@distance_in_steps 008F  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature F22E  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest FD08  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest FBBA  
                                         __get_fat@idx 0060  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 591A  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                               _motor_schedule_command 2EC2  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
                             _fat_get_file_information 3C18  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5978  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 5974  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0127  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 58FA  
                        i2c_eeprom_writeUint32@address 0026  
                        __get_available_cluster@sector 0093  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5340  
                               __flash_write_to_buffer 4AFA  
               __end_of__ic2_display_set_cgram_address 5534  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 550A  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 57F6  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 594A  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4BEC  
                                     __end_of_adc_init 47F6  
                                               i2l1203 3A7A  
                                               i2l1204 3A4A  
                                               i2l1141 5954  
                                               i2l1126 595C  
                            fat_read_from_file@cluster 00D9  
                                  ?_motor_items_in_cue 0001  
                                               i2l1066 5156  
                                               i2l1158 4E8E  
                                               i2l1159 4E72  
                                               i2l2480 B852  
                                               i2l2481 B8A8  
                                               i2l2482 B8D2  
                                               i2l2650 1722  
                                               i2l2492 BBB6  
                                               i2l2484 BB7C  
                                               i2l2660 1792  
                                               i2l2652 1738  
                                               i2l2644 1746  
                                               i2l2477 B850  
                                               i2l2653 1740  
                                               i2l3702 54CE  
                                               i2l2654 17B6  
                                               i2l2662 17A8  
                                               i2l3703 54BE  
                                               i2l2495 BD1C  
                                               i2l2487 B9C6  
                                               i2l2479 BDA6  
                                               i2l2663 17B0  
                                               i2l2647 1700  
                                               i2l2496 BC72  
                                               i2l2488 BA1A  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2489 BB3C  
                                               i2l2657 1770  
                                               i2l2498 BD7A  
                                               i2l3696 451A  
                                               i2l3697 44E2  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fat 4746  
                                     __end_of__get_fbr E356  
                                     __end_of__get_mbr 26A8  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00AB  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler F22E  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0372  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     _configFile_write C194  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 58A8  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0170  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3A1E  
                                     ?_fat_modify_file 00A1  
                                _i2c_eeprom_readUint32 545C  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 3D86  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 3F4A  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 47F6  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 3C92  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 007A  
                                               ___wmul 55D8  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3132 0003  
            SYSTEM_Initialize@pll_startup_counter_3132 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 015D  
                                            ??___lwmod 0064  
                                               _config 01A1  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 50B0  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02D0  
                            i2c_eeprom_readUint32@data 007D  
                                               _memcpy 43B2  
                                   ?_fat_get_file_size 0095  
                                               _memset 53A0  
                     __end_of__sector_from_file_number 5370  
                              __end_of_i2c_eeprom_read 4954  
                                               _params 021F  
                                               clear_0 356E  
                                               clear_1 3580  
                                               clear_2 358C  
                                               clear_3 3598  
                                               clear_4 35AA  
                            _ExternalFlash_SectorWrite 523E  
                                    api_parse@inBuffer 00C4  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0093  
                                 __end_of_encoder_init 5698  
                                               _spi_tx 4694  
                                   ?_USBEnableEndpoint 0009  
                                   _flash_partial_read 5628  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02B8  
                                i2c_display_init@F6942 02A6  
                                               _strlen 5072  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00B9  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 00A7  
                                     __end_of_tmr0_isr 5160  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 00A0  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1B78  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00B5  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 0174  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                  __size_of_motor_go_to_steps_position 0320  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 5032  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0155  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4B9C  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4090  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4090  
                                            ??_strncmp 0066  
               motor_go_to_steps_position@overhead_ccw 00B7  
                                            ??_toupper 0060  
                                   __size_of__add_item 00E4  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 016F  
                           ??_APP_DeviceCustomHIDTasks 00CF  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 45E0  
                                         ___xxtofl@val 0060  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 55B0  
                                           __accesstop 0060  
                              __end_of__initialization 35B0  
                       __end_of_motor_speed_from_index 5872  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 5126  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003E  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5910  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3DFC  
                          __end_of__parse_command_long 4350  
                                   __size_of__get_data 002A  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 3D0C  
                                   __size_of__get_item 0150  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                   __size_of__get_root 0198  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 013F  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5810  
                          _motor_increase_manual_speed 57F6  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 50EC  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 4CDC  
                                         __pidataBANK4 4B4C  
                             __parse_item@value_string 007C  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 5534  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01BF  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 29CC  
                                        __end_of_ultoa 14DE  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0970  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 11E0  
                       __end_of_motor_set_manual_speed 4CDC  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 4C3C  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1B78  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C194  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BDA8  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 40FA  
                               flash_partial_read@page 0087  
                                        __get_data@idx 0060  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0164  
                motor_nonzero_steps_from_degrees@steps 0093  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                            __end_of_SYSTEM_Initialize 463A  
                                    __end_of__i2c_read 364E  
                                    __end_of__i2c_send 592E  
                               _USBStdGetStatusHandler 32BA  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 594A  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 0ECA  
                                           _gblNumBLKS 022E  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0284  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 2E14  
                                        __flash_wakeup 484E  
                             __fill_buffer_get_display 2B48  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 011B  
                               ?_i2c_eeprom_readUint32 0079  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 16D4  
                __end_of_APP_DeviceCustomHIDInitialize 530E  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 52DA  
                          MSDTransferTerminated@handle 000C  
                   __size_of__data_sector_from_cluster 0010  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00A9  
                               ??_adc_read_temperature 0087  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7FC  
                                           _fat_format EC3E  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1D42  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run C546  
                                       ___lmul@product 0068  
               __motor_run@maximum_distance_in_degrees 009A  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                        __get_root@idx 0060  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 335A  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 013C  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fat 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 0ECA  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa EA1A  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 2358  
                                   __size_of_motor_isr 05AC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l12422 2464  
                                              i2l13360 21E2  
                                              i2l13290 54BE  
                                              i2l12734 4AB4  
                                              i2l12738 4AD2  
                                              i2l12786 2530  
                                              i2l16540 44E2  
                                              i2l17348 0126  
                                              i2l17376 0186  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l17554 0076  
                                              i2l18604 BD7A  
                                              i2l18524 B8A8  
                                              i2l19366 38DC  
                                              i2l19368 3910  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 0060  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 4AFA  
                                           ??i2_memcpy 0007  
                                           ??i2_memset 0007  
                                           _flash_init 58C8  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 25D8  
                                    __end_of__get_data 550A  
                                    __end_of__get_date 58EE  
                                  _USBStdSetCfgHandler 21A2  
                                    __end_of__get_item FBBA  
                                   i2__i2c_eeprom_busy 564E  
                                    __end_of__get_time 58E2  
                     __end_of_maximum_speed_arc_string A237  
                                    __end_of__get_root F8F6  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 1F08  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 11E0  
                       ??_motor_divide_jump_to_nearest 00C3  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 3EDC  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position D5EA  
                           _motor_go_to_steps_position D2CA  
             __end_of_motor_nonzero_steps_from_degrees 4DC2  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 4D76  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5898  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 479E  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 3C18  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 3B9C  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2776  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0970  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 05E8  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0076  
                             fat_find_file@file_number 0091  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 44D0  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 4472  
                                    __end_of__spi_init 5198  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 0098  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0A8A  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                             _inverse_direction_string A249  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2776  
                                              ___almod 2E14  
                                            ?_spi_init 0001  
                                              ___fladd CF8E  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0BA0  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv DBAC  
                                     _ToSendDataBuffer 0338  
                                              ___flneg 5370  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 58B8  
                                              ___flmul CC3C  
                                              ___fltol 20C4  
                                              ___lldiv 3916  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 40FA  
                                              ___lwdiv 4A52  
                              ?_motor_schedule_command 00A0  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 4F6A  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 00A4  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 5942  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00F0  
                                              __pcinit 3526  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 523E  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3802  
                                              __ptext1 18B8  
                                              __ptext2 5788  
                                              __ptext3 57A6  
                                              __ptext4 545C  
                                              __ptext5 48FE  
                                              __ptext6 35BA  
                                              __ptext7 5906  
                                              __ptext8 5910  
                                              __ptext9 591A  
                                       ?__display_itoa 0095  
                                              _inPipes 0052  
                                       fat_format@cntr 0084  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0165  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fat 0062  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 422A  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00C8  
                                 __motor_run@direction 0099  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 54B4  
                              __read_value_from_offset 4E0C  
                              _fat_read_from_file_fast E7F4  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 0DBC  
                                              _isdigit 5702  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C546  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 58B8  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5906  
                             __offset_from_file_number 555E  
                             __end_of_i2c_eeprom_write 3AA0  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit 00E8  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                             ??_i2c_eeprom_writeUint32 002C  
                   __size_of_ExternalFlash_SectorWrite 0034  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              _stricmp 4586  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3AA0  
                                              _toupper 5844  
                                  _flash_partial_write 3FB8  
                                 end_of_initialization 35B0  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 4954  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 00AA  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 007E  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 071A  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 5674  
                                      _USB1msTickCount 012F  
                                 ??__display_itoa_long 00B4  
                                            i2u1111_40 25C2  
                             __flash_partial_read@data 0079  
                                            i2u1111_47 25B8  
                                            i2u1201_40 0792  
                                            i2u1201_47 0788  
                                            i2u1202_40 07C2  
                                            i2u1202_47 07B8  
                                            i2u1204_40 0818  
                                            i2u1204_47 080E  
                                            i2u1109_40 2582  
                                            i2u1109_47 2578  
                                            i2u1070_40 2AE8  
                             ?_USBStdFeatureReqHandler 0001  
                             __flash_partial_read@page 0073  
                                            i2u1226_40 E050  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1408_45 3A2A  
                                            i2u1409_40 3A82  
                                            i2u1290_40 48EA  
                                            i2u1290_46 48EC  
                                            i2u1700_40 00E4  
                                            i2u1197_40 2216  
                                            i2u1285_40 48B0  
                                              ltoa@val 007C  
                                            i2u1286_40 48BC  
                                            i2u1285_48 48B2  
                                            i2u1287_40 48C8  
                                            i2u1286_48 48BE  
                                            i2u1288_40 48D4  
                                            i2u1287_48 48CA  
                                            i2u1289_40 48E0  
                                            i2u1288_48 48D6  
                                            i2u1289_48 48E2  
                                    __end_of_motor_isr BDA8  
                                            i2u1566_40 4504  
                                            i2u1566_47 44FA  
                                            i2u1671_40 01EA  
                                            i2u1851_40 B9B6  
                                            i2u1668_40 014A  
                                            i2u1846_41 B824  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1856_40 BB92  
                                            i2u1857_40 BBB2  
                                            i2u1849_41 B8EC  
                      __parse_command_long@out_idx_ptr 00B7  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                                 __size_ofi2__i2c_stop 0008  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5400  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 33F4  
                         i2c_eeprom_readUint32@address 0079  
                                    __end_of_spi_tx_rx 3526  
                       __end_of_motor_schedule_command 2F6E  
                                    __end_of_spi_tx_tx 3772  
                             __end_of_i2c_display_init 4BEC  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 58FA  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 58EE  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                          ?_fat_format 0001  
                                 ?_flash_partial_write 007F  
                     __size_of__fill_buffer_get_status 01F0  
                                              utoa@buf 0067  
                                           _motor_init 5788  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0156  
                             _USBCtrlEPServiceComplete 15DA  
                                              utoa@val 0069  
                                            _MSD_State 0163  
                                           _motor_stop 4E9C  
              __end_of__cluster_from_sector_and_offset 55D8  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 55B0  
                                          ?__motor_run 008F  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0168  
                           _USBStatusStageEnabledFlag2 0167  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4B4C  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 50EC  
motor_divide_jump_to_nearest@nearest_position_in_steps 00C3  
                                          ___fladd@grs 0085  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00C7  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 0006  
                                   _ReceivedDataBuffer 0378  
                                   _BothEP0OutUOWNsSet 016B  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 49AA  
                           motor_arc_move@arc_in_steps 00AC  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C1  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 3E6C  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 3DFC  
                                          ___flmul@grs 007B  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 10DA  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 597C  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5978  
                    __parse_jump_steps@number_of_steps 00AF  
                         __end_of__display_signed_itoa 4F26  
                     __end_of_motor_steps_from_degrees 1E26  
                  __end_of__motor_get_speed_in_degrees 05E8  
                          __motor_get_speed_in_degrees 04AE  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FA6A  
                                   ??__i2c_eeprom_busy 0065  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 4024  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item CC3C  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3772  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 1E26  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit FFA2  
                __end_of_USBIncrement1msInternalTimers 5788  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5768  
                                       __end_of___lmul 484E  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5600  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 0FD4  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit 022E  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4412  
                                      _MSDRetryAttempt 015F  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 53D0  
                                     __CFG_DSWDTEN$OFF 000000  
                                  _motor_arc_move$8784 00A7  
                                    _USBBusIsSuspended 016D  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 46EE  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 50B0  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3526  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 1FE6  
                    __end_of__get_available_root_entry 555E  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                      __size_of_i2c_eeprom_writeUint32 001A  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 014B  
                         __end_of_USBConfigureEndpoint 36E2  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler E0E2  
                                  __flash_partial_read 3D0C  
                                    USBStallEndpoint@p 0066  
                                  __size_of_fat_format 0216  
                                        _MSDHostNoData 015C  
                                 ??__root_is_available 008F  
                    __end_of_USBCtrlEPAllowStatusStage 2908  
                         ?__encoder_next_arc_step_size 0060  
                              ??_i2c_eeprom_readUint32 007D  
                             __end_of_USBCtrlEPService 33F4  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 038E  
                                            __i2c_read 35BA  
                                            __i2c_send 5924  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 5942  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 574C  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 0157  
                                      _configFile_name 02C8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F5BA  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 5746  
                          _motor_decrease_manual_speed 5724  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0151  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 3C92  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 12E2  
                          __size_of_flash_partial_read 0026  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 071A  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 17C8  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0289  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0040  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 17C8  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 00EC  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 0062  
                                   __end_of__i2c_start 5952  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 4C3C  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00C7  
                                            __add_item 1C5E  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 335A  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 57C2  
                          api_parse@receivedDataLength 00C6  
                                     api_parse@out_idx 00CD  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0052  
                                    __size_of__get_fat 0058  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0BA0  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 022A  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 56BC  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8180 0061  
         __end_of_i2c_display_program_custom_character 3B9C  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 3B20  
                                            __get_data 54E0  
                                            __get_date 58E2  
                                    _flash_sector_read 5600  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 4E54  
                                            __get_item FA6A  
                      __end_of_fat_read_from_file_fast EA1A  
                                       _motor_set_zero 30C2  
                          ?_motor_go_to_steps_position 00A7  
                                            __get_time 58D6  
                                            __get_root F75E  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 48A6  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 4D76  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 5208  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5702  
                                          __parse_item C8D4  
                  __end_of__divide_jump_size_decrement 3FB8  
                          __divide_jump_size_decrement 3F4A  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 4FAE  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0121  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                                            __read_fat 4746  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 52A6  
          __end_of__step_position_from_divide_position 1A90  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 19A4  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 10DA  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0158  
                                _fat_get_format_status 2D66  
                    fat_read_from_file_fast@start_byte 00A1  
            motor_go_to_steps_position@target_position 00A7  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                  ??_flash_sector_read 008B  
                               _i2c_eeprom_writeUint32 5810  
                                            _api_parse 0846  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 18B8  
                              __fill_buffer_get_status EE54  
                                   _APP_DeviceMSDTasks 5886  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 00A7  
                                             ?___fldiv 006E  
                                            __ptext100 3E6C  
                                            __ptext101 5032  
                                            __ptext110 EA1A  
                                            __ptext102 3F4A  
                                             ?___flneg 006E  
                                            __ptext111 5072  
                                            __ptext103 A330  
                                            __ptext200 53D0  
                                            __ptext120 5370  
                                            __ptext112 4F26  
                                            __ptext104 585C  
                                            __ptext201 4FAE  
                                            __ptext121 CF8E  
                                            __ptext113 3018  
                                            __ptext105 04AE  
                                            __ptext210 54B4  
                                            __ptext202 5768  
                                            __ptext130 BDA8  
                                            __ptext122 FE56  
                                            __ptext114 4F6A  
                                            __ptext106 47F6  
                                            __ptext211 32BA  
                                            __ptext203 335A  
                                            __ptext131 D5EA  
                                            __ptext123 53A0  
                                            __ptext115 4A52  
                                            __ptext107 4EE2  
                                            __ptext220 58B8  
                                            __ptext212 071A  
                                            __ptext204 44D0  
                                            __ptext140 0A8A  
                                            __ptext132 5974  
                                            __ptext124 530E  
                                            __ptext116 2E14  
                                            __ptext108 1E26  
                                            __ptext221 0CAE  
                                            __ptext213 DE66  
                                            __ptext205 3772  
                                            __ptext141 0970  
                                            __ptext133 523E  
                                            __ptext125 45E0  
                                            __ptext117 2776  
                                            __ptext109 0BA0  
                                            __ptext230 0DBC  
                                            __ptext222 4350  
                                            __ptext214 3890  
                                            __ptext206 15DA  
                                            __ptext150 52A6  
                                            __ptext142 0ECA  
                                            __ptext134 4C3C  
                                            __ptext126 5886  
                                            __ptext118 4DC2  
                                            __ptext231 2844  
                                            __ptext223 582A  
                                            __ptext215 4AA6  
                                            __ptext207 33F4  
                                            __ptext151 348E  
                                            __ptext143 428C  
                                            __ptext135 4AFA  
                                            __ptext127 E356  
                                            __ptext119 F22E  
                                            __ptext232 2908  
                                            __ptext224 5978  
                                            __ptext216 2A8C  
                                            __ptext208 2358  
                                            __ptext160 43B2  
                                            __ptext152 29CC  
                                            __ptext144 5272  
                                            __ptext136 36E2  
                                            __ptext128 05E8  
                                            __ptext233 2506  
                                            __ptext225 52DA  
                                            __ptext217 2430  
                                            __ptext209 21A2  
                                            __ptext161 F40C  
                                            __ptext153 58EE  
                                            __ptext145 5600  
                                            __ptext137 463A  
                                            __ptext129 422A  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext234 0000  
                                            __ptext226 11E0  
                                            __ptext218 4954  
                                            __ptext170 42EE  
                                            __ptext162 2B48  
                                            __ptext154 5872  
                                            __ptext146 3D0C  
                                            __ptext138 3B9C  
                                            __ptext227 50B0  
                                            __ptext219 10DA  
                                            __ptext171 399A  
                                            __ptext163 542E  
                                            __ptext155 5746  
                                            __ptext147 56BC  
                                            __ptext139 F044  
                                            __ptext228 364E  
                                            __ptext180 022E  
                                            __ptext172 4C8C  
                                            __ptext164 0846  
                                            __ptext156 592E  
                                            __ptext148 484E  
                                            __ptext229 4412  
                                            __ptext181 20C4  
                                            __ptext173 5938  
                                            __ptext165 F8F6  
                                            __ptext157 316C  
                                            __ptext149 4694  
                                            __ptext190 3A1E  
                                            __ptext182 CC3C  
                                            __ptext174 FD08  
                                            __ptext166 4E9C  
                                            __ptext158 1F08  
                                            __ptext191 4E54  
                                            __ptext183 DBAC  
                                            __ptext175 2EC2  
                                            __ptext167 30C2  
                                            __ptext159 EE54  
                                            __ptext192 564E  
                                            __ptext184 0FD4  
                                            __ptext176 58FA  
                                            __ptext168 D2CA  
                                            __ptext193 48A6  
                                            __ptext177 C546  
                                            __ptext169 596A  
                                            __ptext194 5952  
                                            __ptext186 5126  
                                            __ptext178 1D42  
                                            __ptext195 595A  
                                            __ptext187 16D4  
                                            __ptext179 1FE6  
                                            __ptext196 5962  
                                            __ptext188 B7FC  
                                            __ptext197 FFA2  
                                            __ptext189 5810  
                                            __ptext198 00E8  
                                            __ptext199 51D0  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 5160  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00AB  
                                            _idle_rate 01C0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 1F08  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 0FD4  
                    __size_of_motor_steps_from_degrees 00E4  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 4EE2  
                  __end_of__divide_jump_size_increment 5072  
                          __divide_jump_size_increment 5032  
                                    ??_display_prepare 00BC  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 596A  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F8F6  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 56E0  
                                        _fat_find_file 1A90  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2C00  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 4472  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00CD  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 5628  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0139  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 316C  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5938  
                                        _MSDWriteState 0160  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 4DC2  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_data 0060  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F75E  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0136  
                                           ?__get_time 0060  
                                           ?__get_root 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0133  
                                       __display_start 2CB4  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D8D6  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 545C  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2506  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003C  
                           configFile_read@item_string 01CB  
                                          _encoder_run 16D4  
                             __fat_offset_from_cluster 57DC  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                             i2u984_48 0D44  
                                             i2u984_49 0D58  
                                           ?_api_parse 00C4  
                                             i2u986_48 0D6A  
                                             i2u986_49 0D80  
                                             i2u988_44 0D9E  
                                             i2u988_45 0D98  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks E356  
                                            _motor_isr B7FC  
                           _USBDeferINDataStagePackets 0166  
                                         ??_fat_format 0084  
                                 _active_configuration 0159  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F5BA  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F40C  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 5962  
                                 __end_ofi2__i2c_write 4E9C  
                                 _USBConfigureEndpoint 364E  
                                         ??__motor_run 0095  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 348E  
                                            _spi_tx_tx 36E2  
                          __size_ofi2__i2c_eeprom_busy 0026  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 0149  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 5934  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 2CB4  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 016E  
                    __end_of_ExternalFlash_MediaDetect 5938  
                                             i2_memcpy 44D0  
                                             i2_memset 54B4  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2C00  
                                          __write_root 4D2A  
                                   ?_SYS_InterruptHigh 0001  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 4E0C  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 4FF2  
                      motor_schedule_command@direction 00A6  
                             __sector_from_file_number 5340  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00BF  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 2D66  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 353A  
                                            copy_data1 355A  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 2280  
                                   __end_of_fat_format EE54  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 57A6  
                                  ??_SYS_InterruptHigh 0044  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0161  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run C8D4  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5910  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 0372  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FD08  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 58D6  
                                       _TransferLength 0145  
                                           ?_motor_isr 0001  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2B48  
                                      api_parse@in_idx 00CE  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 5272  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 00A7  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 4162  
                                      _MSDWriteHandler D5EA  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 015B  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 479E  
                                             __get_fat 46EE  
                                             __get_fbr E0E2  
                                             __get_mbr 25D8  
                                          ??__add_item 008C  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00AD  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5886  
                           _ExternalFlash_CapacityRead 5872  
                                             ___xxtofl 022E  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5898  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5588  
                                             __ptext11 58C8  
                                             __ptext20 E0E2  
                                             __ptext12 4FF2  
                                             __ptext21 46EE  
                                             __ptext13 5160  
                                             __ptext30 550A  
                                             __ptext22 54E0  
                                             __ptext14 3EDC  
                                             __ptext31 4B9C  
                                             __ptext23 5674  
                                             __ptext15 5898  
                                             __ptext40 12E2  
                                             __ptext32 4BEC  
                                             __ptext24 5198  
                                             __ptext16 2D66  
                                             __ptext41 E5C0  
                                             __ptext33 4162  
                                             __ptext25 49AA  
                                             __ptext17 EC3E  
                                             __ptext50 55B0  
                                             __ptext42 0372  
                                             __ptext34 5942  
                                             __ptext26 56E0  
                                             __ptext18 F75E  
                                             __ptext51 58D6  
                                             __ptext43 4D2A  
                                             __ptext35 594A  
                                             __ptext27 5698  
                                             __ptext19 25D8  
                                             __ptext60 F5BA  
                                             __ptext52 58E2  
                                             __ptext44 3FB8  
                                             __ptext36 5924  
                                             __ptext28 50EC  
                                             __ptext61 1B78  
                                             __ptext53 5534  
                                             __ptext45 452C  
                                             __ptext37 2CB4  
                                             __ptext29 3B20  
                                             __ptext70 3C92  
                                             __ptext62 E7F4  
                                             __ptext54 1C5E  
                                             __ptext46 D8D6  
                                             __ptext38 2C00  
                                             __ptext71 4024  
                                             __ptext63 3214  
                                             __ptext55 49FE  
                                             __ptext47 5208  
                                             __ptext39 C194  
                                             __ptext80 14DE  
                                             __ptext72 5628  
                                             __ptext64 4E0C  
                                             __ptext56 13E0  
                                             __ptext48 26A8  
                                             __ptext81 2280  
                                             __ptext73 5340  
                                             __ptext65 4746  
                                             __ptext57 40FA  
                                             __ptext49 4472  
                                             __ptext90 AF94  
                                             __ptext82 5702  
                                             __ptext74 555E  
                                             __ptext66 57C2  
                                             __ptext58 3916  
                                             __ptext91 4D76  
                                             __ptext83 55D8  
                                             __ptext75 1A90  
                                             __ptext67 57DC  
                                             __ptext59 41C6  
                                             __ptext92 57F6  
                                             __ptext84 FA6A  
                                             __ptext76 3AA0  
                                             __ptext68 58A8  
                                             __ptext93 FBBA  
                                             __ptext85 479E  
                                             __ptext77 C8D4  
                                             __ptext69 3C18  
                                             __ptext94 2F6E  
                                             __ptext86 5488  
                                             __ptext78 4586  
                                             __ptext95 19A4  
                                             __ptext87 4090  
                                             __ptext79 5844  
                                             __ptext96 5724  
                                             __ptext88 5970  
                                             __ptext97 17C8  
                                             __ptext89 3D86  
                                             __ptext98 3DFC  
                                             __ptext99 5400  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 428C  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 422A  
                                      ___almod@divisor 0064  
                                          ??__get_data 0062  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                          ??__get_root 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 42EE  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4586  
                           __flash_copy_page_to_buffer 452C  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 3214  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 48A6  
                              __parse_set_manual_speed 399A  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3802  
                                        __size_of_main 008E  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                       __size_of_i2c_eeprom_readUint32 002C  
                                        __size_of_utoa 00AA  
                        __end_of_i2c_eeprom_readUint32 5488  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 4024  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FE56  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 5126  
                                  _USBCtrlTrfInHandler 2908  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00C9  
                               __end_of__i2c_wait_idle 41C6  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 596A  
                           __end_of_motor_items_in_cue 5906  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 595A  
                                             _spi_init 4FF2  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4412  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5588  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2844  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00B3  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 48FE  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa EC3E  
                motor_go_to_steps_position@distance_cw 00BB  
                                     i2_ResetSenseData 4350  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 00C3  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0169  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status F044  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00AE  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2A8C  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 29CC  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 591A  
                              __end_of_fat_create_file 04AE  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 5970  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3916  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3890  
              motor_schedule_command@distance_in_steps 00A0  
                                   __end_of_motor_init 57A6  
                                         ?__parse_item 007A  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 5272  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 4EE2  
                __end_of__flash_write_page_from_buffer 4694  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 463A  
                             ??_motor_schedule_command 00A6  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                              ?_i2c_eeprom_writeUint32 0026  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0234  
                           __end_of_flash_partial_read 564E  
                              __end_of_MSDWriteHandler D8D6  
                                            strncmp@s1 0060  
                                            strncmp@s2 0062  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 585C  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                                      _display_prepare A330  
                                          ??_motor_isr 002C  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 0DBC  
                                   _USBWakeFromSuspend 51D0  
                                ??__parse_command_long 00B9  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 56E0  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler DE66  
                                      _fat_modify_file E5C0  
                                  i2_SYSTEM_Initialize 4AA6  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2506  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2F6E  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0147  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BD  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 014D  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 016C  
                                       _display_update 5198  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 4C8C  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature F40C  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0A8A  
                                  ??_motor_divide_jump 00C3  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 595A  
                              motor_arc_move@direction 00AB  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 4E54  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0232  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                       __end_of_i2c_eeprom_writeUint32 582A  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit 0CAE  
                         _USBStatusStageTimeoutCounter 016A  
                                          i2__i2c_send 5962  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 5952  
                                     ??_motor_arc_move 00A7  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 3D86  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5970  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00C9  
                           __size_of__parse_jump_steps 014E  
                            __size_of_configFile_write 03B2  
                              __display_itoa_long@text 00B2  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 015A  
                                          _USBInHandle 0141  
                             _APP_DeviceCustomHIDTasks 316C  
                           __end_of_flash_sector_write 4C8C  
